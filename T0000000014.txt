OBJECT Table 14 Location
{
  OBJECT-PROPERTIES
  {
    Date=10/22/21;
    Time=[ 3:31:46 AM];
    Modified=Yes;
    Version List=NAVW111.00.00.28629,NAVNA11.00.00.28629,SE0.60.18,UBP3.00,3147,3197;
  }
  PROPERTIES
  {
    DataCaptionFields=Code,Name;
    OnDelete=VAR
               TransferRoute@1000 : Record 5742;
               WhseEmployee@1003 : Record 7301;
               WorkCenter@1004 : Record 99000754;
               StockkeepingUnit@1001 : Record 5700;
             BEGIN
               StockkeepingUnit.SETRANGE("Location Code",Code);
               IF NOT StockkeepingUnit.ISEMPTY THEN
                 ERROR(CannotDeleteLocSKUExistErr,Code);

               WMSCheckWarehouse;

               TransferRoute.SETRANGE("Transfer-from Code",Code);
               TransferRoute.DELETEALL;
               TransferRoute.RESET;
               TransferRoute.SETRANGE("Transfer-to Code",Code);
               TransferRoute.DELETEALL;

               WhseEmployee.SETRANGE("Location Code",Code);
               WhseEmployee.DELETEALL(TRUE);

               WorkCenter.SETRANGE("Location Code",Code);
               IF WorkCenter.FINDSET(TRUE) THEN
                 REPEAT
                   WorkCenter.VALIDATE("Location Code",'');
                   WorkCenter.MODIFY(TRUE);
                 UNTIL WorkCenter.NEXT = 0;

               CalendarManagement.DeleteCustomizedBaseCalendarData(CustomizedCalendarChange."Source Type"::Location,Code);
             END;

    OnRename=BEGIN
               CalendarManagement.RenameCustomizedBaseCalendarData(CustomizedCalendarChange."Source Type"::Location,Code,xRec.Code);
             END;

    CaptionML=[ENU=Location;
               ESM=Almac�n;
               FRC=Emplacement;
               ENC=Location];
    LookupPageID=Page15;
    DrillDownPageID=Page15;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              ESM=C�digo;
                                                              FRC=Code;
                                                              ENC=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              ESM=Nombre;
                                                              FRC=Nom;
                                                              ENC=Name] }
    { 130 ;   ;Default Bin Code    ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Code));
                                                   CaptionML=[ENU=Default Bin Code;
                                                              ESM=C�d. ubic. predeterminado;
                                                              FRC=Code de zone par d�faut;
                                                              ENC=Default Bin Code] }
    { 5700;   ;Name 2              ;Text50        ;CaptionML=[ENU=Name 2;
                                                              ESM=Nombre 2;
                                                              FRC=Nom 2;
                                                              ENC=Name 2] }
    { 5701;   ;Address             ;Text50        ;CaptionML=[ENU=Address;
                                                              ESM=Direcci�n;
                                                              FRC=Adresse;
                                                              ENC=Address] }
    { 5702;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              ESM=Colonia;
                                                              FRC=Adresse 2;
                                                              ENC=Address 2] }
    { 5703;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookupPostCode(City,"Post Code",County,"Country/Region Code");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=City;
                                                              ESM=Municipio/Ciudad;
                                                              FRC=Ville;
                                                              ENC=City] }
    { 5704;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No.;
                                                              ESM=N� tel�fono;
                                                              FRC=N� t�l�phone;
                                                              ENC=Phone No.] }
    { 5705;   ;Phone No. 2         ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No. 2;
                                                              ESM=N� tel�fono 2;
                                                              FRC=N� t�l�phone 2;
                                                              ENC=Phone No. 2] }
    { 5706;   ;Telex No.           ;Text30        ;CaptionML=[ENU=Telex No.;
                                                              ESM=N� t�lex;
                                                              FRC=N� t�lex;
                                                              ENC=Telex No.] }
    { 5707;   ;Fax No.             ;Text30        ;CaptionML=[ENU=Fax No.;
                                                              ESM=N� fax;
                                                              FRC=N� t�l�copieur;
                                                              ENC=Fax No.] }
    { 5713;   ;Contact             ;Text50        ;CaptionML=[ENU=Contact;
                                                              ESM=Contacto;
                                                              FRC=Contact;
                                                              ENC=Contact] }
    { 5714;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookupPostCode(City,"Post Code",County,"Country/Region Code");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=ZIP Code;
                                                              ESM=C.P.;
                                                              FRC=Code postal;
                                                              ENC=Postal/ZIP Code] }
    { 5715;   ;County              ;Text30        ;CaptionML=[ENU=State;
                                                              ESM=Provincia;
                                                              FRC=Comt�;
                                                              ENC=Province/State] }
    { 5718;   ;E-Mail              ;Text80        ;OnValidate=VAR
                                                                MailManagement@1000 : Codeunit 9520;
                                                              BEGIN
                                                                MailManagement.ValidateEmailAddressField("E-Mail");
                                                              END;

                                                   ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=Email;
                                                              ESM=Correo electr�nico;
                                                              FRC=Courriel;
                                                              ENC=Email] }
    { 5719;   ;Home Page           ;Text90        ;ExtendedDatatype=URL;
                                                   CaptionML=[ENU=Home Page;
                                                              ESM=P�gina principal;
                                                              FRC=Page d'accueil;
                                                              ENC=Home Page] }
    { 5720;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   OnValidate=BEGIN
                                                                PostCode.CheckClearPostCodeCityCounty(City,"Post Code",County,"Country/Region Code",xRec."Country/Region Code");
                                                              END;

                                                   CaptionML=[ENU=Country/Region Code;
                                                              ESM=C�d. pa�s/regi�n;
                                                              FRC=Code pays/r�gion;
                                                              ENC=Country/Region Code] }
    { 5724;   ;Use As In-Transit   ;Boolean       ;OnValidate=BEGIN
                                                                IF "Use As In-Transit" THEN BEGIN
                                                                  TESTFIELD("Require Put-away",FALSE);
                                                                  TESTFIELD("Require Pick",FALSE);
                                                                  TESTFIELD("Use Cross-Docking",FALSE);
                                                                  TESTFIELD("Require Receive",FALSE);
                                                                  TESTFIELD("Require Shipment",FALSE);
                                                                  TESTFIELD("Bin Mandatory",FALSE);
                                                                END;
                                                              END;

                                                   AccessByPermission=TableData 5740=R;
                                                   CaptionML=[ENU=Use As In-Transit;
                                                              ESM=Utiliz.como tr�nsito;
                                                              FRC=Magasin de transit;
                                                              ENC=Use As In-Transit] }
    { 5726;   ;Require Put-away    ;Boolean       ;OnValidate=VAR
                                                                WhseActivHeader@1000 : Record 5766;
                                                                WhseRcptHeader@1001 : Record 7316;
                                                              BEGIN
                                                                WhseRcptHeader.SETRANGE("Location Code",Code);
                                                                IF NOT WhseRcptHeader.ISEMPTY THEN
                                                                  ERROR(Text008,FIELDCAPTION("Require Put-away"),xRec."Require Put-away",WhseRcptHeader.TABLECAPTION);

                                                                IF NOT "Require Put-away" THEN BEGIN
                                                                  TESTFIELD("Directed Put-away and Pick",FALSE);
                                                                  WhseActivHeader.SETRANGE(Type,WhseActivHeader.Type::"Put-away");
                                                                  WhseActivHeader.SETRANGE("Location Code",Code);
                                                                  IF NOT WhseActivHeader.ISEMPTY THEN
                                                                    ERROR(Text008,FIELDCAPTION("Require Put-away"),TRUE,WhseActivHeader.TABLECAPTION);
                                                                  "Use Cross-Docking" := FALSE;
                                                                  "Cross-Dock Bin Code" := '';
                                                                END ELSE
                                                                  CreateInboundWhseRequest;
                                                              END;

                                                   AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Require Put-away;
                                                              ESM=Ubicaci�n requerida;
                                                              FRC=Rangement requis;
                                                              ENC=Require Put-away] }
    { 5727;   ;Require Pick        ;Boolean       ;OnValidate=VAR
                                                                WhseActivHeader@1000 : Record 5766;
                                                                WhseShptHeader@1001 : Record 7320;
                                                              BEGIN
                                                                WhseShptHeader.SETRANGE("Location Code",Code);
                                                                IF NOT WhseShptHeader.ISEMPTY THEN
                                                                  ERROR(Text008,FIELDCAPTION("Require Pick"),xRec."Require Pick",WhseShptHeader.TABLECAPTION);

                                                                IF NOT "Require Pick" THEN BEGIN
                                                                  TESTFIELD("Directed Put-away and Pick",FALSE);
                                                                  WhseActivHeader.SETRANGE(Type,WhseActivHeader.Type::Pick);
                                                                  WhseActivHeader.SETRANGE("Location Code",Code);
                                                                  IF NOT WhseActivHeader.ISEMPTY THEN
                                                                    ERROR(Text008,FIELDCAPTION("Require Pick"),TRUE,WhseActivHeader.TABLECAPTION);
                                                                  "Use Cross-Docking" := FALSE;
                                                                  "Cross-Dock Bin Code" := '';
                                                                  "Pick According to FEFO" := FALSE;
                                                                END;
                                                              END;

                                                   AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Require Pick;
                                                              ESM=Picking requerido;
                                                              FRC=Pr�l�vement requis;
                                                              ENC=Require Pick] }
    { 5728;   ;Cross-Dock Due Date Calc.;DateFormula;
                                                   AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Cross-Dock Due Date Calc.;
                                                              ESM=Calcular fecha vto. tr�ns.directo;
                                                              FRC=Calc. date d'�ch�ance transbordement;
                                                              ENC=Cross-Dock Due Date Calc.] }
    { 5729;   ;Use Cross-Docking   ;Boolean       ;OnValidate=BEGIN
                                                                IF "Use Cross-Docking" THEN BEGIN
                                                                  TESTFIELD("Require Receive");
                                                                  TESTFIELD("Require Shipment");
                                                                  TESTFIELD("Require Put-away");
                                                                  TESTFIELD("Require Pick");
                                                                END ELSE
                                                                  "Cross-Dock Bin Code" := '';
                                                              END;

                                                   AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Use Cross-Docking;
                                                              ESM=Utilizar tr�nsito directo;
                                                              FRC=Utiliser transbordement;
                                                              ENC=Use Cross-Docking] }
    { 5730;   ;Require Receive     ;Boolean       ;OnValidate=VAR
                                                                WhseRcptHeader@1000 : Record 7316;
                                                                WhseActivHeader@1001 : Record 5766;
                                                              BEGIN
                                                                IF NOT "Require Receive" THEN BEGIN
                                                                  TESTFIELD("Directed Put-away and Pick",FALSE);
                                                                  WhseRcptHeader.SETRANGE("Location Code",Code);
                                                                  IF NOT WhseRcptHeader.ISEMPTY THEN
                                                                    ERROR(Text008,FIELDCAPTION("Require Receive"),TRUE,WhseRcptHeader.TABLECAPTION);
                                                                  "Receipt Bin Code" := '';
                                                                  "Use Cross-Docking" := FALSE;
                                                                  "Cross-Dock Bin Code" := '';
                                                                END ELSE BEGIN
                                                                  WhseActivHeader.SETRANGE(Type,WhseActivHeader.Type::"Put-away");
                                                                  WhseActivHeader.SETRANGE("Location Code",Code);
                                                                  IF NOT WhseActivHeader.ISEMPTY THEN
                                                                    ERROR(Text008,FIELDCAPTION("Require Receive"),FALSE,WhseActivHeader.TABLECAPTION);

                                                                  CreateInboundWhseRequest;
                                                                END;
                                                              END;

                                                   AccessByPermission=TableData 7316=R;
                                                   CaptionML=[ENU=Require Receive;
                                                              ESM=Recepci�n requerida;
                                                              FRC=R�ception requise;
                                                              ENC=Require Receive] }
    { 5731;   ;Require Shipment    ;Boolean       ;OnValidate=VAR
                                                                WhseShptHeader@1000 : Record 7320;
                                                                WhseActivHeader@1001 : Record 5766;
                                                              BEGIN
                                                                IF NOT "Require Shipment" THEN BEGIN
                                                                  TESTFIELD("Directed Put-away and Pick",FALSE);
                                                                  WhseShptHeader.SETRANGE("Location Code",Code);
                                                                  IF NOT WhseShptHeader.ISEMPTY THEN
                                                                    ERROR(Text008,FIELDCAPTION("Require Shipment"),TRUE,WhseShptHeader.TABLECAPTION);
                                                                  "Shipment Bin Code" := '';
                                                                  "Use Cross-Docking" := FALSE;
                                                                  "Cross-Dock Bin Code" := '';
                                                                END ELSE BEGIN
                                                                  WhseActivHeader.SETRANGE(Type,WhseActivHeader.Type::Pick);
                                                                  WhseActivHeader.SETRANGE("Location Code",Code);
                                                                  IF NOT WhseActivHeader.ISEMPTY THEN
                                                                    ERROR(Text008,FIELDCAPTION("Require Shipment"),FALSE,WhseActivHeader.TABLECAPTION);
                                                                END;
                                                              END;

                                                   AccessByPermission=TableData 7320=R;
                                                   CaptionML=[ENU=Require Shipment;
                                                              ESM=Env�o requerido;
                                                              FRC=Livraison requise;
                                                              ENC=Require Shipment] }
    { 5732;   ;Bin Mandatory       ;Boolean       ;OnValidate=VAR
                                                                ItemLedgEntry@1004 : Record 32;
                                                                WhseEntry@1000 : Record 7312;
                                                                WhseActivHeader@1001 : Record 5766;
                                                                WhseShptHeader@1002 : Record 7320;
                                                                WhseRcptHeader@1003 : Record 7316;
                                                                WhseIntegrationMgt@1006 : Codeunit 7317;
                                                                Window@1005 : Dialog;
                                                              BEGIN
                                                                IF "Bin Mandatory" AND NOT xRec."Bin Mandatory" THEN BEGIN
                                                                  Window.OPEN(Text010);
                                                                  ItemLedgEntry.SETRANGE(Open,TRUE);
                                                                  ItemLedgEntry.SETRANGE("Location Code",Code);
                                                                  IF NOT ItemLedgEntry.ISEMPTY THEN
                                                                    ERROR(Text009,FIELDCAPTION("Bin Mandatory"));

                                                                  "Default Bin Selection" := "Default Bin Selection"::"Fixed Bin";
                                                                END;

                                                                WhseActivHeader.SETRANGE("Location Code",Code);
                                                                IF NOT WhseActivHeader.ISEMPTY THEN
                                                                  ERROR(Text008,FIELDCAPTION("Bin Mandatory"),xRec."Bin Mandatory",WhseActivHeader.TABLECAPTION);

                                                                WhseRcptHeader.SETCURRENTKEY("Location Code");
                                                                WhseRcptHeader.SETRANGE("Location Code",Code);
                                                                IF NOT WhseRcptHeader.ISEMPTY THEN
                                                                  ERROR(Text008,FIELDCAPTION("Bin Mandatory"),xRec."Bin Mandatory",WhseRcptHeader.TABLECAPTION);

                                                                WhseShptHeader.SETCURRENTKEY("Location Code");
                                                                WhseShptHeader.SETRANGE("Location Code",Code);
                                                                IF NOT WhseShptHeader.ISEMPTY THEN
                                                                  ERROR(Text008,FIELDCAPTION("Bin Mandatory"),xRec."Bin Mandatory",WhseShptHeader.TABLECAPTION);

                                                                IF NOT "Bin Mandatory" AND xRec."Bin Mandatory" THEN BEGIN
                                                                  WhseEntry.SETRANGE("Location Code",Code);
                                                                  WhseEntry.CALCSUMS("Qty. (Base)");
                                                                  IF WhseEntry."Qty. (Base)" <> 0 THEN
                                                                    ERROR(Text002,FIELDCAPTION("Bin Mandatory"));
                                                                END;

                                                                IF NOT "Bin Mandatory" THEN BEGIN
                                                                  "Open Shop Floor Bin Code" := '';
                                                                  "To-Production Bin Code" := '';
                                                                  "From-Production Bin Code" := '';
                                                                  "Adjustment Bin Code" := '';
                                                                  "Receipt Bin Code" := '';
                                                                  "Shipment Bin Code" := '';
                                                                  "Cross-Dock Bin Code" := '';
                                                                  "To-Assembly Bin Code" := '';
                                                                  "From-Assembly Bin Code" := '';
                                                                  WhseIntegrationMgt.CheckLocationOnManufBins(Rec);
                                                                END;
                                                              END;

                                                   AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Bin Mandatory;
                                                              ESM=Ubicac. obligatoria;
                                                              FRC=Zone obligatoire;
                                                              ENC=Bin Mandatory] }
    { 5733;   ;Directed Put-away and Pick;Boolean ;OnValidate=VAR
                                                                WhseActivHeader@1002 : Record 5766;
                                                                WhseShptHeader@1001 : Record 7320;
                                                                WhseRcptHeader@1000 : Record 7316;
                                                              BEGIN
                                                                WhseActivHeader.SETRANGE("Location Code",Code);
                                                                IF NOT WhseActivHeader.ISEMPTY THEN
                                                                  ERROR(Text014,FIELDCAPTION("Directed Put-away and Pick"),WhseActivHeader.TABLECAPTION);

                                                                WhseRcptHeader.SETCURRENTKEY("Location Code");
                                                                WhseRcptHeader.SETRANGE("Location Code",Code);
                                                                IF NOT WhseRcptHeader.ISEMPTY THEN
                                                                  ERROR(Text014,FIELDCAPTION("Directed Put-away and Pick"),WhseRcptHeader.TABLECAPTION);

                                                                WhseShptHeader.SETCURRENTKEY("Location Code");
                                                                WhseShptHeader.SETRANGE("Location Code",Code);
                                                                IF NOT WhseShptHeader.ISEMPTY THEN
                                                                  ERROR(Text014,FIELDCAPTION("Directed Put-away and Pick"),WhseShptHeader.TABLECAPTION);

                                                                IF "Directed Put-away and Pick" THEN BEGIN
                                                                  TESTFIELD("Use As In-Transit",FALSE);
                                                                  TESTFIELD("Bin Mandatory");
                                                                  VALIDATE("Require Receive",TRUE);
                                                                  VALIDATE("Require Shipment",TRUE);
                                                                  VALIDATE("Require Put-away",TRUE);
                                                                  VALIDATE("Require Pick",TRUE);
                                                                  VALIDATE("Use Cross-Docking",TRUE);
                                                                  "Default Bin Selection" := "Default Bin Selection"::" ";
                                                                END ELSE
                                                                  VALIDATE("Adjustment Bin Code",'');

                                                                IF (NOT "Directed Put-away and Pick") AND xRec."Directed Put-away and Pick" THEN BEGIN
                                                                  "Default Bin Selection" := "Default Bin Selection"::"Fixed Bin";
                                                                  "Use Put-away Worksheet" := FALSE;
                                                                  VALIDATE("Use Cross-Docking",FALSE);
                                                                END;
                                                              END;

                                                   AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Directed Put-away and Pick;
                                                              ESM=Ubicac. y pick. directo;
                                                              FRC=Classement et pr�l�v. dirig�s;
                                                              ENC=Directed Put-away and Pick] }
    { 5734;   ;Default Bin Selection;Option       ;OnValidate=BEGIN
                                                                IF ("Default Bin Selection" <> xRec."Default Bin Selection") AND ("Default Bin Selection" = "Default Bin Selection"::" ") THEN
                                                                  TESTFIELD("Directed Put-away and Pick");
                                                              END;

                                                   AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Default Bin Selection;
                                                              ESM=Selecci�n ubicaci�n gen�rica;
                                                              FRC=S�lection zone par d�f.;
                                                              ENC=Default Bin Selection];
                                                   OptionCaptionML=[ENU=" ,Fixed Bin,Last-Used Bin";
                                                                    ESM=" ,Ubic. fija,�ltima ubic. utiliz.";
                                                                    FRC=" ,Zone fixe,Derni�re zone utilis�e";
                                                                    ENC=" ,Fixed Bin,Last-Used Bin"];
                                                   OptionString=[ ,Fixed Bin,Last-Used Bin] }
    { 5790;   ;Outbound Whse. Handling Time;DateFormula;
                                                   AccessByPermission=TableData 14=R;
                                                   CaptionML=[ENU=Outbound Whse. Handling Time;
                                                              ESM=Tiempo manip. alm. salida;
                                                              FRC=D�lai d�senlogement;
                                                              ENC=Outbound Whse. Handling Time] }
    { 5791;   ;Inbound Whse. Handling Time;DateFormula;
                                                   AccessByPermission=TableData 14=R;
                                                   CaptionML=[ENU=Inbound Whse. Handling Time;
                                                              ESM=Tiempo manip. alm. entrada;
                                                              FRC=D�lai enlogement;
                                                              ENC=Inbound Whse. Handling Time] }
    { 7305;   ;Put-away Template Code;Code10      ;TableRelation="Put-away Template Header";
                                                   CaptionML=[ENU=Put-away Template Code;
                                                              ESM=C�d. plantilla ubicar;
                                                              FRC=Code mod�le rangement;
                                                              ENC=Put-away Template Code] }
    { 7306;   ;Use Put-away Worksheet;Boolean     ;AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Use Put-away Worksheet;
                                                              ESM=Utilizar hoj. trab. ubicaci�n;
                                                              FRC=Utiliser feuille rangement;
                                                              ENC=Use Put-away Worksheet] }
    { 7307;   ;Pick According to FEFO;Boolean     ;AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Pick According to FEFO;
                                                              ESM=Picking seg�n FEFO (Primero en caducar, primero en salir);
                                                              FRC=Pr�lever selon FEFO;
                                                              ENC=Pick According to FEFO] }
    { 7308;   ;Allow Breakbulk     ;Boolean       ;AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Allow Breakbulk;
                                                              ESM=Permite divisi�n bulto;
                                                              FRC=Autoriser d�conditionnement;
                                                              ENC=Allow Breakbulk] }
    { 7309;   ;Bin Capacity Policy ;Option        ;AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Bin Capacity Policy;
                                                              ESM=Directiva capacidad ubicaci�n;
                                                              FRC=Politique capacit� zone;
                                                              ENC=Bin Capacity Policy];
                                                   OptionCaptionML=[ENU=Never Check Capacity,Allow More Than Max. Capacity,Prohibit More Than Max. Cap.;
                                                                    ESM=Nunca comprob. capacidad,Permite m�s que capac. m�x.,Prohibido m�s que cap. m�x..;
                                                                    FRC=Ne pas v�rifier la capacit�,Autoriser d�passement capacit� max.,Interdire d�passement capacit� max.;
                                                                    ENC=Never Check Capacity,Allow More Than Max. Capacity,Prohibit More Than Max. Cap.];
                                                   OptionString=Never Check Capacity,Allow More Than Max. Capacity,Prohibit More Than Max. Cap. }
    { 7313;   ;Open Shop Floor Bin Code;Code20    ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Code));
                                                   OnValidate=VAR
                                                                WhseIntegrationMgt@1000 : Codeunit 7317;
                                                              BEGIN
                                                                WhseIntegrationMgt.CheckBinCode(Code,
                                                                  "Open Shop Floor Bin Code",
                                                                  FIELDCAPTION("Open Shop Floor Bin Code"),
                                                                  DATABASE::Location,Code);
                                                              END;

                                                   CaptionML=[ENU=Open Shop Floor Bin Code;
                                                              ESM=Ubic. abierta planta;
                                                              FRC=Code de zone atelier ouvert;
                                                              ENC=Open Shop Floor Bin Code] }
    { 7314;   ;To-Production Bin Code;Code20      ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Code));
                                                   OnValidate=VAR
                                                                WhseIntegrationMgt@1000 : Codeunit 7317;
                                                              BEGIN
                                                                WhseIntegrationMgt.CheckBinCode(Code,
                                                                  "To-Production Bin Code",
                                                                  FIELDCAPTION("To-Production Bin Code"),
                                                                  DATABASE::Location,Code);
                                                              END;

                                                   CaptionML=[ENU=To-Production Bin Code;
                                                              ESM=C�d. ubic. para producci�n;
                                                              FRC=Code empl. des consommations;
                                                              ENC=To-Production Bin Code] }
    { 7315;   ;From-Production Bin Code;Code20    ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Code));
                                                   OnValidate=VAR
                                                                WhseIntegrationMgt@1000 : Codeunit 7317;
                                                              BEGIN
                                                                WhseIntegrationMgt.CheckBinCode(Code,
                                                                  "From-Production Bin Code",
                                                                  FIELDCAPTION("From-Production Bin Code"),
                                                                  DATABASE::Location,Code);
                                                              END;

                                                   CaptionML=[ENU=From-Production Bin Code;
                                                              ESM=C�d. ubic. desde producci�n;
                                                              FRC=Code empl. apr�s production;
                                                              ENC=From-Production Bin Code] }
    { 7317;   ;Adjustment Bin Code ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Code));
                                                   OnValidate=BEGIN
                                                                IF "Adjustment Bin Code" <> xRec."Adjustment Bin Code" THEN BEGIN
                                                                  IF "Adjustment Bin Code" = '' THEN
                                                                    CheckEmptyBin(
                                                                      xRec."Adjustment Bin Code",FIELDCAPTION("Adjustment Bin Code"))
                                                                  ELSE
                                                                    CheckEmptyBin(
                                                                      "Adjustment Bin Code",FIELDCAPTION("Adjustment Bin Code"));

                                                                  CheckWhseAdjmtJnl;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Adjustment Bin Code;
                                                              ESM=C�d. ubicaci�n ajuste;
                                                              FRC=Code de zone ajustement;
                                                              ENC=Adjustment Bin Code] }
    { 7319;   ;Always Create Put-away Line;Boolean;AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Always Create Put-away Line;
                                                              ESM=Crea siempre l�n. ubicaci�n;
                                                              FRC=Toujours cr�er ligne rangement;
                                                              ENC=Always Create Put-away Line] }
    { 7320;   ;Always Create Pick Line;Boolean    ;AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Always Create Pick Line;
                                                              ESM=Crea siempre l�n. picking;
                                                              FRC=Toujours cr�er ligne pr�l�v.;
                                                              ENC=Always Create Pick Line] }
    { 7321;   ;Special Equipment   ;Option        ;AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Special Equipment;
                                                              ESM=Equipo especial;
                                                              FRC=�quipement sp�cial;
                                                              ENC=Special Equipment];
                                                   OptionCaptionML=[ENU=" ,According to Bin,According to SKU/Item";
                                                                    ESM=" ,Seg�n ubicaci�n,Seg�n Unidad almac./producto";
                                                                    FRC=" ,Selon zone,Selon point de stock/article";
                                                                    ENC=" ,According to Bin,According to SKU/Item"];
                                                   OptionString=[ ,According to Bin,According to SKU/Item] }
    { 7323;   ;Receipt Bin Code    ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Code));
                                                   CaptionML=[ENU=Receipt Bin Code;
                                                              ESM=C�d. ubicaci�n recepci�n;
                                                              FRC=Code de zone r�ception;
                                                              ENC=Receipt Bin Code] }
    { 7325;   ;Shipment Bin Code   ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Code));
                                                   CaptionML=[ENU=Shipment Bin Code;
                                                              ESM=C�d. ubicaci�n env�o;
                                                              FRC=Code de zone livraison;
                                                              ENC=Shipment Bin Code] }
    { 7326;   ;Cross-Dock Bin Code ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Code));
                                                   CaptionML=[ENU=Cross-Dock Bin Code;
                                                              ESM=C�d. ubicac. tr�nsito directo;
                                                              FRC=Code de zone transbordement;
                                                              ENC=Cross-Dock Bin Code] }
    { 7330;   ;To-Assembly Bin Code;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Code));
                                                   OnValidate=VAR
                                                                WhseIntegrationMgt@1000 : Codeunit 7317;
                                                              BEGIN
                                                                WhseIntegrationMgt.CheckBinCode(Code,
                                                                  "To-Assembly Bin Code",
                                                                  FIELDCAPTION("To-Assembly Bin Code"),
                                                                  DATABASE::Location,Code);
                                                              END;

                                                   CaptionML=[ENU=To-Assembly Bin Code;
                                                              ESM=C�d. ubic. para ensamblado;
                                                              FRC=Code empl. vers assemblage;
                                                              ENC=To-Assembly Bin Code] }
    { 7331;   ;From-Assembly Bin Code;Code20      ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Code));
                                                   OnValidate=VAR
                                                                WhseIntegrationMgt@1000 : Codeunit 7317;
                                                              BEGIN
                                                                WhseIntegrationMgt.CheckBinCode(Code,
                                                                  "From-Assembly Bin Code",
                                                                  FIELDCAPTION("From-Assembly Bin Code"),
                                                                  DATABASE::Location,Code);
                                                              END;

                                                   CaptionML=[ENU=From-Assembly Bin Code;
                                                              ESM=C�d. ubic. desde ensamblado;
                                                              FRC=Code empl. depuis assemblage;
                                                              ENC=From-Assembly Bin Code] }
    { 7332;   ;Asm.-to-Order Shpt. Bin Code;Code20;TableRelation=Bin.Code WHERE (Location Code=FIELD(Code));
                                                   OnValidate=VAR
                                                                WhseIntegrationMgt@1000 : Codeunit 7317;
                                                              BEGIN
                                                                WhseIntegrationMgt.CheckBinCode(Code,
                                                                  "Asm.-to-Order Shpt. Bin Code",
                                                                  FIELDCAPTION("Asm.-to-Order Shpt. Bin Code"),
                                                                  DATABASE::Location,Code);
                                                              END;

                                                   CaptionML=[ENU=Asm.-to-Order Shpt. Bin Code;
                                                              ESM=C�d. ubic. ens.contra-pedido;
                                                              FRC=Code empl. exp. ass. pr comm.;
                                                              ENC=Asm.-to-Order Shpt. Bin Code] }
    { 7600;   ;Base Calendar Code  ;Code10        ;TableRelation="Base Calendar";
                                                   CaptionML=[ENU=Base Calendar Code;
                                                              ESM=C�digo calendario base;
                                                              FRC=Code calendrier principal;
                                                              ENC=Base Calendar Code] }
    { 7700;   ;Use ADCS            ;Boolean       ;AccessByPermission=TableData 7700=R;
                                                   CaptionML=[ENU=Use ADCS;
                                                              ESM=Utilizar ADCS;
                                                              FRC=Saisie automatis�e;
                                                              ENC=Use ADCS] }
    { 10010;  ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   OnValidate=BEGIN
                                                                IF "Do Not Use For Tax Calculation" THEN
                                                                  "Tax Area Code" := '';
                                                              END;

                                                   CaptionML=[ENU=Tax Area Code;
                                                              ESM=C�d. �rea impuesto;
                                                              FRC=Code de r�gion fiscale;
                                                              ENC=Tax Area Code] }
    { 10015;  ;Tax Exemption No.   ;Text30        ;OnValidate=BEGIN
                                                                IF "Do Not Use For Tax Calculation" THEN
                                                                  "Tax Exemption No." := '';
                                                              END;

                                                   CaptionML=[ENU=Tax Exemption No.;
                                                              ESM=N� exenci�n fisc.;
                                                              FRC=N� d'exon�ration fiscale;
                                                              ENC=Tax Exemption No.] }
    { 10016;  ;Do Not Use For Tax Calculation;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Do Not Use For Tax Calculation" THEN BEGIN
                                                                  "Tax Area Code" := '';
                                                                  "Tax Exemption No." := '';
                                                                  "Provincial Tax Area Code" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Do Not Use For Tax Calculation;
                                                              ESM=No usar para c�lculo de impuestos;
                                                              FRC=Ne pas utiliser pour le calcul des taxes;
                                                              ENC=Do Not Use For Tax Calculation] }
    { 10017;  ;Provincial Tax Area Code;Code20    ;TableRelation="Tax Area" WHERE (Country/Region=CONST(CA));
                                                   OnValidate=BEGIN
                                                                IF "Do Not Use For Tax Calculation" THEN
                                                                  "Provincial Tax Area Code" := '';
                                                              END;

                                                   CaptionML=[ENU=Provincial Tax Area Code;
                                                              ESM=C�digo �rea impuesto provincial;
                                                              FRC=Code provincial de r�gion fiscale;
                                                              ENC=Provincial Tax Area Code] }
    { 50000;  ;Default Purchasing Code;Code10     ;TableRelation=Purchasing;
                                                   Description=TPZ1047 }
    { 50001;  ;Enable E-Receive    ;Boolean       ;Description=TPZ1436 }
    { 50002;  ;Enable DMS          ;Boolean       ;Description=TPZ1772 }
    { 50003;  ;Incoming Inspection Bin Code;Code20;TableRelation=Bin.Code WHERE (Location Code=FIELD(Code));
                                                   CaptionML=ENU=Incoming Inspection Bin Code;
                                                   Description=TPZ1813 }
    { 50010;  ;Post from Whse. with Job Q.;Boolean;CaptionML=ENU=Post from Warehouse with Job Queue;
                                                   Description=TPZ1559 }
    { 50011;  ;Job Q. Prio. for P. from Whse.;Integer;
                                                   CaptionML=ENU=Job Queue Priority for Post from Warehouse;
                                                   Description=TPZ1559 }
    { 50012;  ;Post from Whse. Start Time;Time    ;CaptionML=ENU=Post from Warehouse Start Time;
                                                   Description=TPZ1559 }
    { 50013;  ;Bulk Pick Ranking (>=);Integer     ;Description=RS1.00 }
    { 50014;  ;Buld Pick Ranking Source Doc.;Integer;
                                                   DataClassification=ToBeClassified;
                                                   Description=RS1.00 }
    { 50020;  ;Auto Pick           ;Boolean       ;DataClassification=ToBeClassified;
                                                   Description=TPZ2701 }
    { 50021;  ;Phys. Inv. Journal Batch;Code10    ;TableRelation="Item Journal Batch".Name WHERE (Journal Template Name=CONST(PHYS. INVE));
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Phys. Inv. Journal Batch;
                                                              ESM=Phys. Inv. Diario de lotes;
                                                              FRC=Lot de Journal d'Inv. Phys.;
                                                              ENC=Phys. Inv. Journal Batch];
                                                   Description=TPZ2808 }
    { 50022;  ;Whse. Phys. Inv. Jnl. Batch;Code10 ;TableRelation="Warehouse Journal Batch".Name WHERE (Journal Template Name=CONST(PHYSICAL I));
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Whse. Phys. Inv. Jnl. Batch;
                                                              ESM=Dep�sito Phys. Inv. Diario de lotes;
                                                              FRC=Entrep�t de Lot de Journal d'Inv. Phys.;
                                                              ENC=Whse. Phys. Inv. Jnl. Batch];
                                                   Description=TPZ2808 }
    { 50023;  ;Whse. Phys. Inv. Jnl. Batch To;Code10;
                                                   TableRelation="Warehouse Journal Batch".Name WHERE (Journal Template Name=CONST(PHYSICAL I));
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Whse. Phys. Inv. Jnl. Batch To;
                                                              ESM=Reclasif. Diario de lotes;
                                                              FRC=Reclass. Journal lot;
                                                              ENC=Reclass. Journal Batch];
                                                   Description=TPZ2808 }
    { 50025;  ;Whse. Item Jnl. Batch;Code10       ;TableRelation="Warehouse Journal Batch".Name WHERE (Journal Template Name=CONST(ITEM));
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Whse. Phys. Inv. Jnl. Batch To;
                                                              ESM=Reclasif. Diario de lotes;
                                                              FRC=Reclass. Journal lot;
                                                              ENC=Reclass. Journal Batch];
                                                   Description=TPZ2808 }
    { 50026;  ;Auto LP Generate    ;Boolean       ;DataClassification=ToBeClassified;
                                                   Description=TPZ2894 }
    { 50027;  ;Auto LP Less Than Lines;Integer    ;DataClassification=ToBeClassified;
                                                   Description=TPZ2894 }
    { 50030;  ;Pick Complete Quantity;Boolean     ;DataClassification=ToBeClassified;
                                                   Description=TPZ3197 }
    { 50031;  ;Enable Bin Ranking for Picks;Boolean;
                                                   DataClassification=ToBeClassified;
                                                   Description=TPZ3147 }
    { 50032;  ;Print Address Label ;Boolean       ;DataClassification=ToBeClassified;
                                                   Description=TPZ3187 }
    { 50130;  ;Shipping Location   ;Boolean       ;Description=TPZ622 }
    { 50142;  ;Distribution Center ;Boolean       ;Description=TPZ622 }
    { 50143;  ;Distribution Center Code;Code10    ;Description=TPZ622 }
    { 50145;  ;Non Inventory Location;Boolean     ;Description=EBAGIM TPZ1568 }
    { 51098;  ;Blocked             ;Boolean       ;CaptionML=ENU=Blocked }
    { 51402;  ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=" ,Distribution Center,Stocking Rep.";
                                                   OptionString=[ ,Distribution Center,Stocking Rep.] }
    { 51445;  ;No. of Months for Avg. Usage;Integer;
                                                   CaptionML=ENU=No. of Months for Avg. Usage;
                                                   MinValue=0 }
    { 51446;  ;No. of Ms. to Purch./Transfer;Integer;
                                                   CaptionML=ENU=No. of Ms. to Purch./Transfer;
                                                   MinValue=0 }
    { 51490;  ;Label ID            ;Code10        ;CaptionML=ENU=Label ID }
    { 51702;  ;Pay-to Vendor No.   ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=ENU=Pay-to Vendor No. }
    { 51704;  ;Send Source Documents;Boolean      ;CaptionML=ENU=Send Source Documents }
    { 51705;  ;Backup Location Code;Code10        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Backup Location Code;
                                                              ESM=C�digo;
                                                              FRC=Code;
                                                              ENC=Code];
                                                   Description=TPZ2782 }
    { 70551;  ;Carrying Cost %     ;Decimal       ;CaptionML=ENU=Carrying Cost % }
    { 70552;  ;Ordering Cost       ;Decimal       ;CaptionML=ENU=Ordering Cost }
    { 70553;  ;Last Day-End Date   ;Date          ;CaptionML=ENU=Last Day-End Date;
                                                   Editable=No }
    { 70554;  ;System Date of Last Day-End;Date   ;CaptionML=ENU=System Date of Last Day-End;
                                                   Editable=Yes }
    { 70555;  ;Last Closed Period Date;Date       ;CaptionML=ENU=Last Closed Period Date }
    { 70556;  ;Select Day End Processing;Code60   ;CaptionML=ENU=Select Day End Processing }
    { 70557;  ;Select Period End Processing;Code60;CaptionML=ENU=Select Period End Processing }
    { 70558;  ;Stocking Rule Code  ;Code10        ;TableRelation="Stocking Rule".Code;
                                                   CaptionML=ENU=Stocking Rule Code }
    { 70568;  ;Last Item Rcpt. Entry No.;Integer  ;CaptionML=ENU=Last Item Rcpt. Entry No. }
    { 70569;  ;Re-Close Last Closed Period;Boolean;CaptionML=ENU=Re-Close Last Closed Period;
                                                   Editable=No }
    { 70570;  ;Enable Adv. Forecasting;Boolean    ;CaptionML=ENU=Enable Adv. Forecasting }
    { 70571;  ;Enable Cust. Forecasting;Boolean   ;CaptionML=ENU=Enable Cust. Forecasting }
    { 70572;  ;Def. Repl. Source Type;Option      ;CaptionML=ENU=Def. Repl. Source Type;
                                                   OptionCaptionML=ENU=" ,Location,Vendor,Production,Assembly";
                                                   OptionString=[ ,Location,Vendor,Production,Assembly] }
    { 70573;  ;Def. Repl. Source Code;Code20      ;TableRelation=IF (Def. Repl. Source Type=CONST(Location)) Location.Code WHERE (Use As In-Transit=CONST(No))
                                                                 ELSE IF (Def. Repl. Source Type=CONST(Vendor)) Vendor.No.
                                                                 ELSE IF (Def. Repl. Source Type=CONST(Production)) "Production Item Group".Code;
                                                   CaptionML=ENU=Def. Repl. Source Code }
    { 70574;  ;Def. Nonstock Unit  ;Boolean       ;CaptionML=ENU=Def. Nonstock Unit }
    { 70575;  ;Def. Include Drop Ship Usage;Boolean;
                                                   CaptionML=ENU=Def. Include Drop Ship Usage }
    { 70576;  ;Adjusted Period Alert;Boolean      ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Location Inventory Period" WHERE (Location Code=FIELD(Code),
                                                                                                        Adj. After Close=CONST(Yes)));
                                                   CaptionML=ENU=Adjusted Period Alert;
                                                   Editable=No }
    { 70577;  ;Auto Process Day End;Boolean       ;CaptionML=ENU=Auto Process Day End }
    { 70578;  ;Auto Process Period End;Boolean    ;CaptionML=ENU=Auto Process Period End }
    { 70579;  ;Enable Moving Average;Boolean      ;CaptionML=ENU=Enable Moving Average }
    { 70581;  ;Reforecast Required Units;Integer  ;FieldClass=FlowField;
                                                   CalcFormula=Count("Procurement Unit" WHERE (Location Code=FIELD(Code),
                                                                                               Change Reforecast Required=CONST(Yes)));
                                                   CaptionML=ENU=Reforecast Required Units;
                                                   Editable=No }
    { 70582;  ;Variant Summarize Pending;Integer  ;FieldClass=FlowField;
                                                   CalcFormula=Count("Procurement Unit" WHERE (Location Code=FIELD(Code),
                                                                                               Summarize Pending=CONST(Yes)));
                                                   CaptionML=ENU=Variant Summarize Pending;
                                                   Editable=No }
    { 70583;  ;Redirect From Pending;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("Usage Redirect" WHERE (Location Code=FIELD(Code),
                                                                                             Change Pending=CONST(Yes)));
                                                   CaptionML=ENU=Redirect From Pending;
                                                   Editable=No }
    { 70584;  ;Redirect To Pending ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Usage Redirect" WHERE (Redirect Location Code=FIELD(Code),
                                                                                             Change Pending=CONST(Yes)));
                                                   CaptionML=ENU=Redirect To Pending;
                                                   Editable=No }
    { 70585;  ;Redirect Delete Pending;Integer    ;FieldClass=FlowField;
                                                   CalcFormula=Count("Usage Redirect" WHERE (Location Code=FIELD(Code),
                                                                                             Delete Pending=CONST(Yes)));
                                                   CaptionML=ENU=Redirect Delete Pending;
                                                   Editable=No }
    { 70586;  ;Def. Safety Stock Calc. Method;Option;
                                                   CaptionML=ENU=Def. Safety Stock Calc. Method;
                                                   OptionCaptionML=ENU=Fixed,Forecast Deviation;
                                                   OptionString=Fixed,Forecast Deviation }
    { 70587;  ;Def. Target Cust. Service Lvl.;Code10;
                                                   TableRelation="Target Customer Service Level".Code;
                                                   CaptionML=ENU=Def. Target Cust. Service Lvl. }
    { 70588;  ;Auto Process Prod. Plan;Boolean    ;CaptionML=ENU=Auto Process Prod./Assembly Plan }
    { 70589;  ;AFP Prod. Planning Name;Code10     ;TableRelation="AFP Prod. Planning Name".Name WHERE (Template Name=FIELD(AFP Prod. Template Name));
                                                   CaptionML=ENU=AFP Prod. Planning Name }
    { 70590;  ;AFP Prod. Template Name;Code10     ;TableRelation="AFP Prod. Template".Name;
                                                   CaptionML=ENU=AFP Prod. Template Name }
    { 70591;  ;Last Prod. Plan Date;Date          ;CaptionML=ENU=Last Prod. Plan Date;
                                                   Editable=No }
    { 70592;  ;Maintain Sporadic Stock Qty.;Boolean;
                                                   CaptionML=ENU=Maintain Sporadic Stock Qty. }
    { 70593;  ;Roll Up Order Quantity Rule;Option ;CaptionML=ENU=Roll Up Order Quantity Rule;
                                                   OptionCaptionML=ENU=" ,MinSOQ,MaxSOQ";
                                                   OptionString=[ ,MinSOQ,MaxSOQ] }
    { 70594;  ;Last Prod. Order Review;Date       ;CaptionML=ENU=Last Prod. Order Review;
                                                   Editable=No }
    { 70595;  ;Reforecast Items    ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Procurement Unit" WHERE (Reforecast Item=CONST(Yes),
                                                                                               Location Code=FIELD(Code)));
                                                   CaptionML=ENU=Reforecast Items;
                                                   Editable=No }
    { 70596;  ;Prod. Plan Locked Through;Date     ;CaptionML=ENU=Prod. Plan Locked Through }
    { 70597;  ;Enable AFP Production;Boolean      ;CaptionML=ENU=Enable AFP Production }
    { 70598;  ;Vend. Surplus Calc. Add Days;Decimal;
                                                   CaptionML=ENU=Vend. Surplus Calc. Add Days;
                                                   DecimalPlaces=0:2 }
    { 70599;  ;Vend. Surplus Calc. Add Pct.;Decimal;
                                                   CaptionML=ENU=Vend. Surplus Calc. Add Pct.;
                                                   DecimalPlaces=0:2 }
    { 70600;  ;Loc. Surplus Calc. Add Days;Decimal;CaptionML=ENU=Loc. Surplus Calc. Add Days;
                                                   DecimalPlaces=0:2 }
    { 70601;  ;Loc. Surplus Calc. Add Pct.;Decimal;CaptionML=ENU=Loc. Surplus Calc. Add Pct.;
                                                   DecimalPlaces=0:2 }
    { 70602;  ;Def. Minimum Days   ;Decimal       ;CaptionML=ENU=Def. Minimum Days;
                                                   DecimalPlaces=0:2 }
    { 70603;  ;Def. Maximum Days   ;Decimal       ;CaptionML=ENU=Def. Maximum Days;
                                                   DecimalPlaces=0:2 }
    { 70604;  ;Min. Presentation Qty.;Decimal     ;CaptionML=ENU=Min. Presentation Qty.;
                                                   DecimalPlaces=0:2 }
    { 70605;  ;Auto. Forecast Adj. %;Decimal      ;CaptionML=ENU=Auto. Forecast Adj. %;
                                                   DecimalPlaces=0:2 }
    { 70606;  ;Sporadic Rule       ;Code10        ;TableRelation="Sporadic Rule".Code;
                                                   CaptionML=ENU=Sporadic Rule }
    { 70607;  ;Include Service Usage;Boolean      ;CaptionML=ENU=Incude Service Usage }
    { 70609;  ;Location Planning Sequence;Integer ;CaptionML=ENU=Location Planning Sequence }
    { 70610;  ;Enable Assembly Forecast;Boolean   ;CaptionML=ENU=Enable Assembly Forecast }
    { 70611;  ;Sporadic Spoke Hub Lead Time;Boolean;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Use Hub Lead Time for Spoke Sporadic Calculation }
    { 14000350;;EDI Trading Partner ID;Code20     ;TableRelation="E.D.I. Trade Partner";
                                                   CaptionML=ENU=EDI Trading Partner ID }
    { 14000351;;EDI Transfer Trade Partner;Code20 ;TableRelation="E.D.I. Trade Partner";
                                                   CaptionML=ENU=EDI Transfer Trade Partner }
    { 14000352;;EDI Invt. Advice Trade Partner;Code20;
                                                   TableRelation="E.D.I. Trade Partner";
                                                   CaptionML=ENU=EDI Invt. Advice Trade Partner }
    { 14000701;;Rate Shop Packing Station;Code10  ;TableRelation="Packing Station";
                                                   CaptionML=ENU=Rate Shop Packing Station }
    { 14000702;;E-Ship Agent Code  ;Code10        ;TableRelation="Shipping Agent";
                                                   CaptionML=ENU=Shipping Agent Code }
    { 14000703;;E-Ship Agent Service;Code30       ;TableRelation="E-Ship Agent Service".Code WHERE (Shipping Agent Code=FIELD(E-Ship Agent Code),
                                                                                                    World Wide Service=CONST(No));
                                                   CaptionML=ENU=E-Ship Agent Service }
    { 14000704;;Residential Delivery;Boolean      ;CaptionML=ENU=Residential Delivery }
    { 14000705;;Shipping Payment Type;Option      ;CaptionML=ENU=Shipping Payment Type;
                                                   OptionCaptionML=ENU=Prepaid,Third Party,Freight Collect,Consignee;
                                                   OptionString=Prepaid,Third Party,Freight Collect,Consignee }
    { 14000706;;Shipping Insurance ;Option        ;CaptionML=ENU=Shipping Insurance;
                                                   OptionCaptionML=ENU=" ,Never,Always";
                                                   OptionString=[ ,Never,Always] }
    { 14002800;;Use ACE One WMS    ;Boolean       ;CaptionML=ENU=Use ACE One WMS }
    { 14002801;;Ship Bin (ACE One WMS);Code20     ;TableRelation=IF (Use ACE One WMS=CONST(Yes)) Bin.Code WHERE (Location Code=FIELD(Code));
                                                   CaptionML=ENU=Ship Bin (ACE One WMS) }
    { 14002802;;Initial LP QA Status;Code10       ;TableRelation="LP QA Status Option".Status;
                                                   CaptionML=ENU=Initial LP QA Status }
    { 14002803;;Create LP Pallets at Receive;Boolean;
                                                   CaptionML=ENU=Create LP Pallets at Receive }
    { 14002804;;Use License Plating;Boolean       ;CaptionML=ENU=Use License Plating }
    { 14002805;;Pallet Adjustment Bin;Code20      ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Code));
                                                   CaptionML=ENU=Pallet Adjustment Bin }
    { 14002806;;Require Pallet QA Record;Boolean  ;CaptionML=ENU=Require Pallet QA Record }
    { 14002807;;Use Bin Types (ACE One WMS);Boolean;
                                                   CaptionML=ENU=Use Bin Types (ACE One WMS) }
    { 14002808;;Receiving Bin (ACE One WMS);Code20;TableRelation=IF (Use ACE One WMS=CONST(Yes)) Bin.Code WHERE (Location Code=FIELD(Code));
                                                   CaptionML=ENU=Receiving Bin (ACE One WMS) }
    { 14002809;;Special Order Handling;Boolean    ;CaptionML=ENU=Special Order Handling }
    { 14002810;;Special Order Bin  ;Code20        ;TableRelation=IF (Special Order Handling=CONST(Yes)) Bin.Code WHERE (Location Code=FIELD(Code));
                                                   CaptionML=ENU=Special Order Bin }
    { 14002811;;Strict Default Bin Usage;Boolean  ;CaptionML=ENU=Strict Default Bin Usage }
    { 14002812;;Confirm Rec. Bin Selection;Boolean;CaptionML=ENU=Confirm Rec. Bin Selection }
    { 14002813;;Use FIFO Pick Takes (LP);Boolean  ;CaptionML=ENU=Use FIFO Pick Takes (LP) }
    { 14002814;;Use FIFO Replen Takes (LP);Boolean;CaptionML=ENU=Use FIFO Replen Takes (LP) }
    { 14002815;;Strict Pallet Bins ;Boolean       ;CaptionML=ENU=Strict Pallet Bins }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;Name                                     }
    {    ;Use As In-Transit,Bin Mandatory          }
    {    ;Location Planning Sequence               }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Bin@1000 : Record 7354;
      PostCode@1001 : Record 225;
      WhseSetup@1002 : Record 5769;
      InvtSetup@1003 : Record 313;
      Location@1004 : Record 14;
      CustomizedCalendarChange@1023 : Record 7602;
      Text000@1005 : TextConst 'ENU=You cannot delete the %1 %2, because they contain items.;ESM=No puede borrar el %1 %2, porque contienen productos.;FRC=Vous ne pouvez pas supprimer l''enregistrement %1 %2, car il contient des articles.;ENC=You cannot delete the %1 %2, because they contain items.';
      Text001@1006 : TextConst 'ENU=You cannot delete the %1 %2, because one or more Warehouse Activity Lines exist for this %1.;ESM=No puede borrar el %1 %2 , porque existen una o m�s l�ns. actividad almac�n para este %1.;FRC=Vous ne pouvez pas supprimer le %1 %2, car il existe une ou plusieurs lignes Activit� entrep�t pour ce %1.;ENC=You cannot delete the %1 %2, because one or more Warehouse Activity Lines exist for this %1.';
      Text002@1007 : TextConst 'ENU=%1 must be Yes, because the bins contain items.;ESM=%1 tiene que ser s�, porque las ubic. contienen prods.;FRC=La valeur du champ %1 doit �tre Oui, car les zones contiennent des articles.;ENC=%1 must be Yes, because the bins contain items.';
      Text003@1009 : TextConst 'ENU=Canceled.;ESM=Cancelado.;FRC=Annul�.;ENC=Cancelled.';
      Text004@1010 : TextConst 'ENU=The total quantity of items in the warehouse is 0, but the Adjustment Bin contains a negative quantity and other bins contain a positive quantity.\;ESM=La cdad. total de prods. en el alm. es 0, pero la ubic. de ajuste contiene una cantidad negativa y otras ubic. contienen una cantidad positiva.\;FRC=La quantit� totale d''articles dans le magasin est 0, mais la zone ajustement comporte une quantit� n�gative et d''autres zones une quantit� positive.\;ENC=The total quantity of items in the warehouse is 0, but the Adjustment Bin contains a negative quantity and other bins contain a positive quantity.\';
      Text005@1012 : TextConst 'ENU=Do you still want to delete this %1?;ESM=�Quiere todav�a borrar este %1?;FRC=Souhaitez-vous quand m�me supprimer cet enregistrement %1?;ENC=Do you still want to delete this %1?';
      Text006@1011 : TextConst 'ENU=You cannot change the %1 until the inventory stored in %2 %3 is 0.;ESM=No puede cambiar el %1 hasta que el invent. almacenado en %2 %3 sea 0.;FRC=Vous ne pouvez pas modifier la valeur du champ %1 tant que l''inventaire stock� dans %2 %3 est 0.;ENC=You cannot change the %1 until the inventory stored in %2 %3 is 0.';
      Text007@1013 : TextConst 'ENU=You have to delete all Adjustment Warehouse Journal Lines first before you can change the %1.;ESM=Primero debe eliminar todos los ajustes de l�neas diario almac�n para poder cambiar el %1.;FRC=Vous devez supprimer toutes les lignes du journal d''ajustement en entrep�t avant de pouvoir modifier la valeur du champ %1.;ENC=You have to delete all Adjustment Warehouse Journal Lines first before you can change the %1.';
      Text008@1008 : TextConst 'ENU=%1 must be %2, because one or more %3 exist.;ESM=%1 tiene que ser %2, porque uno o m�s %3 existen.;FRC=%1 doit correspondre � %2, puisqu''il existe un ou plusieurs %3.;ENC=%1 must be %2, because one or more %3 exist.';
      Text009@1014 : TextConst 'ENU=You cannot change %1 because there are one or more open ledger entries on this location.;ESM=No puede cambiar %1 por que hay uno � m�s movs. abiertos en este almac�n.;FRC=Vous ne pouvez pas modifier l''�l�ment %1, puisqu''une ou plusieurs entr�es de grand livre sont ouvertes � cet emplacement.;ENC=You cannot change %1 because there are one or more open ledger entries on this location.';
      Text010@1015 : TextConst 'ENU=Checking item ledger entries for open entries...;ESM=Chequear movs. contab. para movs. abiertos...;FRC=Recherche d''entr�es ouvertes dans le grand livre...;ENC=Checking item ledger entries for open entries...';
      Text011@1016 : TextConst 'ENU=You cannot change the %1 to %2 until the inventory stored in this bin is 0.;ESM=No puede cambiar %1 a %2 hasta que el valor del inventario almacenado en esta ubicaci�n sea 0.;FRC=Vous ne pouvez pas changer la valeur du champ %1 pour %2 avant que le stock de cette zone soit � 0.;ENC=You cannot change the %1 to %2 until the inventory stored in this bin is 0.';
      Text012@1017 : TextConst 'ENU=Before you can use Online Map, you must fill in the Online Map Setup window.\See Setting Up Online Map in Help.;ESM=Para poder usar Online Map, primero debe rellenar la ventana Configuraci�n Online Map.\Consulte Configuraci�n de Online Map en la Ayuda.;FRC=Avant de pouvoir utiliser Online Map, vous devez compl�ter la fen�tre Configuration Online Map.\Consultez la section Configuration d''Online Map dans l''Aide.;ENC=Before you can use Online Map, you must fill in the Online Map Setup window.\See Setting Up Online Map in Help.';
      Text013@1018 : TextConst 'ENU=You cannot delete %1 because there are one or more ledger entries on this location.;ESM=No puede eliminar %1 porque hay uno o m�s movimientos en este almac�n.;FRC=Vous ne pouvez pas supprimer la valeur %1 car il existe une ou plusieurs �critures pour cette zone.;ENC=You cannot delete %1 because there are one or more ledger entries on this location.';
      Text014@1019 : TextConst 'ENU=You cannot change %1 because one or more %2 exist.;ESM=No puede cambiar %1 porque existen uno o m�s %2.;FRC=Vous ne pouvez pas modifier %1 car il existe un ou plusieurs %2.;ENC=You cannot change %1 because one or more %2 exist.';
      CannotDeleteLocSKUExistErr@1021 : TextConst '@@@=%1: Field(Code);ENU=You cannot delete %1 because one or more stockkeeping units exist at this location.;ESM=No se puede eliminar %1 porque existen una o varias unidades de almacenamiento en esta ubicaci�n.;FRC=Vous ne pouvez pas supprimer %1 car une ou plusieurs unit�s de stock existent � cet emplacement.;ENC=You cannot delete %1 because one or more stockkeeping units exist at this location.';
      UnspecifiedLocationLbl@1020 : TextConst 'ENU=(Unspecified Location);ESM=(Ubicaci�n sin especificar);FRC=(Emplacement non sp�cifi�);ENC=(Unspecified Location)';
      CalendarManagement@1022 : Codeunit 7600;
      ShippingAgent@14000701 : Record 291;
      EShipAgentService@14000700 : Record 14000708;
      ShippingAccount@14000702 : Record 14000714;
      EDIIntegration@14000351 : Codeunit 14000363;
      UserSetupMgt@1000000000 : Codeunit 5700;

    [External]
    PROCEDURE RequireShipment@5(LocationCode@1000 : Code[10]) : Boolean;
    BEGIN
      IF Location.GET(LocationCode) THEN
        EXIT(Location."Require Shipment");
      WhseSetup.GET;
      EXIT(WhseSetup."Require Shipment");
    END;

    [External]
    PROCEDURE RequirePicking@1(LocationCode@1000 : Code[10]) : Boolean;
    BEGIN
      IF Location.GET(LocationCode) THEN
        EXIT(Location."Require Pick");
      WhseSetup.GET;
      EXIT(WhseSetup."Require Pick");
    END;

    [External]
    PROCEDURE RequireReceive@4(LocationCode@1000 : Code[10]) : Boolean;
    BEGIN
      IF Location.GET(LocationCode) THEN
        EXIT(Location."Require Receive");
      WhseSetup.GET;
      EXIT(WhseSetup."Require Receive");
    END;

    [External]
    PROCEDURE RequirePutaway@2(LocationCode@1000 : Code[10]) : Boolean;
    BEGIN
      IF Location.GET(LocationCode) THEN
        EXIT(Location."Require Put-away");
      WhseSetup.GET;
      EXIT(WhseSetup."Require Put-away");
    END;

    [External]
    PROCEDURE GetLocationSetup@3(LocationCode@1000 : Code[10];VAR Location2@1001 : Record 14) : Boolean;
    BEGIN
      IF NOT GET(LocationCode) THEN
        WITH Location2 DO BEGIN
          INIT;
          WhseSetup.GET;
          InvtSetup.GET;
          Code := LocationCode;
          "Use As In-Transit" := FALSE;
          "Require Put-away" := WhseSetup."Require Put-away";
          "Require Pick" := WhseSetup."Require Pick";
          "Outbound Whse. Handling Time" := InvtSetup."Outbound Whse. Handling Time";
          "Inbound Whse. Handling Time" := InvtSetup."Inbound Whse. Handling Time";
          "Require Receive" := WhseSetup."Require Receive";
          "Require Shipment" := WhseSetup."Require Shipment";
          EXIT(FALSE);
        END;

      Location2 := Rec;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE WMSCheckWarehouse@7300();
    VAR
      Zone@1005 : Record 7300;
      Bin@1006 : Record 7354;
      BinContent@1004 : Record 7302;
      WhseActivLine@1003 : Record 5767;
      WarehouseEntry@1002 : Record 7312;
      WarehouseEntry2@1001 : Record 7312;
      WhseJnlLine@1000 : Record 7311;
      ItemLedgerEntry@1007 : Record 32;
    BEGIN
      ItemLedgerEntry.SETRANGE("Location Code",Code);
      ItemLedgerEntry.SETRANGE(Open,TRUE);
      IF NOT ItemLedgerEntry.ISEMPTY THEN
        ERROR(Text013,Code);

      WarehouseEntry.SETRANGE("Location Code",Code);
      WarehouseEntry.CALCSUMS("Qty. (Base)");
      IF WarehouseEntry."Qty. (Base)" = 0 THEN BEGIN
        IF "Adjustment Bin Code" <> '' THEN BEGIN
          WarehouseEntry2.SETRANGE("Bin Code","Adjustment Bin Code");
          WarehouseEntry2.SETRANGE("Location Code",Code);
          WarehouseEntry2.CALCSUMS("Qty. (Base)");
          IF WarehouseEntry2."Qty. (Base)" < 0 THEN
            IF NOT CONFIRM(Text004 + Text005,FALSE,TABLECAPTION) THEN
              ERROR(Text003)
        END;
      END ELSE
        ERROR(Text000,TABLECAPTION,Code);

      WhseActivLine.SETRANGE("Location Code",Code);
      WhseActivLine.SETRANGE("Activity Type",WhseActivLine."Activity Type"::Movement);
      WhseActivLine.SETFILTER("Qty. Outstanding",'<>0');
      IF NOT WhseActivLine.ISEMPTY THEN
        ERROR(Text001,TABLECAPTION,Code);

      WhseJnlLine.SETRANGE("Location Code",Code);
      WhseJnlLine.SETFILTER(Quantity,'<>0');
      IF NOT WhseJnlLine.ISEMPTY THEN
        ERROR(Text001,TABLECAPTION,Code);

      Zone.SETRANGE("Location Code",Code);
      Zone.DELETEALL;
      Bin.SETRANGE("Location Code",Code);
      Bin.DELETEALL;
      BinContent.SETRANGE("Location Code",Code);
      BinContent.DELETEALL;
    END;

    LOCAL PROCEDURE CheckEmptyBin@7302(BinCode@1001 : Code[20];CaptionOfField@1002 : Text[30]);
    VAR
      WarehouseEntry@1003 : Record 7312;
      WhseEntry2@1000 : Record 7312;
    BEGIN
      WarehouseEntry.SETCURRENTKEY("Bin Code","Location Code","Item No.");
      WarehouseEntry.SETRANGE("Bin Code",BinCode);
      WarehouseEntry.SETRANGE("Location Code",Code);
      IF WarehouseEntry.FINDFIRST THEN
        REPEAT
          WarehouseEntry.SETRANGE("Item No.",WarehouseEntry."Item No.");

          WhseEntry2.SETCURRENTKEY("Item No.","Bin Code","Location Code");
          WhseEntry2.COPYFILTERS(WarehouseEntry);
          WhseEntry2.CALCSUMS("Qty. (Base)");
          IF WhseEntry2."Qty. (Base)" <> 0 THEN BEGIN
            IF (BinCode = "Adjustment Bin Code") AND (xRec."Adjustment Bin Code" = '') THEN
              ERROR(Text011,CaptionOfField,BinCode);

            ERROR(Text006,CaptionOfField,Bin.TABLECAPTION,BinCode);
          END;

          WarehouseEntry.FINDLAST;
          WarehouseEntry.SETRANGE("Item No.");
        UNTIL WarehouseEntry.NEXT = 0;
    END;

    LOCAL PROCEDURE CheckWhseAdjmtJnl@7303();
    VAR
      WhseJnlTemplate@1002 : Record 7309;
      WhseJnlLine@1003 : Record 7311;
    BEGIN
      WhseJnlTemplate.SETRANGE(Type,WhseJnlTemplate.Type::Item);
      IF WhseJnlTemplate.FIND('-') THEN
        REPEAT
          WhseJnlLine.SETRANGE("Journal Template Name",WhseJnlTemplate.Name);
          WhseJnlLine.SETRANGE("Location Code",Code);
          IF NOT WhseJnlLine.ISEMPTY THEN
            ERROR(
              Text007,
              FIELDCAPTION("Adjustment Bin Code"));
        UNTIL WhseJnlTemplate.NEXT = 0;
    END;

    [External]
    PROCEDURE GetRequirementText@6(FieldNumber@1000 : Integer) : Text[50];
    VAR
      Text000@1002 : TextConst 'ENU=Shipment,Receive,Pick,Put-Away;ESM=Env�o,Recibir,Picking,Ubicar;FRC=Livrer,Recevoir,Pr�lever,Classer;ENC=Shipment,Receive,Pick,Put-Away';
    BEGIN
      CASE FieldNumber OF
        FIELDNO("Require Shipment"):
          EXIT(SELECTSTR(1,Text000));
        FIELDNO("Require Receive"):
          EXIT(SELECTSTR(2,Text000));
        FIELDNO("Require Pick"):
          EXIT(SELECTSTR(3,Text000));
        FIELDNO("Require Put-away"):
          EXIT(SELECTSTR(4,Text000));
      END;
    END;

    [Internal]
    PROCEDURE DisplayMap@7();
    VAR
      MapPoint@1001 : Record 800;
      MapMgt@1000 : Codeunit 802;
    BEGIN
      IF MapPoint.FINDFIRST THEN
        MapMgt.MakeSelection(DATABASE::Location,GETPOSITION)
      ELSE
        MESSAGE(Text012);
    END;

    [External]
    PROCEDURE IsBWReceive@8() : Boolean;
    BEGIN
      EXIT("Bin Mandatory" AND (NOT "Directed Put-away and Pick") AND "Require Receive");
    END;

    [External]
    PROCEDURE IsBWShip@12() : Boolean;
    BEGIN
      EXIT("Bin Mandatory" AND (NOT "Directed Put-away and Pick") AND "Require Shipment");
    END;

    [External]
    PROCEDURE IsBinBWReceiveOrShip@11(BinCode@1000 : Code[20]) : Boolean;
    BEGIN
      EXIT(("Receipt Bin Code" <> '') AND (BinCode = "Receipt Bin Code") OR
        ("Shipment Bin Code" <> '') AND (BinCode = "Shipment Bin Code"));
    END;

    [External]
    PROCEDURE IsInTransit@10(LocationCode@1000 : Code[10]) : Boolean;
    BEGIN
      IF Location.GET(LocationCode) THEN
        EXIT(Location."Use As In-Transit");
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE CreateInboundWhseRequest@13();
    VAR
      TransferHeader@1002 : Record 5740;
      TransferLine@1004 : Record 5741;
      WarehouseRequest@1000 : Record 5765;
      WhseTransferRelease@1003 : Codeunit 5773;
    BEGIN
      TransferLine.SETRANGE("Transfer-to Code",Code);
      IF TransferLine.FINDSET THEN
        REPEAT
          IF TransferLine."Quantity Received" <> TransferLine."Quantity Shipped" THEN BEGIN
            TransferHeader.GET(TransferLine."Document No.");
            WhseTransferRelease.InitializeWhseRequest(WarehouseRequest,TransferHeader,TransferHeader.Status);
            WhseTransferRelease.CreateInboundWhseRequest(WarehouseRequest,TransferHeader);

            TransferLine.SETRANGE("Document No.",TransferLine."Document No.");
            TransferLine.FINDLAST;
            TransferLine.SETRANGE("Document No.");
          END;
        UNTIL TransferLine.NEXT = 0;
    END;

    PROCEDURE GetLocationsIncludingUnspecifiedLocation@14(IncludeOnlyUnspecifiedLocation@1001 : Boolean;ExcludeInTransitLocations@1000 : Boolean);
    VAR
      Location@1002 : Record 14;
    BEGIN
      INIT;
      VALIDATE(Name,UnspecifiedLocationLbl);
      INSERT;

      IF NOT IncludeOnlyUnspecifiedLocation THEN BEGIN
        IF ExcludeInTransitLocations THEN
          Location.SETRANGE("Use As In-Transit",FALSE);

        IF Location.FINDSET THEN
          REPEAT
            INIT;
            COPY(Location);
            INSERT;
          UNTIL Location.NEXT = 0;
      END;

      FINDFIRST;
    END;

    BEGIN
    {
      2015-03-24 TPZ237 VCHERNYA
        US has been set as initial value for Country/Region Code field
      2015-03-25 TPZ416 VCHERNYA
        Table relation to State (County) table has been added to State (County) field
      2015-04-10 TPZ122 TAKHMETO
        Blocked, Type fields have been created
      2015-04-22 TPZ92 TAKHMETO
        Pay-to Vendor No., Send Source Documents field has been created
      2015-06-09 TPZ64 TAKHMETO
        Label ID field has been created
      2015-07-07 TPZ159 VCHERNYA
        SetSecurityFilter function has been created
      2015-07-29 TPZ135 VCHERNYA
        No. of Months for Avg. Usage and No. of Ms. to Purch./Transfer fields have been created
      2016-06-30 TPZ1559
        Add new fields for job queue posting time per location (handle CA whse. posting issue)
      2016-07-07 TPZ622
      New Fields added for DC report functionlty
      2016-12-17 TPZ1568 EBAGIM
        Added Non Inventoy Location field
      2017-03-05 TPZ1813 TMEI
        Added Incoming Inspection Bin Code field
      2019.04.10 - RS1.00 - TPZ2410 Bin Ranking Modification
      2019-09-06 TPZ2632 RTIWARI
        Function SetSecurityFilter moved from Table to Events
      2019-11-08 TPZ2701 RTIWARI
        New Field added Auto Pick
      2020-05-07 TPZ2808 VAHMAD
        New Field added Phys. Inv. Journal Batch
        New Field added Whse. Phys. Inv. Jnl. Batch
        New Field added Whse. Phys. Inv. Jnl. Batch To
        New Field added Whse. Item Jnl. Batch
      001 TPZ2894 VAS 08052020 Added Field "Auto LP Less Than Lines" and "Auto LP Generate"
      002 TPZ3147  Added new field Pick Complete Quantity to enable complete picking from available bin
    }
    END.
  }
}

