OBJECT Codeunit 51806 Page95EventSubscriber
{
  OBJECT-PROPERTIES
  {
    Date=09/15/20;
    Time=[ 9:01:32 AM];
    Modified=Yes;
    Version List=NAVEVENT,TPZ2829;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Table37EventSubscribers@1000000000 : Codeunit 50077;

    [EventSubscriber(Codeunit,51807,Pg95_OnOPenPage)]
    PROCEDURE Pg95_OnOpenPage@1000010000(VAR Sender@1000000000 : Codeunit 51807;VAR Rec@1000000001 : Record 37;VAR ActualUnitPriceEditable@1000000002 : Boolean;VAR ChangeLogEntriesVisible@1000000003 : Boolean);
    VAR
      UserMgt@1000000005 : Codeunit 5700;
    BEGIN
      // <TPZ159>
      ActualUnitPriceEditable := TRUE;
      ChangeLogEntriesVisible := TRUE;
      IF UserMgt.GetMfrRepSalesFilter <> '' THEN BEGIN
        ActualUnitPriceEditable := FALSE;
        ChangeLogEntriesVisible := FALSE;
      END;
      // </TPZ159>
    END;

    [EventSubscriber(Codeunit,51807,Pg95_OnAfterGetRecord)]
    PROCEDURE Pg95_OnAfterGetRecord@1001000001(VAR Sender@1000000000 : Codeunit 51807;VAR Rec@1000000001 : Record 37;VAR xRec@1000000002 : Record 37;VAR StyleTxtABC@1000000003 : Text;VAR StyleTxt@1000000004 : Text;VAR SalesPriceMultiplier@1000000007 : Decimal;VAR StyleTxtLastPriceDate@1000000009 : Text;CurrField@1000000010 : Integer);
    VAR
      UserMgt@1000000005 : Codeunit 5700;
      DefaultDimension@1000000006 : Record 352;
      Item@1000000008 : Record 27;
    BEGIN
      WITH Rec DO BEGIN
        //<TPZ1545>//EB
         IF ("Document Type" IN ["Document Type"::Order,"Document Type"::Quote]) AND (Type=Type::Item) THEN BEGIN
          {IF tmpitem.GET("No.") THEN

           StyleTxtBlocked:= 'Standard';
            CASE tmpitem.Blocked OF
              TRUE:
                StyleTxtBlocked :='StandardAccent';
              {
              tmpitem.Blocked::"1":
                StyleTxtBlocked :='Attention';
              tmpitem.Blocked::"2":
                StyleTxtBlocked :='Ambiguous';
                }
              //<TPZ2531>
              {
              tmpitem.Blocked::NPI:
                StyleTxtBlocked :='favorable';
                }
                //</TPZ2531>
              ELSE
               StyleTxtBlocked:= 'Standard';
            END;}
            //<TPZ2531>
            Pg95_SetStyleABC(Rec,StyleTxtABC);

            DefaultDimension.RESET;
            IF DefaultDimension.GET(27,"No.",'PRODLIFECYCLE')THEN BEGIN
            IF DefaultDimension."Dimension Value Code" = 'INTRO' THEN
              StyleTxtABC := 'favorable'//utk
           // ELSE
             // StyleTxtABC:= 'Standard';//utk
            END;
            //</TPZ2531>
          END;
           //EB </TPZ1545>

        //<TPZ1125>
        IF "Actual Unit Price"<>xRec."Actual Unit Price" THEN
          StyleTxt :="Unit Price Color";
          //TOP230 KT ABCSI CRP 2 Fixes 05012015  //EB
        //<TPZ1125>
        //<TPZ2512>



        SalesPriceMultiplier := 0;
        IF Item.GET("No.") THEN BEGIN
        IF "Pricing Logic" = "Pricing Logic"::"Sales Price" THEN BEGIN
          IF Item."Unit Price" <> 0 THEN
            SalesPriceMultiplier := "Recomm. Unit Price" / Item."Unit Price"
          ELSE
            SalesPriceMultiplier := 0;
        END;
        END;
        //</TPZ2512>
        Table37EventSubscribers.Tb37_GetLastSalesPrice(Rec); //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04142015
        //Table37EventSubscribers.Tb37_SetStyleLastPriceDate(Rec,StyleTxtLastPriceDate,CurrField);
      END;
    END;

    [EventSubscriber(Codeunit,51807,Pg95_OnNewRecord)]
    PROCEDURE Pg95_OnNewRecord@1000100002(VAR Sender@1000000000 : Codeunit 51807;VAR Rec@1000000001 : Record 37;VAR StyleTxtABC@1000000002 : Text;VAR StyleTxt@1000000003 : Text);
    VAR
      UserMgt@1000000005 : Codeunit 5700;
      DefaultDimension@1000000006 : Record 352;
    BEGIN
       WITH Rec DO BEGIN
        StyleTxt := Table37EventSubscribers.Tb37_SetStyle(Rec);
      END;
    END;

    [EventSubscriber(Page,95,OnNewRecordEvent)]
    LOCAL PROCEDURE Pg95_OnNewRecord_1@1000000000(VAR Rec@1000000000 : Record 37;BelowxRec@1000000001 : Boolean;VAR xRec@1000000002 : Record 37);
    VAR
      SalesHeader@1000000003 : Record 36;
    BEGIN
      IF SalesHeader.GET(Rec."Document Type",Rec."Document No.") THEN

       IF SalesHeader."Document Type" IN [
                                             SalesHeader."Document Type"::Quote,
                                             SalesHeader."Document Type"::Order,
                                             SalesHeader."Document Type"::"Return Order"]
          THEN
            Rec.Type := Rec.Type::Item
          ELSE
           Rec.Type := xRec.Type;
    END;

    [EventSubscriber(Codeunit,51807,Pg95_OnAfterGetCurrRecord)]
    PROCEDURE Pg95_OnAfterCurrentGetRecord@1010000003(VAR Sender@1000000000 : Codeunit 51807;VAR Rec@1000000001 : Record 37;VAR SalesPriceMultiplier@1000000002 : Decimal);
    VAR
      Item@1000000003 : Record 27;
    BEGIN
      WITH Rec DO BEGIN
       //<TPZ2512>
       SalesPriceMultiplier := 0;
        IF Item.GET("No.") THEN BEGIN
         IF "Pricing Logic" = "Pricing Logic"::"Sales Price" THEN BEGIN
          IF Item."Unit Price" <> 0 THEN
            SalesPriceMultiplier :="Recomm. Unit Price" / Item."Unit Price"
          ELSE
            SalesPriceMultiplier := 0;
         END;
        END;
      //</TPZ2512>
      END;
    END;

    [EventSubscriber(Page,95,OnBeforeActionEvent,Action1000000028)]
    PROCEDURE Pg95_ChangeLogEntries_OnAction@1000000004(VAR Rec@1000000000 : Record 37);
    VAR
      ChangeLogEntry@1000000003 : Record 405;
      Number@1000000002 : Integer;
      ChangeLogMgt@1000000001 : Codeunit 423;
      CUSubscriber@1000000004 : Codeunit 51876;
    BEGIN
      WITH Rec DO BEGIN
        //<TPZ1728>
        Number := "Document Type";
       // ChangeLogMgt.OpenSSRSReport(DATABASE::"Sales Line", FORMAT(Number), "Document No.", FORMAT("Line No."));
        CUSubscriber.CU423_OpenSSRSReport(DATABASE::"Sales Line", FORMAT(Number), "Document No.", FORMAT("Line No."));//<TPZ2829 Event Subscription
        EXIT;
        //</TPZ1728>


        // <TPZ129>
        Number := "Document Type";
        ChangeLogEntry.RESET;
        ChangeLogEntry.SETRANGE("Table No.",DATABASE::"Sales Line");
        ChangeLogEntry.SETRANGE("Primary Key Field 1 Value",FORMAT(Number));
        ChangeLogEntry.SETRANGE("Primary Key Field 2 Value","Document No.");
        ChangeLogEntry.SETRANGE("Primary Key Field 3 Value",FORMAT("Line No."));
        PAGE.RUNMODAL(PAGE::"Change Log Entries",ChangeLogEntry);
        // </TPZ129>

      END;
    END;

    [EventSubscriber(Codeunit,51807,"Pg95_No.OnVaidate")]
    PROCEDURE "Pg95_No.OnVaidate"@1000000005(VAR Sender@1000000000 : Codeunit 51807;VAR Rec@1000000001 : Record 37;VAR StyleTxtABC@1000000002 : Text;VAR SalesPriceMultiplier@1000000003 : Decimal;VAR StyleTxtLastPriceDate@1000000004 : Text;CurrField@1000000007 : Integer);
    VAR
      DefaultDimension@1000000005 : Record 352;
      Item@1000000006 : Record 27;
    BEGIN
      WITH Rec DO BEGIN
        IF ("Document Type" IN ["Document Type"::Order,"Document Type"::Quote]) AND (Type=Type::Item) THEN BEGIN
        { IF tmpitem.GET("No.") THEN

          CASE tmpitem.Blocked OF
            TRUE:
              StyleTxtBlocked :='StandardAccent';
            {
            tmpitem.Blocked::"1":
              StyleTxtBlocked :='Attention';
            tmpitem.Blocked::"2":
              StyleTxtBlocked :='Ambiguous';
              }
            //<TPZ2531>
            {
            tmpitem.Blocked::NPI:
              StyleTxtBlocked :='favorable';
              }
              //</TPZ2531>
            ELSE
             StyleTxtBlocked:= 'Standard';
          END;
          //<TPZ2531>}
          Pg95_SetStyleABC(Rec,StyleTxtABC); //UTKARSH

          DefaultDimension.RESET;
          IF DefaultDimension.GET(27,"No.",'PRODLIFECYCLE')THEN BEGIN
            IF DefaultDimension."Dimension Value Code" = 'INTRO' THEN
              StyleTxtABC := 'favorable'
          //  ELSE
            //  StyleTxtABC:= 'Standard';
          END;
          //</TPZ2531>
        END;
         //EB </TPZ1545>
      //{=======} TARGET

        //<TPZ2512>
        SalesPriceMultiplier := 0;
        IF Item.GET("No.") THEN BEGIN
         IF "Pricing Logic" = "Pricing Logic"::"Sales Price" THEN BEGIN
          IF Item."Unit Price" <> 0 THEN
            SalesPriceMultiplier :="Recomm. Unit Price" / Item."Unit Price"
          ELSE
            SalesPriceMultiplier := 0;
         END;
        END;
        //</TPZ2512>

      Table37EventSubscribers.Tb37_GetLastSalesPrice(Rec); //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04142015
      //Table37EventSubscribers.Tb37_SetStyleLastPriceDate(Rec,StyleTxtLastPriceDate,CurrField);
      END;
    END;

    [EventSubscriber(Page,95,OnBeforeValidateEvent,Description)]
    PROCEDURE Pg95_Description_OnValidate@1000000006(VAR Rec@1000000000 : Record 37;VAR xRec@1000000001 : Record 37);
    VAR
      OldDescription@1000000002 : Text[50];
    BEGIN
      WITH Rec DO BEGIN
         // <TPZ1039>
        IF (Type = Type::Item) AND
           ("No." = '') AND
           (Description <> '')
        THEN BEGIN
          OldDescription := Description;
          VALIDATE(Type,Type::" ");
          Description := OldDescription;
        END;
        // </TPZ1039>
      END;
    END;

    PROCEDURE Pg95_AutoFillQtytoOrder@1000000012(VAR Rec@1000000000 : Record 37);
    BEGIN
      //Rec.AutoFillQtyToOrder(Rec);
    END;

    PROCEDURE Pg95_DeleteQtytoOrder@1000000011(VAR Rec@1000000000 : Record 37);
    BEGIN
      //DeleteQtyToOrder(Rec);
    END;

    PROCEDURE Pg95_CopyLastUnitPriceToActualUnitPrice@1000000010(VAR Rec@1000000001 : Record 37);
    VAR
      SalesLineLoc@1000000000 : Record 37;
    BEGIN
      // <TPZ929>
      SalesLineLoc.COPY(Rec);
      Pg95_CopyLastUnitPriceToActualUnitPrice(SalesLineLoc);
      // </TPZ929>
    END;

    PROCEDURE Pg95_ClearActualUnitPrice@1000000009(VAR Rec@1000000001 : Record 37);
    VAR
      SalesLineLoc@1000000000 : Record 37;
    BEGIN
      // <TPZ929>
      SalesLineLoc.COPY(Rec);
      Pg95_ClearActualUnitPrice(SalesLineLoc);
      // </TPZ929>
    END;

    LOCAL PROCEDURE Pg95_SetStyleABC@1000000019(VAR Rec@1000000001 : Record 37;VAR StyleTxtABC@1000000002 : Text);
    VAR
      ItemABC@1000000000 : Record 27;
    BEGIN
      StyleTxtABC := 'Standard';
      ItemABC.RESET;
      IF (Rec.Type=Rec.Type::Item)  AND (ItemABC.GET(Rec."No.")) THEN BEGIN
        CASE ItemABC."ABC Code" OF
          'LS' : StyleTxtABC := 'favorable';
          'N' : StyleTxtABC := 'Standard';
          'A' : StyleTxtABC := 'Standard';
          'B' : StyleTxtABC := 'Standard';
          'C' : StyleTxtABC := 'Standard';
          'MD' : StyleTxtABC := 'Standard';
          'SO' : StyleTxtABC := 'Standard';
          'CL' : StyleTxtABC := 'Attention';
          'DI' : StyleTxtABC := 'Ambiguous';
          'OB' : StyleTxtABC := 'Strongaccent';
        END;
      END;
    END;

    BEGIN
    END.
  }
}

