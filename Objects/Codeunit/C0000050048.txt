OBJECT Codeunit 50048 BackOrder MfrRep Wise
{
  OBJECT-PROPERTIES
  {
    Date=07/01/20;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=TPZ000.00.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN

            IF GUIALLOWED THEN
              InputStr := Window.InputBox('Please Enter Date ','Input','',100,100)
            ELSE InputStr := FORMAT(TODAY);


            //EVALUATE(DateFilter,'012218');
            EVALUATE(EndDate,InputStr);
            StartDate := CALCDATE('<-4d>',EndDate);
            //ERROR(FORMAT(StartDate));
            IF JobReportsEmail.GET(51124) THEN
              FilePath := JobReportsEmail."File Path";
            FilePath := '\\Nyvsvnavnsttst4\U\Reporting\BackOrders\';
            {
            SalesLine.RESET;
            SalesLine.SETCURRENTKEY("Document Type","Mfr. Rep. Code");
            SalesLine.SETRANGE("Document Type",SalesLine."Document Type"::Order);
            SalesLine.SETRANGE("Shipment Date",StartDate,EndDate);
            SalesLine.SETFILTER("Outstanding Quantity",'<>%1',0);
            SalesLine.SETFILTER(Type,FORMAT(SalesLine.Type::Item));
            SalesLine.SETFILTER("Mfr. Rep. Code",'<>%1','');
            IF SalesLine.FIND('-') THEN
              REPEAT
                SalesLine.SETRANGE("Mfr. Rep. Code",SalesLine."Mfr. Rep. Code");
                IF SalesLine.FINDLAST THEN
                 SalesLine.SETRANGE("Mfr. Rep. Code");
                 SalesHeader.RESET;
                 SalesHeader.SETRANGE("Mfr. Rep. Code",SalesLine."Mfr. Rep. Code");
                 SalesHeader.SETRANGE("Shipment Date",StartDate,EndDate);
                 SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::Order);
                 IF SalesHeader.FINDSET THEN
                  REPORT.SAVEASEXCEL(51124,FilePath+SalesLine."Mfr. Rep. Code"+'.xlsx',SalesHeader);
              UNTIL SalesLine.NEXT=0;
            }
            MfrRep.RESET;
            IF MfrRep.FINDSET THEN
              REPEAT
                RunReportOK := FALSE;
                SalesHeader.RESET;
                SalesLine.RESET;
                SalesLine.SETRANGE("Document Type",SalesLine."Document Type"::Order);
                //SalesLine.SETRANGE("Shipment Date",StartDate,EndDate);
                SalesLine.SETFILTER("Shipment Date",'<=%1&>%2& <%3',EndDate,StartDate,WORKDATE);
                SalesLine.SETFILTER("Outstanding Quantity",'<>%1',0);
                SalesLine.SETFILTER(Type,FORMAT(SalesLine.Type::Item));
                SalesLine.SETFILTER("Mfr. Rep. Code",MfrRep.Code);
                IF SalesLine.FINDSET THEN
                  REPEAT
                    IF SalesHeader.GET(SalesLine."Document Type",SalesLine."Document No.") THEN
                      IF SalesHeader.Status = SalesHeader.Status::Released THEN
                        RunReportOK := TRUE;
                  UNTIL SalesLine.NEXT=0;
                  IF RunReportOK THEN
                    REPORT.SAVEASEXCEL(51124,FilePath+MfrRep.Code+'.xlsx',SalesLine);
              UNTIL MfrRep.NEXT=0;
            //MESSAGE('done');
          END;

  }
  CODE
  {
    VAR
      SalesLine@1000000000 : Record 37;
      JobReportsEmail@1000000002 : Record 50015;
      FilePath@1000000003 : Text;
      SalesHeader@1000000004 : Record 36;
      Window@1000000005 : DotNet "'Microsoft.VisualBasic, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.Microsoft.VisualBasic.Interaction" RUNONCLIENT;
      InputStr@1000000006 : Text;
      StartDate@1000000007 : Date;
      EndDate@1000000008 : Date;
      MfrRep@1000000001 : Record 50027;
      RunReportOK@1000000009 : Boolean;

    BEGIN
    END.
  }
}

