OBJECT Codeunit 50008 Whse. Sales Post via Job Queue
{
  OBJECT-PROPERTIES
  {
    Date=09/30/21;
    Time=[ 4:47:09 AM];
    Modified=Yes;
    Version List=TPZ000.00.00,3367;
  }
  PROPERTIES
  {
    TableNo=472;
    OnRun=VAR
            SalesHeader@1000 : Record 36;
            SalesPostPrint@1002 : Codeunit 82;
            RecRef@1001 : RecordRef;
          BEGIN
            TESTFIELD("Record ID to Process");
            RecRef.GET("Record ID to Process");
            RecRef.SETTABLE(SalesHeader);
            SalesHeader.FIND;

            WhseShipmentLine.RESET;
            WhseShipmentLine.SETCURRENTKEY("Source Type","Source Subtype","Source No.","Source Line No.");
            WhseShipmentLine.SETRANGE("Source Type",DATABASE::"Sales Line");
            WhseShipmentLine.SETRANGE("Source Document",WhseShipmentLine."Source Document"::"Sales Order");
            WhseShipmentLine.SETRANGE("Source Subtype",SalesHeader."Document Type");
            WhseShipmentLine.SETRANGE("Source No.",SalesHeader."No.");
            IF NOT WhseShipmentLine.FINDFIRST THEN BEGIN
              SetJobQueueStatus(SalesHeader,SalesHeader."Job Queue Status"::Error);
              ERROR(Text50000,SalesHeader."Document Type",SalesHeader."No.");
            END;

            SetJobQueueStatus(SalesHeader,SalesHeader."Job Queue Status"::Posting);

            CLEAR(WhsePostShipment);
            WhsePostShipment.SetBatch(TRUE);
            WhsePostShipment.SetPrint(FALSE);
            WhsePostShipment.SetPostingSettings(TRUE);
            IF NOT WhsePostShipment.RUN(WhseShipmentLine) THEN BEGIN
              SetJobQueueStatus(SalesHeader,SalesHeader."Job Queue Status"::Error);
              ERROR(GETLASTERRORTEXT);
            END;

            SetJobQueueStatus(SalesHeader,SalesHeader."Job Queue Status"::" ");
          END;

  }
  CODE
  {
    VAR
      PostDescription@1000 : TextConst '@@@="%1 = document type, %2 = document number. Example: Post Sales Order 1234.";ENU=Post Sales %1 %2.;ESM=Registrar ventas %1 %2.;FRC=Reportez les ventes %1 %2.;ENC=Post Sales %1 %2.';
      PostAndPrintDescription@1002 : TextConst '@@@="%1 = document type, %2 = document number. Example: Post Sales Order 1234.";ENU=Post and Print Sales %1 %2.;ESM=Registrar e imprimir %1 ventas %2.;FRC=Reporter et imprimer les ventes %1 %2.;ENC=Post and Print Sales %1 %2.';
      Confirmation@1001 : TextConst '@@@="%1=document type, %2=number, e.g. Order 123  or Invoice 234.";ENU=%1 %2 has been scheduled for posting.;ESM=%1 %2 se ha programado para el registro.;FRC=%1 %2 a ‚t‚ planifi‚ pour report.;ENC=%1 %2 has been scheduled for posting.';
      WrongJobQueueStatus@1003 : TextConst '@@@="%1 = document type, %2 = document number. Example: Sales Order 1234 or Invoice 1234.";ENU=%1 %2 cannot be posted because it has already been scheduled for posting. Choose the Remove from Job Queue action to reset the job queue status and then post again.;ESM=%1 %2 no se puede registrar porque ya se ha programado para el registro. Elija la acci¢n Quitar de cola de proyecto para restablecer el estado de la cola de proyecto y vuelva a registrarlo.;FRC=Impossible de reporter %1 %2, car ce document a d‚j… ‚t‚ programm‚ pour report. Choisissez l''action Supprimer de la file d''attente des travaux pour r‚initialiser l''‚tat de la file des travaux, puis recommencez le report.;ENC=%1 %2 cannot be posted because it has already been scheduled for posting. Choose the Remove from Job Queue action to reset the job queue status and then post again.';
      Text50000@1000000000 : TextConst 'ENU=Warehouse lines for %1 %2 can''t be find.';
      SalesPost@1000000001 : Codeunit 80;
      WhseShipmentLine@1000000003 : Record 7321;
      WhsePostShipment@1000000002 : Codeunit 5763;

    LOCAL PROCEDURE SetJobQueueStatus@5(VAR SalesHeader@1001 : Record 36;NewStatus@1000 : Option);
    BEGIN
      SalesHeader.LOCKTABLE;
      IF SalesHeader.FIND THEN BEGIN
        SalesHeader."Job Queue Status" := NewStatus;
        SalesHeader.MODIFY;
        COMMIT;
      END;
    END;

    PROCEDURE EnqueueWhseDoc@1000000000(VAR SalesHeader@1000 : Record 36);
    VAR
      SalesSetup@1003 : Record 311;
      JobQueueEntry@1002 : Record 472;
      ShippingAgent@1000000000 : Record 291;
      Division@1000000001 : Record 51001;
      RecRef@1001 : RecordRef;
      TempInvoice@1006 : Boolean;
      TempRcpt@1005 : Boolean;
      TempShip@1004 : Boolean;
      Location@1000000002 : Record 14;
    BEGIN
      SalesSetup.GET;
      IF NOT SalesSetup."Post from Whse. with Job Q." THEN
        EXIT;

      // <TPZ1061>
      IF Division.GET(SalesHeader."Shortcut Dimension 5 Code") AND
         NOT Division."Enable Post with Job Queue"
      THEN
        EXIT;
      // </TPZ1061>

      //<TPZ1559>
      RecRef.GETTABLE(SalesHeader);
      JobQueueEntry.SETRANGE(Status, JobQueueEntry.Status::Ready);
      JobQueueEntry.SETRANGE("Object Type to Run", JobQueueEntry."Object Type to Run"::Codeunit);
      JobQueueEntry.SETRANGE("Object ID to Run", CODEUNIT::"Whse. Sales Post via Job Queue");
      JobQueueEntry.SETRANGE("Record ID to Process", RecRef.RECORDID);
      IF JobQueueEntry.ISEMPTY() = FALSE THEN
        EXIT;

      JobQueueEntry.RESET;
      //</TPZ1559>


      WITH SalesHeader DO BEGIN
        TempInvoice := Invoice;
        TempRcpt := Receive;
        TempShip := Ship;
        IF Status = Status::Open THEN
          CODEUNIT.RUN(CODEUNIT::"Release Sales Document",SalesHeader);
        Invoice := TempInvoice;
        Receive := TempRcpt;
        Ship := TempShip;

        IF ("Posting Date" = 0D) OR ("Posting Date" < WORKDATE) THEN BEGIN
          IF ShippingAgent.GET("Shipping Agent Code") AND
             (ShippingAgent.Type = ShippingAgent.Type::"Local")
          THEN BEGIN
            "Posting Date" := CALCDATE('+1D',WORKDATE);
            IF DATE2DWY(TODAY,1) = 5 THEN
              "Posting Date" :=  CALCDATE('+2D',"Posting Date");
          END ELSE
            "Posting Date" := WORKDATE;
        END;
        VALIDATE("Posting Date");//PKS
        "Job Queue Status" := "Job Queue Status"::"Scheduled for Posting";
        "Job Queue Entry ID" := CREATEGUID;
        MODIFY;

        UpdateWsheShipmentPostingDate("No.","Posting Date");

        RecRef.GETTABLE(SalesHeader);
        JobQueueEntry.ID := "Job Queue Entry ID";

        JobQueueEntry."Object Type to Run" := JobQueueEntry."Object Type to Run"::Codeunit;
        JobQueueEntry."Object ID to Run" := CODEUNIT::"Whse. Sales Post via Job Queue";
        JobQueueEntry."Record ID to Process" := RecRef.RECORDID;
        JobQueueEntry."Job Queue Category Code" := SalesSetup."Job Queue Category Code";
        // Set Timeout to prevent the Job Queue from hanging (eg. as a result of a printer dialog).
        JobQueueEntry."Timeout (sec.)" := 7200;
        IF SalesSetup."Post from Whse. Start Time" <> 0T THEN
          JobQueueEntry."Earliest Start Date/Time" := CREATEDATETIME(CALCDATE('+1D',TODAY),SalesSetup."Post from Whse. Start Time"); //<TPZ1959>
        JobQueueEntry.Priority := SalesSetup."Job Q. Prio. for P. from Whse.";
        //<TPZ1559>
        IF Location.GET("Location Code") THEN BEGIN
          IF Location."Post from Whse. Start Time" <> 0T THEN
            JobQueueEntry."Earliest Start Date/Time" := CREATEDATETIME(TODAY,Location."Post from Whse. Start Time");
        END;
        //</TPZ1559>
        JobQueueEntry.Description :=
          COPYSTR(STRSUBSTNO(PostDescription,"Document Type","No."),1,MAXSTRLEN(JobQueueEntry.Description));
        //TM Test Job queue security 2018-01-12


        JobQueueEntry.INSERT(TRUE);

        CODEUNIT.RUN(CODEUNIT::"Job Queue - Enqueue",JobQueueEntry);
        //TM
      END;
    END;

    PROCEDURE CancelQueueEntry@2(VAR SalesHeader@1000 : Record 36);
    VAR
      JobQueueEntry@1002 : Record 472;
      RecRef@1001 : RecordRef;
    BEGIN
      WITH SalesHeader DO BEGIN
        IF "Job Queue Status" = "Job Queue Status"::" " THEN
          EXIT;
        RecRef.GETTABLE(SalesHeader);
        IF NOT ISNULLGUID("Job Queue Entry ID") THEN
          JobQueueEntry.SETRANGE(ID,"Job Queue Entry ID");
        JobQueueEntry.SETRANGE("Record ID to Process",RecRef.RECORDID);
        IF NOT JobQueueEntry.ISEMPTY THEN
          JobQueueEntry.DELETEALL;
        "Job Queue Status" := "Job Queue Status"::" ";
        MODIFY;
      END;
    END;

    PROCEDURE UpdateWsheShipmentPostingDate@1000000001(DocNo@1000000000 : Code[20];PostingDate@1000000001 : Date);
    VAR
      WhseShipmentHeader@1000000002 : Record 7320;
      WhseShptLine@1000000003 : Record 7321;
    BEGIN
      WhseShipmentHeader.RESET;
      WhseShipmentHeader.SETRANGE("Source Type",37);
      WhseShipmentHeader.SETRANGE("Source No.",DocNo);
      IF WhseShipmentHeader.FINDFIRST THEN BEGIN
        WhseShipmentHeader."Posting Date" := PostingDate;
        //-->TPZ3367
        IF WhseShipmentHeader."Shipment Date" <> PostingDate THEN BEGIN
          WhseShipmentHeader."Shipment Date" := PostingDate;//
          WhseShptLine.SETRANGE("No.",WhseShipmentHeader."No.");
          IF NOT WhseShptLine.ISEMPTY THEN
            WhseShptLine.MODIFYALL("Shipment Date",WhseShipmentHeader."Shipment Date");
        END;
        //<--TPZ3367
        WhseShipmentHeader.MODIFY;
      END;
    END;

    BEGIN
    {
      2015-07-20 TPZ162 TAKHMETO
        Codeunit has been created
      2015-10-04 TPZ1061 TAKHMETO
        EnqueueWhseDoc function has been modified
      2016-05-15 TPZ1559 TMEI
        Prevent system from creating more than one entry.
      2016-06-30 TPZ1559
        make CA posting to schedule in Eastern Time
      2017-11-13 TPZ1959
        Move invoicing job to 1:00 AM
      001 TPZ3367 PKS 09292021 Added code to update shipment date as per posting date
    }
    END.
  }
}

