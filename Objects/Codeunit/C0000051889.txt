OBJECT Codeunit 51889 Page392EventSubscriber
{
  OBJECT-PROPERTIES
  {
    Date=06/30/21;
    Time=12:26:17 PM;
    Modified=Yes;
    Version List=TPZ000.00.00,3224;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      TempExcelBuffer@1000000002 : TEMPORARY Record 370;
      FileMgt@1000000001 : Codeunit 419;
      ServerFileName@1000000000 : Text;

    [EventSubscriber(Page,392,OnBeforeActionEvent,Action34)]
    LOCAL PROCEDURE Pg392_Post@1170000012(VAR Rec@1170000000 : Record 83);
    VAR
      ItemJnlLine@1170000001 : Record 83;
    BEGIN
      WITH Rec DO BEGIN
        //<TPZ1974>
        ItemJnlLine.COPY(Rec);
        ItemJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
        ItemJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
        IF ItemJnlLine.FINDSET THEN BEGIN
          REPEAT
            ItemJnlLine.TESTFIELD("Reason Code");
          UNTIL ItemJnlLine.NEXT = 0;
        END;
        //</TPZ1974>
      END;
    END;

    [EventSubscriber(Page,392,OnBeforeActionEvent,Action35)]
    LOCAL PROCEDURE Pg392_PostandPrint@1170000019(VAR Rec@1170000000 : Record 83);
    VAR
      ItemJnlLine@1170000001 : Record 83;
    BEGIN
      WITH Rec DO BEGIN
        //<TPZ1974>
        ItemJnlLine.COPY(Rec);
        ItemJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
        ItemJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
        IF ItemJnlLine.FINDSET THEN BEGIN
          REPEAT
            ItemJnlLine.TESTFIELD("Reason Code");
          UNTIL ItemJnlLine.NEXT = 0;
        END;
        //</TPZ1974>
      END;
    END;

    [EventSubscriber(Page,392,OnAfterActionEvent,"Zero Out Quantity")]
    LOCAL PROCEDURE PG392_ZeroOutQuantity@1000000000(VAR Rec@1000000001 : Record 83);
    VAR
      ItemJnlLineLoc@1000000000 : Record 83;
    BEGIN
      //TPZ3224
      //ItemJnlLineLoc.COPY(Rec);
      ItemJnlLineLoc.RESET;
      ItemJnlLineLoc.SETRANGE("Journal Template Name",Rec."Journal Template Name");
      ItemJnlLineLoc.SETRANGE("Journal Batch Name",Rec."Journal Batch Name");
      IF ItemJnlLineLoc.FINDSET THEN
        REPEAT
          ItemJnlLineLoc.VALIDATE("Qty. (Phys. Inventory)",0);
          ItemJnlLineLoc.MODIFY;
        UNTIL ItemJnlLineLoc.NEXT = 0;
    END;

    [EventSubscriber(Page,392,OnAfterActionEvent,"Export Journal To Excel")]
    LOCAL PROCEDURE PG392_ExportJournaltoExcel@1000000001(VAR Rec@1000000001 : Record 83);
    VAR
      ItemJnlLineLoc@1000000000 : Record 83;
      RowNo@1000000002 : Integer;
      ColumnNo@1000000003 : Integer;
    BEGIN
      //TPZ3224
      ItemJnlLineLoc.RESET;
      ItemJnlLineLoc.SETRANGE("Journal Template Name",Rec."Journal Template Name");
      ItemJnlLineLoc.SETRANGE("Journal Batch Name",Rec."Journal Batch Name");
      ItemJnlLineLoc.SETFILTER("Item No.",'<>%1','');
      IF ItemJnlLineLoc.FINDSET THEN BEGIN
        RowNo := 1;
        EnterCell(RowNo,1,'Item No.',TRUE,'@',1);
        EnterCell(RowNo,2,'Location Code',TRUE,'@',1);
        EnterCell(RowNo,3,'Quantity',TRUE,'0',0);
        EnterCell(RowNo,4,'Unit Cost',TRUE,'0.00',0);
        REPEAT
          RowNo += 1; ColumnNo := 1;
          EnterCell(RowNo,ColumnNo,ItemJnlLineLoc."Item No.",FALSE,'@',1);
          ColumnNo += 1;
          EnterCell(RowNo,ColumnNo,ItemJnlLineLoc."Location Code",FALSE,'@',1);
          ColumnNo += 1;
          EnterCell(RowNo,ColumnNo,FORMAT(ItemJnlLineLoc.Quantity),FALSE,'0',0);
          ColumnNo += 1;
          EnterCell(RowNo,ColumnNo,FORMAT(ItemJnlLineLoc."Unit Cost"),FALSE,'0.00',0);
        UNTIL ItemJnlLineLoc.NEXT = 0;
        ExporttoExcel;
      END;
    END;

    LOCAL PROCEDURE ExporttoExcel@1000000006();
    BEGIN
      TempExcelBuffer.CreateBook('' ,'Phy. Inventory Journal');
      TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
      TempExcelBuffer.CloseBook;
      TempExcelBuffer.OpenExcel;
      TempExcelBuffer.GiveUserControl;
    END;

    LOCAL PROCEDURE EnterCell@2(RowNo@1000 : Integer;ColumnNo@1001 : Integer;CellValue@1002 : Text[250];Bold@1003 : Boolean;Format@1006 : Text[30];CellType@1007 : Option);
    BEGIN
      //Number,Text,Date,Time
      TempExcelBuffer.INIT;
      TempExcelBuffer.VALIDATE("Row No.",RowNo);
      TempExcelBuffer.VALIDATE("Column No.",ColumnNo);
      TempExcelBuffer."Cell Value as Text" := CellValue;
      TempExcelBuffer.Formula := '';
      TempExcelBuffer.Bold := Bold;
      TempExcelBuffer.NumberFormat := Format;
      TempExcelBuffer."Cell Type" := CellType;
      TempExcelBuffer.INSERT;
    END;

    BEGIN
    {
      001 TPZ3224 PKS 06162021 Added new action to zero out qty and export journal data to excel
    }
    END.
  }
}

