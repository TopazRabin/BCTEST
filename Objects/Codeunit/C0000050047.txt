OBJECT Codeunit 50047 TPZ Sales-Post Schedule
{
  OBJECT-PROPERTIES
  {
    Date=07/01/20;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    TableNo=36;
    OnRun=BEGIN
            SalesHeader.COPY(Rec);
            Code;
            Rec := SalesHeader;
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Ship &and Invoice;ESM=&Enviar,&Facturar,E&nviar y facturar;FRC=&Livrer,&Facturer,Livrer &et Facturer;ENC=&Ship,&Invoice,Ship &and Invoice';
      Text001@1001 : TextConst 'ENU=Do you want to post the %1?;ESM=¨Confirma que desea registrar el/la %1?;FRC=D‚sirez-vous reporter la %1?;ENC=Do you want to post the %1?';
      Text002@1002 : TextConst 'ENU=&Receive,&Invoice,Receive &and Invoice;ESM=&Recibir,&Facturar,R&ecibir y facturar;FRC=&R‚ception,&Facture,R‚ception &et Facture;ENC=&Receive,&Invoice,Receive &and Invoice';
      Location@1000000000 : Record 14;
      SalesHeader@1003 : Record 36;
      SalesLine@1000000002 : Record 37;
      Selection@1005 : Integer;
      PostFrom@1000000001 : Code[10];

    LOCAL PROCEDURE Code@1();
    VAR
      SalesSetup@1002 : Record 311;
      SalesPostViaJobQueue@1000 : Codeunit 88;
      TPZSalesPostviaJobQueue@1000000000 : Codeunit 50045;
    BEGIN
      SalesSetup.GET;
      WITH SalesHeader DO BEGIN

        //TPZ1956>>>
        IF "Shortcut Dimension 5 Code" <> 'I' THEN BEGIN //<TPZ2421>
            Location.RESET;
            Location.SETRANGE("Require Shipment",FALSE);
            Location.SETRANGE(Code,SalesHeader."Location Code");
            IF Location.FINDSET THEN BEGIN

            CASE "Document Type" OF
              "Document Type"::Order:
                BEGIN
                  Selection := STRMENU(Text000,1);
                  IF Selection = 0 THEN
                    EXIT;
                  Ship := TRUE;
                  Invoice := TRUE;
                END;
              ELSE
                IF NOT
                   CONFIRM(
                     Text001,FALSE,
                     "Document Type")
                THEN
                  EXIT;
            END;
            "Print Posted Documents" := FALSE;
            ValidatePosting;
            //TPZ1957>>>
            IF (SalesSetup."Post from Whse. with Job Q.") THEN
              TPZSalesPostviaJobQueue.EnqueueSalesDoc(SalesHeader);
            END;
            //TPZ1957<<<
        END ELSE BEGIN //<TPZ2421>

          CASE "Document Type" OF
            "Document Type"::Order:
              BEGIN
                Selection := STRMENU(Text000,1);
                IF Selection = 0 THEN
                  EXIT;
                Ship := TRUE;
                Invoice := TRUE;
              END;
            ELSE
              IF NOT
                 CONFIRM(
                   Text001,FALSE,
                   "Document Type")
              THEN
                EXIT;
          END;
          "Print Posted Documents" := FALSE;
          ValidatePosting;
          //TPZ1957>>>
          IF (SalesSetup."Post from Whse. with Job Q.") THEN
            TPZSalesPostviaJobQueue.EnqueueSalesDoc(SalesHeader);
          //END;
          //TPZ1957<<<
        END;
        //</TPZ2421>
      END;
    END;

    PROCEDURE ValidatePosting@1000000000();
    VAR
      Item@1000000000 : Record 27;
      ItemMgt@1000000001 : Codeunit 50020;
      QtyAvail@1000000002 : Decimal;
    BEGIN
      WITH SalesHeader DO BEGIN
        TESTFIELD("On Hold",'');
        TESTFIELD("Document Type");
        TESTFIELD("Sell-to Customer No.");
        TESTFIELD("Bill-to Customer No.");
        TESTFIELD("Posting Date");
        TESTFIELD("Document Date");
        TESTFIELD("Shortcut Dimension 5 Code");

        CheckCustBlockage("Sell-to Customer No.",TRUE);
        IF "Bill-to Customer No." <> "Sell-to Customer No." THEN
          CheckCustBlockage("Bill-to Customer No.",FALSE);
       IF SalesHeader."Shortcut Dimension 5 Code"<>'I' THEN BEGIN //eb
          SalesLine.RESET;
          SalesLine.SETRANGE("Document Type",SalesHeader."Document Type");
          SalesLine.SETRANGE("Document No.",SalesHeader."No.");
          SalesLine.SETFILTER("Qty. to Ship",'<>0');
          SalesLine.SETRANGE("Shipment No.",'');
          IF SalesLine.FIND('-') = FALSE THEN
            ERROR('There is nothing to post!');
       END;
        REPEAT
         //<TPZ2082>
         IF SalesLine.Type = SalesLine.Type :: Item THEN BEGIN //<TPZ2421>
           Item.GET(SalesLine."No.");
           Item.SETFILTER("Location Filter",SalesLine."Location Code");
           Item.SETFILTER("No.",SalesLine."No.");
           Item.CALCFIELDS(Item.Inventory, Item."Qty. on Sales Order", "Trans. Ord. Shipment (Qty.)");
           QtyAvail := Item.Inventory - Item."Qty. on Sales Order" - Item."Trans. Ord. Shipment (Qty.)" +
                          SalesLine."Outstanding Qty. (Base)" - SalesLine."Qty. to Ship (Base)";
           IF QtyAvail < 0 THEN
             IF CONFIRM('Item %1 does not have enough Available Inventory to cover all outstanding SOs, do you still want to schedule it to post?', FALSE, Item."No.") = FALSE THEN
               ERROR('Schedule to Post is cancelled.');
           //ERROR(STRSUBSTNO('Item %1 does not have enough Inventory',Item."No."));
           //</TPZ2082>
         END; //<TPZ2421>
        UNTIL SalesLine.NEXT=0;
      END;
    END;

    PROCEDURE CheckCustBlockage@1029(CustCode@1011 : Code[20];ExecuteDocCheck@1012 : Boolean);
    VAR
      Cust@1039 : Record 18;
    BEGIN
      Cust.GET(CustCode);
      IF SalesHeader.Receive THEN
        Cust.CheckBlockedCustOnDocs(Cust,SalesHeader."Document Type",FALSE,TRUE)
      ELSE BEGIN
        IF SalesHeader.Ship THEN BEGIN
          SalesLine.RESET;
          SalesLine.SETRANGE("Document Type",SalesHeader."Document Type");
          SalesLine.SETRANGE("Document No.",SalesHeader."No.");
          SalesLine.SETFILTER("Qty. to Ship",'<>0');
          SalesLine.SETRANGE("Shipment No.",'');
          IF NOT SalesLine.ISEMPTY THEN
            Cust.CheckBlockedCustOnDocs(Cust,SalesHeader."Document Type",TRUE,TRUE);
        END ELSE
          Cust.CheckBlockedCustOnDocs(Cust,SalesHeader."Document Type",FALSE,TRUE);
      END;
    END;

    BEGIN
    {
      20170824 TPZ1956 CJOSIC - Schedule International Orders for Overnight Posting (20170717)
      20170908 TPZ1957 CJOSIC - Schedule Non International Order for Overnight Posting (20170717)
      2017-11-09 TPZ2082 TMEI
        Check against available quantity instead of total qty. on hand.
      2018-09-21 TPZ2421 UCHOUHAN
        Added Division Code condition for International schedule Posting.
    }
    END.
  }
}

