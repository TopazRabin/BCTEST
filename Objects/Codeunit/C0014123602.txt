OBJECT Codeunit 14123602 ES Relation Management
{
  OBJECT-PROPERTIES
  {
    Date=04/30/18;
    Time=12:00:00 PM;
    Version List=ES1.41.51;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'ENU=Adding Relations to Permission Set\';
      Text002@1002 : TextConst 'ENU=Process #1################################################';
      Text003@1003 : TextConst 'ENU=Adding related permissions';
      Text004@1004 : TextConst 'ENU=%1 Additional permissions added.';
      Text006@1006 : TextConst 'ENU=Adding Relations to Permission Set Detail\';
      ESSecuritySetup@1240520001 : Record 14123521;

    PROCEDURE AddRelatedPermsToRole@1240520009(VAR ESRolePerm@1240520008 : Record 14123506;ShowStatus@1240520010 : Boolean;ExecuteValidate@1240520012 : Boolean);
    VAR
      ESRolePerm2@1240520009 : Record 14123506;
      Window@1240520011 : Dialog;
      InsertedRecords@1240520013 : Integer;
    BEGIN
      ESRolePerm.SETRANGE("Object Type",ESRolePerm."Object Type"::TableData);
      ESRolePerm.SETFILTER(Origin,'%1|%2',ESRolePerm.Origin::Recorded,ESRolePerm.Origin::Builder);
      ESRolePerm.FIND('-');

      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text001) + Text002);

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text003);
      AddRelatedPermsToRole2(ESRolePerm,ESRolePerm2,InsertedRecords,ExecuteValidate,FALSE);

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text004,InsertedRecords);
    END;

    PROCEDURE AddRelatedPermsToRole2@1240520010(VAR ESRolePerm@1240520008 : Record 14123506;VAR ESRolePerm2@1240520009 : Record 14123506;VAR InsertedRecords@1240520010 : Integer;ExecuteValidate@1240520013 : Boolean;OnlyCurrentRecord@1240520001 : Boolean);
    VAR
      ESRelation@1240520012 : Record 14123601;
      ESSecuritySetup@1240520011 : Record 14123521;
    BEGIN
      IF NOT OnlyCurrentRecord THEN
        IF NOT ESRolePerm.FIND('-') THEN
          EXIT;

      ESSecuritySetup.GET;

      REPEAT
        CASE ESRolePerm."Object Type" OF
          ESRolePerm."Object Type"::TableData:
            BEGIN
              IF ((ESRolePerm."Read Permission" = ESRolePerm."Read Permission"::Yes) OR
                  (ESRolePerm."Insert Permission" = ESRolePerm."Insert Permission"::Yes) OR
                  (ESRolePerm."Modify Permission" = ESRolePerm."Modify Permission"::Yes)) AND
                 ((ESRolePerm.Origin = ESRolePerm.Origin::Recorded) OR
                  (ESRolePerm.Origin = ESRolePerm.Origin::Builder)) AND
                 NOT ESRolePerm."Do not include Additional"
              THEN BEGIN
                ESRelation.RESET;
                ESRelation.SETRANGE("Object Type",ESRolePerm."Object Type"::Table);
                ESRelation.SETRANGE("Object ID",ESRolePerm."Object ID");
                ESRelation.SETFILTER(
                  Type,'%1|%2|%3',
                  ESRelation.Type::"Table Relation",ESRelation.Type::Flowfield,
                  ESRelation.Type::Manual);
                ESRelation.SETRANGE(
                  "Relation Object Type",ESRelation."Relation Object Type"::TableData);
                ESRelation.SETFILTER("Relation Object ID",'<>0');
                IF ESRelation.FIND('-') THEN
                  REPEAT
                    IF (ESRolePerm."Insert Permission" = ESRolePerm."Insert Permission"::Yes) OR
                       (ESRolePerm."Modify Permission" = ESRolePerm."Modify Permission"::Yes) OR
                       (ESRelation.Type <> ESRelation.Type::"Table Relation")
                    THEN
                      AddRelatedPermToRole(
                        ESRolePerm,ESRolePerm2,InsertedRecords,ExecuteValidate,ESRelation,ESSecuritySetup);
                    UNTIL ESRelation.NEXT = 0;
              END;
            END;
          ESRolePerm."Object Type"::"2",
          ESRolePerm."Object Type"::Page,
          ESRolePerm."Object Type"::Report:
            IF ESRolePerm."Execute Permission" = ESRolePerm."Execute Permission"::Yes THEN BEGIN
              ESRelation.RESET;
              ESRelation.SETRANGE("Object Type",ESRolePerm."Object Type");
              ESRelation.SETRANGE("Object ID",ESRolePerm."Object ID");
              ESRelation.SETRANGE(Type,ESRelation.Type::Manual);
              ESRelation.SETRANGE(
                "Relation Object Type",ESRelation."Relation Object Type"::TableData);
              ESRelation.SETFILTER("Relation Object ID",'<>0');
              IF ESRelation.FIND('-') THEN
                REPEAT
                  AddRelatedPermToRole(
                    ESRolePerm,ESRolePerm2,InsertedRecords,ExecuteValidate,ESRelation,ESSecuritySetup);
                UNTIL ESRelation.NEXT = 0;

              IF (ESRolePerm."Object Type" = ESRolePerm."Object Type"::Page) AND
                 ESSecuritySetup."Add Execute to FactBox on Page"
              THEN BEGIN
                ESRelation.RESET;
                ESRelation.SETRANGE("Object Type",ESRolePerm."Object Type");
                ESRelation.SETRANGE("Object ID",ESRolePerm."Object ID");
                ESRelation.SETRANGE(Type,ESRelation.Type::PagePartID);
                ESRelation.SETRANGE(
                  "Relation Object Type",ESRelation."Relation Object Type"::Page);
                ESRelation.SETFILTER("Relation Object ID",'<>0');
                IF ESRelation.FIND('-') THEN
                  REPEAT
                    AddRelatedPermToRole(
                      ESRolePerm,ESRolePerm2,InsertedRecords,ExecuteValidate,ESRelation,
                      ESSecuritySetup);
                  UNTIL ESRelation.NEXT = 0;
              END;
            END;
        END;
      UNTIL (ESRolePerm.NEXT = 0) OR OnlyCurrentRecord;
    END;

    LOCAL PROCEDURE AddRelatedPermToRole@1240520011(VAR ESRolePerm@1240520010 : Record 14123506;VAR ESRolePerm2@1240520009 : Record 14123506;VAR InsertedRecords@1240520008 : Integer;ExecuteValidate@1240520013 : Boolean;ESRelation@1240520012 : Record 14123601;ESSecuritySetup@1240520011 : Record 14123521);
    VAR
      ESObjectInfo@1240520001 : Record 14123509;
    BEGIN
      IF ESRelation."Relation Object Type" = ESRelation."Relation Object Type"::TableData THEN BEGIN
        IF NOT ESRolePerm2.GET(
                 ESRolePerm."Role ID",
                 ESRelation."Relation Object Type",ESRelation."Relation Object ID")
        THEN BEGIN
          ESRolePerm2.INIT;
          ESRolePerm2."Role ID" := ESRolePerm."Role ID";
          ESRolePerm2."Object Type" := ESRelation."Relation Object Type";
          ESRolePerm2."Object ID" := ESRelation."Relation Object ID";
          IF (ESRelation.Type = ESRelation.Type::Flowfield) AND
             ESSecuritySetup."Use Indirect for FlowFields"
          THEN
            ESRolePerm2."Read Permission" := ESRolePerm2."Read Permission"::Indirect
          ELSE
            ESRolePerm2."Read Permission" := ESRolePerm2."Read Permission"::Yes;
          ESRolePerm2."Insert Permission" := ESRolePerm2."Insert Permission"::" ";
          ESRolePerm2."Modify Permission" := ESRolePerm2."Modify Permission"::" ";
          ESRolePerm2."Delete Permission" := ESRolePerm2."Delete Permission"::" ";
          ESRolePerm2."Execute Permission" := ESRolePerm2."Execute Permission"::" ";
          ESRolePerm2.Origin := ESRolePerm2.Origin::Additional;
          IF ESObjectInfo.GET(ESRolePerm2."Object Type",ESRolePerm2."Object ID") THEN
            IF ExecuteValidate THEN
              ESRolePerm2.INSERT(TRUE)
            ELSE
              ESRolePerm2.INSERT;

          InsertedRecords := InsertedRecords + 1;
        END ELSE
          CASE TRUE OF
            (ESRelation.Type <> ESRelation.Type::Flowfield) AND
            ((ESRolePerm2."Read Permission" = ESRolePerm2."Read Permission"::" ") OR
             (ESRolePerm2."Read Permission" = ESRolePerm2."Read Permission"::Indirect)):
              BEGIN
                ESRolePerm2."Read Permission" := ESRolePerm2."Read Permission"::Yes;
                ESRolePerm2.Origin := ESRolePerm2.Origin::Additional;
                IF ExecuteValidate THEN
                  ESRolePerm2.MODIFY(TRUE)
                ELSE
                  ESRolePerm2.MODIFY;
              END;
            (ESRelation.Type = ESRelation.Type::Flowfield) AND
            ((ESRolePerm2."Read Permission" = ESRolePerm2."Read Permission"::" ") OR
             (ESRolePerm2."Read Permission" = ESRolePerm2."Read Permission"::Indirect)) AND
            NOT ESSecuritySetup."Use Indirect for FlowFields":
              BEGIN
                ESRolePerm2."Read Permission" := ESRolePerm2."Read Permission"::Yes;
                ESRolePerm2.Origin := ESRolePerm2.Origin::Additional;
                IF ExecuteValidate THEN
                  ESRolePerm2.MODIFY(TRUE)
                ELSE
                  ESRolePerm2.MODIFY;
              END;
            (ESRelation.Type = ESRelation.Type::Flowfield) AND
            (ESRolePerm2."Read Permission" = ESRolePerm2."Read Permission"::" ") AND
            ESSecuritySetup."Use Indirect for FlowFields":
              BEGIN
                ESRolePerm2."Read Permission" := ESRolePerm2."Read Permission"::Indirect;
                ESRolePerm2.Origin := ESRolePerm2.Origin::Additional;
                IF ExecuteValidate THEN
                  ESRolePerm2.MODIFY(TRUE)
                ELSE
                  ESRolePerm2.MODIFY;
              END;
          END;
      END ELSE BEGIN
        IF NOT ESRolePerm2.GET(
                 ESRolePerm."Role ID",
                 ESRelation."Relation Object Type",ESRelation."Relation Object ID")
        THEN BEGIN
          ESRolePerm2.INIT;
          ESRolePerm2."Role ID" := ESRolePerm."Role ID";
          ESRolePerm2."Object Type" := ESRelation."Relation Object Type";
          ESRolePerm2."Object ID" := ESRelation."Relation Object ID";
          ESRolePerm2."Read Permission" := ESRolePerm2."Read Permission"::" ";
          ESRolePerm2."Insert Permission" := ESRolePerm2."Insert Permission"::" ";
          ESRolePerm2."Modify Permission" := ESRolePerm2."Modify Permission"::" ";
          ESRolePerm2."Delete Permission" := ESRolePerm2."Delete Permission"::" ";
          ESRolePerm2."Execute Permission" := ESRolePerm2."Execute Permission"::Yes;
          ESRolePerm2.Origin := ESRolePerm2.Origin::Additional;
          IF ESObjectInfo.GET(ESRolePerm2."Object Type",ESRolePerm2."Object ID") THEN
            IF ExecuteValidate THEN
              ESRolePerm2.INSERT(TRUE)
            ELSE
              ESRolePerm2.INSERT;

          InsertedRecords := InsertedRecords + 1;
        END ELSE
          IF ESRolePerm."Execute Permission" <> ESRolePerm."Execute Permission"::Yes THEN BEGIN
            ESRolePerm."Execute Permission" := ESRolePerm."Execute Permission"::Yes;

            IF ExecuteValidate THEN
              ESRolePerm2.MODIFY(TRUE)
            ELSE
              ESRolePerm2.MODIFY;
          END;
      END;
    END;

    PROCEDURE AddRelatedPermsToRoleDetail@1240520008(VAR ESRoleBuilderPerm@1240520008 : Record 14123655;ShowStatus@1240520010 : Boolean);
    VAR
      ESRoleBuilderPerm2@1240520009 : Record 14123655;
      Window@1240520011 : Dialog;
      InsertedRecords@1240520013 : Integer;
    BEGIN
      IF ESRoleBuilderPerm.Origin <> ESRoleBuilderPerm.Origin::Recorded THEN
        ESRoleBuilderPerm.TESTFIELD(Origin,ESRoleBuilderPerm.Origin::Builder);
      ESRoleBuilderPerm.TESTFIELD("To Object ID",0);
      ESRoleBuilderPerm.FIND('-');

      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text006) + Text002);

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text003);
      AddRelatedPermsToRoleDetail2(ESRoleBuilderPerm,ESRoleBuilderPerm2,InsertedRecords);

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text004,InsertedRecords);
    END;

    PROCEDURE AddRelatedPermsToRoleDetail2@1240520015(VAR ESRoleBuilderPerm@1240520008 : Record 14123655;VAR ESRoleBuilderPerm2@1240520009 : Record 14123655;VAR InsertedRecords@1240520010 : Integer);
    VAR
      ESRelation@1240520012 : Record 14123601;
      ESSecuritySetup@1240520011 : Record 14123521;
    BEGIN
      IF ESRoleBuilderPerm.FIND('-') THEN BEGIN
        ESSecuritySetup.GET;

        REPEAT
          ESRoleBuilderPerm.TESTFIELD("To Object ID",0);

          CASE ESRoleBuilderPerm."Object Type" OF
            ESRoleBuilderPerm."Object Type"::TableData:
              BEGIN
                IF ((ESRoleBuilderPerm."Read Permission" = ESRoleBuilderPerm."Read Permission"::Yes) OR
                    (ESRoleBuilderPerm."Insert Permission" = ESRoleBuilderPerm."Insert Permission"::Yes) OR
                    (ESRoleBuilderPerm."Modify Permission" = ESRoleBuilderPerm."Modify Permission"::Yes)) AND
                   ((ESRoleBuilderPerm.Origin = ESRoleBuilderPerm.Origin::Recorded) OR
                    (ESRoleBuilderPerm.Origin = ESRoleBuilderPerm.Origin::Builder)) AND
                   NOT ESRoleBuilderPerm."Do not include Additional"
                THEN BEGIN
                  ESRelation.RESET;
                  ESRelation.SETRANGE("Object Type",ESRoleBuilderPerm."Object Type"::Table);
                  ESRelation.SETRANGE("Object ID",ESRoleBuilderPerm."Object ID");
                  ESRelation.SETFILTER(
                    Type,'%1|%2|%3',
                    ESRelation.Type::"Table Relation",ESRelation.Type::Flowfield,
                    ESRelation.Type::Manual);
                  ESRelation.SETRANGE(
                    "Relation Object Type",ESRelation."Relation Object Type"::TableData);
                  ESRelation.SETFILTER("Relation Object ID",'<>0');
                  IF ESRelation.FIND('-') THEN
                    REPEAT
                      IF (ESRoleBuilderPerm."Insert Permission" = ESRoleBuilderPerm."Insert Permission"::Yes) OR
                         (ESRoleBuilderPerm."Modify Permission" = ESRoleBuilderPerm."Modify Permission"::Yes) OR
                         (ESRelation.Type <> ESRelation.Type::"Table Relation")
                      THEN
                        AddRelatedPermToRoleDetail(
                          ESRoleBuilderPerm,ESRoleBuilderPerm2,InsertedRecords,ESRelation,ESSecuritySetup);
                    UNTIL ESRelation.NEXT = 0;
                END;
              END;
            ESRoleBuilderPerm."Object Type"::"2",
            ESRoleBuilderPerm."Object Type"::Page,
            ESRoleBuilderPerm."Object Type"::Report:
              IF ESRoleBuilderPerm."Execute Permission" = ESRoleBuilderPerm."Execute Permission"::Yes THEN BEGIN
                ESRelation.RESET;
                ESRelation.SETRANGE("Object Type",ESRoleBuilderPerm."Object Type");
                ESRelation.SETRANGE("Object ID",ESRoleBuilderPerm."Object ID");
                ESRelation.SETRANGE(Type,ESRelation.Type::Manual);
                ESRelation.SETRANGE(
                  "Relation Object Type",ESRelation."Relation Object Type"::TableData);
                ESRelation.SETFILTER("Relation Object ID",'<>0');
                IF ESRelation.FIND('-') THEN
                  REPEAT
                    AddRelatedPermToRoleDetail(
                      ESRoleBuilderPerm,ESRoleBuilderPerm2,InsertedRecords,ESRelation,ESSecuritySetup);
                  UNTIL ESRelation.NEXT = 0;

                IF (ESRoleBuilderPerm."Object Type" = ESRoleBuilderPerm."Object Type"::Page) AND
                   ESSecuritySetup."Add Execute to FactBox on Page"
                THEN BEGIN
                  ESRelation.RESET;
                  ESRelation.SETRANGE("Object Type",ESRoleBuilderPerm."Object Type");
                  ESRelation.SETRANGE("Object ID",ESRoleBuilderPerm."Object ID");
                  ESRelation.SETRANGE(Type,ESRelation.Type::PagePartID);
                  ESRelation.SETRANGE(
                    "Relation Object Type",ESRelation."Relation Object Type"::Page);
                  ESRelation.SETFILTER("Relation Object ID",'<>0');
                  IF ESRelation.FIND('-') THEN
                    REPEAT
                      AddRelatedPermToRoleDetail(
                        ESRoleBuilderPerm,ESRoleBuilderPerm2,InsertedRecords,ESRelation,ESSecuritySetup);
                    UNTIL ESRelation.NEXT = 0;
                END;
              END;
          END;
        UNTIL ESRoleBuilderPerm.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE AddRelatedPermToRoleDetail@1240520013(VAR ESRoleBuilderPerm@1240520010 : Record 14123655;VAR ESRoleBuilderPerm2@1240520009 : Record 14123655;VAR InsertedRecords@1240520008 : Integer;ESRelation@1240520012 : Record 14123601;ESSecuritySetup@1240520011 : Record 14123521);
    BEGIN
      IF ESRelation."Relation Object Type" = ESRelation."Relation Object Type"::TableData THEN BEGIN
          IF NOT ESRoleBuilderPerm2.GET(
                 ESRoleBuilderPerm."Role ID",
                 ESRelation."Relation Object Type",
                 ESRelation."Relation Object ID")
        THEN BEGIN
          ESRoleBuilderPerm2.INIT;
          ESRoleBuilderPerm2."Role ID" := ESRoleBuilderPerm."Role ID";
          ESRoleBuilderPerm2."Object Type" := ESRelation."Relation Object Type";
          ESRoleBuilderPerm2."Object ID" := ESRelation."Relation Object ID";
          IF (ESRelation.Type = ESRelation.Type::Flowfield) AND
             ESSecuritySetup."Use Indirect for FlowFields"
          THEN
            ESRoleBuilderPerm2."Read Permission" := ESRoleBuilderPerm2."Read Permission"::Indirect
          ELSE
            ESRoleBuilderPerm2."Read Permission" := ESRoleBuilderPerm2."Read Permission"::Yes;
          ESRoleBuilderPerm2."Insert Permission" := ESRoleBuilderPerm2."Insert Permission"::" ";
          ESRoleBuilderPerm2."Modify Permission" := ESRoleBuilderPerm2."Modify Permission"::" ";
          ESRoleBuilderPerm2."Delete Permission" := ESRoleBuilderPerm2."Delete Permission"::" ";
          ESRoleBuilderPerm2."Execute Permission" := ESRoleBuilderPerm2."Execute Permission"::" ";
          ESRoleBuilderPerm2.Origin := ESRoleBuilderPerm2.Origin::Additional;
          ESRoleBuilderPerm2.INSERT(TRUE);

          InsertedRecords := InsertedRecords + 1;
        END ELSE BEGIN
          ESRoleBuilderPerm2.TESTFIELD("To Object ID",0);

          CASE TRUE OF
            (ESRelation.Type <> ESRelation.Type::Flowfield) AND
            ((ESRoleBuilderPerm2."Read Permission" = ESRoleBuilderPerm2."Read Permission"::" ") OR
             (ESRoleBuilderPerm2."Read Permission" =
              ESRoleBuilderPerm2."Read Permission"::Indirect)):
              BEGIN
                ESRoleBuilderPerm2."Read Permission" := ESRoleBuilderPerm2."Read Permission"::Yes;
                ESRoleBuilderPerm2.Origin := ESRoleBuilderPerm2.Origin::Additional;
                ESRoleBuilderPerm2.MODIFY(TRUE);
              END;
            (ESRelation.Type = ESRelation.Type::Flowfield) AND
            ((ESRoleBuilderPerm2."Read Permission" = ESRoleBuilderPerm2."Read Permission"::" ") OR
             (ESRoleBuilderPerm2."Read Permission" =
              ESRoleBuilderPerm2."Read Permission"::Indirect)) AND
            NOT ESSecuritySetup."Use Indirect for FlowFields":
              BEGIN
                ESRoleBuilderPerm2."Read Permission" := ESRoleBuilderPerm2."Read Permission"::Yes;
                ESRoleBuilderPerm2.Origin := ESRoleBuilderPerm2.Origin::Additional;
                ESRoleBuilderPerm2.MODIFY(TRUE);
              END;
            (ESRelation.Type = ESRelation.Type::Flowfield) AND
            (ESRoleBuilderPerm2."Read Permission" = ESRoleBuilderPerm2."Read Permission"::" ") AND
            ESSecuritySetup."Use Indirect for FlowFields":
              BEGIN
                ESRoleBuilderPerm2."Read Permission" :=
                  ESRoleBuilderPerm2."Read Permission"::Indirect;
                ESRoleBuilderPerm2.Origin := ESRoleBuilderPerm2.Origin::Additional;
                ESRoleBuilderPerm2.MODIFY(TRUE);
              END;
          END;
        END;
      END ELSE BEGIN
        IF NOT ESRoleBuilderPerm2.GET(
                 ESRoleBuilderPerm."Role ID",
                 ESRelation."Relation Object Type",ESRelation."Relation Object ID")
        THEN BEGIN
          ESRoleBuilderPerm2.INIT;
          ESRoleBuilderPerm2."Role ID" := ESRoleBuilderPerm."Role ID";
          ESRoleBuilderPerm2."Object Type" := ESRelation."Relation Object Type";
          ESRoleBuilderPerm2."Object ID" := ESRelation."Relation Object ID";
          ESRoleBuilderPerm2."Read Permission" := ESRoleBuilderPerm2."Read Permission"::" ";
          ESRoleBuilderPerm2."Insert Permission" := ESRoleBuilderPerm2."Insert Permission"::" ";
          ESRoleBuilderPerm2."Modify Permission" := ESRoleBuilderPerm2."Modify Permission"::" ";
          ESRoleBuilderPerm2."Delete Permission" := ESRoleBuilderPerm2."Delete Permission"::" ";
          ESRoleBuilderPerm2."Execute Permission" := ESRoleBuilderPerm2."Execute Permission"::Yes;
          ESRoleBuilderPerm2.Origin := ESRoleBuilderPerm2.Origin::Additional;
          ESRoleBuilderPerm2.INSERT(TRUE);

          InsertedRecords := InsertedRecords + 1;
        END ELSE
          IF ESRoleBuilderPerm."Execute Permission" <> ESRoleBuilderPerm."Execute Permission"::Yes
          THEN BEGIN
            ESRoleBuilderPerm."Execute Permission" := ESRoleBuilderPerm."Execute Permission"::Yes;
            ESRoleBuilderPerm2.MODIFY(TRUE);
          END;
      END;
    END;

    BEGIN
    END.
  }
}

