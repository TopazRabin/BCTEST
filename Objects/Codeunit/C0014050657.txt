OBJECT Codeunit 14050657 EDI CU & Rpt Subscr. Funcs
{
  OBJECT-PROPERTIES
  {
    Date=07/13/20;
    Time=12:00:00 PM;
    Version List=SE0.62;
  }
  PROPERTIES
  {
    Permissions=TableData 6507=i,
                TableData 6550=r,
                TableData 7322=im,
                TableData 7323=i,
                TableData 5769=m,
                TableData 7310=imd,
                TableData 7340=i,
                TableData 7341=i,
                TableData 7342=i,
                TableData 7343=i;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      EDIRecDocHdr@1240020001 : Record 14002358;
      PostEDI@1240020000 : Boolean;
      EDISetGlobalVariable@1240020002 : Codeunit 14050658;

    [EventSubscriber(Codeunit,13,OnBeforeUpdateAndDeleteLines)]
    LOCAL PROCEDURE "GenJnlLine-OnBeforeUpdateDeleteLines"@1240020000(VAR GenJournalLine@1240020000 : Record 81);
    VAR
      EDITemplate@1240020002 : Record 14002350;
      PostEDI@1240020001 : Boolean;
      InternalDocNo@1240020003 : Code[10];
    BEGIN
      // <CU 13> Subscriber function OnBeforeUpdateDelete
      EDISetGlobalVariable.GetPostPaymentStatus(InternalDocNo,PostEDI);
      IF PostEDI THEN
        IF InternalDocNo <> '' THEN
          PostEDIRemitAdvice(InternalDocNo);
      EDISetGlobalVariable.InitPaymentPostStatus;
      PostEDI := FALSE;
    END;

    [EventSubscriber(Codeunit,13,OnBeforePostGenJnlLine)]
    LOCAL PROCEDURE "GenJnlLine-OnBeforePostGenJnlLine"@1240020001(VAR GenJournalLine@1240020000 : Record 81);
    VAR
      EDITemplate@1240020001 : Record 14002350;
    BEGIN
      // <CU 13> Subscriber function OnBeforeUpdatePostGenJnlLine
      IF GenJournalLine."EDI Payment" THEN
        IF EDIRecDocHdr.GET(GenJournalLine."EDI Internal Doc. No.") THEN
          EDISetGlobalVariable.PostPaymentRemitAdvice(
            EDITemplate.GET(EDIRecDocHdr."EDI Template Code"),GenJournalLine);
    END;

    [EventSubscriber(Codeunit,10140,OnAfterDepositPost)]
    LOCAL PROCEDURE "Deposit-OnAfterDepositPost"@1240020002(DepositHeader@1240020000 : Record 10140;VAR PostedDepositHeader@1240020001 : Record 10143);
    VAR
      EDIRecDocHdr@1240020002 : Record 14002358;
      EDITemplate@1240020003 : Record 14002350;
    BEGIN
      // <CU 10140> Subscriber function OnAfterDepositPost
      WITH PostedDepositHeader DO BEGIN
        IF "EDI Deposit" THEN
         IF EDIRecDocHdr.GET("EDI Internal Doc. No.") THEN
            IF EDITemplate.GET(EDIRecDocHdr."EDI Template Code") THEN
              IF EDITemplate."Post Upon NAV Doc. Posting" THEN
                PostEDIRemitAdvice(EDIRecDocHdr."Internal Doc. No.");
      END;
    END;

    [EventSubscriber(Codeunit,391,OnBeforeSalesShptHeaderModify)]
    LOCAL PROCEDURE "ShipmentHeaderEdit-OnBeforeSalesShptHeaderModify"@1240020005(VAR SalesShptHeader@1240020000 : Record 110;FromSalesShptHeader@1240020001 : Record 110);
    BEGIN
      // <C391> Subscriber function to Codeunit 391 OnBeforeSalesShiptHeaderModify Integration Event
      WITH FromSalesShptHeader DO BEGIN
        SalesShptHeader."EDI Order" := "EDI Order";
        SalesShptHeader."EDI Trade Partner" := "EDI Trade Partner";
      END;
    END;

    [EventSubscriber(Codeunit,414,OnBeforeReleaseSalesDoc)]
    LOCAL PROCEDURE "ReleaseSalesDocument-OnBeforeReleaseSalesDoc"@1240020006(VAR SalesHeader@1240020000 : Record 36;PreviewMode@1240020001 : Boolean);
    VAR
      Text14000352@1240020003 : TextConst 'ENU=Sales document cannot be released because EDI pricing discrepancies exist.';
    BEGIN
      // <CU414> Subscriber function to Codeunit 414 OnBeforeReleaseSalesDoc
      IF NOT SalesHeader."EDI Order" THEN
        EXIT;
      IF ReleaseEDIOrder(SalesHeader) THEN
        EXIT
      ELSE
        ERROR(Text14000352);
    END;

    PROCEDURE PostEDIRemitAdvice@14000352(EDIInternalDocNo@1240020000 : Code[10]);
    VAR
      EDIRecDocHdr@14000352 : Record 14002358;
      EDITemplate@14000353 : Record 14002350;
      EDIPaymentRemitAdvice@14000354 : Record 14050902;
      EDICreatePmtRemitAdvice@14000355 : Codeunit 14050914;
    BEGIN
      EDIPaymentRemitAdvice.RESET;
      EDIPaymentRemitAdvice.SETCURRENTKEY("Internal Doc. No.");
      EDIPaymentRemitAdvice.SETRANGE("Internal Doc. No.",EDIInternalDocNo);
      IF EDIPaymentRemitAdvice.FIND('-') THEN
        EDICreatePmtRemitAdvice.PostPaymentAdvice(EDIPaymentRemitAdvice);
    END;

    PROCEDURE ReleaseEDIOrder@14000351(SalesHeader@1240020000 : Record 36) ReleaseOrder : Boolean;
    VAR
      Text14000351@1240020002 : TextConst 'ENU=A cancellation request has been received for %1 %2.';
      EDIRecDocHdr@1240020003 : Record 14002358;
      SalesSetup@1240020004 : Record 311;
      EDISetGlobalVariable@1240020008 : Codeunit 14050658;
      EShipSetGlobalVariable@1240020006 : Codeunit 14000246;
      RunFromEShip@1240020005 : Boolean;
    BEGIN
      RunFromEShip := FALSE;
      SalesSetup.GET;
      IF SalesSetup."Enable Shipping" THEN
        RunFromEShip := EShipSetGlobalVariable."ReleaseSalesDoc-RunFromEShipStatus";
      ReleaseOrder := FALSE;
      WITH SalesHeader DO BEGIN
        IF "EDI Order" AND "EDI Cancellation Request" AND NOT RunFromEShip THEN
          ERROR(Text14000351,"Document Type","No.");

        CALCFIELDS("Pricing Discrepancy");
        IF "EDI Order" AND "Pricing Discrepancy" AND NOT RunFromEShip THEN BEGIN
          IF EDIRecDocHdr.GET("EDI Internal Doc. No.") THEN
            IF EDIRecDocHdr."Price Discrepancy Check Req." THEN BEGIN
              ReleaseOrder := FALSE;
              EXIT(ReleaseOrder);
            END;
        END;
      END;
      ReleaseOrder := TRUE;
      EXIT(ReleaseOrder);
    END;

    BEGIN
    END.
  }
}

