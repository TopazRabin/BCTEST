OBJECT Codeunit 51004 Import Last Sales Price Scaled
{
  OBJECT-PROPERTIES
  {
    Date=06/16/21;
    Time=[ 5:49:22 AM];
    Modified=Yes;
    Version List=TPZ000.00.00,001;
  }
  PROPERTIES
  {
    OnRun=BEGIN
              ServerFileName := FileMgt.UploadFile(Text51006,ExcelExtensionTok);
              IF ServerFileName <>'' THEN BEGIN
                SheetName := ExcelBuff.SelectSheetsName(ServerFileName);
                IF SheetName <> '' THEN BEGIN
                  //ExcelBuff.DELETEALL;
                  ExcelBuff.LOCKTABLE;
                  ExcelBuff.OpenBook(ServerFileName,SheetName);
                  ExcelBuff.ReadSheet;

                  AnalyzeData;
                  ExcelBuff.DELETEALL;

                END;
            END;
            //CODEUNIT.RUN(CODEUNIT::"Lighting Price Change Job"); //it will run fron Job Queue
          END;

  }
  CODE
  {
    VAR
      ExcelBuff@1170000000 : TEMPORARY Record 370;
      ServerFileName@1170000001 : Text;
      Text51006@1170000002 : TextConst 'ENU=Import Excel File;ESM=Importar fich. Excel;FRC=Importer fichier Excel;ENC=Import Excel File';
      ExcelExtensionTok@1170000003 : TextConst '@@@={Locked};ENU=.xlsx;ESM=.xlsx;FRC=.xlsx;ENC=.xlsx';
      SheetName@1170000004 : Text[250];
      FileMgt@1170000005 : Codeunit 419;
      Text51016@1170000006 : TextConst 'ENU=Importing Data...\\;ESM=Analizar Datos...\\;FRC=Analyse des donn‚es...\\;ENC=Analysing Data...\\';
      RecNo@1170000008 : Integer;
      TotalRecNo@1170000007 : Integer;
      RowNo@1170000009 : Integer;
      Window@1170000010 : Dialog;
      LastSalesPriceScaled@1170000011 : Record 50052;
      SalesReceivablesSetup@1170000012 : Record 311;
      NoSeriesManagement@1170000013 : Codeunit 396;
      LastPriceQty@1170000014 : Decimal;
      LastUnitPrice@1170000015 : Decimal;
      Item@1170000016 : Record 27;
      Customer@1170000017 : Record 18;
      DocNo@1000000000 : Code[20];

    LOCAL PROCEDURE AnalyzeData@1170000002();
    VAR
      boolScal@1000000000 : Boolean;
    BEGIN
      SalesReceivablesSetup.GET;
      DocNo := NoSeriesManagement.GetNextNo(SalesReceivablesSetup."Scaler Document No.",WORKDATE,TRUE);
      Window.OPEN(Text51016 + '@1@@@@@@@@@@@@@@@@@@@@@@@@@\');
      TotalRecNo := ExcelBuff.COUNT;
      IF ExcelBuff.FIND('-') THEN
        REPEAT
          RecNo := RecNo + 1;
          Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));
          IF ExcelBuff."Row No." > 9 THEN BEGIN
      //      IF ExcelBuff."Row No." <> RowNo THEN BEGIN
      //        LastSalesPriceScaled.INIT;
      //        LastSalesPriceScaled.INSERT;
      //      END;
            CASE ExcelBuff."Column No." OF
              1 : BEGIN
                LastSalesPriceScaled.INIT;
                LastSalesPriceScaled."Document No." := DocNo;
                LastSalesPriceScaled."Document Type" := LastSalesPriceScaled."Document Type"::"Stock Status";
                LastSalesPriceScaled."Document Date" := WORKDATE;
                LastSalesPriceScaled."Last Price Date" := WORKDATE;
                LastSalesPriceScaled."Last Price User ID" := USERID;
                //LastSalesPriceScaled."Price Increase" := TRUE;
                LastSalesPriceScaled."Shortcut Dimension 5 Code" := 'L';
                LastSalesPriceScaled."Country/Region Code" := 'US';
                LastSalesPriceScaled.Scaled := TRUE;
                LastSalesPriceScaled.VALIDATE("Sell-to Customer No.", DELCHR(ExcelBuff."Cell Value as Text",'=',','));
                Customer.GET(LastSalesPriceScaled."Sell-to Customer No.");
                LastSalesPriceScaled."Sell-to Customer Name" := Customer.Name;
                LastSalesPriceScaled."Lighting Price Update date" := WORKDATE; //<TPZ3163>
              END;
              2 : BEGIN
                LastSalesPriceScaled.VALIDATE("Item No.", DELCHR(ExcelBuff."Cell Value as Text",'=',','));
                Item.GET(LastSalesPriceScaled."Item No.");
                LastSalesPriceScaled."Item Description" := Item.Description;
                LastSalesPriceScaled."Last Price UOM" := Item."Base Unit of Measure";
                LastSalesPriceScaled."Unit of Measure Code" := Item."Base Unit of Measure";
                LastSalesPriceScaled."Product Group Code" := Item."Product Group Code";
                LastSalesPriceScaled."Item Category Group" := Item."Item Category Code";
      //          LastSalesPriceScaled.INSERT(TRUE);
              END;
              7 : BEGIN
                EVALUATE(LastPriceQty, DELCHR(ExcelBuff."Cell Value as Text",'=',','));
                LastSalesPriceScaled."Last Price Qty." := LastPriceQty;
                //LastSalesPriceScaled.MODIFY;
              END;
              8 : BEGIN
                EVALUATE(LastUnitPrice,DELCHR(ExcelBuff."Cell Value as Text",'=',','));
                LastSalesPriceScaled."Last Unit Price" := LastUnitPrice;
                //LastSalesPriceScaled.MODIFY;
                //LastSalesPriceScaled.INSERT(TRUE);
              END;
              9: BEGIN
                IF DELCHR(ExcelBuff."Cell Value as Text",'=',',')='1' THEN
                 LastSalesPriceScaled.Scaled := TRUE
                ELSE LastSalesPriceScaled.Scaled := FALSE;
                LastSalesPriceScaled.INSERT(TRUE);
              END;
            END;
            IF ExcelBuff."Row No." <> RowNo THEN BEGIN
      //        RowNo := ExcelBuff."Row No.";
      //        LastSalesPriceScaled."Document Type" := LastSalesPriceScaled."Document Type"::"Stock Status";
      //        LastSalesPriceScaled."Document No." := DocNo;
      //        LastSalesPriceScaled."Document Date" := WORKDATE;
      //        LastSalesPriceScaled."Last Price User ID" := USERID;
      //        LastSalesPriceScaled."Price Increase" := TRUE;
      //        LastSalesPriceScaled."Shortcut Dimension 5 Code" := 'L';
      //        LastSalesPriceScaled."Country/Region Code" := 'US';
      //        LastSalesPriceScaled.Scaled := TRUE;
              //LastSalesPriceScaled.INSERT(TRUE);
      //        LastSalesPriceScaled.MODIFY;
            END;
          END;
        UNTIL ExcelBuff.NEXT=0;
      Window.CLOSE;
    END;

    BEGIN
    {
      001 UTK TPZ3163 06162021 Added code to update Lighting Price update date.
    }
    END.
  }
}

