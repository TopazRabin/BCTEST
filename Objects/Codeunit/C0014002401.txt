OBJECT Codeunit 14002401 E.D.I. Update Org. Relation
{
  OBJECT-PROPERTIES
  {
    Date=04/28/17;
    Time=12:00:00 PM;
    Version List=SE0.60.13.02;
  }
  PROPERTIES
  {
    TableNo=14002358;
    OnRun=BEGIN
            IF "Navision Document" <> 'I_SLSCUS' THEN
              ERROR(Text001,"Navision Document");

            EDIRecDocHdr2.GET("Internal Doc. No.");

            EDITradePartner.GET("Trade Partner No.");

            EDIDocument.RESET;
            EDIDocument.SETRANGE("Trade Partner No.","Trade Partner No.");
            EDIDocument.SETRANGE("Navision Document","Navision Document");
            EDIDocument.SETRANGE("EDI Document No.","EDI Document No.");
            EDIDocument.SETFILTER(Status,'<>%1',EDIDocument.Status::Inactive);
            EDIDocument.FIND('-');
            EDIDocument.TESTFIELD("Org. Rel. Ship-To Template");

            IF EDIDocument."Trade Ptnr. Import Override" <> '' THEN
              TradePtnrNo := EDIDocument."Trade Ptnr. Import Override"
            ELSE
              TradePtnrNo := EDIDocument."Trade Partner No.";

            DefCustomer.GET(EDIDocument."Org. Rel. Customer Template");
            DefShiptoAddress.GET(
              EDIDocument."Org. Rel. Customer Template",EDIDocument."Org. Rel. Ship-To Template");

            IF "Company Name" <> COMPANYNAME THEN
              ERROR(
                Text002,
                "Internal Doc. No.","Company Name",COMPANYNAME);

            EDICustCrossRef.RESET;
            EDICustCrossRef.SETRANGE("Trade Partner No.",TradePtnrNo);
            IF EDICustCrossRef.FIND('+') THEN
              LineNo := EDICustCrossRef."Line No."
            ELSE
              LineNo := 0;

            IF "Org. Relationships Updated" THEN BEGIN
              IF GUIALLOWED THEN BEGIN
                IF NOT CONFIRM(
                  Text003 +
                  Text004)
                THEN
                  ERROR(Text005);
              END ELSE
               ERROR(Text005);
            END;

            IF GUIALLOWED THEN BEGIN
              ProgressWindow.OPEN(
                Text006 +
                Text007 +
                Text008 +
                Text009 +
                Text010 +
                Text011);
              ProgressWindow.UPDATE(1,"Trade Partner No.");
              ProgressWindow.UPDATE(3,"Internal Doc. No.");
            END;

            EDIRecDocFields.RESET;
            EDIRecDocFields.SETRANGE("Internal Doc. No.","Internal Doc. No.");
            EDIRecDocFields.FIND('-');
            EDIRecDocFields.MODIFYALL("Segment Group",0);
            EDIRecDocFields.RESET;
            EDIRecDocFields.SETRANGE("Internal Doc. No.","Internal Doc. No.");
            EDIRecDocFields.FIND('-');
            SegmentGroup := 0;
            REPEAT
              IF (EDIRecDocFields."New Segment") AND
                 ((EDIRecDocFields.Segment = 'HL') OR
                  (EDIRecDocFields.Segment = 'MIT'))
              THEN
                SegmentGroup := SegmentGroup + 1;
              IF EDIRecDocFields.Trigger THEN
                SegmentGroup := SegmentGroup + 1;
              EDIRecDocFields."Segment Group" := SegmentGroup;
              EDIRecDocFields.MODIFY;
              IF GUIALLOWED THEN
                ProgressWindow.UPDATE(2,SegmentGroup);
            UNTIL EDIRecDocFields.NEXT = 0;

            PrevSegmentGroup := 0;

            EDIRecDocFields2.RESET;
            EDIRecDocFields2.SETRANGE("Internal Doc. No.","Internal Doc. No.");
            EDIRecDocFields2.SETRANGE(Segment,'BHT');
            EDIRecDocFields2.SETRANGE(Element,'01');
            IF EDIRecDocFields2.FIND('-') THEN
              IF STRPOS(
                EDIDocument."Location Relationship ID",
                COPYSTR(
                  EDIRecDocFields2."Field Text Value",1,4)) <> 0
              THEN
                AssignLocationRelationship
              ELSE BEGIN
                EDIRecDocFields.SETFILTER("Segment Group",'<>0');
                EDIRecDocFields.FIND('-');
                REPEAT
                  IF GUIALLOWED THEN
                    ProgressWindow.UPDATE(2,EDIRecDocFields."Segment Group");
                  IF EDIRecDocFields."Segment Group" <> PrevSegmentGroup THEN BEGIN
                    PrevSegmentGroup := EDIRecDocFields."Segment Group";
                    EDIRecDocFields2.RESET;
                    EDIRecDocFields2.SETCURRENTKEY(
                      "Internal Doc. No.","Segment Group","NAV Table No.","Nav Field No.");
                    EDIRecDocFields2.SETRANGE("Internal Doc. No.","Internal Doc. No.");
                    EDIRecDocFields2.SETRANGE("Segment Group",EDIRecDocFields."Segment Group");
                    EDIRecDocFields2.SETFILTER("NAV Table No.",'%1|%2',222,10018);
                    IF EDIRecDocFields2.FIND('-') THEN BEGIN
                      CASE EDIRecDocFields2."NAV Table No." OF
                        10018:
                          BEGIN
                            EDIRecDocFields2.SETRANGE("NAV Table No.",10018);
                            EDIRecDocFields2.SETRANGE("Nav Field No.",Customer.FIELDNO("External No."));
                            IF NOT EDIRecDocFields2.FIND('-') THEN
                              ERROR(Text012);
                            Customer.RESET;
                            Customer.SETRANGE("EDI Trade Partner",TradePtnrNo);
                            IF EDITradePartner."Customer No." = '' THEN
                              Customer.SETRANGE(
                                "External No.",
                                COPYSTR(
                                  EDIRecDocFields2."Field Text Value",1,20))
                            ELSE
                              Customer.SETRANGE("No.",EDITradePartner."Customer No.");
                            IF Customer.FIND('-') THEN
                              MapToCustomer
                            ELSE
                              CreateNewCustomer;
                            CustomerFound := TRUE;
                          END;
                        222:
                          BEGIN
                            EDIRecDocFields2.SETRANGE("NAV Table No.",DATABASE::"Ship-to Address");
                            EDIRecDocFields2.SETRANGE("Nav Field No.",ShiptoAddress.FIELDNO("External No."));
                            IF NOT EDIRecDocFields2.FIND('-') THEN
                              ERROR(Text013);
                            IF NOT CustomerFound THEN
                              Customer.GET(EDITradePartner."Customer No.");
                            ShiptoAddress.RESET;
                            ShiptoAddress.SETRANGE("Customer No.",Customer."No.");
                            ShiptoAddress.SETRANGE(
                              "External No.",
                              COPYSTR(
                                EDIRecDocFields2."Field Text Value",1,20));
                            IF ShiptoAddress.FIND('-') THEN
                              MapToShiptoAddress
                            ELSE
                              CreateShiptoAddress;
                          END;
                      END;
                    END;
                  END;
                UNTIL EDIRecDocFields.NEXT = 0;
              END;
            EDIRecDocHdr2."Org. Relationships Updated" := TRUE;
            EDIRecDocHdr2."Org. Rel. Updated Date" := TODAY;
            EDIRecDocHdr2."Org. Rel. Updated Time" := TIME;
            EDIRecDocHdr2."Data Error" := FALSE;
            EDIRecDocHdr2."Document Processed" := TRUE;
            EDIRecDocHdr2.MODIFY;

            CreateEDIAlert.UpdateAlertStatus(EDIRecDocHdr2);

            IF GUIALLOWED THEN
              ProgressWindow.CLOSE;
          END;

  }
  CODE
  {
    VAR
      Customer@1240030000 : Record 18;
      DefCustomer@1240030001 : Record 18;
      DefShiptoAddress@1240030002 : Record 222;
      EDICustCrossRef@1240030003 : Record 14002362;
      EDICustCrossRef2@1240030004 : Record 14002362;
      EDIDocument@1240030005 : Record 14002353;
      EDITradePartner@1240030006 : Record 14002360;
      EDIRecDocHdr@1240030007 : Record 14002358;
      EDIRecDocHdr2@1240030008 : Record 14002358;
      EDIRecDocFields@1240030009 : Record 14002359;
      EDIRecDocFields2@1240030010 : Record 14002359;
      ShiptoAddress@1240030011 : Record 222;
      CreateEDIAlert@1240020006 : Codeunit 14000375;
      ProgressWindow@1240030012 : Dialog;
      CreateNewCr@1240030013 : Boolean;
      CustSeq@1240030014 : Code[2];
      CustomerFound@1240030015 : Boolean;
      DistCenterExtCode@1240030016 : Code[20];
      InsertCode@1240030018 : Boolean;
      LineNo@1240030019 : Integer;
      SegmentGroup@1240030020 : Integer;
      ShipToCode@1240030021 : Code[10];
      TradePtnrNo@1240030022 : Code[20];
      Text001@1001 : TextConst 'ENU=EDI Navision Document %1 does not match this function.';
      Text002@1002 : TextConst 'ENU=The receive document %1 is for company %2. You are currently in company %3.';
      Text003@1003 : TextConst 'ENU=Organizational Relationships have already been updated.\';
      Text004@1004 : TextConst 'ENU=Do you wish to upade again?';
      Text005@1005 : TextConst 'ENU=Update aborted';
      Text006@1006 : TextConst 'ENU=Updating Organizational Relationships\';
      Text007@1007 : TextConst 'ENU=Trading Partner      #1##################\';
      Text008@1008 : TextConst 'ENU=Segment Group        #2########\';
      Text009@1009 : TextConst 'ENU=Internal Doc No.     #3########\';
      Text010@1010 : TextConst 'ENU=Customer No.         #4##################\';
      Text011@1011 : TextConst 'ENU=Ship-To No.          #5##################';
      Text012@1012 : TextConst 'ENU=You must map to the field External No in the Customer table.';
      Text013@1013 : TextConst 'ENU=You must map to the Ship-to Address table External No. field.';
      Text016@1016 : TextConst 'ENU=You must map to the Ship-to Address table Code field.';
      PrevSegmentGroup@1240030023 : Integer;
      Text017@1240020001 : TextConst 'ENU=Customer not found.';
      Text018@1240020002 : TextConst 'ENU=Parent Level ID for Hierarchical Level with segment group %1 not found. \Hierarchical Level ID values must be mapped with data type of decimal in the Receive Document Field table.';
      Text019@1240020003 : TextConst 'ENU=Ship to Address for location %1 not found.';
      Text020@1240020000 : TextConst 'ENU=Hierarchical Level ID values must be mapped with data type of decimal in the Receive Document Field table.';
      AssignDC@1240020004 : Boolean;
      Text021@1240020005 : TextConst 'ENU=Beginning HL Parent Level of 1 not found in document.';

    PROCEDURE CreateNewCustomer@2();
    BEGIN
      CustSeq := '00';
      Customer.RESET;
      REPEAT
        Customer.COPY(DefCustomer);
        CustSeq := INCSTR(CustSeq);
        Customer."No." := Customer."No." + '-' + CustSeq;
      UNTIL Customer.GET(Customer."No.") = FALSE;
      Customer."EDI Trade Partner" := TradePtnrNo;
      Customer."EDI Internal Doc. No." := EDIRecDocHdr2."Internal Doc. No.";
      Customer.INSERT;

      MapToCustomer;
    END;

    PROCEDURE MapToCustomer@1();
    BEGIN
      IF GUIALLOWED THEN
        ProgressWindow.UPDATE(4,Customer."No.");
      REPEAT
        IF EDIRecDocFields."NAV Table No." = 10018 THEN BEGIN
          CASE EDIRecDocFields."Nav Field No." OF
            Customer.FIELDNO(Customer.Name):
              Customer.VALIDATE(Customer.Name,EDIRecDocFields."Field Text Value");
            Customer.FIELDNO(Customer."Name 2"):
              Customer.VALIDATE(Customer."Name 2",EDIRecDocFields."Field Text Value");
            Customer.FIELDNO(Customer.Address):
              Customer.VALIDATE(Customer.Address,EDIRecDocFields."Field Text Value");
            Customer.FIELDNO(Customer."Address 2"):
              Customer.VALIDATE(Customer."Address 2",EDIRecDocFields."Field Text Value");
            Customer.FIELDNO(Customer.City):
              Customer.City := EDIRecDocFields."Field Text Value";
            Customer.FIELDNO(Customer.Contact):
              Customer.VALIDATE(Customer.Contact,EDIRecDocFields."Field Text Value");
            Customer.FIELDNO(Customer."Phone No."):
              Customer.VALIDATE(Customer."Phone No.",EDIRecDocFields."Field Text Value");
            Customer.FIELDNO(Customer."Telex No."):
              Customer.VALIDATE(Customer."Telex No.",EDIRecDocFields."Field Text Value");
            Customer.FIELDNO(Customer."Post Code"):
              Customer."Post Code" := EDIRecDocFields."Field Text Value";
            Customer.FIELDNO(Customer.County):
              Customer.VALIDATE(Customer.County,EDIRecDocFields."Field Text Value");
            Customer.FIELDNO(Customer."External No."):
              Customer.VALIDATE(Customer."External No.",EDIRecDocFields."Field Text Value");
          END;
        END;
      UNTIL (EDIRecDocFields.NEXT = 0) OR
            (EDIRecDocFields."Segment Group" <> EDIRecDocFields2."Segment Group");

      Customer."EDI Internal Doc. No." := EDIRecDocHdr2."Internal Doc. No.";
      Customer.MODIFY;
    END;

    PROCEDURE CreateShiptoAddress@3();
    BEGIN
      EDIRecDocFields2.SETRANGE("Nav Field No.",ShiptoAddress.FIELDNO("Dist. Center Ext. Code"));
      IF EDIRecDocFields2.FIND('-') THEN
        DistCenterExtCode := COPYSTR(EDIRecDocFields2."Field Text Value",1,10)
      ELSE
        DistCenterExtCode := '';

      EDIRecDocFields2.SETRANGE("Nav Field No.",ShiptoAddress.FIELDNO(Code));
      IF NOT EDIRecDocFields2.FIND('-') THEN
        ERROR(Text016);

      ShipToCode := COPYSTR(EDIRecDocFields2."Field Text Value",1,10);
      IF DistCenterExtCode <> '' THEN
        ShipToCode := ShipToCode + '-00';
      IF ShiptoAddress.GET(Customer."No.",ShipToCode) THEN BEGIN
        InsertCode := FALSE;
        REPEAT
          IF NOT ShiptoAddress.GET(Customer."No.",ShipToCode) THEN
            InsertCode := TRUE
          ELSE
            ShipToCode := INCSTR(ShipToCode);
        UNTIL InsertCode;
      END;

      ShiptoAddress.COPY(DefShiptoAddress);
      ShiptoAddress."Customer No." := Customer."No.";
      ShiptoAddress.Code := ShipToCode;
      ShiptoAddress."EDI Internal Doc. No." := EDIRecDocFields2."Internal Doc. No.";
      ShiptoAddress.INSERT;

      MapToShiptoAddress;
    END;

    PROCEDURE MapToShiptoAddress@4();
    BEGIN
      IF GUIALLOWED THEN
        ProgressWindow.UPDATE(5,ShiptoAddress.Code);
      AssignDC := FALSE;
      REPEAT
        IF EDIRecDocFields."NAV Table No." = 222 THEN BEGIN
          CASE EDIRecDocFields."Nav Field No." OF
            ShiptoAddress.FIELDNO(ShiptoAddress.Name):
              ShiptoAddress.VALIDATE(ShiptoAddress.Name,EDIRecDocFields."Field Text Value");
            ShiptoAddress.FIELDNO(ShiptoAddress."Name 2"):
              ShiptoAddress.VALIDATE(ShiptoAddress."Name 2",EDIRecDocFields."Field Text Value");
            ShiptoAddress.FIELDNO(ShiptoAddress.Address):
              ShiptoAddress.VALIDATE(ShiptoAddress.Address,EDIRecDocFields."Field Text Value");
            ShiptoAddress.FIELDNO(ShiptoAddress."Address 2"):
              ShiptoAddress.VALIDATE(ShiptoAddress."Address 2",EDIRecDocFields."Field Text Value");
            ShiptoAddress.FIELDNO(ShiptoAddress.City):
              ShiptoAddress.City := EDIRecDocFields."Field Text Value";
            ShiptoAddress.FIELDNO(ShiptoAddress.Contact):
              ShiptoAddress.VALIDATE(ShiptoAddress.Contact,EDIRecDocFields."Field Text Value");
            ShiptoAddress.FIELDNO(ShiptoAddress."Phone No."):
              ShiptoAddress.VALIDATE(ShiptoAddress."Phone No.",EDIRecDocFields."Field Text Value");
            ShiptoAddress.FIELDNO(ShiptoAddress."Telex No."):
              ShiptoAddress.VALIDATE(ShiptoAddress."Telex No.",EDIRecDocFields."Field Text Value");
            ShiptoAddress.FIELDNO(ShiptoAddress."Post Code"):
              ShiptoAddress."Post Code" := EDIRecDocFields."Field Text Value";
            ShiptoAddress.FIELDNO(ShiptoAddress.County):
              ShiptoAddress.VALIDATE(ShiptoAddress.County,EDIRecDocFields."Field Text Value");
            ShiptoAddress.FIELDNO(ShiptoAddress."E-Mail"):
              ShiptoAddress.VALIDATE(ShiptoAddress."E-Mail",EDIRecDocFields."Field Text Value");
            ShiptoAddress.FIELDNO(ShiptoAddress."Effective Date"):
              ShiptoAddress.VALIDATE(ShiptoAddress."Effective Date",EDIRecDocFields."Field Date Value");
            ShiptoAddress.FIELDNO(ShiptoAddress."Open Date"):
              ShiptoAddress.VALIDATE(ShiptoAddress."Open Date",EDIRecDocFields."Field Date Value");
            ShiptoAddress.FIELDNO(ShiptoAddress."Close Date"):
              ShiptoAddress.VALIDATE(ShiptoAddress."Close Date",EDIRecDocFields."Field Date Value");
            ShiptoAddress.FIELDNO(ShiptoAddress."Dist. Center Ship-to Code"):
              BEGIN
                AssignDC := TRUE;
                ShiptoAddress.VALIDATE(
                  ShiptoAddress."Dist. Center Ship-to Code",EDIRecDocFields."Field Text Value");
                DistCenterExtCode := ShiptoAddress."Dist. Center Ship-to Code";
                ShiptoAddress."Dist. Center Ext. Code" := DistCenterExtCode;
              END;
            ShiptoAddress.FIELDNO(ShiptoAddress."External No."):
              ShiptoAddress.VALIDATE(ShiptoAddress."External No.",EDIRecDocFields."Field Text Value");
            ShiptoAddress.FIELDNO(ShiptoAddress."Dist. Center Ext. Code"):
              BEGIN
                ShiptoAddress.VALIDATE(
                  "Dist. Center Ext. Code",
                  COPYSTR(
                    EDIRecDocFields."Field Text Value",1,10));
                ShiptoAddress."Distribution Center" := TRUE;
              END;
          END;
        END;
      UNTIL (EDIRecDocFields.NEXT = 0) OR
            (EDIRecDocFields."Segment Group" <> EDIRecDocFields2."Segment Group");

      ShiptoAddress."EDI Internal Doc. No." := EDIRecDocFields2."Internal Doc. No.";
      ShiptoAddress."Change Date" := TODAY;
      ShiptoAddress.MODIFY;

      CreateCrossReference;
    END;

    PROCEDURE CreateCrossReference@1240020001();
    VAR
      ShiptoAddress2@1240020000 : Record 222;
      DefaultDC@1240020001 : Code[20];
    BEGIN
      DefaultDC := '';
      CreateNewCr := FALSE;
      IF ShiptoAddress2.GET(Customer."No.",ShiptoAddress."Dist. Center Ship-to Code") THEN
        DefaultDC := ShiptoAddress2."External No.";

      EDICustCrossRef2.RESET;
      EDICustCrossRef2.SETCURRENTKEY(
        "Trade Partner No.","Navision Sell To Code","Navision Ship To Code");
      EDICustCrossRef2.SETRANGE("Trade Partner No.",TradePtnrNo);
      EDICustCrossRef2.SETRANGE("Navision Sell To Code",ShiptoAddress."Customer No.");
      EDICustCrossRef2.SETRANGE("Navision Ship To Code",ShiptoAddress.Code);
      IF EDICustCrossRef2.FIND('+') THEN BEGIN
        IF ((EDICustCrossRef2."EDI Sell To Code" <> Customer."External No.") AND
            (EDICustCrossRef2."EDI Sell To Code" <> EDITradePartner."Customer No.")) OR
           (EDICustCrossRef2."Navision Sell To Code" <> Customer."No.") OR
           (EDICustCrossRef2."EDI Ship To Code" <> ShiptoAddress."External No.") OR
           (EDICustCrossRef2."Navision Ship To Code" <> ShiptoAddress.Code) OR
           ((ShiptoAddress."Dist. Center Ship-to Code" <> '') AND
            (EDICustCrossRef2."Default Dist. Center" <> '')) AND
            (EDICustCrossRef2."Default Dist. Center" <> DefaultDC)
        THEN
          CreateNewCr := TRUE;
        IF (ShiptoAddress."Distribution Center") AND
           (EDICustCrossRef2."Ship-to Type" <> EDICustCrossRef2."Ship-to Type"::"Dist. Center")
        THEN
          CreateNewCr := TRUE;
        IF (NOT ShiptoAddress."Distribution Center") AND
           (EDICustCrossRef2."Ship-to Type" <> EDICustCrossRef2."Ship-to Type"::Store)
        THEN
          CreateNewCr := TRUE;
      END ELSE
        CreateNewCr := TRUE;

      IF CreateNewCr THEN BEGIN
        EDICustCrossRef.INIT;
        EDICustCrossRef."Trade Partner No." := TradePtnrNo;
        LineNo := LineNo + 1;
        EDICustCrossRef."Line No." := LineNo;
        IF EDITradePartner."Customer No." = '' THEN
          EDICustCrossRef."EDI Sell To Code" := Customer."External No."
        ELSE
          EDICustCrossRef."EDI Sell To Code" := EDITradePartner."Customer No.";
        EDICustCrossRef."Navision Sell To Code" := Customer."No.";
        EDICustCrossRef."EDI Ship To Code" := ShiptoAddress."External No." ;
        EDICustCrossRef."Navision Ship To Code" := ShiptoAddress.Code;
        IF ShiptoAddress."Distribution Center" THEN
          EDICustCrossRef."Ship-to Type" := EDICustCrossRef."Ship-to Type"::"Dist. Center";
        IF ShiptoAddress."Effective Date" <> 0D THEN
          EDICustCrossRef."Effective Date" := ShiptoAddress."Effective Date"
        ELSE
          EDICustCrossRef."Effective Date" := TODAY;
        IF AssignDC THEN
          EDICustCrossRef.VALIDATE("Default Dist. Center",DistCenterExtCode);
        EDICustCrossRef."Date Changed" := TODAY;
        EDICustCrossRef."User ID" := USERID;
        EDICustCrossRef.INSERT;
      END;

      IF NOT CreateNewCr AND AssignDC THEN BEGIN
        EDICustCrossRef2.VALIDATE("Default Dist. Center",DistCenterExtCode);
        EDICustCrossRef."Date Changed" := TODAY;
        EDICustCrossRef."User ID" := USERID;
        EDICustCrossRef2.MODIFY;
      END;
    END;

    PROCEDURE AssignLocationRelationship@1240020000();
    VAR
      EDIRecDocField@1240020000 : Record 14002359;
      EDIRecDocField2@1240020001 : Record 14002359;
      EDIRecDocField3@1240020012 : Record 14002359;
      DistCenterHLID@1240020002 : Decimal;
      CustomerHLID@1240020009 : Decimal;
      StoreSegmentGroup@1240020010 : Decimal;
      CustSegmentGroup@1240020008 : Decimal;
      DCSegmentGroup@1240020006 : Decimal;
      DCShiptoCode@1240020003 : Code[20];
      CustomerNo@1240020004 : Code[20];
      ShiptoExtCode@1240020007 : Code[20];
      DCShiptoCodeFound@1240020005 : Boolean;
      EffectiveDate@1240020011 : Date;
    BEGIN
      ShiptoExtCode := '';
      ShipToCode := '';
      DistCenterExtCode := '';
      DCShiptoCode := '';

      EDIRecDocFields.RESET;
      EDIRecDocFields.SETCURRENTKEY(
        "Internal Doc. No.","Segment Group","NAV Table No.","Nav Field No.");
      EDIRecDocFields.SETRANGE("Internal Doc. No.",EDIRecDocHdr2."Internal Doc. No.");
      EDIRecDocFields.SETRANGE("NAV Table No.",10018);
      EDIRecDocFields.SETRANGE("Nav Field No.",Customer.FIELDNO("External No."));
      IF EDIRecDocFields.FIND('-') THEN
        REPEAT
          CustSegmentGroup := EDIRecDocFields."Segment Group";
          EDIRecDocField.RESET;
          EDIRecDocField.SETCURRENTKEY("Internal Doc. No.","Segment Group");
          EDIRecDocField.SETRANGE("Internal Doc. No.",EDIRecDocHdr2."Internal Doc. No.");
          EDIRecDocField.SETRANGE("Segment Group",CustSegmentGroup);
          EDIRecDocField.SETRANGE(Segment,'HL');
          EDIRecDocField.SETRANGE(Element,'01');
          IF EDIRecDocField.FIND('-') THEN
            IF EDIRecDocField."Field Dec. Value" <> 0 THEN
              CustomerHLID := EDIRecDocField."Field Dec. Value"
            ELSE
              ERROR(Text018,CustSegmentGroup);
          Customer.RESET;
          Customer.SETRANGE("EDI Trade Partner",TradePtnrNo);
          IF EDITradePartner."Customer No." = '' THEN
            Customer.SETRANGE("External No.",COPYSTR(EDIRecDocFields."Field Text Value",1,20))
          ELSE
            Customer.SETRANGE("No.",EDITradePartner."Customer No.");
          IF NOT Customer.FIND('-') THEN
            ERROR(Text017);
          CustomerNo := Customer."No.";

        EDIRecDocField.RESET;
        EDIRecDocField.SETRANGE("Internal Doc. No.",EDIRecDocHdr2."Internal Doc. No.");
        EDIRecDocField.SETRANGE(Segment,'HL');
        EDIRecDocField.SETRANGE(Element,'02');
        EDIRecDocField.SETRANGE("Field Dec. Value",CustomerHLID);
        IF NOT EDIRecDocField.FIND('-') THEN
          ERROR(Text020);
        EDIRecDocField.RESET;
        EDIRecDocField.SETRANGE("Internal Doc. No.",EDIRecDocHdr2."Internal Doc. No.");
        EDIRecDocField.SETRANGE(Segment,'HL');
        EDIRecDocField.SETRANGE(Element,'02');
        EDIRecDocField.SETRANGE("Field Dec. Value",CustomerHLID);
        IF EDIRecDocField.FIND('-') THEN BEGIN
          REPEAT
            DCShiptoCodeFound := FALSE;
            AssignDC := FALSE;
            DCSegmentGroup := EDIRecDocField."Segment Group";
            EDIRecDocField2.RESET;
            EDIRecDocField2.SETCURRENTKEY("Internal Doc. No.","Segment Group");
            EDIRecDocField2.SETRANGE("Internal Doc. No.",EDIRecDocHdr2."Internal Doc. No.");
            EDIRecDocField2.SETRANGE("Segment Group",DCSegmentGroup);
            EDIRecDocField2.SETRANGE(Segment,'HL');
            EDIRecDocField2.SETRANGE(Element,'01');
            IF EDIRecDocField2.FIND('-') THEN
              IF EDIRecDocField2."Field Dec. Value" <> 0 THEN
                DistCenterHLID := EDIRecDocField2."Field Dec. Value"
              ELSE
                ERROR(Text018,DCSegmentGroup);
            EDIRecDocField2.RESET;
            EDIRecDocField2.SETCURRENTKEY("Internal Doc. No.","Segment Group");
            EDIRecDocField2.SETRANGE("Internal Doc. No.",EDIRecDocHdr2."Internal Doc. No.");
            EDIRecDocField2.SETRANGE("Segment Group",DCSegmentGroup);
            EDIRecDocField2.SETRANGE("NAV Table No.",DATABASE::"Ship-to Address");
            EDIRecDocField2.SETRANGE("Nav Field No.",ShiptoAddress.FIELDNO("External No."));
            IF NOT EDIRecDocField2.FIND('-') THEN
              ERROR(Text013);
            DistCenterExtCode := EDIRecDocField2."Field Text Value";
            EffectiveDate := 0D;
            EDIRecDocField2.SETRANGE("Nav Field No.");
            EDIRecDocField2.SETRANGE("Nav Field No.",ShiptoAddress.FIELDNO("Effective Date"));
            IF EDIRecDocField2.FIND('-') THEN
              EffectiveDate := EDIRecDocField2."Field Date Value";
            ShiptoAddress.RESET;
            ShiptoAddress.SETRANGE("Customer No.",CustomerNo);
            ShiptoAddress.SETRANGE("External No.",DistCenterExtCode);
            IF NOT ShiptoAddress.FIND('-') THEN
              ERROR(Text019,DistCenterExtCode);
            IF EffectiveDate <> 0D THEN BEGIN
              ShiptoAddress."Effective Date" := EffectiveDate;
              ShiptoAddress.MODIFY;
            END;
            DCShiptoCode := ShiptoAddress.Code;
            CreateCrossReference;
            EDIRecDocField2.RESET;
            EDIRecDocFields2.SETCURRENTKEY(
              "Internal Doc. No.","Segment Group","NAV Table No.","Nav Field No.");
            EDIRecDocField2.SETRANGE("Internal Doc. No.",EDIRecDocHdr2."Internal Doc. No.");
            EDIRecDocField2.SETRANGE(Segment,'HL');
            EDIRecDocField2.SETRANGE(Element,'02');
            EDIRecDocField2.SETRANGE("Field Dec. Value",DistCenterHLID);
            IF EDIRecDocField2.FIND('-') THEN BEGIN
              StoreSegmentGroup := EDIRecDocField2."Segment Group";
              EDIRecDocField2.RESET;
              EDIRecDocField2.SETCURRENTKEY("Internal Doc. No.","Segment Group");
              EDIRecDocField2.SETRANGE("Internal Doc. No.",EDIRecDocHdr2."Internal Doc. No.");
              EDIRecDocField2.SETRANGE("Segment Group",StoreSegmentGroup);
              EDIRecDocField2.SETRANGE("NAV Table No.",DATABASE::"Ship-to Address");
              EDIRecDocField2.SETRANGE("Nav Field No.",ShiptoAddress.FIELDNO("External No."));
              IF NOT EDIRecDocField2.FIND('-') THEN
                ERROR(Text013);
              REPEAT
                EffectiveDate := 0D;
                EDIRecDocField3.RESET;
                EDIRecDocField3.SETCURRENTKEY("Internal Doc. No.","Segment Group");
                EDIRecDocField3.SETRANGE("Internal Doc. No.",EDIRecDocHdr2."Internal Doc. No.");
                EDIRecDocField3.SETRANGE("Segment Group",StoreSegmentGroup);
                EDIRecDocField3.SETRANGE("NAV Table No.",DATABASE::"Ship-to Address");
                EDIRecDocField3.SETRANGE("Nav Field No.",ShiptoAddress.FIELDNO("Effective Date"));
                IF EDIRecDocField3.FIND('-') THEN
                  EffectiveDate := EDIRecDocField3."Field Date Value";
                ShiptoExtCode := COPYSTR(EDIRecDocField2."Field Text Value",1,20);
                ShiptoAddress.RESET;
                ShiptoAddress.SETRANGE("Customer No.",CustomerNo);
                ShiptoAddress.SETRANGE("External No.",ShiptoExtCode);
                IF NOT ShiptoAddress.FIND('-') THEN
                  ERROR(Text019,ShiptoExtCode);
                ShipToCode := ShiptoAddress.Code;
                ShiptoAddress.GET(CustomerNo,ShipToCode);
                ShiptoAddress.VALIDATE("Dist. Center Ship-to Code",DCShiptoCode);
                ShiptoAddress."Dist. Center Ext. Code" := DistCenterExtCode;
                ShiptoAddress."EDI Internal Doc. No." := EDIRecDocFields2."Internal Doc. No.";
                ShiptoAddress."Change Date" := TODAY;
                IF EffectiveDate <> 0D THEN BEGIN
                  ShiptoAddress."Effective Date" := EffectiveDate;
                  ShiptoAddress.MODIFY;
                END;
                ShiptoAddress.MODIFY;
                AssignDC := TRUE;
                CreateCrossReference;
                ShiptoExtCode := '';
                ShipToCode := '';
              UNTIL EDIRecDocField2.NEXT = 0;
              AssignDC := FALSE;
            END;
            DistCenterExtCode := '';
            DCShiptoCode := '';
          UNTIL EDIRecDocField.NEXT = 0;
        END ELSE
          ERROR(Text021);
      UNTIL EDIRecDocFields.NEXT = 0
        ELSE
          ERROR(Text012);
    END;

    BEGIN
    END.
  }
}

