OBJECT Codeunit 50050 ReportSelection Update
{
  OBJECT-PROPERTIES
  {
    Date=07/01/20;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=NAV2017 GO LIVE;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            UpdatePrinterSelection;

            UpdateWMDMReportSelection;

            UpdateEMailRule;

            UpdateReportSelection; //SC 01162018

            CreateBankStatement; //SC 01162018

            UpdateSalesAndReceivablesSetup; //EB 01182018
          END;

  }
  CODE
  {
    VAR
      ReportSelection@1000000000 : Record 77;

    LOCAL PROCEDURE UpdatePrinterSelection@1000000012();
    VAR
      PrinterSelection@1000000000 : Record 78;
      NewPrinterSelection@1000000002 : Record 78;
      NewReportID@1000000001 : Integer;
    BEGIN
      IF PrinterSelection.FINDSET THEN
      REPEAT
        NewReportID := GetNewReportID(PrinterSelection."Report ID");
        IF NewReportID <> 0 THEN BEGIN
           NewPrinterSelection.INIT;
          NewPrinterSelection.TRANSFERFIELDS(PrinterSelection);
          NewPrinterSelection."Report ID" := NewReportID;
          IF NewPrinterSelection.INSERT THEN;
        END;
      UNTIL PrinterSelection.NEXT = 0;
    END;

    LOCAL PROCEDURE UpdateEMailRule@1000000000();
    VAR
      EMailAttachment@1000000000 : Record 14000909;
      NewReportID@1000000001 : Integer;
    BEGIN
      //TM BEG
      IF EMailAttachment.FINDSET THEN
      REPEAT
        IF EMailAttachment."Attachment Report ID" <> 0 THEN BEGIN
          NewReportID := GetNewReportID(EMailAttachment."Attachment Report ID");
          IF NewReportID <> 0 THEN BEGIN
            EMailAttachment."Attachment Report ID" := NewReportID;
            EMailAttachment.MODIFY;
          END;
        END;
      UNTIL EMailAttachment.NEXT = 0;
      //TM END
    END;

    LOCAL PROCEDURE UpdateWMDMReportSelection@1000000001();
    VAR
      WMDMRepSel@1000000000 : Record 23044508;
      NewReportID@1000000001 : Integer;
    BEGIN
      //TM BEG 01092018
      NewReportID := GetNewReportID(5751); //Put-away
      IF NewReportID <> 0 THEN BEGIN
        WMDMRepSel.SETRANGE("Report ID", 5751);
        IF WMDMRepSel.FINDSET THEN
        REPEAT
          WMDMRepSel."Report ID" := NewReportID;
          WMDMRepSel.MODIFY;
        UNTIL WMDMRepSel.NEXT = 0;
      END;

      //TM END 01092018
    END;

    LOCAL PROCEDURE GetNewReportID@1000000002(OldReportID@1000000000 : Integer) : Integer;
    BEGIN
      //TM BEG 01092018
      CASE OldReportID OF
        722: EXIT(51050);
        5702: EXIT(51051);
        5703: EXIT(51052);
        5704: EXIT(51053);
        5751: EXIT(51054);
        5752: EXIT(51055);
        7301: EXIT(51056);
        7307: EXIT(51057);
        10062: EXIT(51058);
        10072: EXIT(51059);
        10073: EXIT(51060);
        10074: EXIT(51061);
        10075: EXIT(51062);
        10076: EXIT(51063);
        10077: EXIT(51064);
        10081: EXIT(51065);
        10087: EXIT(317);
        10121: EXIT(51066);
        10122: EXIT(51067);
        10123: EXIT(51068);
        10124: EXIT(51069);
        10132: EXIT(51070);
        10133: EXIT(51071);
        10135: EXIT(51073);
        10411: EXIT(51075);
      END;
      EXIT(0);
      //TM END 01092017
    END;

    LOCAL PROCEDURE UpdateReportSelection@1000000003();
    VAR
      ReportSelection@1000000000 : Record 77;
      NewReportID@1000000001 : Integer;
      RepSelection@1000000002 : Record 77;
    BEGIN
      //SC 01162018
      IF RepSelection.FINDSET THEN
          REPEAT
            NewReportID := GetNewReportID(RepSelection."Report ID"); //Put-away
            IF NewReportID <> 0 THEN
              BEGIN
                ReportSelection.SETRANGE("Report ID",RepSelection."Report ID");
                  IF ReportSelection.FINDSET THEN
                      REPEAT
                        ReportSelection.VALIDATE("Report ID",NewReportID);
                        ReportSelection.MODIFY;
                      UNTIL ReportSelection.NEXT =0;
               END;
           UNTIL RepSelection.NEXT=0;
      //SC 01162018
    END;

    LOCAL PROCEDURE CreateBankStatement@1000000004();
    VAR
      GLSetup@1000000000 : Record 98;
      BankExImp@1000000001 : Record 1200;
      BankAcc@1000000002 : Record 270;
    BEGIN
      //SC 01162018
        //GLsetup check
           GLSetup.RESET;
           IF GLSetup.GET THEN
              BEGIN
                GLSetup."Bank Recon. with Auto. Match" := TRUE;
                GLSetup.MODIFY;
                END;

        //BankExport/Import setup
          BankExImp.INIT;
          BankExImp.Code :='BKCHR';
          BankExImp.Name := 'Bank Statment Import';
          BankExImp.Direction := BankExImp.Direction::Import;
          BankExImp."Processing Codeunit ID":= 1270;
          BankExImp."Data Exch. Def. Code":= 'BANKCHR';
          BankExImp."Preserve Non-Latin Characters" :=TRUE;
          BankExImp.INSERT;

        //Update Bank accounts with statment
        BankAcc.RESET;
        IF BankAcc.FINDSET THEN
          REPEAT
            BankAcc."Bank Statement Import Format" :='BKCHR';
            BankAcc.MODIFY;
            UNTIL BankAcc.NEXT =0;
      //SC 01162018
    END;

    LOCAL PROCEDURE UpdateSalesAndReceivablesSetup@1000000005();
    VAR
      Sales_ReceivablesSetup@1000000000 : Record 311;
    BEGIN
      //EB 01182018
        Sales_ReceivablesSetup.GET;
        Sales_ReceivablesSetup."Freight G/L Acc. No.":='411000';
        Sales_ReceivablesSetup."Printer Name For Invoice Post"  :='NYPD030';
        Sales_ReceivablesSetup.MODIFY();
      //EB 01182018
    END;

    BEGIN
    {
      72251050
      570251051
      570351052
      570451053
      575151054
      575251055
      730151056
      730751057
      1006251058
      1007251059
      1007351060
      1007451061
      1007551062
      1007651063
      1007751064
      1008151065
      10087317
      1012151066
      1012251067
      1012351068
      1012451069
      1013251070
      1013351071
      1013551073
      1041151075
    }
    END.
  }
}

