OBJECT Codeunit 51755 Table120EventSubscriber
{
  OBJECT-PROPERTIES
  {
    Date=07/01/20;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=NAVEVENT;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE Tb120_UpdatePurchOrderQtytoInv@1000000030(VAR Rec@1170000000 : Record 120);
    VAR
      PurchHeader@1000000000 : Record 38;
      PurchLine@1000000001 : Record 39;
      PurchRcptLine@1000000002 : Record 121;
      Found@1000000003 : Boolean;
      Text50000@1170000002 : TextConst 'ENU=Purchase Order cannot be updated. Please update Purchase Order manually.';
      Text50001@1170000001 : TextConst 'ENU=Purchase Order Lines are not found.';
    BEGIN
      // <TPZ1056>
      WITH Rec DO BEGIN
        TESTFIELD("Order No.");

        Found := FALSE;
        PurchHeader.GET(PurchHeader."Document Type"::Order,"Order No.");

        PurchLine.RESET;
        PurchLine.SETRANGE("Document Type",PurchHeader."Document Type");
        PurchLine.SETRANGE("Document No.",PurchHeader."No.");
        PurchLine.FINDSET;
        REPEAT
          PurchRcptLine.RESET;
          PurchRcptLine.SETRANGE("Document No.","No.");
          PurchRcptLine.SETRANGE("Line No.",PurchLine."Line No.");
          PurchRcptLine.SETRANGE(Type,PurchLine.Type);
          PurchRcptLine.SETRANGE("No.",PurchLine."No.");
          PurchRcptLine.SETFILTER(Quantity,'<>%1',0);
          IF PurchRcptLine.FINDFIRST THEN BEGIN
            IF (PurchLine."Qty. Rcd. Not Invoiced" < PurchRcptLine.Quantity) OR
               (PurchLine.Quantity - PurchLine."Quantity Invoiced" < PurchRcptLine.Quantity)
            THEN
              ERROR(Text50000);

            PurchLine.VALIDATE("Qty. to Invoice",PurchRcptLine.Quantity);
            Found := TRUE;
          END ELSE
            PurchLine.VALIDATE("Qty. to Invoice",0);
          PurchLine.MODIFY;
        UNTIL PurchLine.NEXT = 0;

        IF NOT Found THEN
          ERROR(Text50001);

        COMMIT;
      // </TPZ1056>
      END;
    END;

    BEGIN
    END.
  }
}

