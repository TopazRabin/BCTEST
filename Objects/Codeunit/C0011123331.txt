OBJECT Codeunit 11123331 SC - Event Management
{
  OBJECT-PROPERTIES
  {
    Date=07/01/20;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=SCW19.2.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Context@11123304 : Codeunit 11123305;
      Dispatcher@11123303 : Codeunit 11123306;
      RecMgt@11123302 : Codeunit 11123326;

    PROCEDURE OnInitParams@11123303(VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnInitParams',FALSE) THEN
        EXIT;

      Dispatcher.DispatchInternal('OnInitParams',Params);
    END;

    PROCEDURE OnInitFieldValues@11123307(VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnInitFieldValues',FALSE) THEN
        EXIT;

      Dispatcher.DispatchInternal('OnInitFieldValues',Params);
    END;

    PROCEDURE OnInitLineFieldValues@11123324(VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnInitLineFieldValues',FALSE) THEN
        EXIT;

      Dispatcher.DispatchInternal('OnInitLineFieldValues',Params);
    END;

    PROCEDURE "-- Catalog --"@11123305();
    BEGIN
    END;

    PROCEDURE OnBeforeGetProducts@11123330(VAR XMLNodeBuff@11123304 : Record 11123303;VAR Item@11123306 : Record 27;VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnBeforeGetProducts',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassItemRef(Item);
      Dispatcher.DispatchInternal('OnBeforeGetProducts',Params);
      RecMgt.RetrieveItemRef(Item);
    END;

    PROCEDURE OnGetProduct@11123332(VAR XMLNodeBuff@11123304 : Record 11123303;VAR Item@11123305 : Record 27;VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnGetProduct',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassItemRef(Item);
      Dispatcher.DispatchInternal('OnGetProduct',Params);
      RecMgt.RetrieveItemRef(Item);
    END;

    PROCEDURE OnAfterGetProduct@11123331(VAR XMLNodeBuff@11123303 : Record 11123303;VAR Item@11123305 : Record 27;VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnAfterGetProduct',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassItemRef(Item);
      Dispatcher.DispatchInternal('OnAfterGetProduct',Params);
      RecMgt.RetrieveItemRef(Item);
    END;

    PROCEDURE OnBeforeGetVariants@11123379(VAR XMLNodeBuff@11123303 : Record 11123303;VAR ItemVariant@11123306 : Record 5401;VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnBeforeGetVariants',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassVariantRef(ItemVariant);
      Dispatcher.DispatchInternal('OnBeforeGetVariants',Params);
      RecMgt.RetrieveVariantRef(ItemVariant);
    END;

    PROCEDURE OnGetVariant@11123385(VAR XMLNodeBuff@11123303 : Record 11123303;VAR ItemVariant@11123305 : Record 5401;VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnGetVariant',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassVariantRef(ItemVariant);
      Dispatcher.DispatchInternal('OnGetVariant',Params);
      RecMgt.RetrieveVariantRef(ItemVariant);
    END;

    PROCEDURE OnGetAvailableStock@11123387(VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnGetAvailableStock',FALSE) THEN
        EXIT;

      Dispatcher.DispatchInternal('OnGetAvailableStock',Params);
    END;

    PROCEDURE OnGetSalesPrice@11123380(VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnGetSalesPrice',FALSE) THEN
        EXIT;

      Dispatcher.DispatchInternal('OnGetSalesPrice',Params);
    END;

    PROCEDURE OnGetListPrice@11123384(VAR Params@11123302 : Record 11123310);
    BEGIN
      Dispatcher.DispatchInternal('OnGetListPrice',Params);
    END;

    PROCEDURE "-- Customer --"@11123306();
    BEGIN
    END;

    PROCEDURE OnBeforeGetCustomers@11123341(VAR XMLNodeBuff@11123303 : Record 11123303;VAR Customer@11123306 : Record 18;VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnBeforeGetCustomers',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassCustomerRef(Customer);
      Dispatcher.DispatchInternal('OnBeforeGetCustomers',Params);
      RecMgt.RetrieveCustomerRef(Customer);
    END;

    PROCEDURE OnGetCustomer@11123304(VAR XMLNodeBuff@11123303 : Record 11123303;VAR Customer@11123305 : Record 18;VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnGetCustomer',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassCustomerRef(Customer);
      Dispatcher.DispatchInternal('OnGetCustomer',Params);
      RecMgt.RetrieveCustomerRef(Customer);
    END;

    PROCEDURE OnAfterGetCustomer@11123340(VAR XMLNodeBuff@11123303 : Record 11123303;VAR Customer@11123305 : Record 18;VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnAfterGetCustomer',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassCustomerRef(Customer);
      Dispatcher.DispatchInternal('OnAfterGetCustomer',Params);
      RecMgt.RetrieveCustomerRef(Customer);
    END;

    PROCEDURE OnSaveCustomer@11123346(VAR Customer@11123303 : Record 18;VAR Params@11123304 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnSaveCustomer',FALSE) THEN
        EXIT;

      RecMgt.PassCustomerRef(Customer);
      Dispatcher.DispatchInternal('OnSaveCustomer',Params);
      RecMgt.RetrieveCustomerRef(Customer);
    END;

    PROCEDURE OnBeforeGetSalespersons@11123345(VAR XMLNodeBuff@11123303 : Record 11123303;VAR Salesperson@11123306 : Record 50027;VAR Params@11123302 : Record 11123310);
    BEGIN
      //<TPZ2027> - change in Function Parameters
      IF NOT Dispatcher.GetAndCheckOperation('OnBeforeGetSalespersons',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassSalespersonRef(Salesperson);
      Dispatcher.DispatchInternal('OnBeforeGetSalespersons',Params);
      RecMgt.RetrieveSalespersonRef(Salesperson);
    END;

    PROCEDURE OnGetSalesperson@11123308(VAR XMLNodeBuff@11123303 : Record 11123303;VAR Salesperson@11123305 : Record 50027;VAR Params@11123302 : Record 11123310);
    BEGIN
      //<TPZ2027> - change in Function Parameters
      IF NOT Dispatcher.GetAndCheckOperation('OnGetSalesperson',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassSalespersonRef(Salesperson);
      Dispatcher.DispatchInternal('OnGetSalesperson',Params);
      RecMgt.RetrieveSalespersonRef(Salesperson);
    END;

    PROCEDURE OnAfterGetSalesperson@11123343(VAR XMLNodeBuff@11123303 : Record 11123303;VAR Salesperson@11123305 : Record 50027;VAR Params@11123302 : Record 11123310);
    BEGIN
      //<TPZ2027> - change in Function Parameters
      IF NOT Dispatcher.GetAndCheckOperation('OnAfterGetSalesperson',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassSalespersonRef(Salesperson);
      Dispatcher.DispatchInternal('OnAfterGetSalesperson',Params);
      RecMgt.RetrieveSalespersonRef(Salesperson);
    END;

    PROCEDURE OnSaveSalesperson@11123302(VAR Salesperson@11123303 : Record 50027;VAR Params@11123304 : Record 11123310);
    BEGIN
      //<TPZ2027> - change in Function Parameters
      IF NOT Dispatcher.GetAndCheckOperation('OnSaveSalesperson',FALSE) THEN
        EXIT;

      RecMgt.PassSalespersonRef(Salesperson);
      Dispatcher.DispatchInternal('OnSaveSalesperson',Params);
      RecMgt.RetrieveSalespersonRef(Salesperson);
    END;

    PROCEDURE OnBeforeGetContacts@11123348(VAR XMLNodeBuff@11123303 : Record 11123303;VAR Contact@11123306 : Record 5050;VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnBeforeGetContacts',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassContactRef(Contact);
      Dispatcher.DispatchInternal('OnBeforeGetContacts',Params);
      RecMgt.RetrieveContactRef(Contact);
    END;

    PROCEDURE OnGetContact@11123311(VAR XMLNodeBuff@11123303 : Record 11123303;VAR Contact@11123305 : Record 5050;VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnGetContact',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassContactRef(Contact);
      Dispatcher.DispatchInternal('OnGetContact',Params);
      RecMgt.RetrieveContactRef(Contact);
    END;

    PROCEDURE OnAfterGetContact@11123347(VAR XMLNodeBuff@11123303 : Record 11123303;VAR Contact@11123305 : Record 5050;VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnAfterGetContact',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassContactRef(Contact);
      Dispatcher.DispatchInternal('OnAfterGetContact',Params);
      RecMgt.RetrieveContactRef(Contact);
    END;

    PROCEDURE OnSaveContact@11123356(VAR Contact@11123303 : Record 5050;VAR Params@11123304 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnSaveContact',FALSE) THEN
        EXIT;

      RecMgt.PassContactRef(Contact);
      Dispatcher.DispatchInternal('OnSaveContact',Params);
      RecMgt.RetrieveContactRef(Contact);
    END;

    PROCEDURE OnBeforeGetShippingMethods@11123355(VAR XMLNodeBuff@11123303 : Record 11123303;VAR ShippingAgentService@11123308 : Record 5790;VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnBeforeGetShippingMethods',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassShipAgentServiceRef(ShippingAgentService);
      Dispatcher.DispatchInternal('OnBeforeGetShippingMethods',Params);
      RecMgt.RetrieveShipAgentServiceRef(ShippingAgentService);
    END;

    PROCEDURE OnGetShippingMethod@11123378(VAR XMLNodeBuff@11123303 : Record 11123303;VAR ShippingAgent@11123308 : Record 291;VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnGetShippingMethod',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassShipAgentRef(ShippingAgent);
      Dispatcher.DispatchInternal('OnGetShippingMethod',Params);
      RecMgt.RetrieveShipAgentRef(ShippingAgent);
    END;

    PROCEDURE "-- Order --"@11123309();
    BEGIN
    END;

    PROCEDURE OnInitDocument@11123312(VAR SalesHeader@11123302 : Record 36;VAR Params@11123303 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnInitDocument',FALSE) THEN
        EXIT;

      RecMgt.PassSalesHeaderRef(SalesHeader);
      Dispatcher.DispatchInternal('OnInitDocument',Params);
      RecMgt.RetrieveSalesHeaderRef(SalesHeader);
    END;

    PROCEDURE OnBeforeSaveDocument@11123310(VAR SalesHeader@11123303 : Record 36;VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnBeforeSaveDocument',FALSE) THEN
        EXIT;

      RecMgt.PassSalesHeaderRef(SalesHeader);
      Dispatcher.DispatchInternal('OnBeforeSaveDocument',Params);
      RecMgt.RetrieveSalesHeaderRef(SalesHeader);
    END;

    PROCEDURE OnAfterAddDocumentLines@11123313(VAR SalesHeader@11123303 : Record 36;VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnAfterAddDocumentLines',FALSE) THEN
        EXIT;

      RecMgt.PassSalesHeaderRef(SalesHeader);
      Dispatcher.DispatchInternal('OnAfterAddDocumentLines',Params);
      RecMgt.RetrieveSalesHeaderRef(SalesHeader);
    END;

    PROCEDURE OnBeforeCreateDocResponse@11123314(VAR SalesHeader@11123303 : Record 36;VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnBeforeCreateDocResponse',FALSE) THEN
        EXIT;

      RecMgt.PassSalesHeaderRef(SalesHeader);
      Dispatcher.DispatchInternal('OnBeforeCreateDocResponse',Params);
      RecMgt.RetrieveSalesHeaderRef(SalesHeader);
    END;

    PROCEDURE OnGetSalesLine@11123317(VAR XMLNodeBuff@11123304 : Record 11123303;VAR SalesLine@11123303 : Record 37;VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnGetSalesLine',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassSalesLineRef(SalesLine);
      Dispatcher.DispatchInternal('OnGetSalesLine',Params);
      RecMgt.RetrieveSalesLineRef(SalesLine);
    END;

    PROCEDURE OnAfterCreateDocResponse@11123316(VAR XMLNodeBuff@11123302 : Record 11123303;VAR SalesHeader@11123304 : Record 36;VAR Params@11123303 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnAfterCreateDocResponse',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassSalesHeaderRef(SalesHeader);
      Dispatcher.DispatchInternal('OnAfterCreateDocResponse',Params);
      RecMgt.RetrieveSalesHeaderRef(SalesHeader);
    END;

    PROCEDURE OnBeforeAddDocumentLine@11123319(VAR SalesLine@11123302 : Record 37;VAR Params@11123303 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnBeforeAddDocumentLine',FALSE) THEN
        EXIT;

      RecMgt.PassSalesLineRef(SalesLine);
      Dispatcher.DispatchInternal('OnBeforeAddDocumentLine',Params);
      RecMgt.RetrieveSalesLineRef(SalesLine);
    END;

    PROCEDURE OnAddDocumentLine@11123320(VAR SalesLine@11123302 : Record 37;VAR Params@11123303 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnAddDocumentLine',FALSE) THEN
        EXIT;

      RecMgt.PassSalesLineRef(SalesLine);
      Dispatcher.DispatchInternal('OnAddDocumentLine',Params);
      RecMgt.RetrieveSalesLineRef(SalesLine);
    END;

    PROCEDURE OnAfterAddDocumentLine@11123321(VAR SalesLine@11123302 : Record 37;VAR Params@11123303 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnAfterAddDocumentLine',FALSE) THEN
        EXIT;

      RecMgt.PassSalesLineRef(SalesLine);
      Dispatcher.DispatchInternal('OnAfterAddDocumentLine',Params);
      RecMgt.RetrieveSalesLineRef(SalesLine);
    END;

    PROCEDURE OnBeforeGetSalesDocuments@11123315(VAR RecRef@11123302 : RecordRef;VAR Params@11123303 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnBeforeGetSalesDocuments',FALSE) THEN
        EXIT;

      RecMgt.PassRecRef(RecRef);
      Dispatcher.DispatchInternal('OnBeforeGetSalesDocuments',Params);
      RecMgt.RetrieveRecRef(RecRef);
    END;

    PROCEDURE "-- History --"@11123329();
    BEGIN
    END;

    PROCEDURE OnBeforeCreateShipmentResponse@11123323(VAR SalesShipHeader@11123303 : Record 110;VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnBeforeCreateShipmentResponse',FALSE) THEN
        EXIT;

      RecMgt.PassSalesShipHeaderRef(SalesShipHeader);
      Dispatcher.DispatchInternal('OnBeforeCreateShipmentResponse',Params);
      RecMgt.RetrieveSalesShipHeaderRef(SalesShipHeader);
    END;

    PROCEDURE OnGetSalesShipmentLine@11123322(VAR XMLNodeBuff@11123304 : Record 11123303;VAR SalesShipLine@11123303 : Record 111;VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnGetSalesShipmentLine',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassSalesShipLineRef(SalesShipLine);
      Dispatcher.DispatchInternal('OnGetSalesShipmentLine',Params);
      RecMgt.RetrieveSalesShipLineRef(SalesShipLine);
    END;

    PROCEDURE OnAfterCreateShipmentResponse@11123318(VAR XMLNodeBuff@11123302 : Record 11123303;VAR SalesShipHeader@11123304 : Record 110;VAR Params@11123303 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnAfterCreateShipmentResponse',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassSalesShipHeaderRef(SalesShipHeader);
      Dispatcher.DispatchInternal('OnAfterCreateShipmentResponse',Params);
      RecMgt.RetrieveSalesShipHeaderRef(SalesShipHeader);
    END;

    PROCEDURE OnBeforeCreateInvoiceResponse@11123327(VAR SalesInvHeader@11123303 : Record 112;VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnBeforeCreateInvoiceResponse',FALSE) THEN
        EXIT;

      RecMgt.PassSalesInvHeaderRef(SalesInvHeader);
      Dispatcher.DispatchInternal('OnBeforeCreateInvoiceResponse',Params);
      RecMgt.RetrieveSalesInvHeaderRef(SalesInvHeader);
    END;

    PROCEDURE OnGetSalesInvoiceLine@11123326(VAR XMLNodeBuff@11123304 : Record 11123303;VAR SalesInvLine@11123303 : Record 113;VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnGetSalesInvoiceLine',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassSalesInvLineRef(SalesInvLine);
      Dispatcher.DispatchInternal('OnGetSalesInvoiceLine',Params);
      RecMgt.RetrieveSalesInvLineRef(SalesInvLine);
    END;

    PROCEDURE OnAfterCreateInvoiceResponse@11123325(VAR XMLNodeBuff@11123302 : Record 11123303;VAR SalesInvHeader@11123304 : Record 112;VAR Params@11123303 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnAfterCreateInvoiceResponse',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassSalesInvHeaderRef(SalesInvHeader);
      Dispatcher.DispatchInternal('OnAfterCreateInvoiceResponse',Params);
      RecMgt.RetrieveSalesInvHeaderRef(SalesInvHeader);
    END;

    PROCEDURE OnBeforeCreateCrMemoResponse@11123336(VAR SalesCrMemoHeader@11123303 : Record 114;VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnBeforeCreateCrMemoResponse',FALSE) THEN
        EXIT;

      RecMgt.PassSalesCrMemoHeaderRef(SalesCrMemoHeader);
      Dispatcher.DispatchInternal('OnBeforeCreateCrMemoResponse',Params);
      RecMgt.RetrieveSalesCrMemoHeaderRef(SalesCrMemoHeader);
    END;

    PROCEDURE OnGetSalesCrMemoLine@11123335(VAR XMLNodeBuff@11123304 : Record 11123303;VAR SalesCrMemoLine@11123303 : Record 115;VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnGetSalesCrMemoLine',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassSalesCrMemoLineRef(SalesCrMemoLine);
      Dispatcher.DispatchInternal('OnGetSalesCrMemoLine',Params);
      RecMgt.RetrieveSalesCrMemoLineRef(SalesCrMemoLine);
    END;

    PROCEDURE OnAfterCreateCrMemoResponse@11123334(VAR XMLNodeBuff@11123302 : Record 11123303;VAR SalesCrMemoHeader@11123304 : Record 114;VAR Params@11123303 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnAfterCreateCrMemoResponse',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassSalesCrMemoHeaderRef(SalesCrMemoHeader);
      Dispatcher.DispatchInternal('OnAfterCreateCrMemoResponse',Params);
      RecMgt.RetrieveSalesCrMemoHeaderRef(SalesCrMemoHeader);
    END;

    PROCEDURE OnBeforeCreateRtrnRcptResponse@11123342(VAR ReturnRcptHeader@11123303 : Record 6660;VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnBeforeCreateRtrnRcptResponse',FALSE) THEN
        EXIT;

      RecMgt.PassReturnRcptHeaderRef(ReturnRcptHeader);
      Dispatcher.DispatchInternal('OnBeforeCreateRtrnRcptResponse',Params);
      RecMgt.RetrieveReturnRcptHeaderRef(ReturnRcptHeader);
    END;

    PROCEDURE OnGetRtrnRcptLine@11123339(VAR XMLNodeBuff@11123304 : Record 11123303;VAR ReturnRcptLine@11123303 : Record 6661;VAR Params@11123302 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnGetRtrnRcptLine',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassReturnRcptLineRef(ReturnRcptLine);
      Dispatcher.DispatchInternal('OnGetRtrnRcptLine',Params);
      RecMgt.RetrieveReturnRcptLineRef(ReturnRcptLine);
    END;

    PROCEDURE OnAfterCreateRtrnRcptResponse@11123338(VAR XMLNodeBuff@11123302 : Record 11123303;VAR ReturnRcptHeader@11123304 : Record 6660;VAR Params@11123303 : Record 11123310);
    BEGIN
      IF NOT Dispatcher.GetAndCheckOperation('OnAfterCreateRtrnRcptResponse',FALSE) THEN
        EXIT;

      Context.SetXMLNodeBuff(XMLNodeBuff);
      RecMgt.PassReturnRcptHeaderRef(ReturnRcptHeader);
      Dispatcher.DispatchInternal('OnAfterCreateRtrnRcptResponse',Params);
      RecMgt.RetrieveReturnRcptHeaderRef(ReturnRcptHeader);
    END;

    BEGIN
    {
      2017-10-13 TPZ2027 EBAGIM
        Swaping Salesperon with MfrRep table
    }
    END.
  }
}

