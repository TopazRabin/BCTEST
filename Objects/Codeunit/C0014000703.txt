OBJECT Codeunit 14000703 Multi Document Package Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=06/28/17;
    Time=12:00:00 PM;
    Version List=SE0.55.13;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ShippingSetup@1000000000 : Record 14000707;
      ShippingAgent@1000000001 : Record 291;
      ShipperTypeMgt@1240030000 : Codeunit 14000711;
      ShippingSetupRetrieved@1000000002 : Boolean;
      Text001@1001 : TextConst 'ENU=Quantity not matching. Check sales orders or repack.';
      Text002@1002 : TextConst 'ENU=Quantity not matching. Check Purch orders or repack.';
      Text003@1003 : TextConst 'ENU=Quantity not matching. Check Transfer orders or repack.';
      Text004@1004 : TextConst 'ENU=Wrong splitting of package.';
      Text005@1005 : TextConst 'ENU=Part of the Multi Document Package has been posted.';
      Text006@1006 : TextConst 'ENU=Same sales order exist in both Multi Document Packages.';
      Text007@1007 : TextConst 'ENU=Too many orders being added together.';
      Text008@1008 : TextConst 'ENU=Same document exist in both Multi Document Packages.';
      Text009@1009 : TextConst 'ENU=Too many documents being added together.';
      Text010@1010 : TextConst 'ENU=Same sales order cannot be combined.';
      Text011@1011 : TextConst 'ENU=is unknown type.';

    LOCAL PROCEDURE GetShippingSetup@1();
    VAR
      SalesSetup@1000000000 : Record 311;
    BEGIN
      IF NOT ShippingSetupRetrieved THEN BEGIN
        ShippingSetup.GET;
        ShippingSetupRetrieved := TRUE;

        SalesSetup.GET;
        SalesSetup.TESTFIELD("Enable Shipping");
      END;
    END;

    LOCAL PROCEDURE GetShippingAgent@10(ShippingAgentCode@1000000000 : Code[10]);
    BEGIN
      IF (ShippingAgent.Code <> ShippingAgentCode) OR (ShippingAgentCode = '') THEN BEGIN
        GetShippingSetup;
        IF (ShippingAgentCode <> '') OR ShippingSetup."Shipping Agent Required" THEN
          ShippingAgent.GET(ShippingAgentCode)
        ELSE
          CLEAR(ShippingAgent);
      END;
    END;

    PROCEDURE SplitMultiDocPackage@2(VAR CurrentPackage@1240030001 : Record 14000701;VAR MultiDocPackageTmp@1240030002 : Record 14000701;PackingStation@1240030003 : Record 14000709;ShippingSetup@1240030004 : Record 14000707);
    VAR
      Package@1000000002 : Record 14000701;
      Package2@1240030000 : Record 14000701;
      TotalChargesPackage@1000000003 : Record 14000701;
      CurrentPackageLine@1000000004 : Record 14000702;
      OrgCurrentPackageLine@1000000005 : Record 14000702;
      MultiDocPackageLineTmp@1240030005 : TEMPORARY Record 14000702;
      TotalChargePackageLineTmp@1000000017 : TEMPORARY Record 14000702;
      TotalChargePackageLine2Tmp@1000000018 : TEMPORARY Record 14000702;
      PackageLine@1000000007 : Record 14000702;
      SalesLine@1000000008 : Record 37;
      SalesLineTmp@1000000009 : TEMPORARY Record 37;
      SalesHeader@1000000010 : Record 36;
      PurchLine@1240030006 : Record 39;
      PurchLineTmp@1240030007 : TEMPORARY Record 39;
      PurchHeader@1240030008 : Record 38;
      TransferLine@1240030011 : Record 5741;
      TransferLineTmp@1240030012 : TEMPORARY Record 5741;
      TransferHeader@1240030013 : Record 5740;
      PackingControl@1240030009 : Record 14000717;
      TempMultiDocNo@1240030010 : Code[250];
      TempOrderNo@1000000012 : Code[20];
      NoOfSalesOrders@1000000013 : Integer;
      CurrentSalesOrders@1000000014 : Integer;
      CostFactor@1000000015 : Decimal;
      TotalCostFactor@1000000016 : Decimal;
    BEGIN
      CurrentPackage.TESTFIELD(Closed);
      CurrentPackage.TESTFIELD("Multi Document Package");
      CurrentPackage.TESTFIELD("Multi Document Package Split",FALSE);
      CurrentPackage.TESTFIELD("Original Package No.",'');

      CASE CurrentPackage."Source Type" OF
        DATABASE::"Sales Header":
          BEGIN
            // reset temporary tables
            SalesLineTmp.RESET;
            SalesLineTmp.DELETEALL;

            // Calculate quantity to pack
            SalesLine.RESET;
            SalesLine.SETRANGE("Document Type",CurrentPackage."Source Subtype");
            SalesLine.SETFILTER("Document No.",CurrentPackage."Multi Document No.");
            SalesLine.SETRANGE(SalesLine."Drop Shipment",FALSE);
            SalesLine.SETRANGE(SalesLine.Pack,TRUE);
            SalesLine.SETFILTER("Outstanding Quantity",'<>0');
            IF ShippingSetup."Location Packing" THEN
              SalesLine.SETRANGE("Location Code",PackingStation."Location Code");
            IF SalesLine.FIND('-') THEN
              REPEAT
                SalesLineTmp := SalesLine;

                // Additional code required in Attain
                IF SalesLineTmp."Qty. to Ship (Base)" = 0 THEN BEGIN
                  SalesLineTmp.CALCFIELDS(
                    "E-Ship Whse. Outstanding Qty.","E-Ship Whse. Outst. Qty (Base)",
                    "E-Ship Whse. Shipment Qty.","E-Ship Whse. Ship. Qty (Base)");
                  SalesLineTmp."Qty. to Ship" :=
                    SalesLineTmp."E-Ship Whse. Outstanding Qty." + SalesLineTmp."E-Ship Whse. Shipment Qty.";
                  SalesLineTmp."Qty. to Ship (Base)" :=
                    SalesLineTmp."E-Ship Whse. Outst. Qty (Base)" +
                    SalesLineTmp."E-Ship Whse. Ship. Qty (Base)";
                END;

                IF SalesLineTmp."Qty. to Ship (Base)" = 0 THEN BEGIN
                  SalesLineTmp.CALCFIELDS(
                    "E-Ship Invt. Outstanding Qty.","E-Ship Invt. Outst. Qty (Base)");
                  SalesLineTmp."Qty. to Ship" := SalesLineTmp."E-Ship Invt. Outstanding Qty.";
                  SalesLineTmp."Qty. to Ship (Base)" := SalesLineTmp."E-Ship Invt. Outst. Qty (Base)";
                END;

                IF SalesLineTmp."Qty. to Ship (Base)" <> 0 THEN
                  SalesLineTmp.INSERT;
              UNTIL SalesLine.NEXT = 0;

            // remove already packed
            PackageLine.RESET;
            PackageLine.SETCURRENTKEY("Source Type","Source Subtype","Source ID");
            PackageLine.SETRANGE("Source Type",CurrentPackage."Source Type");
            PackageLine.SETRANGE("Source Subtype",CurrentPackage."Source Subtype");
            PackageLine.SETFILTER("Source ID",CurrentPackage."Multi Document No.");
            PackageLine.SETFILTER("Package No.",'<>%1',CurrentPackage."No.");
            PackageLine.SETRANGE(Type,PackageLine.Type::"Account (G/L)",PackageLine.Type::Resource);
            PackageLine.SETFILTER("Quantity (Base)",'<>0');
            IF ShippingSetup."Location Packing" THEN
              PackageLine.SETRANGE("Location Code",PackingStation."Location Code");
            IF PackageLine.FIND('-') THEN
              REPEAT
                IF Package."No." <> PackageLine."Package No." THEN
                  Package.GET(PackageLine."Package No.");

                IF Package.Closed THEN BEGIN
                  Package2.GET(Package."Original Package No.");
                  Package2.TESTFIELD("Multi Document Package Split");

                  SalesLineTmp.RESET;
                  SalesLineTmp.SETCURRENTKEY("Document Type",Type,"No.","Variant Code");
                  SalesLineTmp.SETRANGE("Document Type",CurrentPackage."Source Subtype");
                  SalesLineTmp.SETRANGE("Document No.",PackageLine."Source ID");
                  SalesLineTmp.SETRANGE(Type,PackageLine.Type);
                  SalesLineTmp.SETRANGE("No.",PackageLine."No.");
                  SalesLineTmp.SETRANGE("Variant Code",PackageLine."Variant Code");
                  SalesLineTmp.SETRANGE("Unit of Measure Code",PackageLine."Unit of Measure Code");
                  IF SalesLineTmp.FIND('-') THEN
                    REPEAT
                      IF PackageLine."Quantity (Base)" >= SalesLineTmp."Qty. to Ship (Base)" THEN BEGIN
                        PackageLine."Quantity (Base)" :=
                          PackageLine."Quantity (Base)" - SalesLineTmp."Qty. to Ship (Base)";
                        SalesLineTmp.DELETE;
                      END ELSE BEGIN
                        SalesLineTmp."Qty. to Ship (Base)" :=
                          SalesLineTmp."Qty. to Ship (Base)" - PackageLine."Quantity (Base)";
                        SalesLineTmp.MODIFY;
                        PackageLine."Quantity (Base)" := 0;
                      END;
                    UNTIL (SalesLineTmp.NEXT = 0) OR (PackageLine."Quantity (Base)" = 0);

                  IF PackageLine."Quantity (Base)" <> 0 THEN BEGIN
                    SalesLineTmp.SETRANGE("Unit of Measure Code");
                    IF SalesLineTmp.FIND('-') THEN
                      REPEAT
                        IF PackageLine."Quantity (Base)" >= SalesLineTmp."Qty. to Ship (Base)" THEN BEGIN
                          PackageLine."Quantity (Base)" :=
                            PackageLine."Quantity (Base)" - SalesLineTmp."Qty. to Ship (Base)";
                          SalesLineTmp.DELETE;
                        END ELSE BEGIN
                          SalesLineTmp."Qty. to Ship (Base)" :=
                            SalesLineTmp."Qty. to Ship (Base)" - PackageLine."Quantity (Base)";
                          SalesLineTmp.MODIFY;
                          PackageLine."Quantity (Base)" := 0;
                        END;
                      UNTIL (SalesLineTmp.NEXT = 0) OR (PackageLine."Quantity (Base)" = 0);

                    IF PackageLine."Quantity (Base)" <> 0 THEN
                      ERROR(Text001);
                  END;
                END;
              UNTIL PackageLine.NEXT = 0;

            // Calculate lines by sales orders
            MultiDocPackageTmp.RESET;
            MultiDocPackageTmp.DELETEALL;
            MultiDocPackageLineTmp.RESET;
            MultiDocPackageLineTmp.DELETEALL;

            CurrentPackageLine.RESET;
            CurrentPackageLine.SETRANGE("Package No.",CurrentPackage."No.");
            CurrentPackageLine.SETFILTER("No.",'<>%1','');
            CurrentPackageLine.SETFILTER(Quantity,'<>0');
            IF CurrentPackageLine.FIND('-') THEN BEGIN
              REPEAT
                OrgCurrentPackageLine := CurrentPackageLine;

                CASE CurrentPackageLine.Type OF
                  CurrentPackageLine.Type::"Account (G/L)",CurrentPackageLine.Type::Item,
                  CurrentPackageLine.Type::Resource:
                    BEGIN
                      SalesLineTmp.RESET;
                      SalesLineTmp.SETCURRENTKEY("Document Type",Type,"No.","Variant Code");
                      SalesLineTmp.SETRANGE("Document Type",CurrentPackage."Source Subtype");
                      IF CurrentPackageLine."Selected Source ID" <> '' THEN
                        SalesLineTmp.SETRANGE("Document No.",CurrentPackageLine."Selected Source ID");
                      SalesLineTmp.SETRANGE(Type,CurrentPackageLine.Type);
                      SalesLineTmp.SETRANGE("No.",CurrentPackageLine."No.");
                      SalesLineTmp.SETRANGE("Variant Code",CurrentPackageLine."Variant Code");
                      SalesLineTmp.SETRANGE("Unit of Measure Code",CurrentPackageLine."Unit of Measure Code");
                      IF SalesLineTmp.FIND('-') THEN
                        REPEAT
                          IF CurrentPackageLine."Quantity (Base)" >= SalesLineTmp."Qty. to Ship (Base)"
                          THEN BEGIN
                            UpdateTmpTables(
                              MultiDocPackageTmp,MultiDocPackageLineTmp,CurrentPackage,
                              OrgCurrentPackageLine,SalesLineTmp."Document No.",
                              SalesLineTmp."Qty. to Ship (Base)");

                            CurrentPackageLine."Quantity (Base)" :=
                              CurrentPackageLine."Quantity (Base)" - SalesLineTmp."Qty. to Ship (Base)";
                            SalesLineTmp.DELETE;
                          END ELSE BEGIN
                            UpdateTmpTables(
                              MultiDocPackageTmp,MultiDocPackageLineTmp,CurrentPackage,
                              OrgCurrentPackageLine,SalesLineTmp."Document No.",
                              CurrentPackageLine."Quantity (Base)");

                            SalesLineTmp."Qty. to Ship (Base)" :=
                              SalesLineTmp."Qty. to Ship (Base)" - CurrentPackageLine."Quantity (Base)";
                            SalesLineTmp.MODIFY;
                            CurrentPackageLine."Quantity (Base)" := 0;
                          END;
                        UNTIL (SalesLineTmp.NEXT = 0) OR (CurrentPackageLine."Quantity (Base)" = 0);

                      IF CurrentPackageLine."Quantity (Base)" <> 0 THEN BEGIN
                        SalesLineTmp.SETRANGE("Unit of Measure Code");
                        IF SalesLineTmp.FIND('-') THEN
                          REPEAT
                            IF CurrentPackageLine."Quantity (Base)" >= SalesLineTmp."Qty. to Ship (Base)"
                            THEN BEGIN
                              UpdateTmpTables(
                                MultiDocPackageTmp,MultiDocPackageLineTmp,CurrentPackage,
                                OrgCurrentPackageLine,SalesLineTmp."Document No.",
                                SalesLineTmp."Qty. to Ship (Base)");

                              CurrentPackageLine."Quantity (Base)" :=
                                CurrentPackageLine."Quantity (Base)" - SalesLineTmp."Qty. to Ship (Base)";
                              SalesLineTmp.DELETE;
                            END ELSE BEGIN
                              UpdateTmpTables(
                                MultiDocPackageTmp,MultiDocPackageLineTmp,CurrentPackage,
                                OrgCurrentPackageLine,SalesLineTmp."Document No.",
                                CurrentPackageLine."Quantity (Base)");

                              SalesLineTmp."Qty. to Ship (Base)" :=
                                SalesLineTmp."Qty. to Ship (Base)" - CurrentPackageLine."Quantity (Base)";
                              SalesLineTmp.MODIFY;
                              CurrentPackageLine."Quantity (Base)" := 0;
                            END;
                          UNTIL (SalesLineTmp.NEXT = 0) OR (CurrentPackageLine."Quantity (Base)" = 0);

                        IF CurrentPackageLine."Quantity (Base)" <> 0 THEN
                          ERROR(Text001);
                      END;
                    END;
                  CurrentPackageLine.Type::Package:
                    BEGIN
                      Package.RESET;
                      Package.SETCURRENTKEY("Original Package No.");
                      Package.SETRANGE("Original Package No.",CurrentPackageLine."No.");
                      IF Package.FIND('-') THEN
                        REPEAT
                          UpdateTmpTables(
                            MultiDocPackageTmp,MultiDocPackageLineTmp,CurrentPackage,
                            OrgCurrentPackageLine,Package."Source ID",
                            Package."Distribution Factor");

                          CurrentPackageLine."Quantity (Base)" :=
                            CurrentPackageLine."Quantity (Base)" - Package."Distribution Factor";
                        UNTIL Package.NEXT = 0;

                      IF CurrentPackageLine."Quantity (Base)" <> 0 THEN
                        ERROR(Text001);
                    END;
                END;
              UNTIL CurrentPackageLine.NEXT = 0;
            END ELSE BEGIN
              // Extra package
              TempMultiDocNo := CurrentPackage."Multi Document No.";
              WHILE TempMultiDocNo <> '' DO BEGIN
                IF STRPOS(TempMultiDocNo,'|') = 0 THEN
                  TempOrderNo := TempMultiDocNo
                ELSE
                  TempOrderNo := COPYSTR(TempMultiDocNo,1,STRPOS(TempMultiDocNo,'|') - 1);

                NoOfSalesOrders := NoOfSalesOrders + 1;
                MultiDocPackageTmp := CurrentPackage;
                MultiDocPackageTmp."No." := CurrentPackage."No." + '-' + TempOrderNo;
                MultiDocPackageTmp."Source ID" := TempOrderNo;
                MultiDocPackageTmp."Shipping Charge" := 1;
                MultiDocPackageTmp.INSERT;

                CurrentPackageLine.RESET;
                CurrentPackageLine.SETRANGE("Package No.",CurrentPackage."No.");
                IF CurrentPackageLine.FIND('-') THEN
                  REPEAT
                    MultiDocPackageLineTmp := CurrentPackageLine;
                    MultiDocPackageLineTmp."Package No." := MultiDocPackageTmp."No.";
                    MultiDocPackageLineTmp.INSERT;
                  UNTIL CurrentPackageLine.NEXT = 0;

                IF STRPOS(TempMultiDocNo,'|') = 0 THEN
                  TempMultiDocNo := ''
                ELSE
                  TempMultiDocNo := COPYSTR(TempMultiDocNo,STRPOS(TempMultiDocNo,'|') + 1);
              END;
            END;
          END;
        DATABASE::"Purchase Header":
          BEGIN
            // reset temporary tables
            PurchLineTmp.RESET;
            PurchLineTmp.DELETEALL;

            // Calculate quantity to pack
            PurchLine.RESET;
            PurchLine.SETRANGE("Document Type",CurrentPackage."Source Subtype");
            PurchLine.SETFILTER("Document No.",CurrentPackage."Multi Document No.");
            PurchLine.SETRANGE(PurchLine."Drop Shipment",FALSE);
            PurchLine.SETFILTER("Outstanding Quantity",'<>0');
            IF ShippingSetup."Location Packing" THEN
              PurchLine.SETRANGE("Location Code",PackingStation."Location Code");
            IF PurchLine.FIND('-') THEN
              REPEAT
                PurchLineTmp := PurchLine;

                // Additional code required in Attain
                IF PurchLineTmp."Document Type" = PurchLineTmp."Document Type"::"Return Order" THEN BEGIN
                  PurchLineTmp."Qty. to Receive" := PurchLineTmp."Return Qty. to Ship";
                  PurchLineTmp."Qty. to Receive (Base)" := PurchLineTmp."Return Qty. to Ship (Base)";
                END;

                IF PurchLineTmp."Qty. to Receive (Base)" = 0 THEN BEGIN
                  PurchLineTmp.CALCFIELDS(
                    "E-Ship Whse. Outstanding Qty.","E-Ship Whse. Outst. Qty (Base)",
                    "E-Ship Whse. Shipment Qty.","E-Ship Whse. Ship. Qty (Base)");
                  PurchLineTmp."Qty. to Receive" :=
                    PurchLineTmp."E-Ship Whse. Outstanding Qty." + PurchLineTmp."E-Ship Whse. Shipment Qty.";
                  PurchLineTmp."Qty. to Receive (Base)" :=
                    PurchLineTmp."E-Ship Whse. Outst. Qty (Base)" +
                    PurchLineTmp."E-Ship Whse. Ship. Qty (Base)";
                END;

                IF PurchLineTmp."Qty. to Receive (Base)" = 0 THEN BEGIN
                  PurchLineTmp.CALCFIELDS(
                    "E-Ship Invt. Outstanding Qty.","E-Ship Invt. Outst. Qty (Base)");
                  PurchLineTmp."Qty. to Receive" := PurchLineTmp."E-Ship Invt. Outstanding Qty.";
                  PurchLineTmp."Qty. to Receive (Base)" := PurchLineTmp."E-Ship Invt. Outst. Qty (Base)";
                END;

                IF PurchLineTmp."Qty. to Receive (Base)" <> 0 THEN
                  PurchLineTmp.INSERT;
              UNTIL PurchLine.NEXT = 0;

            // remove already packed
            PackageLine.RESET;
            PackageLine.SETCURRENTKEY("Source Type","Source Subtype","Source ID");
            PackageLine.SETRANGE("Source Type",CurrentPackage."Source Type");
            PackageLine.SETRANGE("Source Subtype",CurrentPackage."Source Subtype");
            PackageLine.SETFILTER("Source ID",CurrentPackage."Multi Document No.");
            PackageLine.SETFILTER("Package No.",'<>%1',CurrentPackage."No.");
            PackageLine.SETRANGE(Type,PackageLine.Type::"Account (G/L)",PackageLine.Type::Resource);
            PackageLine.SETFILTER("Quantity (Base)",'<>0');
            IF ShippingSetup."Location Packing" THEN
              PackageLine.SETRANGE("Location Code",PackingStation."Location Code");
            IF PackageLine.FIND('-') THEN
              REPEAT
                IF Package."No." <> PackageLine."Package No." THEN
                  Package.GET(PackageLine."Package No.");

                IF Package.Closed THEN BEGIN
                  Package2.GET(Package."Original Package No.");
                  Package2.TESTFIELD("Multi Document Package Split");

                  PurchLineTmp.RESET;
                  PurchLineTmp.SETCURRENTKEY("Document Type",Type,"No.","Variant Code");
                  PurchLineTmp.SETRANGE("Document Type",CurrentPackage."Source Subtype");
                  PurchLineTmp.SETRANGE("Document No.",PackageLine."Source ID");
                  PurchLineTmp.SETRANGE(Type,PackageLine.Type);
                  PurchLineTmp.SETRANGE("No.",PackageLine."No.");
                  PurchLineTmp.SETRANGE("Variant Code",PackageLine."Variant Code");
                  PurchLineTmp.SETRANGE("Unit of Measure Code",PackageLine."Unit of Measure Code");
                  IF PurchLineTmp.FIND('-') THEN
                    REPEAT
                      IF PackageLine."Quantity (Base)" >= PurchLineTmp."Qty. to Receive (Base)" THEN BEGIN
                        PackageLine."Quantity (Base)" :=
                          PackageLine."Quantity (Base)" - PurchLineTmp."Qty. to Receive (Base)";
                        PurchLineTmp.DELETE;
                      END ELSE BEGIN
                        PurchLineTmp."Qty. to Receive (Base)" :=
                          PurchLineTmp."Qty. to Receive (Base)" - PackageLine."Quantity (Base)";
                        PurchLineTmp.MODIFY;
                        PackageLine."Quantity (Base)" := 0;
                      END;
                    UNTIL (PurchLineTmp.NEXT = 0) OR (PackageLine."Quantity (Base)" = 0);

                  IF PackageLine."Quantity (Base)" <> 0 THEN BEGIN
                    PurchLineTmp.SETRANGE("Unit of Measure Code");
                    IF PurchLineTmp.FIND('-') THEN
                      REPEAT
                        IF PackageLine."Quantity (Base)" >= PurchLineTmp."Qty. to Receive (Base)" THEN BEGIN
                          PackageLine."Quantity (Base)" :=
                            PackageLine."Quantity (Base)" - PurchLineTmp."Qty. to Receive (Base)";
                          PurchLineTmp.DELETE;
                        END ELSE BEGIN
                          PurchLineTmp."Qty. to Receive (Base)" :=
                            PurchLineTmp."Qty. to Receive (Base)" - PackageLine."Quantity (Base)";
                          PurchLineTmp.MODIFY;
                          PackageLine."Quantity (Base)" := 0;
                        END;
                      UNTIL (PurchLineTmp.NEXT = 0) OR (PackageLine."Quantity (Base)" = 0);

                    IF PackageLine."Quantity (Base)" <> 0 THEN
                      ERROR(Text002);
                  END;
                END;
              UNTIL PackageLine.NEXT = 0;

            // Calculate lines by Purch orders
            MultiDocPackageTmp.RESET;
            MultiDocPackageTmp.DELETEALL;
            MultiDocPackageLineTmp.RESET;
            MultiDocPackageLineTmp.DELETEALL;

            CurrentPackageLine.RESET;
            CurrentPackageLine.SETRANGE("Package No.",CurrentPackage."No.");
            CurrentPackageLine.SETFILTER("No.",'<>%1','');
            CurrentPackageLine.SETFILTER(Quantity,'<>0');
            IF CurrentPackageLine.FIND('-') THEN BEGIN
              REPEAT
                OrgCurrentPackageLine := CurrentPackageLine;

                CASE CurrentPackageLine.Type OF
                  CurrentPackageLine.Type::"Account (G/L)",CurrentPackageLine.Type::Item,
                  CurrentPackageLine.Type::Resource:
                    BEGIN
                      PurchLineTmp.RESET;
                      PurchLineTmp.SETCURRENTKEY("Document Type",Type,"No.","Variant Code");
                      PurchLineTmp.SETRANGE("Document Type",CurrentPackage."Source Subtype");
                      IF CurrentPackageLine."Selected Source ID" <> '' THEN
                        PurchLineTmp.SETRANGE("Document No.",CurrentPackageLine."Selected Source ID");
                      PurchLineTmp.SETRANGE(Type,CurrentPackageLine.Type);
                      PurchLineTmp.SETRANGE("No.",CurrentPackageLine."No.");
                      PurchLineTmp.SETRANGE("Variant Code",CurrentPackageLine."Variant Code");
                      PurchLineTmp.SETRANGE("Unit of Measure Code",CurrentPackageLine."Unit of Measure Code");
                      IF PurchLineTmp.FIND('-') THEN
                        REPEAT
                          IF CurrentPackageLine."Quantity (Base)" >= PurchLineTmp."Qty. to Receive (Base)"
                          THEN BEGIN
                            UpdateTmpTables(
                              MultiDocPackageTmp,MultiDocPackageLineTmp,CurrentPackage,
                              OrgCurrentPackageLine,PurchLineTmp."Document No.",
                              PurchLineTmp."Qty. to Receive (Base)");

                            CurrentPackageLine."Quantity (Base)" :=
                              CurrentPackageLine."Quantity (Base)" - PurchLineTmp."Qty. to Receive (Base)";
                            PurchLineTmp.DELETE;
                          END ELSE BEGIN
                            UpdateTmpTables(
                              MultiDocPackageTmp,MultiDocPackageLineTmp,CurrentPackage,
                              OrgCurrentPackageLine,PurchLineTmp."Document No.",
                              CurrentPackageLine."Quantity (Base)");

                            PurchLineTmp."Qty. to Receive (Base)" :=
                              PurchLineTmp."Qty. to Receive (Base)" - CurrentPackageLine."Quantity (Base)";
                            PurchLineTmp.MODIFY;
                            CurrentPackageLine."Quantity (Base)" := 0;
                          END;
                        UNTIL (PurchLineTmp.NEXT = 0) OR (CurrentPackageLine."Quantity (Base)" = 0);

                      IF CurrentPackageLine."Quantity (Base)" <> 0 THEN BEGIN
                        PurchLineTmp.SETRANGE("Unit of Measure Code");
                        IF PurchLineTmp.FIND('-') THEN
                          REPEAT
                            IF CurrentPackageLine."Quantity (Base)" >= PurchLineTmp."Qty. to Receive (Base)"
                            THEN BEGIN
                              UpdateTmpTables(
                                MultiDocPackageTmp,MultiDocPackageLineTmp,CurrentPackage,
                                OrgCurrentPackageLine,PurchLineTmp."Document No.",
                                PurchLineTmp."Qty. to Receive (Base)");

                              CurrentPackageLine."Quantity (Base)" :=
                                CurrentPackageLine."Quantity (Base)" - PurchLineTmp."Qty. to Receive (Base)";
                              PurchLineTmp.DELETE;
                            END ELSE BEGIN
                              UpdateTmpTables(
                                MultiDocPackageTmp,MultiDocPackageLineTmp,CurrentPackage,
                                OrgCurrentPackageLine,PurchLineTmp."Document No.",
                                CurrentPackageLine."Quantity (Base)");

                              PurchLineTmp."Qty. to Receive (Base)" :=
                                PurchLineTmp."Qty. to Receive (Base)" - CurrentPackageLine."Quantity (Base)";
                              PurchLineTmp.MODIFY;
                              CurrentPackageLine."Quantity (Base)" := 0;
                            END;
                          UNTIL (PurchLineTmp.NEXT = 0) OR (CurrentPackageLine."Quantity (Base)" = 0);

                        IF CurrentPackageLine."Quantity (Base)" <> 0 THEN
                          ERROR(Text002);
                      END;
                    END;
                  CurrentPackageLine.Type::Package:
                    BEGIN
                      Package.RESET;
                      Package.SETCURRENTKEY("Original Package No.");
                      Package.SETRANGE("Original Package No.",CurrentPackageLine."No.");
                      IF Package.FIND('-') THEN
                        REPEAT
                          UpdateTmpTables(
                            MultiDocPackageTmp,MultiDocPackageLineTmp,CurrentPackage,
                            OrgCurrentPackageLine,Package."Source ID",
                            Package."Distribution Factor");

                          CurrentPackageLine."Quantity (Base)" :=
                            CurrentPackageLine."Quantity (Base)" - Package."Distribution Factor";
                        UNTIL Package.NEXT = 0;

                      IF CurrentPackageLine."Quantity (Base)" <> 0 THEN
                        ERROR(Text002);
                    END;
                END;
              UNTIL CurrentPackageLine.NEXT = 0;
            END ELSE BEGIN
              // Extra package
              TempMultiDocNo := CurrentPackage."Multi Document No.";
              WHILE TempMultiDocNo <> '' DO BEGIN
                IF STRPOS(TempMultiDocNo,'|') = 0 THEN
                  TempOrderNo := TempMultiDocNo
                ELSE
                  TempOrderNo := COPYSTR(TempMultiDocNo,1,STRPOS(TempMultiDocNo,'|') - 1);

                NoOfSalesOrders := NoOfSalesOrders + 1;
                MultiDocPackageTmp := CurrentPackage;
                MultiDocPackageTmp."No." := CurrentPackage."No." + '-' + TempOrderNo;
                MultiDocPackageTmp."Source ID" := TempOrderNo;
                MultiDocPackageTmp."Shipping Charge" := 1;
                MultiDocPackageTmp.INSERT;

                CurrentPackageLine.RESET;
                CurrentPackageLine.SETRANGE("Package No.",CurrentPackage."No.");
                IF CurrentPackageLine.FIND('-') THEN
                  REPEAT
                    MultiDocPackageLineTmp := CurrentPackageLine;
                    MultiDocPackageLineTmp."Package No." := MultiDocPackageTmp."No.";
                    MultiDocPackageLineTmp.INSERT;
                  UNTIL CurrentPackageLine.NEXT = 0;

                IF STRPOS(TempMultiDocNo,'|') = 0 THEN
                  TempMultiDocNo := ''
                ELSE
                  TempMultiDocNo := COPYSTR(TempMultiDocNo,STRPOS(TempMultiDocNo,'|') + 1);
              END;
            END;
          END;
        DATABASE::"Transfer Header":
          BEGIN
            // reset temporary tables
            TransferLineTmp.RESET;
            TransferLineTmp.DELETEALL;

            // Calculate quantity to pack
            TransferLine.RESET;
            TransferLine.SETFILTER("Document No.",CurrentPackage."Multi Document No.");
            TransferLine.SETFILTER("Outstanding Quantity",'<>0');
            IF ShippingSetup."Location Packing" THEN
              TransferLine.SETRANGE("Transfer-from Code",PackingStation."Location Code");
            TransferLine.SETRANGE("Derived From Line No.",0);
            IF TransferLine.FIND('-') THEN
              REPEAT
                TransferLineTmp := TransferLine;

                // Additional code required in Attain
                IF TransferLineTmp."Qty. to Ship (Base)" = 0 THEN BEGIN
                  TransferLineTmp.CALCFIELDS(
                    "E-Ship Whse. Outstanding Qty.","E-Ship Whse. Outst. Qty (Base)",
                    "E-Ship Whse. Shipment Qty.","E-Ship Whse. Ship. Qty (Base)");
                  TransferLineTmp."Qty. to Ship" :=
                    TransferLineTmp."E-Ship Whse. Outstanding Qty." + TransferLineTmp."E-Ship Whse. Shipment Qty.";
                  TransferLineTmp."Qty. to Ship (Base)" :=
                    TransferLineTmp."E-Ship Whse. Outst. Qty (Base)" +
                    TransferLineTmp."E-Ship Whse. Ship. Qty (Base)";
                END;

                IF TransferLineTmp."Qty. to Ship (Base)" = 0 THEN BEGIN
                  TransferLineTmp.CALCFIELDS(
                    "E-Ship Invt. Outstanding Qty.","E-Ship Invt. Outst. Qty (Base)");
                  TransferLineTmp."Qty. to Ship" := TransferLineTmp."E-Ship Invt. Outstanding Qty.";
                  TransferLineTmp."Qty. to Ship (Base)" := TransferLineTmp."E-Ship Invt. Outst. Qty (Base)";
                END;

                IF TransferLineTmp."Qty. to Ship (Base)" <> 0 THEN
                  TransferLineTmp.INSERT;
              UNTIL TransferLine.NEXT = 0;

            // remove already packed
            PackageLine.RESET;
            PackageLine.SETCURRENTKEY("Source Type","Source Subtype","Source ID");
            PackageLine.SETRANGE("Source Type",CurrentPackage."Source Type");
            PackageLine.SETRANGE("Source Subtype",CurrentPackage."Source Subtype");
            PackageLine.SETFILTER("Source ID",CurrentPackage."Multi Document No.");
            PackageLine.SETFILTER("Package No.",'<>%1',CurrentPackage."No.");
            PackageLine.SETRANGE(Type,PackageLine.Type::"Account (G/L)",PackageLine.Type::Resource);
            PackageLine.SETFILTER("Quantity (Base)",'<>0');
            IF ShippingSetup."Location Packing" THEN
              PackageLine.SETRANGE("Location Code",PackingStation."Location Code");
            IF PackageLine.FIND('-') THEN
              REPEAT
                IF Package."No." <> PackageLine."Package No." THEN
                  Package.GET(PackageLine."Package No.");

                IF Package.Closed THEN BEGIN
                  Package2.GET(Package."Original Package No.");
                  Package2.TESTFIELD("Multi Document Package Split");

                  TransferLineTmp.RESET;
                  TransferLineTmp.SETCURRENTKEY("Item No.");
                  TransferLineTmp.SETRANGE("Document No.",PackageLine."Source ID");
                  TransferLineTmp.SETRANGE("Item No.",PackageLine."No.");
                  TransferLineTmp.SETRANGE("Variant Code",PackageLine."Variant Code");
                  TransferLineTmp.SETRANGE("Unit of Measure Code",PackageLine."Unit of Measure Code");
                  IF TransferLineTmp.FIND('-') THEN
                    REPEAT
                      IF PackageLine."Quantity (Base)" >= TransferLineTmp."Qty. to Ship (Base)" THEN BEGIN
                        PackageLine."Quantity (Base)" :=
                          PackageLine."Quantity (Base)" - TransferLineTmp."Qty. to Ship (Base)";
                        TransferLineTmp.DELETE;
                      END ELSE BEGIN
                        TransferLineTmp."Qty. to Ship (Base)" :=
                          TransferLineTmp."Qty. to Ship (Base)" - PackageLine."Quantity (Base)";
                        TransferLineTmp.MODIFY;
                        PackageLine."Quantity (Base)" := 0;
                      END;
                    UNTIL (TransferLineTmp.NEXT = 0) OR (PackageLine."Quantity (Base)" = 0);

                  IF PackageLine."Quantity (Base)" <> 0 THEN BEGIN
                    TransferLineTmp.SETRANGE("Unit of Measure Code");
                    IF TransferLineTmp.FIND('-') THEN
                      REPEAT
                        IF PackageLine."Quantity (Base)" >= TransferLineTmp."Qty. to Ship (Base)" THEN BEGIN
                          PackageLine."Quantity (Base)" :=
                            PackageLine."Quantity (Base)" - TransferLineTmp."Qty. to Ship (Base)";
                          TransferLineTmp.DELETE;
                        END ELSE BEGIN
                          TransferLineTmp."Qty. to Ship (Base)" :=
                            TransferLineTmp."Qty. to Ship (Base)" - PackageLine."Quantity (Base)";
                          TransferLineTmp.MODIFY;
                          PackageLine."Quantity (Base)" := 0;
                        END;
                      UNTIL (TransferLineTmp.NEXT = 0) OR (PackageLine."Quantity (Base)" = 0);

                    IF PackageLine."Quantity (Base)" <> 0 THEN
                      ERROR(Text003);
                  END;
                END;
              UNTIL PackageLine.NEXT = 0;

            // Calculate lines by Transfer orders
            MultiDocPackageTmp.RESET;
            MultiDocPackageTmp.DELETEALL;
            MultiDocPackageLineTmp.RESET;
            MultiDocPackageLineTmp.DELETEALL;

            CurrentPackageLine.RESET;
            CurrentPackageLine.SETRANGE("Package No.",CurrentPackage."No.");
            CurrentPackageLine.SETFILTER("No.",'<>%1','');
            CurrentPackageLine.SETFILTER(Quantity,'<>0');
            IF CurrentPackageLine.FIND('-') THEN BEGIN
              REPEAT
                OrgCurrentPackageLine := CurrentPackageLine;

                CASE CurrentPackageLine.Type OF
                  CurrentPackageLine.Type::"Account (G/L)",CurrentPackageLine.Type::Item,
                  CurrentPackageLine.Type::Resource:
                    BEGIN
                      TransferLineTmp.RESET;
                      TransferLineTmp.SETCURRENTKEY("Item No.");
                      IF CurrentPackageLine."Selected Source ID" <> '' THEN
                        TransferLineTmp.SETRANGE("Document No.",CurrentPackageLine."Selected Source ID");
                      TransferLineTmp.SETRANGE("Item No.",CurrentPackageLine."No.");
                      TransferLineTmp.SETRANGE("Variant Code",CurrentPackageLine."Variant Code");
                      TransferLineTmp.SETRANGE("Unit of Measure Code",CurrentPackageLine."Unit of Measure Code");
                      IF TransferLineTmp.FIND('-') THEN
                        REPEAT
                          IF CurrentPackageLine."Quantity (Base)" >= TransferLineTmp."Qty. to Ship (Base)"
                          THEN BEGIN
                            UpdateTmpTables(
                              MultiDocPackageTmp,MultiDocPackageLineTmp,CurrentPackage,
                              OrgCurrentPackageLine,TransferLineTmp."Document No.",
                              TransferLineTmp."Qty. to Ship (Base)");

                            CurrentPackageLine."Quantity (Base)" :=
                              CurrentPackageLine."Quantity (Base)" - TransferLineTmp."Qty. to Ship (Base)";
                            TransferLineTmp.DELETE;
                          END ELSE BEGIN
                            UpdateTmpTables(
                              MultiDocPackageTmp,MultiDocPackageLineTmp,CurrentPackage,
                              OrgCurrentPackageLine,TransferLineTmp."Document No.",
                              CurrentPackageLine."Quantity (Base)");

                            TransferLineTmp."Qty. to Ship (Base)" :=
                              TransferLineTmp."Qty. to Ship (Base)" - CurrentPackageLine."Quantity (Base)";
                            TransferLineTmp.MODIFY;
                            CurrentPackageLine."Quantity (Base)" := 0;
                          END;
                        UNTIL (TransferLineTmp.NEXT = 0) OR (CurrentPackageLine."Quantity (Base)" = 0);

                      IF CurrentPackageLine."Quantity (Base)" <> 0 THEN BEGIN
                        TransferLineTmp.SETRANGE("Unit of Measure Code");
                        IF TransferLineTmp.FIND('-') THEN
                          REPEAT
                            IF CurrentPackageLine."Quantity (Base)" >= TransferLineTmp."Qty. to Ship (Base)"
                            THEN BEGIN
                              UpdateTmpTables(
                                MultiDocPackageTmp,MultiDocPackageLineTmp,CurrentPackage,
                                OrgCurrentPackageLine,TransferLineTmp."Document No.",
                                TransferLineTmp."Qty. to Ship (Base)");

                              CurrentPackageLine."Quantity (Base)" :=
                                CurrentPackageLine."Quantity (Base)" - TransferLineTmp."Qty. to Ship (Base)";
                              TransferLineTmp.DELETE;
                            END ELSE BEGIN
                              UpdateTmpTables(
                                MultiDocPackageTmp,MultiDocPackageLineTmp,CurrentPackage,
                                OrgCurrentPackageLine,TransferLineTmp."Document No.",
                                CurrentPackageLine."Quantity (Base)");

                              TransferLineTmp."Qty. to Ship (Base)" :=
                                TransferLineTmp."Qty. to Ship (Base)" - CurrentPackageLine."Quantity (Base)";
                              TransferLineTmp.MODIFY;
                              CurrentPackageLine."Quantity (Base)" := 0;
                            END;
                          UNTIL (TransferLineTmp.NEXT = 0) OR (CurrentPackageLine."Quantity (Base)" = 0);

                        IF CurrentPackageLine."Quantity (Base)" <> 0 THEN
                          ERROR(Text003);
                      END;
                    END;
                  CurrentPackageLine.Type::Package:
                    BEGIN
                      Package.RESET;
                      Package.SETCURRENTKEY("Original Package No.");
                      Package.SETRANGE("Original Package No.",CurrentPackageLine."No.");
                      IF Package.FIND('-') THEN
                        REPEAT
                          UpdateTmpTables(
                            MultiDocPackageTmp,MultiDocPackageLineTmp,CurrentPackage,
                            OrgCurrentPackageLine,Package."Source ID",
                            Package."Distribution Factor");

                          CurrentPackageLine."Quantity (Base)" :=
                            CurrentPackageLine."Quantity (Base)" - Package."Distribution Factor";
                        UNTIL Package.NEXT = 0;

                      IF CurrentPackageLine."Quantity (Base)" <> 0 THEN
                        ERROR(Text003);
                    END;
                END;
              UNTIL CurrentPackageLine.NEXT = 0;
            END ELSE BEGIN
              // Extra package
              TempMultiDocNo := CurrentPackage."Multi Document No.";
              WHILE TempMultiDocNo <> '' DO BEGIN
                IF STRPOS(TempMultiDocNo,'|') = 0 THEN
                  TempOrderNo := TempMultiDocNo
                ELSE
                  TempOrderNo := COPYSTR(TempMultiDocNo,1,STRPOS(TempMultiDocNo,'|') - 1);

                NoOfSalesOrders := NoOfSalesOrders + 1;
                MultiDocPackageTmp := CurrentPackage;
                MultiDocPackageTmp."No." := CurrentPackage."No." + '-' + TempOrderNo;
                MultiDocPackageTmp."Source ID" := TempOrderNo;
                MultiDocPackageTmp."Shipping Charge" := 1;
                MultiDocPackageTmp.INSERT;

                CurrentPackageLine.RESET;
                CurrentPackageLine.SETRANGE("Package No.",CurrentPackage."No.");
                IF CurrentPackageLine.FIND('-') THEN
                  REPEAT
                    MultiDocPackageLineTmp := CurrentPackageLine;
                    MultiDocPackageLineTmp."Package No." := MultiDocPackageTmp."No.";
                    MultiDocPackageLineTmp.INSERT;
                  UNTIL CurrentPackageLine.NEXT = 0;

                IF STRPOS(TempMultiDocNo,'|') = 0 THEN
                  TempMultiDocNo := ''
                ELSE
                  TempMultiDocNo := COPYSTR(TempMultiDocNo,STRPOS(TempMultiDocNo,'|') + 1);
              END;
            END;
          END;
        ELSE
          PackingControl.ErrorUnknownSourceType(
            CurrentPackage."Source Type",CurrentPackage."Source Subtype",CurrentPackage."Source ID");
      END;

      // Calculate Total Cost Factor
      NoOfSalesOrders := 0;
      TotalCostFactor := 0;
      IF MultiDocPackageTmp.FIND('-') THEN
        REPEAT
          NoOfSalesOrders := NoOfSalesOrders + 1;
          TotalCostFactor := TotalCostFactor + MultiDocPackageTmp."Shipping Charge";
        UNTIL MultiDocPackageTmp.NEXT = 0;

      // Calculate Total Cost Factor Lines
      CurrentPackageLine.RESET;
      CurrentPackageLine.SETRANGE("Package No.",CurrentPackage."No.");
      IF CurrentPackageLine.FIND('-') THEN
        REPEAT
          TotalChargePackageLineTmp := CurrentPackageLine;
          TotalChargePackageLineTmp.INIT;

          MultiDocPackageLineTmp.RESET;
          MultiDocPackageLineTmp.SETRANGE("Package No.",CurrentPackageLine."Package No.");
          MultiDocPackageLineTmp.SETRANGE("Line No.",CurrentPackageLine."Line No.");
          IF MultiDocPackageLineTmp.FIND('-') THEN BEGIN
            REPEAT
              TotalChargePackageLineTmp.Quantity := TotalChargePackageLineTmp.Quantity + 1;
              TotalChargePackageLineTmp."Quantity (Base)" :=
                TotalChargePackageLineTmp."Quantity (Base)" + MultiDocPackageLineTmp."Quantity (Base)";
            UNTIL MultiDocPackageLineTmp.NEXT = 0;
          END ELSE BEGIN
            TotalChargePackageLineTmp.Quantity := NoOfSalesOrders;
            TotalChargePackageLineTmp."Quantity (Base)" := NoOfSalesOrders;
          END;

          TotalChargePackageLineTmp.INSERT;

          TotalChargePackageLine2Tmp := CurrentPackageLine;
          TotalChargePackageLine2Tmp.INIT;
          TotalChargePackageLine2Tmp.INSERT;
        UNTIL CurrentPackageLine.NEXT = 0;

      // Create New Packages
      CLEAR(TotalChargesPackage);
      CurrentSalesOrders := 0;
      IF MultiDocPackageTmp.FIND('-') THEN BEGIN
        REPEAT
          CurrentSalesOrders := CurrentSalesOrders + 1;
          Package := CurrentPackage;
          Package."No." := MultiDocPackageTmp."No.";
          Package."Source ID" := MultiDocPackageTmp."Source ID";
          Package."Original Package No." := CurrentPackage."No.";
          Package."Original Shipping Charge" := Package."Shipping Charge";
          Package."Original Shipping Cost" := Package."Shipping Cost";
          Package."Org. Third Party Ship. Charge" := Package."Third Party Shipping Charge";
          Package."Org. Third Party Shipping Cost" := Package."Third Party Shipping Cost";
          Package."Exclude From Manifest" := TRUE;

          CASE CurrentPackage."Source Type" OF
            DATABASE::"Sales Header":
              BEGIN
                IF SalesHeader.GET(CurrentPackage."Source Subtype",MultiDocPackageTmp."Source ID")
                THEN BEGIN
                  Package."External Document No." := SalesHeader."External Document No.";
                  Package."EDI Trade Partner" := SalesHeader."EDI Trade Partner";
                END;
              END;
            DATABASE::"Purchase Header":
              BEGIN
                IF PurchHeader.GET(CurrentPackage."Source Subtype",MultiDocPackageTmp."Source ID")
                THEN BEGIN
                  Package."External Document No." := PurchHeader."Vendor Shipment No.";
                END;
              END;
            DATABASE::"Transfer Header":
              BEGIN
                IF TransferHeader.GET(MultiDocPackageTmp."Source ID")
                THEN BEGIN
                  Package."External Document No." := '';
                END;
              END;
            ELSE
              PackingControl.ErrorUnknownSourceType(
                CurrentPackage."Source Type",CurrentPackage."Source Subtype",CurrentPackage."Source ID");
          END;

          IF TotalCostFactor = 0 THEN
            CostFactor := 1 / NoOfSalesOrders
          ELSE
            CostFactor := MultiDocPackageTmp."Shipping Charge" / TotalCostFactor;
          Package."Distribution Factor" := CostFactor;
          Package.DivideQuantityAndValueFields(
            CurrentPackage,TotalChargesPackage,CostFactor,CurrentSalesOrders = NoOfSalesOrders);

          Package.INSERT;

          CurrentPackageLine.RESET;
          CurrentPackageLine.SETRANGE("Package No.",CurrentPackage."No.");
          IF CurrentPackageLine.FIND('-') THEN
            REPEAT
              PackageLine := CurrentPackageLine;
              PackageLine."Package No." := Package."No.";
              PackageLine."Source ID" := Package."Source ID";
              PackageLine."Multi Document Quantity" := PackageLine.Quantity;
              PackageLine."Multi Document Qty. (Base)" := PackageLine."Quantity (Base)";

              TotalChargePackageLineTmp.GET(
                CurrentPackageLine."Package No.",CurrentPackageLine."Line No.");
              TotalChargePackageLineTmp.Quantity := TotalChargePackageLineTmp.Quantity - 1;
              TotalChargePackageLine2Tmp.GET(
                CurrentPackageLine."Package No.",CurrentPackageLine."Line No.");

              MultiDocPackageLineTmp.RESET;
              MultiDocPackageLineTmp.SETRANGE("Line No.",CurrentPackageLine."Line No.");
              IF MultiDocPackageLineTmp.FIND('-') THEN BEGIN
                IF MultiDocPackageLineTmp.GET(Package."No.",CurrentPackageLine."Line No.") THEN BEGIN
                  IF PackageLine."Quantity (Base)" <> 0 THEN
                    PackageLine.DivideQuantityAndValueFields(
                      CurrentPackageLine,TotalChargePackageLine2Tmp,
                      MultiDocPackageLineTmp."Quantity (Base)" / PackageLine."Quantity (Base)",
                      TotalChargePackageLineTmp.Quantity = 0)
                  ELSE
                    PackageLine.DivideQuantityAndValueFields(
                      CurrentPackageLine,TotalChargePackageLine2Tmp,
                      0,TotalChargePackageLineTmp.Quantity = 0);
                END ELSE BEGIN
                  PackageLine.DivideQuantityAndValueFields(
                    CurrentPackageLine,TotalChargePackageLine2Tmp,0,
                    TotalChargePackageLineTmp.Quantity = 0);
                END;
              END ELSE BEGIN
                PackageLine.DivideQuantityAndValueFields(
                  CurrentPackageLine,TotalChargePackageLine2Tmp,CostFactor,
                  TotalChargePackageLineTmp.Quantity = 0);
              END;
              TotalChargePackageLineTmp.MODIFY;
              TotalChargePackageLine2Tmp.MODIFY;

              PackageLine.INSERT;
            UNTIL CurrentPackageLine.NEXT = 0;

          ShipperTypeMgt.Cod14000703CopyOptionPage(CurrentPackage,ShippingAgent,MultiDocPackageTmp."No.");
        UNTIL MultiDocPackageTmp.NEXT = 0;
      END ELSE
        ERROR(Text004);

      // Modify Current Package to have no Sales Order No.
      CurrentPackage."Source ID" := '';
      CurrentPackage."Multi Document Package Split" := TRUE;
      CurrentPackage.MODIFY;

      CurrentPackageLine.RESET;
      CurrentPackageLine.SETRANGE("Package No.",CurrentPackage."No.");
      IF CurrentPackageLine.FIND('-') THEN
        REPEAT
          CurrentPackageLine."Source ID" := '';
          CurrentPackageLine.MODIFY;
        UNTIL CurrentPackageLine.NEXT = 0;
    END;

    PROCEDURE CombineMultiDocPackage@3(VAR CurrentPackage@1240030000 : Record 14000701;VAR MultiDocPackageTmp@1240030001 : Record 14000701);
    VAR
      Package@1000000002 : Record 14000701;
      PackageLine@1000000003 : Record 14000702;
      PostedPackage@1000000004 : Record 14000704;
    BEGIN
      CurrentPackage.TESTFIELD(Closed);
      CurrentPackage.TESTFIELD("Source ID");
      CurrentPackage.TESTFIELD("Multi Document Package");
      CurrentPackage.TESTFIELD("Multi Document Package Split",FALSE);
      IF CurrentPackage."Original Package No." = '' THEN BEGIN
        MultiDocPackageTmp := CurrentPackage;
        MultiDocPackageTmp.INSERT;

        EXIT;
      END;

      PostedPackage.RESET;
      PostedPackage.SETCURRENTKEY("Original Package No.");
      PostedPackage.SETRANGE("Original Package No.",CurrentPackage."Original Package No.");
      IF PostedPackage.FIND('-') THEN
        ERROR(Text005);

      // delete order packages
      MultiDocPackageTmp.RESET;
      MultiDocPackageTmp.DELETEALL;
      Package.RESET;
      Package.SETCURRENTKEY("Original Package No.");
      Package.SETRANGE("Original Package No.",CurrentPackage."Original Package No.");
      IF Package.FIND('-') THEN
        REPEAT
          MultiDocPackageTmp := Package;
          MultiDocPackageTmp.INSERT;

          DeleteMultiDocPackage(Package);
        UNTIL Package.NEXT = 0;

      // Modify Current Package to have Sales Order No.
      Package.GET(CurrentPackage."Original Package No.");
      Package."Source ID" := CurrentPackage."Source ID";
      Package."Multi Document Package Split" := FALSE;
      Package.MODIFY;

      PackageLine.RESET;
      PackageLine.SETRANGE("Package No.",Package."No.");
      IF PackageLine.FIND('-') THEN
        REPEAT
          PackageLine."Source ID" := CurrentPackage."Source ID";
          PackageLine.MODIFY;
        UNTIL PackageLine.NEXT = 0;

      CurrentPackage := Package;
    END;

    PROCEDURE DeleteMultiDocPackage@4(VAR CurrentPackage@1240030000 : Record 14000701);
    VAR
      CurrentPackageLine@1000000001 : Record 14000702;
    BEGIN
      WITH CurrentPackage DO BEGIN
        TESTFIELD(Closed);
        TESTFIELD("Multi Document Package");
        TESTFIELD("Multi Document Package Split",FALSE);
        TESTFIELD("Source ID");

        DELETE;
        ShipperTypeMgt.Cod14000703DeleteOptionPage(CurrentPackage,ShippingAgent);

        CurrentPackageLine.RESET;
        CurrentPackageLine.SETRANGE("Package No.","No.");
        CurrentPackageLine.DELETEALL;
      END;
    END;

    PROCEDURE CombineMultiSalesOrders@5(PackingStation@1240030000 : Record 14000709;ShippingSetup@1240030001 : Record 14000707;SourceType@1240030002 : Integer;SourceSubtype@1240030003 : Integer;DocumentNo@1240030004 : Code[20];NewDocumentNo@1240030005 : Code[20];VAR MultiDocumentNo@1240030006 : Code[250];VAR MultiDocument@1240030007 : Boolean);
    VAR
      Package@1240030008 : Record 14000701;
      PackageTmp@1240030009 : TEMPORARY Record 14000701;
      OrgMultiDocumentNo@1240030010 : Code[250];
      OrgMultiDocument@1240030011 : Boolean;
      NewMultiDocument@1240030012 : Boolean;
      NewMultiDocumentNo@1240030013 : Text[250];
    BEGIN
      Package.RESET;
      Package.SETCURRENTKEY("Source Type","Source Subtype","Source ID");
      Package.SETRANGE("Source Type",SourceType);
      Package.SETRANGE("Source Subtype",SourceSubtype);
      Package.SETRANGE("Source ID",DocumentNo);
      IF ShippingSetup."Location Packing" THEN
        Package.SETRANGE("Location Code",PackingStation."Location Code");
      IF Package.FIND('-') THEN BEGIN
        MultiDocument := Package."Multi Document Package";
        IF Package."Multi Document Package" THEN
          MultiDocumentNo := Package."Multi Document No."
        ELSE
          MultiDocumentNo := Package."Source ID";
      END ELSE BEGIN
        Package.RESET;
        Package.SETRANGE("Multi Document Package",TRUE);
        Package.SETRANGE("Source Type",SourceType);
        Package.SETRANGE("Source Subtype",SourceSubtype);
        Package.SETFILTER("Multi Document No.",'*%1*',DocumentNo);
        IF ShippingSetup."Location Packing" THEN
          Package.SETRANGE("Location Code",PackingStation."Location Code");
        IF Package.FIND('-') THEN
          REPEAT
            IF ((Package."Multi Document No." = DocumentNo) OR
                (STRPOS(Package."Multi Document No.",'|' + DocumentNo) <> 0) OR
                (STRPOS(Package."Multi Document No.",DocumentNo + '|') <> 0))
            THEN BEGIN
              MultiDocument := Package."Multi Document Package";
              MultiDocumentNo := Package."Multi Document No.";
            END;
          UNTIL (Package.NEXT = 0) OR MultiDocument;
      END;

      Package.RESET;
      Package.SETCURRENTKEY("Source Type","Source Subtype","Source ID");
      Package.SETRANGE("Source Type",SourceType);
      Package.SETRANGE("Source Subtype",SourceSubtype);
      Package.SETRANGE("Source ID",NewDocumentNo);
      IF ShippingSetup."Location Packing" THEN
        Package.SETRANGE("Location Code",PackingStation."Location Code");
      IF Package.FIND('-') THEN BEGIN
        NewMultiDocument := Package."Multi Document Package";
        IF Package."Multi Document Package" THEN
          NewMultiDocumentNo := Package."Multi Document No."
        ELSE
          NewMultiDocumentNo := Package."Source ID";
      END ELSE BEGIN
        Package.RESET;
        Package.SETRANGE("Source Type",SourceType);
        Package.SETRANGE("Source Subtype",SourceSubtype);
        Package.SETRANGE("Multi Document Package",TRUE);
        Package.SETFILTER("Multi Document No.",'*%1*',NewDocumentNo);
        IF ShippingSetup."Location Packing" THEN
          Package.SETRANGE("Location Code",PackingStation."Location Code");
        IF Package.FIND('-') THEN
          REPEAT
            IF ((Package."Multi Document No." = NewDocumentNo) OR
                (STRPOS(Package."Multi Document No.",'|' + NewDocumentNo) <> 0) OR
                (STRPOS(Package."Multi Document No.",NewDocumentNo + '|') <> 0))
            THEN BEGIN
              NewMultiDocument := Package."Multi Document Package";
              NewMultiDocumentNo := Package."Multi Document No.";
            END;
          UNTIL (Package.NEXT = 0) OR NewMultiDocument;
      END;

      OrgMultiDocumentNo := MultiDocumentNo;
      OrgMultiDocument := MultiDocument;
      CASE TRUE OF
        MultiDocument AND NewMultiDocument:
          BEGIN
            IF MultiDocumentNo = NewMultiDocumentNo THEN
              ERROR(Text006);

            IF STRLEN(MultiDocumentNo) + STRLEN(NewMultiDocumentNo) + 1 >
               MAXSTRLEN(Package."Multi Document No.")
            THEN
              ERROR(Text007);

            MultiDocument := TRUE;
            MultiDocumentNo := MultiDocumentNo + '|' + NewMultiDocumentNo;
          END;
        MultiDocument:
          BEGIN
            IF STRPOS(MultiDocumentNo,NewDocumentNo) <> 0 THEN
              ERROR(Text008);

            IF STRLEN(MultiDocumentNo) + STRLEN(NewDocumentNo) + 1 >
               MAXSTRLEN(Package."Multi Document No.")
            THEN
              ERROR(Text009);

            MultiDocument := TRUE;
            MultiDocumentNo := MultiDocumentNo + '|' + NewDocumentNo;
          END;
        NewMultiDocument:
          BEGIN
            IF DocumentNo = NewDocumentNo THEN
              ERROR(Text010);

            MultiDocument := TRUE;
            MultiDocumentNo := NewMultiDocumentNo + '|' + DocumentNo;
          END;
        ELSE BEGIN
          MultiDocument := TRUE;
          MultiDocumentNo := DocumentNo + '|' + NewDocumentNo;
        END;
      END;

      PackageTmp.DELETEALL;
      Package.RESET;
      Package.SETCURRENTKEY("Source Type","Source Subtype","Source ID");
      Package.SETRANGE("Source Type",SourceType);
      Package.SETRANGE("Source Subtype",SourceSubtype);
      IF OrgMultiDocument THEN
        Package.SETFILTER("Source ID",OrgMultiDocumentNo)
      ELSE
        Package.SETRANGE("Source ID",DocumentNo);
      IF ShippingSetup."Location Packing" THEN
        Package.SETRANGE("Location Code",PackingStation."Location Code");
      IF Package.FIND('-') THEN
        REPEAT
          Package.TESTFIELD(Closed);
          Package.TESTFIELD("Total Packages",1);

          PackageTmp := Package;
          PackageTmp.INSERT;
        UNTIL Package.NEXT = 0;

      Package.RESET;
      Package.SETCURRENTKEY("Source Type","Source Subtype","Source ID");
      Package.SETRANGE("Source Type",SourceType);
      Package.SETRANGE("Source Subtype",SourceSubtype);
      IF NewMultiDocument THEN
        Package.SETFILTER("Source ID",NewMultiDocumentNo)
      ELSE
        Package.SETRANGE("Source ID",NewDocumentNo);
      IF ShippingSetup."Location Packing" THEN
        Package.SETRANGE("Location Code",PackingStation."Location Code");
      IF Package.FIND('-') THEN
        REPEAT
          Package.TESTFIELD(Closed);
          Package.TESTFIELD("Total Packages",1);

          PackageTmp := Package;
          PackageTmp.INSERT;
        UNTIL Package.NEXT = 0;

      IF PackageTmp.FIND('-') THEN
        REPEAT
          Package.GET(PackageTmp."No.");
          ModifySplitOldPackage(Package,MultiDocumentNo);
        UNTIL PackageTmp.NEXT = 0;
    END;

    PROCEDURE ModifySplitOldPackage@8(CurrentPackage@1240030000 : Record 14000701;MultiDocumentNo@1240030001 : Code[250]);
    VAR
      Package2@1000000002 : Record 14000701;
      PackageLine@1000000003 : Record 14000702;
      PackageLine2@1000000004 : Record 14000702;
    BEGIN
      IF CurrentPackage."Multi Document Package" THEN BEGIN
        CurrentPackage."Multi Document No." := MultiDocumentNo;
        CurrentPackage.MODIFY;

        Package2.RESET;
        Package2.GET(CurrentPackage."Original Package No.");
        Package2."Multi Document No." := MultiDocumentNo;
        Package2.MODIFY;
      END ELSE BEGIN
        CurrentPackage.TESTFIELD("Multi Document Package Split",FALSE);

        Package2 := CurrentPackage;
        Package2."No." := Package2."No." + '-' + CurrentPackage."Source ID";
        Package2."Multi Document Package" := TRUE;
        Package2."Multi Document No." := MultiDocumentNo;
        Package2."Original Package No.":= CurrentPackage."No.";
        Package2."Original Shipping Charge" := CurrentPackage."Shipping Charge";
        Package2."Original Shipping Cost" := CurrentPackage."Shipping Cost";
        Package2."Org. Third Party Ship. Charge" := CurrentPackage."Third Party Shipping Charge";
        Package2."Org. Third Party Shipping Cost" := CurrentPackage."Third Party Shipping Cost";
        Package2."Exclude From Manifest" := TRUE;
        Package2."Distribution Factor" := 1;
        Package2.INSERT;

        ShipperTypeMgt.Cod14000703CopyOptionPage(CurrentPackage,ShippingAgent,Package2."No.");

        PackageLine.RESET;
        PackageLine.SETRANGE("Package No.",CurrentPackage."No.");
        IF PackageLine.FIND('-') THEN
          REPEAT
            PackageLine2 := PackageLine;
            PackageLine2."Package No." := Package2."No.";
            PackageLine2."Multi Document Quantity" := PackageLine.Quantity;
            PackageLine2."Multi Document Qty. (Base)" := PackageLine."Quantity (Base)";
            PackageLine2."Distribution Factor" := 1;
            PackageLine2.INSERT;
          UNTIL PackageLine.NEXT = 0;

        CurrentPackage."Source ID" := '';
        CurrentPackage."Multi Document Package" := TRUE;
        CurrentPackage."Multi Document No." := MultiDocumentNo;
        CurrentPackage."Multi Document Package Split" := TRUE;
        CurrentPackage.MODIFY;

        PackageLine.RESET;
        PackageLine.SETRANGE("Package No.",CurrentPackage."No.");
        IF PackageLine.FIND('-') THEN
          REPEAT
            PackageLine."Source ID" := '';
            PackageLine.MODIFY;
          UNTIL PackageLine.NEXT = 0;
      END;
    END;

    PROCEDURE UpdateTmpTables@11(VAR MultiDocPackageTmp@1240030000 : Record 14000701;VAR MultiDocPackageLineTmp@1240030001 : Record 14000702;CurrentPackage@1240030002 : Record 14000701;CurrentPackageLine@1240030003 : Record 14000702;DocumentNo@1240030004 : Code[20];QuantityBase@1240030005 : Decimal);
    VAR
      CostFactorValue@1000000006 : Decimal;
      NewPackage@1000000007 : Boolean;
    BEGIN
      NewPackage := NOT MultiDocPackageTmp.GET(CurrentPackageLine."Package No." + '-' + DocumentNo);

      IF NewPackage THEN BEGIN
        MultiDocPackageTmp := CurrentPackage;
        MultiDocPackageTmp."No." := CurrentPackageLine."Package No." + '-' + DocumentNo;
        MultiDocPackageTmp."Source ID" := DocumentNo;
        MultiDocPackageTmp."Shipping Charge" := 0;
        MultiDocPackageTmp.INSERT;
      END;

      CostFactorValue := 0;
      GetShippingSetup;
      CASE ShippingSetup."Distribute Cost" OF
        ShippingSetup."Distribute Cost"::" ":
          ShippingSetup.TESTFIELD("Distribute Cost");
        ShippingSetup."Distribute Cost"::Equal:
          IF NewPackage THEN
            CostFactorValue := 1;
        ShippingSetup."Distribute Cost"::"by Weight":
          CASE ShippingSetup."Actual Weight as" OF
            ShippingSetup."Actual Weight as"::" ":
              ShippingSetup.TESTFIELD("Actual Weight as");
            ShippingSetup."Actual Weight as"::"Net Weight":
              CostFactorValue :=
                QuantityBase *
                (CurrentPackageLine."Net Weight" / CurrentPackageLine."Quantity (Base)");
            ShippingSetup."Actual Weight as"::"Gross Weight":
              CostFactorValue :=
                QuantityBase *
                (CurrentPackageLine."Gross Weight" / CurrentPackageLine."Quantity (Base)");
            ShippingSetup."Actual Weight as"::"Dimmed Weight":
              CostFactorValue :=
                QuantityBase *
                (CurrentPackageLine."Dim. Weight" / CurrentPackageLine."Quantity (Base)");
            ShippingSetup."Actual Weight as"::"Unit of Measure Weight":
              CostFactorValue :=
                QuantityBase *
                (CurrentPackageLine."Unit of Measure Weight" / CurrentPackageLine."Quantity (Base)");
            ELSE
              ShippingSetup.FIELDERROR("Actual Weight as",Text011);
          END;
        ShippingSetup."Distribute Cost"::"by Value":
          CASE ShippingSetup."Declare Value As" OF
            ShippingSetup."Declare Value As"::" ":
              ShippingSetup.TESTFIELD("Declare Value As");
            ShippingSetup."Declare Value As"::Cost:
              CostFactorValue :=
                QuantityBase *
                (CurrentPackageLine."Value (Cost)" / CurrentPackageLine."Quantity (Base)");
            ShippingSetup."Declare Value As"::Price:
              CostFactorValue :=
                QuantityBase *
                (CurrentPackageLine."Value (Price)" / CurrentPackageLine."Quantity (Base)");
            ELSE
              ShippingSetup.FIELDERROR("Declare Value As",Text011);
          END;
        ShippingSetup."Distribute Cost"::"by Volume":
          CostFactorValue :=
            QuantityBase * (CurrentPackageLine.Volume / CurrentPackageLine."Quantity (Base)");
        ELSE
          ShippingSetup.FIELDERROR("Distribute Cost",Text011);
      END;

      MultiDocPackageTmp."Shipping Charge" := MultiDocPackageTmp."Shipping Charge" + CostFactorValue;
      MultiDocPackageTmp.MODIFY;

      IF MultiDocPackageLineTmp.GET(MultiDocPackageTmp."No.",CurrentPackageLine."Line No.") THEN BEGIN
        MultiDocPackageLineTmp."Quantity (Base)" :=
          MultiDocPackageLineTmp."Quantity (Base)" + QuantityBase;
        MultiDocPackageLineTmp.MODIFY;
      END ELSE BEGIN
        MultiDocPackageLineTmp := CurrentPackageLine;
        MultiDocPackageLineTmp."Package No." := MultiDocPackageTmp."No.";
        MultiDocPackageLineTmp."Quantity (Base)" := QuantityBase;
        MultiDocPackageLineTmp.INSERT;
      END;
    END;

    BEGIN
    END.
  }
}

