OBJECT Codeunit 14002385 Load E.D.I. Navision Fields
{
  OBJECT-PROPERTIES
  {
    Date=07/13/20;
    Time=12:00:00 PM;
    Version List=SE0.62;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            Object.RESET;
            Object.SETRANGE(Type,Object.Type::Table);
            Object.SETRANGE("Company Name",'');
            IF Object.FIND('-') THEN
            WITH Object DO BEGIN
              EDINAVTables.RESET;
              EDINAVTables.DELETEALL;
              EDINAVFields.RESET;
              EDINAVFields.DELETEALL;
              SETFILTER(
                ID,
                '3|10|14|18|23|25|27|36|37|38|39|43|44|79|83|110|111|112|113|114|115|122|124|222|254|272|291|5404|5717|' +
                '5740|5741|5748|6660|6661|6650|6651|14002350|14002353|14002354|14002358|14002359|14002360|14002362|' +
                '14002400|14002401|14000822|14000823|14000825|14000704|14000705|14002371|14002372|14002402|14002403|' +
                '14050801|14050802|14002413|14002414|14000708|14000701|14000702|336|14000964|14002364|14002365|14000603|' +
                '337|14000730|14000827|14002382|14002383|7320|7321|5744|5745|14050902|14050903|32|14002369|9|81|14002369');
              IF FIND('-') THEN BEGIN
                IF GUIALLOWED THEN BEGIN
                  ProgressWindow.OPEN(
                    Text001 +
                    Text002 +
                    Text003);
                END;
                REPEAT
                  //
                  IF GUIALLOWED THEN
                    ProgressWindow.UPDATE(1,Object.Name);
                  IF (Name = 'Customer') OR
                     (Name = 'Ship-to Address') OR
                     (Name = 'Location') OR
                     (Name = 'VAT Entry') OR
                     (Name = 'Sales Comment Line') OR
                     (Name = 'Purch. Comment Line') OR
                     (Name = 'Country/Region')
                  THEN BEGIN
                    IF Name = 'Customer' THEN BEGIN
                      DelBeg := ID + 10000;
                      DelEnd := ID + 10001;
                    END;
                    IF Name = 'Ship-to Address' THEN BEGIN
                      DelBeg := ID;
                      DelEnd := ID + 10000;
                    END;
                    IF Name = 'Location' THEN BEGIN
                      DelBeg := ID;
                      DelEnd := ID + 10000;
                    END;
                    IF Name = 'VAT Entry' THEN BEGIN
                      DelBeg := ID;
                      DelEnd := ID + 10000;
                    END;
                    IF Name = 'Sales Comment Line' THEN BEGIN
                      DelBeg := ID;
                      DelEnd := ID + 10000;
                    END;
                    IF Name = 'Purch. Comment Line' THEN BEGIN
                      DelBeg := ID;
                      DelEnd := ID + 10000;
                    END;
                    IF Name = 'Country/Region' THEN BEGIN
                      DelBeg := ID + 19000;
                      DelEnd := ID + 19005;
                    END;
                  END ELSE BEGIN
                    DelBeg := ID;
                    DelEnd := ID;
                  END;
                  IF (Name = 'Ship-to Address') OR
                     (Name = 'Location') OR
                     (Name = 'VAT Entry') OR
                     (Name = 'Sales Comment Line') OR
                     (Name = 'Purch. Comment Line') OR
                     (Name = 'Country/Region')
                  THEN BEGIN
                    CASE Name OF
                      'Ship-to Address':
                        BEGIN
                          EDINAVTables.SETRANGE(EDINAVTables."NAV Table No.",222);
                          EDINAVTables.DELETEALL;
                          EDINAVFields.SETRANGE(EDINAVFields."NAV Table No.",222);
                          EDINAVFields.DELETEALL;
                          EDINAVTables.SETRANGE(EDINAVTables."NAV Table No.",10222);
                          EDINAVTables.DELETEALL;
                          EDINAVFields.SETRANGE(EDINAVFields."NAV Table No.",10222);
                          EDINAVFields.DELETEALL;
                       END;
                      'Location':
                        BEGIN
                          EDINAVTables.SETRANGE(EDINAVTables."NAV Table No.",14);
                          EDINAVTables.DELETEALL;
                          EDINAVFields.SETRANGE(EDINAVFields."NAV Table No.",14);
                          EDINAVFields.DELETEALL;
                          EDINAVTables.SETRANGE(EDINAVTables."NAV Table No.",10014);
                          EDINAVTables.DELETEALL;
                          EDINAVFields.SETRANGE(EDINAVFields."NAV Table No.",10014);
                          EDINAVFields.DELETEALL;
                          EDINAVTables.SETRANGE(EDINAVTables."NAV Table No.",10015);
                          EDINAVTables.DELETEALL;
                          EDINAVFields.SETRANGE(EDINAVFields."NAV Table No.",10015);
                          EDINAVFields.DELETEALL;
                        END;
                      'VAT Entry':
                        BEGIN
                          EDINAVTables.SETRANGE(EDINAVTables."NAV Table No.",254);
                          EDINAVTables.DELETEALL;
                          EDINAVFields.SETRANGE(EDINAVFields."NAV Table No.",254);
                          EDINAVFields.DELETEALL;
                          EDINAVTables.SETRANGE(EDINAVTables."NAV Table No.",10254);
                          EDINAVTables.DELETEALL;
                          EDINAVFields.SETRANGE(EDINAVFields."NAV Table No.",10254);
                          EDINAVFields.DELETEALL;
                        END;
                      'Sales Comment Line':
                        BEGIN
                          EDINAVTables.SETRANGE(EDINAVTables."NAV Table No.",44);
                          EDINAVTables.DELETEALL;
                          EDINAVFields.SETRANGE(EDINAVFields."NAV Table No.",44);
                          EDINAVFields.DELETEALL;
                          EDINAVTables.SETRANGE(EDINAVTables."NAV Table No.",10044);
                          EDINAVTables.DELETEALL;
                          EDINAVFields.SETRANGE(EDINAVFields."NAV Table No.",10044);
                          EDINAVFields.DELETEALL;
                        END;
                      'Purch. Comment Line':
                        BEGIN
                          EDINAVTables.SETRANGE(EDINAVTables."NAV Table No.",43);
                          EDINAVTables.DELETEALL;
                          EDINAVFields.SETRANGE(EDINAVFields."NAV Table No.",43);
                          EDINAVFields.DELETEALL;
                          EDINAVTables.SETRANGE(EDINAVTables."NAV Table No.",10043);
                          EDINAVTables.DELETEALL;
                          EDINAVFields.SETRANGE(EDINAVFields."NAV Table No.",10043);
                          EDINAVFields.DELETEALL;
                       END;
                    END;
                  END ELSE BEGIN
                    EDINAVTables.SETRANGE(EDINAVTables."NAV Table No.",DelBeg,DelEnd);
                    EDINAVTables.DELETEALL;
                    EDINAVFields.SETRANGE(EDINAVFields."NAV Table No.",DelBeg,DelEnd);
                    EDINAVFields.DELETEALL;
                  END;
                  //
                  EDINAVTables.INIT;
                  EDINAVTables."NAV Table No." := ID;
                  EDINAVTables."NAV Table Name" := Name;
                  EDINAVTables."Date Changed" := TODAY;
                  EDINAVTables."User ID" := USERID;
                  IF Name = 'Customer' THEN BEGIN
                    EDINAVTables."NAV Table No." := ID + 10000;
                    EDINAVTables."NAV Table Name" := 'Sell-to Customer';
                  END;
                  IF Name = 'Vendor' THEN BEGIN
                    EDINAVTables."NAV Table No." := ID + 20000;
                    EDINAVTables."NAV Table Name" := 'Buy-from Vendor';
                  END;
                  EDINAVTables.INSERT;
                  //
                  IF Name = 'Customer' THEN BEGIN
                    EDINAVTables."NAV Table No." := ID + 10001;
                    EDINAVTables."NAV Table Name" := 'Bill-to Customer';
                    EDINAVTables.INSERT;
                  END;
                  //
                  IF Name = 'Vendor' THEN BEGIN
                    EDINAVTables."NAV Table No." := ID + 20001;
                    EDINAVTables."NAV Table Name" := 'Pay-to Vendor';
                    EDINAVTables.INSERT;
                  END;
                  //
                  IF Name = 'Ship-to Address' THEN BEGIN
                    EDINAVTables."NAV Table No." := ID + 10000;
                    EDINAVTables."NAV Table Name" := 'Ship-for Address';
                    EDINAVTables.INSERT;
                  END;
                  //
                  IF Name = 'Location' THEN BEGIN
                    EDINAVTables."NAV Table No." := ID + 10000;
                    EDINAVTables."NAV Table Name" := 'Ship-to Location';
                    EDINAVTables.INSERT;
                  END;
                  //
                  IF Name = 'Location' THEN BEGIN
                    EDINAVTables."NAV Table No." := ID + 10001;
                    EDINAVTables."NAV Table Name" := 'Ship-from Location';
                    EDINAVTables.INSERT;
                  END;
                  //
                  IF Name = 'VAT Entry' THEN BEGIN
                    EDINAVTables."NAV Table No." := ID + 10000;
                    EDINAVTables."NAV Table Name" := 'VAT Entry Detail';
                    EDINAVTables.INSERT;
                  END;
                  //
                  IF Name = 'Sales Comment Line' THEN BEGIN
                    EDINAVTables."NAV Table No." := ID + 10000;
                    EDINAVTables."NAV Table Name" := 'Sales Comment Line Detail';
                    EDINAVTables.INSERT;
                  END;
                  //
                  IF Name = 'Purch. Comment Line' THEN BEGIN
                    EDINAVTables."NAV Table No." := ID + 10000;
                    EDINAVTables."NAV Table Name" := 'Purch. Comment Line Detail';
                    EDINAVTables.INSERT;
                  END;
                  //
                  IF Name = 'Country/Region' THEN BEGIN
                    EDINAVTables."NAV Table No." := ID + 19000;
                    EDINAVTables."NAV Table Name" := 'Sell-to Country';
                    EDINAVTables.INSERT;
                  END;
                  //
                  IF Name = 'Country/Region' THEN BEGIN
                    EDINAVTables."NAV Table No." := ID + 19001;
                    EDINAVTables."NAV Table Name" := 'Bill-to Country';
                    EDINAVTables.INSERT;
                  END;
                  IF Name = 'Country/Region' THEN BEGIN
                    EDINAVTables."NAV Table No." := ID + 19002;
                    EDINAVTables."NAV Table Name" := 'Ship-to Country';
                    EDINAVTables.INSERT;
                  END;
                  IF Name = 'Country/Region' THEN BEGIN
                    EDINAVTables."NAV Table No." := ID + 19003;
                    EDINAVTables."NAV Table Name" := 'Ship-from Country';
                    EDINAVTables.INSERT;
                  END;
                  IF Name = 'Country/Region' THEN BEGIN
                    EDINAVTables."NAV Table No." := ID + 19004;
                    EDINAVTables."NAV Table Name" := 'Pay-to Country';
                    EDINAVTables.INSERT;
                  END;
                  IF Name = 'Country/Region' THEN BEGIN
                    EDINAVTables."NAV Table No." := ID + 19005;
                    EDINAVTables."NAV Table Name" := 'Buy-from Country';
                    EDINAVTables.INSERT;
                  END;

                  Field.RESET;
                  Field.SETRANGE(TableNo,Object.ID);
                  IF Field.FIND('-') THEN
                    REPEAT
                      IF GUIALLOWED THEN
                        ProgressWindow.UPDATE(2,Field.FieldName);
                      WITH Field DO BEGIN
                        //
                        // Do not build EDI NAV Fields for the following type fields.
                        //
                        IF (Type <> Type::Binary) AND
                           (Type <> Type::BLOB) AND
                           (Type <> Type::DateFormula) AND
                           (Type <> Type::BigInteger)
                        THEN BEGIN
                          //
                          EDINAVFields.INIT;
                          EDINAVFields."NAV Table No." := Object.ID;
                          EDINAVFields."NAV Field No." := "No.";
                          EDINAVFields."NAV Field Name" := FieldName;
                          EDINAVFields."NAV Field Name" := CONVERTSTR(EDINAVFields."NAV Field Name",' ','_');
                          CASE Type OF
                            34559:
                              EDINAVFields.Type := EDINAVFields.Type::Integer;
                            11519:
                              EDINAVFields.Type := EDINAVFields.Type::Text;
                            35071:
                              EDINAVFields.Type := EDINAVFields.Type::Code;
                            12799:
                              EDINAVFields.Type := EDINAVFields.Type::Decimal;
                            35583:
                              EDINAVFields.Type := EDINAVFields.Type::Option;
                            34047:
                              EDINAVFields.Type := EDINAVFields.Type::Boolean;
                            11775:
                              EDINAVFields.Type := EDINAVFields.Type::Date;
                            11776:
                              EDINAVFields.Type := EDINAVFields.Type::Time;
                            37375:
                              EDINAVFields.Type := EDINAVFields.Type::DateTime;
                          ELSE
                            EDINAVFields.Type := EDINAVFields.Type::Text;
                          END;
                          IF Object.Name = 'Customer' THEN
                            EDINAVFields."NAV Table No." := Object.ID + 10000;
                          IF Object.Name = 'Vendor' THEN
                            EDINAVFields."NAV Table No." := Object.ID + 20000;
                          EDINAVFields.INSERT;
                          //
                          IF Object.Name = 'Customer' THEN BEGIN
                            EDINAVFields."NAV Table No." := Object.ID + 10001;
                            EDINAVFields.INSERT;
                          END;
                          //
                          IF Object.Name = 'Vendor' THEN BEGIN
                            EDINAVFields."NAV Table No." := Object.ID + 20001;
                            EDINAVFields.INSERT;
                          END;
                          //
                          IF Object.Name = 'Ship-to Address' THEN BEGIN
                            EDINAVFields."NAV Table No." := Object.ID + 10000;
                            EDINAVFields.INSERT;
                          END;
                          //
                          IF Object.Name = 'Location' THEN BEGIN
                            EDINAVFields."NAV Table No." := Object.ID + 10000;
                            EDINAVFields.INSERT;
                          END;
                          //
                          IF Object.Name = 'Location' THEN BEGIN
                            EDINAVFields."NAV Table No." := Object.ID + 10001;
                            EDINAVFields.INSERT;
                          END;
                          //
                          IF Object.Name = 'VAT Entry' THEN BEGIN
                            EDINAVFields."NAV Table No." := Object.ID + 10000;
                            EDINAVFields.INSERT;
                          END;
                          //
                          IF Object.Name = 'Sales Comment Line' THEN BEGIN
                            EDINAVFields."NAV Table No." := Object.ID + 10000;
                            EDINAVFields.INSERT;
                          END;
                          //
                         IF Object.Name = 'Purch. Comment Line' THEN BEGIN
                            EDINAVFields."NAV Table No." := Object.ID + 10000;
                            EDINAVFields.INSERT;
                          END;
                           //
                          IF Object.Name = 'Country/Region' THEN BEGIN
                            EDINAVFields."NAV Table No." := Object.ID + 19000;
                            EDINAVFields.INSERT;
                          END;
                          //
                          IF Object.Name = 'Country/Region' THEN BEGIN
                            EDINAVFields."NAV Table No." := Object.ID + 19001;
                            EDINAVFields.INSERT;
                          END;
                          //
                          IF Object.Name = 'Country/Region' THEN BEGIN
                            EDINAVFields."NAV Table No." := Object.ID + 19002;
                            EDINAVFields.INSERT;
                          END;
                          //
                          IF Object.Name = 'Country/Region' THEN BEGIN
                            EDINAVFields."NAV Table No." := Object.ID + 19003;
                            EDINAVFields.INSERT;
                          END;
                          //
                          IF Object.Name = 'Country/Region' THEN BEGIN
                            EDINAVFields."NAV Table No." := Object.ID + 19004;
                            EDINAVFields.INSERT;
                          END;
                          //
                          IF Object.Name = 'Country/Region' THEN BEGIN
                            EDINAVFields."NAV Table No." := Object.ID + 19005;
                            EDINAVFields.INSERT;
                          END;
                        END;
                     END;
                    UNTIL Field.NEXT = 0;
                UNTIL NEXT = 0;
              END;
            END;

            SetUpAvailDoc;
            SetUpOutFields;
            SetUpEDIInFields;

            ProgressWindow.CLOSE;
          END;

  }
  CODE
  {
    VAR
      Object@1000 : Record 2000000001;
      Field@1001 : Record 2000000041;
      EDINAVTables@1038 : Record 14002351;
      EDINAVFields@1037 : Record 14002352;
      EDIElement@1036 : Record 14002355;
      EDIConditional@1035 : Record 14002363;
      EDIFields@1034 : Record 14002356;
      EDINavisionAvailableDoc@1032 : Record 14002357;
      ProgressWindow@1031 : Dialog;
      EDILoadEDIOutFields@1240020001 : Codeunit 14000381;
      DelBeg@1007 : Integer;
      DelEnd@1006 : Integer;
      Text001@1240020008 : TextConst 'ENU=Loading EDI Tables......\';
      Text002@1240020003 : TextConst 'ENU=Table   #1##################\';
      Text003@1240020004 : TextConst 'ENU=Field   #2##################\';

    PROCEDURE SetUpAvailDoc@4();
    BEGIN
      EDINavisionAvailableDoc.DELETEALL;
      WriteNavAvailDoc('E_FUNCTACK','Export Functional Ack.',2,'FA');
      WriteNavAvailDoc('E_PURORD','Export Purchase Order',2,'PO');
      WriteNavAvailDoc('E_PURWSA','WINS Export Purchase Order',2,'');
      WriteNavAvailDoc('E_ROUTEREQ','Export Route Request',2,'RF');
      WriteNavAvailDoc('E_SLSASN','Export Advance Ship Notice',2,'SH');
      WriteNavAvailDoc('E_SLSINV','Export Sales Invoice',2,'IN');
      WriteNavAvailDoc('E_SLSPOA','Purchase Order Acknowledgement',2,'PR');
      WriteNavAvailDoc('E_SLSSTA','Order Status',2,'RS');
      WriteNavAvailDoc('E_SLSWSA','WINS Export Sales Order',2,'OW');
      WriteNavAvailDoc('E_SHPADV','Export Sales Shipment',2,'');
      WriteNavAvailDoc('E_SLSCRM','Export Sales Credit Memo',2,'CD');
      WriteNavAvailDoc('E_PURPRA','Export Purchase Payment Remit Advice',2,'RA');
      WriteNavAvailDoc('E_INVADV','Export Inventory Advice',2,'IB');
      WriteNavAvailDoc('E_SLSBSN','Export Shipment and Billing Notice',2,'BS');
      WriteNavAvailDoc('E_TFRORD','Export Transfer Order',2,'PT');
      WriteNavAvailDoc('E_EMCBOL','Export Bill of Lading',2,'BL');
      WriteNavAvailDoc('E_SLSRMA','Export Return Merchandise Authorization',2,'AN');
      WriteNavAvailDoc('E_PURRMA','Export Return Shipment Authorization',2,'AN');
      WriteNavAvailDoc('E_ADVPOA','Export Advance P.O. Acknowledgement',2,'PR');
      WriteNavAvailDoc('E_PRICAT','Export Price Catalog',2,'SC');
      WriteNavAvailDoc('E_SLSPOC','Export Sales P.O. Change',2,'CA');
      WriteNavAvailDoc('E_TFRSHP','Export Transfer Shipment',2,'PT');
      WriteNavAvailDoc('E_ZEROSN','Export Cancellation Ship Notice',2,'SH');
      WriteNavAvailDoc('E_SLSQUO','Export EDI Quote',2,'RR');
      WriteNavAvailDoc('I_FUNCTACK','Import Functional Ack.',1,'FA');
      WriteNavAvailDoc('I_SLSORD','Import Sales Order',1,'PO');
      WriteNavAvailDoc('I_SLSGEN','Sales Generic Document',1,'');
      WriteNavAvailDoc('I_SLSCUS','Import Customer Org. Relationships',1,'');
      WriteNavAvailDoc('I_SLSCRM','Import Sales Credit Memo',1,'');
      WriteNavAvailDoc('I_PURINV','Import Purchase Invoice',1,'IN');
      WriteNavAvailDoc('I_PURORD','Update Purchase Order',1,'');
      WriteNavAvailDoc('I_SLSASN','Import Advance Ship Notice',1,'SH');
      WriteNavAvailDoc('I_SLSWSA','Import Warehouse Ship Advice',1,'SW');
      WriteNavAvailDoc('I_FGTINV','Create Freight Invoice',1,'IM');
      WriteNavAvailDoc('I_PURDOC','Create Purchase Document',1,'');
      WriteNavAvailDoc('I_INVRPT','Import Inventory Report',1,'IB');
      WriteNavAvailDoc('I_INVADJ','Import Inventory Adjustment',1,'AW');
      WriteNavAvailDoc('I_TFRORD','Import Transfer Order',1,'PT');
      WriteNavAvailDoc('I_SLSQUO','Import EDI Quote',1,'RQ');
      WriteNavAvailDoc('I_SLSINV','Import Sales Invoice',1,'IN');
      WriteNavAvailDoc('I_PMTADV','Import Remittance Advice',1,'RA');
      WriteNavAvailDoc('I_ACKONLY','Import Document',1,'');
      WriteNavAvailDoc('U_PURWSA','WINS Update Purchase Order',1,'');
      WriteNavAvailDoc('U_SLSORD','Update Sales Order',1,'');
      WriteNavAvailDoc('U_SLSWSA','WINS Update Sales Order',1,'');
      WriteNavAvailDoc('U_ROUTEREQ','Update Route Request',1,'RG');
      WriteNavAvailDoc('U_TFRORD','Update Transfer Order',1,'');
    END;

    PROCEDURE WriteNavAvailDoc@5(Document@1240030000 : Text[30];Description@1240030001 : Text[50];Type@1240030002 : Option;"GS Functional ID"@1240030003 : Code[2]);
    BEGIN
      EDINavisionAvailableDoc.Document := Document;
      EDINavisionAvailableDoc."Document Description" := Description;
      EDINavisionAvailableDoc.Type := Type;
      EDINavisionAvailableDoc."GS Funct. Identifier Code" := "GS Functional ID";
      EDINavisionAvailableDoc.INSERT;
    END;

    PROCEDURE SetUpOutFields@6();
    BEGIN
      //
      // Create custom EDIOut here
      //

      EDILoadEDIOutFields.SetUpOutFields;

      EDIFields.RESET;
      EDIFields.SETRANGE("Field Type",EDIFields."Field Type"::"EDI Out");
      EDIFields.SETRANGE("Manual Entry",FALSE);
      EDIFields.SETRANGE(Custom,FALSE);
      EDIFields.SETRANGE(Packaged,FALSE);
      EDIFields.MODIFYALL("Manual Entry",TRUE);
    END;

    PROCEDURE WriteEDIOutFields@7(NavisionDocument@1240030000 : Code[10];FieldType@1240030001 : Option;EDIFieldCode@1240030002 : Text[40];DataType@1240030003 : Option;Description@1240030004 : Text[80]);
    BEGIN
      EDIFields.RESET;
      EDIFields.SETRANGE("Navision Document",NavisionDocument);
      EDIFields.SETFILTER("EDI Field Code",'%1','@' + EDIFieldCode);
      EDIFields.SETRANGE("Field Type",FieldType);
      IF NOT EDIFields.FIND('-') THEN BEGIN
        EDIFields.SetManualEntry(TRUE);
        EDIFields."Navision Document" := NavisionDocument;
        EDIFields."EDI Field Code" := EDIFieldCode;
        EDIFields."Data Type" := DataType;
        EDIFields.Description := Description;
        EDIFields."Field Type" := FieldType;
        EDIFields.Custom := TRUE;
        EDIFields.Packaged := FALSE;
        EDIFields."Manual Entry" := FALSE;
        EDIFields.INSERT;
      END ELSE BEGIN
        EDIFields.DELETE;
        EDIFields.SetManualEntry(TRUE);
        EDIFields."Navision Document" := NavisionDocument;
        EDIFields."EDI Field Code" := EDIFieldCode;
        EDIFields."Data Type" := DataType;
        EDIFields.Description := Description;
        EDIFields."Field Type" := FieldType;
        EDIFields.Custom := TRUE;
        EDIFields.Packaged := FALSE;
        EDIFields."Manual Entry" := FALSE;
        EDIFields.INSERT;
      END;
    END;

    PROCEDURE SetUpEDIInFields@8();
    BEGIN
      EDIElement.RESET;
      EDIElement.SETRANGE(Origin,EDIElement.Origin::"EDI In");
      IF EDIElement.FIND('-') THEN
        REPEAT
          IF EDIElement.Origin = EDIElement.Origin::"EDI In" THEN BEGIN
            EDIFields.INIT;
            EDIFields."Navision Document" := EDIElement."Navision Document";
            EDIFields."Field Type" := EDIFields."Field Type"::"EDI In";
            EDIFields."EDI Field Code" := EDIElement."Field Name";
            EDIFields."Data Type" := EDIElement."NAV Data Type";
            EDIFields.Description := 'Imported';
            IF EDIFields.INSERT THEN;
          END;
        UNTIL EDIElement.NEXT = 0;
      EDIConditional.RESET;
      EDIConditional.SETRANGE(Origin,EDIConditional.Origin::"EDI In");
      IF EDIConditional.FIND('-') THEN
        REPEAT
          IF EDIConditional.Origin = EDIConditional.Origin::"EDI In" THEN BEGIN
            EDIFields.INIT;
            EDIFields."Navision Document" := EDIConditional."Navision Document";
            EDIFields."Field Type" := EDIFields."Field Type"::"EDI In";
            EDIFields."EDI Field Code" := EDIConditional."Field Name";
            EDIFields."Data Type" := EDIFields."Data Type"::Text;
            EDIFields.Description := 'Imported';
            IF EDIFields.INSERT THEN;
          END;
        UNTIL EDIConditional.NEXT = 0;
    END;

    BEGIN
    {
      The logic to load custom EDIOut(s) should exist in the SetUpOutFields(). Pass the following parameters to the
      WriteEDIOutFields():
      Navision Document,FieldType Value of 1,EDIOut name,Numercial value for data type from base NAV "Data Type" field,
      EDIOut Description
      Example:
      WriteEDIOutFields(
        'E_PURORD',1,'Test Number',2,'Test Number');
    }
    END.
  }
}

