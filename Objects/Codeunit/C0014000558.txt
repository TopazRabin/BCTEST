OBJECT Codeunit 14000558 Create Sug. Order (Yes/No)
{
  OBJECT-PROPERTIES
  {
    Date=03/01/20;
    Time=12:00:00 PM;
    Version List=UBP3.02;
  }
  PROPERTIES
  {
    OnRun=VAR
            Location@1240030000 : Record 14;
            VendorBuyingCalendar@1240030001 : Record 14000563;
          BEGIN
            Location.RESET;
            Location.SETRANGE("Enable Adv. Forecasting",TRUE);
            IF Location.FIND('-') THEN
              REPEAT
                VendorBuyingCalendar.SETRANGE("Location Code",Location.Code);
                IF VendorBuyingCalendar.FINDSET THEN
                  REPEAT
                    CreateSuggestedOrder(VendorBuyingCalendar,TRUE);
                  UNTIL VendorBuyingCalendar.NEXT = 0;
              UNTIL Location.NEXT = 0;
          END;

  }
  CODE
  {

    PROCEDURE CreateSuggestedOrder@4(LocVendBuyingCalendar@14000500 : Record 14000563;AutoRun@1240030000 : Boolean);
    VAR
      SugOrderHeader@14000501 : Record 14000565;
      VendBuyingCalendar2@14000502 : Record 14000563;
      Text000@14000503 : TextConst 'ENU=Do you wish to create a suggested order for location %1 vendor %2 %3?';
      Text001@14000504 : TextConst 'ENU=Do you wish to create a suggested order for each location in vendor %1 group %2?';
      SuggestedOrderLineTmp@1240030001 : TEMPORARY Record 14000566;
      CalculationLineTmp@1240030002 : TEMPORARY Record 14000569;
      Text002@1240030004 : TextConst 'ENU=You have changed some suggested order quantities.  Do you wish to push LTH days only on those lines that have not been changed?';
      ChangedLines@1240030005 : Integer;
      Text003@1240020000 : TextConst 'ENU=You must create a suggested order before pushing lead time.';
      DocNumber@1240020001 : Code[20];
    BEGIN
      IF LocVendBuyingCalendar."Procurement Group Code" = '' THEN BEGIN
        IF LocVendBuyingCalendar."Push Vendor L.T. Days" = 0 THEN BEGIN
          IF NOT AutoRun THEN
            IF NOT CONFIRM(
              Text000,FALSE,LocVendBuyingCalendar."Location Code",LocVendBuyingCalendar."Vendor No.", LocVendBuyingCalendar."Division Code") THEN
                EXIT;
        END ELSE BEGIN
          IF LocVendBuyingCalendar."Division Code" <> '' THEN
            DocNumber := LocVendBuyingCalendar."Location Code" + LocVendBuyingCalendar."Division Code"
          ELSE
          DocNumber := LocVendBuyingCalendar."Location Code";
          IF SugOrderHeader.GET(LocVendBuyingCalendar."Vendor No.", DocNumber)
          THEN BEGIN
            ChangedLines := PrepPrevSuggOrderChangeLines(SugOrderHeader."No.", SugOrderHeader."Buy-from Vendor No.",
              SuggestedOrderLineTmp, CalculationLineTmp);
            IF ChangedLines <> 0 THEN BEGIN
              IF NOT AutoRun THEN BEGIN
                IF NOT CONFIRM(Text002,FALSE) THEN BEGIN
                  SuggestedOrderLineTmp.DELETEALL;
                  CalculationLineTmp.DELETEALL;
                END;
              END;
            END;
          END;
        END;
        IF LocVendBuyingCalendar."Division Code" <> '' THEN
          DocNumber := LocVendBuyingCalendar."Location Code" + LocVendBuyingCalendar."Division Code"
        ELSE
        DocNumber := LocVendBuyingCalendar."Location Code";
        IF SugOrderHeader.GET(LocVendBuyingCalendar."Vendor No.", DocNumber) THEN
          SugOrderHeader.DELETE(TRUE);
        VendBuyingCalendar2.GET(LocVendBuyingCalendar."Vendor No.",LocVendBuyingCalendar."Location Code", LocVendBuyingCalendar."Division Code");
        VendBuyingCalendar2."Order Create  Error" := TRUE;
        VendBuyingCalendar2."Order Create Date" := CURRENTDATETIME;
        VendBuyingCalendar2."Push Vendor L.T. Days" := 0;
        VendBuyingCalendar2."Doc. No. Filter" := DocNumber;
        VendBuyingCalendar2.MODIFY;
        COMMIT;
        CODEUNIT.RUN(CODEUNIT::"Create Suggested Order",LocVendBuyingCalendar);
        VendBuyingCalendar2."Order Create  Error" := FALSE;
        VendBuyingCalendar2."Order Create Date" := CURRENTDATETIME;
        VendBuyingCalendar2."Push Vendor L.T. Days" := 0;
        VendBuyingCalendar2.MODIFY(TRUE);
        RepCurrSuggOrdineWithPrevChg(SuggestedOrderLineTmp, CalculationLineTmp);
        COMMIT;
      END ELSE BEGIN
        IF LocVendBuyingCalendar."Push Vendor L.T. Days" = 0 THEN BEGIN
          IF NOT AutoRun THEN
            IF NOT CONFIRM(
              Text001,FALSE,LocVendBuyingCalendar."Vendor No.",LocVendBuyingCalendar."Procurement Group Code") THEN
                EXIT;
        END ELSE BEGIN
          IF SugOrderHeader.GET(LocVendBuyingCalendar."Vendor No.",LocVendBuyingCalendar."Procurement Group Code")
          THEN BEGIN
            ChangedLines := PrepPrevSuggOrderChangeLines(SugOrderHeader."No.", SugOrderHeader."Buy-from Vendor No.",
              SuggestedOrderLineTmp, CalculationLineTmp);
            IF ChangedLines <> 0 THEN BEGIN
              IF NOT AutoRun THEN BEGIN
                IF NOT CONFIRM(Text002,FALSE) THEN BEGIN
                  SuggestedOrderLineTmp.DELETEALL;
                  CalculationLineTmp.DELETEALL;
                END;
              END;
            END;
          END;
        END;
        IF SugOrderHeader.GET(LocVendBuyingCalendar."Vendor No.",LocVendBuyingCalendar."Procurement Group Code") THEN
          SugOrderHeader.DELETE(TRUE);
        VendBuyingCalendar2.RESET;
        VendBuyingCalendar2.SETRANGE("Vendor No.",LocVendBuyingCalendar."Vendor No.");
        VendBuyingCalendar2.SETRANGE("Procurement Group Code",LocVendBuyingCalendar."Procurement Group Code");
        IF VendBuyingCalendar2.FIND('-') THEN BEGIN
          REPEAT
            VendBuyingCalendar2."Push Vendor L.T. Days" := 0;
            VendBuyingCalendar2."Order Create  Error" := TRUE;
            VendBuyingCalendar2."Order Create Date" := CURRENTDATETIME;
            VendBuyingCalendar2."Doc. No. Filter" := LocVendBuyingCalendar."Procurement Group Code";
            VendBuyingCalendar2.MODIFY(FALSE);
            COMMIT;
            VendBuyingCalendar2."Push Vendor L.T. Days" := LocVendBuyingCalendar."Push Vendor L.T. Days";
            CODEUNIT.RUN(CODEUNIT::"Create Suggested Order",VendBuyingCalendar2);
            VendBuyingCalendar2."Order Create  Error" := FALSE;
            VendBuyingCalendar2."Order Create Date" := CURRENTDATETIME;
            VendBuyingCalendar2."Push Vendor L.T. Days" := 0;
            VendBuyingCalendar2.MODIFY(TRUE);
            COMMIT;
          UNTIL VendBuyingCalendar2.NEXT = 0;
        END;
        RepCurrSuggOrdineWithPrevChg(SuggestedOrderLineTmp, CalculationLineTmp);
      END;
    END;

    PROCEDURE PushVendorLeadTimeDays@1240030000(VendorBuyingCalendar@1240030000 : Record 14000563;PushDays@1240030004 : Integer);
    BEGIN
      VendorBuyingCalendar."Push Vendor L.T. Days" := PushDays;
      CreateSuggestedOrder(VendorBuyingCalendar,FALSE);
    END;

    PROCEDURE PrepPrevSuggOrderChangeLines@1240020000(SugOrdHeaderNoFilter@1240020000 : Code[20];BuyFromVendNoFilter@1240020005 : Code[20];VAR CurrSuggestedOrderLineTmp@1240020002 : TEMPORARY Record 14000566;VAR CurrCalculationLineTmp@1240020001 : TEMPORARY Record 14000569) ChangedLines : Integer;
    VAR
      SuggestedOrderLine@1240020004 : Record 14000566;
      CalculationLine@1240020003 : Record 14000569;
    BEGIN
      SuggestedOrderLine.SETRANGE("Document No.",SugOrdHeaderNoFilter);
      SuggestedOrderLine.SETRANGE("Buy-from Vendor No.",BuyFromVendNoFilter);
      SuggestedOrderLine.SETRANGE(Type,SuggestedOrderLine.Type::Item);
      SuggestedOrderLine.SETFILTER("No.",'<>%1','');
      IF SuggestedOrderLine.FIND('-') THEN BEGIN
        ChangedLines := 0;
        REPEAT
          IF SuggestedOrderLine.Quantity <> SuggestedOrderLine."Original Quantity" THEN BEGIN
            CurrSuggestedOrderLineTmp.COPY(SuggestedOrderLine);
            CurrSuggestedOrderLineTmp.INSERT;
            CalculationLine.SETRANGE("Location Code",SuggestedOrderLine."Location Code");
            CalculationLine.SETRANGE("Item No.",SuggestedOrderLine."No.");
            CalculationLine.SETRANGE("Variant Code",SuggestedOrderLine."Variant Code");
            IF CalculationLine.FIND('-') THEN
              REPEAT
                CurrCalculationLineTmp.COPY(CalculationLine);
                IF CurrCalculationLineTmp.INSERT THEN;
              UNTIL CalculationLine.NEXT = 0;
            ChangedLines := ChangedLines + 1;
          END;
        UNTIL SuggestedOrderLine.NEXT = 0;
      END;
    END;

    PROCEDURE RepCurrSuggOrdineWithPrevChg@1240020001(VAR CurrSuggestedOrderLineTmp@1240020001 : TEMPORARY Record 14000566;VAR CurrCalculationLineTmp@1240020000 : TEMPORARY Record 14000569);
    VAR
      SuggestedOrderLine@1240020005 : Record 14000566;
      CalculationLine@1240020004 : Record 14000569;
      LineNo@1240020002 : Integer;
    BEGIN
      IF CurrSuggestedOrderLineTmp.FINDSET THEN
        REPEAT
          SuggestedOrderLine.SETRANGE("Buy-from Vendor No.",CurrSuggestedOrderLineTmp."Buy-from Vendor No.");
          SuggestedOrderLine.SETRANGE("Document No.",CurrSuggestedOrderLineTmp."Document No.");
          SuggestedOrderLine.SETRANGE("Location Code",CurrSuggestedOrderLineTmp."Location Code");
          SuggestedOrderLine.SETRANGE("No.",CurrSuggestedOrderLineTmp."No.");
          SuggestedOrderLine.SETRANGE("Variant Code",CurrSuggestedOrderLineTmp."Variant Code");
          IF SuggestedOrderLine.FINDSET THEN BEGIN
            SuggestedOrderLine.VALIDATE(Quantity,CurrSuggestedOrderLineTmp.Quantity);
            SuggestedOrderLine.MODIFY(TRUE);
            CalculationLine.SETRANGE("Location Code",SuggestedOrderLine."Location Code");
            CalculationLine.SETRANGE("Item No.",SuggestedOrderLine."No.");
            CalculationLine.SETRANGE("Variant Code",SuggestedOrderLine."Variant Code");
            CalculationLine.DELETEALL;
            CurrCalculationLineTmp.SETRANGE("Location Code",SuggestedOrderLine."Location Code");
            CurrCalculationLineTmp.SETRANGE("Item No.",SuggestedOrderLine."No.");
            CurrCalculationLineTmp.SETRANGE("Variant Code",SuggestedOrderLine."Variant Code");
            IF CurrCalculationLineTmp.FIND('-') THEN
              REPEAT
                CalculationLine.INIT;
                CalculationLine."Location Code" := CurrCalculationLineTmp."Location Code";
                CalculationLine."Item No." := CurrCalculationLineTmp."Item No.";
                CalculationLine."Variant Code" := CurrCalculationLineTmp."Variant Code";
                CalculationLine."Line No." := CurrCalculationLineTmp."Line No.";
                CalculationLine."Source No." := CurrCalculationLineTmp."Source No.";
                CalculationLine.Formula := CurrCalculationLineTmp.Formula;
                IF CalculationLine.INSERT THEN;
              UNTIL CurrCalculationLineTmp.NEXT = 0;
          END ELSE BEGIN
            SuggestedOrderLine.RESET;
            SuggestedOrderLine.SETRANGE("Buy-from Vendor No.", CurrSuggestedOrderLineTmp."Buy-from Vendor No.");
            SuggestedOrderLine.SETRANGE("Document No.", CurrSuggestedOrderLineTmp."Document No.");
            LineNo := 0;
            IF SuggestedOrderLine.FINDLAST THEN
              LineNo := SuggestedOrderLine."Line No.";
            SuggestedOrderLine.RESET;
            SuggestedOrderLine.INIT;
            LineNo := LineNo + 10000;
            SuggestedOrderLine := CurrSuggestedOrderLineTmp;
            SuggestedOrderLine."Line No." := LineNo;
            SuggestedOrderLine.INSERT(TRUE);
          END;
        UNTIL CurrSuggestedOrderLineTmp.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

