OBJECT Codeunit 14002971 License Plate Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=08/21/18;
    Time=12:00:00 PM;
    Version List=RF1.50.13;
  }
  PROPERTIES
  {
    Permissions=TableData 6550=rimd;
    SingleInstance=No;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1240020001 : TextConst 'ENU=%1 does not exist';
      Text002@1240020000 : TextConst 'ENU=Movement Failed';
      Text004@1240020004 : TextConst 'ENU=Box not in any bin';
      Text016@1240020016 : TextConst 'ENU="Missing Pallet Bin Content "';
      Text018@1240020018 : TextConst 'ENU=Pallet missing: %1';
      Text019@1240020019 : TextConst 'ENU=Location Error';
      Text020@1240020002 : TextConst 'ENU=Scan the License Plate';

    [External]
    PROCEDURE GetStorageIDBin@1240020002(StorageID@1240020000 : Code[20];WarehouseEmployeeCode@1240020001 : Code[50];VAR BinCode@1240020004 : Code[20]) : Boolean;
    VAR
      WarehouseEmployee@1240020002 : Record 7301;
      PalletBinContent@1240020003 : Record 14002963;
    BEGIN
      WarehouseEmployee.SETRANGE("User ID",WarehouseEmployeeCode);
      WarehouseEmployee.SETRANGE(Default,TRUE);
      IF NOT WarehouseEmployee.FINDFIRST THEN
        EXIT(FALSE);

      PalletBinContent.SETRANGE(Location,WarehouseEmployee."Location Code");
      PalletBinContent.SETRANGE("Pallet No.",StorageID);
      IF PalletBinContent.FINDFIRST THEN BEGIN
        BinCode := PalletBinContent.Bin;
        EXIT(TRUE);
      END ELSE BEGIN
        PalletBinContent.RESET;
        PalletBinContent.SETRANGE(Location,WarehouseEmployee."Location Code");
        PalletBinContent.SETRANGE("Box No.",StorageID);
        IF PalletBinContent.FINDFIRST THEN BEGIN
          BinCode := PalletBinContent.Bin;
          EXIT(TRUE);
        END;
      END;

      EXIT(FALSE);
    END;

    [External]
    PROCEDURE GetStorageID@1240020001(StorageID@1240020000 : Code[20];VAR PalletNo@1240020001 : Code[20];VAR BoxNo@1240020002 : Code[20];WhseEmployeeCode@1240020005 : Code[50]) : Boolean;
    VAR
      PalletBinContent@1240020003 : Record 14002963;
      WarehouseEmployee@1240020004 : Record 7301;
    BEGIN
      WarehouseEmployee.SETRANGE("User ID",WhseEmployeeCode);
      WarehouseEmployee.SETRANGE(Default,TRUE);
      IF NOT WarehouseEmployee.FINDFIRST THEN
        EXIT(FALSE);

      PalletBinContent.SETRANGE(Location,WarehouseEmployee."Location Code");
      PalletBinContent.SETRANGE("Pallet No.",StorageID);
      IF PalletBinContent.FINDFIRST THEN BEGIN
        PalletNo := PalletBinContent."Pallet No.";
        EXIT(TRUE);
      END ELSE BEGIN
        PalletBinContent.RESET;
        PalletBinContent.SETRANGE(Location,WarehouseEmployee."Location Code");
        PalletBinContent.SETRANGE("Box No.",StorageID);
        IF PalletBinContent.FINDFIRST THEN BEGIN
          PalletNo := PalletBinContent."Pallet No.";
          BoxNo := PalletBinContent."Box No.";
          EXIT(TRUE);
        END;
      END;

      EXIT(FALSE)
    END;

    [External]
    PROCEDURE GetItemQtyOfStorageID@1240020010(PalletNo@1240020000 : Code[20];BoxNo@1240020005 : Code[20];ItemIdent@1240020001 : Record 7704;LotNo@1240020002 : Code[20];SerialNo@1240020003 : Code[20]) : Decimal;
    VAR
      PalletBincontent@1240020004 : Record 14002963;
      WhseActLine@1240020006 : Record 5767;
      PalletAllocatedQty@1240020007 : Decimal;
    BEGIN
      PalletBincontent.SETRANGE("Pallet No.",PalletNo);
      IF BoxNo <> '' THEN
        PalletBincontent.SETRANGE("Box No.",BoxNo);
      IF ItemIdent."Item No." <> '' THEN
        PalletBincontent.SETRANGE("Item No.",ItemIdent."Item No.");
      IF ItemIdent."Variant Code" <> '' THEN
        PalletBincontent.SETRANGE("Variant No.",ItemIdent."Variant Code")
      ELSE
        PalletBincontent.SETFILTER("Variant No.",'=%1','');
      IF ItemIdent."Unit of Measure Code" <> '' THEN
        PalletBincontent.SETRANGE("Unit of Measure",ItemIdent."Unit of Measure Code");
      IF LotNo <> '' THEN
        PalletBincontent.SETRANGE("Lot No.",LotNo);
      IF SerialNo <> '' THEN
        PalletBincontent.SETRANGE("Serial No.",SerialNo);
      PalletBincontent.CALCSUMS(Quantity);

      IF PalletBincontent.FINDFIRST AND
         (ItemIdent."Item No." <> '')
      THEN BEGIN
        WhseActLine.SETCURRENTKEY("Item No.","Bin Code","Location Code","Action Type",
          "Variant Code","Unit of Measure Code","Breakbulk No.","Activity Type","Lot No.",
          "Serial No.");
        WhseActLine.SETRANGE("Action Type",WhseActLine."Action Type"::Take);
        WhseActLine.SETRANGE("Location Code",PalletBincontent.Location);
        WhseActLine.SETRANGE("Bin Code",PalletBincontent.Bin);
        WhseActLine.SETRANGE("Item No.",ItemIdent."Item No.");
        IF ItemIdent."Variant Code" <> '' THEN
          WhseActLine.SETRANGE("Variant Code",ItemIdent."Variant Code");
        IF ItemIdent."Unit of Measure Code" <> '' THEN
          WhseActLine.SETRANGE("Unit of Measure Code",ItemIdent."Unit of Measure Code");
        IF LotNo <> '' THEN
          WhseActLine.SETRANGE("Lot No.",LotNo);
        IF SerialNo <> '' THEN
          WhseActLine.SETRANGE("Serial No.",SerialNo);
        WhseActLine.SETRANGE(WhseActLine."License Plate Pick",TRUE);
        WhseActLine.SETRANGE("Pick License Plate No.",PalletNo);
        IF WhseActLine.FINDSET THEN    //don't want to create key and sumfield
          REPEAT
            PalletAllocatedQty := PalletAllocatedQty + WhseActLine."Qty. to Handle";
          UNTIL WhseActLine.NEXT = 0;
      END;

      EXIT(PalletBincontent.Quantity - PalletAllocatedQty);
    END;

    [External]
    PROCEDURE GetQtyOnStorageID@1240020030(StorageID@1240020000 : Code[20]) : Decimal;
    VAR
      PalletBinContent@1240020001 : Record 14002963;
    BEGIN
      PalletBinContent.SETRANGE("Pallet No.",StorageID);
      IF NOT PalletBinContent.FINDFIRST THEN BEGIN
        PalletBinContent.RESET;
        PalletBinContent.SETRANGE("Box No.",StorageID);
        IF NOT PalletBinContent.FINDFIRST THEN
          EXIT(0);
      END;

      PalletBinContent.CALCSUMS(Quantity);
      EXIT(PalletBinContent.Quantity);
    END;

    [External]
    PROCEDURE GetMaxAdjustQty@1240020023(ItemIdent@1240020000 : Record 7704;WarehouseEmployee@1240020001 : Code[50]) : Decimal;
    VAR
      RFEmployeeSetup@1240020002 : Record 14002802;
      ItemUnitofMeasure@1240020003 : Record 5404;
    BEGIN
      RFEmployeeSetup.GetRFEmployeeSetup(WarehouseEmployee);
      IF NOT RFEmployeeSetup."Limit Adjustment Quantity" THEN
        EXIT(0);
      ItemUnitofMeasure.SETRANGE("Item No.",ItemUnitofMeasure."Item No.");
      ItemUnitofMeasure.SETRANGE(Code,ItemUnitofMeasure.Code);
      IF NOT ItemUnitofMeasure.FINDFIRST THEN
        EXIT(0)
      ELSE
        EXIT(ItemUnitofMeasure."Max. Adjust Qty");
    END;

    [External]
    PROCEDURE GetParentLicensePlateCode@1240020017(StorageID@1240020000 : Code[20]) : Code[20];
    VAR
      PalletBinContent@1240020001 : Record 14002963;
    BEGIN
      PalletBinContent.SETRANGE("Pallet No.",StorageID);
      IF PalletBinContent.FINDFIRST THEN
        EXIT(PalletBinContent."Pallet No.");

      PalletBinContent.RESET;
      PalletBinContent.SETRANGE("Box No.",StorageID);
      IF PalletBinContent.FINDFIRST THEN
        EXIT(PalletBinContent."Pallet No.");

      EXIT('');
    END;

    [External]
    PROCEDURE GetPalletItemNo@1240020029(PalletNo@1240020000 : Code[20];VAR ItemIdent@1240020002 : Record 7704) : Boolean;
    VAR
      PalletBinContent@1240020001 : Record 14002963;
    BEGIN
      PalletBinContent.SETRANGE("Pallet No.",PalletNo);
      PalletBinContent.SETFILTER("Item No.",'<>%1','');
      IF NOT PalletBinContent.FINDFIRST THEN
        EXIT(FALSE);

      ItemIdent."Item No." := PalletBinContent."Item No.";
      ItemIdent."Variant Code" := PalletBinContent."Variant No.";
      ItemIdent."Unit of Measure Code" := PalletBinContent."Unit of Measure";
      EXIT(TRUE);
    END;

    [External]
    PROCEDURE GetBoxItemNo@1240020019(BoxID@1240020000 : Code[20]) : Code[20];
    VAR
      PalletBinContent@1240020001 : Record 14002963;
    BEGIN
      PalletBinContent.SETRANGE("Box No.",BoxID);
      IF PalletBinContent.FINDFIRST THEN
        EXIT(PalletBinContent."Item No.");

      EXIT('');
    END;

    [External]
    PROCEDURE GetPalletTrackingInfo@1240020031(PalletNo@1240020000 : Code[20];BoxNo@1240020001 : Code[20];ItemIdent@1240020002 : Record 7704;VAR LotNo@1240020003 : Code[20];VAR SerialNo@1240020004 : Code[20];VAR Quantity@1240020005 : Decimal) : Boolean;
    VAR
      palletBinContent@1240020006 : Record 14002963;
    BEGIN
      palletBinContent.SETRANGE("Pallet No.",PalletNo);
      palletBinContent.SETRANGE("Box No.",BoxNo);
      palletBinContent.SETRANGE("Item No.",ItemIdent."Item No.");
      palletBinContent.SETRANGE("Variant No.",ItemIdent."Variant Code");
      palletBinContent.SETRANGE("Unit of Measure",ItemIdent."Unit of Measure Code");
      IF palletBinContent.FINDFIRST THEN BEGIN
        LotNo := palletBinContent."Lot No.";
        SerialNo := palletBinContent."Serial No.";
        Quantity := palletBinContent.Quantity;
      END ELSE
        EXIT(FALSE);

      IF (LotNo <> '') OR
         (SerialNo <> '')
      THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    [External]
    PROCEDURE PalletContainsItems@1240020016(PalletNo@1240020000 : Code[20]) : Boolean;
    VAR
      palletBinContent@1240020001 : Record 14002963;
    BEGIN
      palletBinContent.SETRANGE("Pallet No.",PalletNo);
      palletBinContent.SETFILTER("Item No.",'<>%1','');

      EXIT(NOT palletBinContent.ISEMPTY);
    END;

    [External]
    PROCEDURE CreatePalletBinContent@1240020000(LocationCode@1240020000 : Code[10];BinCode@1240020001 : Code[20];PalletNo@1240020002 : Code[20];BoxNo@1240020003 : Code[20];ItemCode@1240020004 : Code[20];VariantCode@1240020005 : Code[20];UOMCode@1240020008 : Code[10];LotNo@1240020006 : Code[20];SerialNo@1240020007 : Code[20];ExpiryDate@1240020016 : Date;Quantity@1240020009 : Decimal;Action@1240020013 : Integer;WarehouseEmployeeCode@1240020014 : Code[50]) : Boolean;
    VAR
      PalletBinContent@1240020010 : Record 14002963;
      ItemUOM@1240020011 : Record 5404;
      RFLocationSetup@1240020015 : Record 14099031;
      QtyPerUOM@1240020012 : Decimal;
    BEGIN
      QtyPerUOM := 1;
      IF UOMCode <> '' THEN
        IF ItemUOM.GET(ItemCode,UOMCode) THEN
          QtyPerUOM := ItemUOM."Qty. per Unit of Measure";

      IF LocationCode <> '' THEN
        RFLocationSetup.GET(LocationCode);

      PalletBinContent.VALIDATE(Location,LocationCode);
      PalletBinContent.VALIDATE(Bin,BinCode);
      PalletBinContent.VALIDATE("Pallet No.",PalletNo);
      PalletBinContent.VALIDATE("Box No.",BoxNo);
      PalletBinContent.VALIDATE("Item No.",ItemCode);
      PalletBinContent.VALIDATE("Variant No.",VariantCode);
      PalletBinContent.VALIDATE("Unit of Measure",UOMCode);
      PalletBinContent.VALIDATE("Lot No.",LotNo);
      PalletBinContent.VALIDATE("Expiry Date",ExpiryDate);
      PalletBinContent.VALIDATE("Serial No.",SerialNo);
      PalletBinContent.VALIDATE(Quantity,Quantity);
      PalletBinContent.VALIDATE("Qty per UOM",QtyPerUOM);
      PalletBinContent.VALIDATE("Quantity (Base)",QtyPerUOM * Quantity);
      PalletBinContent.VALIDATE("Creation Date",WORKDATE);
      PalletBinContent.VALIDATE("Creation Time",TIME);
      PalletBinContent.VALIDATE("QA Status",RFLocationSetup."Initial LP QA Status");
      PalletBinContent.INSERT;

      CreateLicenseplateEntry(PalletBinContent,Action,
        WarehouseEmployeeCode,PalletBinContent.Quantity);
    END;

    [External]
    PROCEDURE UpdatePalletBinContent@1240020007(Location@1240020000 : Code[10];Bin@1240020001 : Code[20];PalletNo@1240020002 : Code[20];BoxNo@1240020003 : Code[20];ItemCode@1240020004 : Code[20];VariantCode@1240020005 : Code[20];UOMCode@1240020008 : Code[10];LotNo@1240020006 : Code[20];SerialNo@1240020007 : Code[20];ExpiryDate@1240020016 : Date;Quantity@1240020009 : Decimal;Action@1240020013 : Integer;WarehouseEmployeeCode@1240020014 : Code[50]) : Boolean;
    VAR
      PalletBinContent@1240020010 : Record 14002963;
      PalletBinContent2@1240020011 : Record 14002963;
      ItemUnitOfMeasure@1240020012 : Record 5404;
      RFEmployeeSetup@1240020017 : Record 14002802;
      QtyPerUOM@1240020015 : Decimal;
    BEGIN
      IF Action IN [-1,0,1,6,8,9] THEN BEGIN
        QtyPerUOM := 1;
        IF UOMCode <> '' THEN
          IF ItemUnitOfMeasure.GET(ItemCode,UOMCode) THEN
            QtyPerUOM := ItemUnitOfMeasure."Qty. per Unit of Measure";

        PalletBinContent.SETRANGE(Location,Location);
        PalletBinContent.SETRANGE(Bin,Bin);
        PalletBinContent.SETRANGE("Pallet No.",PalletNo);
        IF BoxNo <> '' THEN
          PalletBinContent.SETRANGE("Box No.",BoxNo);
        PalletBinContent.SETFILTER("Item No.",'<>%1','');
        IF NOT PalletBinContent.ISEMPTY THEN BEGIN   //Pallet has content
          PalletBinContent.SETRANGE("Item No.",ItemCode);
          IF VariantCode <> '' THEN
            PalletBinContent.SETRANGE("Variant No.",VariantCode);
          IF UOMCode <> '' THEN
            PalletBinContent.SETRANGE("Unit of Measure",UOMCode);
          IF LotNo <> '' THEN
            PalletBinContent.SETRANGE("Lot No.",LotNo);
          IF SerialNo <> '' THEN
            PalletBinContent.SETRANGE("Serial No.",SerialNo);
          IF PalletBinContent.FINDFIRST THEN BEGIN      //Item is already on Pallet
            PalletBinContent.VALIDATE(Quantity,PalletBinContent.Quantity + Quantity);
            PalletBinContent.VALIDATE("Qty per UOM",QtyPerUOM);
            PalletBinContent.VALIDATE("Quantity (Base)",
              PalletBinContent.Quantity * PalletBinContent."Qty per UOM");
            PalletBinContent.VALIDATE("Last Handled Date",WORKDATE);
            PalletBinContent.VALIDATE("Last Handled Time",TIME);
            PalletBinContent.MODIFY;
          END ELSE BEGIN                                //Item is new on Pallet
            PalletBinContent.INIT;
            PalletBinContent.VALIDATE(Location,Location);
            PalletBinContent.VALIDATE(Bin,Bin);
            PalletBinContent.VALIDATE("Pallet No.",PalletNo);
            PalletBinContent.VALIDATE("Box No.",BoxNo);
            PalletBinContent.VALIDATE("Item No.",ItemCode);
            PalletBinContent.VALIDATE("Variant No.",VariantCode);
            PalletBinContent.VALIDATE("Unit of Measure",UOMCode);
            PalletBinContent.VALIDATE("Lot No.",LotNo);
            PalletBinContent.VALIDATE("Expiry Date",ExpiryDate);
            PalletBinContent.VALIDATE("Serial No.",SerialNo);
            PalletBinContent.VALIDATE(Quantity,Quantity);
            PalletBinContent.VALIDATE("Qty per UOM",QtyPerUOM);
            PalletBinContent.VALIDATE("Quantity (Base)",
              PalletBinContent.Quantity * PalletBinContent."Qty per UOM");
            PalletBinContent.VALIDATE("Last Handled Date",WORKDATE);
            PalletBinContent.VALIDATE("Last Handled Time",TIME);
            PalletBinContent.VALIDATE("Creation Date",WORKDATE);
            PalletBinContent.VALIDATE("Creation Time",TIME);
            PalletBinContent.INSERT;

            PalletBinContent2.RESET;
            PalletBinContent2.SETRANGE("Pallet No.",PalletNo);
            PalletBinContent2.SETFILTER("Item No.",'=%1','');
            PalletBinContent2.DELETEALL;
          END;
        END ELSE BEGIN   //Pallet has no content yet
          PalletBinContent2.RESET;
          PalletBinContent2.SETRANGE(Location,Location);
          PalletBinContent2.SETRANGE(Bin,Bin);
          PalletBinContent2.SETRANGE("Pallet No.",PalletNo);
          IF BoxNo <> '' THEN
            PalletBinContent2.SETRANGE("Box No.",BoxNo);
          PalletBinContent2.SETFILTER("Item No.",'=%1','');
          IF PalletBinContent2.FINDFIRST THEN BEGIN
            PalletBinContent2.DELETE;
          END;
          PalletBinContent.INIT;
          PalletBinContent.VALIDATE(Location,Location);
          PalletBinContent.VALIDATE(Bin,Bin);
          PalletBinContent.VALIDATE("Pallet No.",PalletNo);
          PalletBinContent.VALIDATE("Box No.",BoxNo);
          PalletBinContent.VALIDATE("Item No.",ItemCode);
          PalletBinContent.VALIDATE("Variant No.",VariantCode);
          PalletBinContent.VALIDATE("Unit of Measure",UOMCode);
          PalletBinContent.VALIDATE("Lot No.",LotNo);
          PalletBinContent.VALIDATE("Expiry Date",ExpiryDate);
          PalletBinContent.VALIDATE("Serial No.",SerialNo);
          PalletBinContent.VALIDATE(Quantity,Quantity);
          PalletBinContent.VALIDATE("Qty per UOM",QtyPerUOM);
          PalletBinContent.VALIDATE("Quantity (Base)",
            PalletBinContent.Quantity * PalletBinContent."Qty per UOM");
          PalletBinContent.VALIDATE("Last Handled Date",WORKDATE);
          PalletBinContent.VALIDATE("Last Handled Time",TIME);
          PalletBinContent.VALIDATE("Creation Date",WORKDATE);
          PalletBinContent.VALIDATE("Creation Time",TIME);
          PalletBinContent.INSERT;
        END;

        IF Action = -1 THEN
          IF Quantity < 0 THEN
            Action := 4        //Neg. Adjust
          ELSE
            Action := 3;       //Pos. Adjust
        CreateLicenseplateEntry(PalletBinContent,Action,
          WarehouseEmployeeCode,Quantity);

        IF PalletBinContent.Quantity = 0 THEN BEGIN
          PalletBinContent2.RESET;
          PalletBinContent2.SETRANGE("Pallet No.",PalletBinContent."Pallet No.");
          IF PalletBinContent."Box No." <> '' THEN
            PalletBinContent2.SETRANGE("Box No.",PalletBinContent."Box No.");
          PalletBinContent2.SETFILTER(Quantity,'<>%1',0);
          IF PalletBinContent2.FINDFIRST THEN
            PalletBinContent.DELETE
          ELSE BEGIN
            PalletBinContent2.RESET;
            RFEmployeeSetup.GetRFEmployeeSetup(WarehouseEmployeeCode);

            PalletBinContent2.INIT;
            PalletBinContent2.VALIDATE(Location,PalletBinContent.Location);
            PalletBinContent2.VALIDATE(Bin,PalletBinContent.Bin);
            PalletBinContent2.VALIDATE("Pallet No.",PalletBinContent."Pallet No.");
            PalletBinContent2.VALIDATE("Box No.",PalletBinContent."Box No.");
            PalletBinContent2.INSERT;
            PalletBinContent2.VALIDATE("Creation Date",PalletBinContent."Creation Date");
            PalletBinContent2.VALIDATE("Creation Time",PalletBinContent."Creation Time");
            PalletBinContent2.VALIDATE("Last Handled Date",WORKDATE);
            PalletBinContent2.VALIDATE("Last Handled Time",TIME);
            PalletBinContent2.MODIFY;
            PalletBinContent.DELETE;
          END;
        END;
      END;
    END;

    [External]
    PROCEDURE CreateLicenseplateEntry@1240020004(PalletBinContent@1240020002 : Record 14002963;Action@1240020001 : 'Take,Place,Consumption,Pos. Adj.,Neg. Adj.,Receive,Shipment,New Pallet,Addition,,Output';WarehouseEmployeeCode@1240020000 : Code[50];Quantity@1240020005 : Decimal);
    VAR
      LicensePlateEntry@1240020004 : Record 14002964;
      LicensePlateEntry2@1240020003 : Record 14002964;
    BEGIN
      LicensePlateEntry2.LOCKTABLE(TRUE);
      IF LicensePlateEntry2.FINDLAST THEN ;
      LicensePlateEntry."No." := LicensePlateEntry2."No." + 1;
      LicensePlateEntry.INSERT;

      LicensePlateEntry.Location := PalletBinContent.Location;
      LicensePlateEntry.Bin := PalletBinContent.Bin;
      LicensePlateEntry.Pallet := PalletBinContent."Pallet No.";
      LicensePlateEntry.Action := Action;
      LicensePlateEntry."Warehouse Employee Code" := WarehouseEmployeeCode;
      LicensePlateEntry."Entry Date" := WORKDATE;
      LicensePlateEntry."Entry Time" := TIME;
      LicensePlateEntry.Box := PalletBinContent."Box No.";
      LicensePlateEntry.Item := PalletBinContent."Item No.";
      LicensePlateEntry."Variant Code" := PalletBinContent."Variant No.";
      LicensePlateEntry."Lot No." := PalletBinContent."Lot No.";
      LicensePlateEntry."Serial No." := PalletBinContent."Serial No.";
      LicensePlateEntry.Quantity := Quantity;
      LicensePlateEntry."Qty per UOM" := PalletBinContent."Qty per UOM";
      LicensePlateEntry."Quantity (Base)" := Quantity * PalletBinContent."Qty per UOM";
      LicensePlateEntry."Unit of Measure" := PalletBinContent."Unit of Measure";
      LicensePlateEntry.MODIFY;
    END;

    [External]
    PROCEDURE CheckPalletConsistency@1240020003(ItemIdent@1240020000 : Record 7704;PalletNo@1240020001 : Code[20]) : Boolean;
    VAR
      PalletBinContent@1240020002 : Record 14002963;
    BEGIN
      PalletBinContent.SETRANGE("Pallet No.",PalletNo);
      IF NOT PalletBinContent.FINDFIRST THEN
        EXIT(FALSE);

      PalletBinContent.SETFILTER("Item No.",'<>%1',ItemIdent."Item No.");
      IF PalletBinContent.FINDFIRST THEN
        EXIT(FALSE);

      PalletBinContent.SETFILTER("Variant No.",'<>%1',ItemIdent."Variant Code");
      IF PalletBinContent.FINDFIRST THEN
        EXIT(FALSE);

      PalletBinContent.SETFILTER("Unit of Measure",'<>%1',ItemIdent."Unit of Measure Code");
      IF PalletBinContent.FINDFIRST THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    [External]
    PROCEDURE CheckBoxConsistency@1240020005(ItemIdent@1240020001 : Record 7704;BoxNo@1240020000 : Code[20]) : Boolean;
    VAR
      PalletBinContent@1240020002 : Record 14002963;
    BEGIN
      PalletBinContent.SETRANGE("Box No.",BoxNo);
      IF NOT PalletBinContent.FINDFIRST THEN
        EXIT(FALSE);

      PalletBinContent.SETFILTER("Item No.",'<>%1',ItemIdent."Item No.");
      IF PalletBinContent.FINDFIRST THEN
        EXIT(FALSE);

      PalletBinContent.SETFILTER("Variant No.",'<>%1',ItemIdent."Variant Code");
      IF PalletBinContent.FINDFIRST THEN
        EXIT(FALSE);

      PalletBinContent.SETFILTER("Unit of Measure",'<>%1',ItemIdent."Unit of Measure Code");
      IF PalletBinContent.FINDFIRST THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    [External]
    PROCEDURE CheckStorageIDIsEmpty@1240020012(StorageID@1240020000 : Code[20]) : Boolean;
    VAR
      PalletBinContent@1240020001 : Record 14002963;
    BEGIN
      PalletBinContent.SETRANGE("Pallet No.",StorageID);
      IF NOT PalletBinContent.FINDFIRST THEN BEGIN
        PalletBinContent.RESET;
        PalletBinContent.SETRANGE("Box No.",StorageID);
        IF NOT PalletBinContent.FINDFIRST THEN
          EXIT(FALSE);
      END;

      IF PalletBinContent."Item No." <> '' THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    [External]
    PROCEDURE CheckItemOnPallet@1240020008(StorageID@1240020000 : Code[20];ItemIdentifier@1240020001 : Record 7704;LotNo@1240020002 : Code[20];SerialNo@1240020003 : Code[20]) : Boolean;
    VAR
      PalletBinContent@1240020004 : Record 14002963;
    BEGIN
      PalletBinContent.SETRANGE("Pallet No.",StorageID);
      PalletBinContent.SETFILTER("Box No.",'=%1','');
      PalletBinContent.SETRANGE("Item No.",ItemIdentifier."Item No.");
      IF ItemIdentifier."Variant Code" <> '' THEN
        PalletBinContent.SETRANGE("Variant No.",ItemIdentifier."Variant Code");
      IF ItemIdentifier."Unit of Measure Code" <> '' THEN
        PalletBinContent."Unit of Measure" := ItemIdentifier."Unit of Measure Code";
      IF LotNo <> '' THEN
        PalletBinContent.SETRANGE("Lot No.",LotNo);
      IF SerialNo <> '' THEN
        PalletBinContent.SETRANGE("Serial No.",SerialNo);

      IF PalletBinContent.FINDFIRST THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    [External]
    PROCEDURE CheckItemInBox@1240020009(StorageID@1240020000 : Code[20];ItemIdentifier@1240020001 : Record 7704;LotNo@1240020002 : Code[20];SerialNo@1240020003 : Code[20]) : Boolean;
    VAR
      PalletBinContent@1240020004 : Record 14002963;
    BEGIN
      PalletBinContent.SETRANGE("Box No.",StorageID);
      PalletBinContent.SETRANGE("Item No.",ItemIdentifier."Item No.");
      IF ItemIdentifier."Variant Code" <> '' THEN
        PalletBinContent.SETRANGE("Variant No.",ItemIdentifier."Variant Code");
      IF ItemIdentifier."Unit of Measure Code" <> '' THEN
        PalletBinContent."Unit of Measure" := ItemIdentifier."Unit of Measure Code";
      IF LotNo <> '' THEN
        PalletBinContent.SETRANGE("Lot No.",LotNo);
      IF SerialNo <> '' THEN
        PalletBinContent.SETRANGE("Serial No.",SerialNo);

      IF PalletBinContent.FINDFIRST THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    [External]
    PROCEDURE CheckContentOnPallet@1240020057(StorageID@1240020004 : Code[20];BoxNo@1240020008 : Code[20];LocationCode@1240020006 : Code[10];ItemNo@1240020003 : Code[20];VariantCode@1240020002 : Code[10];UnitOfMeasureCode@1240020001 : Code[10];LotNo@1240020000 : Code[20];SerialNo@1240020005 : Code[20]) : Boolean;
    VAR
      PalletBinContent@1240020007 : Record 14002963;
    BEGIN
      PalletBinContent.SETRANGE("Pallet No.",StorageID);
      PalletBinContent.SETRANGE(Location,LocationCode);
      PalletBinContent.SETRANGE("Item No.",ItemNo);
      IF BoxNo <> '' THEN
        PalletBinContent.SETRANGE("Box No.",BoxNo);
      IF VariantCode <> '' THEN
        PalletBinContent.SETRANGE("Variant No.",VariantCode);
      IF UnitOfMeasureCode <> '' THEN
        PalletBinContent."Unit of Measure" := UnitOfMeasureCode;
      IF LotNo <> '' THEN
        PalletBinContent.SETRANGE("Lot No.",LotNo);
      IF SerialNo <> '' THEN
        PalletBinContent.SETRANGE("Serial No.",SerialNo);

      IF PalletBinContent.FINDFIRST THEN
        IF PalletBinContent.Quantity > 0 THEN
          EXIT(TRUE);

      EXIT(FALSE);
    END;

    [External]
    PROCEDURE CheckWholePalletMoveTake@1240020054(WhseActLine@1240020000 : Record 5767;StorageID@1240020001 : Code[20]) : Boolean;
    VAR
      PalletBinContent@1240020002 : Record 14002963;
      WhseActLine2@1240020003 : Record 5767;
      TakeQtyBase@1240020005 : Decimal;
    BEGIN
      PalletBinContent.SETRANGE(Location,WhseActLine."Location Code");
      PalletBinContent.SETRANGE("Pallet No.",StorageID);
      IF PalletBinContent.FINDSET(FALSE) THEN BEGIN
        REPEAT
          CLEAR(TakeQtyBase);
          WhseActLine2.RESET;
          WhseActLine2.SETRANGE("Activity Type",WhseActLine2."Activity Type"::Movement);
          WhseActLine2.SETRANGE("Action Type",WhseActLine2."Action Type"::Take);
          WhseActLine2.SETRANGE("Location Code",PalletBinContent.Location);
          WhseActLine2.SETRANGE("Bin Code",PalletBinContent.Bin);
          WhseActLine2.SETRANGE("Item No.",PalletBinContent."Item No.");
          WhseActLine2.SETRANGE("Variant Code",PalletBinContent."Variant No.");
          WhseActLine2.SETRANGE("Unit of Measure Code",PalletBinContent."Unit of Measure");
          WhseActLine2.SETRANGE("Lot No.",PalletBinContent."Lot No.");
          WhseActLine2.SETRANGE("Serial No.",PalletBinContent."Serial No.");
          WhseActLine2.SETRANGE("Pallet Code",PalletBinContent."Pallet No.");
          IF WhseActLine2.FINDSET(FALSE) THEN
            REPEAT
              TakeQtyBase += WhseActLine2."Qty. to Handle (Base)";
            UNTIL WhseActLine2.NEXT = 0;

          IF TakeQtyBase <> PalletBinContent."Quantity (Base)" THEN
            EXIT(FALSE);
        UNTIL PalletBinContent.NEXT = 0;

        EXIT(TRUE);
      END;

      EXIT(FALSE);
    END;

    [External]
    PROCEDURE CheckWholePalletMovePlace@1240020055(WhseActLine@1240020000 : Record 5767;StorageID@1240020001 : Code[20]) : Boolean;
    VAR
      WhseActLine2@1240020003 : Record 5767;
    BEGIN
      WhseActLine2.RESET;
      WhseActLine2.SETRANGE("Activity Type",WhseActLine2."Activity Type"::Movement);
      WhseActLine2.SETRANGE("Action Type",WhseActLine2."Action Type"::Place);
      WhseActLine2.SETRANGE("Location Code",WhseActLine."Location Code");
      WhseActLine2.SETRANGE("Pallet Code",StorageID);
      IF WhseActLine2.FINDSET(FALSE) THEN
        REPEAT
          IF WhseActLine2."Bin Code" <> WhseActLine."Bin Code" THEN
            EXIT(FALSE);
        UNTIL WhseActLine2.NEXT = 0;

      EXIT(TRUE);
    END;

    [External]
    PROCEDURE CalcFreeInv@1240020006(LocationCode@1240020000 : Code[10];BinCode@1240020001 : Code[20];ItemIdent@1240020002 : Record 7704;LotNo@1240020003 : Code[20];SerialNo@1240020004 : Code[20]) : Decimal;
    VAR
      WarehouseEntry@1240020005 : Record 7312;
      PalletBinContent@1240020006 : Record 14002963;
      WhseActLine@1240020007 : Record 5767;
      LooseAllocatedQty@1240020008 : Decimal;
    BEGIN
      WarehouseEntry.SETCURRENTKEY("Item No.","Bin Code","Location Code","Variant Code",
                                   "Unit of Measure Code","Lot No.","Serial No.","Entry Type");
      WarehouseEntry.SETRANGE("Location Code",LocationCode);
      WarehouseEntry.SETRANGE("Bin Code",BinCode);
      WarehouseEntry.SETRANGE("Item No.",ItemIdent."Item No.");
      IF ItemIdent."Variant Code" <> '' THEN
        WarehouseEntry.SETRANGE("Variant Code",ItemIdent."Variant Code")
      ELSE
        WarehouseEntry.SETFILTER("Variant Code",'=%1','');
      IF ItemIdent."Unit of Measure Code" <> '' THEN
        WarehouseEntry.SETRANGE("Unit of Measure Code",ItemIdent."Unit of Measure Code");
      IF LotNo <> '' THEN
        WarehouseEntry.SETRANGE("Lot No.",LotNo);
      IF SerialNo <> '' THEN
        WarehouseEntry.SETRANGE("Serial No.",SerialNo);
      WarehouseEntry.CALCSUMS(Quantity);

      PalletBinContent.SETRANGE(Location,LocationCode);
      PalletBinContent.SETRANGE(Bin,BinCode);
      PalletBinContent.SETRANGE("Item No.",ItemIdent."Item No.");
      IF ItemIdent."Variant Code" <> '' THEN
        PalletBinContent.SETRANGE("Variant No.",ItemIdent."Variant Code")
      ELSE
        PalletBinContent.SETFILTER("Variant No.",'=%1','');
      IF ItemIdent."Unit of Measure Code" <> '' THEN
        PalletBinContent.SETRANGE("Unit of Measure",ItemIdent."Unit of Measure Code");
      IF LotNo <> '' THEN
        PalletBinContent.SETRANGE("Lot No.",LotNo);
      IF SerialNo <> '' THEN
        PalletBinContent.SETRANGE("Serial No.",SerialNo);
      PalletBinContent.CALCSUMS(Quantity);

      WhseActLine.SETCURRENTKEY("Item No.","Bin Code","Location Code","Action Type",
        "Variant Code","Unit of Measure Code","Breakbulk No.","Activity Type","Lot No.",
        "Serial No.");
      WhseActLine.SETRANGE("Action Type",WhseActLine."Action Type"::Take);
      WhseActLine.SETRANGE("Location Code",LocationCode);
      WhseActLine.SETRANGE("Bin Code",BinCode);
      WhseActLine.SETRANGE("Item No.",ItemIdent."Item No.");
      IF ItemIdent."Variant Code" <> '' THEN
        WhseActLine.SETRANGE("Variant Code",ItemIdent."Variant Code");
      IF ItemIdent."Unit of Measure Code" <> '' THEN
        WhseActLine.SETRANGE("Unit of Measure Code",ItemIdent."Unit of Measure Code");
      IF LotNo <> '' THEN
        WhseActLine.SETRANGE("Lot No.",LotNo);
      IF SerialNo <> '' THEN
        WhseActLine.SETRANGE("Serial No.",SerialNo);
      WhseActLine.SETRANGE(WhseActLine."License Plate Pick",FALSE);
      WhseActLine.SETRANGE("Pick License Plate No.",'');
      IF WhseActLine.FINDSET THEN    //don't want to create a sumfield
        REPEAT
          LooseAllocatedQty := LooseAllocatedQty + WhseActLine."Qty. to Handle";
        UNTIL WhseActLine.NEXT = 0;

      EXIT(WarehouseEntry.Quantity - PalletBinContent.Quantity - LooseAllocatedQty);
    END;

    [External]
    PROCEDURE AdjustQuantity@1240020011(PalletNo@1240020000 : Code[20];BoxNo@1240020001 : Code[20];ItemIdent@1240020002 : Record 7704;Lotno@1240020003 : Code[20];SerialNo@1240020004 : Code[20];NewQuantity@1240020005 : Decimal;WarehouseEmployee@1240020009 : Code[50];VAR Remark@1240020006 : Text[250]);
    VAR
      PalletBinContent@1240020007 : Record 14002963;
      StorageIDQuantity@1240020008 : Decimal;
    BEGIN
      PalletBinContent.SETRANGE("Pallet No.",PalletNo);
      IF BoxNo <> '' THEN
        PalletBinContent.SETRANGE("Box No.",BoxNo);
      PalletBinContent.SETRANGE("Item No.",ItemIdent."Item No.");
      PalletBinContent.SETRANGE("Variant No.",ItemIdent."Variant Code");
      PalletBinContent.SETRANGE("Unit of Measure",ItemIdent."Unit of Measure Code");
      PalletBinContent.SETRANGE("Lot No.",Lotno);
      PalletBinContent.SETRANGE("Serial No.",SerialNo);
      IF NOT PalletBinContent.FINDFIRST THEN BEGIN
        Remark := STRSUBSTNO(Text001,PalletBinContent.FIELDCAPTION("Pallet No."));
        EXIT;
      END;

      StorageIDQuantity := GetItemQtyOfStorageID(PalletNo,BoxNo,ItemIdent,Lotno,SerialNo);
      IF NewQuantity = StorageIDQuantity THEN
        EXIT
      ELSE BEGIN
        UpdatePalletBinContent(PalletBinContent.Location,PalletBinContent.Bin,
          PalletBinContent."Pallet No.",PalletBinContent."Box No.",PalletBinContent."Item No.",
          PalletBinContent."Variant No.",PalletBinContent."Unit of Measure",
          PalletBinContent."Lot No.",PalletBinContent."Serial No.",PalletBinContent."Expiry Date",
          NewQuantity-StorageIDQuantity,-1,WarehouseEmployee);
      END;
    END;

    [External]
    PROCEDURE DestroyStorageID@1240020014(PalletNo@1240020000 : Code[20];BoxNo@1240020001 : Code[20];WarehouseEmployeeCode@1240020002 : Code[50];VAR Remark@1240020003 : Text[250]);
    VAR
      PalletBinContent@1240020004 : Record 14002963;
    BEGIN
      WITH PalletBinContent DO BEGIN
        SETRANGE("Pallet No.",PalletNo);
        IF ISEMPTY THEN BEGIN
          RESET;
          SETRANGE("Box No.", PalletNo);
          IF ISEMPTY THEN
            EXIT;
        END;

        IF PalletContainsItems(PalletNo) THEN BEGIN
          IF FINDSET THEN BEGIN
            REPEAT
              CreateWhseItemJournal(PalletBinContent,WarehouseEmployeeCode,-Quantity);
              UpdatePalletBinContent(Location,Bin,"Pallet No.","Box No.","Item No.",
                "Variant No.","Unit of Measure","Lot No.","Serial No.","Expiry Date",
                -Quantity,-1,WarehouseEmployeeCode);
            UNTIL NEXT = 0;
          END;
        END ELSE BEGIN
          IF FINDFIRST THEN BEGIN
            CreateLicenseplateEntry(PalletBinContent,9,WarehouseEmployeeCode,Quantity);
            PalletBinContent.DELETE;
          END;
        END;
      END;
    END;

    [External]
    PROCEDURE MoveItemPalletToPallet@1240020015(FromPallet@1240020000 : Code[20];ToPallet@1240020008 : Code[20];ItemIdent@1240020001 : Record 7704;LotNo@1240020003 : Code[20];SerialNo@1240020004 : Code[20];Quantity@1240020002 : Decimal;WarehouseEmployeeCode@1240020006 : Code[50];VAR Remark@1240020005 : Text[250]);
    VAR
      PalletBinContent@1240020007 : Record 14002963;
      PalletBinContent2@1240020009 : Record 14002963;
      BoxHandlingLineTmp@1240020011 : TEMPORARY Record 14002970;
      LineNo@1240020012 : Integer;
      PhysicalMove@1240020010 : Boolean;
    BEGIN
      PalletBinContent.SETRANGE("Pallet No.",FromPallet);
      IF NOT PalletBinContent.FINDFIRST THEN BEGIN
        Remark := STRSUBSTNO(Text018,FromPallet);
        EXIT;
      END;

      PalletBinContent2.SETRANGE("Pallet No.",ToPallet);
      IF NOT PalletBinContent2.FINDFIRST THEN BEGIN
        Remark := STRSUBSTNO(Text018,ToPallet);
        EXIT;
      END;

      IF PalletBinContent.Location <> PalletBinContent2.Location THEN BEGIN
        Remark := Text019;
        EXIT;
      END;

      PhysicalMove := PalletBinContent.Bin <> PalletBinContent2.Bin;
      BoxHandlingLineTmp.DELETEALL;

      PalletBinContent.SETRANGE("Item No.",ItemIdent."Item No.");
      IF ItemIdent."Variant Code" <> '' THEN
        PalletBinContent.SETRANGE("Variant No.",ItemIdent."Variant Code");
      IF ItemIdent."Unit of Measure Code" <> '' THEN
        PalletBinContent.SETRANGE("Unit of Measure",ItemIdent."Unit of Measure Code");
      IF LotNo <> '' THEN
        PalletBinContent.SETRANGE("Lot No.",LotNo);
      IF SerialNo <> '' THEN
        PalletBinContent.SETRANGE("Serial No.",SerialNo);
      IF PalletBinContent.FINDSET THEN BEGIN
        REPEAT
          IF NOT PhysicalMove THEN BEGIN
          LineNo := LineNo + 1;
          // take the item from the from-pallet
          UpdatePalletBinContent(PalletBinContent.Location,PalletBinContent.Bin,
            PalletBinContent."Pallet No.",PalletBinContent."Box No.",PalletBinContent."Item No.",
            PalletBinContent."Variant No.",PalletBinContent."Unit of Measure",
            PalletBinContent."Lot No.",PalletBinContent."Serial No.",PalletBinContent."Expiry Date",
            -Quantity,0,WarehouseEmployeeCode);
          // place the item on the to-pallet
          UpdatePalletBinContent(PalletBinContent2.Location,PalletBinContent2.Bin,
            PalletBinContent2."Pallet No.",PalletBinContent2."Box No.",PalletBinContent."Item No.",
            PalletBinContent."Variant No.",PalletBinContent."Unit of Measure",
            PalletBinContent."Lot No.",PalletBinContent."Serial No.",PalletBinContent."Expiry Date",
            Quantity,1,WarehouseEmployeeCode);
          // create a temp record for later
          END ELSE BEGIN
            BoxHandlingLineTmp.INIT;
            BoxHandlingLineTmp.VALIDATE("Line No.",LineNo);
            BoxHandlingLineTmp.VALIDATE(Location,PalletBinContent2.Location);
            BoxHandlingLineTmp.VALIDATE("Bin Code",PalletBinContent.Bin);
            BoxHandlingLineTmp.VALIDATE("Pallet No.",PalletBinContent."Pallet No.");
            BoxHandlingLineTmp.VALIDATE("Item No.",PalletBinContent."Item No.");
            BoxHandlingLineTmp.VALIDATE("Variant Code",PalletBinContent."Variant No.");
            BoxHandlingLineTmp.VALIDATE("Unit of Measure Code",PalletBinContent."Unit of Measure");
            BoxHandlingLineTmp.VALIDATE("Lot No.",PalletBinContent."Lot No.");
            BoxHandlingLineTmp.VALIDATE("Expiry Date",PalletBinContent."Expiry Date");
            BoxHandlingLineTmp.VALIDATE("Serial No.",PalletBinContent."Serial No.");
            BoxHandlingLineTmp.VALIDATE(Quantity,Quantity);
            BoxHandlingLineTmp.VALIDATE("Qty. per UOM",PalletBinContent."Qty per UOM");
            BoxHandlingLineTmp.VALIDATE("To Bin Code",PalletBinContent2.Bin);
            BoxHandlingLineTmp.VALIDATE("To Pallet No.",PalletBinContent2."Pallet No.");
            BoxHandlingLineTmp.INSERT;
          END;

        UNTIL PalletBinContent.NEXT = 0;
      END;

      WITH BoxHandlingLineTmp DO BEGIN
        IF FINDSET THEN BEGIN
          REPEAT
            CreateMovement(
              "Pallet No.",'',"Item No.","Variant Code","Unit of Measure Code",'','',
              "To Pallet No.","To Bin Code",Quantity,WarehouseEmployeeCode,Remark);
          UNTIL NEXT = 0;
        END;

        BoxHandlingLineTmp.DELETEALL;
      END;
    END;

    [External]
    PROCEDURE MovePallet@1240020018(Pallet@1240020000 : Code[20];ToBin@1240020001 : Code[20];LoginID@1240020009 : Code[50];VAR Remark@1240020003 : Text[250]);
    VAR
      PalletBinContent@1240020002 : Record 14002963;
      PalletBinContent2@1240020007 : Record 14002963;
      PalletBinContentTmp@1240020005 : TEMPORARY Record 14002963;
      FromBin@1240020008 : Code[20];
      LineNo@1240020006 : Integer;
      PhysicalMove@1240020004 : Boolean;
    BEGIN
      CreateMovement(Pallet,'','','','','','','',ToBin,0,LoginID,Remark);
    END;

    [External]
    PROCEDURE GetLicensePlate@1240020020(InputValue@1240020000 : Text[250];VAR ErrorMessage@1240020001 : Text[250];VAR DynamicMoveLine@1240020002 : Record 14002872) : Boolean;
    VAR
      PalletBinContent@1240020003 : Record 14002963;
      Text001@1240020004 : TextConst 'ENU=Pallet not Found';
    BEGIN
      PalletBinContent.SETRANGE("Pallet No.",InputValue);
      IF NOT PalletBinContent.FINDFIRST THEN BEGIN
        PalletBinContent.RESET;
        PalletBinContent.SETRANGE("Box No.",InputValue);
        IF NOT PalletBinContent.FINDFIRST THEN
          ErrorMessage := Text001;
          EXIT(FALSE);
      END;

      DynamicMoveLine."Pallet Type" := DynamicMoveLine."Pallet Type"::"License Plate";
      DynamicMoveLine."Pallet No." := PalletBinContent."Pallet No.";
      EXIT(TRUE);
    END;

    [External]
    PROCEDURE GetLicensePlateLine@1240020021(DynamicMoveLine@1240020000 : Record 14002872);
    VAR
      PalletBinContent@1240020001 : Record 14002963;
      DynamicMoveLine2@1240020002 : Record 14002872;
      Item@1240020003 : Record 27;
      ItemTrackingCode@1240020004 : Record 6502;
    BEGIN
      DynamicMoveLine.TESTFIELD("Pallet No.");

      PalletBinContent.SETRANGE("Pallet No.",DynamicMoveLine."Pallet No.");
      IF PalletBinContent.FINDSET THEN BEGIN
        DynamicMoveLine2.Name := DynamicMoveLine.Name;
        DynamicMoveLine2."Location Code" := DynamicMoveLine."Location Code";
        DynamicMoveLine2."Line No." := DynamicMoveLine."Line No.";
        REPEAT
          DynamicMoveLine2.INIT;
          DynamicMoveLine2."Line No." := DynamicMoveLine2."Line No." + 1;
          DynamicMoveLine2."From Zone Code" := DynamicMoveLine."From Zone Code";
          DynamicMoveLine2."From Bin Code" := DynamicMoveLine."From Bin Code";
          DynamicMoveLine2."To Bin Code" := DynamicMoveLine."To Bin Code";
          DynamicMoveLine2."To Zone Code" := DynamicMoveLine."To Zone Code";
          DynamicMoveLine2."Item No." := PalletBinContent."Item No.";
          DynamicMoveLine2."Variant Code" := PalletBinContent."Variant No.";

          DynamicMoveLine2.Quantity := PalletBinContent.Quantity;
            DynamicMoveLine2."Qty. (Base)" := PalletBinContent."Quantity (Base)";
            DynamicMoveLine2."From Unit of Measure Code" := PalletBinContent."Unit of Measure";
            DynamicMoveLine2."Qty. per From Unit of Measure" :=
              PalletBinContent."Qty per UOM";
            DynamicMoveLine2."Unit of Measure Code" := PalletBinContent."Unit of Measure";
            DynamicMoveLine2."Qty. per Unit of Measure" := PalletBinContent."Qty per UOM";

            DynamicMoveLine2.Description := PalletBinContent.Description;
            DynamicMoveLine2."Source Type" := PalletBinContent."Source Type";
            IF DynamicMoveLine2."Source Type" = DATABASE::"Transfer Line" THEN
              DynamicMoveLine2."Source Subtype" := 1
            ELSE
              DynamicMoveLine2."Source Subtype" := PalletBinContent."Source Sub Type";
            DynamicMoveLine2."Source ID" := PalletBinContent."Source ID";
            IF (PalletBinContent."Serial No." <> '') OR (PalletBinContent."Lot No." <> '')
            THEN BEGIN
              IF Item."No." <> PalletBinContent."Item No." THEN
                Item.GET(PalletBinContent."Item No.");

              IF Item."Item Tracking Code" <> '' THEN BEGIN
                IF ItemTrackingCode.Code <> Item."Item Tracking Code" THEN
                  ItemTrackingCode.GET(Item."Item Tracking Code");
                IF ItemTrackingCode."SN Warehouse Tracking" THEN
                  DynamicMoveLine2."Serial No." := PalletBinContent."Serial No.";
                IF ItemTrackingCode."Lot Warehouse Tracking" THEN BEGIN
                  DynamicMoveLine2."Lot No." := PalletBinContent."Lot No.";
                  DynamicMoveLine2."Expiration Date" := PalletBinContent."Expiry Date";
                END;
              END;
            END;
            DynamicMoveLine2."Expiration Date" := PalletBinContent."Expiry Date";
            DynamicMoveLine2."Warranty Date" := PalletBinContent."Warranty Date";

            DynamicMoveLine2."First Scan Date" := DynamicMoveLine."First Scan Date";
            DynamicMoveLine2."First Scan Time" := DynamicMoveLine."First Scan Time";
            DynamicMoveLine2."Last Scan Date" := DynamicMoveLine."Last Scan Date";
            DynamicMoveLine2."Last Scan Time" := DynamicMoveLine."Last Scan Time";
            DynamicMoveLine2."Warehouse Employee Code" :=
              DynamicMoveLine."Warehouse Employee Code";
            DynamicMoveLine2.INSERT;

        UNTIL PalletBinContent.NEXT = 0;
      END;
    END;

    [External]
    PROCEDURE AdjustStorageIDQty@1240020024(BoxHandlingLine@1240020000 : Record 14002970;AdjustQty@1240020001 : Decimal;WarehouseEmployee@1240020003 : Code[50];VAR Remark@1240020004 : Text[250]);
    VAR
      PalletBinContent@1240020002 : Record 14002963;
      PalletBinContent2@1240020005 : Record 14002963;
    BEGIN
      IF PalletContainsItems(BoxHandlingLine."Pallet No.") THEN BEGIN
        PalletBinContent.SETRANGE("Pallet No.",BoxHandlingLine."Pallet No.");
        IF BoxHandlingLine."Box No." <> '' THEN
          PalletBinContent.SETRANGE("Box No.",BoxHandlingLine."Box No.");
        IF BoxHandlingLine."Item No." <>'' THEN
          PalletBinContent.SETRANGE("Item No.",BoxHandlingLine."Item No.");
        IF BoxHandlingLine."Variant Code" <> '' THEN
          PalletBinContent.SETRANGE("Variant No.",BoxHandlingLine."Variant Code")
        ELSE
          PalletBinContent.SETFILTER("Variant No.",'=%1','');
        IF BoxHandlingLine."Unit of Measure Code" <> '' THEN
          PalletBinContent.SETRANGE("Unit of Measure",BoxHandlingLine."Unit of Measure Code");
        IF BoxHandlingLine."Lot No." <> '' THEN
          PalletBinContent.SETRANGE("Lot No.",BoxHandlingLine."Lot No.");
        IF BoxHandlingLine."Serial No." <> '' THEN
          PalletBinContent.SETRANGE("Serial No.",BoxHandlingLine."Serial No.");
      END ELSE BEGIN
        PalletBinContent.SETRANGE("Pallet No.",BoxHandlingLine."Pallet No.");
        PalletBinContent.SETFILTER("Item No.",'<>%1','');
      END;

      IF NOT PalletBinContent.FINDFIRST THEN BEGIN
        PalletBinContent.INIT;
        PalletBinContent.VALIDATE(Bin,BoxHandlingLine."Bin Code");
        PalletBinContent.VALIDATE(Location,BoxHandlingLine.Location);
        PalletBinContent.VALIDATE("Pallet No.",BoxHandlingLine."Pallet No.");
        PalletBinContent.VALIDATE("Box No.",BoxHandlingLine."Box No.");
        PalletBinContent.VALIDATE("Item No.",BoxHandlingLine."Item No.");
        PalletBinContent.VALIDATE("Variant No.",BoxHandlingLine."Variant Code");
        PalletBinContent.VALIDATE("Unit of Measure",BoxHandlingLine."Unit of Measure Code");
        PalletBinContent.VALIDATE("Lot No.",BoxHandlingLine."Lot No.");
        PalletBinContent.VALIDATE("Expiry Date",BoxHandlingLine."Expiry Date");
        PalletBinContent.VALIDATE("Serial No.",BoxHandlingLine."Serial No.");
        PalletBinContent.VALIDATE("Qty per UOM",BoxHandlingLine."Qty. per UOM");
        PalletBinContent.INSERT;

        PalletBinContent2.SETRANGE("Pallet No.",BoxHandlingLine."Pallet No.");
        PalletBinContent2.SETFILTER("Item No.",'=%1','');
        PalletBinContent2.DELETEALL;
      END;



      CreateWhseItemJournal(PalletBinContent,WarehouseEmployee,
        AdjustQty-PalletBinContent.Quantity);
    END;

    [External]
    PROCEDURE CreateWhseItemJournal@1240020013(FromPalletBinContent@1240020003 : Record 14002963;WarehouseEmployee@1240020005 : Code[50];AdjustQty@1240020004 : Decimal);
    VAR
      PalletBinContent@1240020009 : Record 14002963;
      WhseJournalLine@1000 : Record 7311;
      RFSetup@1240020002 : Record 14002801;
      Location@1240020006 : Record 14;
      Bin@1240020007 : Record 7354;
      Bin2@1240020008 : Record 7354;
      BinContent@1240020010 : Record 7302;
      WhseEntry@1240020012 : Record 7312;
      BinContentQty@1240020011 : Decimal;
    BEGIN

      RFSetup.GetRFSetup;
      Location.GET(FromPalletBinContent.Location);
      RFSetup.TESTFIELD("Whse. Phys. Inv. Jnl. Templ.");
      RFSetup.TESTFIELD("Whse. Phys. Inv. Jnl. Name");

      WhseJournalLine.RESET;
      WhseJournalLine.SETRANGE("Journal Template Name",RFSetup."Whse. Phys. Inv. Jnl. Templ.");
      WhseJournalLine.SETRANGE("Journal Batch Name",RFSetup."Whse. Phys. Inv. Jnl. Name");
      WhseJournalLine.DELETEALL;
      WhseJournalLine.RESET;

      PalletBinContent.RESET;
      PalletBinContent.SETRANGE("Pallet No.",FromPalletBinContent."Pallet No.");
      IF FromPalletBinContent."Box No." <> '' THEN
        PalletBinContent.SETRANGE("Box No.",FromPalletBinContent."Box No.");
      PalletBinContent.SETRANGE("Item No.",FromPalletBinContent."Item No.");
      IF FromPalletBinContent."Variant No." <> '' THEN
        PalletBinContent.SETRANGE("Variant No.",FromPalletBinContent."Variant No.")
      ELSE
        PalletBinContent.SETFILTER("Variant No.",'=%1','');
      IF FromPalletBinContent."Unit of Measure" <> '' THEN
        PalletBinContent.SETRANGE("Unit of Measure",FromPalletBinContent."Unit of Measure");
      IF FromPalletBinContent."Lot No." <> '' THEN
        PalletBinContent.SETRANGE("Lot No.",FromPalletBinContent."Lot No.");
      IF FromPalletBinContent."Serial No." <> '' THEN
        PalletBinContent.SETRANGE("Serial No.",FromPalletBinContent."Serial No.");

      IF PalletBinContent.FIND('-') THEN BEGIN
        REPEAT
          WhseJournalLine."Journal Template Name" := RFSetup."Whse. Phys. Inv. Jnl. Templ.";
          WhseJournalLine."Journal Batch Name" := RFSetup."Whse. Phys. Inv. Jnl. Name";
          WhseJournalLine."Line No." := WhseJournalLine."Line No." + 10000;
          WhseJournalLine.INIT;
          WhseJournalLine."Phys. Inventory" := TRUE;
          WhseJournalLine.VALIDATE("Registering Date",WORKDATE);
          WhseJournalLine.VALIDATE("Location Code",FromPalletBinContent.Location);
          WhseEntry.SETCURRENTKEY("Item No.","Bin Code","Location Code","Variant Code",
                                  "Unit of Measure Code","Lot No.","Serial No.","Entry Type");
          WhseEntry.SETRANGE("Location Code",PalletBinContent.Location);
          WhseEntry.SETRANGE("Bin Code",PalletBinContent.Bin);
          WhseEntry.SETRANGE("Item No.",PalletBinContent."Item No.");
          IF PalletBinContent."Variant No." <> '' THEN
            WhseEntry.SETRANGE("Variant Code",PalletBinContent."Variant No.")
          ELSE
            WhseEntry.SETFILTER("Variant Code",'=%1','');
          IF PalletBinContent."Unit of Measure" <> '' THEN
            WhseEntry.SETRANGE("Unit of Measure Code",PalletBinContent."Unit of Measure");
          IF PalletBinContent."Lot No." <> '' THEN
            WhseEntry.SETRANGE("Lot No.",PalletBinContent."Lot No.");
          WhseEntry.CALCSUMS(Quantity);
          BinContentQty := WhseEntry.Quantity;

          WhseJournalLine."Qty. (Calculated)" := BinContentQty;
          WhseJournalLine."Qty. (Phys. Inventory)" :=
            WhseJournalLine."Qty. (Calculated)" + AdjustQty;

          WhseJournalLine."Bin Code" := FromPalletBinContent.Bin;
          Bin.GET(FromPalletBinContent.Location,FromPalletBinContent.Bin);
          WhseJournalLine."Zone Code" := Bin."Zone Code";

          Bin.GET(FromPalletBinContent.Location,FromPalletBinContent.Bin);
          Bin2.GET(PalletBinContent.Location,PalletBinContent.Bin);
          IF AdjustQty < 0 THEN BEGIN
            WhseJournalLine.VALIDATE("Entry Type",WhseJournalLine."Entry Type"::"Negative Adjmt.");
            WhseJournalLine."From Bin Code" := FromPalletBinContent.Bin;
            WhseJournalLine."From Zone Code" := Bin."Zone Code";
            WhseJournalLine."From Bin Type Code" := Bin."Bin Type Code";
            WhseJournalLine."To Bin Code" := Location."Adjustment Bin Code";
            WhseJournalLine."To Zone Code" := Bin2."Zone Code";
          END ELSE BEGIN
            WhseJournalLine.VALIDATE("Entry Type",WhseJournalLine."Entry Type"::"Positive Adjmt.");
            WhseJournalLine."From Zone Code" := Bin."Zone Code";
            WhseJournalLine."From Bin Code" := Location."Adjustment Bin Code";
            WhseJournalLine."From Bin Type Code" := Bin."Bin Type Code";
            WhseJournalLine."To Bin Code" := FromPalletBinContent.Bin;
            WhseJournalLine."To Zone Code" := Bin2."Zone Code";
          END;

          IF FromPalletBinContent."Variant No." <> '' THEN
            WhseJournalLine."Variant Code" := FromPalletBinContent."Variant No.";
          WhseJournalLine."Item No." := FromPalletBinContent."Item No.";
          IF FromPalletBinContent."Unit of Measure" <> '' THEN
            WhseJournalLine."Unit of Measure Code" := FromPalletBinContent."Unit of Measure";

          WhseJournalLine."Qty. per Unit of Measure" := FromPalletBinContent."Qty per UOM";
          WhseJournalLine."Qty. (Calculated)" := BinContentQty;
          WhseJournalLine.Quantity := AdjustQty;
          WhseJournalLine."Qty. (Base)" := WhseJournalLine.Quantity *
            WhseJournalLine."Qty. per Unit of Measure";
          WhseJournalLine."Qty. (Absolute)" := ABS(AdjustQty);
          WhseJournalLine."Qty. (Absolute, Base)" := ABS(WhseJournalLine."Qty. (Base)");
          WhseJournalLine."Source Code" := 'WHPHYSINVT';
          WhseJournalLine."Whse. Document Type" :=
            WhseJournalLine."Whse. Document Type"::"Whse. Phys. Inventory";
          WhseJournalLine."Lot No." := FromPalletBinContent."Lot No.";
          WhseJournalLine."User ID" := WarehouseEmployee;
          WhseJournalLine.INSERT;
        UNTIL PalletBinContent.NEXT = 0;

        WhseJournalLine.RESET;
        WhseJournalLine.SETRANGE("Journal Template Name",RFSetup."Whse. Phys. Inv. Jnl. Templ.");
        WhseJournalLine.SETRANGE("Journal Batch Name", RFSetup."Whse. Phys. Inv. Jnl. Name");

        CODEUNIT.RUN(CODEUNIT::"Whse. Jnl.-Register Batch",WhseJournalLine);
      END;
    END;

    [External]
    PROCEDURE CreateMovement@101(Pallet@1240020000 : Code[20];Box@1240020011 : Code[20];ItemNo@1240020007 : Code[20];Variant@1240020008 : Code[20];UOMCode@1240020014 : Code[10];Lot@1240020009 : Code[20];SerialNo@1240020010 : Code[20];ToPallet@1240020015 : Code[10];ToBin@1240020005 : Code[20];Quantity@1240020012 : Decimal;WarehouseEmployeeCode@1240020006 : Code[50];VAR ErrorMessage@1240020003 : Text[250]);
    VAR
      RFSetup@1240020001 : Record 14002801;
      PalletBinContent@1240020002 : Record 14002963;
      WhseWorksheetLine@1240020004 : Record 7326;
      WhseWorksheetLine2@1000 : Record 7326;
      WhseItemTrackingLine@1240030000 : Record 6550;
      WarehouseActivityHeader@1240030002 : Record 5766;
      WarehouseActivityLine@1240030003 : Record 5767;
      CreateMovFromWhseSource@1240030001 : Report 7305;
      WhseActivityRegister@1240030005 : Codeunit 7307;
      ActivityNo@1240020013 : Code[20];
    BEGIN
      RFSetup.GetRFSetup;
      PalletBinContent.SETRANGE("Pallet No.",Pallet);
      IF NOT PalletBinContent.FINDFIRST THEN BEGIN
        PalletBinContent.RESET;
        PalletBinContent.SETRANGE("Box No.",Pallet);
        IF NOT PalletBinContent.FINDFIRST THEN
          ErrorMessage := Text016;
          EXIT;
      END;

      Pallet := PalletBinContent."Pallet No.";
      IF Box <> '' THEN
        Box := PalletBinContent."Box No.";

      RFSetup.TESTFIELD("Movement Worksheet Template");
      RFSetup.TESTFIELD("Movement Worksheet Name");
      WhseWorksheetLine2.RESET;
      WhseWorksheetLine2.SETRANGE(
        "Worksheet Template Name",RFSetup."Movement Worksheet Template");
      WhseWorksheetLine2.SETRANGE(Name,RFSetup."Movement Worksheet Name");
      WhseWorksheetLine2.SETRANGE("Location Code",PalletBinContent.Location);
      WhseWorksheetLine2.DELETEALL(TRUE);
      WhseWorksheetLine2.RESET;

      PalletBinContent.RESET;
      PalletBinContent.SETRANGE("Pallet No.",Pallet);
      IF Box <> '' THEN
        PalletBinContent.SETRANGE("Box No.",Box);
      IF ItemNo <> '' THEN
        PalletBinContent.SETRANGE("Item No.",ItemNo);
      IF Variant <> '' THEN
        PalletBinContent.SETRANGE("Variant No.",Variant);
      IF UOMCode <> '' THEN
        PalletBinContent.SETRANGE("Unit of Measure",UOMCode);
      IF Lot <> '' THEN
        PalletBinContent.SETRANGE("Lot No.",Lot);
      IF SerialNo <> '' THEN
        PalletBinContent.SETRANGE("Serial No.",SerialNo);

      IF PalletBinContent.FINDFIRST THEN BEGIN
        REPEAT
          WhseWorksheetLine.RESET;
          WhseWorksheetLine.LOCKTABLE(TRUE);
          WhseWorksheetLine.SETRANGE(
            "Worksheet Template Name",RFSetup."Movement Worksheet Template");
          WhseWorksheetLine.SETRANGE(Name,RFSetup."Movement Worksheet Name");
          WhseWorksheetLine.SETRANGE("Location Code",PalletBinContent.Location);
          IF WhseWorksheetLine.FINDLAST THEN ;

          WhseWorksheetLine2.INIT;
          WhseWorksheetLine2."Worksheet Template Name" := RFSetup."Movement Worksheet Template";
          WhseWorksheetLine2.Name := RFSetup."Movement Worksheet Name";
          WhseWorksheetLine2."Location Code" := PalletBinContent.Location;
          WhseWorksheetLine2."Line No." := WhseWorksheetLine."Line No." + 10000;
          WhseWorksheetLine2."Source No." := PalletBinContent."Pallet No.";
          WhseWorksheetLine2.VALIDATE("Item No.",PalletBinContent."Item No.");
          IF PalletBinContent."Variant No." <> '' THEN
            WhseWorksheetLine2.VALIDATE("Variant Code",PalletBinContent."Variant No.");
          IF PalletBinContent."Unit of Measure" <> '' THEN
            WhseWorksheetLine2.VALIDATE(
              "Unit of Measure Code",PalletBinContent."Unit of Measure");
          WhseWorksheetLine2.VALIDATE("From Bin Code",PalletBinContent.Bin);
          WhseWorksheetLine2.VALIDATE("To Bin Code",ToBin);
          IF Quantity = 0 THEN
            WhseWorksheetLine2.VALIDATE(Quantity,PalletBinContent.Quantity)
          ELSE
            WhseWorksheetLine2.VALIDATE(Quantity,Quantity);
          WhseWorksheetLine2."First Scan Date" := PalletBinContent."Creation Date";
          WhseWorksheetLine2."First Scan Time" := PalletBinContent."Creation Time";
          WhseWorksheetLine2."Last Scan Date" := PalletBinContent."Last Handled Date";
          WhseWorksheetLine2."Last Scan Time" := PalletBinContent."Last Handled Time";
          WhseWorksheetLine2."Warehouse Employee Code" := WarehouseEmployeeCode;
          WhseWorksheetLine2."Whse. Document No." := PalletBinContent."Pallet No.";
          WhseWorksheetLine2."Pallet Code" := PalletBinContent."Pallet No.";
          WhseWorksheetLine2."Box Code" := PalletBinContent."Box No.";
          WhseWorksheetLine2."Pallet Action" := WhseWorksheetLine."Pallet Action"::Move;

          WhseWorksheetLine2.INSERT;

          IF (PalletBinContent."Lot No." <> '') OR (PalletBinContent."Serial No."<> '')
          THEN BEGIN
            WhseItemTrackingLine.LOCKTABLE(TRUE);
            IF NOT WhseItemTrackingLine.FINDLAST THEN
              ;

            WhseItemTrackingLine.INIT;
            WhseItemTrackingLine."Entry No." := WhseItemTrackingLine."Entry No." + 1;
            WhseItemTrackingLine."Location Code" := WhseWorksheetLine2."Location Code";
            WhseItemTrackingLine."Source Type" := DATABASE::"Whse. Worksheet Line";
            WhseItemTrackingLine."Source Subtype" := 0;
            WhseItemTrackingLine."Source ID" := WhseWorksheetLine2.Name;
            WhseItemTrackingLine."Source Batch Name" := WhseWorksheetLine2."Worksheet Template Name";
            WhseItemTrackingLine."Source Ref. No." := WhseWorksheetLine2."Line No.";

            WhseItemTrackingLine."Item No." := WhseWorksheetLine2."Item No.";
            WhseItemTrackingLine."Variant Code" := WhseWorksheetLine2."Variant Code";
            WhseItemTrackingLine."Qty. per Unit of Measure" := WhseWorksheetLine2."Qty. per Unit of Measure";
            WhseItemTrackingLine."Quantity (Base)" := WhseWorksheetLine2."Qty. (Base)";
            WhseItemTrackingLine."Qty. to Handle (Base)" := WhseWorksheetLine2."Qty. to Handle (Base)";
            WhseItemTrackingLine."Qty. to Handle" := WhseWorksheetLine2."Qty. to Handle";
            WhseItemTrackingLine."Serial No." := PalletBinContent."Serial No.";
            WhseItemTrackingLine."Lot No." := PalletBinContent."Lot No.";
            WhseItemTrackingLine."Warranty Date" := PalletBinContent."Warranty Date";
            WhseItemTrackingLine."Expiration Date" := PalletBinContent."Expiry Date";
            WhseItemTrackingLine.INSERT;
          END;

          IF NOT RFSetup."Register Dyn. Move as One Move" THEN
            CODEUNIT.RUN(CODEUNIT::"Post Temp Movement Jnl. Line",WhseWorksheetLine2);
        UNTIL PalletBinContent.NEXT = 0;

        IF RFSetup."Register Dyn. Move as One Move" THEN BEGIN
          WhseWorksheetLine2.RESET;
          WhseWorksheetLine2.SETRANGE(
            "Worksheet Template Name",RFSetup."Movement Worksheet Template");
          WhseWorksheetLine2.SETRANGE(Name,RFSetup."Movement Worksheet Name");
          WhseWorksheetLine2.SETRANGE("Location Code",PalletBinContent.Location);
          CLEAR(CreateMovFromWhseSource);
          CreateMovFromWhseSource.SetHideValidationDialog(TRUE);
          CreateMovFromWhseSource.SetWhseWkshLine(WhseWorksheetLine2);
          CreateMovFromWhseSource.USEREQUESTPAGE(FALSE);
          CreateMovFromWhseSource.RUNMODAL;

          WarehouseActivityHeader.RESET;
          WarehouseActivityHeader.SETRANGE(Type,WarehouseActivityHeader.Type::Movement);
          WarehouseActivityHeader.FINDLAST;
          IF PalletBinContent."Pallet No." <> '' THEN BEGIN
            WarehouseActivityHeader."Receive No." := PalletBinContent."Pallet No.";
            WarehouseActivityHeader.MODIFY;
          END;

          WarehouseActivityLine.RESET;
          WarehouseActivityLine.SETRANGE("Activity Type",WarehouseActivityHeader.Type);
          WarehouseActivityLine.SETRANGE("No.",WarehouseActivityHeader."No.");
          IF WarehouseActivityLine.FINDFIRST THEN
            REPEAT
              IF WarehouseActivityLine."First Scan Date" = 0D THEN
                WarehouseActivityLine."First Scan Date" := WORKDATE;
              IF WarehouseActivityLine."First Scan Time" = 0T THEN
                WarehouseActivityLine."First Scan Time" := TIME;
              IF WarehouseActivityLine."Last Scan Date" = 0D THEN
                WarehouseActivityLine."Last Scan Date" := WORKDATE;
              IF WarehouseActivityLine."Last Scan Time" = 0T THEN
                WarehouseActivityLine."Last Scan Time" := TIME;
              IF WarehouseActivityLine."Warehouse Employee Code" = '' THEN
                WarehouseActivityLine."Warehouse Employee Code" := WhseWorksheetLine2."Warehouse Employee Code";
              IF WarehouseActivityLine."Box Code" = '' THEN
                WarehouseActivityLine."Box Code" := WhseWorksheetLine2."Box Code";
              IF ToPallet = '' THEN BEGIN
                IF WarehouseActivityLine."Pallet Code" = '' THEN
                  WarehouseActivityLine."Pallet Code" := WhseWorksheetLine2."Pallet Code";
                IF WarehouseActivityLine."Pallet Action" = 0 THEN
                  WarehouseActivityLine."Pallet Action" := WhseWorksheetLine2."Pallet Action";
              END ELSE BEGIN
                IF WarehouseActivityLine."Action Type" = WarehouseActivityLine."Action Type"::Take THEN BEGIN
                  IF WarehouseActivityLine."Pallet Code" = '' THEN
                    WarehouseActivityLine."Pallet Code" := WhseWorksheetLine2."Pallet Code";
                  IF WarehouseActivityLine."Pallet Action" = 0 THEN
                    WarehouseActivityLine."Pallet Action" := WarehouseActivityLine."Pallet Action"::Move;
                END ELSE BEGIN //Place
                  IF WarehouseActivityLine."Pallet Code" = '' THEN
                    WarehouseActivityLine."Pallet Code" := ToPallet;
                  IF WarehouseActivityLine."Pallet Action" = 0 THEN
                    WarehouseActivityLine."Pallet Action" := WhseWorksheetLine2."Pallet Action"::Move;
                END
              END;
              WarehouseActivityLine.MODIFY;
            UNTIL WarehouseActivityLine.NEXT = 0;

          WarehouseActivityLine.RESET;
          WarehouseActivityLine.SETRANGE("Activity Type",WarehouseActivityHeader.Type);
          WarehouseActivityLine.SETRANGE("No.",WarehouseActivityHeader."No.");
          WarehouseActivityLine.FIND('-');
          WhseActivityRegister.ShowHideDialog(TRUE);
          ActivityNo := WarehouseActivityHeader."No.";
          COMMIT;
          IF NOT WhseActivityRegister.RUN(WarehouseActivityLine) THEN BEGIN
            ErrorMessage := Text002;
            WarehouseActivityHeader.RESET;
            WarehouseActivityHeader.SETRANGE(Type,WarehouseActivityHeader.Type::Movement);
            WarehouseActivityHeader.SETRANGE("No.",ActivityNo);
            IF WarehouseActivityHeader.FINDFIRST THEN
              WarehouseActivityHeader.DELETE(TRUE);
          END;
        END;
      END;
    END;

    [External]
    PROCEDURE UpdatePhysInvLine@1240020025(PalletJnlLine@1240020000 : Record 14002966);
    VAR
      PalletJournalLine@1240020001 : Record 14002966;
      PalletJournalLine2@1240020011 : Record 14002966;
      PalletBinContent@1240020002 : Record 14002963;
      BoxhandlingLine@1240020005 : Record 14002970;
      RFLocationSetup@1240020009 : Record 14099031;
      ItemIdent@1240020012 : Record 7704;
      Remark@1240020003 : Text[250];
      AdjustedQty@1240020006 : Decimal;
      PhysInvQty@1240020007 : Decimal;
      CalcInvQty@1240020008 : Decimal;
      Counter@1240020010 : Integer;
    BEGIN
      PalletJournalLine.SETRANGE("Journal Template Name",PalletJnlLine."Journal Template Name");
      PalletJournalLine.SETRANGE("Journal Batch Name",PalletJnlLine."Journal Batch Name");

      IF PalletJournalLine.ISEMPTY THEN
        EXIT;

      PalletJournalLine2 := PalletJournalLine;
      IF PalletJournalLine.FINDFIRST THEN BEGIN
        REPEAT
          PalletBinContent.SETRANGE("Pallet No.",PalletJournalLine."Pallet No.");
          IF PalletBinContent.FINDFIRST THEN
            IF PalletJournalLine."Bin Code" <> PalletBinContent.Bin THEN
              PalletJournalLine."Bin Code" := PalletBinContent.Bin;
          IF PalletJournalLine."Added from RF" THEN BEGIN  //added (only items)
            ItemIdent."Item No." := PalletJournalLine."Item No.";
            ItemIdent."Variant Code" := PalletJournalLine."Variant Code";
            ItemIdent."Unit of Measure Code" := PalletJournalLine."Unit of Measure Code";
            AdjustedQty := PalletJournalLine."Qty. (Phys. Inventory)" + PalletJournalLine."Qty. (Calculated)" -
              GetItemQtyOfStorageID(PalletJournalLine."Pallet No.",
                PalletJournalLine."Box No.",ItemIdent,PalletJournalLine."Lot No.",PalletJournalLine."Serial No.");
            UpdatePhysInv(PalletJournalLine,AdjustedQty,TRUE,PalletJournalLine."Warehouse Employee Code",Remark);

          END ELSE BEGIN
            calcPalletJnlQty(PalletJournalLine,PhysInvQty,CalcInvQty,Counter);
            IF (PhysInvQty = 0) OR (CalcInvQty = 0)
            THEN BEGIN
              IF PhysInvQty = 0 THEN BEGIN
                // pallet calc qty = 0 => found     - move
                RFLocationSetup.GET(PalletJournalLine."Location Code");
                RFLocationSetup.TESTFIELD("LP Pallet Adjustment Bin");
                MovePallet(PalletJournalLine."Pallet No.",RFLocationSetup."LP Pallet Adjustment Bin",
                  PalletJournalLine."Warehouse Employee Code",Remark);
              END ELSE BEGIN
                // pallet phys inv = 0 => not found - movement
                MovePallet(PalletJournalLine."Pallet No.",PalletJournalLine."Bin Code",
                  PalletJournalLine."Warehouse Employee Code",Remark);
              END;
              PalletJournalLine.NEXT(Counter-1);
            END ELSE BEGIN
              PalletBinContent.SETRANGE(Bin,PalletJournalLine."Bin Code");
              PalletBinContent.SETRANGE(Location,PalletJournalLine."Location Code");
              PalletBinContent.SETRANGE("Pallet No.",PalletJournalLine."Pallet No.");
              IF PalletJournalLine."Box No." <> '' THEN
                PalletBinContent.SETRANGE("Box No.",PalletJournalLine."Box No.");
              PalletBinContent.SETRANGE("Item No.",PalletJournalLine."Item No.");
              IF PalletJournalLine."Variant Code" <> '' THEN
                PalletBinContent.SETRANGE("Variant No.",PalletJournalLine."Variant Code")
              ELSE
                PalletBinContent.SETFILTER("Variant No.",'=%1','');
              IF PalletJournalLine."Unit of Measure Code" <> '' THEN
                PalletBinContent.SETRANGE("Unit of Measure",PalletJournalLine."Unit of Measure Code");
              IF PalletJournalLine."Lot No." <> '' THEN
                PalletBinContent.SETRANGE("Lot No.",PalletJournalLine."Lot No.");
              IF PalletJournalLine."Serial No." <> '' THEN
                PalletBinContent.SETRANGE("Serial No.",PalletJournalLine."Serial No.");
              IF NOT PalletBinContent.FINDFIRST THEN BEGIN
                Remark := STRSUBSTNO(Text004,PalletBinContent.FIELDCAPTION("Pallet No."));
                EXIT;
              END;
            END;
            AdjustedQty := PalletJournalLine."Qty. (Phys. Inventory)" -
              (PalletBinContent.Quantity - PalletJournalLine."Qty. (Calculated)");
            ItemIdent."Item No." := PalletBinContent."Item No.";
            ItemIdent."Variant Code" := PalletBinContent."Variant No.";
            ItemIdent."Unit of Measure Code" := PalletBinContent."Unit of Measure";
            CreateTempBoxHandlingLine(BoxhandlingLine,PalletBinContent,
              PalletJournalLine."Warehouse Employee Code");
            AdjustStorageIDQty(BoxhandlingLine,AdjustedQty,
              PalletJournalLine."Warehouse Employee Code",Remark);
            AdjustQuantity(PalletBinContent."Pallet No.",PalletBinContent."Box No.",
              ItemIdent,PalletBinContent."Lot No.",PalletBinContent."Serial No.",AdjustedQty,
              PalletJournalLine."Warehouse Employee Code",Remark);
          END;
        UNTIL PalletJournalLine.NEXT = 0;
      END;

      PalletJournalLine2.DELETEALL;
    END;

    [External]
    PROCEDURE CreateTempBoxHandlingLine@1240020026(VAR BoxHandlingLine@1240020000 : Record 14002970;palletBinContent@1240020001 : Record 14002963;WarehouseEmployeeCode@1240020002 : Code[50]);
    BEGIN
      BoxHandlingLine."Item No." := palletBinContent."Item No.";
      BoxHandlingLine."Variant Code" := palletBinContent."Variant No.";
      BoxHandlingLine."Unit of Measure Code" := palletBinContent."Unit of Measure";
      BoxHandlingLine.Location := palletBinContent.Location;
      BoxHandlingLine."Bin Code" :=palletBinContent.Bin;
      BoxHandlingLine."Pallet No." := palletBinContent."Pallet No.";
      BoxHandlingLine."Box No." := palletBinContent."Box No.";
      BoxHandlingLine."Lot No." := palletBinContent."Lot No.";
      BoxHandlingLine."Expiry Date" := palletBinContent."Expiry Date";
      BoxHandlingLine."Serial No." := palletBinContent."Serial No.";
      BoxHandlingLine."Quantity (Base)" := palletBinContent."Quantity (Base)";
      BoxHandlingLine.Quantity := palletBinContent.Quantity;
      BoxHandlingLine."Qty. per UOM" := palletBinContent."Qty per UOM";
      BoxHandlingLine."Warehouse Employee Code" := WarehouseEmployeeCode;
    END;

    [External]
    PROCEDURE calcPalletJnlQty@1240020027(PalletJnlLine@1240020000 : Record 14002966;VAR PhysInvQty@1240020001 : Decimal;VAR CalcInvQty@1240020002 : Decimal;VAR Counter@1240020003 : Integer);
    VAR
      PalletJournalLine@1240020004 : Record 14002966;
    BEGIN
      PalletJournalLine.SETCURRENTKEY("Bin Code","Pallet No.","Box No.",Counted);
      PalletJournalLine.SETRANGE("Journal Template Name",PalletJnlLine."Journal Template Name");
      PalletJournalLine.SETRANGE("Journal Batch Name",PalletJnlLine."Journal Batch Name");
      PalletJournalLine.SETRANGE("Pallet No.",PalletJnlLine."Pallet No.");
      Counter := PalletJournalLine.COUNT;
      PhysInvQty := PalletJournalLine."Qty. (Phys. Inventory)";
      CalcInvQty := PalletJournalLine."Qty. (Calculated)";
    END;

    [External]
    PROCEDURE UpdatePhysInv@1240020028(PalletJournalLine@1240020000 : Record 14002966;NewQty@1240020001 : Decimal;CountDetail@1240020002 : Boolean;WarehouseEmployeeCode@1240020003 : Code[50];VAR Remark@1240020004 : Text[250]);
    VAR
      PalletBinContent@1240020005 : Record 14002963;
      ItemIdent@1240020007 : Record 7704;
      BoxHandlingLine@1240020008 : Record 14002970;
      LicensePlateMgt@1240020006 : Codeunit 14002971;
    BEGIN
      IF CountDetail THEN BEGIN
        PalletBinContent.SETRANGE(Bin,PalletJournalLine."Bin Code");
        PalletBinContent.SETRANGE(Location,PalletJournalLine."Location Code");
        PalletBinContent.SETRANGE("Pallet No.",PalletJournalLine."Pallet No.");
        IF PalletJournalLine."Box No." <> '' THEN
          PalletBinContent.SETRANGE("Box No.",PalletJournalLine."Box No.");
        PalletBinContent.SETRANGE("Item No.",PalletJournalLine."Item No.");
        IF PalletJournalLine."Variant Code" <> '' THEN
          PalletBinContent.SETRANGE("Variant No.",PalletJournalLine."Variant Code");
        IF PalletJournalLine."Unit of Measure Code" <> '' THEN
          PalletBinContent.SETRANGE("Unit of Measure",PalletJournalLine."Unit of Measure Code");
        IF PalletJournalLine."Lot No." <> '' THEN
          PalletBinContent.SETRANGE("Lot No.",PalletJournalLine."Lot No.");
        IF PalletJournalLine."Serial No." <> '' THEN
          PalletBinContent.SETRANGE("Serial No.",PalletJournalLine."Serial No.");
        IF NOT PalletBinContent.FINDFIRST THEN BEGIN
          PalletBinContent.INIT;
          PalletBinContent.VALIDATE(Location,PalletJournalLine."Location Code");
          PalletBinContent.VALIDATE(Bin,PalletJournalLine."Bin Code");
          PalletBinContent.VALIDATE("Pallet No.",PalletJournalLine."Pallet No.");
          PalletBinContent.VALIDATE("Box No.",PalletJournalLine."Box No.");
          PalletBinContent.VALIDATE("Item No.",PalletJournalLine."Item No.");
          PalletBinContent.VALIDATE("Variant No.",PalletJournalLine."Variant Code");
          PalletBinContent.VALIDATE("Unit of Measure",PalletJournalLine."Unit of Measure Code");
          PalletBinContent.VALIDATE("Lot No.",PalletJournalLine."Lot No.");
          PalletBinContent.VALIDATE("Expiry Date",PalletJournalLine."Expiration Date");
          PalletBinContent.VALIDATE("Serial No.",PalletJournalLine."Serial No.");
          PalletBinContent.VALIDATE("Qty per UOM",PalletJournalLine."Qty. Per Unit of Measure");
          PalletBinContent.INSERT;
        END;

        ItemIdent."Item No." := PalletBinContent."Item No.";
        ItemIdent."Variant Code" := PalletBinContent."Variant No.";
        ItemIdent."Unit of Measure Code" := PalletBinContent."Unit of Measure";
        LicensePlateMgt.CreateTempBoxHandlingLine(
          BoxHandlingLine,PalletBinContent,WarehouseEmployeeCode);
        LicensePlateMgt.AdjustStorageIDQty(BoxHandlingLine,NewQty,WarehouseEmployeeCode,Remark);
        LicensePlateMgt.AdjustQuantity(PalletBinContent."Pallet No.",PalletBinContent."Box No.",
          ItemIdent,PalletBinContent."Lot No.",PalletBinContent."Serial No.",NewQty,
          WarehouseEmployeeCode,Remark);
      END;
    END;

    [External]
    PROCEDURE IsWhseLotTracked@1240020032(ItemNo@1240020000 : Code[20]) : Boolean;
    VAR
      Item@1240020001 : Record 27;
      ItemTrackingCode@1240020002 : Record 6502;
    BEGIN
      IF NOT Item.GET(ItemNo) THEN
        EXIT(FALSE);

      IF Item."Item Tracking Code" = '' THEN
        EXIT(FALSE);

      IF NOT ItemTrackingCode.GET(Item."Item Tracking Code") THEN
        EXIT(FALSE);

      IF ItemTrackingCode."Lot Warehouse Tracking" THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    [External]
    PROCEDURE IsLPWhseLotTracked@1240020033();
    BEGIN
      ERROR('');
    END;

    [External]
    PROCEDURE IsWhseSerialTracked@1240020034(ItemNo@1240020000 : Code[20]) : Boolean;
    VAR
      Item@1240020002 : Record 27;
      ItemTrackingCode@1240020001 : Record 6502;
    BEGIN
      IF NOT Item.GET(ItemNo) THEN
        EXIT(FALSE);

      IF Item."Item Tracking Code" = '' THEN
        EXIT(FALSE);

      IF NOT ItemTrackingCode.GET(Item."Item Tracking Code") THEN
        EXIT(FALSE);

      IF ItemTrackingCode."SN Warehouse Tracking" THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    [External]
    PROCEDURE IsLPWhseSerialTracked@1240020035();
    BEGIN
      ERROR('');
    END;

    [External]
    PROCEDURE GetPalletizedQty@1240020036(WarehouseJournalLine@1240020000 : Record 7311) : Decimal;
    VAR
      PalletBinContent@1240020001 : Record 14002963;
    BEGIN
      PalletBinContent.SETRANGE(Location,WarehouseJournalLine."Location Code");
      PalletBinContent.SETRANGE(Bin,WarehouseJournalLine."Bin Code");
      PalletBinContent.SETRANGE("Item No.",WarehouseJournalLine."Item No.");
      PalletBinContent.SETRANGE("Variant No.",WarehouseJournalLine."Variant Code");
      PalletBinContent.SETRANGE("Lot No.",WarehouseJournalLine."Lot No.");
      PalletBinContent.SETRANGE("Serial No.",WarehouseJournalLine."Serial No.");
      PalletBinContent.SETRANGE("Unit of Measure",WarehouseJournalLine."Unit of Measure Code");
      PalletBinContent.CALCSUMS(Quantity);
      EXIT(PalletBinContent.Quantity);
    END;

    [External]
    PROCEDURE PalletInShipBin@1240020037(PalletNo@1240020000 : Code[20]) : Boolean;
    VAR
      PalletBinContent@1240020001 : Record 14002963;
      Location@1240020002 : Record 14;
    BEGIN
      PalletBinContent.SETRANGE("Pallet No.",PalletNo);
      IF PalletBinContent.FINDFIRST THEN BEGIN
        Location.GET(PalletBinContent.Location);
        IF Location."Shipment Bin Code" = PalletBinContent.Bin THEN
          EXIT(TRUE);
      END;

      EXIT(FALSE)
    END;

    [External]
    PROCEDURE PalletIsPicked@1240020038(PalletNo@1240020000 : Code[20]) : Boolean;
    VAR
      ToteLine@1240020001 : Record 14002901;
      RegToteLine@1240020002 : Record 14002902;
    BEGIN
      IF NOT (ToteLine.ISEMPTY AND RegToteLine.ISEMPTY) THEN BEGIN
        ToteLine.SETRANGE("Tote No.",PalletNo);
        IF NOT ToteLine.ISEMPTY THEN
          EXIT(TRUE);
        RegToteLine.SETRANGE("Tote No.",PalletNo);
        IF NOT ToteLine.ISEMPTY THEN
          EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    [External]
    PROCEDURE CaptureTmpWhseActLine@1240020039(WhseActLineTmp@1240020000 : TEMPORARY Record 5767;WhseActLine@1240020001 : Record 5767);
    VAR
      WhseActLine2@1240020002 : Record 5767;
      Bin@1240020003 : Record 7354;
    BEGIN
      WhseActLine2.SETRANGE("Activity Type",WhseActLine."Activity Type");
      WhseActLine2.SETRANGE("No.",WhseActLine."No.");
      WhseActLine2.SETRANGE("Action Type",WhseActLine."Action Type"::Take);
      WhseActLine2.SETFILTER("Qty. to Handle",'>%1',0);
      IF WhseActLine2.FINDSET THEN
        REPEAT
          Bin.GET(WhseActLine2."Location Code",WhseActLine2."Bin Code");
          IF Bin."Pallet Bin" AND
             (WhseActLine2."Pick License Plate No." = '') AND
             (WhseActLine2."Qty. Outstanding" > 0)
          THEN
            ERROR(STRSUBSTNO(Text020,WhseActLine2."Line No.",WhseActLine2."No."));
          IF Bin."Pallet Bin" THEN BEGIN
            WhseActLineTmp.INIT;
            WhseActLineTmp := WhseActLine2;
            WhseActLineTmp.INSERT;
          END;
        UNTIL WhseActLine2.NEXT = 0;
    END;

    [External]
    PROCEDURE UpdatePalletBinContents@1240020042(VAR WhseActLineTmp@1240020000 : TEMPORARY Record 5767);
    VAR
      WhseActLineTmp2@1240020001 : TEMPORARY Record 5767;
      BinContent@1240020002 : Record 7302;
      PalletBinContent@1240020003 : Record 14002963;
      PalletBinContent2@1240020004 : Record 14002963;
      PalletBinContent3@1240020005 : Record 14002963;
      CorrectionQty@1240020006 : Decimal;
    BEGIN
      IF WhseActLineTmp.FINDSET THEN
        REPEAT
          BinContent.SETRANGE("Location Code",WhseActLineTmp."Location Code");
          BinContent.SETRANGE("Bin Code",WhseActLineTmp."Bin Code");
          BinContent.SETRANGE("Item No.",WhseActLineTmp."Item No.");
          BinContent.SETRANGE("Variant Code",WhseActLineTmp."Variant Code");
          BinContent.SETRANGE("Unit of Measure Code",WhseActLineTmp."Unit of Measure Code");
          IF BinContent.FINDFIRST THEN BEGIN     //Bin Content still exists
            PalletBinContent.SETRANGE(Location,BinContent."Location Code");
            PalletBinContent.SETRANGE(Bin,BinContent."Bin Code");
            PalletBinContent.SETRANGE("Pallet No.",WhseActLineTmp."Pick License Plate No.");
            PalletBinContent.SETRANGE("Item No.",BinContent."Item No.");
            PalletBinContent.SETRANGE("Variant No.",BinContent."Variant Code");
            PalletBinContent.SETRANGE("Unit of Measure",BinContent."Unit of Measure Code");
            IF PalletBinContent.FINDFIRST THEN BEGIN
              BinContent.CALCFIELDS(Quantity);
              PalletBinContent2.RESET;
              PalletBinContent2.SETRANGE(Location,PalletBinContent.Location);
              PalletBinContent2.SETRANGE(Bin,PalletBinContent.Bin);
              PalletBinContent2.SETFILTER("Pallet No.",'<>%1',PalletBinContent."Pallet No.");
              PalletBinContent2.SETRANGE("Item No.",PalletBinContent."Item No.");
              PalletBinContent2.SETRANGE("Variant No.",PalletBinContent."Variant No.");
              PalletBinContent2.SETRANGE("Unit of Measure",PalletBinContent."Unit of Measure");
              PalletBinContent2.CALCSUMS(Quantity);

              CorrectionQty := (BinContent.Quantity - PalletBinContent2.Quantity) - PalletBinContent.Quantity;
              IF CorrectionQty <> 0 THEN BEGIN
                UpdatePalletBinContent(PalletBinContent.Location,
                  PalletBinContent.Bin,PalletBinContent."Pallet No.",
                  '',PalletBinContent."Item No.",PalletBinContent."Variant No.",
                  PalletBinContent."Unit of Measure",PalletBinContent."Lot No.",
                  PalletBinContent."Serial No.",PalletBinContent."Expiry Date",
                  CorrectionQty,9,WhseActLineTmp."Warehouse Employee Code");
              END;
            END ELSE BEGIN //PBC doesnt exist
              PalletBinContent2.RESET;
              PalletBinContent2.INIT;
              PalletBinContent2.VALIDATE(Location,WhseActLineTmp."Location Code");
              PalletBinContent2.VALIDATE(Bin,WhseActLineTmp."Bin Code");
              PalletBinContent2.VALIDATE("Pallet No.",WhseActLineTmp."Pick License Plate No.");
              PalletBinContent2.VALIDATE("Item No.",WhseActLineTmp."Item No.");
              PalletBinContent2.VALIDATE("Variant No.",WhseActLineTmp."Variant Code");
              PalletBinContent2.VALIDATE("Lot No.",WhseActLineTmp."Lot No.");
              PalletBinContent2.VALIDATE("Serial No.",WhseActLineTmp."Serial No.");
              PalletBinContent2.VALIDATE("Unit of Measure",WhseActLineTmp."Unit of Measure Code");
              PalletBinContent2.VALIDATE(Description,WhseActLineTmp.Description);
              PalletBinContent2.VALIDATE("Qty per UOM",BinContent."Qty. per Unit of Measure");
              PalletBinContent2.VALIDATE(Quantity,BinContent.Quantity);
              PalletBinContent2.VALIDATE("Expiry Date",WhseActLineTmp."Expiration Date");
              PalletBinContent2.VALIDATE("Warranty Date",WhseActLineTmp."Warranty Date");
              PalletBinContent2.VALIDATE("Last Handled Date",WORKDATE);
              PalletBinContent2.VALIDATE("Last Handled Time",TIME);
              PalletBinContent2.VALIDATE("Creation Date",WORKDATE);
              PalletBinContent2.VALIDATE("Creation Time",TIME);
              PalletBinContent2.INSERT;
            END;
          END ELSE BEGIN
            PalletBinContent.RESET;
            PalletBinContent.SETRANGE(Location,WhseActLineTmp."Location Code");
            PalletBinContent.SETRANGE(Bin,WhseActLineTmp."Bin Code");
            PalletBinContent.SETRANGE("Pallet No.",WhseActLineTmp."Pick License Plate No.");
            PalletBinContent.SETRANGE("Item No.",WhseActLineTmp."Item No.");
            PalletBinContent.SETRANGE("Variant No.",WhseActLineTmp."Variant Code");
            PalletBinContent.SETRANGE("Unit of Measure",WhseActLineTmp."Unit of Measure Code");

            IF PalletBinContent.FINDFIRST THEN BEGIN
              UpdatePalletBinContent(PalletBinContent.Location,
                PalletBinContent.Bin,PalletBinContent."Pallet No.",
                '',PalletBinContent."Item No.",PalletBinContent."Variant No.",
                PalletBinContent."Unit of Measure",PalletBinContent."Lot No.",
                PalletBinContent."Serial No.",PalletBinContent."Expiry Date",
                -PalletBinContent.Quantity,9,WhseActLineTmp."Warehouse Employee Code");
            END;
          END;
        UNTIL WhseActLineTmp.NEXT = 0;

      PalletBinContent.RESET;
      BinContent.RESET;
      IF WhseActLineTmp.FINDSET THEN
        REPEAT
          PalletBinContent.SETRANGE(Location,WhseActLineTmp."Location Code");
          PalletBinContent.SETRANGE(Bin,WhseActLineTmp."Bin Code");
          PalletBinContent.SETRANGE("Item No.",WhseActLineTmp."Item No.");
          PalletBinContent.SETRANGE("Variant No.",WhseActLineTmp."Variant Code");
          PalletBinContent.SETRANGE("Unit of Measure",WhseActLineTmp."Unit of Measure Code");
          IF PalletBinContent.FINDFIRST THEN
            REPEAT
              BinContent.SETRANGE("Location Code",PalletBinContent.Location);
              BinContent.SETRANGE("Bin Code",PalletBinContent.Bin);
              BinContent.SETRANGE("Item No.",PalletBinContent."Item No.");
              BinContent.SETRANGE("Variant Code",PalletBinContent."Variant No.");
              BinContent.SETRANGE("Unit of Measure Code",PalletBinContent."Unit of Measure");
              IF BinContent.FINDFIRST THEN BEGIN
                BinContent.CALCFIELDS(Quantity);
                PalletBinContent2.RESET;
                PalletBinContent2.SETRANGE(Location,PalletBinContent.Location);
                PalletBinContent2.SETRANGE(Bin,PalletBinContent.Bin);
                PalletBinContent2.SETFILTER("Pallet No.",'<>%1',PalletBinContent."Pallet No.");
                PalletBinContent2.SETRANGE("Item No.",PalletBinContent."Item No.");
                PalletBinContent2.SETRANGE("Variant No.",PalletBinContent."Variant No.");
                PalletBinContent2.SETRANGE("Unit of Measure",PalletBinContent."Unit of Measure");
                PalletBinContent2.CALCSUMS(Quantity);

                CorrectionQty := (BinContent.Quantity - PalletBinContent2.Quantity) - PalletBinContent.Quantity;
                IF CorrectionQty <> 0 THEN BEGIN
                  UpdatePalletBinContent(PalletBinContent.Location,
                    PalletBinContent.Bin,PalletBinContent."Pallet No.",
                    '',PalletBinContent."Item No.",PalletBinContent."Variant No.",
                    PalletBinContent."Unit of Measure",PalletBinContent."Lot No.",
                    PalletBinContent."Serial No.",PalletBinContent."Expiry Date",
                    CorrectionQty,9,WhseActLineTmp."Warehouse Employee Code");
                END;
              END ELSE BEGIN
                UpdatePalletBinContent(PalletBinContent.Location,
                  PalletBinContent.Bin,PalletBinContent."Pallet No.",
                  '',PalletBinContent."Item No.",PalletBinContent."Variant No.",
                  PalletBinContent."Unit of Measure",PalletBinContent."Lot No.",
                  PalletBinContent."Serial No.",PalletBinContent."Expiry Date",
                  -PalletBinContent.Quantity,9,WhseActLineTmp."Warehouse Employee Code");
              END;
            UNTIL PalletBinContent.NEXT = 0;
        UNTIL WhseActLineTmp.NEXT = 0;

      PalletBinContent3.RESET;
      PalletBinContent3.SETFILTER("Item No.",'=%1','');
      PalletBinContent3.DELETEALL;
    END;

    [External]
    PROCEDURE HandleLicensePlateInfo@1240020040(WhseEntry@1240020000 : Record 7312);
    VAR
      PalletBinContent@1240020001 : Record 14002963;
      Location@1240020002 : Record 14;
      PalletBinContent2@1240020003 : Record 14002963;
    BEGIN
      IF (WhseEntry."Pallet Code" = '') OR
         (WhseEntry."Pallet Action" = 0)
      THEN
        EXIT;

      CASE WhseEntry."Pallet Action" OF
        WhseEntry."Pallet Action"::Move:
          BEGIN
            IF WhseEntry.Quantity < 0 THEN BEGIN // Take
              ApplyFilters(PalletBinContent,WhseEntry);
              IF PalletBinContent.FINDFIRST THEN BEGIN
                InsertLicenseplateEntry(PalletBinContent,WhseEntry,0);
                IF PalletBinContent.Quantity + WhseEntry.Quantity <= 0 THEN BEGIN
                  PalletBinContent.DELETE
                END ELSE BEGIN
                  PalletBinContent.VALIDATE(Quantity,
                    PalletBinContent.Quantity + WhseEntry.Quantity);
                  PalletBinContent.VALIDATE("Quantity (Base)",
                    PalletBinContent."Quantity (Base)" + WhseEntry."Qty. (Base)");
                  PalletBinContent.MODIFY;
                END;
              END ELSE
                ERROR(Text016);
            END ELSE BEGIN                       // Place
              PalletBinContent2.RESET;
              PalletBinContent2.SETRANGE("Pallet No.",WhseEntry."Pallet Code");
              IF PalletBinContent2.FIND('-') THEN
                UpdatePalletBinContent(WhseEntry."Location Code",WhseEntry."Bin Code",
                  WhseEntry."Pallet Code",WhseEntry."Box Code",WhseEntry."Item No.",
                  WhseEntry."Variant Code",WhseEntry."Unit of Measure Code",
                  WhseEntry."Lot No.",WhseEntry."Serial No.",WhseEntry."Expiration Date",
                  WhseEntry.Quantity,1,WhseEntry."Warehouse Employee Code")
              ELSE BEGIN
                InsertPalletBinContent(WhseEntry,PalletBinContent);
                InsertLicenseplateEntry(PalletBinContent,WhseEntry,1);
              END;
            END;
          END;

        WhseEntry."Pallet Action"::Pick:
          BEGIN
            ApplyFilters(PalletBinContent,WhseEntry);
            IF PalletBinContent.FINDFIRST THEN BEGIN
              InsertLicenseplateEntry(PalletBinContent,WhseEntry,6);
              IF PalletBinContent.Quantity + WhseEntry.Quantity <= 0 THEN BEGIN
                PalletBinContent.DELETE
              END ELSE BEGIN
                PalletBinContent.VALIDATE(Quantity,
                  PalletBinContent.Quantity + WhseEntry.Quantity);
                PalletBinContent.VALIDATE("Quantity (Base)",
                  PalletBinContent."Quantity (Base)" + WhseEntry."Qty. (Base)");
                PalletBinContent.MODIFY;
              END;
            END ELSE
              ERROR(Text018);
          END;
        WhseEntry."Pallet Action"::"Put-Away":
          BEGIN
            // one line in the put-away document per PBC line
            IF WhseEntry.Quantity < 0 THEN BEGIN // Take
              ApplyFilters(PalletBinContent,WhseEntry);
              IF PalletBinContent.FINDFIRST THEN BEGIN
                InsertLicenseplateEntry(PalletBinContent,WhseEntry,0);

                IF PalletBinContent."Quantity (Base)" > ABS(WhseEntry."Qty. (Base)") THEN BEGIN
                  PalletBinContent.VALIDATE("Quantity (Base)",PalletBinContent."Quantity (Base)" + WhseEntry."Qty. (Base)");
                  PalletBinContent.VALIDATE(Quantity,PalletBinContent.Quantity + WhseEntry.Quantity);
                  PalletBinContent.MODIFY;
                END ELSE
                  IF NOT PalletBinContent.DELETE THEN ;

                IF PalletBinContent."Quantity (Base)" = 0 THEN
                  IF NOT PalletBinContent.DELETE THEN ;
              END;
            END ELSE BEGIN                       // Place
              InsertPalletBinContent(WhseEntry,PalletBinContent);
              InsertLicenseplateEntry(PalletBinContent,WhseEntry,1);
            END;
          END;
        WhseEntry."Pallet Action"::Adjust:
          BEGIN
            Location.GET(WhseEntry."Location Code");
            IF WhseEntry."Bin Code" <> Location."Adjustment Bin Code" THEN BEGIN
              IF WhseEntry.Quantity < 0 THEN BEGIN    //neg. adjust
                ApplyFilters(PalletBinContent,WhseEntry);
                IF PalletBinContent.FINDFIRST THEN BEGIN
                  InsertLicenseplateEntry(PalletBinContent,WhseEntry,4);
                  IF PalletBinContent.Quantity + WhseEntry.Quantity <= 0 THEN BEGIN
                    PalletBinContent.DELETE
                  END ELSE BEGIN
                    PalletBinContent.VALIDATE(Quantity,
                      PalletBinContent.Quantity + WhseEntry.Quantity);
                    PalletBinContent.VALIDATE("Quantity (Base)",
                      PalletBinContent."Quantity (Base)" + WhseEntry."Qty. (Base)");
                    PalletBinContent.MODIFY;
                  END;
                END ELSE
                  ERROR(Text018);
              END ELSE BEGIN                         // pos. adjust
                InsertPalletBinContent(WhseEntry,PalletBinContent);
                InsertLicenseplateEntry(PalletBinContent,WhseEntry,3);
              END;
            END;
          END;
        WhseEntry."Pallet Action"::Physical:
          BEGIN
            Location.GET(WhseEntry."Location Code");
            IF WhseEntry."Bin Code" <> Location."Adjustment Bin Code" THEN BEGIN
              IF WhseEntry.Quantity < 0 THEN BEGIN    //neg. adjust
                ApplyFilters(PalletBinContent,WhseEntry);
                IF PalletBinContent.FINDFIRST THEN BEGIN
                  InsertLicenseplateEntry(PalletBinContent,WhseEntry,4);
                  IF PalletBinContent.Quantity + WhseEntry.Quantity <= 0 THEN BEGIN
                    PalletBinContent.DELETE
                  END ELSE BEGIN
                    PalletBinContent.VALIDATE(Quantity,
                      PalletBinContent.Quantity + WhseEntry.Quantity);
                    PalletBinContent.VALIDATE("Quantity (Base)",
                      PalletBinContent."Quantity (Base)" + WhseEntry."Qty. (Base)");
                    PalletBinContent.MODIFY;
                  END;
                END ELSE
                  ERROR(Text018);
              END ELSE BEGIN                         // pos. adjust
                InsertPalletBinContent(WhseEntry,PalletBinContent);
                InsertLicenseplateEntry(PalletBinContent,WhseEntry,3);
              END;
            END;
          END;
        WhseEntry."Pallet Action"::Consumption:
          BEGIN
            IF WhseEntry.Quantity < 0 THEN BEGIN    //consumption
              ApplyFilters(PalletBinContent,WhseEntry);
              IF PalletBinContent.FINDFIRST THEN BEGIN
                InsertLicenseplateEntry(PalletBinContent,WhseEntry,2);
                IF PalletBinContent.Quantity + WhseEntry.Quantity <= 0 THEN BEGIN
                  PalletBinContent.DELETE
                END ELSE BEGIN
                  PalletBinContent.VALIDATE(Quantity,
                    PalletBinContent.Quantity + WhseEntry.Quantity);
                  PalletBinContent.VALIDATE("Quantity (Base)",
                    PalletBinContent."Quantity (Base)" + WhseEntry."Qty. (Base)");
                  PalletBinContent.MODIFY;
                END;
              END ELSE
                ERROR(Text018);
            END ELSE BEGIN                         // return to stock
              InsertPalletBinContent(WhseEntry,PalletBinContent);
              InsertLicenseplateEntry(PalletBinContent,WhseEntry,1);
            END;
          END;
        WhseEntry."Pallet Action"::Output:
          BEGIN
            IF WhseEntry.Quantity < 0 THEN BEGIN    //negative
              ApplyFilters(PalletBinContent,WhseEntry);
              IF PalletBinContent.FINDFIRST THEN BEGIN
                InsertLicenseplateEntry(PalletBinContent,WhseEntry,2);
                IF PalletBinContent.Quantity + WhseEntry.Quantity <= 0 THEN BEGIN
                  PalletBinContent.DELETE
                END ELSE BEGIN
                  PalletBinContent.VALIDATE(Quantity,
                    PalletBinContent.Quantity + WhseEntry.Quantity);
                  PalletBinContent.VALIDATE("Quantity (Base)",
                    PalletBinContent."Quantity (Base)" + WhseEntry."Qty. (Base)");
                  PalletBinContent.MODIFY;
                END;
              END ELSE
                ERROR(Text018);
            END ELSE BEGIN                         // return to stock
              InsertPalletBinContent(WhseEntry,PalletBinContent);
              InsertLicenseplateEntry(PalletBinContent,WhseEntry,1);
            END;
          END;
      END;
    END;

    [External]
    PROCEDURE ApplyFilters@1240020041(VAR PalletBinContent@1240020000 : Record 14002963;WhseEntry@1240020001 : Record 7312);
    BEGIN
      PalletBinContent.SETRANGE(Location,WhseEntry."Location Code");
      PalletBinContent.SETRANGE(Bin,WhseEntry."Bin Code");
      PalletBinContent.SETRANGE("Pallet No.",WhseEntry."Pallet Code");
      PalletBinContent.SETRANGE("Box No.",WhseEntry."Box Code");
      PalletBinContent.SETRANGE("Item No.",WhseEntry."Item No.");
      PalletBinContent.SETRANGE("Variant No.",WhseEntry."Variant Code");
      PalletBinContent.SETRANGE("Unit of Measure",WhseEntry."Unit of Measure Code");
      PalletBinContent.SETRANGE("Lot No.",WhseEntry."Lot No.");
      PalletBinContent.SETRANGE("Serial No.",WhseEntry."Serial No.");
    END;

    [External]
    PROCEDURE InsertLicenseplateEntry@1240020043(PalletBinContent@1240020000 : Record 14002963;WhseEntry@1240020001 : Record 7312;Action@1240020002 : 'Take,Place,Consumption,Pos. Adj.,Neg. Adj.,Receive,Shipment,New Pallet,Addition,,Output');
    VAR
      LicensePlateEntry@1240020003 : Record 14002964;
      LicensePlateEntry2@1240020004 : Record 14002964;
    BEGIN
      LicensePlateEntry2.LOCKTABLE(TRUE);
      IF LicensePlateEntry2.FINDLAST THEN ;
      LicensePlateEntry."No." := LicensePlateEntry2."No." + 1;
      LicensePlateEntry.Location := PalletBinContent.Location;
      LicensePlateEntry.Bin := PalletBinContent.Bin;
      LicensePlateEntry.Pallet := PalletBinContent."Pallet No.";
      LicensePlateEntry.Box := PalletBinContent."Box No.";
      LicensePlateEntry.Action := Action;
      LicensePlateEntry."Warehouse Employee Code" := WhseEntry."Warehouse Employee Code";
      LicensePlateEntry."Entry Date" := WORKDATE;
      LicensePlateEntry."Entry Time" := TIME;
      LicensePlateEntry.Item := WhseEntry."Item No.";
      LicensePlateEntry."Variant Code" := WhseEntry."Variant Code";
      LicensePlateEntry."Lot No." := WhseEntry."Lot No.";
      LicensePlateEntry."Serial No." := WhseEntry."Serial No.";
      LicensePlateEntry.Quantity := WhseEntry.Quantity;
      LicensePlateEntry."Qty per UOM" := WhseEntry."Qty. per Unit of Measure";
      LicensePlateEntry."Quantity (Base)" := WhseEntry."Qty. (Base)";
      LicensePlateEntry."Unit of Measure" := WhseEntry."Unit of Measure Code";
      LicensePlateEntry."Source Type" := WhseEntry."Source Type";
      LicensePlateEntry."Source Subtype" := WhseEntry."Source Subtype";
      LicensePlateEntry."Source ID" := WhseEntry."Source No.";
      LicensePlateEntry."Source Reference No." := WhseEntry."Source Line No.";
      LicensePlateEntry."Whse. Entry No." := WhseEntry."Entry No.";
      LicensePlateEntry."Warehouse Entry" := WhseEntry."Entry No.";
      LicensePlateEntry.INSERT;
    END;

    [External]
    PROCEDURE InsertPalletBinContent@1240020044(WhseEntry@1240020000 : Record 7312;VAR PalletBinContent@1240020001 : Record 14002963);
    VAR
      StorageID@1240020002 : Record 14002972;
    BEGIN
      PalletBinContent.INIT;
      PalletBinContent.VALIDATE(Location,WhseEntry."Location Code");
      PalletBinContent.VALIDATE(Bin,WhseEntry."Bin Code");
      PalletBinContent.VALIDATE("Pallet No.",WhseEntry."Pallet Code");
      PalletBinContent.VALIDATE("Box No.",WhseEntry."Box Code");
      PalletBinContent.VALIDATE("Item No.",WhseEntry."Item No.");
      PalletBinContent.VALIDATE("Variant No.",WhseEntry."Variant Code");
      PalletBinContent.VALIDATE("Lot No.",WhseEntry."Lot No.");
      PalletBinContent.VALIDATE("Serial No.",WhseEntry."Serial No.");
      PalletBinContent.VALIDATE("Unit of Measure",WhseEntry."Unit of Measure Code");
      PalletBinContent.VALIDATE("Qty per UOM",WhseEntry."Qty. per Unit of Measure");
      PalletBinContent.VALIDATE("Expiry Date",WhseEntry."Expiration Date");
      PalletBinContent.VALIDATE("Warranty Date",WhseEntry."Warranty Date");
      IF StorageID.GET(WhseEntry."Pallet Code") THEN BEGIN
        PalletBinContent.VALIDATE("QA Status",StorageID."QA Status");
        PalletBinContent.VALIDATE("Source Type",StorageID."Source Type");
        PalletBinContent.VALIDATE("Source Sub Type",StorageID."Source Sub Type");
        PalletBinContent.VALIDATE("Source ID",StorageID."Source ID");
        PalletBinContent.VALIDATE("Source Reference No.",StorageID."Source Reference No");
        PalletBinContent.VALIDATE("Creation Date",StorageID."Create Date");
        PalletBinContent.VALIDATE("Creation Time",StorageID."Create Time");
      END ELSE BEGIN
        //PalletBinContent."QA Status"
        PalletBinContent.VALIDATE("Source Type",WhseEntry."Source Type");
        PalletBinContent.VALIDATE("Source Sub Type",WhseEntry."Source Subtype");
        PalletBinContent.VALIDATE("Source ID",WhseEntry."Source No.");
        PalletBinContent.VALIDATE("Source Reference No.",WhseEntry."Source Line No.");
        PalletBinContent.VALIDATE("Creation Date",WORKDATE);
        PalletBinContent.VALIDATE("Creation Time",TIME);

        StorageID.INIT;
        StorageID.VALIDATE("Pallet No.",PalletBinContent."Pallet No.");
        StorageID.VALIDATE("QA Status",PalletBinContent."QA Status");
        StorageID.VALIDATE("Source Type",PalletBinContent."Source Type");
        StorageID.VALIDATE("Source Sub Type",PalletBinContent."Source Sub Type");
        StorageID.VALIDATE("Source ID",PalletBinContent."Source ID");
        StorageID.VALIDATE("Source Reference No",PalletBinContent."Source Reference No.");
        StorageID.VALIDATE("Create Date",WORKDATE);
        StorageID.VALIDATE("Create Time",TIME);
        StorageID.VALIDATE("Create DateTime",
          CREATEDATETIME(StorageID."Create Date",StorageID."Create Time"));
        StorageID.INSERT;
      END;

      PalletBinContent.VALIDATE("Last Handled Date",WORKDATE);
      PalletBinContent.VALIDATE("Last Handled Time",TIME);
      IF NOT PalletBinContent.INSERT THEN BEGIN
        PalletBinContent.SETRECFILTER;
        PalletBinContent.FINDFIRST;
      END;

      PalletBinContent.VALIDATE("Quantity (Base)",PalletBinContent."Quantity (Base)" + WhseEntry."Qty. (Base)");
      PalletBinContent.VALIDATE(Quantity,PalletBinContent.Quantity + WhseEntry.Quantity);
      PalletBinContent.MODIFY;
    END;

    [External]
    PROCEDURE ClearAllPalletBinContent@1240020022(VAR PalletBinContent@1240020003 : Record 14002963;WarehouseEmployeeCode@1240020001 : Code[50];VAR Remark@1240020000 : Text[250]);
    BEGIN
      WITH PalletBinContent DO BEGIN
        REPEAT
          IF FINDFIRST THEN BEGIN
            CreateLicenseplateEntry(PalletBinContent,9,WarehouseEmployeeCode,Quantity);
            PalletBinContent.DELETE;
          END;
        UNTIL NEXT = 0;
      END;
    END;

    [External]
    PROCEDURE CalcPalletQtyAvailToTakeBase@1240020053(PalletBinContent@1240020000 : Record 14002963;ExcludeQtyBase@1240020012 : Decimal) : Decimal;
    VAR
      BinContent@1240020002 : Record 7302;
      AvailBinQtyToTakeBase@1240020003 : Decimal;
      AvailPalletQtyToTakeBase@1240020011 : Decimal;
      QtyBase@1240020005 : Decimal;
      NegativeQtyBase@1240020006 : Decimal;
      PickQtyBase@1240020008 : Decimal;
      ATOCompPickQtyBase@1240020010 : Decimal;
    BEGIN
      CLEAR(QtyBase);
      CLEAR(NegativeQtyBase);
      CLEAR(PickQtyBase);
      CLEAR(ATOCompPickQtyBase);

      QtyBase := PalletBinContent."Quantity (Base)";
      NegativeQtyBase := CalcNegativeAdjBase(PalletBinContent);
      PickQtyBase := CalcPickQtyBase(PalletBinContent);
      ATOCompPickQtyBase := CalcATOCompPickQtyBase(PalletBinContent);

      AvailPalletQtyToTakeBase := QtyBase - ((PickQtyBase + ATOCompPickQtyBase) - ExcludeQtyBase + NegativeQtyBase);

      BinContent.RESET;
      BinContent.SETRANGE("Location Code",PalletBinContent.Location);
      BinContent.SETRANGE("Bin Code",PalletBinContent.Bin);
      BinContent.SETRANGE("Item No.",PalletBinContent."Item No.");
      BinContent.SETRANGE("Variant Code",PalletBinContent."Variant No.");
      BinContent.SETRANGE("Unit of Measure Code",PalletBinContent."Unit of Measure");
      IF PalletBinContent."Lot No." <> '' THEN
        BinContent.SETRANGE("Lot No. Filter",PalletBinContent."Lot No.");
      IF PalletBinContent."Serial No." <> '' THEN
        BinContent.SETRANGE("Serial No. Filter",PalletBinContent."Serial No.");
      IF BinContent.FINDSET(FALSE) THEN
        AvailBinQtyToTakeBase := BinContent.CalcQtyAvailToTake(ExcludeQtyBase);

      IF AvailBinQtyToTakeBase < AvailPalletQtyToTakeBase THEN
        AvailPalletQtyToTakeBase := AvailBinQtyToTakeBase;

      EXIT(AvailPalletQtyToTakeBase);
    END;

    [External]
    PROCEDURE CalcQuantityBase@1240020052(PalletBinContent@1240020005 : Record 14002963) : Decimal;
    VAR
      WhseEntry@1240020003 : Record 7312;
      WhseEntryQtyBase@1240020000 : Decimal;
    BEGIN
      CLEAR(WhseEntryQtyBase);

      WhseEntry.RESET;
      WhseEntry.SETRANGE("Location Code",PalletBinContent.Location);
      WhseEntry.SETRANGE("Bin Code",PalletBinContent.Bin);
      WhseEntry.SETRANGE("Item No.",PalletBinContent."Item No.");
      WhseEntry.SETRANGE("Variant Code",PalletBinContent."Variant No.");
      WhseEntry.SETRANGE("Unit of Measure Code",PalletBinContent."Unit of Measure");
      WhseEntry.SETRANGE("Lot No.",PalletBinContent."Lot No.");
      WhseEntry.SETRANGE("Serial No.",PalletBinContent."Serial No.");
      WhseEntry.SETRANGE("Pallet Code",PalletBinContent."Pallet No.");
      IF WhseEntry.FINDSET(FALSE) THEN
        REPEAT
          WhseEntryQtyBase += WhseEntry."Qty. (Base)";
        UNTIL WhseEntry.NEXT = 0;

      EXIT(PalletBinContent."Quantity (Base)");
    END;

    [External]
    PROCEDURE CalcNegativeAdjBase@1240020051(PalletBinContent@1240020002 : Record 14002963) : Decimal;
    VAR
      WhseJnlLine@1240020001 : Record 7311;
      QtyAbsoluteBase@1240020000 : Decimal;
    BEGIN
      CLEAR(QtyAbsoluteBase);

      WhseJnlLine.RESET;
      WhseJnlLine.SETRANGE("Location Code",PalletBinContent.Location);
      WhseJnlLine.SETRANGE("From Bin Code",PalletBinContent.Bin);
      WhseJnlLine.SETRANGE("Item No.",PalletBinContent."Item No.");
      WhseJnlLine.SETRANGE("Variant Code",PalletBinContent."Variant No.");
      WhseJnlLine.SETRANGE("Unit of Measure Code",PalletBinContent."Unit of Measure");
      WhseJnlLine.SETRANGE("Lot No.",PalletBinContent."Lot No.");
      WhseJnlLine.SETRANGE("Serial No.",PalletBinContent."Serial No.");
      WhseJnlLine.SETRANGE("Pallet Code",PalletBinContent."Pallet No.");
      IF WhseJnlLine.FINDSET(FALSE) THEN
        REPEAT
          QtyAbsoluteBase += WhseJnlLine."Qty. (Absolute, Base)";
        UNTIL WhseJnlLine.NEXT = 0;

      EXIT(QtyAbsoluteBase);
    END;

    [External]
    PROCEDURE CalcPositiveAdjBase@1240020050(PalletBinContent@1240020002 : Record 14002963) : Decimal;
    VAR
      WhseJnlLine@1240020001 : Record 7311;
      QtyAbsoluteBase@1240020000 : Decimal;
    BEGIN
      CLEAR(QtyAbsoluteBase);

      WhseJnlLine.RESET;
      WhseJnlLine.SETRANGE("Location Code",PalletBinContent.Location);
      WhseJnlLine.SETRANGE("To Bin Code",PalletBinContent.Bin);
      WhseJnlLine.SETRANGE("Item No.",PalletBinContent."Item No.");
      WhseJnlLine.SETRANGE("Variant Code",PalletBinContent."Variant No.");
      WhseJnlLine.SETRANGE("Unit of Measure Code",PalletBinContent."Unit of Measure");
      WhseJnlLine.SETRANGE("Lot No.",PalletBinContent."Lot No.");
      WhseJnlLine.SETRANGE("Serial No.",PalletBinContent."Serial No.");
      WhseJnlLine.SETRANGE("Pallet Code",PalletBinContent."Pallet No.");
      IF WhseJnlLine.FINDSET(FALSE) THEN
        REPEAT
          QtyAbsoluteBase += WhseJnlLine."Qty. (Absolute, Base)";
        UNTIL WhseJnlLine.NEXT = 0;

      EXIT(QtyAbsoluteBase);
    END;

    [External]
    PROCEDURE CalcPickQtyBase@1240020049(PalletBinContent@1240020002 : Record 14002963) : Decimal;
    VAR
      WhseActLine@1240020001 : Record 5767;
      QtyOutstandingBase@1240020000 : Decimal;
    BEGIN
      CLEAR(QtyOutstandingBase);

      WhseActLine.RESET;
      WhseActLine.SETRANGE("Location Code",PalletBinContent.Location);
      WhseActLine.SETRANGE("Bin Code",PalletBinContent.Bin);
      WhseActLine.SETRANGE("Item No.",PalletBinContent."Item No.");
      WhseActLine.SETRANGE("Variant Code",PalletBinContent."Variant No.");
      WhseActLine.SETRANGE("Unit of Measure Code",PalletBinContent."Unit of Measure");
      WhseActLine.SETRANGE("Action Type",WhseActLine."Action Type"::Take);
      WhseActLine.SETRANGE("Lot No.",PalletBinContent."Lot No.");
      WhseActLine.SETRANGE("Serial No.",PalletBinContent."Serial No.");
      WhseActLine.SETRANGE("Assemble to Order",FALSE);
      WhseActLine.SETRANGE("Pallet Code",PalletBinContent."Pallet No.");
      IF WhseActLine.FINDSET(FALSE) THEN
        REPEAT
          QtyOutstandingBase += WhseActLine."Qty. Outstanding (Base)";
        UNTIL WhseActLine.NEXT = 0;

      EXIT(QtyOutstandingBase);
    END;

    [External]
    PROCEDURE CalcPutAwayQtyBase@1240020048(PalletBinContent@1240020002 : Record 14002963) : Decimal;
    VAR
      WhseActLine@1240020001 : Record 5767;
      QtyOutstandingBase@1240020000 : Decimal;
    BEGIN
      CLEAR(QtyOutstandingBase);

      WhseActLine.RESET;
      WhseActLine.SETRANGE("Location Code",PalletBinContent.Location);
      WhseActLine.SETRANGE("Bin Code",PalletBinContent.Bin);
      WhseActLine.SETRANGE("Item No.",PalletBinContent."Item No.");
      WhseActLine.SETRANGE("Variant Code",PalletBinContent."Variant No.");
      WhseActLine.SETRANGE("Unit of Measure Code",PalletBinContent."Unit of Measure");
      WhseActLine.SETRANGE("Action Type",WhseActLine."Action Type"::Place);
      WhseActLine.SETRANGE("Lot No.",PalletBinContent."Lot No.");
      WhseActLine.SETRANGE("Serial No.",PalletBinContent."Serial No.");
      WhseActLine.SETRANGE("Assemble to Order",FALSE);
      WhseActLine.SETRANGE("Pallet Code",PalletBinContent."Pallet No.");
      IF WhseActLine.FINDSET(FALSE) THEN
        REPEAT
          QtyOutstandingBase += WhseActLine."Qty. Outstanding (Base)";
        UNTIL WhseActLine.NEXT = 0;

      EXIT(QtyOutstandingBase);
    END;

    [External]
    PROCEDURE CalcATOCompPickQtyBase@1240020047(PalletBinContent@1240020002 : Record 14002963) : Decimal;
    VAR
      WhseActLine@1240020001 : Record 5767;
      QtyOutstandingBase@1240020000 : Decimal;
    BEGIN
      CLEAR(QtyOutstandingBase);

      WhseActLine.RESET;
      WhseActLine.SETRANGE("Location Code",PalletBinContent.Location);
      WhseActLine.SETRANGE("Bin Code",PalletBinContent.Bin);
      WhseActLine.SETRANGE("Item No.",PalletBinContent."Item No.");
      WhseActLine.SETRANGE("Variant Code",PalletBinContent."Variant No.");
      WhseActLine.SETRANGE("Unit of Measure Code",PalletBinContent."Unit of Measure");
      WhseActLine.SETRANGE("Action Type",WhseActLine."Action Type"::Take);
      WhseActLine.SETRANGE("Lot No.",PalletBinContent."Lot No.");
      WhseActLine.SETRANGE("Serial No.",PalletBinContent."Serial No.");
      WhseActLine.SETRANGE("Assemble to Order",TRUE);
      WhseActLine.SETRANGE("ATO Component",TRUE);
      WhseActLine.SETRANGE("Pallet Code",PalletBinContent."Pallet No.");
      IF WhseActLine.FINDSET(FALSE) THEN
        REPEAT
          QtyOutstandingBase += WhseActLine."Qty. Outstanding (Base)";
        UNTIL WhseActLine.NEXT = 0;

      EXIT(QtyOutstandingBase);
    END;

    BEGIN
    END.
  }
}

