OBJECT Codeunit 11123398 SC - Customization Management
{
  OBJECT-PROPERTIES
  {
    Date=07/01/20;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=SCW19.2.0;
  }
  PROPERTIES
  {
    OnRun=VAR
            TempObject@11123302 : TEMPORARY Record 2000000001;
          BEGIN
            IF InitializeNewObjectID(TempObject,TempObject.Type::Codeunit,TRUE,50000,99999,Text11123302,Text11123303) THEN
              CreateEventsCodeunit(TempObject.ID,TempObject.Name,TempObject."Version List",TempObject.Compiled);
          END;

  }
  CODE
  {
    VAR
      Saved@11123306 : Boolean;
      Text11123302@11123307 : TextConst 'ENU=Sana Events (%1)';
      Text11123303@11123308 : TextConst 'ENU=Sana Customization';
      Text11123304@11123311 : TextConst 'ENU=Export';
      Text11123305@11123309 : TextConst 'ENU=" All Files (*.*)|*.*"';

    PROCEDURE CreateEventsCodeunit@11123302(CodeunitId@11123327 : Integer;CodeunitName@11123326 : Text[30];VersionList@11123311 : Text[80];Registrate@11123325 : Boolean);
    VAR
      Object@11123308 : Record 2000000001;
      BLOBRef@11123307 : TEMPORARY Record 99008535;
      Operation@11123305 : Record 11123302;
      FileName@11123304 : Text[250];
      WindowDialog@11123303 : Dialog;
      ExpFile@11123302 : File;
      Text11123303@11123315 : TextConst 'ENU=Codeunit ID:';
      Text11123304@11123314 : TextConst 'ENU=Codeunit Name:';
      Text11123305@11123313 : TextConst 'ENU=Codeunit %1 was generated and saved successfully.';
      Text11123306@11123312 : TextConst 'ENU=Codeunit ID: %1 already exist.';
      Error11123304@11123310 : TextConst 'ENU=Codeunit name:%1 already exist.';
      Error11123305@11123309 : TextConst 'ENU=All fields must be filled';
      InStr@11123316 : InStream;
      OutStr@11123317 : OutStream;
      InsertFunction@11123318 : Boolean;
      Error11123308@11123319 : TextConst 'ENU=Register Function:';
      Select@11123320 : Integer;
      Text11123308@11123321 : TextConst 'ENU=No,Yes';
      Option@11123322 : Text[30];
      Text11123309@11123323 : TextConst 'ENU=Register function:';
    BEGIN
      ExpFile.TEXTMODE(TRUE);
      ExpFile.CREATETEMPFILE;
      FileName := ExpFile.NAME;

      ExpFile.WRITE(STRSUBSTNO('OBJECT Codeunit %1 %2',CodeunitId,CodeunitName));
      ExpFile.WRITE('{');
      ExpFile.WRITE('  OBJECT-PROPERTIES');
      ExpFile.WRITE('  {');
      ExpFile.WRITE('    Date=' + FORMAT(TODAY) + ';');
      ExpFile.WRITE('    Time=[ ' +  FORMAT(TIME) + ' ];');
      ExpFile.WRITE('    Version List=' + VersionList + ';');
      ExpFile.WRITE('  }');
      ExpFile.WRITE('  PROPERTIES');
      ExpFile.WRITE('  {');
      ExpFile.WRITE('    TableNo=11123302;');
      ExpFile.WRITE('    OnRun=VAR');
      ExpFile.WRITE('            Params@50003 : TEMPORARY Record 11123310;');
      ExpFile.WRITE('            RequestBuff@50001 : TEMPORARY Record 11123303;');
      ExpFile.WRITE('            ResponseBuff@50000 : TEMPORARY Record 11123303;');
      ExpFile.WRITE('          BEGIN');
      ExpFile.WRITE('            Context.GetRequestBuff(RequestBuff);');
      ExpFile.WRITE('            Context.GetResponseBuff(ResponseBuff);');
      ExpFile.WRITE('            Context.GetParams(Params);');
      ExpFile.WRITE('');
      ExpFile.WRITE('            CASE Code OF');
      ExpFile.WRITE('              // Params');
      ExpFile.WRITE('              UPPERCASE(''OnInitParams'') : OnInitParams(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('              UPPERCASE(''OnInitFieldValues'') : OnInitFieldValues(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE(
        '              UPPERCASE(''OnInitLineFieldValues'') : OnInitLineFieldValues(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('');
      ExpFile.WRITE('              // Catalog');
      ExpFile.WRITE('              UPPERCASE(''OnBeforeGetProducts'') : OnBeforeGetProducts(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('              UPPERCASE(''OnGetProduct'') : OnGetProduct(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('              UPPERCASE(''OnAfterGetProduct'') : OnAfterGetProduct(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('');
      ExpFile.WRITE('              UPPERCASE(''OnBeforeGetVariants'') : OnBeforeGetVariants(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('              UPPERCASE(''OnGetVariant'') : OnGetVariant(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('');
      ExpFile.WRITE('              UPPERCASE(''OnGetAvailableStock'') : OnGetAvailableStock(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('              UPPERCASE(''OnGetSalesPrice'') : OnGetSalesPrice(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('              UPPERCASE(''OnGetListPrice'') : OnGetListPrice(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('');
      ExpFile.WRITE('              // Customer');
      ExpFile.WRITE('              UPPERCASE(''OnBeforeGetCustomers'') : OnBeforeGetCustomers(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('              UPPERCASE(''OnGetCustomer'') : OnGetCustomer(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('              UPPERCASE(''OnAfterGetCustomer'') : OnAfterGetCustomer(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('              UPPERCASE(''OnSaveCustomer'') : OnSaveCustomer(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('');
      ExpFile.WRITE('              UPPERCASE(''OnBeforeGetSalespersons'') : OnBeforeGetSalespersons(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('              UPPERCASE(''OnGetSalesperson'') : OnGetSalesperson(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('              UPPERCASE(''OnAfterGetSalesperson'') : OnAfterGetSalesperson(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('');
      ExpFile.WRITE('              UPPERCASE(''OnBeforeGetContacts'') : OnBeforeGetContacts(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('              UPPERCASE(''OnGetContact'') : OnGetContact(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('              UPPERCASE(''OnAfterGetContact'') : OnAfterGetContact(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('              UPPERCASE(''OnSaveContact'') : OnSaveContact(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('');
      ExpFile.WRITE(
        '              UPPERCASE(''OnBeforeGetShippingMethods'') : OnBeforeGetShippingMethods(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('              UPPERCASE(''OnGetShippingMethod'') : OnGetShippingMethod(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('');
      ExpFile.WRITE('              // Order & Basket');
      ExpFile.WRITE('              UPPERCASE(''OnInitDocument'') : OnInitDocument(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('              UPPERCASE(''OnBeforeSaveDocument'') : OnBeforeSaveDocument(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('              UPPERCASE(''OnAfterAddDocumentLines'') : OnAfterAddDocumentLines(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('');
      ExpFile.WRITE(
        '              UPPERCASE(''OnBeforeCreateDocResponse'') : OnBeforeCreateDocResponse(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('              UPPERCASE(''OnGetSalesLine'') : OnGetSalesLine(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('              UPPERCASE(''OnAfterCreateDocResponse'') : OnAfterCreateDocResponse(RequestBuff,ResponseBuff,Params);'
      );
      ExpFile.WRITE('');
      ExpFile.WRITE('              UPPERCASE(''OnBeforeAddDocumentLine'') : OnBeforeAddDocumentLine(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('              UPPERCASE(''OnAddDocumentLine'') : OnAddDocumentLine(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('              UPPERCASE(''OnAfterAddDocumentLine'') : OnAfterAddDocumentLine(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('');
      ExpFile.WRITE(
        '              UPPERCASE(''OnBeforeGetSalesDocuments'') : OnBeforeGetSalesDocuments(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('');
      ExpFile.WRITE(
        '              UPPERCASE(''OnBeforeCreateShipmentResponse'') : OnBeforeCreateShipmentResponse(RequestBuff,ResponseBuff,Params);'
      );
      ExpFile.WRITE('              UPPERCASE(''OnGetSalesShipmentLine'') : OnGetSalesShipmentLine(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE(
        '              UPPERCASE(''OnAfterCreateShipmentResponse'') : OnAfterCreateShipmentResponse(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('');
      ExpFile.WRITE(
      '              UPPERCASE(''OnBeforeCreateInvoiceResponse'') : OnBeforeCreateInvoiceResponse(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('              UPPERCASE(''OnGetSalesInvoiceLine'') : OnGetSalesInvoiceLine(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE(
        '              UPPERCASE(''OnAfterCreateInvoiceResponse'') : OnAfterCreateInvoiceResponse(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('');
      ExpFile.WRITE(
        '              UPPERCASE(''OnBeforeCreateCrMemoResponse'') : OnBeforeCreateCrMemoResponse(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('              UPPERCASE(''OnGetSalesCrMemoLine'') : OnGetSalesCrMemoLine(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE(
        '              UPPERCASE(''OnAfterCreateCrMemoResponse'') : OnAfterCreateCrMemoResponse(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE('');
      ExpFile.WRITE(
        '              UPPERCASE(''OnBeforeCreateRtrnRcptResponse'') : OnBeforeCreateRtrnRcptResponse(RequestBuff,ResponseBuff,Params);'
      );
      ExpFile.WRITE('              UPPERCASE(''OnGetRtrnRcptLine'') : OnGetRtrnRcptLine(RequestBuff,ResponseBuff,Params);');
      ExpFile.WRITE(
        '              UPPERCASE(''OnAfterCreateRtrnRcptResponse'') : OnAfterCreateRtrnRcptResponse(RequestBuff,ResponseBuff,Params);');

      ExpFile.WRITE('            END;');
      ExpFile.WRITE('');
      ExpFile.WRITE('            Context.SetParams(Params);');
      ExpFile.WRITE('          END;');
      ExpFile.WRITE('');
      ExpFile.WRITE('  }');
      ExpFile.WRITE('  CODE');
      ExpFile.WRITE('  {');

      StartFunctions(ExpFile);

      ExpFile.CREATEINSTREAM(InStr);
      BLOBRef.Blob.CREATEOUTSTREAM(OutStr);
      COPYSTREAM(OutStr,InStr);

      Saved := FALSE;
      BLOBExport(BLOBRef,'Codeunit ' + FORMAT(CodeunitId) + '.txt',TRUE,Saved);

      IF Registrate AND Saved THEN
        RegOperations(CodeunitId);

      ExpFile.CLOSE;
    END;

    PROCEDURE BLOBExport@4(VAR BLOBRef@11123305 : TEMPORARY Record 99008535;Name@11123304 : Text[1024];CommonDialog@11123303 : Boolean;VAR Saved@11123302 : Boolean) : Text[1024];
    VAR
      NVInStream@11123309 : InStream;
      ToFile@11123308 : Text[1024];
      p@11123307 : Integer;
      Path@11123306 : Text[1024];
    BEGIN
      IF NOT ISSERVICETIER THEN BEGIN
        ToFile := BLOBRef.Blob.EXPORT(Name,CommonDialog);
        Saved := ToFile <> '';
        EXIT(ToFile);
      END ELSE BEGIN
        BLOBRef.Blob.CREATEINSTREAM(NVInStream);
        IF STRPOS(Name,'*') = 0 THEN
          ToFile := Name
        ELSE BEGIN
          ToFile := INSSTR(Name,Text11123303,1);
          ToFile := DELCHR(ToFile,'=','*');
        END;
        WHILE STRPOS(ToFile,'\')<>0 DO BEGIN
          p := STRPOS(ToFile,'\');
          ToFile := COPYSTR(ToFile, p+1);
        END;
        Path := 'C:\TEMP';
        IF NOT CommonDialog THEN
          Path := Magicpath;
          Saved := DOWNLOADFROMSTREAM(NVInStream,Text11123304,Path,Text11123305,ToFile);
        EXIT(ToFile);
      END
    END;

    PROCEDURE Magicpath@9() : Text[1024];
    BEGIN
      EXIT('<TEMP>');   // MAGIC PATH makes sure we don't get a prompt
    END;

    PROCEDURE StartFunctions@11123352(VAR ExpFile@11123302 : File);
    BEGIN
      SetOnInitParams(ExpFile);
      SetOnInitFieldValues(ExpFile);
      SetOnInitLineFieldValues(ExpFile);
      SetOnBeforeGetProducts(ExpFile);
      SetOnGetProduct(ExpFile);
      SetOnAfterGetProduct(ExpFile);
      SetOnBeforeGetVariants(ExpFile);
      SetOnGetVariant(ExpFile);
      SetOnGetAvailableStock(ExpFile);
      SetOnGetSalesPrice(ExpFile);
      SetOnGetListPrice(ExpFile);
      SetOnBeforeGetCustomers(ExpFile);
      SetOnGetCustomer(ExpFile);
      SetOnAfterGetCustomer(ExpFile);
      SetOnSaveCustomer(ExpFile);
      SetOnBeforeGetSalespersons(ExpFile);
      SetOnGetSalesperson(ExpFile);
      SetOnAfterGetSalesperson(ExpFile);
      SetOnBeforeGetContacts(ExpFile);
      SetOnGetContact(ExpFile);
      SetOnAfterGetContact(ExpFile);
      SetOnSaveContact(ExpFile);
      SetOnBeforeGetShippingMethods(ExpFile);
      SetOnGetShippingMethod(ExpFile);
      SetOnInitDocument(ExpFile);
      SetOnBeforeSaveDocument(ExpFile);
      SetOnAfterAddDocumentLines(ExpFile);
      SetOnBeforeCreateDocResponse(ExpFile);
      SetOnGetSalesLine(ExpFile);
      SetOnAfterCreateDocResponse(ExpFile);
      SetOnBeforeAddDocumentLine(ExpFile);
      SetOnAddDocumentLine(ExpFile);
      SetOnAfterAddDocumentLine(ExpFile);
      SetOnBeforeGetSalesDocuments(ExpFile);
      SetOnBeforeCreateShipmentResp(ExpFile);
      SetOnGetSalesShipmentLine(ExpFile);
      SetOnAfterCreateShipmentResp(ExpFile);
      SetOnBeforeCreateInvoiceResp(ExpFile);
      SetOnGetSalesInvoiceLine(ExpFile);
      SetOnAfterCreateInvoiceResp(ExpFile);
      SetOnBeforeCreateCrMemoResp(ExpFile);
      SetOnGetSalesCrMemoLine(ExpFile);
      SetOnAfterCreateCrMemoResponse(ExpFile);
      SetOnBeforeCreateRtrnRcptResp(ExpFile);
      SetOnGetRtrnRcptLine(ExpFile);
      SetOnAfterCreateRtrnRcptResp(ExpFile);
      SetDocumentation(ExpFile);
    END;

    PROCEDURE SetOnInitParams@11123322(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      Context@50000 : Codeunit 11123305;');
      ExpFile.WRITE('      XMLFunctions@50002 : Codeunit 11123308;');
      ExpFile.WRITE('      RecMgt@50001 : Codeunit 11123326;');
      ExpFile.WRITE('      Text11123302@50003 : TextConst ''ENU=".//field[@name=''''%1'''']"'';');
      ExpFile.WRITE('');
      ExpFile.WRITE('    PROCEDURE OnInitParams@50016(VAR RequestBuff@50002 : Record 11123303;' +
       'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      XmlNodeText@11123302 : Text[1024];');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // XmlNodeText := RequestBuff.SelectSingleNodeText(''//CustomNodeName1'');');
      ExpFile.WRITE('      // IF XmlNodeText <> '''' THEN');
      ExpFile.WRITE('      //   Params.SetValue(''CustomNodeName1'',XmlNodeText);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // XmlNodeText := RequestBuff.SelectSingleNodeText(''//CustomNodeName2'');');
      ExpFile.WRITE('      // IF XmlNodeText <> '''' THEN');
      ExpFile.WRITE('      //   Params.SetValue(''CustomNodeName2'',XmlNodeText);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnInitFieldValues@11123324(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnInitFieldValues@50018(VAR RequestBuff@50002 : TEMPORARY Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      XmlNodeText@50003 : Text[1024];');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // XmlNodeText := RequestBuff.CutFieldValueByName(''LineCustomNodeName1'');');
      ExpFile.WRITE('      // IF XmlNodeText <> '''' THEN');
      ExpFile.WRITE('      //   Params.SetValue(''LineCustomNodeName1'',XmlNodeText);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // XmlNodeText := RequestBuff.CutFieldValueByName(''LineCustomNodeName2'');');
      ExpFile.WRITE('      // IF XmlNodeText <> '''' THEN');
      ExpFile.WRITE('      //   Params.SetValue(''LineCustomNodeName2'',XmlNodeText);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnInitLineFieldValues@11123358(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnInitLineFieldValues@11123302(VAR RequestBuff@50002 : Record 11123303;' +
      'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      XmlNodeText@50003 : Text[1024];');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // XmlNodeText := RequestBuff.CutFieldValueByName(''LineFieldCustomNodeName1'');');
      ExpFile.WRITE('      // IF XmlNodeText <> '''' THEN');
      ExpFile.WRITE('      //   Params.SetValue(''LineFieldCustomNodeName1'',XmlNodeText);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // XmlNodeText := RequestBuff.CutFieldValueByName(''LineFieldCustomNodeName2'');');
      ExpFile.WRITE('      // IF XmlNodeText <> '''' THEN');
      ExpFile.WRITE('      //   Params.SetValue(''LineFieldCustomNodeName2'',XmlNodeText);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnBeforeGetProducts@11123305(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnBeforeGetProducts@50000(VAR RequestBuff@50003 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      Item@50005 : Record 27;');
      ExpFile.WRITE('      XmlNodeText@50007 : Text[1024];');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // RecMgt.RetrieveItemRef(Item);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // XmlNodeText := RequestBuff.SelectSingleNodeText(''ApplyVendorNoFilter'');');
      ExpFile.WRITE('      // IF XmlNodeText <> '''' THEN');
      ExpFile.WRITE('      //   Item.SETFILTER("Vendor No.",XmlNodeText);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassItemRef(Item);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnGetProduct@11123307(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnGetProduct@50001(VAR RequestBuff@50003 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      Item@50005 : Record 27;');
      ExpFile.WRITE('      CurrentXMLNodeBuff@50002 : TEMPORARY Record 11123303;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // Context.GetXMLNodeBuff(CurrentXMLNodeBuff);');
      ExpFile.WRITE('      // RecMgt.RetrieveItemRef(Item);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // Item.CALCFIELDS("Bill of Materials");');
      ExpFile.WRITE('      // IF Item."Bill of Materials" THEN');
      ExpFile.WRITE('      //   Params.LoadRelatedSkus := FALSE;');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassItemRef(Item);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnAfterGetProduct@11123399(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnAfterGetProduct@50002(VAR RequestBuff@50003 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      Item@50005 : Record 27;');
      ExpFile.WRITE('      CurrentXMLNodeBuff@50002 : TEMPORARY Record 11123303;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // Context.GetXMLNodeBuff(CurrentXMLNodeBuff);');
      ExpFile.WRITE('      // RecMgt.RetrieveItemRef(Item);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // CurrentXMLNodeBuff.AddFieldElement(''ShelfID'',Item."Shelf No.");');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassItemRef(Item);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnBeforeGetVariants@11123308(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnBeforeGetVariants@50006(VAR RequestBuff@50003 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      ItemVariant@50005 : Record 5401;');
      ExpFile.WRITE('      XmlNodeText@50007 : Text[1024];');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // RecMgt.RetrieveVariantRef(ItemVariant);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // XmlNodeText := RequestBuff.SelectSingleNodeText(''//ApplyVariantDescr2Filter'');');
      ExpFile.WRITE('      // IF XmlNodeText <> '''' THEN');
      ExpFile.WRITE('      //   IF XmlNodeText = ''1'' THEN');
      ExpFile.WRITE('      //      ItemVariant.SETFILTER("Description 2",''<>%1'','''');');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassVariantRef(ItemVariant);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnGetVariant@11123309(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnGetVariant@50005(VAR RequestBuff@50003 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      ItemVariant@50004 : Record 5401;');
      ExpFile.WRITE('      CurrentXMLNodeBuff@50002 : TEMPORARY Record 11123303;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // Context.GetXMLNodeBuff(CurrentXMLNodeBuff);');
      ExpFile.WRITE('      // RecMgt.RetrieveVariantRef(ItemVariant);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // IF ItemVariant."Description 2" = '''' THEN');
      ExpFile.WRITE('      //   ItemVariant."Description 2" := ItemVariant.Description;');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassVariantRef(ItemVariant);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnGetAvailableStock@11123311(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnGetAvailableStock@50004(VAR RequestBuff@50003 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      Item@50004 : Record 27;');
      ExpFile.WRITE('      RecMgt@50005 : Codeunit 11123326;');
      ExpFile.WRITE('      XmlNodeText@50002 : Text[1024];');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // XmlNodeText := RequestBuff.SelectSingleNodeText(''//AlwaysOnStock'');');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // IF XmlNodeText = '''' THEN');
      ExpFile.WRITE('      //   EXIT;');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // IF XmlNodeText = ''1'' THEN BEGIN');
      ExpFile.WRITE('      //   RecMgt.GetItem(Params.ProductId,Item,TRUE);');
      ExpFile.WRITE('      //   IF Item.Reserve = Item.Reserve::Never THEN');
      ExpFile.WRITE('      //     Params.Inventory := 999999.99;');
      ExpFile.WRITE('      // END;');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnGetSalesPrice@11123312(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnGetSalesPrice@50008(VAR RequestBuff@50003 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      Item@50004 : Record 27;');
      ExpFile.WRITE('      RecMgt@50005 : Codeunit 11123326;');
      ExpFile.WRITE('      XmlNodeText@50002 : Text[1024];');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // XmlNodeText := RequestBuff.SelectSingleNodeText(''//DivideUnitPrice'');');
      ExpFile.WRITE('      // IF XmlNodeText = '''' THEN');
      ExpFile.WRITE('      //   EXIT;');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // IF XmlNodeText = ''1'' THEN BEGIN');
      ExpFile.WRITE('      //   RecMgt.GetItem(Params.ProductId,Item,TRUE);');
      ExpFile.WRITE('      //   IF Item."Unit Price" <> 0 THEN');
      ExpFile.WRITE('      //     Params.Price := ROUND(Item."Unit Price" / 3,0.01);');
      ExpFile.WRITE('      // END;');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnGetListPrice@11123313(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnGetListPrice@50009(VAR RequestBuff@50003 : Record 11123303;' +
       'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      Item@50004 : Record 27;');
      ExpFile.WRITE('      RecMgt@50005 : Codeunit 11123326;');
      ExpFile.WRITE('      XmlNodeText@50002 : Text[1024];');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // XmlNodeText := RequestBuff.SelectSingleNodeText(''MultiplyUnitPrice'');');
      ExpFile.WRITE('      // IF XmlNodeText = '''' THEN');
      ExpFile.WRITE('      //   EXIT;');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // IF XmlNodeText = ''1'' THEN BEGIN');
      ExpFile.WRITE('      //   RecMgt.GetItem(Params.ProductId,Item,TRUE);');
      ExpFile.WRITE('      //   IF Item."Unit Price" <> 0 THEN');
      ExpFile.WRITE('      //     Params.Price := Item."Unit Price" * 5;');
      ExpFile.WRITE('      // END;');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnBeforeGetCustomers@11123314(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnBeforeGetCustomers@50003(VAR RequestBuff@50003 : Record 11123303;' +
      'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      Customer@50005 : Record 18;');
      ExpFile.WRITE('      XmlNodeText@50007 : Text[1024];');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // RecMgt.RetrieveCustomerRef(Customer);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // XmlNodeText := RequestBuff.SelectSingleNodeText(''//ApplyCustDiscountGrFilter'');');
      ExpFile.WRITE('      // IF XmlNodeText <> '''' THEN');
      ExpFile.WRITE('      //   IF XmlNodeText = ''1'' THEN');
      ExpFile.WRITE('      //     Customer.SETFILTER("Customer Disc. Group",''<>%1'','''');');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassCustomerRef(Customer);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnGetCustomer@11123315(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnGetCustomer@50012(VAR RequestBuff@50003 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      Customer@50005 : Record 18;');
      ExpFile.WRITE('      CurrentXMLNodeBuff@50002 : TEMPORARY Record 11123303;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // Context.GetXMLNodeBuff(CurrentXMLNodeBuff);');
      ExpFile.WRITE('      // RecMgt.RetrieveCustomerRef(Customer);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // Customer.CALCFIELDS("Balance (LCY)");');
      ExpFile.WRITE('      // IF Customer."Balance (LCY)" > 0 THEN');
      ExpFile.WRITE('      //   Params.UseDefaultAddress := TRUE;');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassCustomerRef(Customer);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnAfterGetCustomer@11123316(VAR ExpFile@11123304 : File);
    VAR
      Params@11123302 : TEMPORARY Record 11123310;
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnAfterGetCustomer@50015(VAR RequestBuff@50003 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      CollectionNodeBuff@11123303 : TEMPORARY Record 11123303;');
      ExpFile.WRITE('      Customer@50005 : Record 18;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // Context.GetXMLNodeBuff(CollectionNodeBuff);');
      ExpFile.WRITE('      // RecMgt.RetrieveCustomerRef(Customer);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // CollectionNodeBuff.AddFieldElement(''ServiceZoneID'',Customer."Service Zone Code");');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassCustomerRef(Customer);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnSaveCustomer@11123317(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnSaveCustomer@50017(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      Customer@50004 : Record 18;');
      ExpFile.WRITE('      XmlNodeText@50003 : Text[1024];');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // RecMgt.RetrieveCustomerRef(Customer);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // XmlNodeText := RequestBuff.SelectSingleNodeText(''//ServiceZoneID'');');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // IF XmlNodeText <> '''' THEN');
      ExpFile.WRITE('      //   IF (Customer."Service Zone Code" <> XmlNodeText) THEN BEGIN');
      ExpFile.WRITE('      //     Customer.VALIDATE("Service Zone Code",XmlNodeText);');
      ExpFile.WRITE('      //     Customer.MODIFY(TRUE);');
      ExpFile.WRITE('      //   END;');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassCustomerRef(Customer);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnBeforeGetSalespersons@11123319(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnBeforeGetSalespersons@50013(VAR RequestBuff@50003 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      Salesperson@50005 : Record 50027;'); //TPZ2027
      ExpFile.WRITE('      XmlNodeText@50007 : Text[1024];');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // RecMgt.RetrieveSalespersonRef(Salesperson);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // XmlNodeText := RequestBuff.SelectSingleNodeText(''//ApplyCommissionFilter'');');
      ExpFile.WRITE('      // IF XmlNodeText <> '''' THEN');
      ExpFile.WRITE('      //   IF XmlNodeText = ''1'' THEN');
      ExpFile.WRITE('      //     Salesperson.SETRANGE("Commission %",0);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassSalespersonRef(Salesperson);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnGetSalesperson@11123318(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnGetSalesperson@50011(VAR RequestBuff@50003 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      Salesperson@50005 : Record 13;');
      ExpFile.WRITE('      CurrentXMLNodeBuff@50002 : TEMPORARY Record 11123303;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // Context.GetXMLNodeBuff(CurrentXMLNodeBuff);');
      ExpFile.WRITE('      // RecMgt.RetrieveSalespersonRef(Salesperson);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // Salesperson.CALCFIELDS("Estimated Value (LCY)");');
      ExpFile.WRITE('      // CurrentXMLNodeBuff.AddFieldElement(''EstimatedValueLCY'',FORMAT(Salesperson."Estimated Value (LCY)"));');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassSalespersonRef(Salesperson);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnAfterGetSalesperson@11123320(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnAfterGetSalesperson@50010(VAR RequestBuff@50003 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      Salesperson@50005 : Record 13;');
      ExpFile.WRITE('      CollectionNodeBuff@50004 : TEMPORARY Record 11123303;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // Context.GetXMLNodeBuff(CollectionNodeBuff);');
      ExpFile.WRITE('      // RecMgt.RetrieveSalespersonRef(Salesperson);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // CollectionNodeBuff.AddFieldElement(''E-Mail 2'',Salesperson."E-Mail 2");');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassSalespersonRef(Salesperson);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnBeforeGetContacts@11123325(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnBeforeGetContacts@50022(VAR RequestBuff@50003 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      Contact@50005 : Record 5050;');
      ExpFile.WRITE('      XmlNodeText@50007 : Text[1024];');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // RecMgt.RetrieveContactRef(Contact);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // XmlNodeText := RequestBuff.SelectSingleNodeText(''//TypeFilter'');');
      ExpFile.WRITE('      // IF XmlNodeText <> '''' THEN');
      ExpFile.WRITE('      //   IF XmlNodeText = ''Company'' THEN');
      ExpFile.WRITE('      //     Contact.SETRANGE(Type,Contact.Type::Company);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassContactRef(Contact);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnGetContact@11123323(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnGetContact@50021(VAR RequestBuff@50003 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      Contact@50005 : Record 5050;');
      ExpFile.WRITE('      CurrentXmlNodeBuff@50002 : TEMPORARY Record 11123303;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // Context.GetXMLNodeBuff(CurrentXmlNodeBuff);');
      ExpFile.WRITE('      // RecMgt.RetrieveContactRef(Contact);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // Contact.CALCFIELDS("No. of Business Relations");');
      ExpFile.WRITE(
        '      // CurrentXmlNodeBuff.AddFieldElement(''BusinessRelationsCount'',FORMAT(Contact."No. of Business Relations"));');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassContactRef(Contact);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnAfterGetContact@11123327(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnAfterGetContact@50020(VAR RequestBuff@50003 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      Contact@50005 : Record 5050;');
      ExpFile.WRITE('      CollectionNodeBuff@50004 : TEMPORARY Record 11123303;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // Context.GetXMLNodeBuff(CollectionNodeBuff);');
      ExpFile.WRITE('      // RecMgt.RetrieveContactRef(Contact);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // CollectionNodeBuff.AddFieldElement(''TerritoryID'',Contact."Territory Code");');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassContactRef(Contact);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnSaveContact@11123328(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnSaveContact@50019(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      Contact@50004 : Record 5050;');
      ExpFile.WRITE('      XmlNodeText@50003 : Text[1024];');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // RecMgt.RetrieveContactRef(Contact);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // XmlNodeText := RequestBuff.SelectSingleNodeText(''//TerritoryID'');');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // IF XmlNodeText <> '''' THEN');
      ExpFile.WRITE('      //   IF (Contact."Territory Code" <> XmlNodeText)');
      ExpFile.WRITE('      //   THEN BEGIN');
      ExpFile.WRITE('      //     Contact.VALIDATE("Territory Code",XmlNodeText);');
      ExpFile.WRITE('      //     Contact.MODIFY(TRUE);');
      ExpFile.WRITE('      //   END;');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassContactRef(Contact);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnBeforeGetShippingMethods@11123326(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnBeforeGetShippingMethods@50024(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      ShippingAgentService@50003 : Record 5790;');
      ExpFile.WRITE('      XmlNodeText@50004 : Text[1024];');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // RecMgt.RetrieveShipAgentServiceRef(ShippingAgentService);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // XmlNodeText := RequestBuff.SelectSingleNodeText(''//ApplyFedexFilter'');');
      ExpFile.WRITE('      // IF XmlNodeText <> '''' THEN');
      ExpFile.WRITE('      //   IF XmlNodeText = ''1'' THEN');
      ExpFile.WRITE('      //     ShippingAgentService.SETRANGE("Shipping Agent Code",''FEDEX'');');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassShipAgentServiceRef(ShippingAgentService);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnGetShippingMethod@11123329(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnGetShippingMethod@50025(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      ShippingAgent@50003 : Record 291;');
      ExpFile.WRITE('      CurrentXmlNodeBuff@50004 : TEMPORARY Record 11123303;');
      ExpFile.WRITE('      XmlNodeText@50005 : Text[1024];');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // Context.GetXMLNodeBuff(CurrentXmlNodeBuff);');
      ExpFile.WRITE('      // RecMgt.PassShipAgentRef(ShippingAgent);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // XmlNodeText := CurrentXmlNodeBuff.CutFieldValueByName(''Id'');');
      ExpFile.WRITE('      // IF XmlNodeText <> '''' THEN');
      ExpFile.WRITE('      //   CurrentXmlNodeBuff.AddFieldElement(''Id'',STRSUBSTNO(''%1__%2'',XmlNodeText,''CustomCode''));');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.RetrieveShipAgentRef(ShippingAgent);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnInitDocument@11123331(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnInitDocument@50023(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      SalesHeader@50004 : Record 36;');
      ExpFile.WRITE('      SalesSetup@50003 : Record 311;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // RecMgt.RetrieveSalesHeaderRef(SalesHeader);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // IF SalesHeader."No. Series" = '''' THEN BEGIN');
      ExpFile.WRITE('      //   SalesSetup.GET;');
      ExpFile.WRITE('      //   SalesHeader."No. Series" := SalesSetup."Order Nos.";');
      ExpFile.WRITE('      // END;');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassSalesHeaderRef(SalesHeader);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnBeforeSaveDocument@11123332(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnBeforeSaveDocument@50027(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      SalesHeader@50004 : Record 36;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // RecMgt.RetrieveSalesHeaderRef(SalesHeader);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // SalesHeader."Sell-to Address 2" := Params.GetValue(''CustomNodeName1'');');
      ExpFile.WRITE('      // SalesHeader."Ship-to Address 2" := Params.GetValue(''CustomNodeName2'');');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassSalesHeaderRef(SalesHeader);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnAfterAddDocumentLines@11123333(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnAfterAddDocumentLines@50033(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      SalesHeader@50004 : Record 36;');
      ExpFile.WRITE('      SalesLine@50003 : Record 37;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // RecMgt.RetrieveSalesHeaderRef(SalesHeader);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // SalesLine.SETRANGE("Document Type",SalesHeader."Document Type");');
      ExpFile.WRITE('      // SalesLine.SETRANGE("Document No.",SalesHeader."No.");');
      ExpFile.WRITE('      // IF SalesLine.FINDSET(TRUE,FALSE) THEN');
      ExpFile.WRITE('      //   REPEAT');
      ExpFile.WRITE('      //     // Do some recalculation here, if needed');
      ExpFile.WRITE('      //   UNTIL SalesLine.NEXT = 0;');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassSalesHeaderRef(SalesHeader);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnBeforeCreateDocResponse@11123330(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnBeforeCreateDocResponse@50014(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      SalesHeader@50004 : Record 36;');
      ExpFile.WRITE('      SalesLine@50003 : Record 37;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // RecMgt.RetrieveSalesHeaderRef(SalesHeader);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // SalesLine.SETRANGE("Document Type",SalesHeader."Document Type");');
      ExpFile.WRITE('      // SalesLine.SETRANGE("Document No.",SalesHeader."No.");');
      ExpFile.WRITE('      // IF SalesLine.COUNT > 1000 THEN');
      ExpFile.WRITE('      //   Params.LoadOrderLines := FALSE;');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassSalesHeaderRef(SalesHeader);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnGetSalesLine@11123339(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnGetSalesLine@50044(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      SalesLine@50004 : Record 37;');
      ExpFile.WRITE('      CurrentXMLNodeBuff@50003 : TEMPORARY Record 11123303;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // Context.GetXMLNodeBuff(CurrentXMLNodeBuff);');
      ExpFile.WRITE('      // RecMgt.RetrieveSalesLineRef(SalesLine);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // CurrentXMLNodeBuff.AddFieldElement(''Shortcut Dimension 1 Code'',SalesLine."Shortcut Dimension 1 Code");')
      ;
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassSalesLineRef(SalesLine);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnAfterCreateDocResponse@11123334(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnAfterCreateDocResponse@50029(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      SalesHeader@50004 : Record 36;');
      ExpFile.WRITE('      SalesLine@50003 : Record 37;');
      ExpFile.WRITE('      CollectionNodeBuff@50005 : TEMPORARY Record 11123303;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // Context.GetXMLNodeBuff(CollectionNodeBuff);');
      ExpFile.WRITE('      // RecMgt.RetrieveSalesHeaderRef(SalesHeader);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // SalesLine.SETRANGE("Document Type",SalesHeader."Document Type");');
      ExpFile.WRITE('      // SalesLine.SETRANGE("Document No.",SalesHeader."No.");');
      ExpFile.WRITE('      // CollectionNodeBuff.AddFieldElement(''LinesCount'',FORMAT(SalesLine.COUNT));');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassSalesHeaderRef(SalesHeader);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnBeforeAddDocumentLine@11123335(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnBeforeAddDocumentLine@50026(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      SalesLine@50003 : Record 37;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // RecMgt.RetrieveSalesLineRef(SalesLine);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // IF (Params.LineType = ''Item'') AND (Params.Quantity = 0) THEN');
      ExpFile.WRITE('      //   Params.Quantity := 1;');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassSalesLineRef(SalesLine);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnAddDocumentLine@11123337(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnAddDocumentLine@50028(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      SalesLine@50003 : Record 37;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // RecMgt.RetrieveSalesLineRef(SalesLine);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // IF Params.GetValue(''LineCustomNodeName1'') <> '''' THEN BEGIN');
      ExpFile.WRITE('      //   SalesLine."Unit of Measure" := Params.GetValue(''LineCustomNodeName1'');');
      ExpFile.WRITE('      //   SalesLine.MODIFY;');
      ExpFile.WRITE('      // END;');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassSalesLineRef(SalesLine);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnAfterAddDocumentLine@11123338(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnAfterAddDocumentLine@50031(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      SalesLine@50003 : Record 37;');
      ExpFile.WRITE('      SalesLine2@50004 : Record 37;');
      ExpFile.WRITE('      LineNo@50005 : Integer;');
      ExpFile.WRITE('      AttachedToLineNo@50006 : Integer;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // RecMgt.RetrieveSalesLineRef(SalesLine);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // IF Params.GetValue(''LineCustomNodeName2'') <> '''' THEN BEGIN');
      ExpFile.WRITE('      //   LineNo := 10000;');
      ExpFile.WRITE('      //   AttachedToLineNo := SalesLine."Line No.";');
      ExpFile.WRITE('');
      ExpFile.WRITE('      //   SalesLine2.SETRANGE("Document Type",SalesLine."Document Type");');
      ExpFile.WRITE('      //   SalesLine2.SETRANGE("Document No.",SalesLine."Document No.");');
      ExpFile.WRITE('      //   IF SalesLine2.FINDLAST THEN');
      ExpFile.WRITE('      //     LineNo := LineNo + 10000;');
      ExpFile.WRITE('');
      ExpFile.WRITE('      //   SalesLine.INIT;');
      ExpFile.WRITE('      //   SalesLine."Document Type" := SalesLine2."Document Type";');
      ExpFile.WRITE('      //   SalesLine."Document No." := SalesLine2."Document No.";');
      ExpFile.WRITE('      //   SalesLine."Line No." := LineNo;');
      ExpFile.WRITE('      //   SalesLine."Attached to Line No." := AttachedToLineNo;');
      ExpFile.WRITE('      //   SalesLine.Description := Params.GetValue(''LineCustomNodeName2'');');
      ExpFile.WRITE('      //   SalesLine.INSERT(TRUE);');
      ExpFile.WRITE('      // END;');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassSalesLineRef(SalesLine);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnBeforeGetSalesDocuments@11123340(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnBeforeGetSalesDocuments@50030(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      XmlNodeText@50005 : Text[1024];');
      ExpFile.WRITE('      RecRef@50003 : RecordRef;');
      ExpFile.WRITE('      FieldRef@50004 : FieldRef;');
      ExpFile.WRITE('      FieldNo@50006 : Integer;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // RecMgt.RetrieveRecRef(RecRef);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // XmlNodeText := RequestBuff.SelectSingleNodeText(''//ReasonCodeFilter'');');
      ExpFile.WRITE('      // IF XmlNodeText = '''' THEN');
      ExpFile.WRITE('      //   EXIT;');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // FieldNo := 73; // Reason Code');
      ExpFile.WRITE('      // IF RecRef.FIELDEXIST(FieldNo) THEN BEGIN');
      ExpFile.WRITE('      //   FieldRef := RecRef.FIELD(FieldNo);');
      ExpFile.WRITE('      //   FieldRef.SETFILTER(XmlNodeText);');
      ExpFile.WRITE('      // END;');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassRecRef(RecRef);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnBeforeCreateShipmentResp@11123342(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnBeforeCreateShipmentResponse@50035(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      SalesShipHeader@50004 : Record 110;');
      ExpFile.WRITE('      SalesShipLine@50003 : Record 111;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // RecMgt.RetrieveSalesShipHeaderRef(SalesShipHeader);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // SalesShipLine.SETRANGE("Document No.",SalesShipHeader."No.");');
      ExpFile.WRITE('      // IF SalesShipLine.COUNT > 1000 THEN');
      ExpFile.WRITE('      //   Params.LoadOrderLines := FALSE;');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassSalesShipHeaderRef(SalesShipHeader);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnGetSalesShipmentLine@11123336(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnGetSalesShipmentLine@50034(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      SalesShipLine@50004 : Record 111;');
      ExpFile.WRITE('      CurrentXMLNodeBuff@50003 : TEMPORARY Record 11123303;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // Context.GetXMLNodeBuff(CurrentXMLNodeBuff);');
      ExpFile.WRITE('      // RecMgt.RetrieveSalesShipLineRef(SalesShipLine);');
      ExpFile.WRITE('');
      ExpFile.WRITE(
        '      // CurrentXMLNodeBuff.AddFieldElement(''Shortcut Dimension 1 Code'',SalesShipLine."Shortcut Dimension 1 Code");');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassSalesShipLineRef(SalesShipLine);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnAfterCreateShipmentResp@11123341(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnAfterCreateShipmentResponse@50032(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      SalesShipHeader@50004 : Record 110;');
      ExpFile.WRITE('      SalesShipLine@50003 : Record 111;');
      ExpFile.WRITE('      CollectionNodeBuff@50005 : TEMPORARY Record 11123303;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // Context.GetXMLNodeBuff(CollectionNodeBuff);');
      ExpFile.WRITE('      // RecMgt.RetrieveSalesShipHeaderRef(SalesShipHeader);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // SalesShipLine.SETRANGE("Document No.",SalesShipHeader."No.");');
      ExpFile.WRITE('      // CollectionNodeBuff.AddFieldElement(''LinesCount'',FORMAT(SalesShipLine.COUNT));');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassSalesShipHeaderRef(SalesShipHeader);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnBeforeCreateInvoiceResp@11123343(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnBeforeCreateInvoiceResponse@50039(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      SalesInvHeader@50004 : Record 112;');
      ExpFile.WRITE('      SalesInvLine@50003 : Record 113;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // RecMgt.RetrieveSalesInvHeaderRef(SalesInvHeader);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // SalesInvLine.SETRANGE("Document No.",SalesInvHeader."No.");');
      ExpFile.WRITE('      // IF SalesInvLine.COUNT > 1000 THEN');
      ExpFile.WRITE('      //   Params.LoadOrderLines := FALSE;');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassSalesInvHeaderRef(SalesInvHeader);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnGetSalesInvoiceLine@11123344(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnGetSalesInvoiceLine@50038(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      SalesInvLine@50004 : Record 113;');
      ExpFile.WRITE('      CurrentXMLNodeBuff@50003 : TEMPORARY Record 11123303;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // Context.GetXMLNodeBuff(CurrentXMLNodeBuff);');
      ExpFile.WRITE('      // RecMgt.RetrieveSalesInvLineRef(SalesInvLine);');
      ExpFile.WRITE('');
      ExpFile.WRITE(
        '      // CurrentXMLNodeBuff.AddFieldElement(''Shortcut Dimension 1 Code'',SalesInvLine."Shortcut Dimension 1 Code");');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassSalesInvLineRef(SalesInvLine);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnAfterCreateInvoiceResp@11123345(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnAfterCreateInvoiceResponse@50037(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      SalesInvHeader@50004 : Record 112;');
      ExpFile.WRITE('      SalesInvLine@50003 : Record 113;');
      ExpFile.WRITE('      CollectionNodeBuff@50005 : TEMPORARY Record 11123303;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // Context.GetXMLNodeBuff(CollectionNodeBuff);');
      ExpFile.WRITE('      // RecMgt.RetrieveSalesInvHeaderRef(SalesInvHeader);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // SalesInvLine.SETRANGE("Document No.",SalesInvHeader."No.");');
      ExpFile.WRITE('      // CollectionNodeBuff.AddFieldElement(''LinesCount'',FORMAT(SalesInvLine.COUNT));');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassSalesInvHeaderRef(SalesInvHeader);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnBeforeCreateCrMemoResp@11123346(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnBeforeCreateCrMemoResponse@50043(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      SalesCrMemoHeader@50004 : Record 114;');
      ExpFile.WRITE('      SalesCrMemoLine@50003 : Record 115;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // RecMgt.RetrieveSalesCrMemoHeaderRef(SalesCrMemoHeader);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // SalesCrMemoLine.SETRANGE("Document No.",SalesCrMemoHeader."No.");');
      ExpFile.WRITE('      // IF SalesCrMemoLine.COUNT > 1000 THEN');
      ExpFile.WRITE('      //   Params.LoadOrderLines := FALSE;');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassSalesCrMemoHeaderRef(SalesCrMemoHeader);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnGetSalesCrMemoLine@11123347(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnGetSalesCrMemoLine@50042(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      SalesCrMemoLine@50004 : Record 115;');
      ExpFile.WRITE('      CurrentXMLNodeBuff@50003 : TEMPORARY Record 11123303;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // Context.GetXMLNodeBuff(CurrentXMLNodeBuff);');
      ExpFile.WRITE('      // RecMgt.RetrieveSalesCrMemoLineRef(SalesCrMemoLine);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // CurrentXMLNodeBuff.AddFieldElement(');
      ExpFile.WRITE('      //''Shortcut Dimension 1 Code'',SalesCrMemoLine."Shortcut Dimension 1 Code");');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassSalesCrMemoLineRef(SalesCrMemoLine);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnAfterCreateCrMemoResponse@11123348(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnAfterCreateCrMemoResponse@50041(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      SalesCrMemoHeader@50004 : Record 114;');
      ExpFile.WRITE('      SalesCrMemoLine@50003 : Record 115;');
      ExpFile.WRITE('      CollectionNodeBuff@50005 : TEMPORARY Record 11123303;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // Context.GetXMLNodeBuff(CollectionNodeBuff);');
      ExpFile.WRITE('      // RecMgt.RetrieveSalesCrMemoHeaderRef(SalesCrMemoHeader);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // SalesCrMemoLine.SETRANGE("Document No.",SalesCrMemoHeader."No.");');
      ExpFile.WRITE('      // CollectionNodeBuff.AddFieldElement(''LinesCount'',FORMAT(SalesCrMemoLine.COUNT));');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassSalesCrMemoHeaderRef(SalesCrMemoHeader);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnBeforeCreateRtrnRcptResp@11123349(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnBeforeCreateRtrnRcptResponse@50048(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      ReturnRcptHeader@50004 : Record 6660;');
      ExpFile.WRITE('      ReturnRcptLine@50003 : Record 6661;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // RecMgt.RetrieveReturnRcptHeaderRef(ReturnRcptHeader);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // ReturnRcptLine.SETRANGE("Document No.",ReturnRcptHeader."No.");');
      ExpFile.WRITE('      // IF ReturnRcptLine.COUNT > 1000 THEN');
      ExpFile.WRITE('      //   Params.LoadOrderLines := FALSE;');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassReturnRcptHeaderRef(ReturnRcptHeader);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnGetRtrnRcptLine@11123350(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnGetRtrnRcptLine@50047(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      ReturnRcptLine@50004 : Record 6661;');
      ExpFile.WRITE('      CurrentXMLNodeBuff@50003 : TEMPORARY Record 11123303;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // Context.GetXMLNodeBuff(CurrentXMLNodeBuff);');
      ExpFile.WRITE('      // RecMgt.RetrieveReturnRcptLineRef(ReturnRcptLine);');
      ExpFile.WRITE('      // CurrentXMLNodeBuff.AddFieldElement(''Shortcut Dimension 1 Code'',' +
        'ReturnRcptLine."Shortcut Dimension 1 Code");');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassReturnRcptLineRef(ReturnRcptLine);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetOnAfterCreateRtrnRcptResp@11123351(VAR ExpFile@11123304 : File);
    BEGIN
      ExpFile.WRITE('    PROCEDURE OnAfterCreateRtrnRcptResponse@50046(VAR RequestBuff@50002 : Record 11123303;' +
        'VAR ResponseBuff@50001 : Record 11123303;VAR Params@50000 : Record 11123310);');
      ExpFile.WRITE('    VAR');
      ExpFile.WRITE('      ReturnRcptHeader@50004 : Record 6660;');
      ExpFile.WRITE('      ReturnRcptLine@50003 : Record 6661;');
      ExpFile.WRITE('      CollectionNodeBuff@50005 : TEMPORARY Record 11123303;');
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('      // Context.GetXMLNodeBuff(CollectionNodeBuff);');
      ExpFile.WRITE('      // RecMgt.RetrieveReturnRcptHeaderRef(ReturnRcptHeader);');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // ReturnRcptLine.SETRANGE("Document No.",ReturnRcptHeader."No.");');
      ExpFile.WRITE('      // CollectionNodeBuff.AddFieldElement(''LinesCount'',FORMAT(ReturnRcptLine.COUNT));');
      ExpFile.WRITE('');
      ExpFile.WRITE('      // RecMgt.PassReturnRcptHeaderRef(ReturnRcptHeader);');
      ExpFile.WRITE('    END;');
      ExpFile.WRITE('');
    END;

    PROCEDURE SetDocumentation@11123304(VAR ExpFile@11123302 : File);
    BEGIN
      ExpFile.WRITE('    BEGIN');
      ExpFile.WRITE('    {');
      ExpFile.WRITE('      -------------------------------------------------------------------------------');
      ExpFile.WRITE('      Sana Commerce');
      ExpFile.WRITE('      -------------------------------------------------------------------------------');
      ExpFile.WRITE('      This codeunit has been automatically generated by Sana Commerce.');
      ExpFile.WRITE('      It is intended to be used for customization purpose.');
      ExpFile.WRITE('      Commented code in procedures is provided as an example.');
      ExpFile.WRITE('      You can add your custom code or/and uncomment the existing examples.');
      ExpFile.WRITE('      -------------------------------------------------------------------------------');
      ExpFile.WRITE('    }');
      ExpFile.WRITE('    END.');
      ExpFile.WRITE('  }');
      ExpFile.WRITE('}');
      ExpFile.WRITE('');
    END;

    PROCEDURE RegOperations@11123303(ID@11123303 : Integer);
    VAR
      Operation@11123302 : Record 11123302;
      i@11123304 : Integer;
      OperetionName@11123305 : ARRAY [46] OF Text[50];
    BEGIN
      OperetionName[1] := 'OnInitParams';
      OperetionName[2] := 'OnInitFieldValues';
      OperetionName[3] := 'OnBeforeGetProducts';
      OperetionName[4] := 'OnGetProduct';
      OperetionName[5] := 'OnAfterGetProduct';
      OperetionName[6] := 'OnBeforeGetVariants';
      OperetionName[7] := 'OnGetVariant';
      OperetionName[8] := 'OnGetAvailableStock';
      OperetionName[9] := 'OnGetSalesPrice';
      OperetionName[10] := 'OnGetListPrice';
      OperetionName[11] := 'OnBeforeGetCustomers';
      OperetionName[12] := 'OnGetCustomer';
      OperetionName[13] := 'OnAfterGetCustomer';
      OperetionName[14] := 'OnSaveCustomer';
      OperetionName[15] := 'OnBeforeGetSalespersons';
      OperetionName[16] := 'OnGetSalesperson';
      OperetionName[17] := 'OnAfterGetSalesperson';
      OperetionName[18] := 'OnAfterCreateRtrnRcptResponse';
      OperetionName[19] := 'OnBeforeGetContacts';
      OperetionName[20] := 'OnGetContact';
      OperetionName[21] := 'OnAfterGetContact';
      OperetionName[22] := 'OnSaveContact';
      OperetionName[23] := 'OnBeforeGetShippingMethods';
      OperetionName[24] := 'OnGetShippingMethod';
      OperetionName[25] := 'OnInitDocument';
      OperetionName[26] := 'OnBeforeSaveDocument';
      OperetionName[27] := 'OnAfterAddDocumentLines';
      OperetionName[28] := 'OnBeforeCreateDocResponse';
      OperetionName[29] := 'OnGetSalesLine';
      OperetionName[30] := 'OnAfterCreateDocResponse';
      OperetionName[31] := 'OnBeforeAddDocumentLine';
      OperetionName[32] := 'OnAddDocumentLine';
      OperetionName[33] := 'OnAfterAddDocumentLine';
      OperetionName[34] := 'OnBeforeGetSalesDocuments';
      OperetionName[35] := 'OnBeforeCreateShipmentResponse';
      OperetionName[36] := 'OnGetSalesShipmentLine';
      OperetionName[37] := 'OnAfterCreateShipmentResponse';
      OperetionName[38] := 'OnBeforeCreateInvoiceResponse';
      OperetionName[39] := 'OnGetSalesInvoiceLine';
      OperetionName[40] := 'OnAfterCreateInvoiceResponse';
      OperetionName[41] := 'OnBeforeCreateCrMemoResponse';
      OperetionName[42] := 'OnGetSalesCrMemoLine';
      OperetionName[43] := 'OnAfterCreateCrMemoResponse';
      OperetionName[44] := 'OnBeforeCreateRtrnRcptResponse';
      OperetionName[45] := 'OnGetRtrnRcptLine';
      OperetionName[46] := 'OnInitLineFieldValues';

      FOR i := 1 TO ARRAYLEN(OperetionName) DO BEGIN
        IF OperetionName[i] <> '' THEN
        IF Operation.GET(UPPERCASE(OperetionName[i])) THEN BEGIN
          Operation."Codeunit ID" := ID;
          Operation.MODIFY;
        END ELSE
          Operation.InsertFunction(OperetionName[i],ID,TRUE,FALSE);
      END;
    END;

    PROCEDURE InitializeNewObjectID@11123357(VAR Object@11123302 : Record 2000000001;ObjectType@11123303 : Integer;Registered@11123308 : Boolean;FromRange@11123304 : Integer;ToRange@11123305 : Integer;SuggestedName@11123306 : Text[30];SuggestedVersionList@11123307 : Text[80]) : Boolean;
    VAR
      ObjectID@11123309 : Integer;
      Wrapper@11123310 : Codeunit 11123308;
    BEGIN
      ObjectID := FindNotUsedObjectID(ObjectType,FromRange,ToRange);

      Object.INIT;
      Object.Type := ObjectType;
      Object."Company Name" := '';
      Object.ID := ObjectID;
      Object.Name := STRSUBSTNO(SuggestedName,ObjectID);
      Object.Compiled := Registered;
      Object."Version List" := SuggestedVersionList;
      Object.INSERT;

      IF Wrapper.NewObjectOpenForm(Object) THEN
        EXIT(TRUE);
    END;

    PROCEDURE FindNotUsedObjectID@11123355(ObjectType@11123302 : Integer;FromRange@11123303 : Integer;ToRange@11123304 : Integer) : Integer;
    VAR
      ObjectRec@11123306 : Record 2000000001;
      I@11123305 : Integer;
    BEGIN
      ObjectRec.SETRANGE(Type,ObjectType);
      ObjectRec.SETRANGE("Company Name",'');

      FOR I := FromRange TO ToRange DO BEGIN
        ObjectRec.SETRANGE(ID,I);
        IF ObjectRec.ISEMPTY THEN
          EXIT(I);
      END;
    END;

    BEGIN
    {
      2017-10-13 TPZ2027 EBAGIM
        Swaping Salesperon with MfrRep table
    }
    END.
  }
}

