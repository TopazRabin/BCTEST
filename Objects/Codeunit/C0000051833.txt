OBJECT Codeunit 51833 Page14002805EventSubscriber
{
  OBJECT-PROPERTIES
  {
    Date=05/18/21;
    Time=[ 9:54:55 AM];
    Modified=Yes;
    Version List=TPZ3166;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [EventSubscriber(Page,14002805,OnBeforeActionEvent,"Update Total Available Qty.")]
    LOCAL PROCEDURE Pg14002805_UpdateTotalAvailableQty_OnBeforeActionEvent@1000000000(VAR Rec@1000000000 : Record 5765);
    VAR
      WarehouseRequest@1000000001 : Record 5765;
      RFStatEntryTotal@1000000004 : Record 14002804;
      OutboundWhseRequestFilter@1000000003 : Record 14002863;
      WarehouseStreamlineMgt@1000000002 : Codeunit 14002809;
    BEGIN
      //UpdateTotalAvailableQty(Rec);//TPZ3166
    END;

    [EventSubscriber(Page,14002805,OnOpenPageEvent)]
    LOCAL PROCEDURE Pg14002805_OnOpenPage@1000000001(VAR Rec@1000000000 : Record 5765);
    BEGIN
      //UpdateTotalAvailableQty(Rec);//TPZ3166
    END;

    LOCAL PROCEDURE UpdateTotalAvailableQty@1000000003(WhseReq@1000000000 : Record 5765);
    VAR
      WarehouseRequest@1000000003 : Record 5765;
      AllowedLocationFilter@1000000001 : Code[250];
      WMSMgt@1000000002 : Codeunit 7302;
      OutboundWhseRequestFilter@1000000004 : Record 14002863;
      OutboundWhseRequestMgt@1000000006 : Codeunit 14002863;
      AssignedID@1000000005 : Code[50];
      CalculatedCorrectly@1000000007 : Boolean;
      WarehouseStreamlineMgt@1000000008 : Codeunit 14002809;
      RFStatEntryTotal@1000000009 : Record 14002804;
    BEGIN
      //-->TPZ3166
      CLEAR(AllowedLocationFilter);
      AllowedLocationFilter := WMSMgt.GetAllowedLocationFilter(USERID);
      WarehouseRequest.RESET;
      WarehouseRequest.FILTERGROUP(2);
      WarehouseRequest.SETRANGE(Type,WarehouseRequest.Type::Outbound);
      WarehouseRequest.SETFILTER("Location Code",AllowedLocationFilter);
      WarehouseRequest.FILTERGROUP(0);
      CLEAR(OutboundWhseRequestFilter);

      OutboundWhseRequestMgt.OpenOutboundWarehouseRequest(WhseReq,OutboundWhseRequestFilter,AssignedID);

      IF OutboundWhseRequestFilter.Code <> '' THEN
        OutboundWhseRequestFilter.GET(OutboundWhseRequestFilter.Code);
      SetTableViewFilters(OutboundWhseRequestFilter,WarehouseRequest);
      AssignedID := '';


      IF WarehouseRequest.FINDFIRST THEN REPEAT
        CalculatedCorrectly :=
          WarehouseStreamlineMgt.CalculateStatisticsSingle(WarehouseRequest,RFStatEntryTotal,OutboundWhseRequestFilter);
        IF CalculatedCorrectly THEN BEGIN
          WarehouseRequest."Total Available Qty." := RFStatEntryTotal."Total Available Qty. (Base)";
          WarehouseRequest.MODIFY;
        END ELSE BEGIN
          WarehouseRequest."Total Available Qty." := 0;
          WarehouseRequest.MODIFY;
        END;
      UNTIL WarehouseRequest.NEXT = 0;

      //<--TPZ3166
    END;

    [External]
    PROCEDURE SetTableViewFilters@1240020001(OutboundWhseRequestFilter@1000000000 : Record 14002863;VAR WarehouseRequest@1000000001 : Record 5765);
    VAR
      RFEmployeeSetup@1240020000 : Record 14002802;
    BEGIN
      //-->TPZ3166
      IF OutboundWhseRequestFilter."Location Code" = '' THEN
        WarehouseRequest.SETRANGE("Location Code")
      ELSE
        WarehouseRequest.SETFILTER("Location Code",OutboundWhseRequestFilter."Location Code");

      RFEmployeeSetup.GetRFEmployeeSetup(USERID);
      IF RFEmployeeSetup."Disable OWR Code Table Filters" THEN
        EXIT;

      IF OutboundWhseRequestFilter."Source Type Filter" = 0 THEN
        WarehouseRequest.SETRANGE("Source Type")
      ELSE
        WarehouseRequest.SETFILTER("Source Type",'%1',OutboundWhseRequestFilter."Source Type Filter");

      IF OutboundWhseRequestFilter."Document Status Filter" =
         OutboundWhseRequestFilter."Document Status Filter"::All
      THEN
        WarehouseRequest.SETRANGE("Document Status")
      ELSE BEGIN
        CASE OutboundWhseRequestFilter."Document Status Filter" OF
          OutboundWhseRequestFilter."Document Status Filter"::Open:
            WarehouseRequest.SETRANGE("Document Status",WarehouseRequest."Document Status"::Open);
          OutboundWhseRequestFilter."Document Status Filter"::Released:
            WarehouseRequest.SETRANGE("Document Status",WarehouseRequest."Document Status"::Released);
        END;
      END;

      IF OutboundWhseRequestFilter."Shipment Method Code Filter" = '' THEN
        WarehouseRequest.SETRANGE("Shipment Method Code")
      ELSE
        WarehouseRequest.SETFILTER("Shipment Method Code",OutboundWhseRequestFilter."Shipment Method Code Filter");

      IF OutboundWhseRequestFilter."Shipping Agent Code Filter" = '' THEN
        WarehouseRequest.SETRANGE("Shipping Agent Code")
      ELSE
        WarehouseRequest.SETFILTER("Shipping Agent Code",OutboundWhseRequestFilter."Shipping Agent Code Filter");

      IF OutboundWhseRequestFilter."Shipping Advice Filter" =
         OutboundWhseRequestFilter."Shipping Advice Filter"::All
      THEN
        WarehouseRequest.SETRANGE("Shipping Advice")
      ELSE BEGIN
        CASE OutboundWhseRequestFilter."Shipping Advice Filter" OF
          OutboundWhseRequestFilter."Shipping Advice Filter"::Partial:
            WarehouseRequest.SETRANGE("Shipping Advice",WarehouseRequest."Shipping Advice"::Partial);
          OutboundWhseRequestFilter."Shipping Advice Filter"::Complete:
            WarehouseRequest.SETRANGE("Shipping Advice",WarehouseRequest."Shipping Advice"::Complete);
        END;
      END;

      IF OutboundWhseRequestFilter."Destination No. Filter" = '' THEN
        WarehouseRequest.SETRANGE("Destination No.")
      ELSE
        WarehouseRequest.SETFILTER("Destination No.",OutboundWhseRequestFilter."Destination No. Filter");

      IF OutboundWhseRequestFilter."Action Code Filter" = '' THEN
        WarehouseRequest.SETRANGE("Action Code")
      ELSE
        WarehouseRequest.SETFILTER("Action Code",OutboundWhseRequestFilter."Action Code Filter");

      IF OutboundWhseRequestFilter."Action Responsible Filter" = '' THEN
        WarehouseRequest.SETRANGE("Action Responsible")
      ELSE
        WarehouseRequest.SETFILTER("Action Responsible",OutboundWhseRequestFilter."Action Responsible Filter");

      IF OutboundWhseRequestFilter."E-Ship Agent Service Filter" = '' THEN
        WarehouseRequest.SETRANGE("E-Ship Agent Service")
      ELSE
        WarehouseRequest.SETFILTER("E-Ship Agent Service",OutboundWhseRequestFilter."E-Ship Agent Service Filter");

      IF OutboundWhseRequestFilter."Shipment Date Filter" = '' THEN
        WarehouseRequest.SETRANGE("Shipment Date")
      ELSE
        WarehouseRequest.SETFILTER("Shipment Date",OutboundWhseRequestFilter.GetShipmentDateFilter(WORKDATE));

      IF OutboundWhseRequestFilter."EDI Order Filter" =
         OutboundWhseRequestFilter."EDI Order Filter"::All
      THEN
        WarehouseRequest.SETRANGE("EDI Order")
      ELSE BEGIN
        CASE OutboundWhseRequestFilter."EDI Order Filter" OF
          OutboundWhseRequestFilter."EDI Order Filter"::"EDI Only":
            WarehouseRequest.SETRANGE("EDI Order",TRUE);
          OutboundWhseRequestFilter."EDI Order Filter"::"No EDI Orders":
            WarehouseRequest.SETRANGE("EDI Order",FALSE);
        END;
      END;

      IF OutboundWhseRequestFilter."ATO Pick Required Filter" =
         OutboundWhseRequestFilter."ATO Pick Required Filter"::All
      THEN
        WarehouseRequest.SETRANGE("ATO Pick Required")
      ELSE BEGIN
        CASE OutboundWhseRequestFilter."ATO Pick Required Filter" OF
          OutboundWhseRequestFilter."ATO Pick Required Filter"::"ATO Orders Only":
            WarehouseRequest.SETRANGE("ATO Pick Required",TRUE);
          OutboundWhseRequestFilter."ATO Pick Required Filter"::"No ATO Orders":
            WarehouseRequest.SETRANGE("ATO Pick Required",FALSE);
        END;
      END;
      //<--TPZ3166
    END;

    BEGIN
    END.
  }
}

