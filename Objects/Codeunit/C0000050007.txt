OBJECT Codeunit 50007 Tester
{
  OBJECT-PROPERTIES
  {
    Date=05/18/21;
    Time=[ 8:21:38 AM];
    Modified=Yes;
    Version List=TPZ000.00.00;
  }
  PROPERTIES
  {
    OnRun=VAR
            PostedPackage@1170000000 : Record 14000704;
            tmpcustomer@1000000000 : Record 18;
            SalesLineMulti@1000000001 : Record 7004;
            SalesPrice@1000000002 : Record 7002;
            barcodeConv@1000000003 : Record 14000733;
            ReleaseSales@1000000004 : Codeunit 414;
            ShippingAccount@1000000005 : Record 14000714;
            CommjnlLine@1000000006 : Record 51705;
            SalesPrices@1000000007 : Record 7002;
            LastSalesPrice@1000000008 : Record 50004;
            tmpshipto@1000000009 : Record 222;
            SalesInvLine@1000000010 : Record 113;
            SalesInvHeader@1000000011 : Record 112;
            SalesCrMemoLine@1000000012 : Record 115;
            SalesCrMemoHeader@1000000013 : Record 114;
            ShiptoAddressDivision@1000000016 : Record 51002;
            CustomerDivision@1000000015 : Record 50007;
            Shiptoaddress@1000000014 : Record 222;
            itemUOM@1000000017 : Record 5404;
            SalesLineMultiGLOB@1000000018 : Record 7004;
            PurchasePrice@1000000019 : Record 7012;
            tmpitem@1000000020 : Record 27;
            tmpItemM@1000000021 : Record 27;
            CustCommGroup@1000000022 : Record 50039;
            tmpcommAmount@1000000023 : Decimal;
            StockkeepingUnit@1000000024 : Record 5700;
            CalendarMgmt@1000000026 : Codeunit 7600;
            SalesHeader@1000000025 : Record 36;
            UpgItem@1000000027 : Char;
            itemcategory@1000000028 : Record 5722;
            ProductGroup@1000000029 : Record 5723;
            BinContent@1000000030 : Record 7302;
            Bin@1000000031 : Record 7354;
            tmpCustomerDivision@1000000036 : Record 50007;
            SalesLineDiscount@1000000034 : Record 7004;
            hotSheetPrices@1000000033 : Record 50017;
            tmpSalesLineDiscount@1000000032 : Record 7004;
            EMailMgt@1000000047 : Codeunit 14000903;
            FaxMgmt@1000000046 : Codeunit 50010;
            SalesPostPrint@1000000045 : Codeunit 82;
            EmailInvoice@1000000044 : Boolean;
            PrintInvoice@1000000043 : Boolean;
            FaxInvoice@1000000042 : Boolean;
            EmailCredit@1000000041 : Boolean;
            EmailShipment@1000000040 : Boolean;
            JobQueueCat@1000000039 : Record 471;
            JobQueueEntry@1000000038 : Record 472;
            PostDescription@1000000037 : Text;
            tmpSalesPrice@1000000035 : Record 7002;
            custledgerentry@1000000048 : Record 21;
            salesinvoiceheader@1000000049 : Record 112;
            SalesCreditmemo@1000000050 : Record 114;
            BuyingGroupCustomer@1000000052 : Record 51126;
            tmpCust@1000000051 : Record 18;
            BankAccountLedgerEntry@1000000053 : Record 271;
            Salesline@1000000054 : Record 37;
            purchaseline@1000000055 : Record 39;
            package@1000000056 : Record 14000701;
            EDIBillOfLoading@1000000057 : Record 14000822;
            PackageLine@1000000058 : Record 14000702;
            ShipToAddress2@1000000060 : Record 222;
            STACount@1000000059 : Integer;
            ItemCrossRef@1000000061 : Record 5717;
            tmpItemCrossRef@1000000062 : Record 5717;
            TransferHeader@1000000063 : Record 5740;
            TransferLine@1000000064 : Record 5741;
            ShiptoAddressDivisionPDiv@1000000066 : Record 51002;
            ShiptoAddressDivisionPDiv_INS@1000000065 : Record 51002;
            MyNotification@1000000067 : Record 1518;
            ManifestLine@1000000068 : Record 14000713;
            tmplastsaleprice@1000000069 : Record 50004;
            ShipmentLine@1000000070 : Record 7321;
            tmpshipline@1000000071 : Record 7321;
            itemjournalline@1000000072 : Record 83;
            WhseItemJournal@1000000073 : Record 7311;
            location@1000000074 : Record 14;
            Item_UOM@1000000076 : Record 5404;
            PCSItem_UOM@1000000075 : Record 5404;
            StockStatusWkshLine@1000000077 : Record 50000;
            Contact@1000000078 : Record 5050;
            tmptime@1000000079 : Time;
            dateval@1000000080 : Date;
            Salesperson@1000000081 : Record 13;
          BEGIN

            WarehouseRequest.RESET;
            WarehouseRequest.MODIFYALL("Total Available Qty.",0);
            MESSAGE('Done');
            EXIT;

            EMailIntegration.AddReceiverTo('gaurav.gupta@topaz-usa.com;noreplyinvoice@topaz-usa.com');
            EMailIntegration.AddReceiverTo('gaurav.gupta@topaz-usa.com');
            MESSAGE('done');
            EXIT;
            item.RESET;
            item.SETFILTER("Order Code",'<>%1','');
            ERROR('count is ..%1',item.COUNT);
            IF item.FINDSET THEN
              item.MODIFYALL("IMAP Price",0);
            MESSAGE('done');
            EXIT;
            {LastSalesPrice.RESET;
              LastSalesPrice.ASCENDING;
              LastSalesPrice.SETCURRENTKEY("Sell-to Customer No.","Item No.","Document Date");
              LastSalesPrice.SETRANGE("Sell-to Customer No.",'00006');
              LastSalesPrice.SETRANGE("Item No.",'CF15/MS/35-46');
              LastSalesPrice.SETRANGE("Document Type",LastSalesPrice."Document Type"::"Stock Status");
              LastSalesPrice.SETRANGE("Document Date",CALCDATE('-CM-12M',WORKDATE),WORKDATE);// 100A/RS-51 100A/IF/277V-2
              IF LastSalesPrice.FINDFIRST THEN
                MESSAGE(FORMAT(LastSalesPrice));

            EXIT;
            }


            {Salesperson.RESET;
            SalesHeader.RESET;
            IF SalesHeader.GET(SalesHeader."Document Type"::Order,'SO1964379') THEN
            IF (Salesperson.GET(SalesHeader."RSM Code") OR Salesperson.GET(SalesHeader."Salesperson Code")) AND (Salesperson."Send Quote Confirmation") THEN
              MESSAGE('%1',Salesperson.Code)
            ELSE
              MESSAGE('Fail');


            EXIT;

            char := 'ï';
            MESSAGE('char is .. %1',FORMAT(char));
            //EVALUATE(Char,"Element Delimeter");
            EXIT;
            item.RESET;
            item.SETRANGE("Shortcut Dimension 5 Code",'L');
            IF item.FINDSET THEN
              REPEAT
                item."IMAP Price" := item."High Unit Price"*1.6;//TPZ3090
                item.MODIFY;
              UNTIL item.NEXT=0;
              EXIT;
            EMailListEntry.RESET;
            EMailListEntry.SETFILTER("Table ID",'<>%1',50027);
            EMailListEntry.DELETEALL;
            //MESSAGE(FORMAT(EMailListEntry.COUNT));
            EXIT;}

            {package.GET('P1085686');
            package.DELETE;



            PackageLine.SETFILTER("Package No.",'P1085686');
            IF PackageLine.FINDFIRST THEN REPEAT
            PackageLine.DELETE;
            UNTIL PackageLine.NEXT=0;
            MESSAGE('Done');
            EXIT;}
            //PriceIncrease;  //PVC Price Increase
            //MESSAGE('done');
            {
            {
            Salesline.RESET;
            IF Salesline.GET(Salesline."Document Type"::Order,'SO2060030',35000) THEN BEGIN
             Salesline."Purchase Order No." := '';
             Salesline."Purch. Order Line No.":=0;
             Salesline.MODIFY;
             MESSAGE('Done');
            END;
            EXIT;
            }{
            purchaseline.RESET;
            IF purchaseline.GET(Salesline."Document Type"::Order,'PO1025297',20000) THEN BEGIN
             purchaseline."Sales Order No." := '';
             purchaseline."Sales Order Line No.":=0;
             purchaseline.MODIFY;
             MESSAGE('Done');
            END;
            }
            // ExportEDIInvoiceWithDataError;
            // MESSAGE('Done');
            // EXIT;
            {EVALUATE(dateval,'01/01/2020');
            SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::"Return Order");
            SalesHeader.SETRANGE(Invoice,FALSE);
            SalesHeader.SETRANGE(Receive,TRUE);
            SalesHeader.SETFILTER("Location Code",'%1|%2','1','76');
            SalesHeader.SETFILTER("Document Date",'<%1',dateval);
            IF SalesHeader.FINDFIRST THEN REPEAT
              SalesHeader.Status := SalesHeader.Status::Open;
              SalesHeader.MODIFY;
              Salesline.SETRANGE("Document No.",SalesHeader."No.");
              Salesline.SETRANGE(Type,Salesline.Type::Item);
              IF Salesline.FINDSET THEN REPEAT
                Salesline.VALIDATE("Unit Price",0);
                Salesline.MODIFY;
              UNTIL Salesline.NEXT = 0;
            UNTIL SalesHeader.NEXT = 0;
            MESSAGE('Complete!');
            EXIT;}
            {Salesline.RESET;
            //Salesline.SETRANGE("Document Type",Salesline."Document Type"::"Return Order");
            Salesline.SETRANGE("Return Reason Code",'C08');
            //MESSAGE(FORMAT(Salesline.COUNT));
            IF Salesline.FINDFIRST THEN BEGIN
              REPEAT
                Salesline."Return Reason Code" := 'W08';
                Salesline.MODIFY;
              UNTIL Salesline.NEXT=0;
            END;
            EXIT;}
            {Salesline.RESET;
            IF Salesline.GET(Salesline."Document Type"::Order,'SO2035992',10000) THEN BEGIN
             Salesline."Purchase Order No." := 'PO1024900';
             Salesline."Purch. Order Line No." := 10000;
             Salesline.MODIFY;
            END;
            EXIT;}
            {package.GET('P1042845-SO1992239');
            package.Closed := FALSE;
            package.MODIFY;}


            {//>>RPS 09292020 http://helpdesk.topazusa.net:8080/WorkOrder.do?woMode=viewWO&woID=33078&&fromListView=true
            User.RESET;
            User.SETFILTER("User Name",'%1|%2|%3|%4|%5','TOPAZ\JCleveland');
            IF User.FINDSET THEN BEGIN
              REPEAT
                MyNotification.INIT();
                MyNotification.VALIDATE("User Id",User."User Name");
                MyNotification.VALIDATE("Notification Id",'{612a2701-4bbb-4c5b-b4c0-629d96b60644}');
                MyNotification.Name:='Warn about unposted documents.';
                MyNotification.VALIDATE(Enabled,FALSE);
                MyNotification.INSERT(TRUE);

                UserPreference.INIT  ;
                UserPreference."User ID" := User."User Name";
                UserPreference."Instruction Code" := 'QUERYPOSTONCLOSE';
                UserPreference.INSERT;
              UNTIL User.NEXT = 0;
            END;
            }
            //<<RPS 09292020
            {SalesHeader.RESET;
            SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::Order);
            SalesHeader.SETRANGE("Document Date",0D,TODAY-1);
            SalesHeader.SETRANGE("Sell-to Customer No.",'');
            //MESSAGE(FORMAT(SalesHeader.COUNT));
            IF SalesHeader.FINDSET THEN BEGIN
              REPEAT
                SalesHeader.DELETE(TRUE);
              UNTIL SalesHeader.NEXT=0;
            END;
            EXIT;}
            {SalesHeader.RESET;
            SalesHeader.SETRANGE("No.",'SO1984268');
            IF SalesHeader.FINDFIRST THEN BEGIN
                Salesline.RESET;
                Salesline.SETRANGE("Document No.",SalesHeader."No.");
                IF  Salesline.FINDSET THEN REPEAT
                    Salesline.DELETE;
              UNTIL Salesline.NEXT=0;
              SalesHeader.DELETE;
            END;
            EXIT;
            }
            //TPZ_SendASNNotification;
            //MESSAGE('done');
            //EXIT;
            {Receive.RESET;
            IF Receive.GET('R0046413') THEN BEGIN
             Receive.Closed  := FALSE;
             Receive.MODIFY;
            END;
            EXIT;}
            {
            JobQueueEntry.RESET;
            JobQueueEntry.SETRANGE("Job Queue Category Code",'salespost');
            //JobQueueEntry.SETRANGE(Status,JobQueueEntry.Status::Ready);
            JobQueueEntry.SETFILTER("Parameter String",'=%1','');
            IF JobQueueEntry.FINDSET THEN
                REPEAT
                  EVALUATE(tmptime,'11:55:00 PM');
                  JobQueueEntry.VALIDATE("Earliest Start Date/Time",CREATEDATETIME(WORKDATE,tmptime));
                  JobQueueEntry.MODIFY;
                  JobQueueEntry.Restart
                UNTIL JobQueueEntry.NEXT=0;

            EXIT;
            }
            //UpdateCommission;
            //EXIT;

            {UpdateReleaseSummary();
            EXIT;

            LastSalesPrice.RESET;
            LastSalesPrice.SETRANGE("Document Type",LastSalesPrice."Document Type"::"Posted Sales Invoice");
            IF LastSalesPrice.FINDFIRST THEN
              REPEAT
                IF salesinvoiceheader.GET(LastSalesPrice."Document No.")THEN BEGIN
                  IF salesinvoiceheader."Posting Date" <> LastSalesPrice."Last Price Date" THEN BEGIN
                    LastSalesPrice."Last Price Date":=salesinvoiceheader."Posting Date";
                    LastSalesPrice.MODIFY();
                  END;
                END;
              UNTIL LastSalesPrice.NEXT=0;}
            //UpdateCustomerLocation();
            //EXIT;
            {
            Contact.RESET;
            Contact.SETFILTER("Ship-to Code",'<>%1','');
            IF Contact.FINDSET THEN BEGIN
              REPEAT
                Contact.CALCFIELDS("Customer No.");
                Shiptoaddress.RESET;
                IF Shiptoaddress.GET(Contact."Customer No.",Contact."Ship-to Code") THEN BEGIN
                  Contact.Address := Shiptoaddress.Address;
                  Contact."Address 2" := Shiptoaddress."Address 2";
                  Contact.City := Shiptoaddress.City;
                  Contact."Post Code" := Shiptoaddress."Post Code";
                  Contact.County := Shiptoaddress.County;
                  Contact."E-Mail" := Shiptoaddress."E-Mail";
                  Contact.VALIDATE("Country/Region Code",Shiptoaddress."Country/Region Code");
                  Contact."Phone No." := Shiptoaddress."Phone No.";
                  Contact.MODIFY;
                END;
              UNTIL Contact.NEXT= 0;
            END;}
            {
            StockkeepingUnit.SETFILTER("Location Code",'%1','80');
            IF StockkeepingUnit.FINDFIRST THEN
              REPEAT
                  StockkeepingUnit."Next Counting Start Date" := 010120D;
                  StockkeepingUnit."Next Counting End Date" := 123120D;
                  StockkeepingUnit."Next Counting Period" := FORMAT(StockkeepingUnit."Next Counting Start Date") + '..' + FORMAT(StockkeepingUnit."Next Counting End Date");
                  StockkeepingUnit.MODIFY(TRUE);
              UNTIL StockkeepingUnit.NEXT=0;}
            {ModifyItemAttributes();
            EXIT;
            //------------------------
            item.GET('729');
            item.VALIDATE(Blocked,TRUE);
            item.MODIFY(TRUE);
            MESSAGE('done');}
            {
            Item_UOM.SETFILTER(Code,'M');
            IF Item_UOM.FINDFIRST THEN
              REPEAT
                IF PCSItem_UOM.GET(Item_UOM."Item No.",'PCS') THEN BEGIN
                  PCSItem_UOM.VALIDATE(Weight,Item_UOM.Weight/Item_UOM."Qty. per Unit of Measure");
                  PCSItem_UOM.MODIFY(TRUE);
                END;
              UNTIL Item_UOM.NEXT=0;
            }
            {
            IF TransferHeader.GET('TO1016475') THEN BEGIN
            TransferHeader."Transfer-to Code":='Non_Inv';
             IF location.GET('Non_Inv') THEN BEGIN
                  TransferHeader."Transfer-to Name" := location.Name;
                  TransferHeader."Transfer-to Name 2" := location."Name 2";
                  TransferHeader."Transfer-to Address" := location.Address;
                  TransferHeader."Transfer-to Address 2" := location."Address 2";
                  TransferHeader."Transfer-to Post Code" := location."Post Code";
                  TransferHeader."Transfer-to City" := location.City;
                  TransferHeader."Transfer-to County" := location.County;
                  TransferHeader."Trsf.-to Country/Region Code" := location."Country/Region Code";
                  TransferHeader."Transfer-to Contact" := location.Contact;
                  TransferHeader.MODIFY;
                  TransferLine.SETRANGE("Document No.",TransferHeader."No.");
                  IF TransferLine.FINDFIRST THEN
                    REPEAT
                      TransferLine."Transfer-to Code":='Non_Inv';
                      TransferLine.MODIFY;
                    UNTIL TransferLine.NEXT=0;

            END;
            END;
            }
            {IF PostedPackage.GET('P836452') THEN BEGIN
              PostedPackage."External Tracking No." := '';
              PostedPackage.MODIFY;
            END;
            }
            //IF item.GET('') THEN

            //item.DELETE;
            {Salesline.RESET;
            Salesline.SETRANGE("Document No.",'');
            IF Salesline.FINDSET THEN
              REPEAT
                MESSAGE(Salesline."Document No.");
                IF CONFIRM('delete ') THEN
                   Salesline.DELETE;
              UNTIL Salesline.NEXT=0
             }
            {{
            {
            {
            //UpdateCSR;

            {
            CustLedgerEntry.RESET;
            CustLedgerEntry.FINDSET;
            REPEAT
              IF CustLedgerEntry."Due Date" <> 0D THEN BEGIN
                //CustLedgerEntry."Overdue Balance Grace Date" := CALCDATE('30D',CustLedgerEntry."Due Date");
                EVALUATE(CustLedgerEntry."Overdue Balance Grace Period",'30D');
                CustLedgerEntry.MODIFY;
              END;
            UNTIL CustLedgerEntry.NEXT = 0;

            CustLedgEntryRemTAmtQuery.SETRANGE(Customer_No,'53325');
            CustLedgEntryRemTAmtQuery.SETRANGE(IsOpen,TRUE);
            CustLedgEntryRemTAmtQuery.SETFILTER(Overdue_Balance_Grace_Date,'<%1',WORKDATE);
            CustLedgEntryRemTAmtQuery.OPEN;

            IF CustLedgEntryRemTAmtQuery.READ THEN
              MESSAGE('%1',CustLedgEntryRemTAmtQuery.Sum_Remaining_Amt_LCY);


            item.RESET;
            item.SETRANGE(Blocked,item.Blocked::" ");
            item.SETRANGE(item."Shortcut Dimension 5 Code",'E');
            item.SETRANGE("Item Category Code",'WP-VP');
            item.FINDSET;
            REPEAT
              item.VALIDATE("Visible in Webshop",TRUE);
              item.MODIFY;
              COMMIT;
            UNTIL item.NEXT = 0;


            tmpcustomer.SETFILTER("Customer Group Code",'CES');
            tmpcustomer.SETRANGE("Electric Division",TRUE);

            IF tmpcustomer.FINDFIRST THEN
              REPEAT
                SalesLineMulti.INIT();
                SalesLineMulti."Sales Type":=SalesLineMulti."Sales Type"::Customer;
                SalesLineMulti.VALIDATE("Sales Code",tmpcustomer."No.");
                SalesLineMulti.Type:=SalesLineMulti.Type::"Item Disc. Group";
                SalesLineMulti.VALIDATE(Code,'CABLESUP');
                SalesLineMulti."Starting Date":=WORKDATE;
                SalesLineMulti.VALIDATE("Line Discount %",57.5);
                SalesLineMulti.INSERT(TRUE);
                SalesLineMulti.INIT();

               SalesLineMulti."Sales Type":=SalesLineMulti."Sales Type"::Customer;
                SalesLineMulti.VALIDATE("Sales Code",tmpcustomer."No.");
                SalesLineMulti.Type:=SalesLineMulti.Type::"Item Disc. Group";
                SalesLineMulti.VALIDATE(Code,'Elbal ');
                SalesLineMulti."Starting Date":=WORKDATE;
                SalesLineMulti.VALIDATE("Line Discount %",54);
                SalesLineMulti.INSERT(TRUE);

              UNTIL tmpcustomer.NEXT=0;
                SalesLineMulti.INIT();
                SalesLineMulti."Sales Type":=SalesLineMulti."Sales Type"::Customer;
                SalesLineMulti.VALIDATE("Sales Code",tmpcustomer."No.");
                SalesLineMulti.Type:=SalesLineMulti.Type::"Item Disc. Group";
                SalesLineMulti.VALIDATE(Code,'Elbal ');
                SalesLineMulti."Starting Date":=WORKDATE;
                SalesLineMulti.VALIDATE("Line Discount %",60);
                SalesLineMulti.INSERT(TRUE);

              UNTIL tmpcustomer.NEXT=0;

            tmpcustomer.SETFILTER("Customer Group Code",'CES');
            //tmpCustomer.SETRANGE("Electric Division",TRUE);
            IF tmpcustomer.FINDFIRST THEN
              REPEAT
              SalesPrice.SETRANGE("Sales Type",SalesPrice."Sales Type"::Customer);
              SalesPrice.SETRANGE("Sales Code",tmpcustomer."No.");
              SalesPrice.SETFILTER("Item No.",'WCIU2M');
              IF SalesPrice.FINDFIRST THEN BEGIN
                 SalesPrice."Unit Price":=12.25;
                 SalesPrice.MODIFY(TRUE);
              END;
            UNTIL tmpcustomer.NEXT=0;

            MESSAGE('DONE');

            //MESSAGE('%1',EmailHandling.GettDivisionCode);
            barcodeConv.SETFILTER("Item No.",'<>%1','');
            barcodeConv.SETFILTER("Unit of Measure Code",'PCS');
            IF barcodeConv.FINDFIRST THEN
               REPEAT
                  item.GET(barcodeConv."Item No.");
                  item."Item UPC/EAN Number":=barcodeConv."Bar Code";
                  item.MODIFY();
               UNTIL barcodeConv.NEXT=0;

            MESSAGE('DONE');


            tmpcustomer.RESET();


            tmpcustomer.SETRANGE("Electric Division",TRUE);
            IF tmpcustomer.FINDFIRST THEN
              REPEAT

                SalesLineMulti.SETRANGE("Sales Type",SalesLineMulti."Sales Type"::Customer);
                SalesLineMulti.SETRANGE("Sales Code",tmpcustomer."No.");
                SalesLineMulti.SETRANGE(Type,SalesLineMulti.Type::"Item Disc. Group");
                SalesLineMulti.SETFILTER(Code,'ELBAL|COUPAL');
                IF SalesLineMulti.FINDFIRST THEN
                  REPEAT
                    SalesLineMulti.VALIDATE("Line Discount %",52.5);
                    SalesLineMulti.MODIFY(TRUE);
                  UNTIL SalesLineMulti.NEXT=0;

              UNTIL tmpcustomer.NEXT=0;
              MESSAGE('DONE');
              }
              {
            SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::Quote);
            SalesHeader.SETRANGE("Lock Price",FALSE);
            SalesHeader.SETRANGE("Shortcut Dimension 5 Code",'E');
            SalesHeader.SETRANGE(Status,SalesHeader.Status::Released);
            IF SalesHeader.FINDFIRST THEN
              REPEAT
                ReleaseSales.PerformManualReopen(SalesHeader);
                SalesHeader."Lock Price":=TRUE;
                SalesHeader.MODIFY();
                ReleaseSales.PerformManualRelease(SalesHeader);
              UNTIL SalesHeader.NEXT=0;
             MESSAGE('Done');
               }
            {
            ShippingAccount.SETFILTER("Third Party Address",'');
            IF ShippingAccount.FINDFIRST THEN
               REPEAT
                IF tmpcustomer.GET(ShippingAccount."Ship-to No.") THEN BEGIN
                    ShippingAccount."Third Party Address":=tmpcustomer.Address;
                    ShippingAccount."Third Party City":=tmpcustomer.City;
                    ShippingAccount."Third Party ZIP Code":=tmpcustomer."Post Code";
                    ShippingAccount.MODIFY();
                END;
              UNTIL ShippingAccount.NEXT=0;
            MESSAGE('Done');

             CommjnlLine.SETRANGE("Posting Date",050916D);
             CommjnlLine.SETFILTER("Journal Batch Name",'JACKIE');
             IF CommjnlLine.FINDFIRST THEN
              REPEAT
                 CommjnlLine.VALIDATE("Posting Date",WORKDATE);
                 CommjnlLine.MODIFY();
              UNTIL CommjnlLine.NEXT=0;


                SalesLineMulti.INIT();
                SalesLineMulti."Sales Type":=SalesLineMulti."Sales Type"::Customer;
                SalesLineMulti.VALIDATE("Sales Code",tmpcustomer."No.");
                SalesLineMulti.Type:=SalesLineMulti.Type::"Item Disc. Group";
                SalesLineMulti.VALIDATE(Code,'STLBOX');
                SalesLineMulti."Starting Date":=WORKDATE;
                SalesLineMulti.VALIDATE("Hot Sheet Code",'CES STLBX');
                SalesLineMulti.VALIDATE(Multiplier,1);
                //SalesLineMulti.VALIDATE("Line Discount %",0);
                IF SalesLineMulti.INSERT(TRUE)THEN;




                SalesLineMulti.INIT();
                SalesLineMulti."Sales Type":=SalesLineMulti."Sales Type"::Customer;
                SalesLineMulti.VALIDATE("Sales Code",tmpcustomer."No.");
                SalesLineMulti.Type:=SalesLineMulti.Type::"Item Disc. Group";
                SalesLineMulti.VALIDATE(Code,'STLCOV');
                SalesLineMulti."Starting Date":=WORKDATE;
                SalesLineMulti.VALIDATE("Hot Sheet Code",'');
                SalesLineMulti.VALIDATE("Line Discount %",57);
                IF SalesLineMulti.INSERT(TRUE)THEN;

                SalesLineMulti.INIT();
                SalesLineMulti."Sales Type":=SalesLineMulti."Sales Type"::Customer;
                SalesLineMulti.VALIDATE("Sales Code",tmpcustomer."No.");
                SalesLineMulti.Type:=SalesLineMulti.Type::"Item Disc. Group";
                SalesLineMulti.VALIDATE(Code,'STLCOV');
                SalesLineMulti."Starting Date":=WORKDATE;
                SalesLineMulti.VALIDATE("Hot Sheet Code",'CES STLBX');
                SalesLineMulti.VALIDATE(Multiplier,1);
                //SalesLineMulti.VALIDATE("Line Discount %",0);
                IF SalesLineMulti.INSERT(TRUE)THEN;

              UNTIL tmpcustomer.NEXT=0;
            }

            {

            tmpcustomer.SETFILTER("Customer Group Code",'CES');
            tmpcustomer.SETRANGE("Electric Division",TRUE);
            tmpcustomer.SETFILTER("No.",'51507');
            IF tmpcustomer.FINDFIRST THEN
                REPEAT
                  SalesPrices.INIT();
                  SalesPrices."Sales Type":=SalesPrices."Sales Type"::Customer;
                  SalesPrices.VALIDATE("Sales Code",tmpcustomer."No.");
                  SalesPrices.VALIDATE("Item No.",'WCIU1');
                  SalesPrices.VALIDATE("Unit of Measure Code",'PCS');
                  SalesPrices.VALIDATE("Unit Price",3.4);
                  SalesPrices."Starting Date":=061116D;
                  SalesPrices."Ending Date":=063016D;
                  SalesPrices.INSERT(TRUE);
                  SalesPrices.INIT();
                  SalesPrices."Sales Type":=SalesPrices."Sales Type"::Customer;
                  SalesPrices.VALIDATE("Sales Code",tmpcustomer."No.");
                  SalesPrices.VALIDATE("Item No.",'WCIU1');
                  SalesPrices.VALIDATE("Unit of Measure Code",'PCS');
                  SalesPrices.VALIDATE("Unit Price",3.8706);
                  SalesPrices."Starting Date":=071116D;
                  SalesPrices."Ending Date":=0D;
                  SalesPrices.INSERT(TRUE);
            UNTIL tmpcustomer.NEXT=0;

             }

            {//DCPerformanceGathering();
            LastSalesPrice.SETRANGE("Document Type",LastSalesPrice."Document Type"::"Posted Sales Invoice");
            IF LastSalesPrice.FINDFIRST THEN
              REPEAT
                IF SalesInvoiceHeader.GET(LastSalesPrice."Document No.")THEN BEGIN
                  LastSalesPrice."Shortcut Dimension 5 Code":=SalesInvoiceHeader."Shortcut Dimension 5 Code";
                  LastSalesPrice."Country/Region Code":=SalesInvoiceHeader."Sell-to Country/Region Code";
                  LastSalesPrice.MODIFY();
                END;
              UNTIL LastSalesPrice.NEXT=0;
             }

                {
            //tmpcustomer.SETRANGE("Ship-to Code Mandatory",FALSE);
            //IF tmpcustomer.FINDFIRST THEN
             // REPEAT
              //tmpshipto.SETFILTER("Customer No.",'00016');
              tmpshipto.SETFILTER("Telex No.",'Eran Test');
              IF tmpshipto.FINDFIRST THEN
                REPEAT

                 tmpcustomer.GET(tmpshipto."Customer No.");
                 tmpshipto.Contact:=tmpcustomer.Contact;
                 tmpshipto.MODIFY();
                UNTIL tmpshipto.NEXT=0;
                   {
                tmpshipto.INIT;
                tmpshipto.VALIDATE("Customer No.",tmpcustomer."No.");
                tmpshipto.Code:='1';
                tmpshipto.Name:= tmpcustomer.Name;
                tmpshipto."Name 2":= tmpcustomer."Name 2";
                tmpshipto.Address:= tmpcustomer.Address;
                tmpshipto."Address 2" := tmpcustomer."Address 2";
                tmpshipto.City:=tmpcustomer.City;
                tmpshipto.Contact :=tmpcustomer.City;
                tmpshipto."Country/Region Code":=tmpcustomer."Country/Region Code";
                tmpshipto.County :=tmpcustomer.County;
                tmpshipto."Post Code":=tmpcustomer."Post Code";
                tmpshipto."Telex No.":='Eran Test';
                tmpshipto.INSERT;
                tmpcustomer.VALIDATE("Default Ship-for Code",'1');
                tmpcustomer.VALIDATE("Ship-to Code Mandatory",TRUE);
                 tmpcustomer.MODIFY();
              END;
              UNTIL tmpcustomer.NEXT=0;
                    }
            MESSAGE('Done');
                 }

            {
            SalesInvHeader.SETRANGE("Posting Date",061116D,063016D);
            SalesInvHeader.SETFILTER("Mfr. Rep. Code",'GA');
            IF SalesInvHeader.FINDFIRST THEN
              REPEAT
                SalesInvLine.SETRANGE("Document No.",SalesInvHeader."No.");
                SalesInvLine.SETRANGE("Mfr. Rep. Comm. %",0);
                IF SalesInvLine.FINDFIRST THEN
                  REPEAT

                    WITH SalesInvLine DO BEGIN
                      IF
                         ((Type = Type::Item) OR
                          ((Type = Type::"G/L Account") AND
                           "Commission Payable") OR
                          ((Type = Type::"Charge (Item)") AND
                           "Commission Payable"))
                      THEN BEGIN
                        "Mfr. Rep. Comm. %":=5;
                        "Mfr. Rep. Comm. Amount" := (5 * "Line Amount" ) / 100;
                        MODIFY();
                      END;
                   END;
                    UNTIL SalesInvLine.NEXT=0;
                 UNTIL SalesInvHeader.NEXT=0;
            MESSAGE('Done');
             }
            {
            SalesCrMemoHeader.SETRANGE("Posting Date",060116D,063016D);
            SalesCrMemoHeader.SETFILTER("Mfr. Rep. Code",'GA');
            IF SalesCrMemoHeader.FINDFIRST THEN
              REPEAT
                SalesCrMemoLine.SETRANGE("Document No.",SalesCrMemoHeader."No.");
                SalesCrMemoLine.SETRANGE("Mfr. Rep. Comm. %",0);
                IF SalesCrMemoLine.FINDFIRST THEN
                  REPEAT

                    WITH SalesCrMemoLine DO BEGIN
                      IF
                         ((Type = Type::Item) OR
                          ((Type = Type::"G/L Account") AND
                           "Commission Payable") OR
                          ((Type = Type::"Charge (Item)") AND
                           "Commission Payable"))
                      THEN BEGIN
                        "Mfr. Rep. Comm. %":=5;
                        "Mfr. Rep. Comm. Amount" := (5 * "Line Amount" ) / 100;
                        MODIFY();
                      END;
                   END;
                    UNTIL SalesCrMemoLine.NEXT=0;
                 UNTIL SalesCrMemoHeader.NEXT=0;
            MESSAGE('Done');
             }
                 {
            IF Shiptoaddress.FINDFIRST THEN
              REPEAT
                  ShiptoAddressDivision.SETRANGE("Customer No.",Shiptoaddress."Customer No.");
                  ShiptoAddressDivision.SETRANGE("Ship-to Code",Shiptoaddress.Code);
                  IF ShiptoAddressDivision.FINDFIRST THEN BEGIN
                       REPEAT
                          IF CustomerDivision.GET(ShiptoAddressDivision."Customer No.",ShiptoAddressDivision."Shortcut Dimension 5 Code") THEN BEGIN
                               IF ShiptoAddressDivision."Location Code"='' THEN
                                  ShiptoAddressDivision."Location Code":=CustomerDivision."Location Code";
                               IF ShiptoAddressDivision."Shortcut Dimension 5 Code"='' THEN
                                  ShiptoAddressDivision."Shortcut Dimension 5 Code":=CustomerDivision."Shortcut Dimension 5 Code";
                               ShiptoAddressDivision.MODIFY();
                          END;
                       UNTIL ShiptoAddressDivision.NEXT=0;
                   END ELSE BEGIN          //No ship-to division found
                        CustomerDivision.SETRANGE("Customer No.",Shiptoaddress."Customer No.");
                        IF CustomerDivision.FINDFIRST THEN
                            REPEAT
                              ShiptoAddressDivision.INIT();
                              ShiptoAddressDivision.VALIDATE("Customer No.",CustomerDivision."Customer No.");
                              ShiptoAddressDivision.VALIDATE("Ship-to Code",Shiptoaddress.Code);
                              ShiptoAddressDivision.VALIDATE("Shortcut Dimension 5 Code",CustomerDivision."Shortcut Dimension 5 Code");
                              ShiptoAddressDivision.VALIDATE("Location Code",CustomerDivision."Location Code");
                              ShiptoAddressDivision.INSERT(TRUE);
                            UNTIL CustomerDivision.NEXT=0;
                   END;
              UNTIL Shiptoaddress.NEXT=0;

                  }

            {
            item.SETFILTER("Item UPC/EAN Number",'<>%1','');
            IF item.FINDFIRST THEN
              REPEAT
                      barcodeConv.RESET();
                      barcodeConv.SETRANGE(Type,barcodeConv.Type::Item);
                      barcodeConv.SETFILTER("Unit of Measure Code",'PCS');
                      barcodeConv.SETRANGE("Bar Code",item."Item UPC/EAN Number");
                      IF barcodeConv.FINDFIRST THEN BEGIN
                        IF itemUOM.GET(item."No.",'PCS') THEN BEGIN
                           barcodeConv.VALIDATE("Item No.",item."No.");
                           barcodeConv.VALIDATE("Unit of Measure Code",'PCS');
                           barcodeConv.Description:='8/8/16M';
                           IF barcodeConv.MODIFY(TRUE)THEN;
                        END;

                      END ELSE BEGIN
                        IF itemUOM.GET(item."No.",'PCS') THEN BEGIN
                          barcodeConv.INIT();
                          barcodeConv.Type:=barcodeConv.Type::Item;
                          barcodeConv.VALIDATE("Item No.",item."No.");
                          barcodeConv.VALIDATE("Unit of Measure Code",'PCS');
                          barcodeConv.VALIDATE("Bar Code",item."Item UPC/EAN Number");
                          barcodeConv.Description:='8/8/16I';
                          IF barcodeConv.INSERT(TRUE)THEN;
                        END;
                      END;



              UNTIL item.NEXT=0;

            MESSAGE('Done');
             }

            {
            IF tmpcustomer.FINDFIRST THEN
              REPEAT
                tmpcustomer.CALCFIELDS("Electric Division");
                IF tmpcustomer."Electric Division"= FALSE THEN BEGIN
                  SalesLineMulti.RESET();
                  SalesLineMulti.SETRANGE("Sales Type",SalesLineMulti."Sales Type"::Customer);
                  SalesLineMulti.SETRANGE("Sales Code",tmpcustomer."No.");
                  SalesLineMulti.SETRANGE(Type,SalesLineMulti.Type::"Item Disc. Group");
                  SalesLineMulti.SETFILTER(Code,'COUPAL|ELBAL');

                  SalesLineMulti.SETRANGE("Line Discount %",60);
                  IF SalesLineMulti.FINDFIRST THEN
                   REPEAT
                     SalesLineMulti.DELETE(TRUE);
                    UNTIL SalesLineMulti.NEXT=0;

                END;
              UNTIL tmpcustomer.NEXT=0;
                MESSAGE('Done');
            }

             {
            //SalesInvHeader.SETRANGE("Posting Date",080116D,082216D);
            SalesInvHeader.SETFILTER("No.",'1144476');

            //SalesInvHeader.SETFILTER("Sell-to Customer No.",'50356|51442|51564|52540|53353|55397|55762');
            IF SalesInvHeader.FINDFIRST THEN
              REPEAT
                SalesInvLine.SETRANGE("Document No.",SalesInvHeader."No.");
                //SalesInvLine.SETRANGE("Mfr. Rep. Comm. %",5);
                IF SalesInvLine.FINDFIRST THEN
                  REPEAT

                    WITH SalesInvLine DO BEGIN
                      IF
                         ((Type = Type::Item) OR
                          ((Type = Type::"G/L Account") AND
                           "Commission Payable") OR
                          ((Type = Type::"Charge (Item)") AND
                           "Commission Payable"))
                      THEN BEGIN
                        "Mfr. Rep. Comm. %":=2;
                        "Mfr. Rep. Comm. Amount" := (2 * "Line Amount" ) / 100;
                        MODIFY();
                      END;
                   END;
                    UNTIL SalesInvLine.NEXT=0;
                    SalesInvHeader."Mfr. Rep. Comm. %":=2;
                    SalesInvHeader.MODIFY();
                 UNTIL SalesInvHeader.NEXT=0;

            }
               {
            WORKDATE := CALCDATE('<CM+1D-1M-1D>',TODAY);
            CustomerDivision.SETFILTER("Shortcut Dimension 5 Code",'L');
            IF CustomerDivision.FINDFIRST THEN
              REPEAT
               Customer.GET(CustomerDivision."Customer No.");
               //Customer.SETRECFILTER;
               REPORT.SAVEASPDF(10072,'c:\temp\test\'+Customer."No."+'.PDF',Customer);
               //MESSAGE('Done');
             UNTIL CustomerDivision.NEXT=0;

            MESSAGE('Done');
                   }

            {
            SalesInvHeader.SETFILTER("No.",'1144179');

            //SalesInvHeader.SETFILTER("Sell-to Customer No.",'50356|51442|51564|52540|53353|55397|55762');
            IF SalesInvHeader.FINDFIRST THEN
              REPEAT
                SalesInvLine.SETRANGE("Document No.",SalesInvHeader."No.");
                //SalesInvLine.SETRANGE("Mfr. Rep. Comm. %",5);
                IF SalesInvLine.FINDFIRST THEN
                  REPEAT

                    WITH SalesInvLine DO BEGIN
                      IF
                         ((Type = Type::Item) OR
                          ((Type = Type::"G/L Account") AND
                           "Commission Payable") OR
                          ((Type = Type::"Charge (Item)") AND
                           "Commission Payable"))
                      THEN BEGIN
                        "Mfr. Rep. Comm. %":=5;
                        "Mfr. Rep. Comm. Amount" := (5 * "Line Amount" ) / 100;
                        MODIFY();
                      END;
                   END;
                    UNTIL SalesInvLine.NEXT=0;
                    SalesInvHeader."Mfr. Rep. Comm. %":=5;
                    SalesInvHeader.MODIFY();
                 UNTIL SalesInvHeader.NEXT=0;
             }

             {
            tmpcustomer.SETFILTER("Customer Group Code",'<>%1','CES');
            //tmpcustomer.SETRANGE("Electric Division",TRUE);

            IF tmpcustomer.FINDFIRST THEN BEGIN
               REPEAT
                  tmpcustomer.CALCFIELDS("Electric Division");
                  IF (tmpcustomer."Electric Division")  THEN  BEGIN


                   SalesLineMulti.INIT();
                   SalesLineMulti."Sales Type":=SalesLineMulti."Sales Type"::Customer;
                   SalesLineMulti.VALIDATE("Sales Code",tmpcustomer."No.");
                   SalesLineMulti.Type:=SalesLineMulti.Type::"Item Disc. Group";
                   SalesLineMulti.VALIDATE(Code,'CMBCOP');
                   SalesLineMulti."Starting Date":=WORKDATE;
                   SalesLineMulti.VALIDATE("Line Discount %",62.5);
                   //SalesLineMulti.VALIDATE("Line Discount %",57.5);
                   IF SalesLineMulti.INSERT(TRUE) THEN;
                   //SalesLineMulti.INIT();
                  END;

              UNTIL tmpcustomer.NEXT=0;

            END;
            }

                {

            SalesLineMultiGLOB.SETFILTER(Code,'STLBOX');

            IF SalesLineMultiGLOB.FINDFIRST THEN
              REPEAT
                SalesLineMulti.INIT();
                SalesLineMulti."Sales Type":=SalesLineMulti."Sales Type"::Customer;
                SalesLineMulti.VALIDATE("Sales Code",SalesLineMultiGLOB."Sales Code");
                SalesLineMulti.Type:=SalesLineMulti.Type::"Item Disc. Group";
                SalesLineMulti.VALIDATE(Code,'STLBOX');
                SalesLineMulti."Starting Date":=WORKDATE;
                SalesLineMulti.VALIDATE("Line Discount %",62.5);
                IF SalesLineMulti.INSERT(TRUE)THEN;


              UNTIL SalesLineMultiGLOB.NEXT=0;
                 }
              {
            PurchasePrice.SETFILTER("Vendor No.",'V10896|V11403');
            IF PurchasePrice.FINDFIRST THEN
                REPEAT
                  PurchasePrice.VALIDATE(Inspection,TRUE);
                  PurchasePrice.MODIFY();
                UNTIL PurchasePrice.NEXT=0;
               }
             {
            tmpitem.SETRANGE("Visible in Webshop",TRUE);
            IF tmpitem.FINDFIRST THEN
              REPEAT
                IF tmpitem."WebShop Item Category Code"='' THEN BEGIN
                   tmpItemM.GET(tmpitem."No.");
                   tmpItemM.VALIDATE("Visible in Webshop",FALSE);
                   tmpItemM.MODIFY();
                END;
              UNTIL tmpitem.NEXT=0;
              }
                   {
            tmpcustomer.SETFILTER("Customer Group Code",'Sonepar|Rexel|Anixter|Gexpro|Mayer|Graybar');
            IF tmpcustomer.FINDFIRST THEN
              REPEAT
               tmpcustomer."Credit Hold Override":=TRUE;
               tmpcustomer.MODIFY();
              UNTIL tmpcustomer.NEXT=0;
                    }
            {
            CustomerDivision.SETFILTER("Mfr. Rep. Code",'GA');
            CustomerDivision.SETFILTER("Shortcut Dimension 5 Code",'E');
            IF CustomerDivision.FINDFIRST THEN
              REPEAT
                CustCommGroup.INIT();
                CustCommGroup."Customer No.":=CustomerDivision."Customer No.";
                CustCommGroup.VALIDATE("Item Category Code",'ENC');
                CustCommGroup.VALIDATE("Product Group Code",'RGD-TUBE');
                CustCommGroup.VALIDATE("Commission %",2);
                CustCommGroup.VALIDATE("Division Code",CustomerDivision."Shortcut Dimension 5 Code");
                CustCommGroup.INSERT();

                CustCommGroup.INIT();
                CustCommGroup."Customer No.":=CustomerDivision."Customer No.";
                CustCommGroup.VALIDATE("Item Category Code",'ENC');
                CustCommGroup.VALIDATE("Product Group Code",'EMT-TUBE');
                CustCommGroup.VALIDATE("Commission %",2);
                CustCommGroup.VALIDATE("Division Code",CustomerDivision."Shortcut Dimension 5 Code");
                CustCommGroup.INSERT();
              UNTIL CustomerDivision.NEXT=0;
            }
            {
            tmpcustomer.SETFILTER("Customer Group Code",'CES');
            IF tmpcustomer.FINDFIRST THEN
              REPEAT
               tmpcustomer.VALIDATE("Invoice Disc. Code",'CES');
               tmpcustomer.MODIFY();
              UNTIL tmpcustomer.NEXT=0;
             }
             {
            CustomerDivision.SETFILTER("Mfr. Rep. Code",'EA|DA');
            CustomerDivision.SETFILTER("CSR Code",'KATIE');
            IF CustomerDivision.FINDFIRST THEN
              REPEAT
                  CustomerDivision.VALIDATE("CSR Code",'ADRIANA');
                  CustomerDivision.MODIFY(TRUE);
              UNTIL CustomerDivision.NEXT=0;
             MESSAGE('Done');
              }

            {
            BinContent.SETFILTER("Location Code",'25');
            IF BinContent.FINDFIRST THEN
            REPEAT
              IF Bin.GET('25',BinContent."Bin Code") THEN
                BEGIN
                  BinContent.VALIDATE("Bin Ranking",Bin."Bin Ranking");
                  BinContent.MODIFY(TRUE);
                END;
             UNTIL BinContent.NEXT=0;
             }
              {
            SalesInvHeader.SETRANGE("Posting Date",050117D,053117D);
            //SalesInvHeader.SETFILTER("No.",'1286094');
            SalesInvHeader.SETFILTER("Location Code",'20');
            IF SalesInvHeader.FINDFIRST THEN
              REPEAT
                SalesInvLine.SETRANGE("Document No.",SalesInvHeader."No.");
                SalesInvLine.SETRANGE("Location Hdlg. %",0);
                IF SalesInvLine.FINDFIRST THEN
                  REPEAT
                         tmpcommAmount:=0;
                    WITH SalesInvLine DO BEGIN
                      IF
                         ((Type = Type::Item) OR
                          ((Type = Type::"G/L Account") AND
                           "Commission Payable") OR
                          ((Type = Type::"Charge (Item)") AND
                           "Commission Payable"))
                      THEN BEGIN
                        "Location Hdlg. %":=3;
                        "Location Hdlg. Amount" := (3 * "Line Amount" ) / 100;
                        tmpcommAmount+="Location Hdlg. Amount";
                        MODIFY();
                      END;
                   END;
                    UNTIL SalesInvLine.NEXT=0;
                    SalesInvHeader.VALIDATE("Location Hdlg. %",3);
                    SalesInvHeader."Location Hdlg. Amount":=tmpcommAmount;
                    SalesInvHeader.MODIFY();

                 UNTIL SalesInvHeader.NEXT=0;
            MESSAGE('Done');
               }
               {
             StockkeepingUnit.SETFILTER("Location Code",'25');
             StockkeepingUnit.SETFILTER("Last Counting Period Update",'');
             IF StockkeepingUnit.FINDFIRST THEN
              REPEAT
              IF item.GET(StockkeepingUnit."Item No.")THEN BEGIN
                IF item."Shortcut Dimension 5 Code"='L' THEN BEGIN
                   StockkeepingUnit."Last Counting Period Update":=040917D;
                   StockkeepingUnit.MODIFY();
                END;
              END;
              UNTIL StockkeepingUnit.NEXT=0;
                }
            {
            PurchasePrice.SETFILTER("Vendor No.",'V10896');
            IF PurchasePrice.FINDFIRST THEN
                REPEAT
                  PurchasePrice.VALIDATE(Inspection,FALSE);
                  PurchasePrice.MODIFY();
                UNTIL PurchasePrice.NEXT=0;
             }

            {
            tmpcustomer.SETFILTER("Salesperson Code",'<>%1','');
            tmpcustomer.FINDFIRST();

            REPEAT
              tmpcustomer."Salesperson Code":='';
              tmpcustomer.MODIFY();
            UNTIL tmpcustomer.NEXT=0;

            SalesHeader.SETRANGE("Order Date",060117D,071817D);
            SalesHeader.SETFILTER("Shipping Agent Code",'LOCAL');
            SalesHeader.SETRANGE(Status,SalesHeader.Status::Released);
            IF SalesHeader.FINDFIRST THEN
              REPEAT
                SalesHeader."Delivery Date":=CalendarMgmt.CalcDateBOC('+1WD',SalesHeader."Shipment Date",0,'1','', 0, '', '', TRUE);
                SalesHeader.MODIFY;
              UNTIL SalesHeader.NEXT=0;
            }
            {
            //CustomerDivision.SETFILTER("Mfr. Rep. Code",'GA');
            CustomerDivision.SETFILTER("Shortcut Dimension 5 Code",'E');
            IF CustomerDivision.FINDFIRST THEN
              REPEAT
                CustCommGroup.INIT();
                CustCommGroup."Customer No.":=CustomerDivision."Customer No.";
                CustCommGroup.VALIDATE("Item Category Code",'ENC');
                CustCommGroup.VALIDATE("Product Group Code",'RGD-TUBE');
                CustCommGroup.VALIDATE("Commission %",2);
                CustCommGroup.VALIDATE("Division Code",CustomerDivision."Shortcut Dimension 5 Code");
                CustCommGroup.INSERT();

                CustCommGroup.INIT();
                CustCommGroup."Customer No.":=CustomerDivision."Customer No.";
                CustCommGroup.VALIDATE("Item Category Code",'ENC');
                CustCommGroup.VALIDATE("Product Group Code",'EMT-TUBE');
                CustCommGroup.VALIDATE("Commission %",2);
                CustCommGroup.VALIDATE("Division Code",CustomerDivision."Shortcut Dimension 5 Code");
                CustCommGroup.INSERT();

                CustCommGroup.INIT();
                CustCommGroup."Customer No.":=CustomerDivision."Customer No.";
                CustCommGroup.VALIDATE("Item Category Code",'ENC');
                CustCommGroup.VALIDATE("Product Group Code",'ALU-TUBE');
                CustCommGroup.VALIDATE("Commission %",2);
                CustCommGroup.VALIDATE("Division Code",CustomerDivision."Shortcut Dimension 5 Code");
                CustCommGroup.INSERT();

              UNTIL CustomerDivision.NEXT=0;


              SalesPrice.SETRANGE("Sales Type",SalesPrice."Sales Type"::"Customer Price Group");
              SalesPrice.SETRANGE("Sales Code",'CES');
              IF SalesPrice.FINDFIRST THEN
                REPEAT
                  SalesPrice.VALIDATE("Allow Invoice Disc.",TRUE);
                  SalesPrice.MODIFY();
                UNTIL SalesPrice.NEXT=0;

             //Price Files clean up
            Salesprice.SETFILTER("Ending Date",'<%1 &<>%2',010118D,0D);
            IF Salesprice.FINDSET() THEN
              Salesprice.DELETEALL();

            SalesLineDiscount.SETFILTER("Ending Date",'<%1 &<>%2',010118D,0D);
            IF SalesLineDiscount.FINDSET THEN
              SalesLineDiscount.DELETEALL();

            hotSheetPrices.SETFILTER("Ending Date",'<%1 &<>%2',010118D,0D);
            IF hotSheetPrices.FINDSET THEN
              hotSheetPrices.DELETEALL();

            Salesprice.SETRANGE("Sales Type",Salesprice."Sales Type"::Customer);
            IF Salesprice.FINDFIRST THEN
              REPEAT
               IF NOT tmpcustomer.GET(SalesPrices."Sales Code") THEN BEGIN
                        tmpSalesPrice.GET(Salesprice."Item No.",Salesprice."Sales Type",Salesprice."Sales Code",Salesprice."Starting Date",Salesprice."Currency Code",Salesprice."Variant Code",Salesprice."Unit of Measure Code",Salesprice."Minimum Quantity");
                        tmpSalesPrice.DELETE();
               END;
              UNTIL Salesprice.NEXT=0;

            SalesLineDiscount.SETRANGE("Sales Type",SalesLineDiscount."Sales Type"::Customer);
            IF SalesLineDiscount.FINDFIRST THEN
              REPEAT
               IF NOT tmpcustomer.GET(SalesLineDiscount."Sales Code") THEN BEGIN
                    tmpSalesLineDiscount.GET(SalesLineDiscount.Type,SalesLineDiscount.Code,SalesLineDiscount."Sales Type",SalesLineDiscount."Sales Code",
                    SalesLineDiscount."Starting Date",SalesLineDiscount."Currency Code",SalesLineDiscount."Variant Code",SalesLineDiscount."Unit of Measure Code",SalesLineDiscount."Minimum Quantity",SalesLineDiscount."Hot Sheet Code");
                    tmpSalesLineDiscount.DELETE();
               END;
              UNTIL SalesLineDiscount.NEXT=0;

              MESSAGE('Done');



            UpgItem.FINDFIRST;
            REPEAT
              item.GET(UpgItem."No.");
              IF itemcategory.GET(UpgItem."Item Category Code") THEN
                item.VALIDATE("Item Category Code",UpgItem."Item Category Code");
              IF ProductGroup.GET(UpgItem."Item Category Code",UpgItem."Product Group Code") THEN
                item.VALIDATE("Product Group Code",UpgItem."Product Group Code");
              IF item.MODIFY(TRUE)THEN;
            UNTIL UpgItem.NEXT=0;
            MESSAGE('Done');
            }
            {
            SLEEP(1000);
            SalesSetup.GET;
            SalesInvHeader.GET('1407825');
            WITH SalesInvHeader DO BEGIN
              IF SalesSetup."Enable E-Mail" AND NOT "EDI Invoice" THEN
                    EMailMgt.SendSalesInvoiceNotice(SalesInvHeader,FALSE,FALSE);

                IF SalesSetup."Enable Fax" AND Fax AND NOT "EDI Invoice" THEN
                    FaxMgmt.SalesInvoice(SalesInvHeader);

                IF SalesSetup."Enable Mail" AND Mail AND NOT "EDI Invoice" THEN
                          SalesPostPrint.GetInvoiceReport(SalesInvHeader);

            END;
            }
            {
            //Price Files clean up
            SalesPrice.SETFILTER("Ending Date",'<%1 &<>%2',010117D,0D);
            IF SalesPrice.FINDSET() THEN
              SalesPrice.DELETEALL();

            SalesLineDiscount.SETFILTER("Ending Date",'<%1 &<>%2',010117D,0D);
            IF SalesLineDiscount.FINDSET THEN
              SalesLineDiscount.DELETEALL();

            hotSheetPrices.SETFILTER("Ending Date",'<%1 &<>%2',010117D,0D);
            IF hotSheetPrices.FINDSET THEN
              hotSheetPrices.DELETEALL();

              //to remove price record if price records are not there
            SalesPrice.SETRANGE("Sales Type",SalesPrice."Sales Type"::Customer);
            IF SalesPrice.FINDFIRST THEN
              REPEAT
               IF NOT tmpcustomer.GET(SalesPrices."Sales Code") THEN BEGIN
                        tmpSalesPrice.GET(SalesPrice."Item No.",SalesPrice."Sales Type",SalesPrice."Sales Code",SalesPrice."Starting Date",SalesPrice."Currency Code",SalesPrice."Variant Code",SalesPrice."Unit of Measure Code",SalesPrice."Minimum Quantity");
                        tmpSalesPrice.DELETE();
               END;
              UNTIL SalesPrice.NEXT=0;

            SalesLineDiscount.SETRANGE("Sales Type",SalesLineDiscount."Sales Type"::Customer);
            IF SalesLineDiscount.FINDFIRST THEN
              REPEAT
               IF NOT tmpcustomer.GET(SalesLineDiscount."Sales Code") THEN BEGIN
                    tmpSalesLineDiscount.GET(SalesLineDiscount.Type,SalesLineDiscount.Code,SalesLineDiscount."Sales Type",SalesLineDiscount."Sales Code",
                    SalesLineDiscount."Starting Date",SalesLineDiscount."Currency Code",SalesLineDiscount."Variant Code",SalesLineDiscount."Unit of Measure Code",SalesLineDiscount."Minimum Quantity",SalesLineDiscount."Hot Sheet Code");
                    tmpSalesLineDiscount.DELETE();
               END;
              UNTIL SalesLineDiscount.NEXT=0;

              MESSAGE('Done');
              }
              {
            custledgerentry.SETRANGE("Posting Date",020918D,030718D);
            custledgerentry.SETFILTER("Mfr. Rep. Code",'');
            custledgerentry.SETRANGE("Document Type",CustLedgEntry."Document Type"::Invoice);
            custledgerentry.FINDSET;
            REPEAT
              IF salesinvoiceheader.GET(custledgerentry."Document No.") THEN BEGIN
              custledgerentry."Mfr. Rep. Code":=salesinvoiceheader."Mfr. Rep. Code";
              custledgerentry.MODIFY;
            END;
            UNTIL custledgerentry.NEXT=0;

            custledgerentry.SETRANGE("Posting Date",020918D,030718D);
            custledgerentry.SETFILTER("Mfr. Rep. Code",'');
            custledgerentry.SETRANGE("Document Type",CustLedgEntry."Document Type"::"Credit Memo");
            custledgerentry.FINDSET;
            REPEAT
              IF SalesCreditmemo.GET(custledgerentry."Document No.") THEN BEGIN
                custledgerentry."Mfr. Rep. Code":=SalesCreditmemo."Mfr. Rep. Code";
                custledgerentry.MODIFY;
              END;
            UNTIL custledgerentry.NEXT=0;

            MESSAGE('Done');
            }
            {
            SalesInvHeader.SETRANGE("Posting Date",010118D,030718D);
            SalesInvHeader.SETFILTER("Mfr. Rep. Code",'TRI');
            IF SalesInvHeader.FINDFIRST THEN
              REPEAT
                SalesInvLine.SETRANGE("Document No.",SalesInvHeader."No.");
                SalesInvLine.SETRANGE("Mfr. Rep. Comm. %",0);
                IF SalesInvLine.FINDFIRST THEN
                  REPEAT

                    WITH SalesInvLine DO BEGIN
                      IF
                         ((Type = Type::Item) OR
                          ((Type = Type::"G/L Account") AND
                           "Commission Payable") OR
                          ((Type = Type::"Charge (Item)") AND
                           "Commission Payable"))
                      THEN BEGIN
                        "Mfr. Rep. Comm. %":=5;
                        "Mfr. Rep. Comm. Amount" := (5 * "Line Amount" ) / 100;
                        MODIFY();
                      END;
                   END;
                    UNTIL SalesInvLine.NEXT=0;
                 UNTIL SalesInvHeader.NEXT=0;

            SalesCrMemoHeader.SETRANGE("Posting Date",010118D,030718D);
            SalesCrMemoHeader.SETFILTER("Mfr. Rep. Code",'TRI');
            IF SalesCrMemoHeader.FINDFIRST THEN
              REPEAT
                SalesCrMemoLine.SETRANGE("Document No.",SalesCrMemoHeader."No.");
                SalesCrMemoLine.SETRANGE("Mfr. Rep. Comm. %",0);
                IF SalesCrMemoLine.FINDFIRST THEN
                  REPEAT

                    WITH SalesCrMemoLine DO BEGIN
                      IF
                         ((Type = Type::Item) OR
                          ((Type = Type::"G/L Account") AND
                           "Commission Payable") OR
                          ((Type = Type::"Charge (Item)") AND
                           "Commission Payable"))
                      THEN BEGIN
                        "Mfr. Rep. Comm. %":=5;
                        "Mfr. Rep. Comm. Amount" := (5 * "Line Amount" ) / 100;
                        MODIFY();
                      END;
                   END;
                    UNTIL SalesCrMemoLine.NEXT=0;
                 UNTIL SalesCrMemoHeader.NEXT=0;
            MESSAGE('Done');


            BuyingGroupCustomer.FINDFIRST;
            REPEAT
              IF tmpCust.GET(BuyingGroupCustomer."Our Customer No.") THEN BEGIN
                IF tmpCust."Buying Group Cust. No."='' THEN BEGIN
                    tmpCust."Buying Group Cust. No.":=BuyingGroupCustomer."No.";
                    tmpCust."Buying Group Code":=BuyingGroupCustomer."Buying Group Code";
                    tmpCust."BG Affiliation Code":='IMARK';
                    tmpCust."Gateway to Growth Program":=TRUE;
                    tmpCust.MODIFY;
                END;
              END;
            UNTIL BuyingGroupCustomer.NEXT=0;



            MESSAGE('Done');

            BankAccountLedgerEntry.GET();
            BankAccountLedgerEntry."Statement Status":=BankAccountLedgerEntry."Statement Status"::Closed;
            BankAccountLedgerEntry.MODIFY;
            }


            {
            SalesShipmentHeader.GET('SS1612980');
            SalesShipmentHeader."Bill of Lading No." := 'BOL059663';
            SalesShipmentHeader.MODIFY;
            }


            //package.GET('P474195-TO1007113');
            //package.DELETE;
            //MESSAGE('Done');
            item.GET('');
            item.DELETE;


            //DailyProdLifeCycleIntroReport;

            //IF purchaseline.GET(purchaseline."Document Type"::Order,'PO1014872',10000)THEN
              //purchaseline.DELETE();
             //Salesline.GET(Salesline."Document Type"::Order,'SO1926877',20000);
            //Salesline.DELETE;
            // SHAIL
            {EDIBillOfLoading.RESET;
            EDIBillOfLoading.SETFILTER("No.",'BOL059900');
            IF EDIBillOfLoading.FINDFIRST THEN BEGIN
              EDIBillOfLoading."EDI ASN Generated" := FALSE;
              EDIBillOfLoading."EDI BSN" := FALSE;

              EDIBillOfLoading.MODIFY;
              MESSAGE('Done');
            END ELSE
              MESSAGE('Record not found');
              // SHAil
              }
              }{
            packageline.SETFILTER("Package No.",'=%1','P549869-TO1008487');
            IF packageline.FINDSET THEN BEGIN
              REPEAT
                //MESSAGE(FORMAT(packageline."Package No.") + FORMAT(packageline."Line No."));
                packageline.DELETE;
              UNTIL packageline.NEXT=0;
            END;
            }{

            IF upslinkma.GET(269989) THEN
            BEGIN
              upslinkma."Package Calculation Weight" := 67;
              //upslinkma."Package Calculation Volume" := 1971.36;
              //upslinkma."Package Calculation Value":= 298.5;
              //upslinkma."Shipping Cost" := 307.5;
              upslinkma.MODIFY;
            END;
            }
            Salesline.GET(Salesline."Document Type"::"Return Order",'',10000);
            Salesline.DELETE;
            Salesline.GET(Salesline."Document Type"::"Return Order",'',20000);
            Salesline.DELETE;
            Salesline.GET(Salesline."Document Type"::"Return Order",'',30000);
            Salesline.DELETE;
            Salesline.GET(Salesline."Document Type"::"Return Order",'',30000);
            Salesline.DELETE;
            }
            }
            {
            postedpackage.GET('P574963');
            postedpackage."Bill of Lading No.":='BOL062650';
            postedpackage.MODIFY;
            }
            {
            ManifestHeader.GET('MN105224');
            ManifestHeader."UPS Processing Required" := FALSE;
            ManifestHeader.MODIFY
            {

            EDIReceiveDocumentHdr.GET('EDI334372');
            EDIReceiveDocumentHdr."Data Error":= FALSE;
            EDIReceiveDocumentHdr.MODIFY;

            item.GET('');
            item.DELETE;

            }
            {
            postedpackage.GET('P577257');
            postedpackage."Bill of Lading No.":='BOL062951';
            postedpackage.MODIFY;
            }
            Salesline.GET(Salesline."Document Type"::"Return Order",'',10000);
            Salesline.DELETE;
            Salesline.GET(Salesline."Document Type"::"Return Order",'',20000);
            Salesline.DELETE;
            Salesline.GET(Salesline."Document Type"::"Return Order",'',30000);
            Salesline.DELETE;


            PackageLine.SETFILTER("Package No.",'P542727-SO1530568');
            PackageLine.FINDFIRST;
            PackageLine.DELETE;
            //package.GET('P542727-SO1530568');

            //package.DELETE;
            MESSAGE('Done');
            }
            {
            purchaseline.RESET;
            purchaseline.SETRANGE("Order Date",010117D,TODAY);
            purchaseline.SETRANGE("Inbound Container Number",'');
            purchaseline.SETFILTER("Package Tracking No.",'<>%1','');
            //MESSAGE(FORMAT(purchaseline.COUNT));
            IF purchaseline.FINDSET THEN BEGIN
              REPEAT
                purchaseline."Inbound Container Number" := purchaseline."Package Tracking No.";
                purchaseline.MODIFY;
              UNTIL purchaseline.NEXT=0;
            END;
            }
            {
            Salesline.GET(Salesline."Document Type"::"Return Order",'',10000);
            Salesline.DELETE;
            Salesline.GET(Salesline."Document Type"::"Return Order",'',20000);
            Salesline.DELETE;
            Salesline.GET(Salesline."Document Type"::"Return Order",'',30000);
            Salesline.DELETE;
            }

            {
            SalesShipmentHeader.GET('SS1590453');
            SalesShipmentHeader."Bill of Lading No." := 'BOL065452';
            SalesShipmentHeader.MODIFY;
            }
            {
            SalesShipmentHeader.GET('SS1594281');
            SalesShipmentHeader."Bill of Lading No." := 'BOL065921';
            SalesShipmentHeader.MODIFY;
            }{
            Salesline.GET(Salesline."Document Type"::"Return Order",'',10000);
            Salesline.DELETE;
            Salesline.GET(Salesline."Document Type"::"Return Order",'',20000);
            Salesline.DELETE;
            Salesline.GET(Salesline."Document Type"::"Return Order",'',30000);
            Salesline.DELETE;}
            // SNAGPAL-Start
            {ShipToAddress2.RESET;
            STACount := 0;
            ShipToAddress2.SETRANGE(Blocked,FALSE);
            ShipToAddress2.SETFILTER(Code,'<>%1','DS');
            IF ShipToAddress2.FINDSET THEN
              REPEAT
                STACount += 1;
                ShipToAddress2."Mailing Label" := TRUE;
                ShipToAddress2.MODIFY;
              UNTIL ShipToAddress2.NEXT = 0;
            MESSAGE('%1',STACount);
            }
            //Utkarsh VSO 2407 Case-1
            {
            SalesHeader.RESET;
            SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::Order);
            SalesHeader.SETRANGE(Status,SalesHeader.Status::Open);
            SalesHeader.SETRANGE("Document Date",0D,TODAY-1);
            IF SalesHeader.FINDSET THEN BEGIN
             REPEAT
                Salesline.RESET;
                Salesline.SETRANGE("Document Type",SalesHeader."Document Type");
                Salesline.SETRANGE("Document No.",SalesHeader."No.");
                IF NOT Salesline.FINDSET THEN
                  SalesHeader.DELETE(TRUE);
              UNTIL SalesHeader.NEXT=0;
            END;

            //Utkarsh VSO 2407 Case-2
            SalesHeader.RESET;
            SalesHeader.RESET;
            SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::Order);
            SalesHeader.SETRANGE("Document Date",0D,TODAY-1);
            SalesHeader.SETRANGE("Sell-to Customer No.",'');
            IF SalesHeader.FINDSET THEN BEGIN
              REPEAT
                SalesHeader.DELETE(TRUE);
              UNTIL SalesHeader.NEXT=0;
            END;
            }
            {
            //Utkarsh VSO 2407 Case-3
            SalesHeader.RESET;
            SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::Order);
            //SalesHeader.SETRANGE(Status,SalesHeader.Status::Open);
            SalesHeader.SETRANGE("Document Date",0D,TODAY-1);
            SalesHeader.SETRANGE("Completely Shipped",TRUE);
            SalesHeader.SETRANGE("Shipped Not Invoiced",FALSE);
            IF SalesHeader.FINDSET THEN BEGIN
             REPEAT
                  SalesHeader.DELETE(TRUE);
              UNTIL SalesHeader.NEXT=0;
            END;

            }
            //Utkarsh VSO 2407 Case-4 (We are not going to run this as per Joe)
            {
            SalesHeader.RESET;
            SalesHeader.RESET;
            SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::Order);
            SalesHeader.SETRANGE("Document Date",0D,TODAY-1);
            SalesHeader.SETRANGE("Sell-to Customer No.",'99999');
            IF SalesHeader.FINDSET THEN BEGIN
              REPEAT
                Salesline.RESET;
                Salesline.SETRANGE("Document Type",SalesHeader."Document Type");
                Salesline.SETRANGE("Document No.",SalesHeader."No.");
                //Salesline.SETFILTER("Quantity Shipped",'=%1',0);
                //Salesline.SETFILTER("Quantity Invoiced",'=%1',0);
                IF  Salesline.FINDSET THEN BEGIN
                  REPEAT
                    salesorderdetete := FALSE;
                    IF (Salesline."Quantity Shipped" = 0) AND (Salesline."Quantity Invoiced" = 0) THEN
                      salesorderdetete := TRUE
                      ELSE
                       salesorderdetete := FALSE;
                  UNTIL Salesline.NEXT = 0;
                END;
                   IF salesorderdetete = TRUE THEN
                      SalesHeader.DELETE(TRUE);
              UNTIL SalesHeader.NEXT=0;
            END;
            }
            {
            SalesHeader.GET(1,'SO1595972');
            SalesHeader.DELETE(TRUE);
            //Salesline.GET('order','SO1497477'
            }




            //package.GET('P607181');
            //package.DELETE;
            //MESSAGE('Done');

            {package.GET('P878998');
            package.Closed := FALSE;
            package.MODIFY;
            }

            //SalesShipmentHeader.GET('SS1612980');
            //SalesShipmentHeader."Bill of Lading No." := 'BOL068352';
            //SalesShipmentHeader.MODIFY;

            {CustomerDivision.SETFILTER("Shortcut Dimension 5 Code",'E');
            IF CustomerDivision.FINDFIRST THEN
              REPEAT
                CustCommGroup.INIT();
                CustCommGroup."Customer No.":=CustomerDivision."Customer No.";
                CustCommGroup.VALIDATE("Item Category Code",'CONDUIT');
                CustCommGroup.VALIDATE("Product Group Code",'IMC-TUBE');
                CustCommGroup.VALIDATE("Commission %",2);
                CustCommGroup.VALIDATE("Division Code",CustomerDivision."Shortcut Dimension 5 Code");
                CustCommGroup.INSERT();
              UNTIL CustomerDivision.NEXT=0;

                CustCommGroup.INIT();
                CustCommGroup."Customer No.":=CustomerDivision."Customer No.";
                CustCommGroup.VALIDATE("Item Category Code",'ENC');
                CustCommGroup.VALIDATE("Product Group Code",'EMT-TUBE');
                CustCommGroup.VALIDATE("Commission %",2);
                CustCommGroup.VALIDATE("Division Code",CustomerDivision."Shortcut Dimension 5 Code");
                CustCommGroup.INSERT();
               }

            {
            CustCommGroup.RESET;
            CustCommGroup.SETRANGE("Item Category Code",'ENC');
            //CustCommGroup.SETRANGE("Customer No.",'00029','00045');
            IF CustCommGroup.FINDFIRST THEN BEGIN
              REPEAT
                CustCommGroup.RENAME(CustCommGroup."Customer No.",'CONDUIT',CustCommGroup."Product Group Code",CustCommGroup."Division Code");
              UNTIL CustCommGroup.NEXT=0;
            END;
            }

            {SalesShipmentHeader.GET('SS1616074');
            SalesShipmentHeader."Bill of Lading No." := 'BOL068807';
            SalesShipmentHeader.MODIFY;
            }
            ////

            //package.GET('P542727');
            //package.DELETE;
            //MESSAGE('Done');
            {PackageLine.SETFILTER("Package No.",'=%1','P613630');
            IF PackageLine.FINDSET THEN BEGIN
              REPEAT
                //MESSAGE(FORMAT(packageline."Package No.") + FORMAT(packageline."Line No."));
                PackageLine.DELETE;
              UNTIL PackageLine.NEXT=0;
            END;}

            {package.GET('P853898');
            package.Closed := FALSE;
            package.MODIFY;

            }

            {Salesline.GET(Salesline."Document Type"::"Return Order",'',10000);
            Salesline.DELETE;
            Salesline.GET(Salesline."Document Type"::"Return Order",'',20000);
            Salesline.DELETE;
            Salesline.GET(Salesline."Document Type"::"Return Order",'',30000);
            Salesline.DELETE;}

            //Biloflading.GET('BOL071416');
            //Biloflading."EDI ASN" := FALSE;
            //Biloflading.MODIFY
            {WarehouseRequest.GET(1,30,37,1,'SO1616358');
            WarehouseRequest."Activity Status" := WarehouseRequest."Activity Status" :: "Pick Registered";
            WarehouseRequest.MODIFY;
            }
            //VSO2453 Case-1
            {ItemCrossReference.RESET;
            ItemCrossReference.SETRANGE("Cross-Reference Type",ItemCrossReference."Cross-Reference Type"::"Bar Code");
            IF ItemCrossReference.FINDFIRST THEN BEGIN
              REPEAT
                item.RESET;
                item.SETRANGE("No.",ItemCrossReference."Item No.");
                IF NOT item.FINDFIRST THEN
                  ItemCrossReference.DELETE(TRUE);
              UNTIL ItemCrossReference.NEXT = 0;
            END;}
            //VSO2453 Case-1
            //VSO2453 Case-2
            {ItemCrossReference.RESET;
            ItemCrossReference.SETRANGE("Item No.",'');
            ItemCrossReference.SETRANGE("Cross-Reference Type",ItemCrossReference."Cross-Reference Type"::"Bar Code");
            IF ItemCrossReference.FINDFIRST THEN BEGIN
              REPEAT
                  ItemCrossReference.DELETE(TRUE);
              UNTIL ItemCrossReference.NEXT = 0;
            END;
            //VSO2453 Case-2
            }
            {
            ItemCrossRef.SETRANGE("Cross-Reference Type",ItemCrossRef."Cross-Reference Type"::"Bar Code");
            ItemCrossRef.SETFILTER("Item No.",'');
            IF ItemCrossRef.FINDFIRST THEN
              REPEAT
                tmpItemCrossRef.SETRANGE("Cross-Reference Type",ItemCrossRef."Cross-Reference Type"::"Bar Code");
                tmpItemCrossRef.SETFILTER("Cross-Reference No.",ItemCrossRef."Cross-Reference No.");
                tmpItemCrossRef.SETFILTER("Item No.",'<>%1','');
                IF tmpItemCrossRef.FINDFIRST THEN
                  ItemCrossRef.DELETE();
              UNTIL ItemCrossRef.NEXT=0;
             }
             }{
             Salesline.GET(Salesline."Document Type"::"Return Order",'',10000);
            Salesline.DELETE;
            Salesline.GET(Salesline."Document Type"::"Return Order",'',20000);
            Salesline.DELETE;
            Salesline.GET(Salesline."Document Type"::"Return Order",'',30000);
            Salesline.DELETE;}

            {ApprovalEntry.RESET;
            ApprovalEntry.SETRANGE("Date-Time Sent for Approval",CREATEDATETIME(120118D,000001T),CREATEDATETIME(123118D,235959T));
            IF ApprovalEntry.FINDFIRST THEN BEGIN
             REPEAT
              SalesHeaderApproval.RESET;
              IF NOT SalesHeaderApproval.GET(ApprovalEntry."Document Type",ApprovalEntry."Document No.") THEN BEGIN
                 SalesShipmentHdr.RESET;
                 SalesShipmentHdr.SETCURRENTKEY("Order No.");
                 SalesShipmentHdr.SETRANGE("Order No.",ApprovalEntry."Document No.");
                 IF SalesShipmentHdr.FINDFIRST THEN BEGIN
                  REPEAT
                    PostApprovalEntries(ApprovalEntry,110,SalesShipmentHdr."No.");
                  UNTIL SalesShipmentHdr.NEXT=0;
                 END;

                 SalesInvHeader.RESET;
                 SalesInvHeader.SETCURRENTKEY("Order No.");
                 SalesInvHeader.SETRANGE("Order No.",ApprovalEntry."Document No.");
                 IF SalesInvHeader.FINDFIRST THEN BEGIN
                  REPEAT
                    PostApprovalEntries(ApprovalEntry,112,SalesInvHeader."No.");
                  UNTIL SalesInvHeader.NEXT=0;
                 END;
                 DeleteApprovalEntries(ApprovalEntry,ApprovalEntry."Table ID",ApprovalEntry."Document No.");
              END;
              UNTIL ApprovalEntry.NEXT=0;
            END;
            }


            //package.GET('P658684');
            //package.DELETE;
            //MESSAGE('Done');

            {
            PackageLine.SETFILTER("Package No.",'=%1','P658684-TO1010637');
            IF PackageLine.FINDSET THEN BEGIN
              REPEAT
                //MESSAGE(FORMAT(packageline."Package No.") + FORMAT(packageline."Line No."));
                PackageLine.DELETE;
              UNTIL PackageLine.NEXT=0;
            END;
            }
            {
            IF TransferHeader.FINDFIRST THEN
                REPEAT
                 TransferLine.SETRANGE("Document No.",TransferHeader."No.");
                 IF TransferLine.FINDFIRST THEN
                    REPEAT
                      TransferLine."Receipt Date":=TransferHeader."Receipt Date";
                      TransferLine."Shipment Date":=TransferHeader."Shipment Date";
                      TransferLine.MODIFY;
                  UNTIL TransferLine.NEXT=0;
              UNTIL TransferHeader.NEXT=0;
              }
            {
            StockkeepingUnit.SETFILTER("Location Code",'%1|%2|%3','25','30','76');
            IF StockkeepingUnit.FINDFIRST THEN
              REPEAT
                  StockkeepingUnit."Next Counting Start Date" := 010119D;
                  StockkeepingUnit."Next Counting End Date" := 123119D;
                  StockkeepingUnit."Next Counting Period" := FORMAT(StockkeepingUnit."Next Counting Start Date") + '..' + FORMAT(StockkeepingUnit."Next Counting End Date");
                  StockkeepingUnit.MODIFY(TRUE);
              UNTIL StockkeepingUnit.NEXT=0;P690123|P693323
              }
              {
            package.GET('P693323');
            package.DELETE;;
            }//package.MODIFY;
            {
            IF TransferHeader.GET('TO1015878') THEN BEGIN

                TransferLine.SETRANGE("Document No.",TransferHeader."No.");
                 IF TransferLine.FINDFIRST THEN
                    REPEAT
                      TransferLine."Inbound Container No.":=TransferHeader."Inbound Container Number";
                      TransferLine."Purchase Order No.":='PO1016283';
                      TransferLine."TO Delivery Status":=TransferLine."TO Delivery Status"::"On Water";
                      TransferLine.MODIFY;
                  UNTIL TransferLine.NEXT=0;
            END;
             }{
            TransferHeader.GET('TO1011818');
            TransferHeader.VALIDATE("Inbound ASN Number",'CAIU9955163');
            TransferHeader.VALIDATE("Inbound Container Number",'CAIU9955163');
            TransferHeader.MODIFY;
            }
            //Salesline.GET(Salesline."Document Type"::Order,'SO1584593',20000);
            //Salesline.DELETE;
            {
            WarehouseRequest.GET(1,30,37,1,'SO1723303');
            WarehouseRequest."Activity Status" := WarehouseRequest."Activity Status" :: "Pick Registered";
            WarehouseRequest.MODIFY;
            }
            {
            package.GET('P692678');
            package.DELETE;
            MESSAGE('Done');


            PackageLine.SETFILTER("Package No.",'P692678');
            PackageLine.FINDFIRST;
            PackageLine.DELETE;

            }

            //Utkarsh VSO 2407 Case-1
            {
            SalesHeader.RESET;
            SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::Order);
            SalesHeader.SETRANGE(Status,SalesHeader.Status::Open);
            SalesHeader.SETRANGE("Document Date",0D,TODAY-1);
            IF SalesHeader.FINDSET THEN BEGIN
             REPEAT
                Salesline.RESET;
                Salesline.SETRANGE("Document Type",SalesHeader."Document Type");
                Salesline.SETRANGE("Document No.",SalesHeader."No.");
                IF NOT Salesline.FINDSET THEN
                  SalesHeader.DELETE(TRUE);
              UNTIL SalesHeader.NEXT=0;
            END;
            }
            {
            //Utkarsh VSO 2407 Case-2
            SalesHeader.RESET;
            SalesHeader.RESET;
            SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::Order);
            SalesHeader.SETRANGE("Document Date",0D,TODAY-1);
            SalesHeader.SETRANGE("Sell-to Customer No.",'');
            IF SalesHeader.FINDSET THEN BEGIN
              REPEAT
                SalesHeader.DELETE(TRUE);
              UNTIL SalesHeader.NEXT=0;
            END;
            }
            {
            //Utkarsh VSO 2407 Case-3
            SalesHeader.RESET;
            SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::Order);
            //SalesHeader.SETRANGE(Status,SalesHeader.Status::Open);
            SalesHeader.SETRANGE("Document Date",0D,TODAY-1);
            SalesHeader.SETRANGE("Completely Shipped",TRUE);
            SalesHeader.SETRANGE("Shipped Not Invoiced",FALSE);
            IF SalesHeader.FINDSET THEN BEGIN
             REPEAT
                  SalesHeader.DELETE(TRUE);
              UNTIL SalesHeader.NEXT=0;
            END;
            }

            //VSO2564
            //ShiptoAddressDivisionPDiv.SETFILTER("Customer No.",'00103');
            {ShiptoAddressDivisionPDiv.SETFILTER("Shortcut Dimension 5 Code",'E');
            IF ShiptoAddressDivisionPDiv.FINDFIRST THEN
              REPEAT
                IF tmpcustomer.GET(ShiptoAddressDivisionPDiv."Customer No.") THEN BEGIN
                  ShiptoAddressDivisionPDiv_INS.INIT();
                  ShiptoAddressDivisionPDiv_INS.VALIDATE("Customer No.",ShiptoAddressDivisionPDiv."Customer No.");
                  ShiptoAddressDivisionPDiv_INS.VALIDATE("Ship-to Code",ShiptoAddressDivisionPDiv."Ship-to Code");
                  ShiptoAddressDivisionPDiv_INS.VALIDATE("Shortcut Dimension 5 Code",'P');
                  ShiptoAddressDivisionPDiv_INS.VALIDATE("Location Code",ShiptoAddressDivisionPDiv."Location Code");
                  ShiptoAddressDivisionPDiv_INS.VALIDATE("Shipping Agent Code",'PickUP');
                  ShiptoAddressDivisionPDiv_INS.VALIDATE("E-Ship Agent Service",'PickUP');
                  ShiptoAddressDivisionPDiv_INS.VALIDATE("Free Freight",ShiptoAddressDivisionPDiv."Free Freight");
                  ShiptoAddressDivisionPDiv_INS.VALIDATE("Shipping Advice",ShiptoAddressDivisionPDiv."Shipping Advice");
                  ShiptoAddressDivisionPDiv_INS.VALIDATE("Shipping Payment Type",ShiptoAddressDivisionPDiv."Shipping Payment Type");

                  ShiptoAddressDivisionPDiv_INS.INSERT(TRUE);
                END;
             UNTIL ShiptoAddressDivisionPDiv.NEXT=0;
             ///VSO2564;
            }{
            User.RESET;
            User.SETFILTER("User Name",'%1|%2|%3|%4|%5','TOPAZ\DAVEHALL','TOPAZ\JIMMARTIN','TOPAZ\RHASSAY','TOPAZ\TPETRUS','Topaz\Jparrish');
            IF User.FINDSET THEN BEGIN
              REPEAT
                {MyNotification.INIT();
                MyNotification.VALIDATE("User Id",User."User Name");
                MyNotification.VALIDATE("Notification Id",'{612a2701-4bbb-4c5b-b4c0-629d96b60644}');
                MyNotification.Name:='Warn about unposted documents.';
                MyNotification.VALIDATE(Enabled,FALSE);

                MyNotification.INSERT(TRUE);}
                UserPreference.INIT  ;
                UserPreference."User ID" := User."User Name";
                UserPreference."Instruction Code" := 'QUERYPOSTONCLOSE';
                UserPreference.INSERT;
              UNTIL User.NEXT = 0;
            END;
            }
            {
            WarehouseRequest.GET(1,30,37,1,'SO1723303');
            WarehouseRequest."Activity Status" := WarehouseRequest."Activity Status" :: "Pick Registered";
            WarehouseRequest.MODIFY;
            }
            {
            SalesHeader.SETRANGE("No.",'SRO1029746');
            IF SalesHeader.FINDFIRST THEN BEGIN
              {  Salesline.RESET;
                Salesline.SETRANGE("Document No.",SalesHeader."No.");
                IF  Salesline.FINDSET THEN REPEAT}
                   // Salesline.DELETE;
                  SalesHeader.DELETE;
             // UNTIL Salesline.NEXT=0;
            END;
            }{
            ManifestLine.GET('MN106495',790000);
            ManifestLine.DELETE;
            ManifestLine.GET('MN106495',760000);
            ManifestLine.DELETE;
            ManifestLine.GET('MN106495',770000);
            ManifestLine.DELETE;
            }
            {
            LastSalesPrice.SETRANGE("Price Increase",TRUE);
            LastSalesPrice.SETRANGE("Document Type",LastSalesPrice."Document Type"::"Stock Status");
            LastSalesPrice.SETRANGE("Last Unit Price",0);

            IF LastSalesPrice.FINDFIRST THEN
              REPEAT
                LastSalesPrice."Last Price Date":=060119D;
                LastSalesPrice.MODIFY;
              UNTIL LastSalesPrice.NEXT=0;
              MESSAGE('done');
              }
              {
            ManifestLine.GET('MN106495',750000);
            ManifestLine.DELETE;
            ManifestLine.GET('MN106495',800000);
            ManifestLine.DELETE;
            ManifestLine.GET('MN106495',810000);
            ManifestLine.DELETE;
            ManifestLine.GET('MN106495',820000);
            ManifestLine.DELETE;
            ManifestLine.GET('MN106495',830000);
            ManifestLine.DELETE;
            ManifestLine.GET('MN106495',840000);
            ManifestLine.DELETE;
            ManifestLine.GET('MN106495',850000);
            ManifestLine.DELETE;
            ManifestLine.GET('MN106495',860000);
            ManifestLine.DELETE;
            }
            {
            Salesline.GET(Salesline."Document Type"::"Return Order",'',10000);
            Salesline.DELETE;
            Salesline.GET(Salesline."Document Type"::"Return Order",'',20000);
            Salesline.DELETE;
            Salesline.GET(Salesline."Document Type"::"Return Order",'',30000);
            Salesline.DELETE;
            }
            //Salesline.GET(Salesline."Document Type"::"Return Order",'',30000);
            //Salesline.DELETE;
            {
            LastSalesPrice.SETRANGE("Price Increase",TRUE);
            LastSalesPrice.SETRANGE("Document Type",LastSalesPrice."Document Type"::"Stock Status");
            LastSalesPrice.SETRANGE("Last Unit Price",0);

            IF LastSalesPrice.FINDFIRST THEN
              REPEAT
                  tmpitem.GET(LastSalesPrice."Item No.");
                  tmplastsaleprice.GET(LastSalesPrice."Document Type",LastSalesPrice."Document No.",LastSalesPrice."Sell-to Customer No.",LastSalesPrice."Item No.",LastSalesPrice."Unit of Measure Code");
                  tmplastsaleprice."Last Unit Price":=tmpitem."High Unit Price";
                  tmplastsaleprice.MODIFY;
              UNTIL LastSalesPrice.NEXT=0;
              MESSAGE('done');

             }

            {
            package.GET('P749878');
            package.DELETE;



            PackageLine.SETFILTER("Package No.",'P749878');
            IF PackageLine.FINDFIRST THEN REPEAT
            PackageLine.DELETE;
            UNTIL PackageLine.NEXT=0;
            MESSAGE('Done');
            }

            {
            SalesHeader.SETRANGE("No.",'SRO1029746');
            IF SalesHeader.FINDFIRST THEN BEGIN
               {Salesline.RESET;
                Salesline.SETRANGE("Document No.",SalesHeader."No.");
                IF  Salesline.FINDSET THEN REPEAT
                    Salesline.DELETE;
              UNTIL Salesline.NEXT=0;}
              SalesHeader.DELETE;
            END;}
            {//1Z9RF8940313968261
            postedpackage.GET('P762480');
            postedpackage."External Tracking No.":='1Z9RF8940340048703';
            postedpackage.MODIFY;
            P754387|P754401|P765567
            }
            {

            package.GET('P765567');
            package.DELETE;



            PackageLine.SETFILTER("Package No.",'P765567');
            IF PackageLine.FINDFIRST THEN REPEAT
            PackageLine.DELETE;
            UNTIL PackageLine.NEXT=0;
            MESSAGE('Done');
            }
            {
            CustomerDivision.RESET;
            CustomerDivision.SETFILTER("Shortcut Dimension 5 Code",'%1|%2','E','P');
            CustomerDivision.SETFILTER("Mfr. Rep. Code",'<>%1','');
            IF CustomerDivision.FINDSET THEN BEGIN
              REPEAT
               IF  CustomerDivision."CSR Code" <>'' THEN BEGIN
                 CASE CustomerDivision."Mfr. Rep. Code" OF
                  'BR' : CustomerDivision."CSR Code" := 'ADRIANA';
                  'BE' : CustomerDivision."CSR Code" := 'ADRIANA';
                  'COR' : CustomerDivision."CSR Code" := 'ADRIANA';
                  'FS' : CustomerDivision."CSR Code" := 'ADRIANA';
                  'GA' : CustomerDivision."CSR Code" := 'ADRIANA';
                  'GM' : CustomerDivision."CSR Code" := 'ADRIANA';
                  'DD' : CustomerDivision."CSR Code" := 'TERRY';
                  'GJ' : CustomerDivision."CSR Code" := 'TERRY';
                  'GJW' : CustomerDivision."CSR Code" := 'TERRY';
                  'PC' : CustomerDivision."CSR Code" := 'TERRY';
                  'UVD' : CustomerDivision."CSR Code" := 'TERRY';
                  'AA' : CustomerDivision."CSR Code" := 'THERESA';
                  'EA' : CustomerDivision."CSR Code" := 'THERESA';
                  'RW' : CustomerDivision."CSR Code" := 'THERESA';
                 END;
                 CustomerDivision.MODIFY(TRUE);
               END;
              UNTIL CustomerDivision.NEXT = 0;
            END;
            }{
            //P763048|P765794|P767814
            package.GET('P932700');
            package.DELETE;



            PackageLine.SETFILTER("Package No.",'P767814');
            IF PackageLine.FINDFIRST THEN REPEAT
            PackageLine.DELETE;
            UNTIL PackageLine.NEXT=0;
            MESSAGE('Done');
            }{
            SalesPrice.RESET;
            SalesPrice.SETRANGE("Sales Type",SalesPrice."Sales Type"::"Customer Price Group");
            SalesPrice.SETFILTER("Sales Code",'CES');
            IF SalesPrice.FINDFIRST THEN BEGIN
              REPEAT
                SalesPrice."Allow Invoice Disc." := TRUE;
                SalesPrice."Allow Line Disc." := TRUE;
                SalesPrice.MODIFY;
              UNTIL SalesPrice.NEXT = 0;
            END;
            }{
            User.RESET;
            User.SETFILTER("User Name",'%1|%2|%3|%4','TOPAZ\PICKUPIPAD_NY','TOPAZ\PICKUPIPAD_PA','TOPAZ\PICKUPIPAD_JAX','TOPAZ\PICKUPIPAD_CA');
            IF User.FINDSET THEN BEGIN
              REPEAT
                MyNotification.INIT();
                MyNotification.VALIDATE("User Id",User."User Name");
                MyNotification.VALIDATE("Notification Id",'{612a2701-4bbb-4c5b-b4c0-629d96b60644}');
                MyNotification.Name:='Warn about unposted documents.';
                MyNotification.VALIDATE(Enabled,FALSE);

                MyNotification.INSERT(TRUE);
                UserPreference.INIT  ;
                UserPreference."User ID" := User."User Name";
                UserPreference."Instruction Code" := 'QUERYPOSTONCLOSE';
                UserPreference.INSERT;
              UNTIL User.NEXT = 0;
            END;
            }
            {
            ManifestHeader.GET('MN106939');
            ManifestHeader."UPS Processing Required" := FALSE;
            ManifestHeader.MODIFY;
            ManifestHeader.GET('MN106935');
            ManifestHeader."UPS Processing Required" := FALSE;
            ManifestHeader.MODIFY;
            }
            //EB
            {
            ShipmentLine.SETFILTER("No.",'WS1686203');
            IF ShipmentLine.FINDFIRST THEN
              REPEAT
             IF tmpshipline.GET(ShipmentLine."No.",ShipmentLine."Line No.")THEN
                tmpshipline.DELETE();
              UNTIL ShipmentLine.NEXT=0;
              }
            {
            item.GET('');
            item.DELETE;
            }
            //EB
            {
            User.RESET;
            User.SETFILTER("User Name",'%1|%2|%3|%4','TOPAZ\PICKUPMOBILE_NY','TOPAZ\PICKUPMOBILE_CA','TOPAZ\PICKUPMOBILE_PA','TOPAZ\PICKUPMOBILE_JAX');
            IF User.FINDSET THEN BEGIN
              REPEAT
                MyNotification.INIT();
                MyNotification.VALIDATE("User Id",User."User Name");
                MyNotification.VALIDATE("Notification Id",'{612a2701-4bbb-4c5b-b4c0-629d96b60644}');
                MyNotification.Name:='Warn about unposted documents.';
                MyNotification.VALIDATE(Enabled,FALSE);

                MyNotification.INSERT(TRUE);
                UserPreference.INIT  ;
                UserPreference."User ID" := User."User Name";
                UserPreference."Instruction Code" := 'QUERYPOSTONCLOSE';
                UserPreference.INSERT;
              UNTIL User.NEXT = 0;
            END;
            }{

            Salesline.GET(Salesline."Document Type"::"Return Order",'',10000);
             Salesline.DELETE;
            Salesline.GET(Salesline."Document Type"::"Return Order",'',20000);
             Salesline.DELETE;
             Salesline.GET(Salesline."Document Type"::"Return Order",'',30000);
             Salesline.DELETE;
            }
            {ManifestHeader.GET('MN107241');
            ManifestHeader.Posted := TRUE;
            ManifestHeader.MODIFY
            }
            //IF salesinvoiceheader.GET('')THEN
            //salesinvoiceheader.DELETE;
            {itemjournalline.SETFILTER("Journal Batch Name",'ERAN');
            itemjournalline.SETFILTER("Journal Template Name",'PHYS. INVE');
            IF itemjournalline.FINDFIRST THEN
              REPEAT
                itemjournalline.VALIDATE("Qty. (Phys. Inventory)",0);
                itemjournalline.MODIFY(TRUE)
              UNTIL itemjournalline.NEXT=0;
              }
             {
            itemjournalline.SETFILTER("Journal Batch Name",'DEFAULT');
            itemjournalline.SETFILTER("Journal Template Name",'ITEM');
            IF itemjournalline.FINDFIRST THEN
              REPEAT
                itemjournalline.VALIDATE("Reason Code",'ADJUSTMENT');
                itemjournalline.MODIFY(TRUE)
              UNTIL itemjournalline.NEXT=0;
             } {
            WhseItemJournal.SETFILTER("Journal Batch Name",'IMPACT A');
            WhseItemJournal.SETFILTER("Journal Template Name",'ITEM');
            IF WhseItemJournal.FINDFIRST THEN
              REPEAT
                WhseItemJournal.VALIDATE("Reason Code",'ADJUSTMENT');
                WhseItemJournal.MODIFY(TRUE)
              UNTIL WhseItemJournal.NEXT=0;
              }
            {
            User.RESET;
            User.SETFILTER("User Name",'%1|%2|%3|%4|%5','TOPAZ\EGEORGE','TOPAZ\JWHALEN','TOPAZ\KGERBER','TOPAZ\PKUNIHIRO','TOPAZ\PLUTGEN');
            IF User.FINDSET THEN BEGIN
              REPEAT
                MyNotification.INIT();
                MyNotification.VALIDATE("User Id",User."User Name");
                MyNotification.VALIDATE("Notification Id",'{612a2701-4bbb-4c5b-b4c0-629d96b60644}');
                MyNotification.Name:='Warn about unposted documents.';
                MyNotification.VALIDATE(Enabled,FALSE);

                MyNotification.INSERT(TRUE);
                UserPreference.INIT  ;
                UserPreference."User ID" := User."User Name";
                UserPreference."Instruction Code" := 'QUERYPOSTONCLOSE';
                UserPreference.INSERT;
              UNTIL User.NEXT = 0;
            END;
            }
            {
            Shiptoaddress.RESET;
            Shiptoaddress.SETRANGE("Electric Location Code",'22');
            IF Shiptoaddress.FINDSET THEN
             REPEAT
              IF Shiptoaddress."Phone No." = '' THEN
               Shiptoaddress."Phone No." := '999-999-9999';
              IF Shiptoaddress.Contact = '' THEN
               Shiptoaddress.Contact := '.';

              Shiptoaddress.MODIFY(TRUE);
             UNTIL Shiptoaddress.NEXT = 0;
             }
             {item.RESET;
            item.SETRANGE("Phys Invt Counting Period Code",'D');
            IF item.FINDSET THEN BEGIN
              REPEAT
                item.VALIDATE("Phys Invt Counting Period Code",'YEARLY');
                item.MODIFY;
              UNTIL item.NEXT = 0;
            END;}

            {package.GET('P853898');
            package.Closed := FALSE;
            package.MODIFY;}
            {TransferLine.SETFILTER("Document No.",'TO1015878');
            IF TransferLine.FINDFIRST THEN
              REPEAT
                TransferLine."Transfer-To Bin Code":='RECEIPT';
                TransferLine.MODIFY;
              UNTIL TransferLine.NEXT=0;
            }



            //SalesInvHeader.GET(1864716);
            //SalesInvHeader."Campaign No."  := 'ARLP3P5';
            //SalesInvHeader.MODIFY;
            {
            package.GET('P878998');
            package.Closed := FALSE;
            package.MODIFY;
            }
            {TransferHeader.SETRANGE("No.",'TO1016102');
            IF TransferHeader.FINDFIRST THEN BEGIN
              { TransferLine.RESET;
                TransferLine.SETRANGE("Document No.",'TO1016102');
                IF  TransferLine.FINDSET THEN REPEAT
                    TransferLine.DELETE;
              UNTIL TransferLine.NEXT=0;}
              TransferHeader.DELETE;
            END;}
            {
            CustomerDivision.RESET;
            CustomerDivision.SETFILTER("Mfr. Rep. Code",'%1','BR');
            IF CustomerDivision.FINDSET THEN BEGIN
              REPEAT
                IF  Customer.GET(CustomerDivision."Customer No.") THEN
                  IF Customer."RSM Code" = 'KN' THEN
                  Customer.VALIDATE("RSM Code",'MH');
                  Customer.MODIFY;
              UNTIL CustomerDivision.NEXT = 0;
            END;}
            {
            CustomerDivision.RESET;
            CustomerDivision.SETFILTER("Mfr. Rep. Code",'%1','BE');
            IF CustomerDivision.FINDSET THEN BEGIN
              REPEAT
                IF  Customer.GET(CustomerDivision."Customer No.") THEN
                  IF Customer."RSM Code" = 'KN' THEN
                  Customer.VALIDATE("RSM Code",'SC ');
                  Customer.MODIFY;
              UNTIL CustomerDivision.NEXT = 0;
            END;
            }
            {
            package.GET('P932775');
            package.DELETE;



            PackageLine.SETFILTER("Package No.",'P932775');
            IF PackageLine.FINDFIRST THEN REPEAT
            PackageLine.DELETE;
            UNTIL PackageLine.NEXT=0;
            MESSAGE('Done');
            }
            //Salesline.GET(Salesline."Document Type"::Order,'SO1926877',20000);
            //alesline.DELETE;
            {Salesline.GET(Salesline."Document Type"::"Credit Memo",'',10000);
            Salesline.DELETE;
            Salesline.GET(Salesline."Document Type"::"Credit Memo",'',20000);
            Salesline.DELETE;
            Salesline.GET(Salesline."Document Type"::"Credit Memo",'',30000);
            Salesline.DELETE;}
            {
            User.RESET;
            IF User.FINDSET THEN BEGIN
              REPEAT
                IF NOT MyNotification.GET(User."User Name",'{612a2701-4bbb-4c5b-b4c0-629d96b60644}') THEN BEGIN
                  MyNotification.INIT();
                  MyNotification.VALIDATE("User Id",User."User Name");
                  MyNotification.VALIDATE("Notification Id",'{612a2701-4bbb-4c5b-b4c0-629d96b60644}');
                  MyNotification.Name:='Warn about unposted documents.';
                  MyNotification.VALIDATE(Enabled,FALSE);
                  MyNotification.INSERT(TRUE);
                END ELSE BEGIN
                  MyNotification.Name:='Warn about unposted documents.';
                  MyNotification.VALIDATE(Enabled,FALSE);
                  MyNotification.MODIFY(TRUE);
                END;
                IF NOT UserPreference.GET(User."User Name",'QUERYPOSTONCLOSE') THEN BEGIN
                UserPreference.INIT  ;
                UserPreference."User ID" := User."User Name";
                UserPreference."Instruction Code" := 'QUERYPOSTONCLOSE';
                UserPreference.INSERT;
                END ELSE BEGIN
                UserPreference."Instruction Code" := 'QUERYPOSTONCLOSE';
                UserPreference.MODIFY;
                END;
              UNTIL User.NEXT = 0;
            END;
            }

            {item.RESET;
            IF item.FINDSET THEN
              REPEAT
              StockStatusWkshLine.RESET;
              IF StockStatusWkshLine.GET(item."No.") THEN
               StockStatusWkshLine."ABC Code" := item."ABC Code";
               StockStatusWkshLine.MODIFY;
              UNTIL item.NEXT =0 ;
              }
              {IF SalesPrice.GET('SD1',0,'00019',103115D,'','','PCS',0) THEN BEGIN
              MESSAGE(SalesPrice."User ID");
              END;
              }
            }
          END;

  }
  CODE
  {
    VAR
      JobQEntry@1000000000 : Record 472;
      WSPJobQueue@1000000001 : Codeunit 50008;
      PaymentTerms@1000000002 : Record 3;
      CustomerDivision@1000000003 : Record 50007;
      CustLedgEntry@1000000004 : Record 21;
      CustLedgerEntry@1000000009 : Record 21;
      PaymentTermDayRange@1000000005 : Record 50033;
      JobQueueEntry@1000000006 : Record 472;
      Posting@1000000007 : Codeunit 50008;
      SalesSetup@1000000008 : Record 311;
      EMailMgt@1000000010 : Codeunit 14000903;
      SalesHeader@1000000011 : Record 36;
      Update@1000000012 : Boolean;
      FaxMgmt@1000000013 : Codeunit 50010;
      SalesInvoiceHeader@1000000014 : Record 112;
      CustLedgEntryRemTAmtQuery@1000000015 : Query 50005;
      EmailHandling@1000000016 : Codeunit 50011;
      item@1000000017 : Record 27;
      Customer@1000000018 : Record 18;
      SalesShipmentHeader@1000000019 : Record 110;
      packageline@1000000020 : Record 14000702;
      upslinkma@1000000021 : Record 14050007;
      postedpackage@1000000022 : Record 14000704;
      ManifestHeader@1000000023 : Record 14000712;
      EDIReceiveDocumentHdr@1000000024 : Record 14002358;
      Biloflading@1000000025 : Record 14000822;
      WarehouseRequest@1000000026 : Record 5765;
      ItemCrossReference@1000000027 : Record 5717;
      ApprovalEntry@1000000033 : Record 454;
      SalesHeaderApproval@1000000032 : Record 36;
      SalesShipmentHdr@1000000031 : Record 110;
      SalesInvoiceApprvl@1000000030 : Record 112;
      PostedapEntry@1000000029 : Record 456;
      PostAppCmtLine@1000000028 : Record 457;
      StockkeepingUnit@1000000034 : Record 5700;
      package@1000000035 : Record 14000701;
      SalesLine@1170000000 : Record 37;
      User@1000000036 : Record 2000000120;
      UserPreference@1000000037 : Record 1306;
      Receive@1000000038 : Record 14000601;
      PurchaseLine@1000000039 : Record 39;
      EMailListEntry@1000000040 : Record 14000908;
      char@1000000041 : Char;
      EMailIntegration@1000000042 : Codeunit 14000905;

    PROCEDURE PostApprovalEntries@105(AppEntry@1003 : Record 454;TabID@1001 : Integer;PostedDocNo@1002 : Code[20]);
    VAR
      ApprovalEntryLocal@1000 : Record 454;
      PostedApprovalEntry@1004 : Record 456;
      ApprovalCommentLine@1000000001 : Record 455;
      PostedApprovalCommentLine@1000000000 : Record 457;
    BEGIN
      {
      PostedapEntry.RESET;
      IF NOT PostedapEntry.GET(TabID,PostedDocNo,AppEntry."Sequence No.") THEN BEGIN
          AppEntry.SETAUTOCALCFIELDS("Pending Approvals","Number of Approved Requests","Number of Rejected Requests");

          PostedApprovalEntry.INIT;
          PostedApprovalEntry.TRANSFERFIELDS(AppEntry);
          PostedApprovalEntry."Number of Approved Requests" := AppEntry."Number of Approved Requests";
          PostedApprovalEntry."Number of Rejected Requests" := AppEntry."Number of Rejected Requests";
          PostedApprovalEntry."Table ID" := TabID;
          PostedApprovalEntry."Document No." := PostedDocNo;
          PostedApprovalEntry."Entry No." := 0;
          PostedApprovalEntry.INSERT(TRUE);

          PostAppCmtLine.RESET;
          PostAppCmtLine.SETRANGE("Table ID",TabID);
          PostAppCmtLine.SETRANGE("Document No.",PostedDocNo);
          IF NOT PostAppCmtLine.FINDFIRST THEN BEGIN
            ApprovalCommentLine.RESET;
            ApprovalCommentLine.SETRANGE("Document Type",AppEntry."Document Type");
            ApprovalCommentLine.SETRANGE("Document No.",AppEntry."Document No.");
            IF ApprovalCommentLine.FINDSET THEN
              REPEAT
                PostedApprovalCommentLine.INIT;
                PostedApprovalCommentLine.TRANSFERFIELDS(ApprovalCommentLine);
                PostedApprovalCommentLine."Entry No." := 0;
                PostedApprovalCommentLine."Table ID" := TabID;
                PostedApprovalCommentLine."Document No." := PostedDocNo;
               // PostedApprovalCommentLine."Posted Record ID" := PostedRecordID;
                PostedApprovalCommentLine.INSERT(TRUE);
              UNTIL ApprovalCommentLine.NEXT = 0;
            END;
      END;
      }
    END;

    PROCEDURE DeleteApprovalEntries@93(AppEntry@1000000002 : Record 454;TabID@1000000001 : Integer;DocNo@1000000000 : Code[20]);
    VAR
      ApprovalEntry@1001 : Record 454;
      ApprovalCommentLine@1000000003 : Record 455;
    BEGIN
      {
      ApprovalEntry.SETRANGE("Table ID",TabID);
      ApprovalEntry.SETRANGE("Document Type",AppEntry."Document Type");
      ApprovalEntry.SETRANGE("Document No.",AppEntry."Document No.");
      ApprovalEntry.DELETEALL(TRUE);

      ApprovalCommentLine.SETRANGE("Table ID",TabID);
      ApprovalCommentLine.SETRANGE("Document Type",AppEntry."Document Type");
      ApprovalCommentLine.SETRANGE("Document No.",AppEntry."Document No.");
      ApprovalCommentLine.DELETEALL(TRUE);
      }
    END;

    LOCAL PROCEDURE TPZ_SendNotifications@1000000012(InvoiceNo@1000000000 : Code[20]);
    VAR
      EMailMgt@1000000001 : Codeunit 14000903;
      FaxMgmt@1000000005 : Codeunit 50010;
      SalesPostPrint@1000000006 : Codeunit 82;
      EmailInvoice@1000000007 : Boolean;
      PrintInvoice@1000000008 : Boolean;
      FaxInvoice@1000000009 : Boolean;
      EmailCredit@1000000010 : Boolean;
      EmailShipment@1000000011 : Boolean;
      JobQueueCat@1000000012 : Record 471;
      JobQueueEntry@1000000013 : Record 472;
      PostDescription@1000000014 : Text;
      SalesInvHeader@1000000002 : Record 112;
    BEGIN
      {
      SalesSetup.GET;
      SalesInvHeader.GET('1407823');
      WITH SalesInvHeader DO BEGIN
        IF SalesSetup."Enable E-Mail" AND NOT "EDI Invoice" THEN
              EMailMgt.SendSalesInvoiceNotice(SalesInvHeader,FALSE,FALSE);

          IF SalesSetup."Enable Fax" AND Fax AND NOT "EDI Invoice" THEN
              FaxMgmt.SalesInvoice(SalesInvHeader);

          IF SalesSetup."Enable Mail" AND Mail AND NOT "EDI Invoice" THEN
                    SalesPostPrint.GetInvoiceReport(SalesInvHeader);
      END;
        }
    END;

    PROCEDURE DailyProdLifeCycleIntroReport@1000000000();
    VAR
      ItemProdLifeCycleIntroReport@1000000000 : Report 51086;
      MailVar@1000000004 : Codeunit 400;
      SMTP_Setup@1000000003 : Record 409;
      ReportUser@1000000002 : Record 50015;
      rptid@1000000001 : Integer;
      Text0001@1000000012 : TextConst 'ENU=Item ProdLifeCycle-Intro Report';
      Text0002@1000000008 : TextConst 'ENU=Please find the Report attached';
      Text0003@1000000007 : TextConst 'ENU=please find the PDF file Attached';
      Excel@1000000006 : TextConst 'ENU=.xlsx';
      PDF@1000000005 : TextConst 'ENU=.pdf';
    BEGIN
      {//<TPZ2321>
      SMTP_Setup.GET('');
      ReportUser.GET(FORMAT(COPYSTR(ItemProdLifeCycleIntroReport.OBJECTID(FALSE),8,15)));

      ItemProdLifeCycleIntroReport.SAVEASEXCEL(ReportUser."File Path"+ItemProdLifeCycleIntroReport.OBJECTID(TRUE)+FORMAT(WORKDATE,0,5)+Excel);
      IF EXISTS(ReportUser."File Path"+ItemProdLifeCycleIntroReport.OBJECTID(TRUE)+FORMAT(WORKDATE,0,5)+Excel) THEN BEGIN
          MailVar.CreateMessage(Text0001,SMTP_Setup."From Address",ReportUser."User Email",Text0001,'',TRUE);
          MailVar.AddAttachment(ReportUser."File Path"+ItemProdLifeCycleIntroReport.OBJECTID(TRUE)+FORMAT(WORKDATE,0,5)+Excel,
                                ItemProdLifeCycleIntroReport.OBJECTID(TRUE)+FORMAT(WORKDATE,0,5)+Excel);
          MailVar.Send;
      END;
      //</TPZ2321>
      }
    END;

    LOCAL PROCEDURE jobresupdate@1000000001();
    VAR
      jobres@1000000000 : Record 5066;
      jobr@1000000001 : Text;
    BEGIN
      {
      jobres.RESET;
      REPEAT
        jobr := DELCHR(jobres.Description,'<>',' ');
        jobr := COPYSTR(jobr,STRLEN(jobr)-7,8);
        //IF jobr = '


      UNTIL jobres.NEXT=0;
      }
    END;

    LOCAL PROCEDURE UpdateCSR@1000000002();
    VAR
      CustomerDivision@1000000000 : Record 50007;
    BEGIN
      {CustomerDivision.RESET;
      CustomerDivision.SETRANGE("CSR Code",'JILLIAN');
      IF CustomerDivision.FINDSET THEN BEGIN
        REPEAT
          CustomerDivision."CSR Code" := 'THERESA';
          CustomerDivision.MODIFY;
        UNTIL CustomerDivision.NEXT = 0;
      END;
      MESSAGE('Batch Completed..!');
      }
      {
      StockkeepingUnit.SETFILTER("Location Code",'%1|%2|%3','25','30','76');
      IF StockkeepingUnit.FINDFIRST THEN
        REPEAT
            StockkeepingUnit."Next Counting Start Date" := 010119D;
            StockkeepingUnit."Next Counting End Date" := 123119D;
            StockkeepingUnit."Next Counting Period" := FORMAT(StockkeepingUnit."Next Counting Start Date") + '..' + FORMAT(StockkeepingUnit."Next Counting End Date");
            StockkeepingUnit.MODIFY(TRUE);
        UNTIL StockkeepingUnit.NEXT=0;
        }

      {
      package.GET('P626428');
      package.Closed := FALSE;
      package.MODIFY;
      }
    END;

    LOCAL PROCEDURE PriceIncrease@1000000003();
    VAR
      ItemModify@1000000001 : Record 27;
      UnitPriceDec@1000000000 : Decimal;
      SalesPrice@1000000005 : Record 7002;
      HotSheetPrice@1000000004 : Record 50017;
      tmpsalepriceunitprice@1000000003 : Decimal;
      tmpsalepricehotsheet@1000000002 : Decimal;
    BEGIN
      //ItemModify.SETFILTER("Item Category Code",'PVC');
      //ItemModify.SETFILTER("Shortcut Dimension 5 Code",'E');
      ItemModify.SETFILTER("Item Category Code",'LIQTIGHT');
      ItemModify.SETFILTER("Product Group Code",'LT-COND');
      IF ItemModify.FINDFIRST THEN REPEAT
         UnitPriceDec:=10.0;
         ItemModify.VALIDATE("Unit Price",((ItemModify."Unit Price")*(UnitPriceDec/100)+ItemModify."Unit Price"));
         ItemModify.MODIFY(TRUE);

         SalesPrice.SETRANGE("Item No.",ItemModify."No.");
         IF SalesPrice.FINDSET THEN
              REPEAT
                 tmpsalepriceunitprice:=(SalesPrice."Unit Price"*UnitPriceDec/100)+SalesPrice."Unit Price";
                 SalesPrice.VALIDATE("Unit Price",tmpsalepriceunitprice);
                 SalesPrice.MODIFY(TRUE);
               UNTIL SalesPrice.NEXT=0;

          HotSheetPrice.SETRANGE("Item No.",ItemModify."No.");
          IF HotSheetPrice.FINDSET THEN
              REPEAT
                 tmpsalepricehotsheet:=(HotSheetPrice."Unit Price"*UnitPriceDec/100)+HotSheetPrice."Unit Price";
                 HotSheetPrice.VALIDATE("Unit Price",tmpsalepricehotsheet);
                 HotSheetPrice.MODIFY(TRUE);
             UNTIL HotSheetPrice.NEXT=0;

       UNTIL ItemModify.NEXT=0;

    END;

    LOCAL PROCEDURE ModifyItemAttributes@1000000004();
    VAR
      ItemAttributeValueMapping@1000000000 : Record 7505;
      Item@1000000001 : Record 27;
    BEGIN
      {Item.SETFILTER("Shortcut Dimension 5 Code",'E');
      IF Item.FINDSET THEN REPEAT
        IF ItemAttributeValueMapping.GET('27',Item."No.",'1') THEN
          ItemAttributeValueMapping.DELETE;
      UNTIL Item.NEXT = 0;
      }
    END;

    LOCAL PROCEDURE UpdateCustomerLocation@1000000005();
    VAR
      CustomerDivision@1000000000 : Record 50007;
      ShiptoAddressDivision@1000000001 : Record 51002;
      WarehouseEmployee@1000000002 : Record 7301;
    BEGIN
      {ShiptoAddressDivision.SETFILTER("Location Code",'76');
      ShiptoAddressDivision.MODIFYALL("Location Code",'80');

      CustomerDivision.SETFILTER("Location Code",'76');
      CustomerDivision.MODIFYALL("Location Code",'80');
      }
      {
      ShiptoAddressDivision.SETFILTER("Location Code",'1');
      ShiptoAddressDivision.SETFILTER("Shipping Agent Code",'LOCAL');
      ShiptoAddressDivision.MODIFYALL("Location Code",'80');

      CustomerDivision.SETFILTER("Location Code",'1');
      CustomerDivision.SETFILTER("Shipping Agent Code",'LOCAL');
      CustomerDivision.MODIFYALL("Location Code",'80');
      }

      //WarehouseEmployee.SETFILTER("Location Code",'76');
      //WarehouseEmployee.MODIFYALL("Location Code",'80');
    END;

    LOCAL PROCEDURE UpdateReleaseSummary@1000000006();
    VAR
      BillofLading@1000000000 : Record 14000822;
      BOLMgt@1000000001 : Codeunit 14000821;
    BEGIN
      {BillofLading.SETRANGE(Released,TRUE);
      BillofLading.SETRANGE("Summary Released",FALSE);
      IF BillofLading.FINDSET THEN
      REPEAT
        BillofLading."Summary Released" := TRUE;
        BOLMgt.CloseBOLSummary(BillofLading);
      UNTIL BillofLading.NEXT = 0;
      }
    END;

    LOCAL PROCEDURE UpdateCommission@1000000007();
    VAR
      CommJournalLine@1000000000 : Record 51705;
    BEGIN
      {CommJournalLine.RESET;
      CommJournalLine.SETRANGE("Journal Template Name",'Default');
      CommJournalLine.SETRANGE("Journal Batch Name",'SHERRIE-EL');
      CommJournalLine.SETRANGE("Account Type",CommJournalLine."Account Type"::"Mfr. Rep.");
      CommJournalLine.SETRANGE("Account No.",'COR');
      IF CommJournalLine.FINDFIRST THEN
        REPEAT
          CommJournalLine."E-Mail Notification Handled" := FALSE;
          CommJournalLine.MODIFY;
        UNTIL CommJournalLine.NEXT = 0;
      //MESSAGE(FORMAT(CommJournalLine.COUNT));
      }
    END;

    LOCAL PROCEDURE TPZ_SendASNNotification@1000000017();
    VAR
      ASNMgt@1000000001 : Codeunit 50001;
      SalesShptHeader1@1000000000 : Record 110;
    BEGIN
       // </TPZ162, TPZ143>
        // << Shipping

        //TOP060 Advance Shipping Notices via Emaial - 04212015
        //<TPZ1628>
        //IF Ship AND (SalesSetup."Enable ASN E-Mail") AND (SalesShptHeader."E-Mail (ASN)" <> '') THEN
       {
        SalesShptHeader1.RESET;
        SalesShptHeader1.SETRANGE("Posting Date",082820D,TODAY);
        IF SalesShptHeader1.FINDFIRST THEN REPEAT
        //IF (SalesSetup."Enable ASN E-Mail") THEN
        //</TPZ1628>
          ASNMgt.SendSalesApprovalsMail(SalesShptHeader1,TRUE);
        //TOP060 Advance Shipping Notices via Emaial - 04212015
        UNTIL SalesShptHeader1.NEXT=0;
        }
    END;

    LOCAL PROCEDURE ExportEDIInvoiceWithDataError@1000000008();
    VAR
      EDISendDocumentHdr@1000000000 : Record 14002369;
      EDISendDocumentField@1000000003 : Record 14002370;
      SalesInvoiceHeaderlocal@1000000001 : Record 112;
      EDICustCrossReference@1000000002 : Record 14002362;
      BillofLading@1000000004 : Record 14000822;
    BEGIN

      EDISendDocumentHdr.RESET;
      //EDISendDocumentHdr.SETRANGE("No.",'SD443834');
      EDISendDocumentHdr.SETRANGE("Created Date",110120D,TODAY);
      EDISendDocumentHdr.SETRANGE("Sent Date",0D);
      //EDISendDocumentHdr.SETFILTER("Trade Partner No.",'%1','DULLESELEC');
      //EDISendDocumentHdr.SETRANGE("Shortcut Dimension 5 Code",'L');
      EDISendDocumentHdr.SETRANGE("EDI Document No.",'856');
      EDISendDocumentHdr.SETRANGE("Data Error",TRUE);
      IF EDISendDocumentHdr.FINDSET THEN REPEAT
        IF EDIReceiveDocumentHdr."EDI Document No." = '810' THEN
          SalesInvoiceHeaderlocal.GET(EDISendDocumentHdr."Document No.");
        IF EDIReceiveDocumentHdr."EDI Document No." = '856' THEN
          BillofLading.GET(EDISendDocumentHdr."Document No.");
        EDISendDocumentField.RESET;
        EDISendDocumentField.SETRANGE("No.",EDISendDocumentHdr."No.");
        EDISendDocumentField.SETRANGE("Data Error",TRUE);
        IF EDISendDocumentField.FINDSET THEN REPEAT
          EDICustCrossReference.RESET;
          EDICustCrossReference.SETRANGE("Trade Partner No.",EDISendDocumentHdr."Trade Partner No.");
          IF EDIReceiveDocumentHdr."EDI Document No." <> '856' THEN BEGIN
            EDICustCrossReference.SETRANGE("Navision Sell To Code",SalesInvoiceHeaderlocal."Sell-to Customer No.");
            EDICustCrossReference.SETRANGE("Navision Ship To Code",SalesInvoiceHeaderlocal."Ship-to Code");
          END ELSE BEGIN
            EDICustCrossReference.SETRANGE("Navision Sell To Code",BillofLading."Ship-to No.");
            EDICustCrossReference.SETRANGE("Navision Ship To Code",BillofLading."Ship-to Code");
          END;
          IF EDICustCrossReference.FINDFIRST THEN BEGIN
            IF EDISendDocumentField."Field Name" = 'EDI_Ship-to_Code' THEN BEGIN
              EDISendDocumentField."Field Text Value" := EDICustCrossReference."EDI Ship To Code";
              EDISendDocumentField."Data Error" := FALSE;
            END;
            IF EDISendDocumentField."Field Name" = 'EDI_Sell-to_Code' THEN BEGIN
              EDISendDocumentField."Field Text Value" := EDICustCrossReference."EDI Sell To Code";
              EDISendDocumentField."Data Error" :=  FALSE;
            END;
            EDISendDocumentField.MODIFY;
          END;
          IF EDISendDocumentField."Field Name" = 'EDI_Unit_of_Measure' THEN BEGIN
            EDISendDocumentField."Field Text Value" := 'EA';
            EDISendDocumentField."Data Error" :=  FALSE;
            EDISendDocumentField.MODIFY;
          END;


        UNTIL EDISendDocumentField.NEXT = 0;
      UNTIL EDISendDocumentHdr.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

