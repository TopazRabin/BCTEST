OBJECT Codeunit 23044537 WHI Activity Log Mgmt.
{
  OBJECT-PROPERTIES
  {
    Date=03/18/21;
    Time=[ 3:35:44 PM];
    Modified=Yes;
    Version List=WHI2.4.7684.0;
  }
  PROPERTIES
  {
    TableNo=23044511;
    OnRun=BEGIN

            //createPDAActivityEntry(Rec);
          END;

  }
  CODE
  {
    VAR
      iEventID@1000000002 : Integer;
      cuCommonFuncs@1000000012 : Codeunit 23044501;
      cuTranslationMgmt@1000000013 : Codeunit 23044526;

    PROCEDURE getDocumentNo@1000000000(VAR precEventParam@1000000000 : Record 23044511) : Code[20];
    VAR
      lcodDocumentNo@1000000002 : Code[20];
    BEGIN
      // Return document from the passed in param from PDA

      lcodDocumentNo := precEventParam.getDocumentNo();

      IF (lcodDocumentNo = '') THEN BEGIN
        CASE iEventID OF
          50001,50002,50051:
            BEGIN
              lcodDocumentNo := precEventParam.getValue('receipt_number');
            END;
          50005,50006,50050:
            BEGIN
              lcodDocumentNo := precEventParam.getValue('purchase_number');
            END;
          50052,70052:
            BEGIN
              lcodDocumentNo := precEventParam.getValue('transfer_number');
            END;
          70050:
            BEGIN
              lcodDocumentNo := precEventParam.getValue('sales_number');
            END;
          40001:
            BEGIN
              lcodDocumentNo := precEventParam.getValue('prod_number');
            END;
          40002,40005:
            BEGIN
              lcodDocumentNo := precEventParam.getValue('prod_order_number');
            END;
          95001,95002,95003,95004,95005,95006,95009,95011,95012,95013,95014,95015,95016,95019:
            BEGIN
              lcodDocumentNo := precEventParam.getValue('lp_number');
            END;
          70051:
            BEGIN
              lcodDocumentNo := precEventParam.getValue('shipment_number');
            END;
          30001,30002,30003,30004,30005,30006,30007:
            BEGIN
              lcodDocumentNo := precEventParam.getValue('sheet_name');
            END;
        END;
      END;
      EXIT(lcodDocumentNo);
    END;

    PROCEDURE getSummaryType@1000000001(VAR precEventParam@1000000000 : Record 23044511) : Integer;
    VAR
      lrecEvent@1000000001 : Record 23044534;
      liSummaryType@1000000002 : Integer;
    BEGIN
      // Return summary type

      liSummaryType := 0;

      IF lrecEvent.GET(iEventID) THEN BEGIN
        liSummaryType := lrecEvent."Summary Type";
      END;


      EXIT(liSummaryType);
    END;

    PROCEDURE generateDetails@1000000017(VAR ptrecEventParams@1000000000 : TEMPORARY Record 23044511;poptSummaryType@1000000001 : ' ,Start Document,End Document,Change Line,List,Scan,Assign LP,Print,Output') : Text[250];
    VAR
      lcodDocumentNo@1000000008 : Code[20];
      lcodItemNo@1000000007 : Text;
      lcodVariantCode@1000000006 : Text;
      lsLotNo@1000000005 : Text;
      lsSerialNo@1000000004 : Text;
      ltxtBarcode@1000000002 : Text[100];
      ltxtReturnMessage@1000000003 : Text[250];
      ldQuantity@1000000010 : Decimal;
      lcodLicensePlateNumber@1000000012 : Code[20];
      liLineNo@1000000011 : Integer;
      lrecProdOrderLine@1000000013 : Record 5406;
      lcodRegionCode@1000000009 : Code[10];
    BEGIN
      // Generate details for the event

      lcodVariantCode := ptrecEventParams.getVariant();
      lsLotNo := ptrecEventParams.getLotNo();
      lsSerialNo := ptrecEventParams.getSerialNo();
      lcodDocumentNo := getDocumentNo(ptrecEventParams);
      lcodItemNo := getItemNo(ptrecEventParams, lcodDocumentNo);
      ldQuantity := getQuantity(ptrecEventParams);

      ltxtBarcode := COPYSTR(ptrecEventParams.getValue('barcode'), 1, MAXSTRLEN(ltxtBarcode));


      lcodRegionCode := ptrecEventParams.getValue('device_culture'); //<IW author="R.Trudeau" date="10/17/18" issue="TFS3495" />

      ltxtReturnMessage := '';

      CASE poptSummaryType OF
        poptSummaryType::"Start Document":
        BEGIN
          ltxtReturnMessage := STRSUBSTNO(cuTranslationMgmt.getTranslatedString('LOG_OPEN_DOCUMENT', lcodRegionCode), lcodDocumentNo);
        END;

        poptSummaryType::"End Document":
        BEGIN
          ltxtReturnMessage := STRSUBSTNO(cuTranslationMgmt.getTranslatedString('LOG_CLOSE_DOCUMENT', lcodRegionCode), lcodDocumentNo);
        END;

        poptSummaryType::"Change Line":
        BEGIN
          IF (lsLotNo <> '') THEN BEGIN
            ltxtReturnMessage := STRSUBSTNO(cuTranslationMgmt.getTranslatedString('LOG_CHANGE_LINE_WITH_LN', lcodRegionCode), lcodItemNo, ldQuantity, lcodDocumentNo, lsLotNo);
          END ELSE IF (lsSerialNo <> '') THEN BEGIN
            ltxtReturnMessage := STRSUBSTNO(cuTranslationMgmt.getTranslatedString('LOG_CHANGE_LINE_WITH_SN', lcodRegionCode), lcodItemNo, ldQuantity, lcodDocumentNo, lsSerialNo);
          END ELSE BEGIN
            ltxtReturnMessage := STRSUBSTNO(cuTranslationMgmt.getTranslatedString('LOG_CHANGE_LINE', lcodRegionCode), lcodItemNo, ldQuantity, lcodDocumentNo);
          END;
        END;

        poptSummaryType::Print:
        BEGIN
          ltxtReturnMessage := STRSUBSTNO(cuTranslationMgmt.getTranslatedString('LOG_PRINT_DOCUMENT', lcodRegionCode), lcodDocumentNo);
        END;

        poptSummaryType::"Assign LP":
        BEGIN
          lcodLicensePlateNumber := ptrecEventParams.getValue('lp_number');
          ltxtReturnMessage := STRSUBSTNO(cuTranslationMgmt.getTranslatedString('LOG_ASSIGN_LP', lcodRegionCode), lcodLicensePlateNumber, lcodDocumentNo);
        END;

        poptSummaryType::Scan:
        BEGIN
          ltxtReturnMessage := COPYSTR(ltxtBarcode, 1,  MAXSTRLEN(ltxtReturnMessage));
        END;

        poptSummaryType::List:
        BEGIN
          ltxtReturnMessage := STRSUBSTNO(cuTranslationMgmt.getTranslatedString('LOG_LOOKUP_LIST', lcodRegionCode));
        END;

        poptSummaryType::Output:
        BEGIN
          IF (iEventID = 40008) THEN BEGIN
            liLineNo := ptrecEventParams.getLineNo();
            lrecProdOrderLine.GET(lrecProdOrderLine.Status::Released, lcodDocumentNo, liLineNo);

            IF (lsLotNo <> '') THEN BEGIN
              ltxtReturnMessage := STRSUBSTNO(cuTranslationMgmt.getTranslatedString('LOG_OUTPUT_PROD_ORDER_WITH_LN', lcodRegionCode), ldQuantity, lrecProdOrderLine."Item No.", lcodDocumentNo, lsLotNo);
            END ELSE IF (lsSerialNo <> '') THEN BEGIN
              ltxtReturnMessage := STRSUBSTNO(cuTranslationMgmt.getTranslatedString('LOG_OUTPUT_PROD_ORDER_WITH_SN', lcodRegionCode), ldQuantity, lrecProdOrderLine."Item No.", lcodDocumentNo, lsSerialNo);
            END ELSE BEGIN
              ltxtReturnMessage := STRSUBSTNO(cuTranslationMgmt.getTranslatedString('LOG_OUTPUT_PROD_ORDER', lcodRegionCode), ldQuantity, lrecProdOrderLine."Item No.", lcodDocumentNo);
            END;
          END;
          IF (iEventID = 97204) THEN BEGIN
            ltxtReturnMessage := STRSUBSTNO(cuTranslationMgmt.getTranslatedString('LOG_OUTPUT_ASSEMBLY', lcodRegionCode), lcodDocumentNo);
          END;
        END;
      END;

      // IF we don't get anything, try scanned barcode
      IF (ltxtReturnMessage = '') THEN BEGIN
        ltxtReturnMessage := COPYSTR(ltxtBarcode, 1,  MAXSTRLEN(ltxtReturnMessage));
      END;

      EXIT(ltxtReturnMessage);
    END;

    PROCEDURE getItemNo@1000000006(VAR ptrecEventParams@1000000000 : TEMPORARY Record 23044511;pcodDocumentNo@1000000006 : Code[20]) : Text;
    VAR
      lcodItemNo@1000000001 : Text;
      lrecDocuSearchRule@1000000002 : Record 23044529;
      lfrefFieldItem@1000000003 : FieldRef;
      lcuDocLinks@1000000004 : Codeunit 23044529;
      lrefRecord@1000000005 : RecordRef;
    BEGIN
      // Try get item from event paramter first, if not in it, try from record search

      lcodItemNo := ptrecEventParams.getItemNo();
      IF ((lcodItemNo <> '') AND (pcodDocumentNo = lcodItemNo)) THEN BEGIN
        lcodItemNo := '';
      END;

      IF (lcodItemNo = '') THEN BEGIN
        IF (lcuDocLinks.GetRecordRef(ptrecEventParams, lrefRecord)) THEN BEGIN
          lrecDocuSearchRule.SETRANGE("Table No.", lrefRecord.NUMBER);
          lrecDocuSearchRule.SETFILTER("Doc. Field No.", '<>0');
          lrecDocuSearchRule.SETFILTER("Line Field No.", '<>0');
          lrecDocuSearchRule.SETFILTER("Item Field No.", '<>0');
          IF (lrecDocuSearchRule.FINDFIRST) THEN BEGIN
            lfrefFieldItem := lrefRecord.FIELD(lrecDocuSearchRule."Item Field No.");
            lcodItemNo := FORMAT(lfrefFieldItem.VALUE);
          END;
        END;
      END;

      EXIT(lcodItemNo);
    END;

    PROCEDURE getQuantity@1000000002(VAR ptrecEventParams@1000000000 : TEMPORARY Record 23044511) : Decimal;
    VAR
      ldQuantity@1000000001 : Decimal;
    BEGIN
      // Try get quantity from the event parameter

      ldQuantity := 0;

      ldQuantity := ptrecEventParams.getValueAsDecimal('Quantity');
      IF (ldQuantity = 0) THEN BEGIN
        ldQuantity := ptrecEventParams.getValueAsDecimal('qty');
      END;

      IF (ldQuantity = 0) THEN BEGIN
        ldQuantity := ptrecEventParams.getValueAsDecimal('qty_to_handle');
      END;

      IF (ldQuantity = 0) THEN BEGIN
        ldQuantity := ptrecEventParams.getValueAsDecimal('qty_to_output');
      END;

      IF (ldQuantity = 0) THEN BEGIN
        ldQuantity := ptrecEventParams.getValueAsDecimal('qty_to_receive');
      END;

      IF (ldQuantity = 0) THEN BEGIN
        ldQuantity := ptrecEventParams.getValueAsDecimal('qty_to_ship');
      END;

      EXIT(ldQuantity);
    END;

    PROCEDURE logActivity@1000000009(VAR ptrecEventParams@1000000016 : TEMPORARY Record 23044511);
    VAR
      lrecActivityEntry@1000000014 : Record 23044532;
      lrecConfig@1000000013 : Record 23044504;
      lcodDocumentNo@1000000011 : Code[20];
      lcodItemNo@1000000010 : Text;
      lcodVariantCode@1000000009 : Text;
      lsLotNo@1000000008 : Text;
      lsSerialNo@1000000007 : Text;
      liLineNo@1000000005 : Integer;
      ltxtBarcode@1000000004 : Text[100];
      ltxtPDAVersion@1000000003 : Text[20];
      ltxtPDAHostName@1000000002 : Text[100];
      ltxtPDACulture@1000000001 : Text[20];
      ltxtUser@1000000000 : Text[100];
      lcodNewBinCode@1000000006 : Code[20];
      lrecEvent@1000000012 : Record 23044534;
      liDocumentType@1000000015 : Integer;
      liSourceDocumentType@1000000017 : Integer;
      lcodSourceDocumentNo@1000000018 : Code[20];
      liSourceDocumentLineNo@1000000019 : Integer;
      lcodPreviousBinCode@1000000020 : Code[20];
      ldPreviousQuantity@1000000021 : Decimal;
      ldNewQuantity@1000000022 : Decimal;
      liSummaryType@1000000023 : Integer;
      ltxtDetails@1000000024 : Text[250];
      lbInbound@1000000025 : Boolean;
    BEGIN
      // Create a device activity entry

      iEventID := ptrecEventParams.getEvent();
      lrecEvent.GET(iEventID);

      IF (NOT lrecEvent."Log Events") THEN
        EXIT;

      cuCommonFuncs.getDeviceConfig( lrecConfig,ptrecEventParams);

      liDocumentType := ptrecEventParams.getValueAsInt('Document Type');
      IF (liDocumentType = 0) THEN BEGIN
        liDocumentType := ptrecEventParams.getValueAsInt('document_type');
      END;
      lcodDocumentNo := getDocumentNo(ptrecEventParams);

      liSummaryType := ptrecEventParams.getValueAsInt('Summary Type');
      IF (liSummaryType = 0) THEN BEGIN
        liSummaryType := ptrecEventParams.getValueAsInt('summary_type');
      END;
      IF (liSummaryType = 0) THEN BEGIN
        liSummaryType := getSummaryType(ptrecEventParams);
      END;

      IF (liSummaryType = lrecActivityEntry."Summary Type"::"Change Line") THEN BEGIN
        liLineNo := ptrecEventParams.getLineNo();
        IF (liLineNo = 0) THEN BEGIN
          liLineNo := ptrecEventParams.getValueAsInt('Document Line No.');
        END;

        lcodPreviousBinCode := ptrecEventParams.getValue('Previous Bin');
        IF (lcodPreviousBinCode = '') THEN BEGIN
          lcodPreviousBinCode := ptrecEventParams.getValue('previous_bin');
        END;

        lcodNewBinCode := ptrecEventParams.getValue('New Bin');
        IF (lcodNewBinCode = '') THEN BEGIN
          lcodNewBinCode := ptrecEventParams.getValue('new_bin');
        END;
        IF (lcodNewBinCode = '') THEN BEGIN
          lcodNewBinCode := ptrecEventParams.getBin();
        END;

        lcodItemNo := getItemNo(ptrecEventParams, lcodDocumentNo);
        lcodVariantCode := ptrecEventParams.getVariant();
        lsLotNo := ptrecEventParams.getLotNo();
        lsSerialNo := ptrecEventParams.getSerialNo();
        ldPreviousQuantity := ptrecEventParams.getValueAsDecimal('Previous Quantity');
        IF (ldPreviousQuantity = 0) THEN BEGIN
          ldPreviousQuantity := ptrecEventParams.getValueAsDecimal('previous_quantity');
        END;

        ldNewQuantity := ptrecEventParams.getValueAsDecimal('New Quantity');
        IF (ldNewQuantity = 0) THEN BEGIN
          ldNewQuantity := ptrecEventParams.getValueAsDecimal('new_quantity');
        END;
      END;

      liSourceDocumentType := ptrecEventParams.getValueAsInt('source_document_type');
      IF (liSourceDocumentType = 0) THEN BEGIN
        liSourceDocumentType := ptrecEventParams.getValueAsInt('Source Document Type');
      END;

      lcodSourceDocumentNo := ptrecEventParams.getValue('source_document_no');
      IF (lcodSourceDocumentNo = '') THEN BEGIN
        lcodSourceDocumentNo := ptrecEventParams.getValue('Source Document No.');
      END;

      liSourceDocumentLineNo := ptrecEventParams.getValueAsInt('source_document_line_no');
      IF (liSourceDocumentLineNo = 0) THEN BEGIN
        liSourceDocumentLineNo := ptrecEventParams.getValueAsInt('Source Document Line No.');
      END;

      ltxtBarcode := COPYSTR(ptrecEventParams.getValue('barcode'), 1, MAXSTRLEN(ltxtBarcode));
      ltxtPDAVersion := COPYSTR(ptrecEventParams.getValue('device_version'), 1, MAXSTRLEN(ltxtPDAVersion));
      ltxtPDAHostName := COPYSTR(ptrecEventParams.getValue('device_hostname'), 1, MAXSTRLEN(ltxtPDAHostName));
      ltxtPDACulture := COPYSTR(ptrecEventParams.getValue('device_culture'), 1, MAXSTRLEN(ltxtPDACulture));
      ltxtUser := COPYSTR(ptrecEventParams.getValue('user_name'), 1, MAXSTRLEN(ltxtUser ));
      IF ( ltxtUser = '' ) THEN BEGIN
        ltxtUser := COPYSTR( USERID, 1, MAXSTRLEN( ltxtUser) );
      END;
      ltxtDetails := ptrecEventParams.getValue('details');
      lbInbound := ptrecEventParams.getValueAsBool('inbound');

      lrecActivityEntry.INIT;
      lrecActivityEntry.VALIDATE("Document Type", liDocumentType);
      lrecActivityEntry.VALIDATE("Document No.", lcodDocumentNo);
      lrecActivityEntry.VALIDATE("Source Document Type", liSourceDocumentType);
      lrecActivityEntry.VALIDATE("Summary Type", liSummaryType);
      lrecActivityEntry.VALIDATE("Source Document No.", lcodSourceDocumentNo);
      lrecActivityEntry.VALIDATE(Inbound, lbInbound);
      IF (liSummaryType = lrecActivityEntry."Summary Type"::"Change Line") THEN BEGIN
        lrecActivityEntry.VALIDATE("Document Line No.", liLineNo);
        lrecActivityEntry.VALIDATE("Source Document Line No.", liSourceDocumentLineNo);
        lrecActivityEntry.VALIDATE("Previous Bin", lcodPreviousBinCode);
        lrecActivityEntry.VALIDATE("New Bin", lcodNewBinCode);
        lrecActivityEntry.VALIDATE("Item No.", lcodItemNo);
        lrecActivityEntry.VALIDATE("Variant Code", lcodVariantCode);
        lrecActivityEntry.VALIDATE("Lot No.", lsLotNo);
        lrecActivityEntry.VALIDATE("Serial No.", lsSerialNo);
        lrecActivityEntry.VALIDATE("Previous Quantity", ldPreviousQuantity);
        lrecActivityEntry.VALIDATE("New Quantity", ldNewQuantity);
        lrecActivityEntry.VALIDATE("Quantity Change", ldPreviousQuantity - ldNewQuantity);
      END;
      lrecActivityEntry.VALIDATE("Config ID", lrecConfig.Code);
      lrecActivityEntry.VALIDATE("User ID", ltxtUser );
      lrecActivityEntry.VALIDATE("Location Code", lrecConfig."Location Code");
      lrecActivityEntry.VALIDATE("Event Time", CURRENTDATETIME);
      lrecActivityEntry.VALIDATE("Event ID", iEventID);
      IF iEventID = 99000 THEN
        lrecActivityEntry.Details := 'Stopped Picking by '+ ltxtUser + ' on '+ FORMAT(TODAY) + ' at '+ FORMAT(TIME)
      ELSE IF iEventID = 99001 THEN
        lrecActivityEntry.Details := 'Stopped Receiving by '+ ltxtUser + ' on '+ FORMAT(TODAY) + ' at '+ FORMAT(TIME)
      ELSE IF iEventID = 99002 THEN
        lrecActivityEntry.Details := 'Stopped Put Away by '+ ltxtUser + ' on '+ FORMAT(TODAY) + ' at '+ FORMAT(TIME);
      //>>001 TPZ2886
      IF iEventID = 99003 THEN
        lrecActivityEntry.Details := 'Started Picking by '+ ltxtUser + ' on '+ FORMAT(TODAY) + ' at '+ FORMAT(TIME)
      ELSE IF iEventID = 99004 THEN
        lrecActivityEntry.Details := 'Started Receiving by '+ ltxtUser + ' on '+ FORMAT(TODAY) + ' at '+ FORMAT(TIME)
      ELSE IF iEventID = 99005 THEN
        lrecActivityEntry.Details := 'Started Put Away by '+ ltxtUser + ' on '+ FORMAT(TODAY) + ' at '+ FORMAT(TIME);
      //<<001 TPZ2886

      lrecActivityEntry.VALIDATE(Details, COPYSTR(ltxtDetails, 1, MAXSTRLEN( lrecActivityEntry.Details )));
      lrecActivityEntry.VALIDATE("Device Version", COPYSTR( ltxtPDAVersion, 1, MAXSTRLEN( lrecActivityEntry."Device Version" ) ));
      lrecActivityEntry.VALIDATE("Device Host Name", COPYSTR( ltxtPDAHostName, 1, MAXSTRLEN( lrecActivityEntry."Device Host Name" ) ));
      lrecActivityEntry.VALIDATE("Device Culture", COPYSTR( ltxtPDACulture, 1, MAXSTRLEN( lrecActivityEntry."Device Culture" ) ));

      lrecActivityEntry.INSERT(TRUE);
    END;

    PROCEDURE logWMDMPDAActivitiesPS@1170000000(VAR ptrecEventParams@1000000016 : TEMPORARY Record 23044511);
    VAR
      lrecActivityEntry@1000000014 : Record 23044532;
      lrecConfig@1000000013 : Record 23044504;
      lcodDocumentNo@1000000011 : Code[20];
      lcodItemNo@1000000010 : Text;
      lcodVariantCode@1000000009 : Text;
      lsLotNo@1000000008 : Text;
      lsSerialNo@1000000007 : Text;
      liLineNo@1000000005 : Integer;
      ltxtBarcode@1000000004 : Text[100];
      ltxtPDAVersion@1000000003 : Text[20];
      ltxtPDAHostName@1000000002 : Text[100];
      ltxtPDACulture@1000000001 : Text[20];
      ltxtUser@1000000000 : Text[100];
      lcodNewBinCode@1000000006 : Code[20];
      lrecEvent@1000000012 : Record 23044534;
      liDocumentType@1000000015 : Integer;
      liSourceDocumentType@1000000017 : Integer;
      lcodSourceDocumentNo@1000000018 : Code[20];
      liSourceDocumentLineNo@1000000019 : Integer;
      lcodPreviousBinCode@1000000020 : Code[20];
      ldPreviousQuantity@1000000021 : Decimal;
      ldNewQuantity@1000000022 : Decimal;
      liSummaryType@1000000023 : Integer;
      ltxtDetails@1000000024 : Text[250];
      lbInbound@1000000025 : Boolean;
    BEGIN
      // Create a device activity entry
      //TPZ2781 - Pause picking log
      iEventID := ptrecEventParams.getEvent();
      lrecEvent.GET(iEventID);

      IF (NOT lrecEvent."Log Events") THEN
        EXIT;

      cuCommonFuncs.getDeviceConfig( lrecConfig,ptrecEventParams);

      liDocumentType := ptrecEventParams.getValueAsInt('Document Type');
      IF (liDocumentType = 0) THEN BEGIN
        liDocumentType := ptrecEventParams.getValueAsInt('document_type');
      END;
      lcodDocumentNo := getDocumentNo(ptrecEventParams);

      liSummaryType := ptrecEventParams.getValueAsInt('Summary Type');
      IF (liSummaryType = 0) THEN BEGIN
        liSummaryType := ptrecEventParams.getValueAsInt('summary_type');
      END;
      IF (liSummaryType = 0) THEN BEGIN
        liSummaryType := getSummaryType(ptrecEventParams);
      END;


      liSourceDocumentType := ptrecEventParams.getValueAsInt('source_document_type');
      IF (liSourceDocumentType = 0) THEN BEGIN
        liSourceDocumentType := ptrecEventParams.getValueAsInt('Source Document Type');
      END;

      lcodSourceDocumentNo := ptrecEventParams.getValue('source_document_no');
      IF (lcodSourceDocumentNo = '') THEN BEGIN
        lcodSourceDocumentNo := ptrecEventParams.getValue('Source Document No.');
      END;

      liSourceDocumentLineNo := ptrecEventParams.getValueAsInt('source_document_line_no');
      IF (liSourceDocumentLineNo = 0) THEN BEGIN
        liSourceDocumentLineNo := ptrecEventParams.getValueAsInt('Source Document Line No.');
      END;

      ltxtBarcode := COPYSTR(ptrecEventParams.getValue('barcode'), 1, MAXSTRLEN(ltxtBarcode));
      ltxtPDAVersion := COPYSTR(ptrecEventParams.getValue('device_version'), 1, MAXSTRLEN(ltxtPDAVersion));
      ltxtPDAHostName := COPYSTR(ptrecEventParams.getValue('device_hostname'), 1, MAXSTRLEN(ltxtPDAHostName));
      ltxtPDACulture := COPYSTR(ptrecEventParams.getValue('device_culture'), 1, MAXSTRLEN(ltxtPDACulture));
      ltxtUser := COPYSTR(ptrecEventParams.getValue('user_name'), 1, MAXSTRLEN(ltxtUser ));
      IF ( ltxtUser = '' ) THEN BEGIN
        IF STRPOS(USERID,'\') > 0 THEN
          ltxtUser := COPYSTR(USERID,STRPOS(USERID,'\') + 1,MAXSTRLEN(ltxtUser))
        ELSE
          ltxtUser := COPYSTR( USERID, 1, MAXSTRLEN( ltxtUser));
      END;
      ltxtDetails := ptrecEventParams.getValue('details');
      lbInbound := ptrecEventParams.getValueAsBool('inbound');

      lrecActivityEntry.INIT;
      lrecActivityEntry.VALIDATE("Document Type", liDocumentType);
      lrecActivityEntry.VALIDATE("Document No.", lcodDocumentNo);
      lrecActivityEntry.VALIDATE("Source Document Type", liSourceDocumentType);
      lrecActivityEntry.VALIDATE("Summary Type", liSummaryType);
      lrecActivityEntry.VALIDATE("Source Document No.", lcodSourceDocumentNo);
      lrecActivityEntry.VALIDATE(Inbound, lbInbound);
      IF (liSummaryType = lrecActivityEntry."Summary Type"::"Change Line") THEN BEGIN
        lrecActivityEntry.VALIDATE("Document Line No.", liLineNo);
        lrecActivityEntry.VALIDATE("Source Document Line No.", liSourceDocumentLineNo);
        lrecActivityEntry.VALIDATE("Previous Bin", lcodPreviousBinCode);
        lrecActivityEntry.VALIDATE("New Bin", lcodNewBinCode);
        lrecActivityEntry.VALIDATE("Item No.", lcodItemNo);
        lrecActivityEntry.VALIDATE("Variant Code", lcodVariantCode);
        lrecActivityEntry.VALIDATE("Lot No.", lsLotNo);
        lrecActivityEntry.VALIDATE("Serial No.", lsSerialNo);
        lrecActivityEntry.VALIDATE("Previous Quantity", ldPreviousQuantity);
        lrecActivityEntry.VALIDATE("New Quantity", ldNewQuantity);
        lrecActivityEntry.VALIDATE("Quantity Change", ldPreviousQuantity - ldNewQuantity);
      END;
      lrecActivityEntry.VALIDATE("Config ID", lrecConfig.Code);
      lrecActivityEntry.VALIDATE("User ID", ltxtUser );
      lrecActivityEntry.VALIDATE("Location Code", lrecConfig."Location Code");
      lrecActivityEntry.VALIDATE("Event Time", CURRENTDATETIME);
      lrecActivityEntry.VALIDATE("Event ID", iEventID);
      IF iEventID = 99000 THEN
        lrecActivityEntry.Details := 'Stopped Picking by '+ ltxtUser + ' on '+ FORMAT(TODAY) + ' at '+ FORMAT(TIME)
      ELSE IF iEventID = 99001 THEN
        lrecActivityEntry.Details := 'Stopped Receiving by '+ ltxtUser + ' on '+ FORMAT(TODAY) + ' at '+ FORMAT(TIME)
      ELSE IF iEventID = 99002 THEN
        lrecActivityEntry.Details := 'Stopped Put Away by '+ ltxtUser + ' on '+ FORMAT(TODAY) + ' at '+ FORMAT(TIME);
      //>>001 TPZ2886
      IF iEventID = 99003 THEN
        lrecActivityEntry.Details := 'Started Picking by '+ ltxtUser + ' on '+ FORMAT(TODAY) + ' at '+ FORMAT(TIME)
      ELSE IF iEventID = 99004 THEN
        lrecActivityEntry.Details := 'Started Receiving by '+ ltxtUser + ' on '+ FORMAT(TODAY) + ' at '+ FORMAT(TIME)
      ELSE IF iEventID = 99005 THEN
        lrecActivityEntry.Details := 'Started Put Away by '+ ltxtUser + ' on '+ FORMAT(TODAY) + ' at '+ FORMAT(TIME);
      //<<001 TPZ2886
      lrecActivityEntry.VALIDATE("Device Version", COPYSTR( ltxtPDAVersion, 1, MAXSTRLEN( lrecActivityEntry."Device Version" ) ));
      lrecActivityEntry.VALIDATE("Device Host Name", COPYSTR( ltxtPDAHostName, 1, MAXSTRLEN( lrecActivityEntry."Device Host Name" ) ));
      lrecActivityEntry.VALIDATE("Device Culture", COPYSTR( ltxtPDACulture, 1, MAXSTRLEN( lrecActivityEntry."Device Culture" ) ));

      lrecActivityEntry.INSERT(TRUE);
    END;

    PROCEDURE logWMDMPDAActivitiesPS1@1000000004(VAR ptrecEventParams@1000000016 : TEMPORARY Record 23044511);
    VAR
      lrecPDAActivity@1000000014 : Record 23044532;
      lrecPDAConfig@1000000013 : Record 23044504;
      lcodDocumentNo@1000000011 : Code[20];
      lcodItemNo@1000000010 : Text;
      lcodVariantCode@1000000009 : Text;
      lcodLotNo@1000000008 : Code[20];
      lcodSerialNo@1000000007 : Code[20];
      liLineNo@1000000005 : Integer;
      ltxtBarcode@1000000004 : Text[100];
      ltxtPDAVersion@1000000003 : Text[20];
      ltxtPDAHostName@1000000002 : Text[100];
      ltxtPDACulture@1000000001 : Text[20];
      ltxtUser@1000000000 : Text[100];
      lcodNewBinCode@1000000006 : Code[20];
      lrecWMDMEventCode@1000000012 : Record 23044534;
      liDocumentType@1000000015 : Integer;
      liSourceDocumentType@1000000017 : Integer;
      lcodSourceDocumentNo@1000000018 : Code[20];
      liSourceDocumentLineNo@1000000019 : Integer;
      lcodPreviousBinCode@1000000020 : Code[20];
      ldPreviousQuantity@1000000021 : Decimal;
      ldNewQuantity@1000000022 : Decimal;
      liSummaryType@1000000023 : Integer;
      ltxtDetails@1000000024 : Text[250];
      lbInbound@1000000025 : Boolean;
    BEGIN
      {// TPZ2781 - Pause picking log

      iEventID := ptrecEventParams.getEvent();
      {
      IF (NOT lrecWMDMEventCode.GET(iEventID)) THEN BEGIN
        ERROR(tcMissingEvent, iEventID);
      END;

      IF (NOT lrecWMDMEventCode."Log Events") THEN
        EXIT;
      }
      //cuCommonFuncs.getDeviceConfig( ptrecEventParams,ptrecEventParams);

      liDocumentType := ptrecEventParams.getValueAsInt('Document Type');
      IF (liDocumentType = 0) THEN BEGIN
        liDocumentType := ptrecEventParams.getValueAsInt('document_type');
      END;
      lcodDocumentNo := getDocumentNo(ptrecEventParams);

      liSummaryType := ptrecEventParams.getValueAsInt('Summary Type');
      IF (liSummaryType = 0) THEN BEGIN
        liSummaryType := ptrecEventParams.getValueAsInt('summary_type');
      END;
      IF (liSummaryType = 0) THEN BEGIN
        liSummaryType := getSummaryType(ptrecEventParams);
      END;

      {
      IF (liSummaryType = lrecPDAActivity."Summary Type"::"Change Line") THEN BEGIN
        liLineNo := ptrecEventParams.getLineNo();
        IF (liLineNo = 0) THEN BEGIN
          liLineNo := ptrecEventParams.getValueAsInt('Document Line No.');
        END;

        lcodPreviousBinCode := ptrecEventParams.getValue('Previous Bin');
        IF (lcodPreviousBinCode = '') THEN BEGIN
          lcodPreviousBinCode := ptrecEventParams.getValue('previous_bin');
        END;

        lcodNewBinCode := ptrecEventParams.getValue('New Bin');
        IF (lcodNewBinCode = '') THEN BEGIN
          lcodNewBinCode := ptrecEventParams.getValue('new_bin');
        END;
        IF (lcodNewBinCode = '') THEN BEGIN
          lcodNewBinCode := ptrecEventParams.getBin();
        END;

        lcodItemNo := getItemNo(ptrecEventParams, lcodDocumentNo);
        lcodVariantCode := ptrecEventParams.getVariant();
        lcodLotNo := ptrecEventParams.getLotNo();
        lcodSerialNo := ptrecEventParams.getSerialNo();
        ldPreviousQuantity := ptrecEventParams.getValueAsDecimal('Previous Quantity');
        IF (ldPreviousQuantity = 0) THEN BEGIN
          ldPreviousQuantity := ptrecEventParams.getValueAsDecimal('previous_quantity');
        END;

        ldNewQuantity := ptrecEventParams.getValueAsDecimal('New Quantity');
        IF (ldNewQuantity = 0) THEN BEGIN
          ldNewQuantity := ptrecEventParams.getValueAsDecimal('new_quantity');
        END;
      END;
      }
      liSourceDocumentType := ptrecEventParams.getValueAsInt('source_document_type');
      IF (liSourceDocumentType = 0) THEN BEGIN
        liSourceDocumentType := ptrecEventParams.getValueAsInt('Source Document Type');
      END;

      lcodSourceDocumentNo := ptrecEventParams.getValue('source_document_no');
      IF (lcodSourceDocumentNo = '') THEN BEGIN
        lcodSourceDocumentNo := ptrecEventParams.getValue('Source Document No.');
      END;

      liSourceDocumentLineNo := ptrecEventParams.getValueAsInt('source_document_line_no');
      IF (liSourceDocumentLineNo = 0) THEN BEGIN
        liSourceDocumentLineNo := ptrecEventParams.getValueAsInt('Source Document Line No.');
      END;

      ltxtBarcode := COPYSTR(ptrecEventParams.getValue('barcode'), 1, MAXSTRLEN(ltxtBarcode));
      ltxtPDAVersion := COPYSTR(ptrecEventParams.getValue('pda_version'), 1, MAXSTRLEN(ltxtPDAVersion));
      ltxtPDAHostName := COPYSTR(ptrecEventParams.getValue('pda_hostname'), 1, MAXSTRLEN(ltxtPDAHostName));
      ltxtPDACulture := COPYSTR(ptrecEventParams.getValue('pda_culture'), 1, MAXSTRLEN(ltxtPDACulture));
      ltxtUser := COPYSTR(ptrecEventParams.getValue('user_name'), 1, MAXSTRLEN(ltxtUser ));
      IF ( ltxtUser = '' ) THEN BEGIN
        IF STRPOS(USERID,'\') > 0 THEN
          ltxtUser := COPYSTR(USERID,STRPOS(USERID,'\') + 1,MAXSTRLEN(ltxtUser))
        ELSE
          ltxtUser := COPYSTR( USERID, 1, MAXSTRLEN( ltxtUser));
      END;
      ltxtDetails := ptrecEventParams.getValue('details');
      lbInbound := ptrecEventParams.getValueAsBool('inbound');

      lrecPDAActivity.INIT;
      lrecPDAActivity."Document Type" :=  liDocumentType;
      lrecPDAActivity."Document No." :=  lcodDocumentNo;
      lrecPDAActivity."Source Document Type" :=  liSourceDocumentType;
      lrecPDAActivity."Summary Type" :=  liSummaryType;
      lrecPDAActivity."Source Document No." :=  lcodSourceDocumentNo;
      lrecPDAActivity.Inbound :=  lbInbound;
      IF (liSummaryType = lrecPDAActivity."Summary Type"::"Change Line") THEN BEGIN
        lrecPDAActivity."Document Line No." :=  liLineNo;
        lrecPDAActivity."Source Document Line No." :=  liSourceDocumentLineNo;
        lrecPDAActivity."Previous Bin" :=  lcodPreviousBinCode;
        lrecPDAActivity."New Bin" :=  lcodNewBinCode;
        lrecPDAActivity."Item No." :=  lcodItemNo;
        lrecPDAActivity."Variant Code" :=  lcodVariantCode;
        lrecPDAActivity."Lot No." :=  lcodLotNo;
        lrecPDAActivity."Serial No." :=  lcodSerialNo;
        lrecPDAActivity."Previous Quantity" :=  ldPreviousQuantity;
        lrecPDAActivity."New Quantity" :=  ldNewQuantity;
        lrecPDAActivity."Quantity Change" :=  ldPreviousQuantity - ldNewQuantity;
      END;
      lrecPDAActivity."PDA Code" :=  lrecPDAConfig.Code;
      lrecPDAActivity."User ID" :=  ltxtUser ;
      lrecPDAActivity."Location Code" :=  lrecPDAConfig."Location Code";
      lrecPDAActivity."Event Time" :=  CURRENTDATETIME;
      lrecPDAActivity."Event ID" :=  iEventID;
      IF iEventID = 99000 THEN
        lrecPDAActivity.Details := 'Stopped Picking by '+ ltxtUser + ' on '+ FORMAT(TODAY) + ' at '+ FORMAT(TIME)
      ELSE IF iEventID = 99001 THEN
        lrecPDAActivity.Details := 'Stopped Receiving by '+ ltxtUser + ' on '+ FORMAT(TODAY) + ' at '+ FORMAT(TIME)
      ELSE IF iEventID = 99002 THEN
        lrecPDAActivity.Details := 'Stopped Put Away by '+ ltxtUser + ' on '+ FORMAT(TODAY) + ' at '+ FORMAT(TIME);
      lrecPDAActivity."PDA Version" :=  COPYSTR( ltxtPDAVersion, 1, MAXSTRLEN( lrecPDAActivity."PDA Version" ) );
      lrecPDAActivity."PDA Host Name" :=  COPYSTR( ltxtPDAHostName, 1, MAXSTRLEN( lrecPDAActivity."PDA Host Name" ) );
      lrecPDAActivity."PDA Culture" :=  COPYSTR( ltxtPDACulture, 1, MAXSTRLEN( lrecPDAActivity."PDA Culture" ) );

      lrecPDAActivity.INSERT(TRUE);
      }
    END;

    BEGIN
    {
      ************************
      Copyright Notice
      This objects content is copyright of Insight Works 2011.  All rights reserved.
      Any redistribution or reproduction of part or all of the contents in any form is prohibited.
      ************************
      20200330  PSHUKLA TPZ2781  added new function for log
      001 TPZ2886 RPS 10192020 - Picking Performance  | PowerBI
    }
    END.
  }
}

