OBJECT Codeunit 101 Cust. Entry-SetAppl.ID
{
  OBJECT-PROPERTIES
  {
    Date=11/22/17;
    Time=12:00:00 PM;
    Version List=NAVW111.00;
  }
  PROPERTIES
  {
    Permissions=TableData 21=imd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      CustEntryApplID@1000 : Code[50];
      Cu101EventPublisher@1000000000 : Codeunit 51907;

    [External]
    PROCEDURE SetApplId@1(VAR CustLedgEntry@1000 : Record 21;ApplyingCustLedgEntry@1003 : Record 21;AppliesToID@1001 : Code[50]);
    VAR
      TempCustLedgEntry@1002 : TEMPORARY Record 21;
      CustLedgEntryToUpdate@1004 : Record 21;
    BEGIN
      CustLedgEntry.LOCKTABLE;
      IF CustLedgEntry.FINDSET THEN BEGIN
        // Make Applies-to ID
        IF CustLedgEntry."Applies-to ID" <> '' THEN
          CustEntryApplID := ''
        ELSE BEGIN
          CustEntryApplID := AppliesToID;
          IF CustEntryApplID = '' THEN BEGIN
            CustEntryApplID := USERID;
            IF CustEntryApplID = '' THEN
              CustEntryApplID := '***';
          END;
        END;
        REPEAT
          TempCustLedgEntry := CustLedgEntry;
          TempCustLedgEntry.INSERT;
        UNTIL CustLedgEntry.NEXT = 0;
      END;

      IF TempCustLedgEntry.FINDSET THEN
        REPEAT
          CustLedgEntryToUpdate.COPY(TempCustLedgEntry);
          CustLedgEntryToUpdate.TESTFIELD(Open,TRUE);
          CustLedgEntryToUpdate."Applies-to ID" := CustEntryApplID;
          IF CustLedgEntryToUpdate."Applies-to ID" = '' THEN BEGIN
            CustLedgEntryToUpdate."Accepted Pmt. Disc. Tolerance" := FALSE;
            CustLedgEntryToUpdate."Accepted Payment Tolerance" := 0;
          END;
          IF ((CustLedgEntryToUpdate."Amount to Apply" <> 0) AND (CustEntryApplID = '')) OR
             (CustEntryApplID = '')
          THEN
            CustLedgEntryToUpdate."Amount to Apply" := 0
          ELSE
            IF CustLedgEntryToUpdate."Amount to Apply" = 0 THEN BEGIN
              CustLedgEntryToUpdate.CALCFIELDS("Remaining Amount");
              CustLedgEntryToUpdate."Amount to Apply" := CustLedgEntryToUpdate."Remaining Amount"
            END;
                     //<TPZ1574> // OLD
      //              IF (CustLedgEntry."Amount to Apply">0) AND (ApplyingCustLedgEntry."Posting Date" >=CustLedgEntry."Pmt. Discount Date") AND (ApplyingCustLedgEntry."Posting Date"<= CustLedgEntry."Pmt. Disc. Tolerance Date") THEN
      //                CustLedgEntry."Pmt. Discount Date":=ApplyingCustLedgEntry."Posting Date";
                     //</TPZ1574>

                     //<TPZ1574> // NEW For CU31
                    {
      Wrong Expression
                      CustLedgEntryToUpdate."Pmt. Discount Date":=ApplyingCustLedgEntry."Posting Date";
                     //</TPZ1574>} //NAVEVENT

          Cu101EventPublisher.Cu101_OnSetAppID(CustLedgEntryToUpdate,ApplyingCustLedgEntry);//NAVEVENT

          IF CustLedgEntryToUpdate."Entry No." = ApplyingCustLedgEntry."Entry No." THEN
            CustLedgEntryToUpdate."Applying Entry" := ApplyingCustLedgEntry."Applying Entry";
          CustLedgEntryToUpdate.MODIFY;
        UNTIL TempCustLedgEntry.NEXT = 0;
    END;

    BEGIN
    {
      2016-05-16 TPZ1523 EBAGIM
        Split Payment application by Division Code Function Added
      2017-06-30 TPZ1574 EBAGIM
        Extend Pmt Discount based on Pmt tolerance
    }
    END.
  }
}

