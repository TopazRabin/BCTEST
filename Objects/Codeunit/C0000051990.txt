OBJECT Codeunit 51990 Item Average Unit Cost
{
  OBJECT-PROPERTIES
  {
    Date=10/23/20;
    Time=[ 6:54:51 AM];
    Modified=Yes;
    Version List=33365;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            UpdateAvgCostPerUnit;
          END;

  }
  CODE
  {

    PROCEDURE UpdateAvgCostPerUnit@1000000065();
    VAR
      ItemLedgerEntry@1000000003 : Record 32;
      TotalCostPerUnit@1000000004 : Decimal;
      ItemLoc@1000000007 : Record 27;
      TotalRemainingQty@1000000008 : Decimal;
      NoOfEntry@1000000005 : Integer;
      AvgCostPerUnit@1000000001 : Decimal;
    BEGIN
      ////TPZ2881 PSHUKLA new functionality for Avg Unit cost per location
      TotalCostPerUnit := 0;
      TotalRemainingQty := 0;
      NoOfEntry := 0;
      AvgCostPerUnit := 0;
      ItemLoc.RESET;
      IF ItemLoc.FINDSET THEN //MESSAGE(FORMAT(ItemLoc.COUNT)); EXIT;
        REPEAT
          TotalCostPerUnit := 0;
          TotalRemainingQty := 0;
          NoOfEntry := 0;
          AvgCostPerUnit := 0;
          ItemLedgerEntry.RESET;
          ItemLedgerEntry.SETCURRENTKEY("Item No.",Open,"Variant Code",Positive,"Location Code","Posting Date");
          ItemLedgerEntry.SETRANGE("Item No.",ItemLoc."No.");
          ItemLedgerEntry.SETRANGE(Open,TRUE);
          ItemLedgerEntry.SETFILTER("Location Code",'<>%1&<>%2','ONWATER','OWTRANSIT');
          IF ItemLedgerEntry.FINDFIRST THEN
            REPEAT
              ItemLedgerEntry.CALCFIELDS("Cost per Unit","Cost Amount (Actual)","Cost Amount (Expected)");
              //TotalCostPerUnit += (ItemLedgerEntry."Cost per Unit" * ItemLedgerEntry."Remaining Quantity");
              //TotalCostPerUnit += ItemLedgerEntry."Cost per Unit"; //Avg of cos per unit
              IF ItemLedgerEntry.Quantity > 0 THEN
                TotalCostPerUnit += (((ItemLedgerEntry."Cost Amount (Actual)" + ItemLedgerEntry."Cost Amount (Expected)")
                                    /ItemLedgerEntry.Quantity) * ItemLedgerEntry."Remaining Quantity")
              ELSE
                TotalCostPerUnit += ((ItemLedgerEntry."Cost Amount (Actual)" + ItemLedgerEntry."Cost Amount (Expected)")
                                     * ItemLedgerEntry."Remaining Quantity");
              TotalRemainingQty += ItemLedgerEntry."Remaining Quantity";
              //NoOfEntry += 1;
            UNTIL ItemLedgerEntry.NEXT = 0;

          IF TotalRemainingQty = 0 THEN
              TotalRemainingQty := 1;
          ItemLoc."Average Unit Cost" := ROUND(TotalCostPerUnit/TotalRemainingQty,0.0001,'=');
          IF ItemLoc."Average Unit Cost" = 0 THEN
            ItemLoc."Average Unit Cost" := ItemLoc."Unit Cost";
          IF ItemLoc.MODIFY THEN;
        UNTIL ItemLoc.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

