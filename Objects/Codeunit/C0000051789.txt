OBJECT Codeunit 51789 Table472EventSubscriber
{
  OBJECT-PROPERTIES
  {
    Date=11/20/20;
    Time=[ 6:04:59 AM];
    Modified=Yes;
    Version List=NAVEVT1.0.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [EventSubscriber(Table,472,OnAfterValidateEvent,"Run on Mondays")]
    PROCEDURE "Tb_472_Run on Mondays_OnVaidate"@1000000004(VAR Rec@1000000000 : Record 472;VAR xRec@1000000001 : Record 472;CurrFieldNo@1000000002 : Integer);
    BEGIN
      WITH Rec DO BEGIN
        // <TPZ70>
        TESTFIELD("Run Monthly",FALSE);
        TESTFIELD("Run Biweekly",FALSE);
      // </TPZ70>
      END;
    END;

    [EventSubscriber(Table,472,OnAfterValidateEvent,"Run on Tuesdays")]
    PROCEDURE "Tb_472_Run on Tuesdays_OnVaidate"@1000000010(VAR Rec@1000000000 : Record 472;VAR xRec@1000000001 : Record 472;CurrFieldNo@1000000002 : Integer);
    BEGIN
      WITH Rec DO BEGIN
        // <TPZ70>
        TESTFIELD("Run Monthly",FALSE);
        TESTFIELD("Run Biweekly",FALSE);
      // </TPZ70>
      END;
    END;

    [EventSubscriber(Table,472,OnAfterValidateEvent,"Run on Wednesdays")]
    PROCEDURE "Tb_472_Run on Wednesdays_OnVaidate"@1000000013(VAR Rec@1000000000 : Record 472;VAR xRec@1000000001 : Record 472;CurrFieldNo@1000000002 : Integer);
    BEGIN
      WITH Rec DO BEGIN
        // <TPZ70>
        TESTFIELD("Run Monthly",FALSE);
        TESTFIELD("Run Biweekly",FALSE);
      // </TPZ70>
      END;
    END;

    [EventSubscriber(Table,472,OnAfterValidateEvent,"Run on Thursdays")]
    PROCEDURE "Tb_472_Run on Thursdays_OnVaidate"@1000000015(VAR Rec@1000000000 : Record 472;VAR xRec@1000000001 : Record 472;CurrFieldNo@1000000002 : Integer);
    BEGIN
      WITH Rec DO BEGIN
        // <TPZ70>
        TESTFIELD("Run Monthly",FALSE);
        TESTFIELD("Run Biweekly",FALSE);
      // </TPZ70>
      END;
    END;

    [EventSubscriber(Table,472,OnAfterValidateEvent,"Run on Fridays")]
    PROCEDURE "Tb_472_Run on Fridays_OnVaidate"@1000000018(VAR Rec@1000000000 : Record 472;VAR xRec@1000000001 : Record 472;CurrFieldNo@1000000002 : Integer);
    BEGIN
      WITH Rec DO BEGIN
        // <TPZ70>
        TESTFIELD("Run Monthly",FALSE);
        TESTFIELD("Run Biweekly",FALSE);
      // </TPZ70>
      END;
    END;

    [EventSubscriber(Table,472,OnAfterValidateEvent,"Run on Saturdays")]
    PROCEDURE "Tb_472_Run on Saturdays_OnVaidate"@1000000020(VAR Rec@1000000000 : Record 472;VAR xRec@1000000001 : Record 472;CurrFieldNo@1000000002 : Integer);
    BEGIN
      WITH Rec DO BEGIN
        // <TPZ70>
        TESTFIELD("Run Monthly",FALSE);
        TESTFIELD("Run Biweekly",FALSE);
      // </TPZ70>
      END;
    END;

    [EventSubscriber(Table,472,OnAfterValidateEvent,"Run on Sundays")]
    PROCEDURE "Tb_472_Run on Sundays_OnVaidate"@1000000024(VAR Rec@1000000000 : Record 472;VAR xRec@1000000001 : Record 472;CurrFieldNo@1000000002 : Integer);
    BEGIN
      WITH Rec DO BEGIN
        // <TPZ70>
        TESTFIELD("Run Monthly",FALSE);
        TESTFIELD("Run Biweekly",FALSE);
      // </TPZ70>
      END;
    END;

    PROCEDURE Tb_472_ClearErrorMessage@1000000007(VAR rec@1000000000 : Record 472);
    VAR
      SalesHeader@1000000001 : Record 36;
    BEGIN
      WITH rec DO BEGIN
        IF ISNULLGUID(ID) THEN
        EXIT;

        SalesHeader.RESET;
        SalesHeader.SETRANGE("Job Queue Entry ID",ID);
        IF SalesHeader.FINDFIRST THEN BEGIN
          SalesHeader."Job Queue Status" := SalesHeader."Job Queue Status"::" ";
          SalesHeader."Job Queue Entry ID" := '00000000-0000-0000-0000-000000000000';
          SalesHeader.MODIFY;
        END;
      END;
    END;

    PROCEDURE Tb_472_SetStatusTPZ@1000000021(VAR Rec@1000000000 : Record 472;VAR NewStatus@1000000002 : Option);
    BEGIN
      WITH Rec DO BEGIN
        IF NewStatus = Status THEN
          EXIT;
        LOCKTABLE;
        GET(ID);
        //ClearServiceValues;
        "User Session Started" := 0DT;
        "User Service Instance ID" := 0;
        "User Session ID" := 0;

        Tb_472_SetStatusValueTPZ(Rec,NewStatus);
      END;
    END;

    PROCEDURE Tb_472_SetStatusValueTPZ@1000000027(VAR Rec@1000000001 : Record 472;VAR NewStatus@1000000000 : Option);
    VAR
      JobQueueDispatcher@1000000002 : Codeunit 448;
    BEGIN
      WITH Rec DO BEGIN
        IF (Status <> Status::Ready) AND (NewStatus = Status::Ready) THEN BEGIN
          "Last Ready State" := CURRENTDATETIME;
          "Earliest Start Date/Time" := JobQueueDispatcher.CalcInitialRunTime(Rec,CURRENTDATETIME);
          "User ID" := 'TOPAZ\SA_NY_NST_NAVNST6BAT';
          "No. of Attempts to Run" := 0;
          CODEUNIT.RUN(CODEUNIT::"Job Queue - Enqueue",Rec);
        END;
        IF (Status IN [Status::Ready,Status::"In Process"]) AND (NewStatus = Status::"On Hold") THEN BEGIN
          CancelTask;
          CLEAR("System Task ID");
        END;
        Status := NewStatus;
        MODIFY;
      END;
    END;

    PROCEDURE Tb472_SetRecurringField@13(VAR JobQueueEntry@1000000000 : Record 472);
    VAR
      UserSessionJobsCannotBeRecurringErr@1000000001 : TextConst 'ENU=You cannot set up recurring user session job queue entries.;ESM=No se pueden configurar movimientos de cola de proyectos de sesi¢n de usuario recurrentes.;FRC=Vous ne pouvez pas param‚trer des ‚critures r‚currentes de la file d''attente des travaux d''une session utilisateur.;ENC=You cannot set up recurring user session job queue entries.';
    BEGIN
      //<TPZ2985>
      WITH JobQueueEntry DO BEGIN
        "Recurring Job" :=
          "Run on Mondays" OR
          "Run on Tuesdays" OR "Run on Wednesdays" OR "Run on Thursdays" OR "Run on Fridays" OR "Run on Saturdays" OR "Run on Sundays" OR "Run Monthly" OR "Run Biweekly";

        IF "Recurring Job" AND "Run in User Session" THEN
          ERROR(UserSessionJobsCannotBeRecurringErr);
      END;
      //</TPZ2985>
    END;

    BEGIN
    {
      11-20-2020 UCHOUHAN TPZ2985 : Added new function Tb472_SetRecurringField.
    }
    END.
  }
}

