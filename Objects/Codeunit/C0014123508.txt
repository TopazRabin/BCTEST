OBJECT Codeunit 14123508 ES NAS Handler
{
  OBJECT-PROPERTIES
  {
    Date=06/20/17;
    Time=12:00:00 PM;
    Version List=ES1.41.36;
  }
  PROPERTIES
  {
    TableNo=472;
    OnRun=BEGIN
            IF "Parameter String" <> '' THEN BEGIN
              CreateNASProcessEntry("Parameter String");

              COMMIT;
            END;

            ProcessNASEntries;
          END;

  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'ENU=No %1 found.';
      Text002@1002 : TextConst 'ENU=Inserted %1 %2';

    PROCEDURE ProcessNASEntries@1240520008();
    VAR
      ESNASProcessEntry@1240520013 : Record 14123541;
      ESNASProcessEntry2@1240520012 : Record 14123541;
    BEGIN
      ESNASProcessEntry.RESET;
      ESNASProcessEntry.SETRANGE(Status,ESNASProcessEntry.Status::Ready);
      IF ESNASProcessEntry.FIND('-') THEN
        REPEAT
          ESNASProcessEntry2 := ESNASProcessEntry;
          ESNASProcessEntry2."Start Date Time" := CURRENTDATETIME;
          ESNASProcessEntry2."End Date Time" := 0DT;
          ESNASProcessEntry2.Status := ESNASProcessEntry2.Status::"In Process";
          ESNASProcessEntry2."Last Modified By User" := USERID;
          ESNASProcessEntry2.MODIFY;
          COMMIT;

          CLEARLASTERROR;
          IF NOT CODEUNIT.RUN(CODEUNIT::"ES NAS Processing",ESNASProcessEntry2) THEN BEGIN
            ESNASProcessEntry2.Status := ESNASProcessEntry2.Status::Error;
            ESNASProcessEntry2."Error Text" :=
              COPYSTR(GETLASTERRORTEXT,1,MAXSTRLEN(ESNASProcessEntry2."Error Text"));
          END ELSE
            ESNASProcessEntry2.Status := ESNASProcessEntry2.Status::Finished;
          ESNASProcessEntry2."End Date Time" := CURRENTDATETIME;
          ESNASProcessEntry2.MODIFY;
          COMMIT;
        UNTIL ESNASProcessEntry.NEXT = 0;
    END;

    PROCEDURE CreateJobQueueEntry@1240520009();
    VAR
      JobQueueProcess@1240520008 : Record 471;
      JobQueueEntry@1240520010 : Record 472;
      ESSecuritySetup@1000 : Record 14123521;
      ESNASProcessEntry@1240520011 : Record 14123541;
    BEGIN
      ESNASProcessEntry.RESET;
      ESNASProcessEntry.SETRANGE(Status,ESNASProcessEntry.Status::Ready);
      ESNASProcessEntry.FIND('-');

      ESSecuritySetup.GET;

      JobQueueProcess.RESET;
      IF NOT JobQueueProcess.FIND('-') THEN
        MESSAGE(Text001,JobQueueProcess.TABLECAPTION);

      JobQueueEntry.INIT;
      JobQueueEntry.ID := CREATEGUID;
      JobQueueEntry."Earliest Start Date/Time" := CREATEDATETIME(TODAY,TIME);
      JobQueueEntry."Object Type to Run" := JobQueueEntry."Object Type to Run"::Codeunit;
      JobQueueEntry."Object ID to Run" := CODEUNIT::"ES NAS Handler";
      JobQueueEntry."Run in User Session" := FALSE;
      JobQueueEntry.Priority := 1000;
      JobQueueEntry."Parameter String" := '';
      JobQueueEntry.INSERT(TRUE);
      CODEUNIT.RUN(CODEUNIT::"Job Queue - Enqueue",JobQueueEntry);

      MESSAGE(Text002,JobQueueEntry.TABLECAPTION,JobQueueEntry.ID);
    END;

    PROCEDURE CreateNASProcessEntry@1240520010(ParameterString@1240520008 : Text[250]);
    VAR
      ESNASProcessEntry@1240520009 : Record 14123541;
    BEGIN
      ESNASProcessEntry.INIT;
      ESNASProcessEntry.INSERT(TRUE);

      CASE UPPERCASE(ParameterString) OF
        '1','SYNCHRONIZE AND PUBLISH','SYNCANDPUB':
          ESNASProcessEntry.Type := ESNASProcessEntry.Type::"Get New Data and Publish";
        '2','SYNCHRONIZE','SYNC':
          ESNASProcessEntry.Type := ESNASProcessEntry.Type::"Get New Data";
        '3','PUBLISH','PUB':
          ESNASProcessEntry.Type := ESNASProcessEntry.Type::Publish;
        '4','LIVE RESTORE POINT','LIVERP':
          ESNASProcessEntry.Type := ESNASProcessEntry.Type::"Live Restore Point";
        '5','EASY SECURITY RESTORE POINT','ESRP':
          ESNASProcessEntry.Type := ESNASProcessEntry.Type::"Easy Security Restore Point";
        '6','UPDATE FLADS LOOKUP DATA','FLADSLD':
          ESNASProcessEntry.Type := ESNASProcessEntry.Type::"Update FLADS Lookup Data";
        '7','COPY FLADS SETUP DATA','COPYFLADSSD':
          ESNASProcessEntry.Type := ESNASProcessEntry.Type::"Copy FLADS Setup Data";
        '8','COPY WINDOWS GROUPS','COPYWINDOWSGR':
          ESNASProcessEntry.Type := ESNASProcessEntry.Type::"Copy Windows Groups";
      END;

      ESNASProcessEntry.TESTFIELD(Type);
      ESNASProcessEntry.Status := ESNASProcessEntry.Status::Ready;
      ESNASProcessEntry.MODIFY;
    END;

    BEGIN
    END.
  }
}

