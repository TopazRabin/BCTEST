OBJECT Codeunit 2112 O365 Sales Attachment Mgt
{
  OBJECT-PROPERTIES
  {
    Date=11/22/17;
    Time=12:00:00 PM;
    Version List=NAVW111.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      NotSupportedMsg@1002 : TextConst 'ENU=Cannot view this file type.;ESM=No se puede ver este tipo de archivo.;FRC=Impossible d''afficher ce type de fichier.;ENC=Cannot view this file type.';
      PhotoLbl@1001 : TextConst '@@@="%1 = a number, e.g. 1, 2, 3,...";ENU=Photo %1;ESM=Foto %1;FRC=Photo %1;ENC=Photo %1';
      MovieLbl@1000 : TextConst '@@@="%1 = a number, e.g. 1, 2, 3,...";ENU=Movie %1;ESM=Pel¡cula %1;FRC=Film %1;ENC=Movie %1';

    [External]
    PROCEDURE GetNoOfAttachments@124(RecordVariant@1002 : Variant) : Integer;
    VAR
      IncomingDocumentAttachment@1000 : Record 133;
      SalesHeader@1001 : Record 36;
      SalesInvoiceHeader@1003 : Record 112;
      RecordRef@1004 : RecordRef;
    BEGIN
      RecordRef.GETTABLE(RecordVariant);
      IF RecordRef.NUMBER = DATABASE::"Sales Header" THEN BEGIN
        SalesHeader := RecordVariant;
        IF SalesHeader."Incoming Document Entry No." = 0 THEN
          EXIT(0);
        IncomingDocumentAttachment.SETRANGE("Incoming Document Entry No.",SalesHeader."Incoming Document Entry No.");
        EXIT(IncomingDocumentAttachment.COUNT);
      END;
      IF RecordRef.NUMBER = DATABASE::"Sales Invoice Header" THEN BEGIN
        SalesInvoiceHeader := RecordVariant;
        IncomingDocumentAttachment.SETRANGE("Document No.",SalesInvoiceHeader."No.");
        IncomingDocumentAttachment.SETRANGE("Posting Date",SalesInvoiceHeader."Posting Date");
        EXIT(IncomingDocumentAttachment.COUNT);
      END;
    END;

    [External]
    PROCEDURE EditAttachments@123(RecordVariant@1000 : Variant) NoOfAttachments : Integer;
    VAR
      IncomingDocument@1001 : Record 130;
      SalesHeader@1003 : Record 36;
      RecordRef@1004 : RecordRef;
    BEGIN
      RecordRef.GETTABLE(RecordVariant);
      IF NOT RecordRef.FIND THEN
        EXIT;
      RecordVariant := RecordRef;
      IF RecordRef.NUMBER = DATABASE::"Sales Header" THEN BEGIN
        SalesHeader := RecordVariant;
        IF SalesHeader."Incoming Document Entry No." = 0 THEN BEGIN
          SalesHeader."Incoming Document Entry No." := IncomingDocument.CreateIncomingDocument(SalesHeader."Sell-to Customer Name",'');
          SalesHeader.MODIFY;
          COMMIT;
          RecordVariant := SalesHeader;
        END;
        PAGE.RUN(PAGE::"O365 Sales Doc. Attachments",SalesHeader);
      END;
      IF RecordRef.NUMBER = DATABASE::"Sales Invoice Header" THEN
        PAGE.RUN(PAGE::"O365 Posted Sales Inv. Att.",RecordVariant);
      NoOfAttachments := GetNoOfAttachments(RecordVariant);
    END;

    PROCEDURE ImportAttachmentFromFileSystem@5(VAR IncomingDocumentAttachmentOrig@1001 : Record 133);
    VAR
      IncomingDocumentAttachment@1000 : Record 133;
    BEGIN
      IncomingDocumentAttachment.INIT;
      IncomingDocumentAttachment.COPYFILTERS(IncomingDocumentAttachmentOrig);
      IncomingDocumentAttachment.NewAttachment;
      CASE IncomingDocumentAttachment.Type OF
        IncomingDocumentAttachment.Type::Image:
          IncomingDocumentAttachment.Name :=
            COPYSTR(
              STRSUBSTNO(PhotoLbl,IncomingDocumentAttachment."Line No." DIV 10000),1,MAXSTRLEN(IncomingDocumentAttachment.Name));
        IncomingDocumentAttachment.Type::Other:
          IF UPPERCASE(IncomingDocumentAttachment."File Extension") = 'MOV' THEN
            IncomingDocumentAttachment.Name :=
              COPYSTR(
                STRSUBSTNO(MovieLbl,IncomingDocumentAttachment."Line No." DIV 10000),1,MAXSTRLEN(IncomingDocumentAttachment.Name));
      END;
      IncomingDocumentAttachment.MODIFY;
    END;

    PROCEDURE OpenAttachmentPreviewIfSupported@1(IncomingDocumentAttachment@1000 : Record 133);
    BEGIN
      WITH IncomingDocumentAttachment DO BEGIN
        CALCFIELDS(Content);
        IF NOT Content.HASVALUE THEN
          EXIT;

        CASE Type OF
          Type::Image:
            PAGE.RUNMODAL(PAGE::"O365 Incoming Doc. Att. Pict.",IncomingDocumentAttachment);
          Type::PDF:
            Export(Name + '.' + "File Extension",TRUE)
          ELSE
            MESSAGE(NotSupportedMsg);
        END;
      END
    END;

    BEGIN
    END.
  }
}

