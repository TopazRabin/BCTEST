OBJECT Codeunit 50069 Table18EventSubscribers
{
  OBJECT-PROPERTIES
  {
    Date=07/01/20;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=TPZ000.00.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [EventSubscriber(Table,18,OnBeforeInsertEvent)]
    LOCAL PROCEDURE Tb18_OnBeforeInsert@1000000000(VAR Rec@1000000000 : Record 18;RunTrigger@1000000001 : Boolean);
    BEGIN
      IF NOT RunTrigger THEN
        EXIT;
      WITH Rec DO BEGIN
        // <TPZ161>
        "Date Created" := TODAY;
        "Created by User ID" := USERID;
        "Last Date Modified" := TODAY;
        "Last Modified by User ID" := USERID;
        // </TPZ161>
      END;
    END;

    [EventSubscriber(Table,18,OnAfterInsertEvent)]
    LOCAL PROCEDURE Tb18_OnAfterInsert@1000000002(VAR Rec@1000000000 : Record 18;RunTrigger@1000000001 : Boolean);
    VAR
      Table18EventPublishers@1000000002 : Codeunit 50070;
    BEGIN
      IF NOT RunTrigger THEN
        EXIT;
      WITH Rec DO BEGIN
        Table18EventPublishers.Tb18_OnInsertCustomerDimension(Rec);
      END;
    END;

    [EventSubscriber(Table,18,OnBeforeModifyEvent)]
    LOCAL PROCEDURE Tb18_OnBeforeModify@1000000003(VAR Rec@1000000000 : Record 18;VAR xRec@1000000001 : Record 18;RunTrigger@1000000002 : Boolean);
    BEGIN
      IF NOT RunTrigger THEN
        EXIT;
      WITH Rec DO BEGIN
        // <TPZ161>
        "Last Modified by User ID" := USERID;
        // </TPZ161>
      END;
    END;

    [EventSubscriber(Table,18,OnAfterDeleteEvent)]
    LOCAL PROCEDURE Tb18_OnAfterDelete@1000000014(VAR Rec@1000000000 : Record 18;RunTrigger@1000000001 : Boolean);
    VAR
      CustDivision@1000000002 : Record 50007;
    BEGIN
      IF NOT RunTrigger THEN
        EXIT;
      WITH Rec DO BEGIN
        // <TPZ572>
        CustDivision.SETRANGE("Customer No.","No.");
        CustDivision.DELETEALL;
      END;
    END;

    [EventSubscriber(Table,18,OnAfterValidateEvent,Name)]
    LOCAL PROCEDURE Tb18_Name_OnValidate@1000000004(VAR Rec@1000000000 : Record 18;VAR xRec@1000000001 : Record 18;CurrFieldNo@1000000002 : Integer);
    VAR
      Table18EventPublishers@1000000003 : Codeunit 50070;
    BEGIN
      Table18EventPublishers.Tb18_OnInsertCustomerDimension(Rec);
    END;

    [EventSubscriber(Table,18,OnAfterValidateEvent,City)]
    LOCAL PROCEDURE Tb18_City_OnValidate@1000000005(VAR Rec@1000000000 : Record 18;VAR xRec@1000000001 : Record 18;CurrFieldNo@1000000002 : Integer);
    VAR
      PostCode@1000000003 : Record 225;
    BEGIN
      WITH Rec DO BEGIN
        // <TPZ416>
        VALIDATE(County);
        // </TPZ416>
        // <TPZ417>
        IF "Country/Region Code" <> 'US' THEN
          EXIT;
        IF PostCode.GET("Post Code",City) THEN
          District := PostCode.District
        ELSE
          District := '';
        // </TPZ417>
      END;
    END;

    [EventSubscriber(Table,18,OnAfterValidateEvent,"Post Code")]
    LOCAL PROCEDURE Tb18_PostCode_OnValidate@1000000006(VAR Rec@1000000000 : Record 18;VAR xRec@1000000001 : Record 18;CurrFieldNo@1000000002 : Integer);
    VAR
      PostCode@1000000003 : Record 225;
    BEGIN
      WITH Rec DO BEGIN
        // <TPZ416>
        VALIDATE(County);
        // </TPZ416>
        // <TPZ417>
        IF "Country/Region Code" <> 'US' THEN
          EXIT;
        IF PostCode.GET("Post Code",City) THEN
          District := PostCode.District
        ELSE
          District := '';
        // </TPZ417>
      END;
    END;

    [EventSubscriber(Table,18,OnAfterValidateEvent,County)]
    LOCAL PROCEDURE Tb18_County_OnValidate@1000000007(VAR Rec@1000000000 : Record 18;VAR xRec@1000000001 : Record 18;CurrFieldNo@1000000002 : Integer);
    VAR
      CountyRec@1000000003 : Record 51128;
    BEGIN
      WITH Rec DO BEGIN
        // <TPZ416>
        IF "Country/Region Code" <> 'US' THEN
          EXIT;
        IF CountyRec.GET("Country/Region Code",County) THEN BEGIN
          "Region Code" := CountyRec."Region Code";
          "Territory Code" := CountyRec."Territory Code";
        END ELSE BEGIN
          "Region Code" := '';
          "Territory Code" := '';
        END;
        // </TPZ416>
      END;
    END;

    [EventSubscriber(Codeunit,50070,Tb18_OnInsertCustomerDimension)]
    LOCAL PROCEDURE Tb18_InsertCustomerDimension@1000000001(VAR Sender@1000000000 : Codeunit 50070;VAR Rec@1000000001 : Record 18);
    VAR
      DimValue@1000000003 : Record 349;
      DefaultDimension@1000000002 : Record 352;
    BEGIN
      WITH Rec DO BEGIN
        //<TPZ2291>
        IF "No."<>'' THEN BEGIN
          DimValue.RESET;
          IF NOT DimValue.GET('Customer',"No.") THEN BEGIN
            DimValue.INIT;
            DimValue.VALIDATE("Dimension Code",'Customer');
            DimValue.VALIDATE(Code,"No.");
            DimValue.VALIDATE(Name,Name);
            DimValue.INSERT(TRUE);
          END ELSE BEGIN
            DimValue.VALIDATE(Name,Name);
            DimValue.MODIFY(TRUE);
          END;

          IF NOT DefaultDimension.GET(18,"No.",'Customer') THEN BEGIN
            DefaultDimension.INIT;
            DefaultDimension.VALIDATE("Table ID",18);
            DefaultDimension."No." := "No.";
            DefaultDimension.VALIDATE("Dimension Code",'Customer');
            DefaultDimension.VALIDATE("Dimension Value Code","No.");
            DefaultDimension.INSERT(TRUE);
          END;
        END;
        //</TPZ2291>
      END;
    END;

    [EventSubscriber(Codeunit,50070,Tb18_OnLookUpAdjmtValueEntries)]
    LOCAL PROCEDURE Tb18_LookUpAdjmtValueEntries@1000000008(VAR Sender@1000000000 : Codeunit 50070;VAR Rec@1000000001 : Record 18;CustDateFilter@1000000002 : Text[30]);
    VAR
      ValueEntry@1000000003 : Record 5802;
    BEGIN
      WITH Rec DO BEGIN
        ValueEntry.SETCURRENTKEY("Source Type","Source No.");
        ValueEntry.SETRANGE("Source Type",ValueEntry."Source Type"::Customer);
        ValueEntry.SETRANGE("Source No.","No.");
        ValueEntry.SETFILTER("Posting Date",CustDateFilter);
        ValueEntry.SETFILTER("Global Dimension 1 Code",GETFILTER("Global Dimension 1 Filter"));
        ValueEntry.SETFILTER("Global Dimension 2 Code",GETFILTER("Global Dimension 2 Filter"));
        ValueEntry.SETRANGE(Adjustment,TRUE);
        ValueEntry.SETRANGE("Expected Cost",FALSE);
        PAGE.RUNMODAL(0,ValueEntry);
      END;
    END;

    [EventSubscriber(Codeunit,50070,Tb18_CalcOverdueBalanceTolerance)]
    LOCAL PROCEDURE Tb18_CalcOverdueBalanceTolerance@1000000009(VAR Sender@1000000000 : Codeunit 50070;VAR Rec@1000000001 : Record 18;VAR OverdueBalance@1000000002 : Decimal);
    VAR
      CustLedgEntryRemTAmtQuery@1000000004 : Query 50005 SECURITYFILTERING(Filtered);
    BEGIN
      //TPZ2830
      WITH Rec DO BEGIN
        // <TPZ1131>
        CustLedgEntryRemTAmtQuery.SETRANGE(Customer_No,"No.");
        CustLedgEntryRemTAmtQuery.SETRANGE(IsOpen,TRUE);
        CustLedgEntryRemTAmtQuery.SETFILTER(Overdue_Balance_Grace_Date,'<%1',WORKDATE);
        CustLedgEntryRemTAmtQuery.OPEN;

        IF CustLedgEntryRemTAmtQuery.READ THEN
          OverdueBalance := CustLedgEntryRemTAmtQuery.Sum_Remaining_Amt_LCY;
        // </TPZ1131>
      END;
    END;

    BEGIN
    END.
  }
}

