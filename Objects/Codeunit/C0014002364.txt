OBJECT Codeunit 14002364 E.D.I. Funct. Ack. Update
{
  OBJECT-PROPERTIES
  {
    Date=02/25/19;
    Time=12:00:00 PM;
    Version List=SE0.61;
  }
  PROPERTIES
  {
    TableNo=14002358;
    OnRun=VAR
            EDIRecDocHdr@1240030000 : Record 14002358;
            EDIRecDocFields@1240030001 : Record 14002359;
            EDISendDocHdr@1240030002 : Record 14002369;
            EDISendDocFields@1240030003 : Record 14002370;
            EDITemplate@1240030010 : Record 14002350;
            EDIDocument@1240020000 : Record 14002353;
            EDIDocument2@1240020002 : Record 14002353;
            EDIRecDocField2@1240020003 : Record 14002359;
            EDIStatusCode@1240020004 : Record 14002406;
            EDIRecDocField3@1240020005 : Record 14002359;
            EDIDocumentNo@1240030004 : Text[6];
            FunctGroupControlNo@1240030005 : Text[9];
            FunctGroupStatus@1240030006 : Text[1];
            i@1240030007 : Integer;
            TranSetControlNo@1240030008 : ARRAY [2000] OF Text[9];
            TranSetStatus@1240030009 : ARRAY [20000] OF Text[1];
            SendDocHdrFound@1240020001 : Boolean;
            ResponseFound@1240020006 : Boolean;
            cXMLDoc@1240020007 : Boolean;
            ReconcileByResponseID@1240020008 : Boolean;
            ReferenceID@1240020009 : Text[30];
            ReferenceType@1240020010 : Text[20];
          BEGIN
            TESTFIELD("Navision Document",'I_FUNCTACK');

            EDIRecDocHdr.COPY(Rec);
            InternalDocNo := EDIRecDocHdr."Internal Doc. No.";

            CLEAR(TranSetControlNo);
            i := 1;

            SendDocHdrFound := FALSE;
            EDIDocumentNo := '';

            EDITemplate.GET(EDIRecDocHdr."EDI Template Code");
            WITH EDIRecDocHdr DO BEGIN
              EDIDocument.GET(
                "Trade Partner No.","Navision Document","EDI Document No.","EDI Version",
                EDIDocument.Type::Import);
            END;
            CASE EDITemplate."Interface File Type" OF
              EDITemplate."Interface File Type"::"X12 Delimited":
                BEGIN
                  EDIRecDocFields.SETRANGE("Internal Doc. No.",EDIRecDocHdr."Internal Doc. No.");
                  IF EDIRecDocFields.FIND('-') THEN
                    REPEAT
                      CASE EDIRecDocFields.Segment OF
                        'AK1':
                          BEGIN
                            CASE EDIRecDocFields.Element OF
                              '02':
                                BEGIN
                                  SendDocHdrFound := FALSE;
                                  EDISendDocHdr.RESET;
                                  EDISendDocHdr.SETCURRENTKEY(
                                    "Trade Partner No.","Group Control No.","Transaction Set Control No.");
                                  EDISendDocHdr.SETRANGE("Trade Partner No.",EDIRecDocHdr."Trade Partner No.");
                                  ZeroFill(FunctGroupControlNo,EDIRecDocFields."Field Text Value");
                                  EDISendDocHdr.SETRANGE("Group Control No.",FunctGroupControlNo);
                                  IF NOT EDISendDocHdr.FIND('-') THEN BEGIN
                                    IF EDIDocument."Funct. Ack. Override Req." THEN BEGIN
                                      EDIRecDocField2.RESET;
                                      EDIRecDocField2.SETCURRENTKEY(
                                        "Internal Doc. No.",Segment,"Line No.");
                                      EDIRecDocField2.SETRANGE(
                                        "Internal Doc. No.",EDIRecDocHdr."Internal Doc. No.");
                                      EDIRecDocField2.SETRANGE(Segment,'AK2');
                                      EDIRecDocField2.SETRANGE(Element,'01');
                                      IF EDIRecDocField2.FIND('-') THEN
                                        EDIDocumentNo := EDIRecDocField2."Field Text Value";
                                      EDIDocument2.RESET;
                                      EDIDocument2.SETCURRENTKEY("Funct. Ack. Reconcile T.P.");
                                      EDIDocument2.SETRANGE(
                                        "Funct. Ack. Reconcile T.P.",EDIRecDocHdr."Trade Partner No.");
                                      IF EDIDocumentNo <> '' THEN
                                        EDIDocument2.SETRANGE("EDI Document No.",EDIDocumentNo);
                                      EDIDocument2.SETFILTER(
                                        Status,'<>%1',EDIDocument.Status::Inactive);
                                      IF EDIDocument2.FIND('-') THEN BEGIN
                                        REPEAT
                                          EDISendDocHdr.SETRANGE(
                                            "Trade Partner No.",EDIDocument2."Trade Partner No.");
                                          IF EDISendDocHdr.FIND('-') THEN
                                            SendDocHdrFound := TRUE;
                                        UNTIL (EDIDocument2.NEXT = 0) OR (SendDocHdrFound = TRUE)
                                      END ELSE
                                        SendDocHdrFound := FALSE;;
                                    END ELSE
                                      SendDocHdrFound := FALSE;
                                  END ELSE
                                    SendDocHdrFound := TRUE;
                                END;
                            END;
                          END;
                        'AK2':
                          BEGIN
                            CASE EDIRecDocFields.Element OF
                              '02':
                                BEGIN
                                  ZeroFill(TranSetControlNo[i],EDIRecDocFields."Field Text Value");
                                END;
                            END;
                          END;
                        'AK5':
                          BEGIN
                            CASE EDIRecDocFields.Element OF
                              '01':
                                BEGIN
                                  TranSetStatus[i] := EDIRecDocFields."Field Text Value";
                                  i := i + 1;
                                END;
                            END;
                          END;
                        'AK9':
                          BEGIN
                            CASE EDIRecDocFields.Element OF
                              '01':
                                BEGIN
                                  FunctGroupStatus := EDIRecDocFields."Field Text Value";
                                  IF SendDocHdrFound THEN BEGIN
                                    REPEAT
                                      CASE FunctGroupStatus OF
                                        'A':
                                          EDISendDocHdr."Funct. Group Ack. Status" :=
                                            EDISendDocHdr."Funct. Group Ack. Status"::Accepted;
                                        'E':
                                          EDISendDocHdr."Funct. Group Ack. Status" :=
                                            EDISendDocHdr."Funct. Group Ack. Status"::"Accepted Errors";
                                        'P':
                                          EDISendDocHdr."Funct. Group Ack. Status" :=
                                            EDISendDocHdr."Funct. Group Ack. Status"::"Part Accepted";
                                        'R':
                                          EDISendDocHdr."Funct. Group Ack. Status" :=
                                            EDISendDocHdr."Funct. Group Ack. Status"::Rejected;
                                      END;
                                      IF TranSetControlNo[1] <> '' THEN BEGIN
                                        i := 0;
                                        REPEAT
                                          i := i + 1;
                                          IF TranSetControlNo[i] = EDISendDocHdr."Transaction Set Control No." THEN
                                            CASE TranSetStatus[i] OF
                                              'A':
                                                EDISendDocHdr."Tran. Set Funct. Ack. Status" :=
                                                  EDISendDocHdr."Tran. Set Funct. Ack. Status"::Accepted;
                                              'E':
                                                EDISendDocHdr."Tran. Set Funct. Ack. Status" :=
                                                  EDISendDocHdr."Tran. Set Funct. Ack. Status"::"Accepted Errors";
                                              'R':
                                                EDISendDocHdr."Tran. Set Funct. Ack. Status" :=
                                                  EDISendDocHdr."Tran. Set Funct. Ack. Status"::Rejected;
                                            END;
                                        UNTIL (TranSetControlNo[i] = '') OR
                                              (TranSetControlNo[i] = EDISendDocHdr."Transaction Set Control No.");
                                      END;
                                      EDISendDocHdr."Funct. Ack. Internal Doc. No." := "Internal Doc. No.";
                                      EDISendDocHdr.MODIFY;
                                    UNTIL EDISendDocHdr.NEXT = 0;
                                    SetDataErrorStatus(FALSE)
                                  END ELSE BEGIN
                                    SetDataErrorStatus(TRUE);
                                  END;
                                END;
                            END;
                          END;
                       END;
                    UNTIL EDIRecDocFields.NEXT= 0;
                END;
              EDITemplate."Interface File Type"::"EDIFACT Delimited":
                BEGIN
                  EDIRecDocFields.RESET;
                  EDIRecDocFields.SETCURRENTKEY("Internal Doc. No.","Line No.");
                  EDIRecDocFields.SETRANGE("Internal Doc. No.",EDIRecDocHdr."Internal Doc. No.");
                  EDISendDocFields.SETRANGE(Segment,'UCI');
                  IF EDIRecDocFields.FIND('-') THEN BEGIN
                    REPEAT
                      CASE EDIRecDocFields.Element OF
                        '10':
                          BEGIN
                            EDISendDocHdr.RESET;
                            EDISendDocHdr.SETCURRENTKEY(
                              "Trade Partner No.","Group Control No.","Transaction Set Control No.");
                            EDISendDocHdr.SETRANGE("Trade Partner No.",EDIRecDocHdr."Trade Partner No.");
                            ZeroFill(FunctGroupControlNo,EDIRecDocFields."Field Text Value");
                            EDISendDocHdr.SETRANGE("Group Control No.",FunctGroupControlNo);
                            IF EDISendDocHdr.FIND('-') THEN
                              REPEAT
                                TranSetControlNo[i] := EDISendDocHdr."Transaction Set Control No.";
                              UNTIL EDISendDocHdr.NEXT = 0;
                          END;
                        '60':
                          BEGIN
                            TranSetStatus[i] := COPYSTR(EDIRecDocFields."Field Text Value",1,1);
                            i := i + 1;
                          END;
                      END;
                    UNTIL EDIRecDocFields.NEXT = 0;
                    i := 1;
                    REPEAT
                      EDISendDocHdr.RESET;
                      EDISendDocHdr.SETCURRENTKEY(
                        "Trade Partner No.","Group Control No.","Transaction Set Control No.");
                      EDISendDocHdr.SETRANGE("Trade Partner No.",EDIRecDocHdr."Trade Partner No.");
                      EDISendDocHdr.SETRANGE("Group Control No.");
                      EDISendDocHdr.SETRANGE("Transaction Set Control No.",TranSetControlNo[i]);
                      IF EDISendDocHdr.FIND('-') THEN BEGIN
                        IF TranSetStatus[i] = '7' THEN BEGIN
                          EDISendDocHdr."Funct. Group Ack. Status" :=
                            EDISendDocHdr."Funct. Group Ack. Status"::Accepted;
                          EDISendDocHdr."Tran. Set Funct. Ack. Status" :=
                            EDISendDocHdr."Tran. Set Funct. Ack. Status"::Accepted;
                        END ELSE BEGIN
                          EDISendDocHdr."Funct. Group Ack. Status" :=
                            EDISendDocHdr."Funct. Group Ack. Status"::Rejected;
                          EDISendDocHdr."Tran. Set Funct. Ack. Status" :=
                            EDISendDocHdr."Tran. Set Funct. Ack. Status"::Rejected;
                        END;
                        EDISendDocHdr.MODIFY;
                      END;
                      i := i + 1;
                    UNTIL TranSetControlNo[i] = '';
                  END;
                  SetDataErrorStatus(FALSE);
                END;
              EDITemplate."Interface File Type"::cXML,
              EDITemplate."Interface File Type"::XML,
              EDITemplate."Interface File Type"::None:
                BEGIN
                  ReferenceID := '';
                  ReferenceType := '';
                  SendDocHdrFound := FALSE;
                  cXMLDoc := FALSE;
                  ResponseFound := FALSE;
                  ReconcileByResponseID := FALSE;
                  IF (EDITemplate."Interface File Type" = EDITemplate."Interface File Type"::None) AND
                     (EDITemplate."File Format" <> EDITemplate."File Format"::XML)
                  THEN
                    EXIT;
                  EDIRecDocFields.RESET;
                  EDIRecDocFields.SETCURRENTKEY("Internal Doc. No.","NAV Table No.","Nav Field No.");
                  EDIRecDocFields.SETRANGE("Internal Doc. No.",EDIRecDocHdr."Internal Doc. No.");
                  EDIRecDocFields.SETRANGE("NAV Table No.",DATABASE::"E.D.I. Send Document Hdr.");
                  EDIRecDocFields.SETRANGE("Nav Field No.",EDISendDocHdr.FIELDNO("cXML Payload ID"));
                  IF NOT EDIRecDocFields.FIND('-') THEN BEGIN
                    EDIRecDocFields.SETRANGE("Nav Field No.");
                    EDIRecDocFields.SETRANGE("Nav Field No.",EDISendDocHdr.FIELDNO("Response ID"));
                    IF EDIRecDocFields.FIND('-') THEN
                      ResponseFound := TRUE
                    ELSE BEGIN
                      EDIRecDocFields.SETRANGE("Nav Field No.");
                      EDIRecDocFields.SETRANGE("Nav Field No.",EDISendDocHdr.FIELDNO("Reference ID"));
                      IF EDIRecDocFields.FIND('-') THEN BEGIN
                        ResponseFound:= TRUE;
                        ReferenceID := EDIRecDocFields."Field Text Value";
                        EDIRecDocFields.SETRANGE("Nav Field No.");
                        EDIRecDocFields.SETRANGE("Nav Field No.",EDISendDocHdr.FIELDNO("Reference Type"));
                        IF EDIRecDocFields.FIND('-') THEN
                          ReferenceType := EDIRecDocFields."Field Text Value";
                      END ELSE BEGIN
                        ResponseFound := TRUE;
                        ReconcileByResponseID := TRUE;
                      END;
                    END;
                  END ELSE BEGIN
                    cXMLDoc := TRUE;
                    ResponseFound := TRUE;
                  END;
                  IF ResponseFound THEN BEGIN
                    EDISendDocHdr.RESET;
                    EDISendDocHdr.SETRANGE("Trade Partner No.",EDIRecDocHdr."Trade Partner No.");
                    IF cXMLDoc THEN
                      EDISendDocHdr.SETRANGE("cXML Payload ID",EDIRecDocFields."Field Text Value")
                    ELSE
                      IF ReconcileByResponseID THEN
                         EDISendDocHdr.SETRANGE("Response ID",EDIRecDocFields."Field Text Value")
                      ELSE BEGIN
                        EDISendDocHdr.SETRANGE("Reference ID",ReferenceID);
                        IF ReferenceType <> '' THEN
                          EDISendDocHdr.SETRANGE("Reference Type",ReferenceType);
                      END;
                    IF EDISendDocHdr.FIND('+') THEN BEGIN
                      EDIRecDocField2.RESET;
                      EDIRecDocField2.SETCURRENTKEY("Internal Doc. No.","NAV Table No.","Nav Field No.");
                      EDIRecDocField2.SETRANGE("Internal Doc. No.",EDIRecDocHdr."Internal Doc. No.");
                      EDIRecDocField2.SETRANGE("NAV Table No.",DATABASE::"E.D.I. Send Document Hdr.");
                      EDIRecDocField2.SETRANGE("Nav Field No.",EDISendDocHdr.FIELDNO("Response Code"));
                      IF EDIRecDocField2.FIND('-') THEN BEGIN
                        EDIStatusCode.RESET;
                        EDIStatusCode.SETRANGE("Trade Partner No.",EDIRecDocHdr."Trade Partner No.");
                        EDIStatusCode.SETRANGE("EDI Document No.",EDIRecDocHdr."EDI Document No.");
                        EDIStatusCode.SETRANGE(Header,TRUE);
                        EDIStatusCode.SETRANGE(Type,EDIStatusCode.Type::Status);
                        EDIStatusCode.SETRANGE(Code,EDIRecDocField2."Field Text Value");
                        IF EDIStatusCode.FIND('-') THEN
                          CASE EDIStatusCode."Action Message"  OF
                            'ACCEPTED':
                              BEGIN
                                SendDocHdrFound := TRUE;
                                EDISendDocHdr."Response Status" :=
                                  EDISendDocHdr."Response Status"::Accepted;
                                EDISendDocHdr."Funct. Group Ack. Status" :=
                                  EDISendDocHdr."Funct. Group Ack. Status"::Accepted;
                                EDISendDocHdr."Tran. Set Funct. Ack. Status" :=
                                  EDISendDocHdr."Tran. Set Funct. Ack. Status"::Accepted;
                              END;
                            'ACCEPTED ERRORS':
                              BEGIN
                                 SendDocHdrFound := TRUE;
                                EDISendDocHdr."Response Status" :=
                                  EDISendDocHdr."Response Status"::"Accepted Errors";
                                EDISendDocHdr."Funct. Group Ack. Status" :=
                                  EDISendDocHdr."Funct. Group Ack. Status"::" ";
                                EDISendDocHdr."Tran. Set Funct. Ack. Status" :=
                                  EDISendDocHdr."Tran. Set Funct. Ack. Status"::" ";
                              END;
                            'REJECTED':
                              BEGIN
                                 SendDocHdrFound := TRUE;
                                EDISendDocHdr."Response Status" :=
                                  EDISendDocHdr."Response Status"::Rejected;
                                EDISendDocHdr."Funct. Group Ack. Status" :=
                                  EDISendDocHdr."Funct. Group Ack. Status"::" ";
                                EDISendDocHdr."Tran. Set Funct. Ack. Status" :=
                                  EDISendDocHdr."Tran. Set Funct. Ack. Status"::" ";
                              END;
                           'PART ACCEPTED':
                              BEGIN
                                 SendDocHdrFound := TRUE;
                                EDISendDocHdr."Response Status" :=
                                  EDISendDocHdr."Response Status"::"Part Accepted";
                                EDISendDocHdr."Funct. Group Ack. Status" :=
                                  EDISendDocHdr."Funct. Group Ack. Status"::" ";
                                EDISendDocHdr."Tran. Set Funct. Ack. Status" :=
                                  EDISendDocHdr."Tran. Set Funct. Ack. Status"::" ";
                              END;
                            'RESEND':
                              BEGIN
                                 SendDocHdrFound := TRUE;
                                EDISendDocHdr."Response Status" :=
                                  EDISendDocHdr."Response Status"::Resend;
                                EDISendDocHdr."Funct. Group Ack. Status" :=
                                  EDISendDocHdr."Funct. Group Ack. Status"::" ";
                                EDISendDocHdr."Tran. Set Funct. Ack. Status" :=
                                  EDISendDocHdr."Tran. Set Funct. Ack. Status"::" ";
                              END;
                          END
                        ELSE
                          SendDocHdrFound := FALSE;
                        IF SendDocHdrFound THEN BEGIN
                          EDIRecDocField3.RESET;
                          EDIRecDocField3.SETCURRENTKEY("Internal Doc. No.","NAV Table No.","Nav Field No.");
                          EDIRecDocField3.SETRANGE("Internal Doc. No.",EDIRecDocHdr."Internal Doc. No.");
                          EDIRecDocField3.SETRANGE("NAV Table No.",DATABASE::"E.D.I. Send Document Hdr.");
                          EDIRecDocField3.SETRANGE("Nav Field No.",EDISendDocHdr.FIELDNO("Response Description"));
                          IF EDIRecDocField3.FIND('+') THEN
                            EDISendDocHdr."Response Description" := EDIRecDocField3."Field Text Value"
                          ELSE
                            EDISendDocHdr."Response Description" := EDIStatusCode.Description;
                          EDISendDocHdr."Response Code" := EDIStatusCode.Code;
                          EDISendDocHdr."Funct. Ack. Internal Doc. No." := EDIRecDocHdr."Internal Doc. No.";
                          EDISendDocHdr.MODIFY;
                          SetDataErrorStatus(FALSE);
                        END ELSE BEGIN
                          SetDataErrorStatus(TRUE);
                        END;
                      END;
                    END ELSE BEGIN
                       SetDataErrorStatus(TRUE);
                    END;
                  END;
                END;
            END;
          END;

  }
  CODE
  {
    VAR
      InternalDocNo@1240020000 : Code[10];

    PROCEDURE ZeroFill@1(VAR ControlNo@1240030000 : Text[9];VAR TextValue@1240030001 : Text[80]);
    BEGIN
      ControlNo := TextValue;
      REPEAT
        IF STRLEN(ControlNo) < 9 THEN
          ControlNo := INSSTR(ControlNo,'0',1);
      UNTIL STRLEN(ControlNo) = 9;
    END;

    LOCAL PROCEDURE SetDataErrorStatus@1240020000(DataErrorStatus@1240020000 : Boolean);
    VAR
      EDIRecDocHdr@1240020001 : Record 14002358;
    BEGIN
      EDIRecDocHdr.GET(InternalDocNo);
      EDIRecDocHdr."Data Error" := DataErrorStatus;
      IF DataErrorStatus THEN
        EDIRecDocHdr."Inbound Funct. Ack. Updated" := FALSE
      ELSE BEGIN
        EDIRecDocHdr."Inbound Funct. Ack. Updated" := TRUE;
        EDIRecDocHdr."Document Processed" := TRUE;
      END;
      EDIRecDocHdr.MODIFY;
    END;

    BEGIN
    END.
  }
}

