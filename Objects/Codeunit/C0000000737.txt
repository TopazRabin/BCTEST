OBJECT Codeunit 737 VAT Report Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=09/21/19;
    Time=12:00:00 PM;
    Version List=NAVW111.00.00.36462;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      CreateVATReturnQst@1000 : TextConst '@@@=1 - VAT Return No.;ENU=Tax Return %1 has been created. Do you want to open the Tax return card?;ESM=Se ha creado la devoluci¢n de IVA %1. ¨Desea abrir la tarjeta de devoluci¢n de IVA?;FRC=Le retour TVA %1 a ‚t‚ cr‚‚. Voulez-vous ouvrir la fiche retour TVAÿ?;ENC=Tax Return %1 has been created. Do you want to open the Tax return card?';
      AlreadyExistVATReturnQst@1002 : TextConst '@@@=1 - VAT Return No.;ENU=Tax Return %1 associated with this Tax return period already exists. Do you want to open the Tax return card?;ESM=Ya existe la devoluci¢n de IVA %1 asociada a este per¡odo de devoluci¢n de IVA. ¨Desea abrir la tarjeta de devoluci¢n de IVA?;FRC=Le retour TVA %1 associ‚ … cette p‚riode de retour TVA existe d‚j…. Voulez-vous ouvrir la fiche retour TVAÿ?;ENC=Tax Return %1 associated with this Tax return period already exists. Do you want to open the Tax return card?';
      NoVATReturnQst@1003 : TextConst 'ENU=There is no Tax return for this period. Do you want to create a new one?;ESM=No hay ninguna devoluci¢n de IVA para este periodo. ¨Desea crear una nueva?;FRC=Il n''existe aucun retour TVA pour cette p‚riode. Voulez-vous en cr‚er unÿ?;ENC=There is no Tax return for this period. Do you want to create a new one?';
      FailedJobNotificationMsg@1005 : TextConst '@@@=1 - datetime;ENU=Auto receive job has failed (executed on %1).;ESM=Error en el trabajo de recepci¢n (ejecutado el %1).;FRC=La tƒche de r‚ception automatique a ‚chou‚ (ex‚cut‚e le %1).;ENC=Auto receive job has failed (executed on %1).';
      OpenJobCardMsg@1006 : TextConst 'ENU=Open the job card;ESM=Abre la ficha de trabajo;FRC=Ouvrir la fiche projet;ENC=Open the job card';
      ManualInsertNotificationMsg@1008 : TextConst 'ENU=Insert is only allowed with the Get Tax Return Periods action.;ESM=Insertar solo est  permitido con la acci¢n Obtener per¡odos de devoluci¢n de IVA.;FRC=L''insertion n''est autoris‚e qu''avec l''action Obtenir les p‚riodes de retour TVA.;ENC=Insert is only allowed with the Get Tax Return Periods action.';
      ManualInsertNotificationNameTxt@1007 : TextConst 'ENU=Tax return period manual insert notification.;ESM=Notificaci¢n inserci¢n manual per¡odo devoluci¢n de IVA.;FRC=Notification d''insertion manuelle de la p‚riode de retour TVA.;ENC=Tax return period manual insert notification.';
      ManualInsertNotificationDescriptionTxt@1010 : TextConst 'ENU=Warn about Tax return period manual insertion in case the Manual Receive Period CU ID field in the Tax Report Setup window is filled in.;ESM=Permite advertir acerca de la inserci¢n manual del per¡odo de devoluci¢n de IVA en caso de que se rellene el campo Id. del CU per¡odo de recepci¢n manual de la ventana Configuraci¢n de informe de IVA.;FRC=Notifiez l''insertion manuelle de la p‚riode de retour TVA si le champ Code codeunit de la p‚riode de r‚ception manuelle dans la fenˆtre Configuration rapport TVA est renseign‚.;ENC=Warn about Tax return period manual insertion in case the Manual Receive Period CU ID field in the Tax Report Setup window is filled in.';
      DontShowAgainTxt@1009 : TextConst 'ENU=Do not show again;ESM=No volver a mostrar;FRC=Ne plus afficher;ENC=Do not show again';

    [EventSubscriber(Page,737,OnOpenPageEvent)]
    LOCAL PROCEDURE OnOpenVATReturnPeriodListPageEvent@16(VAR Rec@1000 : Record 737);
    VAR
      VATReportSetup@1001 : Record 743;
      ManualInsertNotification@1002 : Notification;
    BEGIN
      IF NOT VATReportSetup.GET THEN
        EXIT;

      IF VATReportSetup."Manual Receive Period CU ID" = 0 THEN
        EXIT;

      IF NOT IsManualInsertNotificationEnabled THEN
        EXIT;

      ManualInsertNotification.ID := GetManualInsertNotificationGUID;
      ManualInsertNotification.RECALL;
      ManualInsertNotification.MESSAGE := ManualInsertNotificationMsg;
      ManualInsertNotification.SCOPE := NOTIFICATIONSCOPE::LocalScope;
      ManualInsertNotification.ADDACTION(DontShowAgainTxt,CODEUNIT::"VAT Report Mgt.",'DontShowAgainManualInsertNotification');
      ManualInsertNotification.SEND;
    END;

    PROCEDURE DontShowAgainManualInsertNotification@23(Notification@1000 : Notification);
    VAR
      MyNotifications@1001 : Record 1518;
    BEGIN
      IF NOT MyNotifications.Disable(GetManualInsertNotificationGUID) THEN
        MyNotifications.InsertDefault(
          GetManualInsertNotificationGUID,ManualInsertNotificationNameTxt,ManualInsertNotificationDescriptionTxt,FALSE);
    END;

    LOCAL PROCEDURE IsManualInsertNotificationEnabled@27() : Boolean;
    VAR
      MyNotifications@1000 : Record 1518;
    BEGIN
      EXIT(MyNotifications.IsEnabled(GetManualInsertNotificationGUID));
    END;

    LOCAL PROCEDURE GetManualInsertNotificationGUID@26() : GUID;
    BEGIN
      EXIT('93003212-76EA-490F-A5C6-6961656A7CF8');
    END;

    PROCEDURE GetVATReturnPeriods@4();
    VAR
      VATReportSetup@1000 : Record 743;
    BEGIN
      VATReportSetup.GET;
      VATReportSetup.TESTFIELD("Manual Receive Period CU ID");
      CODEUNIT.RUN(VATReportSetup."Manual Receive Period CU ID");
    END;

    PROCEDURE GetSubmittedVATReturns@5(VATReturnPeriod@1000 : Record 737);
    VAR
      VATReportSetup@1001 : Record 743;
    BEGIN
      VATReportSetup.GET;
      VATReportSetup.TESTFIELD("Receive Submitted Return CU ID");
      CODEUNIT.RUN(VATReportSetup."Receive Submitted Return CU ID",VATReturnPeriod);
    END;

    PROCEDURE CreateVATReturnFromVATPeriod@1(VATReturnPeriod@1003 : Record 737);
    VAR
      VATReportHeader@1002 : Record 740;
    BEGIN
      IF NOT VATReportHeader.GET(VATReportHeader."VAT Report Config. Code"::"VAT Return",VATReturnPeriod."VAT Return No.") THEN BEGIN
        CreateVATReturn(VATReportHeader,VATReturnPeriod);
        IF CONFIRM(STRSUBSTNO(CreateVATReturnQst,VATReportHeader."No.")) THEN
          OpenVATReturnCardFromVATPeriod(VATReturnPeriod);
      END ELSE
        IF CONFIRM(STRSUBSTNO(AlreadyExistVATReturnQst,VATReportHeader."No.")) THEN
          OpenVATReturnCard(VATReportHeader);
    END;

    PROCEDURE OpenVATReturnCardFromVATPeriod@6(VATReturnPeriod@1001 : Record 737);
    VAR
      VATReportHeader@1002 : Record 740;
    BEGIN
      IF VATReportHeader.GET(VATReportHeader."VAT Report Config. Code"::"VAT Return",VATReturnPeriod."VAT Return No.") THEN
        OpenVATReturnCard(VATReportHeader)
      ELSE
        IF CONFIRM(NoVATReturnQst) THEN BEGIN
          CreateVATReturn(VATReportHeader,VATReturnPeriod);
          OpenVATReturnCard(VATReportHeader);
        END;
    END;

    LOCAL PROCEDURE OpenVATReturnCard@9(VATReportHeader@1000 : Record 740);
    BEGIN
      COMMIT;
      PAGE.RUNMODAL(PAGE::"VAT Report",VATReportHeader);
    END;

    PROCEDURE OpenVATPeriodCardFromVATReturn@7(VATReportHeader@1001 : Record 740);
    VAR
      VATReturnPeriod@1000 : Record 737;
    BEGIN
      COMMIT;
      IF VATReturnPeriod.GET(VATReportHeader."Return Period No.") THEN
        PAGE.RUNMODAL(PAGE::"VAT Return Period Card",VATReturnPeriod);
    END;

    LOCAL PROCEDURE CreateVATReturn@8(VAR VATReportHeader@1000 : Record 740;VAR VATReturnPeriod@1002 : Record 737);
    BEGIN
      InsertNewVATReturn(VATReportHeader);
      UpdateVATReturn(VATReportHeader,VATReturnPeriod);
    END;

    LOCAL PROCEDURE InsertNewVATReturn@2(VAR VATReportHeader@1000 : Record 740);
    VAR
      VATReportSetup@1002 : Record 743;
    BEGIN
      VATReportSetup.GET;
      VATReportSetup.TESTFIELD("Report Version");
      WITH VATReportHeader DO BEGIN
        "VAT Report Config. Code" := "VAT Report Config. Code"::"VAT Return";
        "VAT Report Version" := VATReportSetup."Report Version";
        INSERT(TRUE);
      END;
    END;

    LOCAL PROCEDURE UpdateVATReturn@18(VAR VATReportHeader@1001 : Record 740;VAR VATReturnPeriod@1000 : Record 737);
    BEGIN
      VATReturnPeriod.CopyToVATReturn(VATReportHeader);
      VATReportHeader.MODIFY;

      VATReturnPeriod."VAT Return No." := VATReportHeader."No.";
      VATReturnPeriod.MODIFY;
    END;

    PROCEDURE CreateAndStartAutoUpdateVATReturnPeriodJob@3(VATReportSetup@1000 : Record 743);
    VAR
      JobQueueEntry@1001 : Record 472;
      JobQueueMgt@1002 : Codeunit 456;
    BEGIN
      IF VATReportSetup."Update Period Job Frequency" <> VATReportSetup."Update Period Job Frequency"::Never THEN
        VATReportSetup.TESTFIELD("Auto Receive Period CU ID");
      JobQueueMgt.DeleteJobQueueEntries(JobQueueEntry."Object Type to Run"::Codeunit,VATReportSetup."Auto Receive Period CU ID");
      IF VATReportSetup."Update Period Job Frequency" = VATReportSetup."Update Period Job Frequency"::Never THEN
        EXIT;

      JobQueueEntry."No. of Minutes between Runs" := GetJobNoOfMinutes(VATReportSetup);
      JobQueueEntry."Object Type to Run" := JobQueueEntry."Object Type to Run"::Codeunit;
      JobQueueEntry."Object ID to Run" := VATReportSetup."Auto Receive Period CU ID";
      JobQueueMgt.CreateJobQueueEntry(JobQueueEntry);
      JobQueueEntry."Run on Saturdays" := FALSE;
      JobQueueEntry."Run on Sundays" := FALSE;
      JobQueueEntry."Maximum No. of Attempts to Run" := 1;
      JobQueueEntry.MODIFY;

      CODEUNIT.RUN(CODEUNIT::"Job Queue - Enqueue",JobQueueEntry);
    END;

    LOCAL PROCEDURE GetJobNoOfMinutes@10(VATReportSetup@1000 : Record 743) : Integer;
    BEGIN
      WITH VATReportSetup DO
        CASE "Update Period Job Frequency" OF
          "Update Period Job Frequency"::Never:
            EXIT(0);
          "Update Period Job Frequency"::Daily:
            EXIT(60 * 24);
          "Update Period Job Frequency"::Weekly:
            EXIT(60 * 24 * 7);
        END;
    END;

    [EventSubscriber(Page,737,OnOpenPageEvent)]
    LOCAL PROCEDURE CheckJobStatusOnOpenVATReturnPeriods@17(VAR Rec@1000 : Record 737);
    VAR
      JobQueueLogEntry@1001 : Record 474;
    BEGIN
      IF IsLastVATReturnPeriodJobQueueLogEntryHasError(JobQueueLogEntry) THEN
        SendJobErrorNotification(JobQueueLogEntry);
    END;

    LOCAL PROCEDURE IsLastVATReturnPeriodJobQueueLogEntryHasError@11(VAR JobQueueLogEntry@1000 : Record 474) : Boolean;
    VAR
      VATReportSetup@1001 : Record 743;
    BEGIN
      VATReportSetup.GET;
      IF (VATReportSetup."Auto Receive Period CU ID" = 0) OR
         (VATReportSetup."Update Period Job Frequency" = VATReportSetup."Update Period Job Frequency"::Never)
      THEN
        EXIT(FALSE);

      WITH JobQueueLogEntry DO BEGIN
        SETRANGE("Object Type to Run","Object Type to Run"::Codeunit);
        SETRANGE("Object ID to Run",VATReportSetup."Auto Receive Period CU ID");
        IF FINDLAST THEN
          EXIT(Status = Status::Error);
      END;

      EXIT(FALSE);
    END;

    LOCAL PROCEDURE SendJobErrorNotification@12(JobQueueLogEntry@1001 : Record 474);
    VAR
      JobErrorNotification@1000 : Notification;
    BEGIN
      JobErrorNotification.MESSAGE := STRSUBSTNO(FailedJobNotificationMsg,JobQueueLogEntry."Start Date/Time");
      JobErrorNotification.SCOPE := NOTIFICATIONSCOPE::LocalScope;
      JobErrorNotification.ADDACTION(OpenJobCardMsg,CODEUNIT::"VAT Report Mgt.",'OpenVATReturnPeriodJobCard');
      JobErrorNotification.SEND;
    END;

    PROCEDURE OpenVATReturnPeriodJobCard@20(JobErrorNotification@1002 : Notification);
    VAR
      VATReportSetup@1000 : Record 743;
      JobQueueEntry@1001 : Record 472;
    BEGIN
      VATReportSetup.GET;
      WITH JobQueueEntry DO BEGIN
        SETRANGE("Object Type to Run","Object Type to Run"::Codeunit);
        SETRANGE("Object ID to Run",VATReportSetup."Auto Receive Period CU ID");
        IF NOT ISEMPTY THEN
          PAGE.RUNMODAL(PAGE::"Job Queue Entry Card",JobQueueEntry);
      END;
    END;

    [EventSubscriber(Page,740,OnBeforeValidateEvent,"VAT Report Version")]
    LOCAL PROCEDURE OnBeforeValidateVATReportVersion@15(VAR Rec@1000 : Record 740);
    VAR
      VATReportSetup@1001 : Record 743;
      VATReturnPeriod@1002 : Record 737;
    BEGIN
      IF VATReportSetup.GET THEN
        IF (Rec."VAT Report Version" <> '') AND (Rec."VAT Report Version" = VATReportSetup."Report Version") THEN
          IF PAGE.RUNMODAL(0,VATReturnPeriod) = ACTION::LookupOK THEN
            UpdateVATReturn(Rec,VATReturnPeriod);
    END;

    BEGIN
    END.
  }
}

