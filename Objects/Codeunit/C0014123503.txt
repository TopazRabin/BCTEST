OBJECT Codeunit 14123503 ES Text Line Management
{
  OBJECT-PROPERTIES
  {
    Date=04/30/18;
    Time=12:00:00 PM;
    Version List=ES1.41.51;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'ENU=Comparing Text Lines';
      Text002@1002 : TextConst 'ENU=Searching for match';
      Text003@1003 : TextConst 'ENU=Adding Old Text Lines';
      Text004@1004 : TextConst 'ENU=Adding New Text Lines';
      Text005@1240520008 : TextConst 'ENU=Process #1################################################\';
      Text006@1240520009 : TextConst 'ENU=Updating Include in Log';
      Text007@1240520010 : TextConst 'ENU=No more Changes.';
      Text008@1005 : TextConst 'ENU=No Progress in Line No. %1 and %2.';

    PROCEDURE Compare@1240520008(VAR OldESTextLine@1240520008 : Record 14123520;VAR NewESTextLine@1240520009 : Record 14123520;VAR ResultESTextLine@1240520020 : TEMPORARY Record 14123520);
    VAR
      ESSecuritySetup@1240520011 : Record 14123521;
      Window@1240520021 : Dialog;
      EOFOld@1240520015 : Boolean;
      EOFNew@1240520016 : Boolean;
      LastOldEntryNo@1240520017 : Integer;
      LastNewEntryNo@1240520018 : Integer;
      CompareEntryNo@1240520019 : Integer;
      NextUpdateEntryNo@1240520013 : Integer;
      LastEntryNoTotal@1240520010 : Integer;
    BEGIN
      ESSecuritySetup.GET;
      ESSecuritySetup.TESTFIELD("Lines to Match in Compare");
      ESSecuritySetup.TESTFIELD("Lines to Include in Log");

      ResultESTextLine.RESET;
      ResultESTextLine.DELETEALL;

      IF OldESTextLine.FIND('+') THEN
        LastOldEntryNo := OldESTextLine."Entry No."
      ELSE
        LastOldEntryNo := 1;

      IF NewESTextLine.FIND('+') THEN
        LastNewEntryNo := NewESTextLine."Entry No."
      ELSE
        LastNewEntryNo := 1;

      IF GUIALLOWED THEN
        Window.OPEN(Text005 + '        @2@@@@@@@@@@@@@@@@@@@@@@@@@@@@');

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text001);
      OldESTextLine.FIND('-');
      ResultESTextLine := OldESTextLine;
      CompareEntryNo := CompareEntryNo + 1;
      ResultESTextLine."Version Code" := '';
      ResultESTextLine."Entry No." := CompareEntryNo;
      ResultESTextLine."Compare Status" := ResultESTextLine."Compare Status"::Old;
      ResultESTextLine."Include in Log" := TRUE;
      ResultESTextLine.INSERT;

      NewESTextLine.FIND('-');
      ResultESTextLine := NewESTextLine;
      CompareEntryNo := CompareEntryNo + 1;
      ResultESTextLine."Version Code" := '';
      ResultESTextLine."Entry No." := CompareEntryNo;
      ResultESTextLine."Compare Status" := ResultESTextLine."Compare Status"::New;
      ResultESTextLine."Include in Log" := TRUE;
      ResultESTextLine.INSERT;

      EOFOld := OldESTextLine.NEXT = 0;
      EOFNew := NewESTextLine.NEXT = 0;
      IF NOT EOFOld AND NOT EOFNew THEN
        REPEAT
          IF OldESTextLine."Entry No." + NewESTextLine."Entry No." > NextUpdateEntryNo THEN BEGIN
            IF GUIALLOWED THEN
              Window.UPDATE(
                2,
                ROUND(
                  10000 *
                  ((OldESTextLine."Entry No." + NewESTextLine."Entry No.") /
                   (LastOldEntryNo + LastNewEntryNo)),1));
            NextUpdateEntryNo :=
              OldESTextLine."Entry No." + NewESTextLine."Entry No." +
              ROUND(LastOldEntryNo + LastNewEntryNo / 500,1);
          END;

          IF Equal(OldESTextLine,NewESTextLine) THEN BEGIN
            ResultESTextLine := NewESTextLine;
            CompareEntryNo := CompareEntryNo + 1;
            ResultESTextLine."Version Code" := '';
            ResultESTextLine."Entry No." := CompareEntryNo;
            ResultESTextLine."Compare Status" := ResultESTextLine."Compare Status"::Equal;
            ResultESTextLine.INSERT;

            EOFOld := OldESTextLine.NEXT = 0;
            EOFNew := NewESTextLine.NEXT = 0;
          END ELSE BEGIN
            IF GUIALLOWED THEN
              Window.UPDATE(1,Text002);
            FindNextMatch(
              OldESTextLine,NewESTextLine,ResultESTextLine,EOFOld,EOFNew,CompareEntryNo,
              ESSecuritySetup."Lines to Match in Compare",ESSecuritySetup."Maximum Lines to Search");
            IF GUIALLOWED THEN
              Window.UPDATE(1,Text001);
          END;

          IF (OldESTextLine."Entry No." + NewESTextLine."Entry No." = LastEntryNoTotal) AND
             NOT EOFOld AND NOT EOFNew
          THEN BEGIN
            MESSAGE(
              Text008,
              OldESTextLine."Entry No.",NewESTextLine."Entry No.");
            EXIT;
          END ELSE
            LastEntryNoTotal := OldESTextLine."Entry No." + NewESTextLine."Entry No.";
        UNTIL EOFOld OR EOFNew;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text003);
      IF NOT EOFOld THEN
        REPEAT
          IF OldESTextLine."Entry No." + NewESTextLine."Entry No." > NextUpdateEntryNo THEN BEGIN
            IF GUIALLOWED THEN
              Window.UPDATE(
                2,
                ROUND(
                  10000 *
                  ((OldESTextLine."Entry No." + NewESTextLine."Entry No.") /
                   (LastOldEntryNo + LastNewEntryNo)),1));
            NextUpdateEntryNo :=
              OldESTextLine."Entry No." + NewESTextLine."Entry No." +
              ROUND(LastOldEntryNo + LastNewEntryNo / 500,1);
          END;

          ResultESTextLine := OldESTextLine;
          CompareEntryNo := CompareEntryNo + 1;
          ResultESTextLine."Version Code" := '';
          ResultESTextLine."Entry No." := CompareEntryNo;
          ResultESTextLine."Compare Status" := ResultESTextLine."Compare Status"::Old;
          ResultESTextLine."Include in Log" := TRUE;
          ResultESTextLine.INSERT;
        UNTIL OldESTextLine.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text004);
      IF NOT EOFNew THEN
        REPEAT
          IF OldESTextLine."Entry No." + NewESTextLine."Entry No." > NextUpdateEntryNo THEN BEGIN
            IF GUIALLOWED THEN
              Window.UPDATE(
                2,
                ROUND(
                  10000 *
                  ((OldESTextLine."Entry No." + NewESTextLine."Entry No.") /
                   (LastOldEntryNo + LastNewEntryNo)),1));
            NextUpdateEntryNo :=
              OldESTextLine."Entry No." + NewESTextLine."Entry No." +
              ROUND(LastOldEntryNo + LastNewEntryNo / 500,1);
          END;

          ResultESTextLine := NewESTextLine;
          CompareEntryNo := CompareEntryNo + 1;
          ResultESTextLine."Version Code" := '';
          ResultESTextLine."Entry No." := CompareEntryNo;
          ResultESTextLine."Compare Status" := ResultESTextLine."Compare Status"::New;
          ResultESTextLine."Include in Log" := TRUE;
          ResultESTextLine.INSERT;
        UNTIL NewESTextLine.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text006);
      UpdateIncludeInLog(ResultESTextLine,ESSecuritySetup."Lines to Include in Log");

      IF GUIALLOWED THEN
        Window.CLOSE;
    END;

    LOCAL PROCEDURE Match@1240520010(VAR OldESTextLine@1240520009 : Record 14123520;VAR NewESTextLine@1240520008 : Record 14123520;LinesToMatch@1240520010 : Integer) : Boolean;
    VAR
      OldESTextLineStart@1240520016 : Record 14123520;
      NewESTextLineStart@1240520014 : Record 14123520;
      i@1240520011 : Integer;
      NextOldExist@1240520012 : Boolean;
      NextNewExist@1240520013 : Boolean;
    BEGIN
      IF NOT Equal(OldESTextLine,NewESTextLine) THEN
        EXIT(FALSE);

      IF LinesToMatch <= 1 THEN
        EXIT(TRUE);

      OldESTextLineStart := OldESTextLine;
      NewESTextLineStart := NewESTextLine;

      FOR i := 2 TO LinesToMatch DO BEGIN
        NextOldExist := OldESTextLine.NEXT <> 0;
        NextNewExist := NewESTextLine.NEXT <> 0;

        IF NOT NextOldExist AND NOT NextNewExist THEN BEGIN
          OldESTextLine := OldESTextLineStart;
          NewESTextLine := NewESTextLineStart;

          EXIT(TRUE);
        END;

        IF (NextOldExist AND NOT NextNewExist) OR (NOT NextOldExist AND NextNewExist) THEN BEGIN
          OldESTextLine := OldESTextLineStart;
          NewESTextLine := NewESTextLineStart;

          EXIT(FALSE);
        END;

        IF NOT Equal(OldESTextLine,NewESTextLine) THEN BEGIN
          OldESTextLine := OldESTextLineStart;
          NewESTextLine := NewESTextLineStart;

          EXIT(FALSE);
        END;
      END;

      OldESTextLine := OldESTextLineStart;
      NewESTextLine := NewESTextLineStart;

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE Equal@1240520009(OldESTextLine@1240520008 : Record 14123520;NewESTextLine@1240520009 : Record 14123520) : Boolean;
    BEGIN
      IF OldESTextLine."Text Overflow" OR NewESTextLine."Text Overflow" THEN
        EXIT(FALSE);
      IF OldESTextLine."Table ID" <> NewESTextLine."Table ID" THEN
        EXIT(FALSE);
      IF OldESTextLine.Level <> NewESTextLine.Level THEN
        EXIT(FALSE);
      IF OldESTextLine."Primary Key Text" <> NewESTextLine."Primary Key Text" THEN
        EXIT(FALSE);
      IF OldESTextLine."Text 1-250" <> NewESTextLine."Text 1-250" THEN
        EXIT(FALSE);
      IF OldESTextLine."Text 251-500" <> NewESTextLine."Text 251-500" THEN
        EXIT(FALSE);
      IF OldESTextLine."Text 501-750" <> NewESTextLine."Text 501-750" THEN
        EXIT(FALSE);
      IF OldESTextLine."Text 751-1000" <> NewESTextLine."Text 751-1000" THEN
        EXIT(FALSE);
      EXIT(TRUE);
    END;

    PROCEDURE FindNextMatch@1240520019(VAR OldESTextLine@1240520010 : Record 14123520;VAR NewESTextLine@1240520009 : Record 14123520;VAR ResultESTextLine@1240520008 : TEMPORARY Record 14123520;VAR EOFOld@1240520015 : Boolean;VAR EOFNew@1240520014 : Boolean;VAR CompareEntryNo@1240520011 : Integer;LinesToMatch@1240520012 : Integer;MaxLinesToSearch@1240520025 : Integer);
    VAR
      OldESTextLineStart@1240520016 : Record 14123520;
      OldESTextLineEnd@1240520017 : Record 14123520;
      NewESTextLineStart@1240520013 : Record 14123520;
      NewESTextLineEnd@1240520018 : Record 14123520;
      MatchFound@1240520019 : Boolean;
      CompareEnded@1240520020 : Boolean;
      SearchInOld@1240520021 : Boolean;
      LinesToSearch@1240520022 : Integer;
      SearchEOFOld@1240520024 : Boolean;
      SearchEOFNew@1240520023 : Boolean;
    BEGIN
      OldESTextLineStart := OldESTextLine;
      NewESTextLineStart := NewESTextLine;

      SearchInOld := TRUE;
      LinesToSearch := 0;
      REPEAT
        IF SearchInOld THEN BEGIN
          IF (OldESTextLine."Entry No." - OldESTextLineStart."Entry No." >= LinesToSearch) OR
             SearchEOFOld
          THEN BEGIN
            SearchInOld := FALSE;
            LinesToSearch := LinesToSearch + 1;

            NewESTextLine := NewESTextLineStart;
            SearchEOFNew := FALSE;
          END ELSE
            SearchEOFOld := OldESTextLine.NEXT = 0;
        END ELSE BEGIN
          IF (NewESTextLine."Entry No." - NewESTextLineStart."Entry No." > LinesToSearch) OR
             SearchEOFNew
          THEN BEGIN
            SearchInOld := TRUE;

            OldESTextLine := OldESTextLineStart;
            SearchEOFOld := FALSE;
          END ELSE
            SearchEOFNew := NewESTextLine.NEXT = 0;
        END;

        IF (MaxLinesToSearch <> 0) AND (MaxLinesToSearch < LinesToSearch) THEN BEGIN
          CompareEnded := TRUE;
        END ELSE
          CASE TRUE OF
            SearchEOFOld AND SearchEOFNew:
              CompareEnded := TRUE;
            (SearchInOld AND NOT SearchEOFOld) OR (NOT SearchInOld AND NOT SearchEOFNew):
              MatchFound := Match(OldESTextLine,NewESTextLine,LinesToMatch);
          END;
      UNTIL MatchFound OR CompareEnded;

      IF (MaxLinesToSearch <> 0) AND (MaxLinesToSearch < LinesToSearch) AND CompareEnded THEN BEGIN
        SearchInOld := FALSE;
        OldESTextLine := OldESTextLineStart;
        NewESTextLine := NewESTextLineStart;
        SearchEOFNew := NewESTextLine.NEXT(MaxLinesToSearch) < MaxLinesToSearch;

        IF NOT SearchEOFNew THEN BEGIN
          CompareEnded := FALSE;

          REPEAT
            SearchEOFNew := NewESTextLine.NEXT = 0;
            IF SearchEOFNew THEN
              CompareEnded := TRUE
            ELSE
              MatchFound := Match(OldESTextLine,NewESTextLine,LinesToMatch);
          UNTIL MatchFound OR CompareEnded;

          IF NOT MatchFound THEN BEGIN
            SearchInOld := TRUE;
            OldESTextLine := OldESTextLineStart;
            SearchEOFOld := OldESTextLine.NEXT(MaxLinesToSearch) < MaxLinesToSearch;
            NewESTextLine := NewESTextLineStart;

            IF NOT SearchEOFOld THEN BEGIN
              CompareEnded := FALSE;

              REPEAT
                SearchEOFOld := OldESTextLine.NEXT = 0;
                IF SearchEOFOld THEN
                  CompareEnded := TRUE
                ELSE
                  MatchFound := Match(OldESTextLine,NewESTextLine,LinesToMatch);
              UNTIL MatchFound OR CompareEnded;
            END;
          END;
        END;
      END;

      IF MatchFound THEN
        OldESTextLineEnd := OldESTextLine;

      IF MatchFound THEN
        NewESTextLineEnd := NewESTextLine;

      OldESTextLine := OldESTextLineStart;
      WHILE (MatchFound AND (OldESTextLine."Entry No." < OldESTextLineEnd."Entry No.")) OR
            (NOT MatchFound AND NOT EOFOld)
      DO BEGIN
        ResultESTextLine := OldESTextLine;
        CompareEntryNo := CompareEntryNo + 1;
        ResultESTextLine."Version Code" := '';
        ResultESTextLine."Entry No." := CompareEntryNo;
        ResultESTextLine."Compare Status" := ResultESTextLine."Compare Status"::Old;
        ResultESTextLine."Include in Log" := TRUE;
        ResultESTextLine.INSERT;

        EOFOld := OldESTextLine.NEXT = 0;
      END;

      NewESTextLine := NewESTextLineStart;
      WHILE (MatchFound AND (NewESTextLine."Entry No." < NewESTextLineEnd."Entry No.")) OR
            (NOT MatchFound AND NOT EOFNew)
      DO BEGIN
        ResultESTextLine := NewESTextLine;
        CompareEntryNo := CompareEntryNo + 1;
        ResultESTextLine."Version Code" := '';
        ResultESTextLine."Entry No." := CompareEntryNo;
        ResultESTextLine."Compare Status" := ResultESTextLine."Compare Status"::New;
        ResultESTextLine."Include in Log" := TRUE;
        ResultESTextLine.INSERT;

        EOFNew := NewESTextLine.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE UpdateIncludeInLog@1240520011(VAR ResultESTextLine@1240520008 : TEMPORARY Record 14123520;LinesToInclude@1240520009 : Integer);
    VAR
      ESTextLine@1240520010 : Record 14123520;
      LastLineEqual@1240520011 : Boolean;
      Finished@1240520012 : Boolean;
      ChangedRecords@1240520013 : Integer;
    BEGIN
      ResultESTextLine.SETRANGE("Include in Log");
      IF ResultESTextLine.FIND('-') THEN
        REPEAT
          IF LastLineEqual THEN BEGIN
            IF ResultESTextLine."Compare Status" <> ResultESTextLine."Compare Status"::Equal THEN BEGIN
              ESTextLine := ResultESTextLine;

              IF ResultESTextLine.NEXT(-1) <> 0 THEN BEGIN
                ChangedRecords := 0;
                Finished := FALSE;
                REPEAT
                  ChangedRecords := ChangedRecords + 1;

                  IF NOT ResultESTextLine."Include in Log" THEN BEGIN
                    ResultESTextLine."Include in Log" := TRUE;
                    ResultESTextLine.MODIFY;
                  END;

                  IF ChangedRecords >= LinesToInclude THEN
                    Finished := TRUE;
                  IF NOT Finished THEN
                    Finished := ResultESTextLine.NEXT(-1) = 0;
                  IF NOT Finished THEN
                    Finished :=
                      ResultESTextLine."Compare Status" <> ResultESTextLine."Compare Status"::Equal;
                UNTIL Finished;
              END;

              ResultESTextLine := ESTextLine;
              LastLineEqual := FALSE;
            END ELSE BEGIN
              IF ResultESTextLine."Include in Log" THEN BEGIN
                ResultESTextLine."Include in Log" := FALSE;
                ResultESTextLine.MODIFY;
              END;
            END;
          END ELSE BEGIN
            IF ResultESTextLine."Compare Status" = ResultESTextLine."Compare Status"::Equal THEN BEGIN
              ChangedRecords := 0;
              Finished := FALSE;
              REPEAT
                ChangedRecords := ChangedRecords + 1;

                IF NOT ResultESTextLine."Include in Log" THEN BEGIN
                   ResultESTextLine."Include in Log" := TRUE;
                  ResultESTextLine.MODIFY;
                END;

                IF ChangedRecords >= LinesToInclude THEN
                  Finished := TRUE;
                IF NOT Finished THEN
                  Finished := ResultESTextLine.NEXT = 0;
                IF NOT Finished THEN
                  Finished :=
                    ResultESTextLine."Compare Status" <> ResultESTextLine."Compare Status"::Equal;
              UNTIL Finished;

              IF ResultESTextLine."Compare Status" = ResultESTextLine."Compare Status"::Equal THEN
                LastLineEqual := TRUE;
            END ELSE BEGIN
              IF NOT ResultESTextLine."Include in Log" THEN BEGIN
                ResultESTextLine."Include in Log" := TRUE;
                ResultESTextLine.MODIFY;
              END;
            END;
          END;
        UNTIL ResultESTextLine.NEXT = 0;
    END;

    PROCEDURE NextChange@1240520012(VAR ESTextLineTmp@1240520010 : Record 14123520;VAR CurrentESTextLine@1240520011 : Record 14123520);
    VAR
      Finished@1240520008 : Boolean;
    BEGIN
      ESTextLineTmp.TESTFIELD("Compare Status");

      ESTextLineTmp.COPY(CurrentESTextLine);

      IF ESTextLineTmp."Compare Status" <> ESTextLineTmp."Compare Status"::Equal THEN BEGIN
        Finished := FALSE;
        REPEAT
          Finished := ESTextLineTmp."Compare Status" = ESTextLineTmp."Compare Status"::Equal;
          IF NOT Finished THEN
            Finished := ESTextLineTmp.NEXT = 0;
        UNTIL Finished;

        IF ESTextLineTmp."Compare Status" <> ESTextLineTmp."Compare Status"::Equal THEN
          ERROR(Text007);
      END;

      Finished := FALSE;
      REPEAT
        Finished := ESTextLineTmp."Compare Status" <> ESTextLineTmp."Compare Status"::Equal;
        IF NOT Finished THEN
          Finished := ESTextLineTmp.NEXT = 0;
      UNTIL Finished;

      IF ESTextLineTmp."Compare Status" = ESTextLineTmp."Compare Status"::Equal THEN
        ERROR(Text007);

      CurrentESTextLine := ESTextLineTmp;
    END;

    PROCEDURE PreviousChange@1240520013(VAR ESTextLineTmp@1240520010 : Record 14123520;VAR CurrentESTextLine@1240520011 : Record 14123520);
    VAR
      Finished@1240520008 : Boolean;
    BEGIN
      ESTextLineTmp.TESTFIELD("Compare Status");

      ESTextLineTmp.COPY(CurrentESTextLine);

      IF ESTextLineTmp."Compare Status" <> ESTextLineTmp."Compare Status"::Equal THEN BEGIN
        Finished := FALSE;
        REPEAT
          Finished := ESTextLineTmp."Compare Status" = ESTextLineTmp."Compare Status"::Equal;
          IF NOT Finished THEN
            Finished := ESTextLineTmp.NEXT(-1) = 0;
        UNTIL Finished;

        IF ESTextLineTmp."Compare Status" <> ESTextLineTmp."Compare Status"::Equal THEN
          ERROR(Text007);
      END;

      Finished := FALSE;
      REPEAT
        Finished := ESTextLineTmp."Compare Status" <> ESTextLineTmp."Compare Status"::Equal;
        IF NOT Finished THEN
          Finished := ESTextLineTmp.NEXT(-1) = 0;
      UNTIL Finished;

      IF ESTextLineTmp."Compare Status" = ESTextLineTmp."Compare Status"::Equal THEN
        ERROR(Text007);

      Finished := FALSE;
      REPEAT
        Finished := ESTextLineTmp."Compare Status" = ESTextLineTmp."Compare Status"::Equal;
        IF NOT Finished THEN
          Finished := ESTextLineTmp.NEXT(-1) = 0;
      UNTIL Finished;

      IF ESTextLineTmp."Compare Status" = ESTextLineTmp."Compare Status"::Equal THEN
        ESTextLineTmp.NEXT;

      CurrentESTextLine := ESTextLineTmp;
    END;

    BEGIN
    END.
  }
}

