OBJECT Codeunit 51895 Page9060EventSubscriber
{
  OBJECT-PROPERTIES
  {
    Date=03/15/21;
    Time=[ 8:16:34 AM];
    Modified=Yes;
    Version List=TPZ000.00.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE Pg9060_TileLookup@1000000001(LookupCode@1000000000 : Code[20]);
    VAR
      "---TPZ_VAR----"@1000000004 : Integer;
      SalesHeader@1000000003 : Record 36;
      EDILog@1000000002 : Record 14050302;
      EDIReceiveDocumentHdr@1000000001 : Record 14002358;
      TTSOrderHeader@1000000005 : Record 50060;
    BEGIN
      //TPZ1980>>>
      CASE LookupCode OF
        'LOOKUP01' : BEGIN //EDI Received Error
        EDIReceiveDocumentHdr.RESET;
        EDIReceiveDocumentHdr.SETRANGE("Data Error",TRUE);
        EDIReceiveDocumentHdr.SETFILTER("Trade Partner No.",'<>%1','');
        EDIReceiveDocumentHdr.SETRANGE("Date Received",0D,WORKDATE);
        PAGE.RUNMODAL(14002368,EDIReceiveDocumentHdr);
        END;
        'LOOKUP02' : BEGIN //EDI Log Error
        EDILog.RESET;
        EDILog.SETRANGE(Error,TRUE);
        PAGE.RUNMODAL(14050336,EDILog);
        END;
        'LOOKUP03' : BEGIN //EDI files received
        EDIReceiveDocumentHdr.RESET;
        EDIReceiveDocumentHdr.SETFILTER("Trade Partner No.",'<>%1','');
        EDIReceiveDocumentHdr.SETRANGE("Date Received",WORKDATE);
        PAGE.RUNMODAL(14002368,EDIReceiveDocumentHdr);
        END;
        'LOOKUP04' : BEGIN //EDI
        SalesHeader.RESET;
        SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::Order);
        SalesHeader.SETRANGE("EDI Order",TRUE);
        SalesHeader.SETRANGE("Pricing Discrepancy",TRUE);
        SalesHeader.SETRANGE("Posting Date",0D,WORKDATE);
        SalesHeader.SETRANGE("Date Filter",0D,WORKDATE);
        PAGE.RUNMODAL(9305,SalesHeader);
        END;
        'LOOKUP05' : BEGIN //EDI files received
        TTSOrderHeader.RESET;
        TTSOrderHeader.SETRANGE("Date Received",WORKDATE);
        PAGE.RUNMODAL(50085,TTSOrderHeader);
        END;
        'LOOKUP06' : BEGIN //EDI Received Error
        TTSOrderHeader.RESET;
        TTSOrderHeader.SETRANGE("Date Received",0D,WORKDATE);
        TTSOrderHeader.SETRANGE("Order Status",TTSOrderHeader."Order Status"::Error);
        PAGE.RUNMODAL(50085,TTSOrderHeader);
        END;

      END;
      //TPZ1980<<<
    END;

    [EventSubscriber(Codeunit,51985,Pg9060_OnAfterGetRecord)]
    PROCEDURE Pg9060_OnAfterGetRecord@1000000000(VAR Sender@1000000001 : Codeunit 51985;VAR RecDocWithErrors@1000000002 : Integer;VAR FileProcessingErrors@1000000003 : Integer;VAR ReceiveDocToday@1000000004 : Integer;VAR SalesPriceDiscr@1000000005 : Integer);
    VAR
      EDIStatisticsCue@1000000000 : TEMPORARY Record 14002380;
    BEGIN
      //TPZ1980>>>
      WITH EDIStatisticsCue DO
       BEGIN
         RESET;
         IF NOT GET THEN BEGIN
           INIT;
           INSERT;
         END;

        SETRANGE("Date Filter",0D,WORKDATE);
        SETFILTER("Date Filter2",'>=%1',WORKDATE);
        SETRANGE("Date Filter3",TODAY);
        SETFILTER("Trade Partner Filter",'<>%1','');
        CALCFIELDS(
        "Rec. Doc. With Errors",
        "File Processing Errors",
        "Receive Documents - Today",
        "Sales Price Discr.");

        RecDocWithErrors := "Rec. Doc. With Errors";
        FileProcessingErrors := "File Processing Errors";
        ReceiveDocToday := "Receive Documents - Today";
        SalesPriceDiscr := "Sales Price Discr.";
      END;
      //TPZ1980<<<
    END;

    [EventSubscriber(Codeunit,51985,Pg9060_OnAfterGetRecord2)]
    PROCEDURE Pg9060_OnAfterGetRecord2@1000000002(VAR Sender@1000000000 : Codeunit 51985;VAR EDIFileProcessingErrors@1000000001 : Integer;VAR EDIReceiveDocToday@1000000002 : Integer);
    VAR
      TTSOrderHeader@1000000003 : Record 50060;
    BEGIN
      TTSOrderHeader.RESET;
      TTSOrderHeader.SETRANGE("Date Received",WORKDATE);
      EDIReceiveDocToday := TTSOrderHeader.COUNT;

      TTSOrderHeader.RESET;
      TTSOrderHeader.SETRANGE("Date Received",0D,WORKDATE);
      TTSOrderHeader.SETRANGE("Order Status",TTSOrderHeader."Order Status"::Error);
      EDIFileProcessingErrors := TTSOrderHeader.COUNT;
    END;

    BEGIN
    END.
  }
}

