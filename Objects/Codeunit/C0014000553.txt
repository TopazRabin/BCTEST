OBJECT Codeunit 14000553 Inventory Management
{
  OBJECT-PROPERTIES
  {
    Date=03/01/20;
    Time=12:00:00 PM;
    Version List=UBP3.02;
  }
  PROPERTIES
  {
    Permissions=TableData 32=rimd,
                TableData 120=rimd,
                TableData 14000561=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'ENU=Create Location Inventory Periods for Location %1?';
      UBP@1240030000 : Codeunit 14000564;

    PROCEDURE CreateLocationInventoryPeriods@23(InvPeriod@14000500 : Record 14000552;Closed@14000501 : Boolean;LocationCode@14000502 : Code[10]);
    VAR
      LocInvPeriod@1000000001 : Record 14000553;
      Location@1000000000 : Record 14;
    BEGIN
      Location.RESET;
      Location.SETRANGE("Use As In-Transit",FALSE);
      IF Location.FIND('-') THEN
        REPEAT
          IF NOT LocInvPeriod.GET(InvPeriod."Starting Date",Location.Code) THEN BEGIN
            LocInvPeriod.INIT;
            LocInvPeriod."Starting Date" := InvPeriod."Starting Date";
            LocInvPeriod."Ending Date" := InvPeriod."Ending Date";
            LocInvPeriod."Location Code" := Location.Code;
            LocInvPeriod."Period End Closed" := Closed;
            LocInvPeriod.INSERT;
          END ELSE BEGIN
            LocInvPeriod."Period End Closed" := Closed;
            LocInvPeriod.MODIFY;
          END;
        UNTIL Location.NEXT = 0
    END;

    PROCEDURE CreateNewLocInvPeriods@1240030000(Location@1240030000 : Record 14);
    VAR
      InventoryPeriod@1240030001 : Record 14000552;
      LocInvPeriod@1240030002 : Record 14000553;
    BEGIN
      IF NOT CONFIRM(Text001,TRUE,Location.Code) THEN
        EXIT;
      InventoryPeriod.RESET;
      InventoryPeriod.SETFILTER(Type,'<>%1',InventoryPeriod.Type::Calculate);
      IF InventoryPeriod.FIND('-') THEN
        REPEAT
          LocInvPeriod.INIT;
          LocInvPeriod."Starting Date" := InventoryPeriod."Starting Date";
          LocInvPeriod."Location Code" := Location.Code;
          LocInvPeriod."Ending Date" := InventoryPeriod."Ending Date";
          IF LocInvPeriod.INSERT THEN;
        UNTIL InventoryPeriod.NEXT = 0;
    END;

    PROCEDURE CreateLogEntry@1240030001(CurrLocation@1240030003 : Code[10];LogDescription@1240030000 : Text[250];VAR UBPLogEntryNo@1240030002 : Integer);
    VAR
      UBPLog@1240030001 : Record 14000574;
    BEGIN
      UBPLog.RESET;
      UBPLog.LOCKTABLE;
      IF UBPLog.FINDLAST THEN
        UBPLogEntryNo := UBPLog."Entry No." + 1
      ELSE
        UBPLogEntryNo := 1;

      UBPLog.INIT;
      UBPLog."Entry No." := UBPLogEntryNo;
      UBPLog."Log Date" := TODAY;
      UBPLog."Start Time" := TIME;
      UBPLog."Log Description" := LogDescription;
      UBPLog.Error := TRUE;
      UBPLog."Location Code" := CurrLocation;
      UBPLog.UserID := USERID;
      UBPLog.INSERT(TRUE);

      COMMIT;
    END;

    PROCEDURE CloseLogEntry@1240030002(UBPLogEntryNo@1240030000 : Integer;UBPLogDescr2@1240020000 : Text[250]);
    VAR
      UBPLog@1240030001 : Record 14000574;
    BEGIN
      UBPLog.GET(UBPLogEntryNo);
      UBPLog.Error := FALSE;
      UBPLog."End Time" := TIME;
      UBPLog."Log Close Description" := UBPLogDescr2;
      UBPLog.MODIFY(TRUE);
      COMMIT;
    END;

    BEGIN
    END.
  }
}

