OBJECT Codeunit 51999 Packing Slip Email Handling
{
  OBJECT-PROPERTIES
  {
    Date=05/28/21;
    Time=[ 6:22:20 AM];
    Modified=Yes;
    Version List=TPZ000.00.00,3185,001;
  }
  PROPERTIES
  {
    TableNo=472;
    OnRun=BEGIN

            SendPackingSlipEmail("Parameter String");
          END;

  }
  CODE
  {
    VAR
      ReceiverTo@1000000002 : Text;
      ReceiverCC@1000000001 : Text;
      ReceiverBCC@1000000000 : Text;

    LOCAL PROCEDURE SendPackingSlipEmail@1000000000(InvoiceNo@1000000011 : Code[20]);
    VAR
      SMTPSetup@1000000002 : Record 409;
      MailVar@1000000001 : Codeunit 400;
      Text0001@1000000007 : TextConst 'ENU=Packing List';
      Text0003@1000000005 : TextConst 'ENU=please find the PDF file Attached';
      Excel@1000000004 : TextConst 'ENU=.xlsx';
      PDF@1000000003 : TextConst 'ENU=.pdf';
      MessageText@1000000008 : Text;
      PostedPackingList@1000000006 : Report 51101;
      EMailSetup@1000000009 : Record 14000905;
      SalesInvoiceHeader@1000000010 : Record 112;
    BEGIN
      EMailSetup.GET;
      EMailSetup.TESTFIELD("E-Mail Buffer Directory");
      IF SalesInvoiceHeader.GET(InvoiceNo) THEN BEGIN
        PostedPackingList.Setinvoice(InvoiceNo);
        PostedPackingList.SAVEASPDF(EMailSetup."E-Mail Buffer Directory"+'\'+PostedPackingList.OBJECTID(TRUE)+SalesInvoiceHeader."No."+PDF);
        GetEmailAddress(SalesInvoiceHeader);
        IF (ReceiverTo <>'') OR (ReceiverCC <>'') OR (ReceiverBCC<>'') THEN BEGIN
          SMTPSetup.GET('');
          MailVar.CreateMessage(Text0001,SMTPSetup."From Address",ReceiverTo,Text0001+' '+SalesInvoiceHeader."No.",'',TRUE);
          IF ReceiverCC<>'' THEN
            MailVar.AddCC(ReceiverCC);
          IF ReceiverBCC<>'' THEN
            MailVar.AddBCC(ReceiverBCC);
          MailVar.AddAttachment(EMailSetup."E-Mail Buffer Directory"+'\'+PostedPackingList.OBJECTID(TRUE)+SalesInvoiceHeader."No."+PDF,
                                PostedPackingList.OBJECTID(TRUE)+SalesInvoiceHeader."No."+PDF);
          MessageText := 'Please find the attached Packing List for Invoice '+SalesInvoiceHeader."No."+'.';
          MailVar.AppendBody(MessageText);
          MailVar.Send;
        END;

        ERASE(EMailSetup."E-Mail Buffer Directory"+'\'+PostedPackingList.OBJECTID(TRUE)+SalesInvoiceHeader."No."+PDF);
      END;
    END;

    LOCAL PROCEDURE GetEmailAddress@1000000002(SalesInvoiceHeader@1000000000 : Record 112);
    VAR
      EMailListEntry@1000000001 : Record 14000908;
    BEGIN

      EMailListEntry.RESET;
      EMailListEntry.SETRANGE("Table ID",DATABASE::"Ship-to Address");
      EMailListEntry.SETRANGE(Code,SalesInvoiceHeader."Sell-to Customer No.");
      EMailListEntry.SETRANGE("Code 2",SalesInvoiceHeader."Ship-to Code");
      EMailListEntry.SETFILTER("Packing List E-Mail",'<>%1',EMailListEntry."Packing List E-Mail"::" ");
      IF EMailListEntry.FINDSET THEN BEGIN
        REPEAT
          CASE EMailListEntry."Packing List E-Mail" OF
            EMailListEntry."Packing List E-Mail"::"To":
              CreateRecipientList(EMailListEntry."E-Mail",'TO');
            EMailListEntry."Packing List E-Mail"::CC:
              CreateRecipientList(EMailListEntry."E-Mail",'CC');
            EMailListEntry."Packing List E-Mail"::BCC:
              CreateRecipientList(EMailListEntry."E-Mail",'BCC');
          END;
        UNTIL EMailListEntry.NEXT = 0;
      END;

      {
      END ELSE BEGIN
        EMailListEntry.RESET;
        EMailListEntry.SETRANGE("Table ID",DATABASE::Customer);
        EMailListEntry.SETRANGE(Code,SalesInvoiceHeader."Sell-to Customer No.");
        EMailListEntry.SETFILTER("Packing List E-Mail",'<>%1',EMailListEntry."Packing List E-Mail"::" ");
        IF EMailListEntry.FINDSET THEN
          REPEAT
            CASE EMailListEntry."Packing List E-Mail" OF
              EMailListEntry."Packing List E-Mail"::"To":
                CreateRecipientList(EMailListEntry."E-Mail",'TO');
              EMailListEntry."Packing List E-Mail"::CC:
                CreateRecipientList(EMailListEntry."E-Mail",'CC');
              EMailListEntry."Packing List E-Mail"::BCC:
                CreateRecipientList(EMailListEntry."E-Mail",'BCC');
            END;
          UNTIL EMailListEntry.NEXT = 0;
      END;
      }
    END;

    LOCAL PROCEDURE CreateRecipientList@1240020000(EmailAddressText@1240020000 : Text[250];Type@1240020001 : Text[10]);
    BEGIN
      CASE Type OF
        'TO':
          IF ReceiverTo = '' THEN
            ReceiverTo := EmailAddressText
          ELSE
            ReceiverTo := ReceiverTo + ';' + EmailAddressText;
        'CC':
          IF ReceiverCC = '' THEN
            ReceiverCC := EmailAddressText
          ELSE
            ReceiverCC := ReceiverCC + ';' + EmailAddressText;
        'BCC':
          IF ReceiverBCC = '' THEN
            ReceiverBCC := EmailAddressText
          ELSE
            ReceiverBCC := ReceiverBCC + ';' + EmailAddressText;
      END;
    END;

    BEGIN
    {

      001  TPZ3185 UTK 05282021 Created New Codeunit for Packing List auto Email.
    }
    END.
  }
}

