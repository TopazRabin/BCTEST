OBJECT Codeunit 23044542 IWX Application Mgmt.
{
  OBJECT-PROPERTIES
  {
    Date=10/08/20;
    Time=11:17:28 AM;
    Version List=IWX2.4.7684.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      cuLPCommon@1000000002 : Codeunit 23044541;
      optSourceDocument@1000000000 : ' ,Purchase Order,Sales Order,Inbound Transfer,Outbound Transfer,Prod. Order,Put-away,Pick,Movement,Invt. Put-away,Invt. Pick,Receipt,Shipment,Reclass';

    PROCEDURE GetDatabaseTableTriggerSetup@1(piTableNo@1000 : Integer;VAR pbInsert@1001 : Boolean;VAR pbModify@1002 : Boolean;VAR pbDelete@1003 : Boolean;VAR pbRename@1004 : Boolean);
    BEGIN
      IF COMPANYNAME = '' THEN
        EXIT;

      CASE piTableNo OF
        DATABASE::"Item Journal Line",
        DATABASE::"Transfer Line",
        DATABASE::"Warehouse Activity Line",
        DATABASE::"Sales Line",
        DATABASE::"Warehouse Shipment Line",
        DATABASE::"Purchase Line",
        DATABASE::"Warehouse Receipt Line",
        DATABASE::"Warehouse Journal Line":
          BEGIN
            pbModify := TRUE;
            pbDelete := TRUE;
          END;

        DATABASE::"Transfer Header",
        DATABASE::"Warehouse Activity Header",
        DATABASE::"Sales Header",
        DATABASE::"Warehouse Shipment Header",
        DATABASE::"Purchase Header",
        DATABASE::"Warehouse Receipt Header":
          BEGIN
            pbDelete := TRUE;
          END;
      END;
    END;

    PROCEDURE onDatabaseModify@1000000000(prrRecRef@1000000000 : RecordRef);
    VAR
      lrrxRecRef@1000000001 : RecordRef;
    BEGIN
      IF NOT (prrRecRef.NUMBER IN[DATABASE::"Item Journal Line",DATABASE::"Warehouse Activity Line",DATABASE::"Sales Line",DATABASE::"Warehouse Shipment Line",DATABASE::"Purchase Line",DATABASE::"Warehouse Receipt Line"]) THEN
        EXIT;

      //DATABASE::"Transfer Line",

      IF  NOT lrrxRecRef.GET(prrRecRef.RECORDID) THEN
        EXIT;



      CASE prrRecRef.NUMBER OF
        DATABASE::"Item Journal Line": checkItemJournalLineModify(lrrxRecRef,prrRecRef);
        //DATABASE::"Transfer Line": checkTransferLineModify(lrrxRecRef,prrRecRef); // @caleb
        DATABASE::"Warehouse Activity Line": checkWhseActLineModify(lrrxRecRef,prrRecRef);
        DATABASE::"Sales Line": checkSalesLineModify(lrrxRecRef,prrRecRef);
        DATABASE::"Warehouse Shipment Line": checkWhseShipLineModify(lrrxRecRef,prrRecRef);
        DATABASE::"Purchase Line": checkPurchLineModify(lrrxRecRef,prrRecRef);
        DATABASE::"Warehouse Receipt Line": checkWhseRcptLineModify(lrrxRecRef,prrRecRef);
      END;
    END;

    PROCEDURE onDatabaseDelete@1000000001(prrRecRef@1000000001 : RecordRef);
    BEGIN
      CASE prrRecRef.NUMBER OF
        DATABASE::"Item Journal Line": checkItemJournalLineDelete(prrRecRef);
      //  DATABASE::"Transfer Header": checkTransferHeaderDelete(prrRecRef);
      //  DATABASE::"Transfer Line": checkTransferLineDelete(prrRecRef);
        DATABASE::"Warehouse Activity Header": checkWhseActHeaderDelete(prrRecRef);
        DATABASE::"Warehouse Activity Line": checkWhseActLineDelete(prrRecRef);
      //  DATABASE::"Sales Header": checkSalesHeaderDelete(prrRecRef);
      //  DATABASE::"Sales Line": checkSalesLineDelete(prrRecRef);
      //  DATABASE::"Warehouse Shipment Header": checkWhseShipHeaderDelete(prrRecRef);
      //  DATABASE::"Warehouse Shipment Line": checkWhseShipLineDelete(prrRecRef);
        DATABASE::"Purchase Header": checkPurchHeaderDelete(prrRecRef);
        DATABASE::"Purchase Line": checkPurchLineDelete(prrRecRef);
        DATABASE::"Warehouse Receipt Header": checkWhseRcptHeaderDelete(prrRecRef);
        DATABASE::"Warehouse Receipt Line": checkWhseRcptLineDelete(prrRecRef);
        DATABASE::"Warehouse Journal Line": checkWhseJournalLineDelete(prrRecRef);
      END;
    END;

    PROCEDURE checkWhseActHeaderDelete@1000000022(prrRecRef@1000000000 : RecordRef);
    VAR
      lrecWhseActHeader@1000000001 : Record 5766;
    BEGIN
      // 2013+::begin
      prrRecRef.SETTABLE(lrecWhseActHeader);
      // 2013+::end
      {{// 2009::begin
      getWhseActHeaderFromRecRef(prrRecRef, lrecWhseActHeader);
      }}// 2009::end

      CASE lrecWhseActHeader.Type OF
        lrecWhseActHeader.Type::Pick: cuLPCommon.checkDelete(optSourceDocument::Pick,lrecWhseActHeader."No.",0);
        lrecWhseActHeader.Type::Movement: cuLPCommon.checkDelete(optSourceDocument::Movement,lrecWhseActHeader."No.",0);
        lrecWhseActHeader.Type::"Put-away": cuLPCommon.checkDelete(optSourceDocument::"Put-away",lrecWhseActHeader."No.",0);
        lrecWhseActHeader.Type::"Invt. Pick": cuLPCommon.checkDelete(optSourceDocument::"Invt. Pick",lrecWhseActHeader."No.",0);
        lrecWhseActHeader.Type::"Invt. Put-away": cuLPCommon.checkDelete(optSourceDocument::"Invt. Put-away",lrecWhseActHeader."No.",0);
      END;
    END;

    PROCEDURE checkSalesHeaderDelete@1000000006(prrRecRef@1000000000 : RecordRef);
    VAR
      lrecSalesHeader@1000000001 : Record 36;
    BEGIN
      // 2013+::begin
      prrRecRef.SETTABLE(lrecSalesHeader);
      // 2013+::end
      {{// 2009::begin
      getSalesHeaderFromRecRef(prrRecRef, lrecSalesHeader);
      }}// 2009::end

      cuLPCommon.checkDelete(optSourceDocument::"Sales Order",lrecSalesHeader."No.",0);
    END;

    PROCEDURE checkPurchHeaderDelete@1000000012(prrRecRef@1000000000 : RecordRef);
    VAR
      lrecPurchHeader@1000000001 : Record 38;
    BEGIN
      // 2013+::begin
      prrRecRef.SETTABLE(lrecPurchHeader);
      // 2013+::end
      {{// 2009::begin
      getPurchHeaderFromRecRef(prrRecRef, lrecPurchHeader);
      }}// 2009::end

      cuLPCommon.checkDelete(optSourceDocument::"Purchase Order",lrecPurchHeader."No.",0);
    END;

    PROCEDURE checkWhseActLineDelete@1000000023(prrRecRef@1000000000 : RecordRef);
    VAR
      lrecWhseActLine@1000000001 : Record 5767;
    BEGIN
      // 2013+::begin
      prrRecRef.SETTABLE(lrecWhseActLine);
      // 2013+::end
      {{// 2009::begin
      getWhseActLineFromRecRef(prrRecRef, lrecWhseActLine);
      }}// 2009::end

      CASE lrecWhseActLine."Activity Type" OF
        lrecWhseActLine."Activity Type"::Pick: cuLPCommon.checkDelete(optSourceDocument::Pick,lrecWhseActLine."No.",lrecWhseActLine."Line No.");
        lrecWhseActLine."Activity Type"::Movement: cuLPCommon.checkDelete(optSourceDocument::Movement,lrecWhseActLine."No.",lrecWhseActLine."Line No.");
        lrecWhseActLine."Activity Type"::"Put-away": cuLPCommon.checkDelete(optSourceDocument::"Put-away",lrecWhseActLine."No.",lrecWhseActLine."Line No.");
        lrecWhseActLine."Activity Type"::"Invt. Pick": cuLPCommon.checkDelete(optSourceDocument::"Invt. Pick",lrecWhseActLine."No.",lrecWhseActLine."Line No.");
        lrecWhseActLine."Activity Type"::"Invt. Put-away": cuLPCommon.checkDelete(optSourceDocument::"Invt. Put-away",lrecWhseActLine."No.",lrecWhseActLine."Line No.");
      END;
    END;

    PROCEDURE checkWhseActLineModify@1000000024(prrxRecRef@1000000002 : RecordRef;prrRecRef@1000000000 : RecordRef);
    VAR
      lrecWhseActLine@1000000001 : Record 5767;
      lrecPrevWhseActLine@1000000003 : Record 5767;
    BEGIN
      // 2013+::begin
      prrRecRef.SETTABLE(lrecWhseActLine);
      prrxRecRef.SETTABLE(lrecPrevWhseActLine);
      // 2013+::end
      {{// 2009::begin
      getWhseActLineFromRecRef(prrxRecRef, lrecPrevWhseActLine);
      getWhseActLineFromRecRef(prrRecRef, lrecWhseActLine);
      }}// 2009::end

      IF lrecWhseActLine."Qty. to Handle" < lrecPrevWhseActLine."Qty. to Handle" THEN
        cuLPCommon.validateWhseActivityQtyChange(lrecWhseActLine,'');
    END;

    PROCEDURE checkSalesLineDelete@1000000010(prrRecRef@1000000000 : RecordRef);
    VAR
      lrecSalesLine@1000000001 : Record 37;
    BEGIN
      // 2013+::begin
      prrRecRef.SETTABLE(lrecSalesLine);
      // 2013+::end
      {{// 2009::begin
      getSalesLineFromRecRef(prrRecRef, lrecSalesLine);
      }}// 2009::end

      cuLPCommon.checkDelete(optSourceDocument::"Sales Order",lrecSalesLine."Document No.",lrecSalesLine."Line No.");
    END;

    PROCEDURE checkSalesLineModify@1000000014(prrxRecRef@1000000002 : RecordRef;prrRecRef@1000000000 : RecordRef);
    VAR
      lrecSalesLine@1000000001 : Record 37;
      lrecPrevSalesLine@1000000003 : Record 37;
      lrecLocation@1000000004 : Record 14;
    BEGIN
      // 2013+::begin
      prrRecRef.SETTABLE(lrecSalesLine);
      prrxRecRef.SETTABLE(lrecPrevSalesLine);
      // 2013+::end
      {{// 2009::begin
      getSalesLineFromRecRef(prrxRecRef, lrecPrevSalesLine);
      getSalesLineFromRecRef(prrRecRef, lrecSalesLine);
      }}// 2009::end


      IF NOT lrecLocation.GET(lrecSalesLine."Location Code") THEN
        EXIT;

      IF NOT lrecLocation."Require Pick" THEN BEGIN
        IF lrecSalesLine."Qty. to Ship" < lrecPrevSalesLine."Qty. to Ship" THEN
          cuLPCommon.validateSalesLineQtyChange(lrecSalesLine,'');
      END;

      IF lrecSalesLine."Location Code" <> lrecPrevSalesLine."Location Code" THEN
        cuLPCommon.checkSourceChangeLocation(optSourceDocument::"Sales Order",lrecSalesLine."Document No.",lrecSalesLine."Line No.",lrecSalesLine."Location Code");

      IF lrecSalesLine."Bin Code" <> lrecPrevSalesLine."Bin Code" THEN
        cuLPCommon.checkSourceChangeBin(optSourceDocument::"Sales Order",lrecSalesLine."Document No.",lrecSalesLine."Line No.",lrecSalesLine."Bin Code");
    END;

    PROCEDURE checkWhseShipHeaderDelete@1000000017(prrRecRef@1000000000 : RecordRef);
    VAR
      lrecWhseShipHeader@1000000001 : Record 7320;
    BEGIN
      // 2013+::begin
      prrRecRef.SETTABLE(lrecWhseShipHeader);
      // 2013+::end
      {{// 2009::begin
      getWhseShipHeaderFromRecRef(prrRecRef, lrecWhseShipHeader);
      }}// 2009::end

      cuLPCommon.checkDelete(optSourceDocument::Shipment,lrecWhseShipHeader."No.",0);
    END;

    PROCEDURE checkWhseShipLineDelete@1000000016(prrRecRef@1000000000 : RecordRef);
    VAR
      lrecWhseShipLine@1000000001 : Record 7321;
    BEGIN
      // 2013+::begin
      prrRecRef.SETTABLE(lrecWhseShipLine);
      // 2013+::end
      {{// 2009::begin
      getWhseShipLineFromRecRef(prrRecRef, lrecWhseShipLine);
      }}// 2009::end

      cuLPCommon.checkDelete(optSourceDocument::Shipment,lrecWhseShipLine."No.",lrecWhseShipLine."Line No.");
    END;

    PROCEDURE checkWhseShipLineModify@1000000018(prrxRecRef@1000000002 : RecordRef;prrRecRef@1000000000 : RecordRef);
    VAR
      lrecWhseShipLine@1000000001 : Record 7321;
      lrecPrevWhseShipLine@1000000003 : Record 7321;
    BEGIN
      // 2013+::begin
      prrRecRef.SETTABLE(lrecWhseShipLine);
      prrxRecRef.SETTABLE(lrecPrevWhseShipLine);
      // 2013+::end
      {{// 2009::begin
      getWhseShipLineFromRecRef(prrxRecRef, lrecPrevWhseShipLine);
      getWhseShipLineFromRecRef(prrRecRef, lrecWhseShipLine);
      }}// 2009::end

      IF lrecWhseShipLine."Qty. to Ship" < lrecPrevWhseShipLine."Qty. to Ship" THEN
        cuLPCommon.validateWhseShipmentQtyChange(lrecWhseShipLine,'');
    END;

    PROCEDURE checkPurchLineDelete@1000000004(prrRecRef@1000000000 : RecordRef);
    VAR
      lrecPurchLine@1000000001 : Record 39;
    BEGIN
      // 2013+::begin
      prrRecRef.SETTABLE(lrecPurchLine);
      // 2013+::end
      {{// 2009::begin
      getPurchLineFromRecRef(prrRecRef,lrecPurchLine);
      }}// 2009::end

      cuLPCommon.checkDelete(optSourceDocument::"Purchase Order",lrecPurchLine."Document No.",lrecPurchLine."Line No.");
    END;

    PROCEDURE checkPurchLineModify@1000000003(prrxRecRef@1000000002 : RecordRef;prrRecRef@1000000000 : RecordRef);
    VAR
      lrecPurchLine@1000000001 : Record 39;
      lrecPrevPurchLine@1000000003 : Record 39;
    BEGIN
      // 2013+::begin
      prrRecRef.SETTABLE(lrecPurchLine);
      prrxRecRef.SETTABLE(lrecPrevPurchLine);
      // 2013+::end
      {{// 2009::begin
      getPurchLineFromRecRef(prrxRecRef, lrecPrevPurchLine);
      getPurchLineFromRecRef(prrRecRef,lrecPurchLine);
      }}// 2009::end

      IF lrecPurchLine."Qty. to Receive" < lrecPrevPurchLine."Qty. to Receive" THEN
        cuLPCommon.validatePurchaseLineQtyChange(lrecPurchLine,'');
    END;

    PROCEDURE checkWhseRcptHeaderDelete@1000000008(prrRecRef@1000000000 : RecordRef);
    VAR
      lrecWhseRcptHeader@1000000001 : Record 7316;
    BEGIN
      // 2013+::begin
      prrRecRef.SETTABLE(lrecWhseRcptHeader);
      // 2013+::end
      {{// 2009::begin
      getWhseRcptHeaderFromRecRef(prrRecRef,lrecWhseRcptHeader);
      }}// 2009::end

      cuLPCommon.checkDelete(optSourceDocument::Receipt,lrecWhseRcptHeader."No.",0);
    END;

    PROCEDURE checkWhseRcptLineDelete@1000000002(prrRecRef@1000000000 : RecordRef);
    VAR
      lrecWhseRcptLine@1000000001 : Record 7317;
    BEGIN
      // 2013+::begin
      prrRecRef.SETTABLE(lrecWhseRcptLine);
      // 2013+::end
      {{// 2009::begin
      getWhseRcptLineFromRecRef(prrRecRef,lrecWhseRcptLine);
      }}// 2009::end

      cuLPCommon.checkDelete(optSourceDocument::Receipt,lrecWhseRcptLine."No.",lrecWhseRcptLine."Line No.");
    END;

    PROCEDURE checkWhseRcptLineModify@1000000009(prrxRecRef@1000000003 : RecordRef;prrRecRef@1000000002 : RecordRef);
    VAR
      lrecWhseRcptLine@1000000001 : Record 7317;
      lrecPrevWhseRcptLine@1000000000 : Record 7317;
    BEGIN
      // 2013+::begin
      prrRecRef.SETTABLE(lrecWhseRcptLine);
      prrxRecRef.SETTABLE(lrecPrevWhseRcptLine);
      // 2013+::end
      {{// 2009::begin
      getWhseRcptLineFromRecRef(prrxRecRef, lrecPrevWhseRcptLine);
      getWhseRcptLineFromRecRef(prrRecRef,lrecWhseRcptLine);
      }}// 2009::end

      IF lrecWhseRcptLine."Qty. to Receive" < lrecPrevWhseRcptLine."Qty. to Receive" THEN
        cuLPCommon.validateWhseReceiptQtyChange(lrecWhseRcptLine,'');
    END;

    PROCEDURE checkTransferLineDelete@1000000029(prrRecRef@1000000000 : RecordRef);
    VAR
      lrecTransferLine@1000000001 : Record 5741;
    BEGIN
      // 2013+::begin
      prrRecRef.SETTABLE(lrecTransferLine);
      // 2013+::end
      {{// 2009::begin
      getTransferLineFromRecRef(prrRecRef,lrecTransferLine);
      }}// 2009::end

      cuLPCommon.checkDelete(optSourceDocument::"Outbound Transfer",lrecTransferLine."Document No.",lrecTransferLine."Line No.");
    END;

    PROCEDURE checkTransferLineModify@1000000030(prrxRecRef@1000000002 : RecordRef;prrRecRef@1000000000 : RecordRef);
    VAR
      lrecTransLine@1000000001 : Record 5741;
      lrecPrevTransLine@1000000003 : Record 5741;
    BEGIN
      // 2013+::begin
      prrRecRef.SETTABLE(lrecTransLine);
      prrxRecRef.SETTABLE(lrecPrevTransLine);
      // 2013+::end
      {{// 2009::begin
      getTransferLineFromRecRef(prrxRecRef,lrecPrevTransLine);
      getTransferLineFromRecRef(prrRecRef,lrecTransLine);
      }}// 2009::end

      IF (lrecTransLine."Qty. to Receive" < lrecPrevTransLine."Qty. to Receive") OR
        (lrecTransLine."Qty. to Ship" < lrecPrevTransLine."Qty. to Ship")
        THEN
        cuLPCommon.validateTransferLineQtyChange(lrecTransLine,'',TRUE);
    END;

    PROCEDURE checkTransferHeaderDelete@1000000031(prrRecRef@1000000000 : RecordRef);
    VAR
      lrecTransferHeader@1000000001 : Record 5740;
    BEGIN
      // 2013+::begin
      prrRecRef.SETTABLE(lrecTransferHeader);
      // 2013+::end
      {{// 2009::begin
      getTransferHeaderFromRecRef(prrRecRef,lrecTransferHeader);
      }}// 2009::end

      cuLPCommon.checkDelete(optSourceDocument::"Outbound Transfer",lrecTransferHeader."No.",0);
    END;

    PROCEDURE checkItemJournalLineDelete@1000000011(prrRecRef@1000000000 : RecordRef);
    VAR
      lrecItemJnlLine@1000000001 : Record 83;
    BEGIN
      // 2013+::begin
      prrRecRef.SETTABLE(lrecItemJnlLine);
      // 2013+::end
      {{// 2009::begin
      getItemJnlLineFromRecRef(prrRecRef,lrecItemJnlLine);
      }}// 2009::end

      IF( lrecItemJnlLine."Entry Type" = lrecItemJnlLine."Entry Type"::Transfer ) THEN BEGIN
        cuLPCommon.checkDelete(optSourceDocument::Reclass,lrecItemJnlLine."Journal Batch Name",lrecItemJnlLine."Line No.");
      END;
    END;

    PROCEDURE checkItemJournalLineModify@1000000007(prrxRecRef@1000000002 : RecordRef;prrRecRef@1000000000 : RecordRef);
    VAR
      lrecItemJnlLine@1000000001 : Record 83;
      lrecPrevItemJnlLine@1000000003 : Record 83;
    BEGIN
      // 2013+::begin
      prrRecRef.SETTABLE(lrecItemJnlLine);
      prrxRecRef.SETTABLE(lrecPrevItemJnlLine);
      // 2013+::end
      {{// 2009::begin
      getItemJnlLineFromRecRef(prrxRecRef,lrecPrevItemJnlLine);
      getItemJnlLineFromRecRef(prrRecRef,lrecItemJnlLine);
      }}// 2009::end

      IF( lrecItemJnlLine."Entry Type" = lrecItemJnlLine."Entry Type"::Transfer ) THEN BEGIN
        IF( lrecItemJnlLine."Location Code" <> lrecPrevItemJnlLine."Location Code" ) THEN
          cuLPCommon.checkSourceChangeLocation(optSourceDocument::Reclass,lrecItemJnlLine."Journal Batch Name",
              lrecItemJnlLine."Line No.",lrecItemJnlLine."Location Code");

        IF( lrecItemJnlLine."Bin Code" <> lrecPrevItemJnlLine."Bin Code" ) THEN
          cuLPCommon.checkSourceChangeBin(optSourceDocument::Reclass,lrecItemJnlLine."Journal Batch Name",
              lrecItemJnlLine."Line No.",lrecItemJnlLine."Bin Code");

        IF( lrecItemJnlLine.Quantity < lrecPrevItemJnlLine.Quantity ) THEN
          cuLPCommon.validateReclassLineQtyChange(lrecItemJnlLine);
      END;
    END;

    PROCEDURE checkWhseJournalLineDelete@1000000005(prrRecRef@1000000000 : RecordRef);
    VAR
      lrecWhseJournalLine@1000000001 : Record 7311;
    BEGIN
      // 2013+::begin
      prrRecRef.SETTABLE(lrecWhseJournalLine);
      // 2013+::end
      {{// 2009::begin
      getWhseJnlLineFromRecRef(prrRecRef,lrecWhseJournalLine);
      }}// 2009::end

      cuLPCommon.checkDeleteWhseReclassLine(optSourceDocument::Reclass,
                                                lrecWhseJournalLine."Journal Template Name",
                                                lrecWhseJournalLine."Journal Batch Name",
                                                lrecWhseJournalLine."Line No.");
    END;

    PROCEDURE getItemJnlLineFromRecRef@1000000019(prrRecRef@1000000001 : RecordRef;VAR precItemJnlLineOut@1000000000 : Record 83);
    VAR
      lfrField1@1000000004 : FieldRef;
      lfrField2@1000000003 : FieldRef;
      lfrField3@1000000002 : FieldRef;
    BEGIN
      //<FUNC>
      //  Description: Gets the item journal line from the recordref
      //  Called From: This codeunit
      //  Side Effect: None
      //</FUNC>

      lfrField1 := prrRecRef.FIELD(1);   // "Journal Template Name"
      lfrField2 := prrRecRef.FIELD(41);  // "Journal Batch Name"
      lfrField3 := prrRecRef.FIELD(2);   // "Line No."
      precItemJnlLineOut.GET(lfrField1.VALUE,lfrField2.VALUE,lfrField3.VALUE);
    END;

    PROCEDURE getWhseJnlLineFromRecRef@1000000057(prrRecRef@1000000001 : RecordRef;VAR precWhseJnlLineOut@1000000000 : Record 7311);
    VAR
      lfrField1@1000000004 : FieldRef;
      lfrField2@1000000003 : FieldRef;
      lfrField3@1000000002 : FieldRef;
      lfrField4@1000000005 : FieldRef;
    BEGIN
      //<FUNC>
      //  Description: Gets the warehouse journal line from the recordref
      //  Called From: This codeunit
      //  Side Effect: None
      //</FUNC>

      lfrField1 := prrRecRef.FIELD(1);   // "Journal Template Name"
      lfrField2 := prrRecRef.FIELD(2);   // "Journal Batch Name"
      lfrField3 := prrRecRef.FIELD(5);   // "Location Code"
      lfrField4 := prrRecRef.FIELD(3);   // "Line No."
      precWhseJnlLineOut.GET(lfrField1.VALUE,lfrField2.VALUE,lfrField3.VALUE,lfrField4.VALUE);
    END;

    PROCEDURE getTransferHeaderFromRecRef@1000000036(prrRecRef@1000000000 : RecordRef;VAR precTransHeaderOut@1000000001 : Record 5740);
    VAR
      lfrField1@1000000002 : FieldRef;
    BEGIN
      //<FUNC>
      //  Description: Gets the transfer header from the recordref
      //  Called From: This codeunit
      //  Side Effect: None
      //</FUNC>

      lfrField1 := prrRecRef.FIELD(1); // "No."
      precTransHeaderOut.GET(lfrField1.VALUE);
    END;

    PROCEDURE getTransferLineFromRecRef@1000000020(prrRecRef@1000000000 : RecordRef;VAR precTransLineOut@1000000001 : Record 5741);
    VAR
      lfrField1@1000000002 : FieldRef;
      lfrField2@1000000003 : FieldRef;
    BEGIN
      //<FUNC>
      //  Description: Gets the transfer line from the recordref
      //  Called From: This codeunit
      //  Side Effect: None
      //</FUNC>

      lfrField1 := prrRecRef.FIELD(1); // "Document No."
      lfrField2 := prrRecRef.FIELD(2);  // "Line No."
      precTransLineOut.GET(lfrField1.VALUE,lfrField2.VALUE);
    END;

    PROCEDURE getWhseActHeaderFromRecRef@1000000061(prrRecRef@1000000001 : RecordRef;VAR precWhseActHeaderOut@1000000000 : Record 5766);
    VAR
      lfrField1@1000000002 : FieldRef;
      lfrField2@1000000003 : FieldRef;
    BEGIN
      //<FUNC>
      //  Description: Gets the warehouse activity header from the recordref
      //  Called From: This codeunit
      //  Side Effect: None
      //</FUNC>

      lfrField1 := prrRecRef.FIELD(1); // "Type"
      lfrField2 := prrRecRef.FIELD(2);  // "No."
      precWhseActHeaderOut.GET(lfrField1.VALUE,lfrField2.VALUE);
    END;

    PROCEDURE getWhseActLineFromRecRef@1000000021(prrRecRef@1000000001 : RecordRef;VAR precWhseActLineOut@1000000000 : Record 5767);
    VAR
      lfrField1@1000000002 : FieldRef;
      lfrField2@1000000003 : FieldRef;
      lfrField3@1000000004 : FieldRef;
    BEGIN
      //<FUNC>
      //  Description: Gets the warehouse activity line from the recordref
      //  Called From: This codeunit
      //  Side Effect: None
      //</FUNC>

      lfrField1 := prrRecRef.FIELD(1); // "Activity Type"
      lfrField2 := prrRecRef.FIELD(2);  // "No."
      lfrField3 := prrRecRef.FIELD(3);  // "Line No."
      precWhseActLineOut.GET(lfrField1.VALUE,lfrField2.VALUE,lfrField3.VALUE);
    END;

    PROCEDURE getSalesHeaderFromRecRef@1000000015(prrRecRef@1000000001 : RecordRef;VAR precSalesHeaderOut@1000000000 : Record 36);
    VAR
      lfrField1@1000000003 : FieldRef;
      lfrField2@1000000002 : FieldRef;
    BEGIN
      //<FUNC>
      //  Description: Gets the sales header from the recordref
      //  Called From: This codeunit
      //  Side Effect: None
      //</FUNC>

      lfrField1 := prrRecRef.FIELD(1); // "Document Type"
      lfrField2 := prrRecRef.FIELD(3);  // "No."
      precSalesHeaderOut.GET(lfrField1.VALUE,lfrField2.VALUE);
    END;

    PROCEDURE getSalesLineFromRecRef@1000000025(prrRecRef@1000000004 : RecordRef;VAR precSalesLineOut@1000000003 : Record 37);
    VAR
      lfrField1@1000000002 : FieldRef;
      lfrField2@1000000001 : FieldRef;
      lfrField3@1000000000 : FieldRef;
    BEGIN
      //<FUNC>
      //  Description: Gets the sales line from the recordref
      //  Called From: This codeunit
      //  Side Effect: None
      //</FUNC>

      lfrField1 := prrRecRef.FIELD(1); // "Document Type"
      lfrField2 := prrRecRef.FIELD(3);  // "Document No."
      lfrField3 := prrRecRef.FIELD(4);  // "Line No."
      precSalesLineOut.GET(lfrField1.VALUE,lfrField2.VALUE,lfrField3.VALUE);
    END;

    PROCEDURE getPurchHeaderFromRecRef@1000000034(prrRecRef@1000000001 : RecordRef;VAR precPurchHeaderOut@1000000000 : Record 38);
    VAR
      lfrField1@1000000003 : FieldRef;
      lfrField2@1000000002 : FieldRef;
    BEGIN
      //<FUNC>
      //  Description: Gets the purchase header from the recordref
      //  Called From: This codeunit
      //  Side Effect: None
      //</FUNC>

      lfrField1 := prrRecRef.FIELD(1); // "Document Type"
      lfrField2 := prrRecRef.FIELD(3);  // "No."
      precPurchHeaderOut.GET(lfrField1.VALUE,lfrField2.VALUE);
    END;

    PROCEDURE getPurchLinefromRecRef@1000000026(prrRecRef@1000000001 : RecordRef;VAR precPurchLineOut@1000000000 : Record 39);
    VAR
      lfrField1@1000000004 : FieldRef;
      lfrField2@1000000003 : FieldRef;
      lfrField3@1000000002 : FieldRef;
    BEGIN
      //<FUNC>
      //  Description: Gets the purchase line from the recordref
      //  Called From: This codeunit
      //  Side Effect: None
      //</FUNC>

      lfrField1 := prrRecRef.FIELD(1); // "Document Type"
      lfrField2 := prrRecRef.FIELD(3);  // "Document No."
      lfrField3 := prrRecRef.FIELD(4);  // "Line No."
      precPurchLineOut.GET(lfrField1.VALUE,lfrField2.VALUE,lfrField3.VALUE);
    END;

    PROCEDURE getWhseRcptHeaderFromRecRef@1000000047(prrRecRef@1000000001 : RecordRef;VAR precWhseRcptHeaderOut@1000000000 : Record 7316);
    VAR
      lfrField1@1000000002 : FieldRef;
    BEGIN
      //<FUNC>
      //  Description: Gets the warehouse receipt header from the recordref
      //  Called From: This codeunit
      //  Side Effect: None
      //</FUNC>

      lfrField1 := prrRecRef.FIELD(1); // "No."
      precWhseRcptHeaderOut.GET(lfrField1.VALUE);
    END;

    PROCEDURE getWhseRcptLineFromRecRef@1000000027(prrRecRef@1000000001 : RecordRef;VAR precWhseRcptLineOut@1000000000 : Record 7317);
    VAR
      lfrField1@1000000002 : FieldRef;
      lfrField2@1000000003 : FieldRef;
    BEGIN
      //<FUNC>
      //  Description: Gets the warehouse receipt line from the recordref
      //  Called From: This codeunit
      //  Side Effect: None
      //</FUNC>

      lfrField1 := prrRecRef.FIELD(1); // "No."
      lfrField2 := prrRecRef.FIELD(2); // "Line No."
      precWhseRcptLineOut.GET(lfrField1.VALUE,lfrField2.VALUE);
    END;

    PROCEDURE getWhseShipHeaderFromRecRef@1000000039(prrRecRef@1000000001 : RecordRef;VAR precWhseShipHeaderOut@1000000000 : Record 7320);
    VAR
      lfrField1@1000000002 : FieldRef;
    BEGIN
      //<FUNC>
      //  Description: Gets the warehouse shipment header from the recordref
      //  Called From: This codeunit
      //  Side Effect: None
      //</FUNC>

      lfrField1 := prrRecRef.FIELD(1); // "No."
      precWhseShipHeaderOut.GET(lfrField1.VALUE);
    END;

    PROCEDURE getWhseShipLineFromRecRef@1000000038(prrRecRef@1000000001 : RecordRef;VAR precWhseShipLineOut@1000000000 : Record 7321);
    VAR
      lfrField1@1000000002 : FieldRef;
      lfrField2@1000000003 : FieldRef;
    BEGIN
      //<FUNC>
      //  Description: Gets the warehouse shipment line from the recordref
      //  Called From: This codeunit
      //  Side Effect: None
      //</FUNC>

      lfrField1 := prrRecRef.FIELD(1); // "No."
      lfrField2 := prrRecRef.FIELD(2); // "Line No."
      precWhseShipLineOut.GET(lfrField1.VALUE,lfrField2.VALUE);
    END;

    BEGIN
    {
      ************************
      Copyright Notice
      This objects content is copyright of Insight Works 2011.  All rights reserved.
      Any redistribution or reproduction of part or all of the contents in any form is prohibited.
      ************************
    }
    END.
  }
}

