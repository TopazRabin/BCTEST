OBJECT Codeunit 14000962 Package Summary Management
{
  OBJECT-PROPERTIES
  {
    Date=06/28/17;
    Time=12:00:00 PM;
    Version List=SE0.51.19;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1240030000 : TextConst 'ENU=Custom Code are missing for %1 %2.';

    PROCEDURE ClosePackage@1240030000(CurrentPackage@1240030000 : Record 14000701;PackingRule@1240030001 : Record 14000715);
    VAR
      PackageLine@1240030003 : Record 14000702;
      PackageSummaryLine@1240030002 : Record 14000964;
      PackageSummaryLine2@1240030007 : Record 14000964;
      Package@1240030004 : Record 14000701;
      PackageTmp@1240030005 : TEMPORARY Record 14000701;
      Inserted@1240030006 : Boolean;
    BEGIN
      PackageSummaryLine.RESET;
      PackageSummaryLine.SETRANGE("Package No.",CurrentPackage."No.");
      PackageSummaryLine.DELETEALL;

      PackageSummaryLine.INIT;
      PackageSummaryLine."Package No." := CurrentPackage."No.";
      PackageSummaryLine."Line No." := 0;

      WITH CurrentPackage DO BEGIN
        CASE PackingRule."Package Summary Type" OF
          PackingRule."Package Summary Type"::"Item all Levels",
          PackingRule."Package Summary Type"::"Item all Levels Summarize",
          PackingRule."Package Summary Type"::"Item all Levels Summarize Group by Box Size":
            BEGIN
              PackageTmp := CurrentPackage;
              PackageTmp.INSERT;
              WHILE PackageTmp.FIND('-') DO BEGIN
                PackageLine.RESET;
                PackageLine.SETRANGE("Package No.",PackageTmp."No.");
                IF PackageLine.FIND('-') THEN
                  REPEAT
                    CASE PackageLine.Type OF
                      PackageLine.Type::Package:
                        BEGIN
                          Package := PackageTmp;
                          PackageTmp."No." := PackageLine."No.";
                          PackageTmp.INSERT;
                          PackageTmp := Package;
                        END;
                      PackageLine.Type::Item:
                        BEGIN
                          Inserted := FALSE;
                          IF PackingRule."Package Summary Type" IN
                             [PackingRule."Package Summary Type"::"Item all Levels Summarize",
                              PackingRule."Package Summary Type"::"Item all Levels Summarize Group by Box Size"]
                          THEN BEGIN
                            PackageSummaryLine2.RESET;
                            PackageSummaryLine2.SETRANGE("Package No.",CurrentPackage."No.");
                            PackageSummaryLine2.SETRANGE(Type,PackageLine.Type);
                            PackageSummaryLine2.SETRANGE("No.",PackageLine."No.");
                            PackageSummaryLine2.SETRANGE("Variant Code",PackageLine."Variant Code");
                            IF PackingRule."Package Summary Type" =
                               PackingRule."Package Summary Type"::"Item all Levels Summarize Group by Box Size"
                            THEN BEGIN
                              PackageSummaryLine2.SETRANGE("Line Quantity",PackageLine.Quantity);
                              PackageSummaryLine2.SETRANGE(
                                "Line Quantity (Base)",PackageLine."Quantity (Base)");
                            END;
                            IF PackageSummaryLine2.FIND('-') THEN BEGIN
                              AddtoPackageSummary(PackageSummaryLine2,PackageLine);

                              Inserted := TRUE;
                            END;
                          END;

                          IF NOT Inserted THEN
                            InsertPackageSummary(PackageSummaryLine,PackageLine);
                        END;
                    END;
                  UNTIL PackageLine.NEXT = 0;

                PackageTmp.DELETE;
              END;
            END;
          PackingRule."Package Summary Type"::"Only Items",
          PackingRule."Package Summary Type"::"Only Items by Item",
          PackingRule."Package Summary Type"::"Only Items by Item and Variant":
            BEGIN
              PackageLine.RESET;
              PackageLine.SETRANGE("Package No.",CurrentPackage."No.");
              IF PackageLine.FIND('-') THEN
                REPEAT
                  CASE PackageLine.Type OF
                    PackageLine.Type::Item:
                      BEGIN
                        Inserted := FALSE;
                        IF PackingRule."Package Summary Type" IN
                           [PackingRule."Package Summary Type"::"Only Items by Item",
                            PackingRule."Package Summary Type"::"Only Items by Item and Variant"]
                        THEN BEGIN
                          PackageSummaryLine2.RESET;
                          PackageSummaryLine2.SETRANGE("Package No.",CurrentPackage."No.");
                          PackageSummaryLine2.SETRANGE(Type,PackageLine.Type);
                          PackageSummaryLine2.SETRANGE("No.",PackageLine."No.");
                          IF PackingRule."Package Summary Type" =
                             PackingRule."Package Summary Type"::"Only Items by Item and Variant"
                          THEN
                            PackageSummaryLine2.SETRANGE("Variant Code",PackageLine."Variant Code");
                          IF PackageSummaryLine2.FIND('-') THEN BEGIN
                            AddtoPackageSummary(PackageSummaryLine2,PackageLine);

                            Inserted := TRUE;
                          END;
                        END;

                        IF NOT Inserted THEN
                          InsertPackageSummary(PackageSummaryLine,PackageLine);
                      END;
                  END;
                UNTIL PackageLine.NEXT = 0;
            END;
          PackingRule."Package Summary Type"::"Custom 1":
            BEGIN
              ERROR(Text001,PackingRule.TABLECAPTION,PackingRule.Code);
            END;
          PackingRule."Package Summary Type"::"Custom 2":
            BEGIN
              ERROR(Text001,PackingRule.TABLECAPTION,PackingRule.Code);
            END;
          PackingRule."Package Summary Type"::"Custom 3":
            BEGIN
              ERROR(Text001,PackingRule.TABLECAPTION,PackingRule.Code);
            END;
        END;
      END;
    END;

    PROCEDURE InsertPackageSummary@1240030001(VAR PackageSummaryLine@1240030001 : Record 14000964;PackageLine@1240030002 : Record 14000702);
    BEGIN
      PackageSummaryLine.INIT;
      PackageSummaryLine."Line No." := PackageSummaryLine."Line No." + 10000;
      PackageSummaryLine.TRANSFERFIELDS(PackageLine,FALSE);
      PackageSummaryLine."No. of Lines" := 1;
      PackageSummaryLine."From Package No." := PackageLine."Package No.";
      PackageSummaryLine."Line Quantity" := PackageLine.Quantity;
      PackageSummaryLine."Line Quantity (Base)" := PackageLine."Quantity (Base)";
      PackageSummaryLine.INSERT;
    END;

    PROCEDURE AddtoPackageSummary@1240030002(VAR PackageSummaryLine@1240030001 : Record 14000964;PackageLine@1240030000 : Record 14000702);
    BEGIN
      PackageSummaryLine.AddPackageLine(PackageLine);
      PackageSummaryLine."No. of Lines" := PackageSummaryLine."No. of Lines" + 1;
      IF PackageSummaryLine."From Package No." <> PackageLine."Package No." THEN
        PackageSummaryLine."From Package No." := '';
      IF PackageSummaryLine."Line Quantity" <> PackageLine.Quantity THEN
        PackageSummaryLine."Line Quantity" := 0;
      IF PackageSummaryLine."Line Quantity (Base)" <>
         PackageLine."Quantity (Base)"
      THEN
        PackageSummaryLine."Line Quantity (Base)" := 0;
      PackageSummaryLine.MODIFY;
    END;

    BEGIN
    END.
  }
}

