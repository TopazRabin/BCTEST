OBJECT Codeunit 14050805 E.D.I. Create Freight Invoice
{
  OBJECT-PROPERTIES
  {
    Date=01/07/16;
    Time=12:00:00 PM;
    Version List=SE0.60.10;
  }
  PROPERTIES
  {
    TableNo=14002358;
    OnRun=BEGIN
            IF ("Navision Document" <> 'I_FGTINV') THEN
              ERROR(Text001,"Navision Document");

            EDITemplate.GET("EDI Template Code");
            EDIRecDocHdr2.GET("Internal Doc. No.");
            IF EDIRecDocHdr2."Company Name" <> COMPANYNAME THEN
              ERROR(
                Text002,
                EDIRecDocHdr2."Internal Doc. No.",EDIRecDocHdr2."Company Name",COMPANYNAME);

            IF EDIRecDocHdr2."Freight Invoice Created" THEN BEGIN
              IF GUIALLOWED THEN BEGIN
                IF NOT CONFIRM(
                  Text003 +
                  Text004)
                THEN
                  ERROR(Text005);
              END ELSE
                ERROR(Text005);
            END;

            EDITradePartner.GET(EDIRecDocHdr2."Trade Partner No.");

            EDIDocument.GET(
              EDIRecDocHdr2."Trade Partner No.",EDIRecDocHdr2."Navision Document",
              EDIRecDocHdr2."EDI Document No.",EDIRecDocHdr2."EDI Version",EDIDocument.Type::Import);

            EDISetup.GET;

            MapGenCrossRef := FALSE;

            IF (EDISetup."Enable General Cross Ref.") THEN BEGIN
              IF (EDITradePartner."Disable General Cross Ref.") THEN
                EvaluateGenCrossRef := FALSE
              ELSE BEGIN
                MapGenCrossRef := TRUE;
                IF (EDISetup."Eval. XRef at Doc. Import") THEN BEGIN
                  IF EDIRecDocHdr2."Gen. XRef Processed On Import" = FALSE THEN
                    EvaluateGenCrossRef := TRUE
                END ELSE
                  EvaluateGenCrossRef := TRUE;
                IF EvaluateGenCrossRef THEN BEGIN
                  CLEAR(EvaluateCrossReference);
                  EvaluateCrossReference.AssignNAVCrossReference(EDIRecDocHdr2);
                END;
              END;
            END ELSE
              EvaluateGenCrossRef := FALSE;

            IF EvaluateGenCrossRef THEN BEGIN
              EDIRecDocHdr2.CALCFIELDS("General Cross Reference Error");
              IF EDIRecDocHdr2."General Cross Reference Error" THEN
                ERROR(Text006);
            END;
            IF GUIALLOWED THEN BEGIN
              ProgressWindow.OPEN(
                Text007 +
                Text008 +
                Text009 +
                Text010 +
                Text011 +
                Text012 +
                Text013 +
                Text014);
              ProgressWindow.UPDATE(1,"Trade Partner No.");
              ProgressWindow.UPDATE(3,"Internal Doc. No.");
            END;

            EDIRecDocField.RESET;
            EDIRecDocField.SETCURRENTKEY("Internal Doc. No.","NAV Table No.","Nav Field No.");
            EDIRecDocField.SETRANGE("Internal Doc. No.",EDIRecDocHdr2."Internal Doc. No.");
            EDIRecDocField.SETRANGE("NAV Table No.",DATABASE::"Purchase Header");
            EDIRecDocField.SETRANGE("Nav Field No.",PurchaseHeader.FIELDNO("Vendor Shipment No."));
            IF EDIRecDocField.FIND('-') THEN
              BillofLading := 'BOL ' + EDIRecDocField."Field Text Value";

            BuyfromVendor := '';
            EDIBuyfromVendor := '';

            IF EDITradePartner."Vendor No." <> '' THEN BEGIN
              BuyfromVendor := EDITradePartner."Vendor No.";
              EDIBuyfromVendor := EDITradePartner."Vendor No.";
            END ELSE BEGIN
              EDIRecDocField.RESET;
              EDIRecDocField.SETCURRENTKEY("Internal Doc. No.","NAV Table No.","Nav Field No.");
              EDIRecDocField.SETRANGE("Internal Doc. No.",EDIRecDocHdr2."Internal Doc. No.");
              EDIRecDocField.SETRANGE("NAV Table No.",DATABASE::"Purchase Header");
              EDIRecDocField.SETRANGE("Nav Field No.",PurchaseHeader.FIELDNO("Buy-from Vendor No."));
              IF EDIRecDocField.FIND('-') THEN BEGIN
                EDIBuyfromVendor := COPYSTR(EDIRecDocField."Field Text Value",1,20);
                IF EDIBuyfromVendor <> '' THEN BEGIN
                  EDIVendCrossRef.RESET;
                  EDIVendCrossRef.SETRANGE("EDI Buy-from Code",EDIBuyfromVendor);
                  IF EDIVendCrossRef.FIND('-') THEN
                    BuyfromVendor := EDIVendCrossRef."Navision Buy-from Code";
                END;
              END;
            END;

            IF NOT Vendor.GET(BuyfromVendor) THEN
              ERROR(Text015,EDIBuyfromVendor,EDITradePartner."No.");
            EDIRecDocHdr2."Vendor No." := Vendor."No.";
            IF GUIALLOWED THEN
              ProgressWindow.UPDATE(4,Vendor."No.");

            CLEAR(PurchaseHeader);
            CLEAR(PurchaseLine);

            // Locking to prevent Deadlocking
            EDIRecDocHdr.LOCKTABLE;
            EDIRecDocField.LOCKTABLE;
            NoSeriesLine.LOCKTABLE;
            PurchaseLine.LOCKTABLE;
            PurchaseHeader.LOCKTABLE;

            PurchaseHeader."No." := '';
            PurchaseHeader."Document Type" := PurchaseHeader."Document Type"::Invoice;
            PurchaseHeader.INSERT(TRUE);
            IF GUIALLOWED THEN
              ProgressWindow.UPDATE(2,PurchaseHeader."No.");
            PurchaseHeader.VALIDATE("Buy-from Vendor No.",BuyfromVendor);
            PurchaseHeader."EDI Internal Doc. No." := EDIRecDocHdr2."Internal Doc. No.";
            PurchaseHeader.VALIDATE("EDI Trade Partner",EDIRecDocHdr2."Trade Partner No.");
            PurchaseHeader."EDI Buy-from Code" := EDIBuyfromVendor;
            PurchaseHeader."EDI Order" := TRUE;
            PurchaseHeader.MODIFY(TRUE);

            MapPurchaseHdrFields;
            PurchaseHeader.MODIFY(TRUE);

            IF GUIALLOWED THEN
              ProgressWindow.UPDATE(5,PurchaseHeader."Location Code");

            IF EDIDocument."Purch. Inv. Default G/L Acct." <> '' THEN
              CreateFreightInvoiceLine
            ELSE BEGIN
              LastGLAccount := '';
              LastDescription := '';
              EDIRecDocField.RESET;
              EDIRecDocField.SETRANGE("Internal Doc. No.",EDIRecDocHdr2."Internal Doc. No.");
              EDIRecDocField.SETRANGE("NAV Table No.",DATABASE::"Purchase Line");
              IF EDIRecDocField.FIND('-') THEN
                REPEAT
                  IF (EDIRecDocField."Nav Field No." = PurchaseLine.FIELDNO("No.")) AND
                     (EDIRecDocField."Line Type" = EDIRecDocField."Line Type"::"G/L Account")
                  THEN BEGIN
                    IF EvaluateGenCrossRef THEN
                      LastGLAccount := EDIRecDocField."NAV Cross Ref. Value-1"
                    ELSE
                      LastGLAccount := EDIRecDocField."Field Text Value";
                  END;
                  IF EDIRecDocField."Nav Field No." = PurchaseLine.FIELDNO(Description) THEN
                    LastDescription := COPYSTR(EDIRecDocField."Field Text Value",1,50);
                  IF EDIRecDocField.Trigger THEN
                    CreateFreightInvoiceLines;
                UNTIL EDIRecDocField.NEXT = 0;
            END;

            COMMIT;

            IF EDITemplate."Auto. Release Purch. Document" THEN BEGIN
              PurchaseHeader.RESET;
              PurchaseHeader.SETCURRENTKEY("EDI Order","EDI Trade Partner","EDI Internal Doc. No.");
              PurchaseHeader.SETRANGE("EDI Internal Doc. No.",EDIRecDocHdr2."Internal Doc. No.");
              IF PurchaseHeader.FIND('-') THEN
                REPEAT
                  ReleasePurchaseDocument.RUN(PurchaseHeader);
                UNTIL PurchaseHeader.NEXT = 0;
            END;

            EDIRecDocField.RESET;
            EDIRecDocField.SETCURRENTKEY("Internal Doc. No.","NAV Table No.","Nav Field No.");
            EDIRecDocField.SETRANGE("Internal Doc. No.",EDIRecDocHdr2."Internal Doc. No.");
            EDIRecDocField.SETRANGE("NAV Table No.",DATABASE::"Purch. Comment Line");
            EDIRecDocField.SETRANGE("Nav Field No.",PurchCommentLine.FIELDNO(Comment));
            IF EDIRecDocField.FIND('-') THEN
              MapPurchCommentLine;

            EDIRecDocHdr2."Data Error" := FALSE;
            EDIRecDocHdr2."Purch. Doc. Created" := TRUE;
            EDIRecDocHdr2."Purch. Doc. Created Date" := TODAY;
            EDIRecDocHdr2."Purch. Doc. Created Time" := TIME;
            EDIRecDocHdr2."Freight Invoice Created" := TRUE;
            EDIRecDocHdr2."Freight Invoice Created Date" := TODAY;
            EDIRecDocHdr2."Freight Invoice Created Time" := TIME;
            EDIRecDocHdr2."Vendor Name" := PurchaseHeader."Buy-from Vendor Name";
            EDIRecDocHdr2."Vendor Invoice No." := PurchaseHeader."Vendor Invoice No.";
            EDIRecDocHdr2."Vendor Shipment No." := PurchaseHeader."Vendor Shipment No.";
            EDIRecDocHdr2."Document Processed" := TRUE;
            EDIRecDocHdr2.MODIFY;

            COMMIT;

            IF GUIALLOWED THEN
              ProgressWindow.CLOSE;
          END;

  }
  CODE
  {
    VAR
      EDIVendCrossRef@1240030098 : Record 14002366;
      PurchaseHeader@1240030089 : Record 38;
      PurchaseLine@1240030097 : Record 39;
      Vendor@1240030099 : Record 23;
      Item@1240020005 : Record 27;
      PurchCommentLine@1240020006 : Record 43;
      EvaluateGenCrossRef@1240020004 : Boolean;
      BuyfromVendor@1240030001 : Code[20];
      EDIBuyfromVendor@1240030090 : Code[20];
      LineNo@1240030094 : Integer;
      MultiplierQty@1240020001 : Integer;
      BillofLading@1240030096 : Code[30];
      EDITemplate@1240030002 : Record 14002350;
      EDITradePartner@1240030003 : Record 14002360;
      EDIRecDocHdr@1240030004 : Record 14002358;
      EDIRecDocHdr2@1240030005 : Record 14002358;
      EDIRecDocField@1240030006 : Record 14002359;
      EDIRecDocField2@1240030007 : Record 14002359;
      NoSeriesLine@1240030012 : Record 309;
      EDIDocument@1240030071 : Record 14002353;
      EDISetup@1240030084 : Record 14002367;
      ReleasePurchaseDocument@1240030055 : Codeunit 415;
      EvaluateCrossReference@1240030082 : Codeunit 14000380;
      ProgressWindow@1240030021 : Dialog;
      Text001@1001 : TextConst 'ENU=EDI Navision Document %1 does not match this function.';
      Text002@1002 : TextConst 'ENU=The receive document %1 is for company %2. You are currently in company %3.';
      Text003@1003 : TextConst 'ENU=Freight invoice has already been created.\';
      Text004@1004 : TextConst 'ENU=Do you wish to re-create it?';
      Text005@1005 : TextConst 'ENU=Freight invoice not created.';
      Text006@1240020009 : TextConst 'ENU=EDI Cross references are not setup. \Check Receive Document for details.';
      Text007@1006 : TextConst 'ENU=Creating Freight Invoice(s)......\';
      Text008@1007 : TextConst 'ENU=Trading Partner      #1##################\';
      Text009@1008 : TextConst 'ENU=Purchase Invoice No. #2##################\';
      Text010@1009 : TextConst 'ENU=Internal Doc No.     #3########\';
      Text011@1010 : TextConst 'ENU=Vendor No.           #4##################\';
      Text012@1011 : TextConst 'ENU=Location             #5##################\';
      Text013@1012 : TextConst 'ENU=Item No.             #6##################\';
      Text014@1013 : TextConst 'ENU=Creating Lines       @7@@@@@@@@@@@@@@@@@@';
      Text015@1240020003 : TextConst 'ENU=Vendor %1 is not set up as an EDI Trading Partner.';
      Text016@1016 : TextConst 'ENU=Freight Invoice Amount not found. \Value must be mapped to Purchase Header Amount field.';
      InterimTextField@1240020002 : Code[80];
      LastGLAccount@1240020008 : Code[10];
      Text017@1240020007 : TextConst 'ENU="G/L Account must not be blank.  "';
      LastDescription@1240020000 : Text[50];
      MapGenCrossRef@1240020010 : Boolean;

    PROCEDURE CreateFreightInvoiceLine@1240020001();
    VAR
      AccountNo@1240020000 : Code[20];
      FreightInvAmt@1240020001 : Decimal;
    BEGIN
      AccountNo := '';
      FreightInvAmt := 0;

      EDIRecDocField.RESET;
      EDIRecDocField.SETCURRENTKEY("Internal Doc. No.","NAV Table No.","Nav Field No.");
      EDIRecDocField.SETRANGE("Internal Doc. No.",EDIRecDocHdr2."Internal Doc. No.");
      EDIRecDocField.SETRANGE("NAV Table No.",DATABASE::"Purchase Header");
      EDIRecDocField.SETRANGE("Nav Field No.",PurchaseHeader.FIELDNO(Amount));
      IF EDIRecDocField.FIND('-') THEN
        FreightInvAmt := EDIRecDocField."Field Dec. Value"
      ELSE
        ERROR(Text016);

      AccountNo := EDIDocument."Purch. Inv. Default G/L Acct.";

      PurchaseLine.SetRunFromEDI(TRUE);
      PurchaseLine.SETRANGE(PurchaseLine."Document Type",PurchaseHeader."Document Type");
      PurchaseLine.SETRANGE(PurchaseLine."Document No.",PurchaseHeader."No.");
      IF PurchaseLine.FIND('+') THEN
        LineNo := PurchaseLine."Line No." + 10000
      ELSE
        LineNo := 10000;
      CLEAR(PurchaseLine);
      PurchaseLine."Document Type" := PurchaseHeader."Document Type";
      PurchaseLine."Document No." := PurchaseHeader."No.";
      PurchaseLine.VALIDATE("Line No.",LineNo);
      PurchaseLine.VALIDATE(Type,PurchaseLine.Type::"G/L Account");
      PurchaseLine.VALIDATE("No.",AccountNo);
      PurchaseLine.VALIDATE(Quantity,1);
      PurchaseLine.Description := BillofLading;
      PurchaseLine.VALIDATE("Direct Unit Cost",FreightInvAmt);
      PurchaseLine.VALIDATE("Unit Cost (LCY)",FreightInvAmt);
      PurchaseLine."EDI Segment Group" := 1;
      PurchaseLine.INSERT(TRUE);

      MapPurchaseLineFields;
      PurchaseLine.MODIFY;

      PurchaseLine.SetRunFromEDI(FALSE);
    END;

    PROCEDURE CreateFreightInvoiceLines@1240030005();
    BEGIN
      IF LastGLAccount = '' THEN
        ERROR(Text017);

      MultiplierQty := 1;

      PurchaseLine.SetRunFromEDI(TRUE);

      PurchaseLine.RESET;
      PurchaseLine.SETRANGE(PurchaseLine."Document Type",PurchaseHeader."Document Type");
      PurchaseLine.SETRANGE(PurchaseLine."Document No.",PurchaseHeader."No.");
      IF PurchaseLine.FIND('+') THEN
        LineNo := PurchaseLine."Line No." + 10000
      ELSE
        LineNo := 10000;
      CLEAR(PurchaseLine);
      PurchaseLine.VALIDATE("Document Type",PurchaseHeader."Document Type");
      PurchaseLine.VALIDATE("Document No.",PurchaseHeader."No.");
      PurchaseLine.VALIDATE("Line No.",LineNo);
      PurchaseLine.Type := PurchaseLine.Type::"G/L Account";
      PurchaseLine.VALIDATE("No.",LastGLAccount);
      PurchaseLine.VALIDATE(Quantity,1);
      PurchaseLine.Description := LastDescription;

      EDIRecDocField2.RESET;
      EDIRecDocField2.SETCURRENTKEY("Internal Doc. No.","Segment Group");
      EDIRecDocField2.SETRANGE("Internal Doc. No.",EDIRecDocHdr2."Internal Doc. No.");
      EDIRecDocField2.SETRANGE("Segment Group",EDIRecDocField."Segment Group");
      IF EDIRecDocField2.FIND('-') THEN BEGIN
        PurchaseLine.SetRunFromEDI(TRUE);
        REPEAT
          MapPurchaseLineFields;
        UNTIL EDIRecDocField2.NEXT = 0;
        PurchaseLine.SetRunFromEDI(FALSE);
      END;
      PurchaseLine."EDI Segment Group" := EDIRecDocField."Segment Group";
      PurchaseLine."Buy-from Vendor No." := PurchaseHeader."Buy-from Vendor No.";
      PurchaseLine.INSERT(TRUE);

      PurchaseLine.SetRunFromEDI(FALSE);

      LastGLAccount := '';
      LastDescription := '';
    END;

    PROCEDURE MapPurchaseHdrFields@1240030000();
    BEGIN
      EDIRecDocField.RESET;
      EDIRecDocField.SETRANGE("Internal Doc. No.",EDIRecDocHdr2."Internal Doc. No.");
      EDIRecDocField.SETRANGE(EDIRecDocField."NAV Table No.",DATABASE::"Purchase Header");
      IF EDIRecDocField.FIND('-') THEN
      REPEAT
        CASE EDIRecDocField."Nav Field No." OF
          PurchaseHeader.FIELDNO("Your Reference"):
            PurchaseHeader."Your Reference" :=
              LoadTextFields(PurchaseHeader."Your Reference",EDIRecDocField);
          PurchaseHeader.FIELDNO("Vendor Invoice No."):
            PurchaseHeader."Vendor Invoice No." :=
              LoadTextFields(PurchaseHeader."Vendor Invoice No.",EDIRecDocField);
          PurchaseHeader.FIELDNO("Vendor Order No."):
            PurchaseHeader."Vendor Order No." :=
              LoadTextFields(PurchaseHeader."Vendor Order No.",EDIRecDocField);
          PurchaseHeader.FIELDNO("Vendor Shipment No."):
            PurchaseHeader."Vendor Shipment No." :=
              LoadTextFields(PurchaseHeader."Vendor Shipment No.",EDIRecDocField);
          PurchaseHeader.FIELDNO("Ship-to Name"):
            PurchaseHeader."Ship-to Name" :=
              LoadTextFields(PurchaseHeader."Ship-to Name",EDIRecDocField);
          PurchaseHeader.FIELDNO("Ship-to Address"):
            PurchaseHeader."Ship-to Address" :=
              LoadTextFields(PurchaseHeader."Ship-to Address",EDIRecDocField);
          PurchaseHeader.FIELDNO("Ship-to Address 2"):
            PurchaseHeader."Ship-to Address 2" :=
              LoadTextFields(PurchaseHeader."Ship-to Address 2",EDIRecDocField);
          PurchaseHeader.FIELDNO("Ship-to City"):
            PurchaseHeader."Ship-to City" :=
              LoadTextFields(PurchaseHeader."Ship-to City",EDIRecDocField);
          PurchaseHeader.FIELDNO("Ship-to County"):
            PurchaseHeader."Ship-to County" :=
              LoadTextFields(PurchaseHeader."Ship-to County",EDIRecDocField);
          PurchaseHeader.FIELDNO("Ship-to Post Code"):
            PurchaseHeader."Ship-to Post Code" :=
              LoadTextFields(PurchaseHeader."Ship-to Post Code",EDIRecDocField);
          PurchaseHeader.FIELDNO("Ship-to Contact"):
            PurchaseHeader."Ship-to Contact" :=
              LoadTextFields(PurchaseHeader."Ship-to Contact",EDIRecDocField);
          PurchaseHeader.FIELDNO("Ship-to Country/Region Code"):
            PurchaseHeader."Ship-to Country/Region Code" :=
              LoadTextFields(PurchaseHeader."Ship-to Country/Region Code",EDIRecDocField);
          PurchaseHeader.FIELDNO("Pay-to Name"):
            PurchaseHeader."Pay-to Name" :=
              LoadTextFields(PurchaseHeader."Pay-to Name",EDIRecDocField);
          PurchaseHeader.FIELDNO("Pay-to Address"):
            PurchaseHeader."Pay-to Address" :=
              LoadTextFields(PurchaseHeader."Pay-to Address",EDIRecDocField);
          PurchaseHeader.FIELDNO("Pay-to Address 2"):
            PurchaseHeader."Pay-to Address 2" :=
              LoadTextFields(PurchaseHeader."Pay-to Address 2",EDIRecDocField);
          PurchaseHeader.FIELDNO("Pay-to City"):
            PurchaseHeader."Pay-to City" :=
              LoadTextFields(PurchaseHeader."Pay-to City",EDIRecDocField);
          PurchaseHeader.FIELDNO("Pay-to County"):
            PurchaseHeader."Pay-to County" :=
              LoadTextFields(PurchaseHeader."Pay-to County",EDIRecDocField);
          PurchaseHeader.FIELDNO("Pay-to Post Code"):
            PurchaseHeader."Pay-to Post Code" :=
              LoadTextFields(PurchaseHeader."Pay-to Post Code",EDIRecDocField);
          PurchaseHeader.FIELDNO("Pay-to Contact"):
            PurchaseHeader."Pay-to Contact" :=
              LoadTextFields(PurchaseHeader."Pay-to Contact",EDIRecDocField);
          PurchaseHeader.FIELDNO("Pay-to Country/Region Code"):
            PurchaseHeader."Pay-to Country/Region Code" :=
              LoadTextFields(PurchaseHeader."Pay-to Country/Region Code",EDIRecDocField);
          PurchaseHeader.FIELDNO("E-Ship Agent Code"):
            IF EDIRecDocField."General EDI Cross Reference" = FALSE THEN
              PurchaseHeader."E-Ship Agent Code" :=
                LoadTextFields(PurchaseHeader."E-Ship Agent Code",EDIRecDocField);
          PurchaseHeader.FIELDNO("E-Ship Agent Service"):
            IF EDIRecDocField."General EDI Cross Reference" = FALSE THEN
              PurchaseHeader."E-Ship Agent Service" :=
                LoadTextFields(PurchaseHeader."E-Ship Agent Service",EDIRecDocField);
          PurchaseHeader.FIELDNO("Payment Terms Code"):
            IF EDIRecDocField."General EDI Cross Reference" = FALSE THEN
              PurchaseHeader."Payment Terms Code" :=
                LoadTextFields(PurchaseHeader."Payment Terms Code",EDIRecDocField);
          PurchaseHeader.FIELDNO("Document Date"):
            IF EDIRecDocField."Field Date Value" <> 0D THEN
              PurchaseHeader.VALIDATE("Document Date",EDIRecDocField."Field Date Value");
          PurchaseHeader.FIELDNO("Posting Date"):
            IF EDIRecDocField."Field Date Value" <> 0D THEN
              PurchaseHeader.VALIDATE("Posting Date",EDIRecDocField."Field Date Value");
          PurchaseHeader.FIELDNO("Posting Description"):
            PurchaseHeader."Posting Description" :=
              LoadTextFields(PurchaseHeader."Posting Description",EDIRecDocField);

            //
            // Add Custom Purchase Header fields here
            //

        END;
      UNTIL EDIRecDocField.NEXT = 0;


      IF MapGenCrossRef THEN
        MapGeneralEDICrossRef(TRUE);
    END;

    PROCEDURE MapPurchaseLineFields@1240030001();
    BEGIN
      CASE EDIRecDocField2."NAV Table No." OF
        DATABASE::"Purchase Line":
          CASE EDIRecDocField2."Nav Field No." OF
            PurchaseLine.FIELDNO("Direct Unit Cost"):
              PurchaseLine.VALIDATE("Direct Unit Cost",(EDIRecDocField2."Field Dec. Value" * MultiplierQty));
            PurchaseLine.FIELDNO("Line Discount Amount"):
              PurchaseLine.VALIDATE("Line Discount Amount",(EDIRecDocField2."Field Dec. Value"));
            PurchaseLine.FIELDNO("Line Discount %"):
              PurchaseLine.VALIDATE("Line Discount %",(EDIRecDocField2."Field Dec. Value"));

            //
            // Add Custom Purchase Line fields here
            //

          END;
      END;
    END;

    PROCEDURE LoadTextFields@1240030006(DestinationField@1240030000 : Text[80];LocEDIRecDocField@1240030001 : Record 14002359) ReturnTextField : Text[80];
    VAR
      SourceField@1240030002 : Text[80];
    BEGIN
      ReturnTextField := '';
      SourceField := LocEDIRecDocField."Field Text Value";
      IF (NOT LocEDIRecDocField."Append to Field Contents") AND
         (NOT LocEDIRecDocField."Insert into Field Contents") THEN BEGIN
        IF LocEDIRecDocField."Copy String Position" = 0 THEN
          ReturnTextField := SourceField
        ELSE
          ReturnTextField :=
            COPYSTR(SourceField,LocEDIRecDocField."Copy String Position",LocEDIRecDocField."Copy String Length");
        EXIT(ReturnTextField);
      END;

      IF LocEDIRecDocField."Append to Field Contents" THEN BEGIN
        IF LocEDIRecDocField."Copy String Position" <> 0 THEN
          ReturnTextField :=
            DestinationField +
            COPYSTR(SourceField,LocEDIRecDocField."Copy String Position",LocEDIRecDocField."Copy String Length")
        ELSE
          ReturnTextField :=
            DestinationField + SourceField;
      END;

      IF LocEDIRecDocField."Insert into Field Contents" THEN BEGIN
        IF LocEDIRecDocField."Copy String Length" <> 0 THEN BEGIN
          ReturnTextField := DestinationField;
          InterimTextField := COPYSTR(SourceField,LocEDIRecDocField."Copy String Position",LocEDIRecDocField."Copy String Length");
          ReturnTextField := INSSTR(ReturnTextField,InterimTextField,LocEDIRecDocField."Insert Position");
        END ELSE
          ReturnTextField := INSSTR(ReturnTextField,SourceField,LocEDIRecDocField."Insert Position");
      END;

      EXIT(ReturnTextField);
    END;

    PROCEDURE MapGeneralEDICrossRef@1240030004(Header@1240020000 : Boolean);
    VAR
      ShipPaymentType@1240030000 : 'Prepaid,Third Party,Freight Collect,Consignee';
    BEGIN
      IF Header THEN BEGIN
        EDIRecDocField.RESET;
        EDIRecDocField.SETCURRENTKEY("Internal Doc. No.","NAV Table No.","Nav Field No.");
        EDIRecDocField.SETRANGE("Internal Doc. No.",EDIRecDocHdr2."Internal Doc. No.");
        EDIRecDocField.SETRANGE(EDIRecDocField."NAV Table No.",38);
        EDIRecDocField.SETRANGE(EDIRecDocField."General EDI Cross Reference",TRUE);
        IF EDIRecDocField.FIND('-') THEN
          REPEAT
            CASE EDIRecDocField."Nav Field No." OF
              PurchaseHeader.FIELDNO("E-Ship Agent Code"):
                PurchaseHeader.VALIDATE("E-Ship Agent Code",EDIRecDocField."NAV Cross Ref. Value-1");
              PurchaseHeader.FIELDNO("E-Ship Agent Service"):
                PurchaseHeader.VALIDATE("E-Ship Agent Service",EDIRecDocField."NAV Cross Ref. Value-2");
              PurchaseHeader.FIELDNO("Payment Terms Code"):
                PurchaseHeader.VALIDATE("Payment Terms Code",EDIRecDocField."NAV Cross Ref. Value-1");
              PurchaseHeader.FIELDNO("Shipment Method Code"):
                PurchaseHeader.VALIDATE("Shipment Method Code",EDIRecDocField."NAV Cross Ref. Value-1");
              PurchaseHeader.FIELDNO("Shipping Payment Type"):
                BEGIN
                  EVALUATE(ShipPaymentType,EDIRecDocField."NAV Cross Ref. Value-1");
                  PurchaseHeader.VALIDATE("Shipping Payment Type",ShipPaymentType);
                END;
              PurchaseHeader.FIELDNO("Location Code"):
                PurchaseHeader.VALIDATE("Location Code",EDIRecDocField."NAV Cross Ref. Value-1");
            END;
          UNTIL EDIRecDocField.NEXT = 0;
      END;
    END;

    PROCEDURE MapPurchCommentLine@1240020000();
    VAR
      PurchaseHeader@1240020001 : Record 38;
      LineNo@1240020000 : Integer;
    BEGIN
      PurchaseHeader.RESET;
      PurchaseHeader.SETCURRENTKEY("EDI Order","EDI Trade Partner","EDI Internal Doc. No.");
      PurchaseHeader.SETRANGE("EDI Internal Doc. No.",EDIRecDocHdr2."Internal Doc. No.");
      IF PurchaseHeader.FIND('-') THEN
        REPEAT
          EDIRecDocField.RESET;
          EDIRecDocField.SETCURRENTKEY("Internal Doc. No.","NAV Table No.","Nav Field No.");
          EDIRecDocField.SETRANGE("Internal Doc. No.",EDIRecDocHdr2."Internal Doc. No.");
          EDIRecDocField.SETRANGE("NAV Table No.",DATABASE::"Purch. Comment Line");
          EDIRecDocField.SETRANGE("Nav Field No.",PurchCommentLine.FIELDNO(Comment));
          EDIRecDocField.SETFILTER("Field Text Value",'<>%1','');
          IF EDIRecDocField.FIND('-') THEN
            REPEAT
              PurchCommentLine.RESET;
              PurchCommentLine.SETRANGE("Document Type",PurchCommentLine."Document Type"::Invoice);
              PurchCommentLine.SETRANGE("No.",PurchaseHeader."No.");
              IF PurchCommentLine.FIND('+') THEN
                LineNo := PurchCommentLine."Line No." + 10000
              ELSE
                LineNo := 10000;
              PurchCommentLine.INIT;
              PurchCommentLine."Document Type" := PurchCommentLine."Document Type"::Invoice;
              PurchCommentLine."No." := PurchaseHeader."No.";
              PurchCommentLine."Line No." := LineNo;
              PurchCommentLine.Date := TODAY;
              PurchCommentLine.Comment := EDIRecDocField."Field Text Value";
              PurchCommentLine.Code := 'EDI';
              PurchCommentLine.INSERT;
            UNTIL EDIRecDocField.NEXT = 0;
        UNTIL PurchaseHeader.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

