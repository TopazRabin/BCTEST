OBJECT Codeunit 23044536 WHI User Activity Mgmt
{
  OBJECT-PROPERTIES
  {
    Date=04/15/19;
    Time=[ 6:24:38 PM];
    Version List=WHI2.4.7684.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            //sets doc filters one time for all funtions
          END;

  }
  CODE
  {
    VAR
      LocationFilter@1000000000 : Code[10];
      iTimeFactor@1000000001 : Integer;

    PROCEDURE generateActivitySummary@1000000000(VAR ptrecEmpActivitySummary@1000000000 : TEMPORARY Record 23044515;pcodLocationCode@1000000001 : Code[10]);
    BEGIN
      //calls functions to populate list
      iTimeFactor := 3600000;
      ptrecEmpActivitySummary.RESET;
      ptrecEmpActivitySummary.DELETEALL;

      // start by putting in all users
      // then for each user update the details
      // note: this will aggregate across all locations if the user happens to be working in multiple locations unless the
      // caller specifies a specific location
      populateUsers(ptrecEmpActivitySummary, pcodLocationCode);

      // filter out any users that do not match the specified location (which will factor out anyone that didn't work today)
      ptrecEmpActivitySummary.RESET;
      ptrecEmpActivitySummary.SETFILTER("Location Code",'=%1','');
      ptrecEmpActivitySummary.DELETEALL;

      ptrecEmpActivitySummary.RESET;
    END;

    LOCAL PROCEDURE populateUsers@1000000009(VAR ptrecEmpActivitySummary@1000000000 : TEMPORARY Record 23044515;pcodLocationCode@1000000002 : Code[10]);
    VAR
      lrecIWXUser@1000000001 : Record 23044514;
    BEGIN
      IF( lrecIWXUser.FINDSET(FALSE) ) THEN BEGIN
        REPEAT
          CLEAR(ptrecEmpActivitySummary);
          ptrecEmpActivitySummary."User ID" := lrecIWXUser."User ID";
          ptrecEmpActivitySummary.INSERT;

          populateActivitySummary(ptrecEmpActivitySummary, pcodLocationCode);
        UNTIL( lrecIWXUser.NEXT=0 );
      END;
    END;

    LOCAL PROCEDURE populateActivitySummary@1000000003(VAR ptrecEmpActivitySummary@1000000000 : TEMPORARY Record 23044515;pcodLocationCode@1000000001 : Code[10]);
    VAR
      lrecDocOpen@1000000003 : Record 23044532;
      lrecDocClose@1000000004 : Record 23044532;
    BEGIN
      //fills calculated activity values for each user

      // set the filters to look at
      SetDocFilters(lrecDocOpen,lrecDocClose,ptrecEmpActivitySummary,pcodLocationCode);

      // loops through all the open documents
      GetDocTimes(lrecDocOpen,lrecDocClose,ptrecEmpActivitySummary);

      //get login time, time off doc, and device info
      lrecDocOpen.RESET;
      //lrecDocOpen.SETFILTER("User ID",'*' + getUserNameWODomain(ptrecEmpActivitySummary."User ID"));
      lrecDocOpen.SETRANGE("User ID",ptrecEmpActivitySummary."User ID");
      lrecDocOpen.SETFILTER("Event Time",'>=%1', CREATEDATETIME(TODAY,0T));
      lrecDocOpen.SETFILTER("Location Code",pcodLocationCode);
      IF lrecDocOpen.FINDFIRST THEN BEGIN
        ptrecEmpActivitySummary."Login Time" := lrecDocOpen."Event Time";
        ptrecEmpActivitySummary."Total Down Time" := (TIME - DT2TIME(lrecDocOpen."Event Time"))/iTimeFactor
                                                    - ptrecEmpActivitySummary."Total Document Time";
        ptrecEmpActivitySummary."Config ID" := lrecDocOpen."Config ID";
        ptrecEmpActivitySummary."Device Host Name" := lrecDocOpen."Device Host Name";
        ptrecEmpActivitySummary."Location Code" := lrecDocOpen."Location Code";
        ptrecEmpActivitySummary.MODIFY;
      END;
    END;

    PROCEDURE GetTimeString@1000000004(pdrawVal@1000000000 : Decimal;ptxtsubString@1000000002 : Text) : Text;
    VAR
      ldLarge@1000000003 : Decimal;
      ldSmall@1000000004 : Decimal;
      ltxtOutStr@1000000005 : Text;
    BEGIN
      //must be passed a substring with 2 value places
      IF pdrawVal = 0 THEN BEGIN
        EXIT('');
      END;

      ldLarge := ROUND(pdrawVal,1,'<');
      ldSmall := ROUND(((pdrawVal - ldLarge) * 60),1);
      //GOTTA BE A BETTER WAY
      IF ldLarge < 10 THEN BEGIN
        ltxtOutStr := '0';
      END;
      ltxtOutStr += FORMAT(ldLarge) + ':';
      IF ldSmall < 10 THEN BEGIN
        ltxtOutStr += '0';
      END;
      ltxtOutStr += FORMAT(ldSmall);
      EXIT(ltxtOutStr);
    END;

    LOCAL PROCEDURE SetDocFilters@1000000005(VAR precDocOpen@1000000000 : Record 23044532;VAR precDocClose@1000000001 : Record 23044532;precEmpFilters@1000000002 : Record 23044515;pcodLocationCode@1000000005 : Code[10]);
    BEGIN
      //get filter text and apply filters to open and doc code records

        precDocOpen.SETRANGE("User ID",precEmpFilters."User ID");
        precDocOpen.SETFILTER("Event Time",'>=%1', CREATEDATETIME(TODAY,0T));
        precDocOpen.SETRANGE("Summary Type",precDocOpen."Summary Type"::"Open Document");
        IF pcodLocationCode <> '' THEN
          precDocOpen.SETRANGE("Location Code",pcodLocationCode);

        precDocClose.SETRANGE("User ID",precEmpFilters."User ID");
        precDocClose.SETFILTER("Event Time",'>=%1', CREATEDATETIME(TODAY,0T));
        precDocClose.SETRANGE("Summary Type",precDocClose."Summary Type"::"Close Document");
        IF pcodLocationCode <> '' THEN
          precDocClose.SETRANGE("Location Code",pcodLocationCode);
    END;

    LOCAL PROCEDURE GetDocTimes@1000000007(VAR precDocOpen@1000000012 : Record 23044532;VAR precDocClose@1000000011 : Record 23044532;VAR ptrecEmpActivities@1000000010 : Record 23044515);
    VAR
      liCount@1000000006 : Integer;
      liProd@1000000005 : Integer;
      liReclass@1000000004 : Integer;
      liLP@1000000003 : Integer;
      liRec@1000000002 : Integer;
      liShip@1000000001 : Integer;
      liActivity@1000000000 : Integer;
      liTotalDocTime@1000000008 : Integer;
      liTotalDocs@1000000007 : Integer;
      ltrecUniqueOpen@1000000009 : TEMPORARY Record 23044532;
    BEGIN

      IF precDocOpen.FINDSET THEN BEGIN
        REPEAT
          //retrieve distinct
          ltrecUniqueOpen.RESET;
          ltrecUniqueOpen.SETRANGE("Document No.",precDocOpen."Document No.");
          IF NOT ltrecUniqueOpen.FINDFIRST THEN BEGIN
            ltrecUniqueOpen.TRANSFERFIELDS(precDocOpen); //want values, not filters
            ltrecUniqueOpen.INSERT(FALSE); //no need for validation, is same table
          END;

          //look for and handle matching Doc Close event
          precDocClose.SETFILTER("Document No.",precDocOpen."Document No.");
          precDocClose.SETFILTER("Entry No.",STRSUBSTNO('>%1',precDocOpen."Entry No."));
          IF precDocClose.FINDFIRST THEN BEGIN
            ptrecEmpActivities."Total Document Time" += (DT2TIME(precDocClose."Event Time") - DT2TIME(precDocOpen."Event Time"));
            CASE precDocOpen."Event ID" OF
              20001:
                BEGIN
                  ptrecEmpActivities."Avg Activity Time - Today" += (DT2TIME(precDocClose."Event Time") - DT2TIME(precDocOpen."Event Time"));
                  liActivity += 1;
                END;
              20009,20070:
                BEGIN
                  ptrecEmpActivities."Avg Reclass Time - Today" += (DT2TIME(precDocClose."Event Time") - DT2TIME(precDocOpen."Event Time"));
                  liReclass += 1;
                END;
              30008,30009,97001:
                BEGIN
                  ptrecEmpActivities."Avg Count Time - Today" += (DT2TIME(precDocClose."Event Time") - DT2TIME(precDocOpen."Event Time"));
                  liCount += 1;
                END;
              40001,40007,97201:
                BEGIN
                  ptrecEmpActivities."Avg Production Time - Today" += (DT2TIME(precDocClose."Event Time") - DT2TIME(precDocOpen."Event Time"));
                  liProd += 1;
                END;
              50001,50005,50013:
                BEGIN
                  ptrecEmpActivities."Avg Receiving Time - Today" += (DT2TIME(precDocClose."Event Time") - DT2TIME(precDocOpen."Event Time"));
                  liRec += 1;
                END;
              70000,70005,70011,70056:
                BEGIN
                  ptrecEmpActivities."Avg Shipping Time - Today" += (DT2TIME(precDocClose."Event Time") - DT2TIME(precDocOpen."Event Time"));
                  liShip += 1;
                END;
              95001,95019:
                BEGIN
                  ptrecEmpActivities."Avg License Plate Time - Today" += (DT2TIME(precDocClose."Event Time") - DT2TIME(precDocOpen."Event Time"));
                  liLP += 1;
                END;
            END;
          END ELSE BEGIN
              ptrecEmpActivities."Current Document Start" := precDocOpen."Event Time";
              ptrecEmpActivities."Current Document No." := precDocOpen."Document No.";
              precDocOpen.CALCFIELDS("Document Type Name");
              ptrecEmpActivities."Current Document Type" := precDocOpen."Document Type Name";
          END;
        UNTIL precDocOpen.NEXT = 0;
      END;

      liTotalDocs := ltrecUniqueOpen.COUNT;

      IF liActivity > 0 THEN BEGIN
        ptrecEmpActivities."Avg Activity Time - Today" /= liActivity;
        ptrecEmpActivities."Avg Activity Time - Today" /= iTimeFactor;
      END;
      IF liCount > 0 THEN BEGIN
        ptrecEmpActivities."Avg Count Time - Today" /= liCount;
        ptrecEmpActivities."Avg Count Time - Today"/= iTimeFactor;
      END;
      IF liLP > 0 THEN BEGIN
        ptrecEmpActivities."Avg License Plate Time - Today"/= liLP;
        ptrecEmpActivities."Avg License Plate Time - Today"/= iTimeFactor;
      END;
      IF liProd > 0 THEN BEGIN
        ptrecEmpActivities."Avg Production Time - Today" /= liProd;
        ptrecEmpActivities."Avg Production Time - Today"/= iTimeFactor;
      END;
      IF liRec > 0 THEN BEGIN
        ptrecEmpActivities."Avg Receiving Time - Today"/= liRec;
        ptrecEmpActivities."Avg Receiving Time - Today"/= iTimeFactor;
      END;
      IF liReclass > 0 THEN BEGIN
        ptrecEmpActivities."Avg Reclass Time - Today"/= liReclass;
        ptrecEmpActivities."Avg Reclass Time - Today"/= iTimeFactor;
      END;
      IF liShip > 0 THEN BEGIN
        ptrecEmpActivities."Avg Shipping Time - Today" /= liShip;
        ptrecEmpActivities."Avg Shipping Time - Today"/= iTimeFactor;
      END;

      //get time on doc
      ptrecEmpActivities."Total Document Time" /= iTimeFactor;
      IF ptrecEmpActivities."Current Document Start" <> CREATEDATETIME(0D,0T) THEN BEGIN
        ptrecEmpActivities."Total Document Time" += (TIME - DT2TIME(ptrecEmpActivities."Current Document Start"))/iTimeFactor;
      END;

      ptrecEmpActivities."Total Documents Today" := liTotalDocs;
    END;

    PROCEDURE getUserNameWODomain@1000000022(ptxtUserName@1000000002 : Text) : Code[100];
    VAR
      ltxtUserNameWithDomain@1000000001 : Text[120];
      liCheckDelimiter@1000000000 : Integer;
      ltxtUserName@1000000003 : Code[100];
    BEGIN

      ltxtUserName := '';

      IF(ptxtUserName <> '') THEN BEGIN
        ltxtUserNameWithDomain := COPYSTR(ptxtUserName, 1, MAXSTRLEN(ltxtUserNameWithDomain));
        liCheckDelimiter := STRPOS( ltxtUserNameWithDomain,'\');
        IF ( liCheckDelimiter > 0 ) THEN BEGIN
          // remove the domain, if any was found.
          ltxtUserName := COPYSTR(ltxtUserNameWithDomain, liCheckDelimiter+1, MAXSTRLEN(ltxtUserName));
        END ELSE BEGIN
          ltxtUserName := COPYSTR(ltxtUserNameWithDomain, 1, MAXSTRLEN(ltxtUserName));
        END;
      END;

      EXIT(ltxtUserName);
    END;

    PROCEDURE getLastLocation@1000000006() : Code[10];
    VAR
      lrecIWXUser@1000000000 : Record 23044514;
    BEGIN
      lrecIWXUser.SETRANGE("User ID",USERID);
      IF( lrecIWXUser.FINDFIRST ) THEN
        EXIT(lrecIWXUser."Default Location");

      EXIT('');
    END;

    PROCEDURE setLastLocation@1000000008(pcodLocation@1000000000 : Code[10]);
    VAR
      lrecIWXUser@1000000001 : Record 23044514;
    BEGIN
      //lrecIWXUser.SETRANGE("User ID",USERID);
      IF lrecIWXUser.GET(USERID) THEN BEGIN
        lrecIWXUser."Default Location" := pcodLocation;
        lrecIWXUser.MODIFY;
      END ELSE BEGIN
        lrecIWXUser.RESET;
        lrecIWXUser.INIT;
        lrecIWXUser.VALIDATE("User ID",USERID);
        lrecIWXUser.VALIDATE("Default Location",pcodLocation);
        lrecIWXUser.INSERT(TRUE);
      END;
    END;

    BEGIN
    {
      ************************
      Copyright Notice
      This objects content is copyright of Insight Works 2011.  All rights reserved.
      Any redistribution or reproduction of part or all of the contents in any form is prohibited.
      ************************
    }
    END.
  }
}

