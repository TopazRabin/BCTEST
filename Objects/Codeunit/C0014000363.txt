OBJECT Codeunit 14000363 EDI Integration
{
  OBJECT-PROPERTIES
  {
    Date=09/24/20;
    Time=[ 8:45:44 AM];
    Modified=Yes;
    Version List=SE0.60.18;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      SalesSetup@1240030000 : Record 311;
      EDISetup@1240020007 : Record 14002367;
      EDISendDocHdr@1240020002 : Record 14002369;
      SalesSetupRetrieved@1240030001 : Boolean;
      Text001@1001 : TextConst 'ENU=must be a Distribution Center when %1 is entered.';
      Text002@1002 : TextConst 'ENU=EDI ASN Send Document created.';
      Text003@1003 : TextConst 'ENU=EDI ASN was not successfully sent.';
      Text004@1004 : TextConst 'ENU=EDI Invoice has already been generated on %1.  Do you wish to send it again?';
      Text005@1005 : TextConst 'ENU=EDI Invoice Send Document created.';
      Text006@1006 : TextConst 'ENU=EDI Invoice Send Error.';
      Text007@1240030002 : TextConst 'ENU=Use E.D.I. Generation 2?';
      Text008@1240020000 : TextConst 'ENU=EDI Transfer Order was generated on %1.  Do you wish to send again?';
      Text009@1240020001 : TextConst 'ENU=EDI Transfer Order Send Document created.';
      Text010@1240020004 : TextConst 'ENU=EDI Return Receipt was generated on %1.  Do you wish to send again?';
      Text011@1240020003 : TextConst 'ENU=EDI Return Receipt created.';
      Text012@1240020006 : TextConst 'ENU=EDI Return Shipment was generated on %1.  Do you wish to send again?';
      Text013@1240020005 : TextConst 'ENU=EDI Return Shipment Send Document created.';
      EDISetupRetrieved@1240020022 : Boolean;
      EDISend@1240020008 : Codeunit 14002356;
      Text014@1240020010 : TextConst 'ENU=EDI Shipment Advice was generated on %1.  Do you wish to send again?';
      Text015@1240020009 : TextConst 'ENU=EDI Shipment Advice Send Document created.';
      Text016@1240020011 : TextConst 'ENU=EDI Order Status Send Document(s) created.';
      Text017@1240020012 : TextConst 'ENU=EDI Order Change Status Send Document(s) created.';
      Text018@1240020013 : TextConst 'ENU=EDI Advance P.O. Acknowledgement Send Document(s) created.';
      Text019@1240020014 : TextConst 'ENU=EDI BSN Send Document created.';
      Text020@1240020015 : TextConst 'ENU=EDI Inventory Advice Send Document created.';
      Text021@1240020016 : TextConst 'ENU=EDI Sales Cr. Memo Send Document created.';
      Text022@1240020017 : TextConst 'ENU=EDI Purchase Payment Send Document created.';
      Text023@1240020018 : TextConst 'ENU=EDI Routing Request Send Document created.';
      Text024@1240020020 : TextConst 'ENU=EDI Purchase Order was generated on %1.  Do you wish to send again?';
      Text025@1240020019 : TextConst 'ENU=EDI Purchase Order Send Document created.';
      Text026@1240020021 : TextConst 'ENU=EDI Electronic Bill of Lading Send Document created.';
      Text027@1240020023 : TextConst 'ENU=EDI Price Catalog Send Document created.';
      Text028@1240020025 : TextConst 'ENU=EDI WHSE Shipping Order was generated on %1.  Do you wish to send again?';
      Text029@1240020024 : TextConst 'ENU=EDI Warehouse Shipping Order Send Document created.';
      Text030@1240020026 : TextConst 'ENU=EDI Transfer Shipment Send Document created.';
      Text035@1240020027 : TextConst 'ENU=EDI Cancellation Ship Notice was generated on %1.  Do you wish to send again?';
      Text036@1240020028 : TextConst 'ENU=EDI Cancellation Ship Notice Order Send Document created.';
      Text041@1240020030 : TextConst 'ENU=EDI Purchase Order Acknowledgement was generated on %1.  Do you wish to send again?';
      Text042@1240020029 : TextConst 'ENU=EDI Purchase Order Acknowledgement Send Document created.';
      Text043@1240020032 : TextConst 'ENU=EDI Warehouse Purchase Advice was generated on %1.  Do you wish to send again?';
      Text044@1240020031 : TextConst 'ENU=EDI Warehouse Purchase Advice Send Document created.';
      Text045@1240020033 : TextConst 'ENU=EDI Quote Response was geneated on %1. Do you wish to send again?';
      Text046@1240020034 : TextConst 'ENU=EDI Quote Response Send Document created.';

    PROCEDURE TradePtnrLookupSalesHdr@8(VAR SalesHeader@1240030000 : Record 36);
    VAR
      EDITradePartner2@1240030002 : Record 14002360;
    BEGIN
      WITH SalesHeader DO BEGIN
        CASE EDIVersion OF
          SalesSetup."EDI Software Version"::"Generation 2":
            BEGIN
              IF EDITradePartner2.GET(SalesHeader."EDI Trade Partner") THEN;
              IF PAGE.RUNMODAL(PAGE::"E.D.I. Trade Partner List",EDITradePartner2) = ACTION::LookupOK THEN
                VALIDATE("EDI Trade Partner",EDITradePartner2."No.");
            END;
        END;
      END;
    END;

    PROCEDURE TradePtnrValidateSalesHdr@13(VAR SalesHeader@1240030000 : Record 36);
    VAR
      EDITradePartner2@1240030002 : Record 14002360;
    BEGIN
      WITH SalesHeader DO BEGIN
        IF "EDI Trade Partner" = '' THEN
          EXIT;

        CASE EDIVersion OF
          SalesSetup."EDI Software Version"::"Generation 2":
            EDITradePartner2.GET("EDI Trade Partner");
        END;
      END;
    END;

    PROCEDURE TradePtnrLookupLoc@12(VAR Location@1240030000 : Record 14);
    VAR
      EDITradePartner2@1240030002 : Record 14002360;
    BEGIN
      WITH Location DO BEGIN
        CASE EDIVersion OF
          SalesSetup."EDI Software Version"::"Generation 2":
            BEGIN
              IF PAGE.RUNMODAL(PAGE::"E.D.I. Trade Partner List",EDITradePartner2) = ACTION::LookupOK THEN
                VALIDATE("EDI Trading Partner ID",EDITradePartner2."No.");
            END;
        END;
      END;
    END;

    PROCEDURE TradePtnrValidateLoc@14(VAR Location@1240030000 : Record 14);
    VAR
      EDITradePartner2@1240030002 : Record 14002360;
    BEGIN
      WITH Location DO BEGIN
        IF "EDI Trading Partner ID" = '' THEN
          EXIT;

        CASE EDIVersion OF
          SalesSetup."EDI Software Version"::"Generation 2":
            EDITradePartner2.GET("EDI Trading Partner ID");
        END;
      END;
    END;

    PROCEDURE SellToCodeLookup@1(VAR SalesHeader@1240030000 : Record 36);
    VAR
      EDICustCrossRef2@1240030002 : Record 14002362;
    BEGIN
      WITH SalesHeader DO BEGIN
        TESTFIELD("EDI Trade Partner");

        CASE EDIVersion OF
          SalesSetup."EDI Software Version"::"Generation 2":
            BEGIN
              EDICustCrossRef2.RESET;
              EDICustCrossRef2.SETRANGE("Trade Partner No.","EDI Trade Partner");
              IF PAGE.RUNMODAL(PAGE::"E.D.I. Cust. Cross References",EDICustCrossRef2) = ACTION::LookupOK THEN
                SalesHeader.VALIDATE("EDI Sell-to Code",EDICustCrossRef2."EDI Sell To Code");
            END;
        END;
      END;
    END;

    PROCEDURE SellToCodeValidate@3(VAR SalesHeader@1240030000 : Record 36);
    VAR
      EDICustCrossRef2@1240030002 : Record 14002362;
      EDITradePartner2@1240030004 : Record 14002360;
    BEGIN
      WITH SalesHeader DO BEGIN
        IF "EDI Sell-to Code" = '' THEN BEGIN
          "External Sell-to No." := '';
          VALIDATE("EDI Ship-to Code",'');
          VALIDATE("EDI Ship-for Code",'');
          EXIT;
        END;

        TESTFIELD("EDI Trade Partner");

        CASE EDIVersion OF
          SalesSetup."EDI Software Version"::"Generation 2":
            BEGIN
              EDICustCrossRef2.RESET;
              EDICustCrossRef2.SETRANGE("Trade Partner No.","EDI Trade Partner");
              EDICustCrossRef2.SETRANGE("EDI Sell To Code","EDI Sell-to Code");
              EDICustCrossRef2.FIND('-');
              IF EDICustCrossRef2."Navision Sell To Code" <> '' THEN
                VALIDATE("Sell-to Customer No.",EDICustCrossRef2."Navision Sell To Code")
              ELSE
                BEGIN
                  EDITradePartner2.GET("EDI Trade Partner");
                  VALIDATE("Sell-to Customer No.",EDITradePartner2."Customer No.");
                END;
              "External Sell-to No." := "EDI Sell-to Code";
              "External Ship-to No." := '';
              "External Ship-for No." := '';

              IF EDICustCrossRef2."Default Dist. Center" <> '' THEN BEGIN
                EDICustCrossRef2.SETRANGE("Trade Partner No.","EDI Trade Partner");
                EDICustCrossRef2.SETRANGE("EDI Sell To Code","EDI Sell-to Code");
                EDICustCrossRef2.SETRANGE("EDI Ship To Code",EDICustCrossRef2."Default Dist. Center");
                EDICustCrossRef2.FIND('-');

                VALIDATE("EDI Ship-to Code",EDICustCrossRef2."EDI Ship To Code");
              END ELSE
                VALIDATE("EDI Ship-to Code",'');
            END;
        END;
      END;
    END;

    PROCEDURE ShipToCodeLookup@4(VAR SalesHeader@1240030000 : Record 36);
    VAR
      EDICustCrossRef2@1240030002 : Record 14002362;
    BEGIN
      WITH SalesHeader DO BEGIN
        TESTFIELD("EDI Trade Partner");

        CASE EDIVersion OF
          SalesSetup."EDI Software Version"::"Generation 2":
            BEGIN
              EDICustCrossRef2.RESET;
              EDICustCrossRef2.SETRANGE("Trade Partner No.","EDI Trade Partner");
              EDICustCrossRef2.SETRANGE("EDI Sell To Code","EDI Sell-to Code");
              IF PAGE.RUNMODAL(PAGE::"E.D.I. Cust. Cross References",EDICustCrossRef2) = ACTION::LookupOK THEN
                VALIDATE("EDI Ship-to Code",EDICustCrossRef2."EDI Ship To Code");
            END;
        END;
      END;
    END;

    PROCEDURE ShipToCodeValidate@5(VAR SalesHeader@1240030000 : Record 36;CurrFieldNo@1240030001 : Integer);
    VAR
      EDICustCrossRef2@1240030003 : Record 14002362;
      Text001@1240020000 : TextConst 'ENU=%1 %2';
    BEGIN
      WITH SalesHeader DO BEGIN
        IF "EDI Ship-to Code" = '' THEN BEGIN
          "External Ship-to No." := '';
          EXIT;
        END;

        TESTFIELD("EDI Trade Partner");

        CASE EDIVersion OF
          SalesSetup."EDI Software Version"::"Generation 2":
            BEGIN
              EDICustCrossRef2.RESET;
              EDICustCrossRef2.SETRANGE("Trade Partner No.","EDI Trade Partner");
              EDICustCrossRef2.SETRANGE("EDI Sell To Code","EDI Sell-to Code");
              EDICustCrossRef2.SETRANGE("EDI Ship To Code","EDI Ship-to Code");
              EDICustCrossRef2.FIND('-');

              IF ("EDI Ship-for Code" <> '') AND (CurrFieldNo = FIELDNO("EDI Ship-to Code")) THEN
                IF EDICustCrossRef2."Ship-to Type" <> EDICustCrossRef2."Ship-to Type"::"Dist. Center" THEN
                  EDICustCrossRef2.FIELDERROR(
                    "Ship-to Type",
                    STRSUBSTNO(
                      Text001,
                      FIELDNAME("EDI Ship-for Code")));

              VALIDATE("Ship-to Code",EDICustCrossRef2."Navision Ship To Code");
              "External Ship-to No." := EDICustCrossRef2."EDI Ship To Code";
            END;
        END;
      END;
    END;

    PROCEDURE ShipForCodeLookup@6(VAR SalesHeader@1240030000 : Record 36);
    VAR
      EDICustCrossRef2@1240030002 : Record 14002362;
    BEGIN
      WITH SalesHeader DO BEGIN
        TESTFIELD("EDI Trade Partner");

        CASE EDIVersion OF
          SalesSetup."EDI Software Version"::"Generation 2":
            BEGIN
              EDICustCrossRef2.RESET;
              EDICustCrossRef2.SETRANGE("Trade Partner No.","EDI Trade Partner");
              EDICustCrossRef2.SETRANGE("EDI Sell To Code","EDI Sell-to Code");
              IF PAGE.RUNMODAL(PAGE::"E.D.I. Cust. Cross References",EDICustCrossRef2) = ACTION::LookupOK THEN
                VALIDATE("EDI Ship-for Code",EDICustCrossRef2."EDI Ship To Code");
            END;
        END;
      END;
    END;

    PROCEDURE ShipForCodeValidate@7(VAR SalesHeader@1240030000 : Record 36);
    VAR
      EDICustCrossRef2@1240030002 : Record 14002362;
    BEGIN
      WITH SalesHeader DO BEGIN
        IF "EDI Ship-for Code" = '' THEN BEGIN
          "External Ship-for No." := '';
          VALIDATE("EDI Ship-to Code",'');
          EXIT;
        END;

        TESTFIELD("EDI Trade Partner");

        CASE EDIVersion OF
          SalesSetup."EDI Software Version"::"Generation 2":
            BEGIN
              EDICustCrossRef2.RESET;
              EDICustCrossRef2.SETRANGE("Trade Partner No.","EDI Trade Partner");
              EDICustCrossRef2.SETRANGE("EDI Sell To Code","EDI Sell-to Code");
              EDICustCrossRef2.SETRANGE("EDI Ship To Code","EDI Ship-for Code");
              EDICustCrossRef2.FIND('-');

              IF "EDI Sell-to Code" = '' THEN
                VALIDATE("Sell-to Customer No.",EDICustCrossRef2."Navision Sell To Code");

              VALIDATE("Ship-for Code",EDICustCrossRef2."Navision Ship To Code");
              "External Ship-for No." := EDICustCrossRef2."EDI Ship To Code";

              IF EDICustCrossRef2."Default Dist. Center" <> '' THEN BEGIN
                EDICustCrossRef2.RESET;
                EDICustCrossRef2.SETRANGE("Trade Partner No.","EDI Trade Partner");
                EDICustCrossRef2.SETRANGE("EDI Sell To Code","EDI Sell-to Code");
                EDICustCrossRef2.SETRANGE("EDI Ship To Code",EDICustCrossRef2."Default Dist. Center");
                EDICustCrossRef2.FIND('-');
              END;

              VALIDATE("EDI Ship-to Code",EDICustCrossRef2."EDI Ship To Code");
            END;
        END;
      END;
    END;

    PROCEDURE BuyFromCodeLookup@1240020026(VAR PurchHeader@1240030000 : Record 38);
    VAR
      EDIVendCrossRef@1240020000 : Record 14002366;
    BEGIN
      WITH PurchHeader DO BEGIN
        TESTFIELD("EDI Trade Partner");

        CASE EDIVersion OF
          SalesSetup."EDI Software Version"::"Generation 2":
            BEGIN
             EDIVendCrossRef.RESET;
              EDIVendCrossRef.SETRANGE("Trade Partner No.","EDI Trade Partner");
              IF PAGE.RUNMODAL(PAGE::"E.D.I. Vend. Cross References",EDIVendCrossRef) = ACTION::LookupOK THEN
                PurchHeader.VALIDATE("EDI Buy-from Code",EDIVendCrossRef."EDI Buy-from Code");
            END;
        END;
      END;
    END;

    PROCEDURE BuyFromCodeValidate@1240020025(VAR PurchHeader@1240030000 : Record 38);
    VAR
      EDIVendCrossRef@1240020000 : Record 14002366;
      EDITradePartner@1240020001 : Record 14002360;
    BEGIN
      WITH PurchHeader DO BEGIN
        IF "EDI Buy-from Code" = '' THEN
          EXIT;
        TESTFIELD("EDI Trade Partner");

        CASE EDIVersion OF
          SalesSetup."EDI Software Version"::"Generation 2":
            BEGIN
              EDIVendCrossRef.RESET;
              EDIVendCrossRef.SETRANGE("Trade Partner No.","EDI Trade Partner");
              EDIVendCrossRef.SETRANGE("EDI Buy-from Code","EDI Buy-from Code");
              EDIVendCrossRef.FIND('-');
              IF EDIVendCrossRef."Navision Buy-from Code" <> '' THEN
                VALIDATE("Buy-from Vendor No.",EDIVendCrossRef."Navision Buy-from Code")
              ELSE
                BEGIN
                  EDITradePartner.GET("EDI Trade Partner");
                  VALIDATE("Buy-from Vendor No.",EDITradePartner."Vendor No.");
                END;
            END;
        END;
      END;
    END;

    PROCEDURE SalesLineItemNoLookup@1240020031(VAR SalesLine@1240020000 : Record 37);
    VAR
      SalesHeader@1240020001 : Record 36;
      EDITradePartnerItem@1240020002 : Record 14002364;
      ManualOrder@1240020003 : Boolean;
    BEGIN
      WITH SalesLine DO BEGIN
        IF SalesHeader.GET("Document Type","Document No.") THEN BEGIN
          SalesHeader.TESTFIELD("EDI Order");
          SalesHeader.TESTFIELD("EDI Trade Partner");

          EDITradePartnerItem.RESET;
          EDITradePartnerItem.SETRANGE("Trade Partner No.",SalesHeader."EDI Trade Partner");
          EDITradePartnerItem.SETRANGE("Navision Item No.","No.");
          IF EDITradePartnerItem.FIND('-') THEN
            EDITradePartnerItem.SETRANGE("Navision Item No.")
          ELSE
            EDITradePartnerItem.SETRANGE("Navision Item No.");
          IF PAGE.RUNMODAL(0,EDITradePartnerItem,EDITradePartnerItem."Navision Item No.") = ACTION::LookupOK THEN BEGIN
            ManualOrder := ManualOrderCheck(SalesHeader);
            "EDI Item Cross Ref." := EDITradePartnerItem."Partner Item No.";
            VALIDATE("No.",EDITradePartnerItem."Navision Item No.");
            IF ManualOrder = FALSE THEN
              VALIDATE("EDI Line Type","EDI Line Type"::Recreate);
          END;
        END;
      END;
    END;

    PROCEDURE SalesLineVariantCodeLookup@1240020033(VAR SalesLine@1240020000 : Record 37);
    VAR
      SalesHeader@1240020001 : Record 36;
      EDITradePartnerItem@1240020002 : Record 14002364;
    BEGIN
      WITH SalesLine DO BEGIN
        IF SalesHeader.GET("Document Type","Document No.") THEN BEGIN
          EDITradePartnerItem.RESET;
          EDITradePartnerItem.SETRANGE("Trade Partner No.",SalesHeader."EDI Trade Partner");
          EDITradePartnerItem.SETRANGE("Navision Item No.","No.");
          IF EDITradePartnerItem.FIND('-') THEN
            EDITradePartnerItem.SETRANGE("Navision Item No.")
          ELSE
            EDITradePartnerItem.SETRANGE("Navision Item No.");
          IF PAGE.RUNMODAL(0,EDITradePartnerItem,EDITradePartnerItem."Navision Item No.") = ACTION::LookupOK THEN
            VALIDATE("EDI Item Cross Ref.",EDITradePartnerItem."Partner Item No.");
        END;
      END;
    END;

    PROCEDURE SalesLineUOMLookup@1240020032(VAR SalesLine@1240020000 : Record 37);
    VAR
      SalesHeader@1240020001 : Record 36;
      TradePartnerUnitofMeasure@1240020002 : Record 14002365;
      ManualOrder@1240020003 : Boolean;
    BEGIN
      WITH SalesLine DO BEGIN
        IF SalesHeader.GET("Document Type","Document No.") THEN BEGIN
          TradePartnerUnitofMeasure.RESET;
          TradePartnerUnitofMeasure.SETCURRENTKEY("Trade Partner No.","EDI Unit of Measure");
          TradePartnerUnitofMeasure.SETRANGE("Trade Partner No.",SalesHeader."EDI Trade Partner");
          TradePartnerUnitofMeasure.SETRANGE("Navision Item No.","No.");
          TradePartnerUnitofMeasure.SETRANGE("Navision Variant Code","Variant Code");
          TradePartnerUnitofMeasure.SETRANGE("Order Unit of Measure","Unit of Measure Code");
          IF TradePartnerUnitofMeasure.FIND('-') THEN BEGIN
            TradePartnerUnitofMeasure.SETRANGE("Navision Item No.");
            TradePartnerUnitofMeasure.SETRANGE("Navision Variant Code");
            TradePartnerUnitofMeasure.SETRANGE("Order Unit of Measure");
          END ELSE BEGIN
            TradePartnerUnitofMeasure.SETRANGE("Navision Item No.");
            TradePartnerUnitofMeasure.SETRANGE("Navision Variant Code");
            TradePartnerUnitofMeasure.SETRANGE("Order Unit of Measure");
          END;
          IF PAGE.RUNMODAL(0,TradePartnerUnitofMeasure,TradePartnerUnitofMeasure."Order Unit of Measure") = ACTION::LookupOK THEN BEGIN
            ManualOrder := ManualOrderCheck(SalesHeader);
            "EDI Unit of Measure" := TradePartnerUnitofMeasure."EDI Unit of Measure";
          END;
        END;
      END;
    END;

    PROCEDURE SetEDIItemCrossRef@14000357(SalesHeader@1240020001 : Record 36;VAR SalesLine@1240020000 : Record 37);
    VAR
      EDITradePartnerItem@14000351 : Record 14002364;
      TradePartnerUnitofMeasure@14000352 : Record 14002365;
    BEGIN
      WITH SalesLine DO BEGIN
        EDITradePartnerItem.RESET;
        EDITradePartnerItem.SETRANGE("Trade Partner No.",SalesHeader."EDI Trade Partner");
        EDITradePartnerItem.SETRANGE("Navision Item No.","No.");
        IF EDITradePartnerItem.FIND('-') THEN BEGIN
          "EDI Item Cross Ref." := EDITradePartnerItem."Partner Item No.";
          IF EDITradePartnerItem."Navision Variant Code" <> '' THEN BEGIN
            VALIDATE("Variant Code",EDITradePartnerItem."Navision Variant Code");
          END;
          TradePartnerUnitofMeasure.RESET;
          TradePartnerUnitofMeasure.SETCURRENTKEY("Trade Partner No.","EDI Unit of Measure");
          TradePartnerUnitofMeasure.SETRANGE("Trade Partner No.",SalesHeader."EDI Trade Partner");
          TradePartnerUnitofMeasure.SETRANGE("Navision Item No.","No.");
          IF NOT TradePartnerUnitofMeasure.FIND('-') THEN BEGIN
            TradePartnerUnitofMeasure.SETRANGE("Navision Item No.",'');
            TradePartnerUnitofMeasure.SETRANGE("Order Unit of Measure","Unit of Measure Code");
            IF TradePartnerUnitofMeasure.FIND('-') THEN
              "EDI Unit of Measure" := TradePartnerUnitofMeasure."EDI Unit of Measure"
            ELSE
              "EDI Unit of Measure" := '';
          END ELSE
            "EDI Unit of Measure" := TradePartnerUnitofMeasure."EDI Unit of Measure";
        END ELSE
          "EDI Item Cross Ref." := '';
      END;
    END;

    PROCEDURE SetEDIVariantCode@1240020030(SalesHeader@1240020000 : Record 36;VAR SalesLine@1240020001 : Record 37);
    VAR
      EDITradePartnerItem@14000351 : Record 14002364;
      TradePartnerUnitofMeasure@14000352 : Record 14002365;
    BEGIN
      WITH SalesLine DO BEGIN
        "EDI Variant Code" := '';
        "EDI Unit of Measure" := '';

        EDITradePartnerItem.RESET;
        EDITradePartnerItem.SETRANGE("Trade Partner No.",SalesHeader."EDI Trade Partner");
        EDITradePartnerItem.SETRANGE("Navision Item No.","No.");
        EDITradePartnerItem.SETRANGE("Navision Variant Code","Variant Code");
        IF EDITradePartnerItem.FIND('-') THEN BEGIN
          "EDI Variant Code" := EDITradePartnerItem."Partner Variant Code";
          TradePartnerUnitofMeasure.RESET;
          TradePartnerUnitofMeasure.SETCURRENTKEY("Trade Partner No.","EDI Unit of Measure");
          TradePartnerUnitofMeasure.SETRANGE("Trade Partner No.",SalesHeader."EDI Trade Partner");
          TradePartnerUnitofMeasure.SETRANGE("Navision Item No.","No.");
          TradePartnerUnitofMeasure.SETRANGE("Navision Variant Code","Variant Code");
          IF NOT TradePartnerUnitofMeasure.FIND('-') THEN BEGIN
            TradePartnerUnitofMeasure.SETRANGE("Navision Item No.",'');
            TradePartnerUnitofMeasure.SETRANGE("Navision Variant Code",'');
            TradePartnerUnitofMeasure.SETRANGE("Order Unit of Measure","Unit of Measure Code");
            IF TradePartnerUnitofMeasure.FIND('-') THEN
              "EDI Unit of Measure" := TradePartnerUnitofMeasure."EDI Unit of Measure";
          END ELSE
            "EDI Unit of Measure" := TradePartnerUnitofMeasure."EDI Unit of Measure";
        END;
      END;
    END;

    PROCEDURE ResetEDIValues@14000353(SalesHeader@1240020000 : Record 36;VAR SalesLine@1240020001 : Record 37;PrevSalesLine@1240020002 : Record 37);
    VAR
      EDIRecDocHdr@14000352 : Record 14002358;
      EDIDocument@14000354 : Record 14002353;
      DiscountUnitPrice@14000351 : Decimal;
      ResetEDIValues@14000353 : Boolean;
    BEGIN
      WITH SalesLine DO BEGIN
        IF EDIRecDocHdr.GET(SalesHeader."EDI Internal Doc. No." ) THEN BEGIN
          WITH EDIRecDocHdr DO
            IF EDIDocument.GET(
              "Trade Partner No.","Navision Document","EDI Document No.","EDI Version",EDIDocument.Type::Import)
             THEN
               ResetEDIValues := EDIDocument."Retain EDI Value on Revalidate"
             ELSE
               ResetEDIValues := FALSE;
          IF (ResetEDIValues) AND (PrevSalesLine."EDI Segment Group" <> 0) THEN BEGIN
            "EDI Ship Confirmed" := PrevSalesLine."EDI Ship Confirmed";
            "EDI Item Cross Ref." := PrevSalesLine."EDI Item Cross Ref.";
            "EDI Unit of Measure" := PrevSalesLine."EDI Unit of Measure";
            "EDI Unit Price" := PrevSalesLine."EDI Unit Price";
            "EDI Segment Group" := PrevSalesLine."EDI Segment Group";
            "EDI Original Qty." := PrevSalesLine."EDI Original Qty.";
            "EDI Status Pending" := PrevSalesLine."EDI Status Pending";
            "EDI Release No." := PrevSalesLine."EDI Release No.";
            "EDI Ship Req. Date" := PrevSalesLine."EDI Ship Req. Date";
            "EDI Kanban No." := PrevSalesLine."EDI Kanban No.";
            "EDI Line Type" := PrevSalesLine."EDI Line Type"::Recreate;
            "EDI Line Status" := PrevSalesLine."EDI Line Status";
            "EDI Cumulative Quantity" := PrevSalesLine."EDI Cumulative Quantity";
            "EDI Forecast Begin Date" := PrevSalesLine."EDI Forecast Begin Date";
            "EDI Forecast End Date" := PrevSalesLine."EDI Forecast End Date";
            "EDI Code" := PrevSalesLine."EDI Code";
            "EDI ID" := PrevSalesLine."EDI ID";
            "EDI Variant Code" := PrevSalesLine."EDI Variant Code";
            IF "Unit Price" <> "EDI Unit Price" THEN BEGIN
              IF "Line Discount %" = 0 THEN
                "EDI Price Discrepancy" := TRUE
              ELSE BEGIN
                DiscountUnitPrice :=
                  "Unit Price" - ("Unit Price" * ("Line Discount %" / 100));
                DiscountUnitPrice := ROUND(DiscountUnitPrice,0.01);
                IF DiscountUnitPrice <> "EDI Unit Price" THEN
                  "EDI Price Discrepancy" := TRUE;
              END;
            END;
            "EDI DateTime" := PrevSalesLine."EDI DateTime";
            "EDI Time" := PrevSalesLine."EDI Time";
            VALIDATE("EDI Line Type","EDI Line Type"::Recreate);
          END;
        END;
      END;
    END;

    PROCEDURE ManualOrderCheck@1240020034(SalesHeader@1240020000 : Record 36) ManualOrder : Boolean;
    VAR
      EDIRecDocHdr@1240020001 : Record 14002358;
    BEGIN
      IF SalesHeader."EDI Internal Doc. No." = '' THEN
          ManualOrder := TRUE
        ELSE BEGIN
          IF EDIRecDocHdr.GET(SalesHeader."EDI Internal Doc. No." ) THEN
            ManualOrder := FALSE
          ELSE
            ManualOrder := TRUE;
        END;
      EXIT(ManualOrder);
    END;

    PROCEDURE GetEDISetup@1240020022();
    BEGIN
      IF NOT EDISetupRetrieved THEN BEGIN
        EDISetup.GET;
        EDISetupRetrieved := TRUE;
      END;
    END;

    PROCEDURE EDIVersion@2() Resp@1240030000 : Integer;
    BEGIN
      GetSalesSetup;
      EXIT(SalesSetup."EDI Software Version");
    END;

    PROCEDURE SendASN@10(BillofLading@1240030000 : Record 14000822);
    VAR
      EDIASNSend@1240030002 : Codeunit 14002358;
    BEGIN
      EDISetup.GET;

      WITH BillofLading DO BEGIN
        CASE EDIVersion OF
          SalesSetup."EDI Software Version"::"Generation 2":
            BEGIN
              CLEAR(EDIASNSend);
              EDIASNSend.ExportASN(BillofLading,'E_SLSASN',FALSE);
              COMMIT;

              IF EDISetup."Export Manual Send EDI File" THEN BEGIN
                EDISendDocHdr.RESET;
                EDISendDocHdr.SETCURRENTKEY("Navision Document","Document No.","Sent Date");
                EDISendDocHdr.SETRANGE("Navision Document",'E_SLSASN');
                EDISendDocHdr.SETRANGE("Document No.","No.");
                IF EDISendDocHdr.FIND('-') THEN
                  IF VerifyManualExport(EDISendDocHdr) THEN
                    EDISend.ExportSingleDoc(EDISendDocHdr)
                  ELSE
                    MESSAGE(Text002);
              END ELSE
                MESSAGE(Text002)
            END;
        END;
      END;
    END;

    PROCEDURE SendEDIInvoice@9(SalesInvHdr@1240030000 : Record 112);
    VAR
      EDISalesInvoiceSend@1240030002 : Codeunit 14002360;
      Text001@1240020001 : TextConst 'ENU=Zero dollar EDI invoices are not sent.';
    BEGIN
      EDISetup.GET;

      WITH SalesInvHdr DO BEGIN
        TESTFIELD("EDI Invoice");
        IF SalesInvHdr."EDI Invoice Generated" THEN
          IF NOT CONFIRM(
            Text004,
            FALSE,SalesInvHdr."EDI Inv. Gen. Date") THEN
              EXIT;

        CASE EDIVersion OF
          SalesSetup."EDI Software Version"::"Generation 2":
            BEGIN
              CLEAR(EDISalesInvoiceSend);
              EDISalesInvoiceSend.RUN(SalesInvHdr);
              COMMIT;

              SalesInvHdr.CALCFIELDS(Amount);
              IF SalesInvHdr.Amount = 0 THEN BEGIN
                MESSAGE(Text001);
                EXIT;
              END;

              IF EDISetup."Export Manual Send EDI File" THEN BEGIN
                EDISendDocHdr.RESET;
                EDISendDocHdr.SETCURRENTKEY("Navision Document","Document No.","Sent Date");
                EDISendDocHdr.SETRANGE("Navision Document",'E_SLSINV');
                EDISendDocHdr.SETRANGE("Document No.","No.");
                IF EDISendDocHdr.FIND('-') THEN
                  IF VerifyManualExport(EDISendDocHdr) THEN
                    EDISend.ExportSingleDoc(EDISendDocHdr)
                  ELSE
                   MESSAGE(Text005);
              END ELSE
                MESSAGE(Text005)
            END;
        END;
      END;
    END;

    PROCEDURE ViewRecElements@11(EDIIntDocNo@1240030000 : Code[20]);
    VAR
      EDIRecDocFields2@1240030002 : Record 14002359;
    BEGIN
      CASE EDIVersion OF
        SalesSetup."EDI Software Version"::"Generation 2":
          BEGIN
            EDIRecDocFields2.SETCURRENTKEY("Internal Doc. No.","Line No.");
            EDIRecDocFields2.SETRANGE("Internal Doc. No.",EDIIntDocNo);
            EDIRecDocFields2.SETRANGE(Viewable,TRUE);
            PAGE.RUNMODAL(PAGE::"E.D.I. Receive Elements",EDIRecDocFields2);
          END;
      END;
    END;

    PROCEDURE SendEDIReturnReceipt@1240020001(ReturnReceiptHdr@1240030000 : Record 6660);
    VAR
      EDISalesReturnReceiptSend@1240030002 : Codeunit 14002409;
    BEGIN
      EDISetup.GET;

      WITH ReturnReceiptHdr DO BEGIN
        TESTFIELD("EDI Order");
        IF "EDI Return Receipt Generated" THEN
          IF NOT CONFIRM(
            Text010,
            FALSE,"EDI Return Receipt Gen. Date") THEN
              EXIT;
         CLEAR(EDISalesReturnReceiptSend);
         EDISalesReturnReceiptSend.RUN(ReturnReceiptHdr);
         COMMIT;

         IF EDISetup."Export Manual Send EDI File" THEN BEGIN
           EDISendDocHdr.RESET;
           EDISendDocHdr.SETCURRENTKEY("Navision Document","Document No.","Sent Date");
           EDISendDocHdr.SETRANGE("Navision Document",'E_SLSRMA');
           EDISendDocHdr.SETRANGE("Document No.","No.");
           EDISendDocHdr.SETRANGE("Sent Date",0D);
           IF EDISendDocHdr.FIND('-') THEN
            IF VerifyManualExport(EDISendDocHdr) THEN
              EDISend.ExportSingleDoc(EDISendDocHdr)
            ELSE
             MESSAGE(Text011);
         END ELSE
           MESSAGE(Text011)
      END;
    END;

    PROCEDURE SendEDIReturnShipment@1240020004(ReturnShipmentHdr@1240030000 : Record 6650);
    VAR
      EDIReturnShipmentSend@1240030002 : Codeunit 14050804;
    BEGIN
      EDISetup.GET;

      WITH ReturnShipmentHdr DO BEGIN
        TESTFIELD("EDI Order");
        IF "EDI Return Shipment Generated" THEN
          IF NOT CONFIRM(
            Text012,
            FALSE,"EDI Return Shipment Gen. Date") THEN
              EXIT;
         CLEAR(EDIReturnShipmentSend);
         EDIReturnShipmentSend.RUN(ReturnShipmentHdr);
         COMMIT;

         IF EDISetup."Export Manual Send EDI File" THEN BEGIN
           EDISendDocHdr.RESET;
           EDISendDocHdr.SETCURRENTKEY("Navision Document","Document No.","Sent Date");
           EDISendDocHdr.SETRANGE("Navision Document",'E_PURRMA');
           EDISendDocHdr.SETRANGE("Document No.","No.");
           EDISendDocHdr.SETRANGE("Sent Date",0D);
           IF EDISendDocHdr.FIND('-') THEN
            IF VerifyManualExport(EDISendDocHdr) THEN
              EDISend.ExportSingleDoc(EDISendDocHdr)
            ELSE
             MESSAGE(Text013);
         END ELSE
           MESSAGE(Text013)
      END;
    END;

    PROCEDURE SendEDITransferShipment@1240020024(TransferShipmentHeader@1240020000 : Record 5744);
    VAR
      EDISendTransferShipment@1240030002 : Codeunit 14050911;
    BEGIN
      EDISetup.GET;

      WITH TransferShipmentHeader DO BEGIN
        TESTFIELD("EDI Order");
        IF "EDI Transfer Shipment Gen." THEN
          IF NOT CONFIRM(
            Text008,
            FALSE,"EDI Transfer Shipment Gen Date") THEN
              EXIT;
         CLEAR(EDISendTransferShipment);
         EDISendTransferShipment.RUN(TransferShipmentHeader);
         COMMIT;

         IF EDISetup."Export Manual Send EDI File" THEN BEGIN
           EDISendDocHdr.RESET;
           EDISendDocHdr.SETCURRENTKEY("Navision Document","Document No.","Sent Date");
           EDISendDocHdr.SETRANGE("Navision Document",'E_TFRSHP');
           EDISendDocHdr.SETRANGE("Document No.","No.");
           EDISendDocHdr.SETRANGE("Sent Date",0D);
           IF EDISendDocHdr.FIND('-') THEN
            IF VerifyManualExport(EDISendDocHdr) THEN
              REPEAT
                EDISend.ExportSingleDoc(EDISendDocHdr);
              UNTIL EDISendDocHdr.NEXT = 0
            ELSE
              MESSAGE(Text030);
         END ELSE
           MESSAGE(Text030)
      END;
    END;

    PROCEDURE SendEDITransfer@1240020000(TransferHeader@1240020000 : Record 5740);
    VAR
      EDISendTransferOrder@1240030002 : Codeunit 14050901;
    BEGIN
      EDISetup.GET;

      WITH TransferHeader DO BEGIN
        TESTFIELD("EDI Order");
        TESTFIELD(Status,TransferHeader.Status::Released);
        IF "EDI Transfer Order Generated" THEN
          IF NOT CONFIRM(
            Text008,
            FALSE,"EDI Transfer Order Gen. Date") THEN
              EXIT;
         CLEAR(EDISendTransferOrder);
         EDISendTransferOrder.RUN(TransferHeader);
         COMMIT;

         IF EDISetup."Export Manual Send EDI File" THEN BEGIN
           EDISendDocHdr.RESET;
           EDISendDocHdr.SETCURRENTKEY("Navision Document","Document No.","Sent Date");
           EDISendDocHdr.SETRANGE("Navision Document",'E_TFRORD');
           EDISendDocHdr.SETRANGE("Document No.","No.");
           EDISendDocHdr.SETRANGE("Sent Date",0D);
           IF EDISendDocHdr.FIND('-') THEN
            IF VerifyManualExport(EDISendDocHdr) THEN
              REPEAT
                EDISend.ExportSingleDoc(EDISendDocHdr);
              UNTIL EDISendDocHdr.NEXT = 0
            ELSE
              MESSAGE(Text009);
         END ELSE
           MESSAGE(Text009)
      END;
    END;

    PROCEDURE SendEDIShipmentAdvice@1240020002(SalesShipmentHdr@1240020000 : Record 110);
    VAR
      EDISendWhseShipAdvice@1240020001 : Codeunit 14000372;
    BEGIN
      EDISetup.GET;

      WITH SalesShipmentHdr DO BEGIN
        TESTFIELD("EDI Order");
        TESTFIELD("Shipment Release");
        IF "EDI Shipment Advice Generated" THEN
          IF NOT CONFIRM(
            Text014,
            FALSE,"EDI Shipment Advice Gen. Date")
          THEN
            EXIT;

        CLEAR(EDISendWhseShipAdvice);
        EDISendWhseShipAdvice.ExportShipmentAdvice(SalesShipmentHdr);
        COMMIT;

        IF EDISetup."Export Manual Send EDI File" THEN BEGIN
          EDISendDocHdr.RESET;
          EDISendDocHdr.SETCURRENTKEY("Navision Document","Document No.","Sent Date");
          EDISendDocHdr.SETRANGE("Navision Document",'E_SHPADV');
          EDISendDocHdr.SETRANGE("Document No.","No.");
          EDISendDocHdr.SETRANGE("Sent Date",0D);
          IF EDISendDocHdr.FIND('-') THEN
            IF VerifyManualExport(EDISendDocHdr) THEN
              EDISend.ExportSingleDoc(EDISendDocHdr)
            ELSE
              MESSAGE(Text015);
        END ELSE
          MESSAGE(Text015);
      END;
    END;

    PROCEDURE SendAdvanceOrderStatus@1240020003(OrderStatusHdr@1240030000 : Record 14002400);
    VAR
      EDISalesOrderStatusSend@1240030002 : Codeunit 14002400;
    BEGIN
      EDISetup.GET;

      WITH OrderStatusHdr DO BEGIN
        CLEAR(EDISalesOrderStatusSend);
        EDISalesOrderStatusSend.SendOrderStatus(OrderStatusHdr);
        COMMIT;

        IF EDISetup."Export Manual Send EDI File" THEN BEGIN
          EDISendDocHdr.RESET;
          EDISendDocHdr.SETCURRENTKEY("Navision Document","Document No.","Sent Date");
          EDISendDocHdr.SETRANGE("Navision Document",'E_SLSSTA');
          EDISendDocHdr.SETRANGE("Trade Partner No.","Trade Partner Code");
          EDISendDocHdr.SETRANGE("Internal Doc No.","Internal Doc. No.");
          EDISendDocHdr.SETRANGE("Document No.","Source Doc. No.");
          EDISendDocHdr.SETRANGE("Sent Date",0D);
          IF EDISendDocHdr.FIND('-') THEN
            IF VerifyManualExport(EDISendDocHdr) THEN
              EDISend.ExportSingleDoc(EDISendDocHdr)
            ELSE
             MESSAGE(Text016);
        END ELSE
          MESSAGE(Text016)
      END;
    END;

    PROCEDURE SendOrderChangeStatus@1240020005(OrderStatusHdr@1240030000 : Record 14002400);
    VAR
      EDISalesOrderStatusSend@1240030002 : Codeunit 14002400;
    BEGIN
      EDISetup.GET;

      WITH OrderStatusHdr DO BEGIN
        CLEAR(EDISalesOrderStatusSend);
        EDISalesOrderStatusSend.SendOrderStatus(OrderStatusHdr);
        COMMIT;

        IF EDISetup."Export Manual Send EDI File" THEN BEGIN
          EDISendDocHdr.RESET;
          EDISendDocHdr.SETCURRENTKEY("Navision Document","Document No.","Sent Date");
          EDISendDocHdr.SETRANGE("Navision Document",'E_SLSPOC');
          EDISendDocHdr.SETRANGE("Trade Partner No.","Trade Partner Code");
          EDISendDocHdr.SETRANGE("Internal Doc No.","Internal Doc. No.");
          EDISendDocHdr.SETRANGE("Document No.","Source Doc. No.");
          EDISendDocHdr.SETRANGE("Sent Date",0D);
          IF EDISendDocHdr.FIND('-') THEN
            IF VerifyManualExport(EDISendDocHdr) THEN
              EDISend.ExportSingleDoc(EDISendDocHdr)
            ELSE
             MESSAGE(Text017);
        END ELSE
          MESSAGE(Text017)
      END;
    END;

    PROCEDURE SendAdvancePOAckStatus@1240020006(OrderStatusHdr@1240030000 : Record 14002400);
    VAR
      EDISalesOrderStatusSend@1240030002 : Codeunit 14002400;
    BEGIN
      EDISetup.GET;

      WITH OrderStatusHdr DO BEGIN
        CLEAR(EDISalesOrderStatusSend);
        EDISalesOrderStatusSend.SendOrderStatus(OrderStatusHdr);
        COMMIT;

        IF EDISetup."Export Manual Send EDI File" THEN BEGIN
          EDISendDocHdr.RESET;
          EDISendDocHdr.SETCURRENTKEY("Navision Document","Document No.","Sent Date");
          EDISendDocHdr.SETRANGE("Navision Document",'E_ADVPOA');
          EDISendDocHdr.SETRANGE("Trade Partner No.","Trade Partner Code");
          EDISendDocHdr.SETRANGE("Internal Doc No.","Internal Doc. No.");
          EDISendDocHdr.SETRANGE("Document No.","Source Doc. No.");
          EDISendDocHdr.SETRANGE("Sent Date",0D);
          IF EDISendDocHdr.FIND('-') THEN
            IF VerifyManualExport(EDISendDocHdr) THEN
              EDISend.ExportSingleDoc(EDISendDocHdr)
            ELSE
             MESSAGE(Text018);
        END ELSE
          MESSAGE(Text018)
      END;
    END;

    PROCEDURE SendBSN@1240020008(BillofLading@1240030000 : Record 14000822);
    VAR
      EDIASNSend@1240030002 : Codeunit 14002358;
    BEGIN
      EDISetup.GET;

      WITH BillofLading DO BEGIN
        CLEAR(EDIASNSend);
        EDIASNSend.ExportASN(BillofLading,'E_SLSBSN',FALSE);
        COMMIT;

        IF EDISetup."Export Manual Send EDI File" THEN BEGIN
          EDISendDocHdr.RESET;
          EDISendDocHdr.SETCURRENTKEY("Navision Document","Document No.","Sent Date");
          EDISendDocHdr.SETRANGE("Navision Document",'E_SLSBSN');
          EDISendDocHdr.SETRANGE("Document No.","No.");
          EDISendDocHdr.SETRANGE("Sent Date",0D);
          IF EDISendDocHdr.FIND('-') THEN
            IF VerifyManualExport(EDISendDocHdr) THEN
              EDISend.ExportSingleDoc(EDISendDocHdr)
            ELSE
             MESSAGE(Text019);
          END ELSE
            MESSAGE(Text019);
      END;
    END;

    PROCEDURE SendElectronicBOL@1240020013(BillofLading@1240030000 : Record 14000822);
    VAR
      EDISendElectronicBOL@1240030002 : Codeunit 14050903;
    BEGIN
      EDISetup.GET;

      WITH BillofLading DO BEGIN
        CLEAR(EDISendElectronicBOL);
        EDISendElectronicBOL.ExportElectronicBOL(BillofLading);
        COMMIT;

        IF EDISetup."Export Manual Send EDI File" THEN BEGIN
          EDISendDocHdr.RESET;
          EDISendDocHdr.SETCURRENTKEY("Navision Document","Document No.","Sent Date");
          EDISendDocHdr.SETRANGE("Navision Document",'E_EMCBOL');
          EDISendDocHdr.SETRANGE("Document No.","No.");
          EDISendDocHdr.SETRANGE("Sent Date",0D);
          IF EDISendDocHdr.FIND('-') THEN
            IF VerifyManualExport(EDISendDocHdr) THEN
              EDISend.ExportSingleDoc(EDISendDocHdr)
            ELSE
             MESSAGE(Text026);
          END ELSE
            MESSAGE(Text026);
      END;
    END;

    PROCEDURE SendInventoryAdvice@1240020007(InventoryAdviceHdr@1240030000 : Record 14002413);
    VAR
      SendEDIInventoryDocument@1240030002 : Codeunit 14002413;
    BEGIN
      EDISetup.GET;

      WITH InventoryAdviceHdr DO BEGIN
        TESTFIELD(Released,TRUE);
        CLEAR(SendEDIInventoryDocument);
        SendEDIInventoryDocument.ExportInventoryAdvice(InventoryAdviceHdr,FALSE);
        COMMIT;

        IF EDISetup."Export Manual Send EDI File" THEN BEGIN
          EDISendDocHdr.RESET;
          EDISendDocHdr.SETCURRENTKEY("Navision Document","Document No.","Sent Date");
          EDISendDocHdr.SETRANGE("Navision Document",'E_INVADV');
          EDISendDocHdr.SETRANGE("Document No.","No.");
          EDISendDocHdr.SETRANGE("Sent Date",0D);
          IF EDISendDocHdr.FIND('-') THEN
            IF VerifyManualExport(EDISendDocHdr) THEN
              EDISend.ExportSingleDoc(EDISendDocHdr)
            ELSE
             MESSAGE(Text020);
          END ELSE
            MESSAGE(Text020);
      END;
    END;

    PROCEDURE SendEDISalesCrMemo@1240020009(SalesCrMemoHdr@1240030000 : Record 114);
    VAR
      EDISalesCrMemoSend@1240030002 : Codeunit 14002405;
    BEGIN
      EDISetup.GET;

      WITH SalesCrMemoHdr DO BEGIN
        TESTFIELD("EDI Order");
        CLEAR(EDISalesCrMemoSend);
        EDISalesCrMemoSend.ExportSalesCrMemo(SalesCrMemoHdr);
        COMMIT;

        IF EDISetup."Export Manual Send EDI File" THEN BEGIN
          EDISendDocHdr.RESET;
          EDISendDocHdr.SETCURRENTKEY("Navision Document","Document No.","Sent Date");
          EDISendDocHdr.SETRANGE("Navision Document",'E_SLSCRM');
          EDISendDocHdr.SETRANGE("Document No.","No.");
          EDISendDocHdr.SETRANGE("Sent Date",0D);
          IF EDISendDocHdr.FIND('-') THEN
            IF VerifyManualExport(EDISendDocHdr) THEN
              EDISend.ExportSingleDoc(EDISendDocHdr)
            ELSE
             MESSAGE(Text021);
          END ELSE
            MESSAGE(Text021);
      END;
    END;

    PROCEDURE SendPaymentAdvice@1240020010(EDIPurchPmtAdvice@1240030000 : Record 14050801);
    VAR
      SendPurchPmtAdvice@1240020000 : Codeunit 14050801;
    BEGIN
      EDISetup.GET;

      WITH EDIPurchPmtAdvice DO BEGIN
        TESTFIELD(Released,TRUE);
        CLEAR(SendPurchPmtAdvice);
        SendPurchPmtAdvice.SendPaymentAdvice(EDIPurchPmtAdvice,FALSE);
        COMMIT;

        IF EDISetup."Export Manual Send EDI File" THEN BEGIN
          EDISendDocHdr.RESET;
          EDISendDocHdr.SETCURRENTKEY("Navision Document","Document No.","Sent Date");
          EDISendDocHdr.SETRANGE("Navision Document",'E_PURPRA');
          EDISendDocHdr.SETRANGE("Document No.","No.");
          EDISendDocHdr.SETRANGE("Sent Date",0D);
          IF EDISendDocHdr.FIND('-') THEN
            IF VerifyManualExport(EDISendDocHdr) THEN
              EDISend.ExportSingleDoc(EDISendDocHdr)
            ELSE
             MESSAGE(Text022);
          END ELSE
            MESSAGE(Text022);
      END;
    END;

    PROCEDURE SendRoutingRequest@1240020011(RoutingRequestHdr@1240030000 : Record 14002402);
    VAR
      RoutingReqMgmt@1240020000 : Codeunit 14002402;
    BEGIN
      EDISetup.GET;

      WITH RoutingRequestHdr DO BEGIN
        CLEAR(RoutingReqMgmt);
        RoutingReqMgmt.SendRoutingReq(RoutingRequestHdr);
        COMMIT;

        IF EDISetup."Export Manual Send EDI File" THEN BEGIN
          EDISendDocHdr.RESET;
          EDISendDocHdr.SETCURRENTKEY("Navision Document","Document No.","Sent Date");
          EDISendDocHdr.SETRANGE("Navision Document",'E_ROUTEREQ');
          EDISendDocHdr.SETRANGE("Document No.","No.");
          EDISendDocHdr.SETRANGE("Sent Date",0D);
          IF EDISendDocHdr.FIND('-') THEN
            IF VerifyManualExport(EDISendDocHdr) THEN
              EDISend.ExportSingleDoc(EDISendDocHdr)
            ELSE
             MESSAGE(Text023);
          END ELSE
            MESSAGE(Text023);
      END;
    END;

    PROCEDURE SendPurchaseOrder@1240020012(PurchaseHeader@1240030000 : Record 38);
    VAR
      EDIPurchaseOrderSend@1240020000 : Codeunit 14002357;
    BEGIN
      EDISetup.GET;

      WITH PurchaseHeader DO BEGIN
        TESTFIELD("EDI Order");
        TESTFIELD(Status,Status::Released);
        IF "EDI PO Generated" THEN
          IF NOT CONFIRM(
            Text024,
            FALSE,"EDI PO Gen. Date") THEN
              EXIT;
        CLEAR(EDIPurchaseOrderSend);
        EDIPurchaseOrderSend.SetProcessID(1);
        EDIPurchaseOrderSend.ExportPO(PurchaseHeader);
        COMMIT;

        IF EDISetup."Export Manual Send EDI File" THEN BEGIN
          EDISendDocHdr.RESET;
          EDISendDocHdr.SETCURRENTKEY("Navision Document","Document No.","Sent Date");
          EDISendDocHdr.SETRANGE("Navision Document",'E_PURORD');
          EDISendDocHdr.SETRANGE("Document No.","No.");
          EDISendDocHdr.SETRANGE("Sent Date",0D);
          IF EDISendDocHdr.FIND('-') THEN
            IF VerifyManualExport(EDISendDocHdr) THEN
              EDISend.ExportSingleDoc(EDISendDocHdr)
            ELSE
             MESSAGE(Text025);
          END ELSE
            MESSAGE(Text025);
      END;
    END;

    PROCEDURE SendWarehouseShippingOrder@1240020023(SalesHdr@1240030000 : Record 36);
    VAR
      EDISalesOrderSend@1240030002 : Codeunit 14002359;
    BEGIN
      EDISetup.GET;

      WITH SalesHdr DO BEGIN
        TESTFIELD("Location Code");
        TESTFIELD("EDI Order");
        TESTFIELD("EDI Released");
        IF SalesHdr."EDI WHSE Shp. Gen" THEN
          IF NOT CONFIRM(
            Text028,
            FALSE,SalesHdr."EDI WHSE Shp. Gen Date")
          THEN
            EXIT;

          CLEAR(EDISalesOrderSend);
          EDISalesOrderSend.SetProcessID(2);
          EDISalesOrderSend.CreateWHSEShipOrder(SalesHdr);
          COMMIT;

          IF EDISetup."Export Manual Send EDI File" THEN BEGIN
            EDISendDocHdr.RESET;
            EDISendDocHdr.SETCURRENTKEY("Navision Document","Document No.","Sent Date");
            EDISendDocHdr.SETRANGE("Navision Document",'E_SLSWSA');
            EDISendDocHdr.SETRANGE("Document No.","No.");
            IF EDISendDocHdr.FIND('-') THEN
              IF VerifyManualExport(EDISendDocHdr) THEN
                EDISend.ExportSingleDoc(EDISendDocHdr)
              ELSE
                MESSAGE(Text029);
          END ELSE
            MESSAGE(Text029)
      END;
    END;

    PROCEDURE SendPOAcknowledgement@1240020027(SalesHdr@1240030000 : Record 36);
    VAR
      EDISalesOrderSend@1240030002 : Codeunit 14002359;
    BEGIN
      EDISetup.GET;

      WITH SalesHdr DO BEGIN
        TESTFIELD("EDI Released");
        TESTFIELD("EDI Order");
        IF SalesHdr."EDI Ack. Generated" THEN
          IF NOT CONFIRM(
            Text041,
            FALSE,SalesHdr."EDI Ack. Gen. Date")
          THEN
            EXIT;

          CLEAR(EDISalesOrderSend);
          EDISalesOrderSend.SetProcessID(1);
          EDISalesOrderSend.CreatePOAck(SalesHdr);
          COMMIT;

          IF EDISetup."Export Manual Send EDI File" THEN BEGIN
            EDISendDocHdr.RESET;
            EDISendDocHdr.SETCURRENTKEY("Navision Document","Document No.","Sent Date");
            EDISendDocHdr.SETRANGE("Navision Document",'E_SLSPOA');
            EDISendDocHdr.SETRANGE("Document No.","No.");
            IF EDISendDocHdr.FIND('-') THEN
              IF VerifyManualExport(EDISendDocHdr) THEN
                EDISend.ExportSingleDoc(EDISendDocHdr)
              ELSE
                MESSAGE(Text042);
          END ELSE
            MESSAGE(Text042)
      END;
    END;

    PROCEDURE SendCancellationAdvice@1240020029(SalesHdr@1240030000 : Record 36);
    VAR
      EDISalesOrderSend@1240030002 : Codeunit 14002359;
    BEGIN
      EDISetup.GET;

      WITH SalesHdr DO BEGIN
        TESTFIELD("EDI Order");
        TESTFIELD("EDI Cancellation Advice");
        IF SalesHdr."EDI Cancellation Generated" THEN
          IF NOT CONFIRM(
            Text035,
            FALSE,SalesHdr."EDI Cancellation Advice Date")
          THEN
            EXIT;

          CLEAR(EDISalesOrderSend);
          EDISalesOrderSend.SetProcessID(3);
          EDISalesOrderSend.CreatePOAck(SalesHdr);
          COMMIT;

          IF EDISetup."Export Manual Send EDI File" THEN BEGIN
            EDISendDocHdr.RESET;
            EDISendDocHdr.SETCURRENTKEY("Navision Document","Document No.","Sent Date");
            EDISendDocHdr.SETRANGE("Navision Document",'E_ZEROSN');
            EDISendDocHdr.SETRANGE("Document No.","No.");
            IF EDISendDocHdr.FIND('-') THEN
              IF VerifyManualExport(EDISendDocHdr) THEN
                EDISend.ExportSingleDoc(EDISendDocHdr)
              ELSE
                MESSAGE(Text036);
          END ELSE
            MESSAGE(Text036)
      END;
    END;

    PROCEDURE SendWarehousePurchaseAdvice@1240020028(PurchaseHeader@1240030000 : Record 38);
    VAR
      EDIPurchaseOrderSend@1240020000 : Codeunit 14002357;
    BEGIN
      EDISetup.GET;

      WITH PurchaseHeader DO BEGIN
        TESTFIELD("EDI Order");
        TESTFIELD("EDI Released");
        IF "EDI Ship Adv. Gen." THEN
          IF NOT CONFIRM(
            Text043,
            FALSE,"EDI Ship Adv. Gen Date") THEN
              EXIT;
        CLEAR(EDIPurchaseOrderSend);
        EDIPurchaseOrderSend.SetProcessID(2);
        EDIPurchaseOrderSend.ExportWHSEShipAdvice(PurchaseHeader);
        COMMIT;

        IF EDISetup."Export Manual Send EDI File" THEN BEGIN
          EDISendDocHdr.RESET;
          EDISendDocHdr.SETCURRENTKEY("Navision Document","Document No.","Sent Date");
          EDISendDocHdr.SETRANGE("Navision Document",'E_PURWSA');
          EDISendDocHdr.SETRANGE("Document No.","No.");
          EDISendDocHdr.SETRANGE("Sent Date",0D);
          IF EDISendDocHdr.FIND('-') THEN
            IF VerifyManualExport(EDISendDocHdr) THEN
              EDISend.ExportSingleDoc(EDISendDocHdr)
            ELSE
             MESSAGE(Text044);
          END ELSE
            MESSAGE(Text044);
      END;
    END;

    PROCEDURE SendQuoteResponse@1240020035(SalesHdr@1240030000 : Record 36);
    VAR
      EDISalesOrderSend@1240030002 : Codeunit 14002359;
    BEGIN
      EDISetup.GET;

      WITH SalesHdr DO BEGIN
        TESTFIELD("EDI Response to Request Req.");
        TESTFIELD(Status,SalesHdr.Status::Released);
        TESTFIELD("EDI Order");
        IF SalesHdr."EDI Response Generated" THEN
          IF NOT CONFIRM(
            Text045,
            FALSE,SalesHdr."EDI Response Generated Date")
          THEN
            EXIT;

          CLEAR(EDISalesOrderSend);
          EDISalesOrderSend.SetProcessID(4);
          EDISalesOrderSend.CreatePOAck(SalesHdr);
          COMMIT;

          IF EDISetup."Export Manual Send EDI File" THEN BEGIN
            EDISendDocHdr.RESET;
            EDISendDocHdr.SETCURRENTKEY("Navision Document","Document No.","Sent Date");
            EDISendDocHdr.SETRANGE("Navision Document",'E_SLSQUO');
            EDISendDocHdr.SETRANGE("Document No.","No.");
            IF EDISendDocHdr.FIND('-') THEN
              IF VerifyManualExport(EDISendDocHdr) THEN
                EDISend.ExportSingleDoc(EDISendDocHdr)
              ELSE
                MESSAGE(Text046);
          END ELSE
            MESSAGE(Text046)
      END;
    END;

    PROCEDURE TransferFromCodeLookup@1240020015(VAR TransferHeader@1240020000 : Record 5740);
    VAR
      EDIGeneralCrossRef@1240020001 : Record 14000377;
    BEGIN
      WITH TransferHeader DO BEGIN
        TESTFIELD("EDI Trade Partner");

        EDIGeneralCrossRef.RESET;
        EDIGeneralCrossRef.SETCURRENTKEY("Trade Partner","Cross Reference");
        EDIGeneralCrossRef.SETRANGE("Trade Partner","EDI Trade Partner");
        EDIGeneralCrossRef.SETRANGE("Cross Reference",16);
        IF EDIGeneralCrossRef.FIND('-') THEN BEGIN
          IF PAGE.RUNMODAL(
            PAGE::"E.D.I. General Cross Refs.",EDIGeneralCrossRef) = ACTION::LookupOK
          THEN
            IF EDIGeneralCrossRef."NAV Value" <> '' THEN
              TransferHeader.VALIDATE("EDI Transfer-from Code",EDIGeneralCrossRef."EDI Value");
        END ELSE BEGIN
          EDIGeneralCrossRef.RESET;
          EDIGeneralCrossRef.SETCURRENTKEY("Trade Partner","Cross Reference");
          EDIGeneralCrossRef.SETRANGE("Trade Partner",'');
          EDIGeneralCrossRef.SETRANGE("Cross Reference",16);
          IF PAGE.RUNMODAL(
            PAGE::"E.D.I. General Cross Refs.",EDIGeneralCrossRef) = ACTION::LookupOK
          THEN
            IF EDIGeneralCrossRef."NAV Value" <> '' THEN
              TransferHeader.VALIDATE("EDI Transfer-from Code",EDIGeneralCrossRef."EDI Value");
        END;
      END;
    END;

    PROCEDURE TransferFromCodeValidate@1240020016(VAR TransferHeader@1240020001 : Record 5740);
    VAR
      EDIGeneralCrossRef@1240020000 : Record 14000377;
    BEGIN
      WITH TransferHeader DO BEGIN

        IF "EDI Transfer-from Code" = '' THEN
          EXIT;

        TESTFIELD("EDI Trade Partner");

        EDIGeneralCrossRef.RESET;
        EDIGeneralCrossRef.SETCURRENTKEY("Trade Partner","Cross Reference");
        EDIGeneralCrossRef.SETRANGE("Trade Partner","EDI Trade Partner");
        EDIGeneralCrossRef.SETRANGE("Cross Reference",16);
        IF EDIGeneralCrossRef.FIND('-') THEN BEGIN
          IF EDIGeneralCrossRef."NAV Value" <> '' THEN
            TransferHeader.VALIDATE("Transfer-from Code",EDIGeneralCrossRef."NAV Value");
        END ELSE BEGIN
          EDIGeneralCrossRef.RESET;
          EDIGeneralCrossRef.SETCURRENTKEY("Trade Partner","Cross Reference");
          EDIGeneralCrossRef.SETRANGE("Trade Partner",'');
          EDIGeneralCrossRef.SETRANGE("Cross Reference",16);
          IF EDIGeneralCrossRef.FIND('-') THEN BEGIN
            IF EDIGeneralCrossRef."NAV Value" <> '' THEN
              TransferHeader.VALIDATE("Transfer-from Code",EDIGeneralCrossRef."NAV Value");
          END;
        END;
      END;
    END;

    PROCEDURE TransferToCodeValidate@1240020014(VAR TransferHeader@1240020001 : Record 5740);
    VAR
      EDIGeneralCrossRef@1240020000 : Record 14000377;
    BEGIN
      WITH TransferHeader DO BEGIN

        IF "EDI Transfer-to Code" = '' THEN
          EXIT;

        TESTFIELD("EDI Trade Partner");

        EDIGeneralCrossRef.RESET;
        EDIGeneralCrossRef.SETCURRENTKEY("Trade Partner","Cross Reference");
        EDIGeneralCrossRef.SETRANGE("Trade Partner","EDI Trade Partner");
        EDIGeneralCrossRef.SETRANGE("Cross Reference",17);
        IF EDIGeneralCrossRef.FIND('-') THEN BEGIN
          IF EDIGeneralCrossRef."NAV Value" <> '' THEN
            TransferHeader.VALIDATE("Transfer-to Code",EDIGeneralCrossRef."NAV Value");
        END ELSE BEGIN
          EDIGeneralCrossRef.RESET;
          EDIGeneralCrossRef.SETCURRENTKEY("Trade Partner","Cross Reference");
          EDIGeneralCrossRef.SETRANGE("Trade Partner",'');
          EDIGeneralCrossRef.SETRANGE("Cross Reference",17);
          IF EDIGeneralCrossRef.FIND('-') THEN BEGIN
            IF EDIGeneralCrossRef."NAV Value" <> '' THEN
              TransferHeader.VALIDATE("Transfer-to Code",EDIGeneralCrossRef."NAV Value");
          END;
        END;
      END;
    END;

    PROCEDURE TransferToCodeLookup@1240020017(VAR TransferHeader@1240020000 : Record 5740);
    VAR
      EDIGeneralCrossRef@1240020001 : Record 14000377;
    BEGIN
      WITH TransferHeader DO BEGIN
        TESTFIELD("EDI Trade Partner");

        EDIGeneralCrossRef.RESET;
        EDIGeneralCrossRef.SETCURRENTKEY("Trade Partner","Cross Reference");
        EDIGeneralCrossRef.SETRANGE("Trade Partner","EDI Trade Partner");
        EDIGeneralCrossRef.SETRANGE("Cross Reference",17);
        IF EDIGeneralCrossRef.FIND('-') THEN BEGIN
          IF PAGE.RUNMODAL(
            PAGE::"E.D.I. General Cross Refs.",EDIGeneralCrossRef) = ACTION::LookupOK
          THEN
            IF EDIGeneralCrossRef."NAV Value" <> '' THEN
              TransferHeader.VALIDATE("EDI Transfer-to Code",EDIGeneralCrossRef."EDI Value");
        END ELSE BEGIN
          EDIGeneralCrossRef.RESET;
          EDIGeneralCrossRef.SETCURRENTKEY("Trade Partner","Cross Reference");
          EDIGeneralCrossRef.SETRANGE("Trade Partner",'');
          EDIGeneralCrossRef.SETRANGE("Cross Reference",17);
          IF PAGE.RUNMODAL(
            PAGE::"E.D.I. General Cross Refs.",EDIGeneralCrossRef) = ACTION::LookupOK
          THEN
            IF EDIGeneralCrossRef."NAV Value" <> '' THEN
              TransferHeader.VALIDATE("EDI Transfer-to Code",EDIGeneralCrossRef."EDI Value");
        END;
      END;
    END;

    PROCEDURE TransferInTransitCodeValidate@1240020019(VAR TransferHeader@1240030000 : Record 5740);
    VAR
      EDIGeneralCrossRef@1240020000 : Record 14000377;
    BEGIN
      WITH TransferHeader DO BEGIN

        IF "EDI In-Transit Code" = '' THEN
          EXIT;

        TESTFIELD("EDI Trade Partner");

        EDIGeneralCrossRef.RESET;
        EDIGeneralCrossRef.SETCURRENTKEY("Trade Partner","Cross Reference");
        EDIGeneralCrossRef.SETRANGE("Trade Partner","EDI Trade Partner");
        EDIGeneralCrossRef.SETRANGE("Cross Reference",20);
        IF EDIGeneralCrossRef.FIND('-') THEN BEGIN
          IF EDIGeneralCrossRef."NAV Value" <> '' THEN
            TransferHeader.VALIDATE("In-Transit Code",EDIGeneralCrossRef."NAV Value");
        END ELSE BEGIN
          EDIGeneralCrossRef.RESET;
          EDIGeneralCrossRef.SETCURRENTKEY("Trade Partner","Cross Reference");
          EDIGeneralCrossRef.SETRANGE("Trade Partner",'');
          EDIGeneralCrossRef.SETRANGE("Cross Reference",20);
          IF EDIGeneralCrossRef.FIND('-') THEN BEGIN
            IF EDIGeneralCrossRef."NAV Value" <> '' THEN
              TransferHeader.VALIDATE("In-Transit Code",EDIGeneralCrossRef."NAV Value");
          END;
        END;
      END;
    END;

    PROCEDURE TransferIntransitCodeLookup@1240020018(VAR TransferHeader@1240020000 : Record 5740);
    VAR
      EDIGeneralCrossRef@1240020001 : Record 14000377;
    BEGIN
      WITH TransferHeader DO BEGIN
        TESTFIELD("EDI Trade Partner");

        EDIGeneralCrossRef.RESET;
        EDIGeneralCrossRef.SETCURRENTKEY("Trade Partner","Cross Reference");
        EDIGeneralCrossRef.SETRANGE("Trade Partner","EDI Trade Partner");
        EDIGeneralCrossRef.SETRANGE("Cross Reference",20);
        IF EDIGeneralCrossRef.FIND('-') THEN BEGIN
          IF PAGE.RUNMODAL(
            PAGE::"E.D.I. General Cross Refs.",EDIGeneralCrossRef) = ACTION::LookupOK
          THEN
            IF EDIGeneralCrossRef."NAV Value" <> '' THEN
              TransferHeader.VALIDATE("EDI In-Transit Code",EDIGeneralCrossRef."EDI Value");
        END ELSE BEGIN
          EDIGeneralCrossRef.RESET;
          EDIGeneralCrossRef.SETCURRENTKEY("Trade Partner","Cross Reference");
          EDIGeneralCrossRef.SETRANGE("Trade Partner",'');
          EDIGeneralCrossRef.SETRANGE("Cross Reference",20);
          IF PAGE.RUNMODAL(
            PAGE::"E.D.I. General Cross Refs.",EDIGeneralCrossRef) = ACTION::LookupOK
          THEN
            IF EDIGeneralCrossRef."NAV Value" <> '' THEN
              TransferHeader.VALIDATE("EDI In-Transit Code",EDIGeneralCrossRef."EDI Value");
        END;
      END;
    END;

    PROCEDURE SendPriceCatalog@1240020021(InventoryAdviceHdr@1240030000 : Record 14002413);
    VAR
      SendEDIInventoryDocument@1240030002 : Codeunit 14002413;
    BEGIN
      EDISetup.GET;

      WITH InventoryAdviceHdr DO BEGIN
        TESTFIELD(Released,TRUE);
        CLEAR(SendEDIInventoryDocument);
        SendEDIInventoryDocument.ExportInventoryAdvice(InventoryAdviceHdr,FALSE);
        COMMIT;

        IF EDISetup."Export Manual Send EDI File" THEN BEGIN
          EDISendDocHdr.RESET;
          EDISendDocHdr.SETCURRENTKEY("Navision Document","Document No.","Sent Date");
          EDISendDocHdr.SETRANGE("Navision Document",'E_PRICAT');
          EDISendDocHdr.SETRANGE("Document No.","No.");
          EDISendDocHdr.SETRANGE("Sent Date",0D);
          IF EDISendDocHdr.FIND('-') THEN
            IF VerifyManualExport(EDISendDocHdr) THEN
              EDISend.ExportSingleDoc(EDISendDocHdr)
            ELSE
             MESSAGE(Text027);
        END ELSE
          MESSAGE(Text027);
      END;
    END;

    PROCEDURE VerifyManualExport@1240020020(EDISendDocHdr@1240020000 : Record 14002369) Export : Boolean;
    VAR
      EDIDocument@1240020001 : Record 14002353;
    BEGIN
      WITH EDISendDocHdr DO BEGIN
        EDIDocument.SETRANGE("Trade Partner No.","Trade Partner No.");
        EDIDocument.SETFILTER(Status,'%1|%2',EDIDocument.Status::Test,EDIDocument.Status::Production);
        EDIDocument.SETRANGE(Type,EDIDocument.Type::Export);
        EDIDocument.SETRANGE("Navision Document","Navision Document");
        EDIDocument.SETRANGE("EDI Document No.","EDI Document No.");
        IF EDIDocument.FIND('-') THEN
          IF EDIDocument."Disable Manual Send Export" THEN
            EXIT(FALSE)
          ELSE
            EXIT(TRUE);
      END;
    END;

    PROCEDURE GetSalesSetup@15();
    VAR
      Gen2EDITradePartner@1240030001 : Record 14002360;
      GEN2EDISetup@1240030003 : Record 14002367;
    BEGIN
      IF SalesSetupRetrieved THEN
        EXIT;

      SalesSetup.GET;
      SalesSetupRetrieved := TRUE;

      IF SalesSetup."EDI Software Version" = SalesSetup."EDI Software Version"::"Generation 2" THEN
        IF NOT Gen2EDITradePartner.FIND('-') THEN
          IF NOT GEN2EDISetup.FIND('-') THEN
            IF CONFIRM(Text007) THEN BEGIN
              SalesSetup."EDI Software Version" := SalesSetup."EDI Software Version"::"2";
              SalesSetup.MODIFY(TRUE);
              COMMIT;
            END;
    END;

    PROCEDURE TradePtnrLookupSalesHdrArchive@1240030001(VAR SalesHdrArchive@1240030000 : Record 5107);
    VAR
      EDITradePartner2@1240030002 : Record 14002360;
    BEGIN
      WITH SalesHdrArchive DO BEGIN
        CASE EDIVersion OF
          SalesSetup."EDI Software Version"::"Generation 2":
            PAGE.RUNMODAL(PAGE::"E.D.I. Trade Partner List",EDITradePartner2);
        END;
      END;
    END;

    PROCEDURE ArchiveSellToCodeLookup@1240030007(VAR SalesHdrArchive@1240030000 : Record 5107);
    VAR
      EDICustCrossRef2@1240030002 : Record 14002362;
    BEGIN
      WITH SalesHdrArchive DO BEGIN
        TESTFIELD("EDI Trade Partner");

        CASE EDIVersion OF
          SalesSetup."EDI Software Version"::"Generation 2":
            BEGIN
              EDICustCrossRef2.RESET;
              EDICustCrossRef2.SETRANGE("Trade Partner No.","EDI Trade Partner");
              PAGE.RUNMODAL(PAGE::"E.D.I. Cust. Cross References",EDICustCrossRef2);
            END;
        END;
      END;
    END;

    PROCEDURE ArchiveShipToCodeLookup@1240030005(VAR SalesHdrArchive@1240030000 : Record 5107);
    VAR
      EDICustCrossRef2@1240030002 : Record 14002362;
    BEGIN
      WITH SalesHdrArchive DO BEGIN
        TESTFIELD("EDI Trade Partner");

        CASE EDIVersion OF
          SalesSetup."EDI Software Version"::"Generation 2":
            BEGIN
              EDICustCrossRef2.RESET;
              EDICustCrossRef2.SETRANGE("Trade Partner No.","EDI Trade Partner");
              EDICustCrossRef2.SETRANGE("EDI Sell To Code","EDI Sell-to Code");
              PAGE.RUNMODAL(PAGE::"E.D.I. Cust. Cross References",EDICustCrossRef2);
            END;
        END;
      END;
    END;

    PROCEDURE ArchiveShipForCodeLookup@1240030003(VAR SalesHdrArchive@1240030000 : Record 5107);
    VAR
      EDICustCrossRef2@1240030002 : Record 14002362;
    BEGIN
      WITH SalesHdrArchive DO BEGIN
        TESTFIELD("EDI Trade Partner");

        CASE EDIVersion OF
          SalesSetup."EDI Software Version"::"Generation 2":
            BEGIN
              EDICustCrossRef2.RESET;
              EDICustCrossRef2.SETRANGE("Trade Partner No.","EDI Trade Partner");
              EDICustCrossRef2.SETRANGE("EDI Sell To Code","EDI Sell-to Code");
              PAGE.RUNMODAL(PAGE::"E.D.I. Cust. Cross References",EDICustCrossRef2);
            END;
        END;
      END;
    END;

    PROCEDURE EDISellToCodeValidate@1000000001(VAR SalesHeader@1240030000 : Record 36);
    VAR
      EDICustCrossRef2@1240030002 : Record 14002362;
      EDITradePartner2@1240030004 : Record 14002360;
    BEGIN
      // <TPZ848>
      WITH SalesHeader DO BEGIN
        IF "Sell-to Customer No." = '' THEN BEGIN
          "External Sell-to No." := '';
          "EDI Ship-to Code" := '';
          "External Ship-to No." := '';
          "EDI Ship-for Code" := '';
          "External Ship-for No." := '';
          EXIT;
        END;

        IF "EDI Trade Partner" = '' THEN
          EXIT;

        CASE EDIVersion OF
          SalesSetup."EDI Software Version"::"Generation 2":
            BEGIN
              EDICustCrossRef2.RESET;
              EDICustCrossRef2.SETCURRENTKEY("Navision Sell To Code");
              EDICustCrossRef2.SETRANGE("Trade Partner No.","EDI Trade Partner");
              EDICustCrossRef2.SETRANGE("Navision Sell To Code","Sell-to Customer No.");
              IF EDICustCrossRef2.FINDFIRST THEN BEGIN
                "EDI Sell-to Code" := EDICustCrossRef2."EDI Sell To Code";
                "EDI Ship-to Code" := EDICustCrossRef2."EDI Sell To Code";
                "External Sell-to No." := EDICustCrossRef2."EDI Sell To Code";

                IF EDICustCrossRef2."Default Dist. Center" <> '' THEN BEGIN
                  EDICustCrossRef2.SETRANGE("Trade Partner No.","EDI Trade Partner");
                  EDICustCrossRef2.SETRANGE("EDI Sell To Code","EDI Sell-to Code");
                  EDICustCrossRef2.SETRANGE("EDI Ship To Code",EDICustCrossRef2."Default Dist. Center");
                  IF EDICustCrossRef2.FINDFIRST THEN
                    "EDI Ship-to Code" := EDICustCrossRef2."EDI Ship To Code";
                END;
              END;
            END;
        END;
      END;
      // </TPZ848>
    END;

    PROCEDURE EDIShipToCodeValidate@1000000000(VAR SalesHeader@1240030000 : Record 36);
    VAR
      EDICustCrossRef2@1240030003 : Record 14002362;
    BEGIN
      // <TPZ848>

      WITH SalesHeader DO BEGIN
        IF "Ship-to Code" = '' THEN BEGIN
          "External Ship-to No." := '';
          EXIT;
        END;

        IF ("EDI Trade Partner" = '') OR ("Sell-to Customer No." = '')  THEN
          EXIT;

        CASE EDIVersion OF
          SalesSetup."EDI Software Version"::"Generation 2":
            BEGIN
              EDICustCrossRef2.RESET;
              EDICustCrossRef2.SETCURRENTKEY("Trade Partner No.","Navision Sell To Code","Navision Ship To Code","Effective Date");
              EDICustCrossRef2.SETRANGE("Trade Partner No.","EDI Trade Partner");
              EDICustCrossRef2.SETRANGE("Navision Sell To Code","Sell-to Customer No.");
              EDICustCrossRef2.SETRANGE("Navision Ship To Code","Ship-to Code");
              IF EDICustCrossRef2.FINDFIRST THEN BEGIN
                "EDI Sell-to Code" := EDICustCrossRef2."EDI Sell To Code";
                "EDI Ship-to Code" := EDICustCrossRef2."EDI Ship To Code";
                "External Ship-to No." := EDICustCrossRef2."EDI Ship To Code";
              END;
            END;
        END;
      END;
      // </TPZ848>
    END;

    BEGIN
    {
      2015-07-16 TPZ848 TAKHMETO
        EDISellToCodeValidate and EDIShipToCodeValidate functions have been created
    }
    END.
  }
}

