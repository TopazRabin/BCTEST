OBJECT Codeunit 14123651 ES Role Builder Management
{
  OBJECT-PROPERTIES
  {
    Date=04/30/18;
    Time=12:00:00 PM;
    Version List=ES1.41.51;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text007@1007 : TextConst 'ENU=Process #1################################################';
      Text008@1008 : TextConst 'ENU=Adding Recording Permissions';
      Text013@1013 : TextConst 'ENU=Adding recording to Permissions\';
      Text014@1014 : TextConst 'ENU=Updating TableData permissions';
      Text015@1015 : TextConst 'ENU=Updating Object permissions';
      Text016@1016 : TextConst 'ENU=%1 records inserted and %2 records modified.';
      Text017@1017 : TextConst 'ENU=Adding Recording to Permission Set Detail\';
      Text018@1018 : TextConst 'ENU=Inserting Permission Set Recording';
      Text019@1019 : TextConst 'ENU=Recording %1 inserted in Permission Set Detail %2.';
      Text020@1020 : TextConst 'ENU=Adding Recording to Builder Permissions\';
      Text021@1021 : TextConst 'ENU=Updating all Permission Set Details\';
      Text022@1022 : TextConst 'ENU=Permission Set %1 %2';
      Text023@1023 : TextConst 'ENU=%1 Permission Set Details updated.';
      Text024@1024 : TextConst 'ENU=Updating Permission Set Detail\';
      Text025@1025 : TextConst 'ENU=Updating Permission Set';
      Text026@1026 : TextConst 'ENU=Deleting Permissions';
      Text027@1027 : TextConst 'ENU=Adding Builder Permissions';
      Text028@1028 : TextConst 'ENU=%1 Permissions inserted in permission set %2.';
      Text032@1032 : TextConst 'ENU=Permission Set Detail %1 already exists.';
      Text033@1033 : TextConst 'ENU=Creating Permission Set Detail from Permission Set\';
      Text034@1034 : TextConst 'ENU=Create Permission Set Detail';
      Text035@1035 : TextConst 'ENU=Create Builder Permissions';
      Text036@1036 : TextConst 'ENU=Permission Set Detail %1 inserted with %2 permissions.';
      Text037@1037 : TextConst 'ENU=Creating Permission Set Detail from All Permission Sets\';
      Text038@1038 : TextConst 'ENU=%1 Permission Set Details have been inserted.';
      Text012@1012 : TextConst 'ENU=Permission Set Detail %1 already exists.';
      Text039@1240520008 : TextConst 'ENU=Updating Recording Summary Permissions\';
      Text040@1240520009 : TextConst 'ENU=Removing Summary Permissions.';
      Text041@1240520010 : TextConst 'ENU=Summarizing permission sets';
      Text042@1240520011 : TextConst 'ENU=Updating Summary Permissions.';
      Text043@1240520012 : TextConst 'ENU=%3 Summary Permissions inserted for %1 %2.';
      Text044@1240520013 : TextConst 'ENU=%1 Recordings updated.';
      Text029@1029 : TextConst 'ENU=\Calculation for %1 requires to calculate all.';

    LOCAL PROCEDURE AddRecordingPermission@1240520009(ESRecording@1240520008 : Record 14123651;VAR ESRecordingPerm@1240520009 : Record 14123652;VAR InsertedRecords@1240520011 : Integer);
    VAR
      ESRecordingPerm2@1240520010 : Record 14123652;
    BEGIN
      ESRecordingPerm2 := ESRecordingPerm;

      IF NOT ESRecordingPerm.GET(
               ESRecording.Code,ESRecordingPerm."Object Type",
               ESRecordingPerm."Object ID")
      THEN BEGIN
        ESRecordingPerm."Recording Code" := ESRecording.Code;
        ESRecordingPerm.INSERT(TRUE);

        InsertedRecords := InsertedRecords + 1;
      END ELSE BEGIN
        ESRecordingPerm."Read Required" :=
          ESRecordingPerm2."Read Required" OR ESRecordingPerm."Read Required";
        ESRecordingPerm."Insert Required" :=
          ESRecordingPerm2."Insert Required" OR ESRecordingPerm."Insert Required";
        ESRecordingPerm."Modify Required" :=
          ESRecordingPerm2."Modify Required" OR ESRecordingPerm."Modify Required";
        ESRecordingPerm."Delete Required" :=
          ESRecordingPerm2."Delete Required" OR ESRecordingPerm."Delete Required";
        ESRecordingPerm."Execute Required" :=
          ESRecordingPerm2."Execute Required" OR ESRecordingPerm."Execute Required";
        ESRecordingPerm."Calculate Flowfield Required" :=
          ESRecordingPerm2."Calculate Flowfield Required" OR
          ESRecordingPerm."Calculate Flowfield Required";
        ESRecordingPerm.Origin := ESRecordingPerm2.Origin::Recorded;

        ESRecordingPerm.MODIFY(TRUE);
      END;
    END;

    PROCEDURE AddRecordingToRolePerm@1240520010(ESRole@1240520008 : Record 14123505;RecordingCode@1240520018 : Code[30];ShowStatus@1240520009 : Boolean);
    VAR
      ESRecording@1240520010 : Record 14123651;
      ESRecordingPerm@1240520011 : Record 14123652;
      ESRolePerm@1240520012 : Record 14123506;
      ESObjectProperty@1240520017 : Record 14123522;
      ESSecuritySetup@1240520019 : Record 14123521;
      Window@1240520016 : Dialog;
      RecordModified@1240520013 : Boolean;
      ModifiedRecords@1240520014 : Integer;
      InsertedRecords@1240520015 : Integer;
    BEGIN
      ESRole.TESTFIELD("Role ID");

      ESSecuritySetup.GET;

      IF RecordingCode <> '' THEN
        ESRecording.GET(RecordingCode)
      ELSE
        IF PAGE.RUNMODAL(0,ESRecording) <> ACTION::LookupOK THEN
          EXIT;

      ESRecording.TESTFIELD(Code);

      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text013) + Text007);

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text014);
      ESRecordingPerm.RESET;
      ESRecordingPerm.SETRANGE("Recording Code",ESRecording.Code);
      ESRecordingPerm.SETRANGE("Object Type",ESRecordingPerm."Object Type"::TableData);
      IF ESRecordingPerm.FIND('-') THEN
        REPEAT
          IF ESRolePerm.GET(
               ESRole."Role ID",ESRecordingPerm."Object Type",ESRecordingPerm."Object ID")
          THEN BEGIN
            RecordModified := FALSE;
            ModifyPermissionDataRole(
              ESRecordingPerm,ESRolePerm,RecordModified,ESSecuritySetup."Use Indirect for FlowFields");
            IF RecordModified THEN BEGIN
              ESRolePerm.MODIFY(TRUE);
              ModifiedRecords := ModifiedRecords + 1;
            END;
          END ELSE BEGIN
            ESRolePerm.INIT;
            ESRolePerm."Role ID" := ESRole."Role ID";
            InsertPermissionDataRole(
              ESRecordingPerm,ESRolePerm,ESSecuritySetup."Use Indirect for FlowFields");
            ESRolePerm.INSERT(TRUE);
            InsertedRecords := InsertedRecords + 1;
          END;
        UNTIL ESRecordingPerm.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text015);
      ESRecordingPerm.RESET;
      ESRecordingPerm.SETRANGE("Recording Code",ESRecording.Code);
      ESRecordingPerm.SETFILTER(
        "Object Type",'>%1',ESRecordingPerm."Object Type"::TableData);
      IF ESRecordingPerm.FIND('-') THEN
        REPEAT
          IF ESObjectProperty.GET(
               ESRecordingPerm."Object Type",ESRecordingPerm."Object ID")
          THEN
            IF ESRolePerm.GET(
                 ESRole."Role ID",ESRecordingPerm."Object Type",
                 ESRecordingPerm."Object ID")
            THEN BEGIN
              RecordModified := FALSE;
              ModifyPermissionDataRole(
                ESRecordingPerm,ESRolePerm,RecordModified,ESSecuritySetup."Use Indirect for FlowFields");
              IF RecordModified THEN BEGIN
                ESRolePerm.MODIFY(TRUE);
                ModifiedRecords := ModifiedRecords + 1;
              END;
            END ELSE BEGIN
              ESRolePerm.INIT;
              ESRolePerm."Role ID" := ESRole."Role ID";
              InsertPermissionDataRole(
                ESRecordingPerm,ESRolePerm,ESSecuritySetup."Use Indirect for FlowFields");
              ESRolePerm.INSERT(TRUE);
              InsertedRecords := InsertedRecords + 1;
            END;
        UNTIL ESRecordingPerm.NEXT = 0;

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text016,InsertedRecords,ModifiedRecords);
    END;

    LOCAL PROCEDURE ModifyPermissionDataRole@1240520013(ESRecordingPerm@1240520012 : Record 14123652;VAR ESRolePerm@1240520011 : Record 14123506;VAR RecordModified@1240520008 : Boolean;UseIndirectForFlowFields@1240520009 : Boolean);
    BEGIN
      IF ESRecordingPerm."Read Required" AND
         (ESRolePerm."Read Permission" <> ESRolePerm."Read Permission"::Yes)
      THEN BEGIN
        ESRolePerm."Read Permission" := ESRolePerm."Read Permission"::Yes;
        RecordModified := TRUE;
      END;

      IF ESRecordingPerm."Calculate Flowfield Required" AND
         (ESRolePerm."Read Permission" <> ESRolePerm."Read Permission"::Yes)
      THEN BEGIN
        IF UseIndirectForFlowFields AND
           (ESRolePerm."Read Permission" <> ESRolePerm."Read Permission"::Indirect)
        THEN BEGIN
          ESRolePerm."Read Permission" := ESRolePerm."Read Permission"::Indirect;
          RecordModified := TRUE;
        END ELSE BEGIN
          ESRolePerm."Read Permission" := ESRolePerm."Read Permission"::Yes;
          RecordModified := TRUE;
        END;
      END;

      IF ESRecordingPerm."Insert Required" AND
         (ESRolePerm."Insert Permission" <> ESRolePerm."Insert Permission"::Yes)
      THEN BEGIN
        ESRolePerm."Insert Permission" := ESRolePerm."Insert Permission"::Yes;
        RecordModified := TRUE;
      END;

      IF ESRecordingPerm."Modify Required" AND
         (ESRolePerm."Modify Permission" <> ESRolePerm."Modify Permission"::Yes)
      THEN BEGIN
        ESRolePerm."Modify Permission" := ESRolePerm."Modify Permission"::Yes;
        RecordModified := TRUE;
      END;

      IF ESRecordingPerm."Delete Required" AND
         (ESRolePerm."Delete Permission" <> ESRolePerm."Delete Permission"::Yes)
      THEN BEGIN
        ESRolePerm."Delete Permission" := ESRolePerm."Delete Permission"::Yes;
        RecordModified := TRUE;
      END;

      IF ESRecordingPerm."Execute Required" AND
         (ESRolePerm."Execute Permission" <> ESRolePerm."Execute Permission"::Yes)
      THEN BEGIN
        ESRolePerm."Execute Permission" := ESRolePerm."Execute Permission"::Yes;
        RecordModified := TRUE;
      END;

      IF (ESRolePerm.Origin = ESRolePerm.Origin::Additional) AND
         (ESRecordingPerm.Origin < ESRecordingPerm.Origin::Additional)
      THEN BEGIN
        ESRolePerm.Origin := ESRecordingPerm.Origin;
        RecordModified := TRUE;
      END;
    END;

    LOCAL PROCEDURE InsertPermissionDataRole@1240520015(ESRecordingPerm@1240520009 : Record 14123652;VAR ESRolePerm@1240520008 : Record 14123506;UseIndirectForFlowFields@1240520010 : Boolean);
    BEGIN
      ESRolePerm."Object Type" := ESRecordingPerm."Object Type";
      ESRolePerm."Object ID" := ESRecordingPerm."Object ID";

      IF ESRecordingPerm."Read Required" THEN
        ESRolePerm."Read Permission" := ESRolePerm."Read Permission"::Yes
      ELSE
        IF ESRecordingPerm."Calculate Flowfield Required" THEN BEGIN
          IF UseIndirectForFlowFields THEN
            ESRolePerm."Read Permission" := ESRolePerm."Read Permission"::Indirect
          ELSE
            ESRolePerm."Read Permission" := ESRolePerm."Read Permission"::Yes;
        END ELSE
          ESRolePerm."Read Permission" := ESRolePerm."Read Permission"::" ";

      IF ESRecordingPerm."Insert Required" THEN
        ESRolePerm."Insert Permission" := ESRolePerm."Insert Permission"::Yes
      ELSE
        ESRolePerm."Insert Permission" := ESRolePerm."Insert Permission"::" ";

      IF ESRecordingPerm."Modify Required" THEN
        ESRolePerm."Modify Permission" := ESRolePerm."Modify Permission"::Yes
      ELSE
        ESRolePerm."Modify Permission" := ESRolePerm."Modify Permission"::" ";

      IF ESRecordingPerm."Delete Required" THEN
        ESRolePerm."Delete Permission" := ESRolePerm."Delete Permission"::Yes
      ELSE
        ESRolePerm."Delete Permission" := ESRolePerm."Delete Permission"::" ";

      IF ESRecordingPerm."Execute Required" THEN
        ESRolePerm."Execute Permission" := ESRolePerm."Execute Permission"::Yes
      ELSE
        ESRolePerm."Execute Permission" := ESRolePerm."Execute Permission"::" ";

      ESRolePerm.Origin := ESRecordingPerm.Origin;
      ESRolePerm."Do not include Additional" := ESRecordingPerm."Do not include Additional";
    END;

    PROCEDURE AddRecordingToRoleDetail@1240520014(ESRoleDetail@1240520008 : Record 14123653;RecordingCode@1240520018 : Code[30];ShowStatus@1240520009 : Boolean);
    VAR
      ESRecording@1240520010 : Record 14123651;
      ESRoleRecording@1240520011 : Record 14123654;
      ESSecuritySetup@1240520001 : Record 14123521;
      Window@1240520016 : Dialog;
    BEGIN
      ESRoleDetail.TESTFIELD("Role ID");

      IF RecordingCode <> '' THEN
        ESRecording.GET(RecordingCode)
      ELSE
        IF PAGE.RUNMODAL(0,ESRecording) <> ACTION::LookupOK THEN
          EXIT;

      ESRecording.TESTFIELD(Code);

      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text017) + Text007);

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text018);
      ESRoleRecording.INIT;
      ESRoleRecording.VALIDATE("Role ID",ESRoleDetail."Role ID");
      ESRoleRecording.VALIDATE("Recording Code",RecordingCode);
      ESRoleRecording.INSERT(TRUE);

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text019,ESRecording.Code,ESRoleDetail."Role ID");
    END;

    PROCEDURE AddRecordingToRoleDetailPerm@1240520019(ESRoleDetail@1240520008 : Record 14123653;RecordingCode@1240520018 : Code[30];ShowStatus@1240520009 : Boolean);
    VAR
      ESRecording@1240520010 : Record 14123651;
      ESRecordingPerm@1240520011 : Record 14123652;
      ESRoleBuilderPerm@1240520012 : Record 14123655;
      ESObjectProperty@1240520017 : Record 14123522;
      ESSecuritySetup@1240520019 : Record 14123521;
      Window@1240520016 : Dialog;
      RecordModified@1240520013 : Boolean;
      ModifiedRecords@1240520014 : Integer;
      InsertedRecords@1240520015 : Integer;
    BEGIN
      ESRoleDetail.TESTFIELD("Role ID");

      ESSecuritySetup.GET;

      IF RecordingCode <> '' THEN
        ESRecording.GET(RecordingCode)
      ELSE
        IF PAGE.RUNMODAL(0,ESRecording) <> ACTION::LookupOK THEN
          EXIT;

      ESRecording.TESTFIELD(Code);

      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text020) + Text007);

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text014);
      ESRecordingPerm.RESET;
      ESRecordingPerm.SETRANGE("Recording Code",ESRecording.Code);
      ESRecordingPerm.SETRANGE("Object Type",ESRecordingPerm."Object Type"::TableData);
      IF ESRecordingPerm.FIND('-') THEN
        REPEAT
          IF ESRoleBuilderPerm.GET(
               ESRoleDetail."Role ID",ESRecordingPerm."Object Type",
               ESRecordingPerm."Object ID")
          THEN BEGIN
            RecordModified := FALSE;
            ModifyPermissionDataRoleDetail(
              ESRecordingPerm,ESRoleBuilderPerm,RecordModified,
              ESSecuritySetup."Use Indirect for FlowFields");
            IF RecordModified THEN BEGIN
              ESRoleBuilderPerm.MODIFY(TRUE);
              ModifiedRecords := ModifiedRecords + 1;
            END;
          END ELSE BEGIN
            ESRoleBuilderPerm.INIT;
            ESRoleBuilderPerm."Role ID" := ESRoleDetail."Role ID";
            InsertPermissionDataRoleDetail(
              ESRecordingPerm,ESRoleBuilderPerm,ESSecuritySetup."Use Indirect for FlowFields");
            ESRoleBuilderPerm.INSERT(TRUE);
            InsertedRecords := InsertedRecords + 1;
          END;
        UNTIL ESRecordingPerm.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text015);
      ESRecordingPerm.RESET;
      ESRecordingPerm.SETRANGE("Recording Code",ESRecording.Code);
      ESRecordingPerm.SETFILTER(
        "Object Type",'>%1',ESRecordingPerm."Object Type"::TableData);
      IF ESRecordingPerm.FIND('-') THEN
        REPEAT
          IF ESObjectProperty.GET(
               ESRecordingPerm."Object Type",ESRecordingPerm."Object ID")
          THEN
            IF ESRoleBuilderPerm.GET(
                 ESRoleDetail."Role ID",ESRecordingPerm."Object Type",
                 ESRecordingPerm."Object ID")
            THEN BEGIN
              RecordModified := FALSE;
              ModifyPermissionDataRoleDetail(
                ESRecordingPerm,ESRoleBuilderPerm,RecordModified,
                ESSecuritySetup."Use Indirect for FlowFields");
              IF RecordModified THEN BEGIN
                ESRoleBuilderPerm.MODIFY(TRUE);
                ModifiedRecords := ModifiedRecords + 1;
              END;
            END ELSE BEGIN
              ESRoleBuilderPerm.INIT;
              ESRoleBuilderPerm."Role ID" := ESRoleDetail."Role ID";
              InsertPermissionDataRoleDetail(
                ESRecordingPerm,ESRoleBuilderPerm,ESSecuritySetup."Use Indirect for FlowFields");
              ESRoleBuilderPerm.INSERT(TRUE);
              InsertedRecords := InsertedRecords + 1;
            END;
        UNTIL ESRecordingPerm.NEXT = 0;

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text016,InsertedRecords,ModifiedRecords);
    END;

    LOCAL PROCEDURE ModifyPermissionDataRoleDetail@1240520018(ESRecordingPerm@1240520012 : Record 14123652;VAR ESRoleBuilderPerm@1240520011 : Record 14123655;VAR RecordModified@1240520008 : Boolean;UseIndirectForFlowFields@1240520009 : Boolean);
    BEGIN
      IF ESRecordingPerm."Read Required" AND
         (ESRoleBuilderPerm."Read Permission" <> ESRoleBuilderPerm."Read Permission"::Yes)
      THEN BEGIN
        ESRoleBuilderPerm."Read Permission" := ESRoleBuilderPerm."Read Permission"::Yes;
        RecordModified := TRUE;
      END;

      IF ESRecordingPerm."Calculate Flowfield Required" AND
         (ESRoleBuilderPerm."Read Permission" <> ESRoleBuilderPerm."Read Permission"::Yes)
      THEN BEGIN
        IF UseIndirectForFlowFields AND
           (ESRoleBuilderPerm."Read Permission" <> ESRoleBuilderPerm."Read Permission"::Indirect)
        THEN BEGIN
          ESRoleBuilderPerm."Read Permission" := ESRoleBuilderPerm."Read Permission"::Indirect;
          RecordModified := TRUE;
        END ELSE BEGIN
          ESRoleBuilderPerm."Read Permission" := ESRoleBuilderPerm."Read Permission"::Yes;
          RecordModified := TRUE;
        END;
      END;

      IF ESRecordingPerm."Insert Required" AND
         (ESRoleBuilderPerm."Insert Permission" <> ESRoleBuilderPerm."Insert Permission"::Yes)
      THEN BEGIN
        ESRoleBuilderPerm."Insert Permission" := ESRoleBuilderPerm."Insert Permission"::Yes;
        RecordModified := TRUE;
      END;

      IF ESRecordingPerm."Modify Required" AND
         (ESRoleBuilderPerm."Modify Permission" <> ESRoleBuilderPerm."Modify Permission"::Yes)
      THEN BEGIN
        ESRoleBuilderPerm."Modify Permission" := ESRoleBuilderPerm."Modify Permission"::Yes;
        RecordModified := TRUE;
      END;

      IF ESRecordingPerm."Delete Required" AND
         (ESRoleBuilderPerm."Delete Permission" <> ESRoleBuilderPerm."Delete Permission"::Yes)
      THEN BEGIN
        ESRoleBuilderPerm."Delete Permission" := ESRoleBuilderPerm."Delete Permission"::Yes;
        RecordModified := TRUE;
      END;

      IF ESRecordingPerm."Execute Required" AND
         (ESRoleBuilderPerm."Execute Permission" <> ESRoleBuilderPerm."Execute Permission"::Yes)
      THEN BEGIN
        ESRoleBuilderPerm."Execute Permission" := ESRoleBuilderPerm."Execute Permission"::Yes;
        RecordModified := TRUE;
      END;

      IF (ESRoleBuilderPerm.Origin = ESRoleBuilderPerm.Origin::Additional) AND
         (ESRecordingPerm.Origin < ESRecordingPerm.Origin::Additional)
      THEN BEGIN
        ESRoleBuilderPerm.Origin := ESRecordingPerm.Origin;
        RecordModified := TRUE;
      END;
    END;

    LOCAL PROCEDURE InsertPermissionDataRoleDetail@1240520017(ESRecordingPerm@1240520009 : Record 14123652;VAR ESRoleBuilderPerm@1240520008 : Record 14123655;UseIndirectForFlowFields@1240520010 : Boolean);
    BEGIN
      ESRoleBuilderPerm."Object Type" := ESRecordingPerm."Object Type";
      ESRoleBuilderPerm."Object ID" := ESRecordingPerm."Object ID";

      IF ESRecordingPerm."Read Required" THEN
        ESRoleBuilderPerm."Read Permission" := ESRoleBuilderPerm."Read Permission"::Yes
      ELSE
        IF ESRecordingPerm."Calculate Flowfield Required" THEN BEGIN
          IF UseIndirectForFlowFields THEN
            ESRoleBuilderPerm."Read Permission" := ESRoleBuilderPerm."Read Permission"::Indirect
          ELSE
            ESRoleBuilderPerm."Read Permission" := ESRoleBuilderPerm."Read Permission"::Yes;
        END ELSE
          ESRoleBuilderPerm."Read Permission" := ESRoleBuilderPerm."Read Permission"::" ";

      IF ESRecordingPerm."Insert Required" THEN
        ESRoleBuilderPerm."Insert Permission" := ESRoleBuilderPerm."Insert Permission"::Yes
      ELSE
        ESRoleBuilderPerm."Insert Permission" := ESRoleBuilderPerm."Insert Permission"::" ";

      IF ESRecordingPerm."Modify Required" THEN
        ESRoleBuilderPerm."Modify Permission" := ESRoleBuilderPerm."Modify Permission"::Yes
      ELSE
        ESRoleBuilderPerm."Modify Permission" := ESRoleBuilderPerm."Modify Permission"::" ";

      IF ESRecordingPerm."Delete Required" THEN
        ESRoleBuilderPerm."Delete Permission" := ESRoleBuilderPerm."Delete Permission"::Yes
      ELSE
        ESRoleBuilderPerm."Delete Permission" := ESRoleBuilderPerm."Delete Permission"::" ";

      IF ESRecordingPerm."Execute Required" THEN
        ESRoleBuilderPerm."Execute Permission" := ESRoleBuilderPerm."Execute Permission"::Yes
      ELSE
        ESRoleBuilderPerm."Execute Permission" := ESRoleBuilderPerm."Execute Permission"::" ";

      ESRoleBuilderPerm.Origin := ESRecordingPerm.Origin;
      ESRoleBuilderPerm."Do not include Additional" := ESRecordingPerm."Do not include Additional";
    END;

    PROCEDURE UpdateAllRolesFromRoleDetails@1240520020(ShowStatus@1240520011 : Boolean);
    VAR
      ESSecuritySetup@1240520001 : Record 14123521;
      ESRoleDetail@1240520008 : Record 14123653;
      Window@1240520009 : Dialog;
      UpdatedRecords@1240520010 : Integer;
    BEGIN
      ESSecuritySetup.GET;

      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text021) + Text007);

      ESRoleDetail.RESET;
      IF ESRoleDetail.FIND('-') THEN
        REPEAT
          IF GUIALLOWED THEN
            Window.UPDATE(1,STRSUBSTNO(Text022,ESRoleDetail."Role ID",ESRoleDetail."Role Name"));

          UpdateRoleFromRoleDetail(ESRoleDetail,FALSE,FALSE);

          UpdatedRecords := UpdatedRecords + 1;
        UNTIL ESRoleDetail.NEXT = 0;

      IF ESSecuritySetup."No Parent Perm. in Restore Pnt" THEN BEGIN
        ESRoleDetail.RESET;
        ESRoleDetail.SETFILTER("Parent Role ID",'<>%1','');
        IF ESRoleDetail.FIND('-') THEN
          REPEAT
            IF GUIALLOWED THEN
              Window.UPDATE(1,STRSUBSTNO(Text022,ESRoleDetail."Role ID",ESRoleDetail."Role Name"));

            ESRoleDetail.UpdateExistsInParentRole(FALSE);
          UNTIL ESRoleDetail.NEXT = 0;
      END;

      ESRoleDetail.RESET;
      ESRoleDetail.SETFILTER("Role Group ID",'<>%1','');
      IF ESRoleDetail.FIND('-') THEN
        REPEAT
          IF GUIALLOWED THEN
            Window.UPDATE(
              1,
              STRSUBSTNO(
                '%1 %2',ESRoleDetail.FIELDCAPTION("Role Group ID"),ESRoleDetail."Role Group ID"));

          UpdateRoleGroupPermissions(ESRoleDetail);
        UNTIL ESRoleDetail.NEXT = 0;

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text023,UpdatedRecords);
      ESSecuritySetup.Comment(1,STRSUBSTNO(Text023,UpdatedRecords));
    END;

    PROCEDURE UpdateRoleFromRoleDetail@1240520012(ESRoleDetail@1240520008 : Record 14123653;ShowStatus@1240520009 : Boolean;ShowProgress@1240520024 : Boolean);
    VAR
      ESSecuritySetup@1240520023 : Record 14123521;
      ESRole@1240520010 : Record 14123505;
      ESRolePerm@1240520013 : Record 14123506;
      ESRolePerm2@1240520021 : Record 14123506;
      ESRolePerm3@1240520029 : Record 14123506;
      ESRolePermTmp@1240520014 : TEMPORARY Record 14123506;
      ESRoleRecording@1240520011 : Record 14123654;
      ESRecording@1240520012 : Record 14123651;
      ESRoleBuilderPerm@1240520018 : Record 14123655;
      ESObjectProperty@1240520025 : Record 14123522;
      ESObjectInformation@1240520026 : Record 14123509;
      ESObjectInformationTmp@1240520030 : TEMPORARY Record 14123509;
      ESRelationMgt@1240520016 : Codeunit 14123602;
      ESMgt@1240520001 : Codeunit 14123501;
      InsertedTmpRecords@1240520017 : Integer;
      InsertedRecords@1240520022 : Integer;
      Window@1240520019 : Dialog;
      RecordModified@1240520020 : Boolean;
      ObjectID@1240520027 : Integer;
      ToObjectID@1240520028 : Integer;
      AddedComment@1240520031 : Text[1000];
    BEGIN
      ESSecuritySetup.GET;

      IF ESSecuritySetup."Optimized Publishing" THEN BEGIN
        UpdateRoleFromRoleDetailOptim(ESRoleDetail,ShowStatus,ShowProgress);
        EXIT;
      END;

      ESSecuritySetup.TestRestrictedRoleID(ESRoleDetail."Role ID",TRUE);

      IF ShowProgress AND GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text024) + Text007);

      IF ShowProgress AND GUIALLOWED THEN
        Window.UPDATE(1,Text025);
      IF NOT ESRole.GET(ESRoleDetail."Role ID") THEN BEGIN
        ESRole.INIT;
        ESRole."Role ID" := ESRoleDetail."Role ID";
        ESRole.Name := ESRoleDetail."Role Name";
        ESRole.INSERT(TRUE);
      END ELSE
        IF ESRole.Name <> ESRoleDetail."Role Name" THEN BEGIN
          ESRole.Name := ESRoleDetail."Role Name";
          ESRole.MODIFY(TRUE);
        END;

      IF ShowProgress AND GUIALLOWED THEN
        Window.UPDATE(1,Text026);
      ESRolePerm.RESET;
      ESRolePerm.SETRANGE("Role ID",ESRole."Role ID");
      ESRolePerm.DELETEALL;

      IF NOT ESRoleDetail."No Permissions" THEN BEGIN
        IF ShowProgress AND GUIALLOWED THEN
          Window.UPDATE(1,Text008);
        ESRoleRecording.RESET;
        ESRoleRecording.SETRANGE("Role ID",ESRoleDetail."Role ID");
        IF ESRoleRecording.FIND('-') THEN BEGIN
          REPEAT
            ESRecording.GET(ESRoleRecording."Recording Code");

            ESRolePermTmp.RESET;
            ESRolePermTmp.DELETEALL;

            CalculateRecordingRolePerm(
              ESRecording,ESSecuritySetup,ESRole."Role ID",ESRoleRecording."Extend Insert Permissions",
              ESRoleRecording."Add Related Permissions",ESRoleRecording."Role for Both Clients",
              ESRolePermTmp,InsertedTmpRecords);

            ESRolePermTmp.RESET;
            IF ESRolePermTmp.FIND('-') THEN
              REPEAT
                IF ESRolePerm.GET(
                     ESRole."Role ID",ESRolePermTmp."Object Type",ESRolePermTmp."Object ID")
                THEN BEGIN
                  RecordModified := FALSE;

                  AddRolePermissions(
                    ESRolePerm,ESRolePermTmp."Read Permission",ESRolePermTmp."Insert Permission",
                    ESRolePermTmp."Modify Permission",ESRolePermTmp."Delete Permission",
                    ESRolePermTmp."Execute Permission",RecordModified);

                  // ESRolePerm."Security Filter" := ;
                  IF ESRolePerm.Origin > ESRolePermTmp.Origin THEN BEGIN
                    ESRolePerm.Origin := ESRolePermTmp.Origin;
                    RecordModified := TRUE;
                  END;
                  IF NOT ESRolePerm."Do not include Additional" AND
                     ESRolePermTmp."Do not include Additional"
                  THEN BEGIN
                    ESRolePerm."Do not include Additional" :=
                      ESRolePermTmp."Do not include Additional";
                    RecordModified := TRUE;
                  END;

                  IF RecordModified THEN
                    ESRolePerm.MODIFY;
                END ELSE BEGIN
                  ESRolePerm := ESRolePermTmp;
                  ESRolePerm.INSERT;

                  InsertedRecords := InsertedRecords + 1;
                END;
              UNTIL ESRolePermTmp.NEXT = 0;
          UNTIL ESRoleRecording.NEXT = 0;
        END;

        IF ShowProgress AND GUIALLOWED THEN
          Window.UPDATE(1,Text027);
        ESRoleBuilderPerm.RESET;
        ESRoleBuilderPerm.SETRANGE("Role ID",ESRoleDetail."Role ID");
        IF NOT ESSecuritySetup."Add All Role Builder Perms." THEN
          ESRoleBuilderPerm.SETFILTER("Object Type",ESSecuritySetup.ObjectTypeFilter);
        IF ESRoleBuilderPerm.FIND('-') THEN
          REPEAT
            IF ESRoleBuilderPerm."To Object ID" <> 0 THEN
              ToObjectID := ESRoleBuilderPerm."To Object ID"
            ELSE
              ToObjectID := ESRoleBuilderPerm."Object ID";

            ESObjectInformationTmp.RESET;
            ESObjectInformationTmp.DELETEALL;
            CASE TRUE OF
              ESRoleBuilderPerm."Object ID" = 0:
                BEGIN
                  ESObjectInformationTmp."Object Type" := ESRoleBuilderPerm."Object Type";
                  ESObjectInformationTmp."Object ID" := 0;
                  ESObjectInformationTmp.INSERT;
                END;
              ESRoleBuilderPerm."Object Type" = ESRoleBuilderPerm."Object Type"::System:
                FOR ObjectID := ESRoleBuilderPerm."Object ID" TO ToObjectID DO BEGIN
                  ESObjectInformationTmp."Object Type" := ESRoleBuilderPerm."Object Type";
                  ESObjectInformationTmp."Object ID" := ObjectID;
                  ESObjectInformationTmp.INSERT;
                END;
              ELSE BEGIN
                ESObjectInformation.RESET;
                IF ESRoleBuilderPerm."Object Type" = ESRoleBuilderPerm."Object Type"::TableData THEN
                  ESObjectInformation.SETRANGE("Object Type",ESObjectInformation."Object Type"::Table)
                ELSE
                  ESObjectInformation.SETRANGE("Object Type",ESRoleBuilderPerm."Object Type");
                ESObjectInformation.SETRANGE("Object ID",ESRoleBuilderPerm."Object ID",ToObjectID);
                IF ESObjectInformation.FIND('-') THEN
                  REPEAT
                    ESObjectInformationTmp."Object Type" := ESRoleBuilderPerm."Object Type";
                    ESObjectInformationTmp."Object ID" := ESObjectInformation."Object ID";
                    ESObjectInformationTmp.INSERT;
                  UNTIL ESObjectInformation.NEXT = 0;
              END;
            END;

            IF ToObjectID >= 2000000000 THEN
              FOR ObjectID := ESRoleBuilderPerm."Object ID" TO ToObjectID DO BEGIN
                ESObjectInformationTmp."Object Type" := ESRoleBuilderPerm."Object Type";
                ESObjectInformationTmp."Object ID" := ObjectID;
                IF NOT ESObjectInformationTmp.INSERT THEN
                  ;
              END;

            IF ESObjectInformationTmp.FIND('-') THEN
              REPEAT
                IF ESRolePerm.GET(
                     ESRole."Role ID",ESRoleBuilderPerm."Object Type",ESObjectInformationTmp."Object ID")
                THEN BEGIN
                  RecordModified := FALSE;

                  AddRolePermissions(
                    ESRolePerm,ESRoleBuilderPerm."Read Permission",
                    ESRoleBuilderPerm."Insert Permission",ESRoleBuilderPerm."Modify Permission",
                    ESRoleBuilderPerm."Delete Permission",ESRoleBuilderPerm."Execute Permission",
                    RecordModified);

                  IF FORMAT(ESRoleBuilderPerm."Security Filter") <> '' THEN BEGIN
                    ESRolePerm."Security Filter" := ESRoleBuilderPerm."Security Filter";
                    RecordModified := TRUE;
                  END;
                  IF ESRolePerm.Origin <> ESRoleBuilderPerm.Origin THEN BEGIN
                    ESRolePerm.Origin := ESRoleBuilderPerm.Origin;
                    RecordModified := TRUE;
                  END;
                  IF NOT ESRolePerm."Do not include Additional" AND
                     ESRoleBuilderPerm."Do not include Additional"
                  THEN BEGIN
                    ESRolePerm."Do not include Additional" := ESRoleBuilderPerm."Do not include Additional";
                    RecordModified := TRUE;
                  END;

                  IF RecordModified THEN
                    ESRolePerm.MODIFY;
                END ELSE BEGIN
                  ESRolePerm.INIT;
                  ESRolePerm."Role ID" := ESRole."Role ID";
                  ESRolePerm."Object Type" := ESRoleBuilderPerm."Object Type";
                  ESRolePerm."Object ID" := ESObjectInformationTmp."Object ID";
                  ESRolePerm."Read Permission" := ESRoleBuilderPerm."Read Permission";
                  ESRolePerm."Insert Permission" := ESRoleBuilderPerm."Insert Permission";
                  ESRolePerm."Modify Permission" := ESRoleBuilderPerm."Modify Permission";
                  ESRolePerm."Delete Permission" := ESRoleBuilderPerm."Delete Permission";
                  ESRolePerm."Execute Permission" := ESRoleBuilderPerm."Execute Permission";
                  ESRolePerm."Security Filter" := ESRoleBuilderPerm."Security Filter";
                  ESRolePerm.Origin := ESRoleBuilderPerm.Origin;
                  ESRolePerm."Do not include Additional" := ESRoleBuilderPerm."Do not include Additional";
                  ESRolePerm.INSERT;

                  InsertedRecords := InsertedRecords + 1;
                END;

                IF ESRoleBuilderPerm."Extend Insert Permissions" AND
                   (ESRolePerm."Insert Permission" = ESRolePerm."Insert Permission"::Yes)
                THEN BEGIN
                  ESRolePerm.CALCFIELDS("Limited License Object");
                  IF ESSecuritySetup."Extend Insert on Limited Lic." OR
                     NOT ESRolePerm."Limited License Object"
                  THEN BEGIN
                    ESRolePerm."Modify Permission" := ESRolePerm."Modify Permission"::Yes;
                    IF ESSecuritySetup."Extend Insert to Delete" THEN
                      ESRolePerm."Delete Permission" := ESRolePerm."Delete Permission"::Yes;
                    ESRolePerm.MODIFY;
                  END;
                END;

                IF ESRoleBuilderPerm."Add Related Permissions" AND
                   ((ESRoleBuilderPerm.Origin = ESRoleBuilderPerm.Origin::Recorded) OR
                    (ESRoleBuilderPerm.Origin = ESRoleBuilderPerm.Origin::Builder))
                THEN BEGIN
                  ESRolePerm2.RESET;
                  ESRolePerm2 := ESRolePerm;
                  ESRolePerm2.SETRECFILTER;
                  ESRelationMgt.AddRelatedPermsToRole2(
                    ESRolePerm2,ESRolePerm,InsertedRecords,FALSE,FALSE);
                  ESRolePerm.GET(
                    ESRole."Role ID",ESRoleBuilderPerm."Object Type",ESObjectInformationTmp."Object ID");
                END;

                IF ESRoleBuilderPerm."Role for Both Clients" AND
                   (ESRolePerm."Object Type" IN
                    [ESRolePerm."Object Type"::"2",ESRolePerm."Object Type"::Page])
                THEN BEGIN
                  ESRolePerm2 := ESRolePerm;
                  CASE ESRolePerm."Object Type" OF
                    ESRolePerm."Object Type"::"2":
                      ESRolePerm2."Object Type" := ESRolePerm2."Object Type"::Page;
                    ESRolePerm."Object Type"::Page:
                      ESRolePerm2."Object Type" := ESRolePerm2."Object Type"::"2";
                  END;

                  IF ESRolePerm2.INSERT THEN BEGIN
                    InsertedRecords := InsertedRecords + 1;

                    IF ESRoleBuilderPerm."Add Related Permissions" AND
                       ((ESRoleBuilderPerm.Origin = ESRoleBuilderPerm.Origin::Recorded) OR
                        (ESRoleBuilderPerm.Origin = ESRoleBuilderPerm.Origin::Builder))
                    THEN BEGIN
                      ESRolePerm3.RESET;
                      ESRolePerm3 := ESRolePerm2;
                      ESRolePerm3.SETRECFILTER;
                      ESRelationMgt.AddRelatedPermsToRole2(
                        ESRolePerm3,ESRolePerm2,InsertedRecords,FALSE,FALSE);
                    END;
                  END;
                END;
              UNTIL ESObjectInformationTmp.NEXT = 0;
          UNTIL ESRoleBuilderPerm.NEXT = 0;

        IF ESSecuritySetup."Add History and Security Perm." THEN BEGIN
          ESRolePerm2.RESET;
          ESRolePerm2.SETRANGE("Role ID",ESRole."Role ID");
          ESRolePerm2.SETRANGE("Object Type",ESRolePerm2."Object Type"::TableData);
          IF ESRolePerm2.FIND('-') THEN
            REPEAT
              IF ESObjectProperty.GET(
                   ESObjectProperty."Object Type"::Table,ESRolePerm2."Object ID")
              THEN BEGIN
                IF ESObjectProperty."History Table ID" <> 0 THEN BEGIN
                  IF NOT ESRolePerm.GET(
                           ESRolePerm."Role ID",ESRolePerm."Object Type"::TableData,
                           ESObjectProperty."History Table ID")
                  THEN BEGIN
                    ESRolePerm.INIT;
                    ESRolePerm."Role ID" := ESRole."Role ID";
                    ESRolePerm."Object Type" := ESRolePerm."Object Type"::TableData;
                    ESRolePerm."Object ID" := ESObjectProperty."History Table ID";
                    ESRolePerm."Read Permission" := ESRolePerm."Read Permission"::Yes;
                    IF (ESRolePerm2."Insert Permission" <> ESRolePerm2."Insert Permission"::" ") OR
                       (ESRolePerm2."Modify Permission" <> ESRolePerm2."Modify Permission"::" ") OR
                       (ESRolePerm2."Delete Permission" <> ESRolePerm2."Delete Permission"::" ")
                    THEN
                      ESRolePerm."Insert Permission" := ESRolePerm."Insert Permission"::Yes
                    ELSE
                      ESRolePerm."Insert Permission" := ESRolePerm."Insert Permission"::" ";
                    ESRolePerm."Modify Permission" := ESRolePerm."Modify Permission"::" ";
                    ESRolePerm."Delete Permission" := ESRolePerm."Delete Permission"::" ";
                    ESRolePerm."Execute Permission" := ESRolePerm."Execute Permission"::" ";
                    ESRolePerm.Origin := ESRolePerm.Origin::"History Table";
                    ESRolePerm.INSERT;

                    InsertedRecords := InsertedRecords + 1;
                  END ELSE BEGIN
                    ESRolePerm."Read Permission" := ESRolePerm."Read Permission"::Yes;
                    IF (ESRolePerm2."Insert Permission" <> ESRolePerm2."Insert Permission"::" ") OR
                       (ESRolePerm2."Modify Permission" <> ESRolePerm2."Modify Permission"::" ") OR
                       (ESRolePerm2."Delete Permission" <> ESRolePerm2."Delete Permission"::" ")
                    THEN
                      ESRolePerm."Insert Permission" := ESRolePerm."Insert Permission"::Yes;
                    ESRolePerm.MODIFY;
                  END;
                END;

                IF ESObjectProperty."Security Table ID" <> 0 THEN BEGIN
                  IF NOT ESRolePerm.GET(
                           ESRolePerm."Role ID",ESRolePerm."Object Type"::TableData,
                           ESObjectProperty."Security Table ID")
                  THEN BEGIN
                    ESRolePerm.INIT;
                    ESRolePerm."Role ID" := ESRole."Role ID";
                    ESRolePerm."Object Type" := ESRolePerm."Object Type"::TableData;
                    ESRolePerm."Object ID" := ESObjectProperty."Security Table ID";
                    ESRolePerm."Read Permission" := ESRolePerm."Read Permission"::Yes;
                    ESRolePerm."Insert Permission" := ESRolePerm."Insert Permission"::" ";
                    ESRolePerm."Modify Permission" := ESRolePerm."Modify Permission"::" ";
                    ESRolePerm."Delete Permission" := ESRolePerm."Delete Permission"::" ";
                    ESRolePerm."Execute Permission" := ESRolePerm."Execute Permission"::" ";
                    ESRolePerm.Origin := ESRolePerm.Origin::"Security Table";
                    ESRolePerm.INSERT;

                    InsertedRecords := InsertedRecords + 1;
                  END ELSE BEGIN
                    IF ESRolePerm."Read Permission" <>  ESRolePerm."Read Permission"::Yes THEN BEGIN
                      ESRolePerm."Read Permission" := ESRolePerm."Read Permission"::Yes;
                      ESRolePerm.MODIFY;
                    END;
                  END;
                END;
              END;
            UNTIL ESRolePerm2.NEXT = 0;
        END;
      END;

      IF ESSecuritySetup."Remove Specific Table Perm." THEN BEGIN
        ESRolePerm.RESET;
        ESRolePerm.SETRANGE("Role ID",ESRoleDetail."Role ID");
        ESRolePerm.SETRANGE("Object Type",ESRolePerm."Object Type"::Table);
        ESRolePerm.SETFILTER("Object ID",'>0');
        InsertedRecords := InsertedRecords - ESRolePerm.COUNT;
        ESRolePerm.DELETEALL;
      END;

      IF ESRoleDetail."Remove ALL Permissions" AND (ESSecuritySetup."ALL Role ID" <> '') THEN BEGIN
        ESRolePerm.RESET;
        ESRolePerm.SETRANGE("Role ID",ESSecuritySetup."ALL Role ID");
        IF ESRolePerm.FIND('-') THEN
          REPEAT
            IF ESRolePerm2.GET(ESRole."Role ID",ESRolePerm."Object Type",ESRolePerm."Object ID") THEN
              IF ESRolePerm2.RoleLessThanOrEqual(ESRolePerm) THEN BEGIN
                ESRolePerm2.DELETE;
                InsertedRecords := InsertedRecords - 1;
              END;
          UNTIL ESRolePerm.NEXT = 0;
      END;

      IF ESRoleDetail."Remove BASIC Permissions" AND (ESSecuritySetup."BASIC Role ID" <> '') THEN BEGIN
        ESRolePerm.RESET;
        ESRolePerm.SETRANGE("Role ID",ESSecuritySetup."BASIC Role ID");
        IF ESRolePerm.FIND('-') THEN
          REPEAT
            IF ESRolePerm2.GET(ESRole."Role ID",ESRolePerm."Object Type",ESRolePerm."Object ID") THEN
              IF ESRolePerm2.RoleLessThanOrEqual(ESRolePerm) THEN BEGIN
                ESRolePerm2.DELETE;
                InsertedRecords := InsertedRecords - 1;
              END;
          UNTIL ESRolePerm.NEXT = 0;
      END;

      IF ESSecuritySetup."Use Limited License Permission" THEN BEGIN
        ESObjectProperty.RESET;
        ESObjectProperty.SETRANGE("Limited License Object",TRUE);
        IF ESObjectProperty.FIND('-') THEN
          REPEAT
            IF ESRolePerm.GET(
                 ESRoleDetail."Role ID",ESObjectProperty."Object Type",
                 ESObjectProperty."Object ID")
            THEN BEGIN
              RecordModified := FALSE;

              IF ((ESRolePerm."Read Permission" = ESRolePerm."Read Permission"::Yes) AND
                  (ESObjectProperty."Read Permission (License)" <>
                   ESObjectProperty."Read Permission (License)"::Yes)) OR
                 ((ESRolePerm."Read Permission" = ESRolePerm."Read Permission"::Indirect) AND
                  (ESObjectProperty."Read Permission (License)" =
                   ESObjectProperty."Read Permission (License)"::" "))
              THEN BEGIN
                ESRolePerm."Read Permission" :=
                  ESObjectProperty."Read Permission (License)";
                RecordModified := TRUE;
              END;

              IF ((ESRolePerm."Insert Permission" = ESRolePerm."Insert Permission"::Yes) AND
                  (ESObjectProperty."Insert Permission (License)" <>
                   ESObjectProperty."Insert Permission (License)"::Yes)) OR
                 ((ESRolePerm."Insert Permission" = ESRolePerm."Insert Permission"::Indirect) AND
                  (ESObjectProperty."Insert Permission (License)" =
                   ESObjectProperty."Insert Permission (License)"::" "))
              THEN BEGIN
                ESRolePerm."Insert Permission" :=
                  ESObjectProperty."Insert Permission (License)";
                RecordModified := TRUE;
              END;

              IF ((ESRolePerm."Modify Permission" = ESRolePerm."Modify Permission"::Yes) AND
                  (ESObjectProperty."Modify Permission (License)" <>
                   ESObjectProperty."Modify Permission (License)"::Yes)) OR
                 ((ESRolePerm."Modify Permission" = ESRolePerm."Modify Permission"::Indirect) AND
                  (ESObjectProperty."Modify Permission (License)" =
                   ESObjectProperty."Modify Permission (License)"::" "))
              THEN BEGIN
                ESRolePerm."Modify Permission" :=
                  ESObjectProperty."Modify Permission (License)";
                RecordModified := TRUE;
              END;

              IF ((ESRolePerm."Delete Permission" = ESRolePerm."Delete Permission"::Yes) AND
                  (ESObjectProperty."Delete Permission (License)" <>
                   ESObjectProperty."Delete Permission (License)"::Yes)) OR
                 ((ESRolePerm."Delete Permission" = ESRolePerm."Delete Permission"::Indirect) AND
                  (ESObjectProperty."Delete Permission (License)" =
                   ESObjectProperty."Delete Permission (License)"::" "))
              THEN BEGIN
                ESRolePerm."Delete Permission" :=
                  ESObjectProperty."Delete Permission (License)";
                RecordModified := TRUE;
              END;

              IF ((ESRolePerm."Execute Permission" = ESRolePerm."Execute Permission"::Yes) AND
                  (ESObjectProperty."Execute Permission (License)" <>
                   ESObjectProperty."Execute Permission (License)"::Yes)) OR
                 ((ESRolePerm."Execute Permission" = ESRolePerm."Execute Permission"::Indirect) AND
                  (ESObjectProperty."Execute Permission (License)" =
                   ESObjectProperty."Execute Permission (License)"::" "))
              THEN BEGIN
                ESRolePerm."Execute Permission" :=
                  ESObjectProperty."Execute Permission (License)";
                RecordModified := TRUE;
              END;

              IF RecordModified THEN
                ESRolePerm.MODIFY;
            END;
          UNTIL ESObjectProperty.NEXT = 0;
      END;

      ESRoleBuilderPerm.RESET;
      ESRoleBuilderPerm.SETRANGE("Role ID",ESRoleDetail."Role ID");
      ESRoleBuilderPerm.SETRANGE("Override Permission",TRUE);
      IF NOT ESSecuritySetup."Add All Role Builder Perms." THEN
        ESRoleBuilderPerm.SETFILTER("Object Type",ESSecuritySetup.ObjectTypeFilter);
      IF ESRoleBuilderPerm.FIND('-') THEN
        REPEAT
          IF ESRolePerm.GET(
               ESRoleBuilderPerm."Role ID",ESRoleBuilderPerm."Object Type",
               ESRoleBuilderPerm."Object ID")
          THEN
            IF (ESRoleBuilderPerm."Read Permission" <> ESRolePerm."Read Permission") OR
                (ESRoleBuilderPerm."Insert Permission" <> ESRolePerm."Insert Permission") OR
                (ESRoleBuilderPerm."Modify Permission" <> ESRolePerm."Modify Permission") OR
                (ESRoleBuilderPerm."Delete Permission" <> ESRolePerm."Delete Permission") OR
                (ESRoleBuilderPerm."Execute Permission" <> ESRolePerm."Execute Permission")
            THEN BEGIN
              ESRolePerm."Read Permission" := ESRoleBuilderPerm."Read Permission";
              ESRolePerm."Insert Permission" := ESRoleBuilderPerm."Insert Permission";
              ESRolePerm."Modify Permission" := ESRoleBuilderPerm."Modify Permission";
              ESRolePerm."Delete Permission" := ESRoleBuilderPerm."Delete Permission";
              ESRolePerm."Execute Permission" := ESRoleBuilderPerm."Execute Permission";
              ESRolePerm.MODIFY;
            END;
        UNTIL ESRoleBuilderPerm.NEXT = 0;

      ESObjectProperty.RESET;
      ESObjectProperty.SETRANGE("Object Type",ESObjectProperty."Object Type"::TableData);
      ESObjectProperty.SETRANGE("Security Filter Table",TRUE);
      IF ESObjectProperty.FIND('-') THEN
        REPEAT
          IF ESRolePerm.GET(
               ESRole."Role ID",ESObjectProperty."Object Type",ESObjectProperty."Object ID")
          THEN
            ESRolePerm.DELETE;
        UNTIL ESObjectProperty.NEXT = 0;

      IF NOT ESSecuritySetup."Manual Update of Summary Perm." THEN
        ESMgt.UpdateRoleSummaryPerm(ESRole,TRUE,FALSE,ShowProgress);

      ESRoleDetail."Role Updated Date Time" := CURRENTDATETIME;
      ESRoleDetail.SetNoComment(NOT ESSecuritySetup."Detailed Comments");
      ESRoleDetail.MODIFY(TRUE);

      IF ShowProgress AND GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN BEGIN
        IF ESRoleDetail."Parent Role ID" <> '' THEN
          AddedComment :=
            AddedComment +
              STRSUBSTNO(Text029,ESRoleDetail.FIELDCAPTION("Parent Role ID"));

        IF ESRoleDetail."Role Group ID" <> '' THEN
          AddedComment :=
            AddedComment +
              STRSUBSTNO(Text029,ESRoleDetail.FIELDCAPTION("Role Group ID"));

        MESSAGE(Text028 + AddedComment,InsertedRecords,ESRole."Role ID");
      END;
    END;

    LOCAL PROCEDURE UpdateRoleFromRoleDetailOptim@1240520001(ESRoleDetail@1240520008 : Record 14123653;ShowStatus@1240520009 : Boolean;ShowProgress@1240520024 : Boolean);
    VAR
      ESSecuritySetup@1240520023 : Record 14123521;
      ESRole@1240520010 : Record 14123505;
      ESRolePerm2@1240520021 : Record 14123506;
      ESRolePerm3@1240520029 : Record 14123506;
      ESRolePermTmp@1240520001 : TEMPORARY Record 14123506;
      ESRolePerm2Tmp@1240520004 : TEMPORARY Record 14123506;
      ESRolePermRecTmp@1240520014 : TEMPORARY Record 14123506;
      ESRoleRecording@1240520011 : Record 14123654;
      ESRecording@1240520012 : Record 14123651;
      ESRoleBuilderPerm@1240520018 : Record 14123655;
      ESObjectProperty@1240520025 : Record 14123522;
      ESObjectInformation@1240520026 : Record 14123509;
      ESObjectInformationTmp@1240520030 : TEMPORARY Record 14123509;
      ESRelationMgt@1240520016 : Codeunit 14123602;
      ESMgt@1240520005 : Codeunit 14123501;
      InsertedTmpRecords@1240520017 : Integer;
      InsertedRecords@1240520022 : Integer;
      Window@1240520019 : Dialog;
      RecordModified@1240520020 : Boolean;
      ObjectID@1240520027 : Integer;
      ToObjectID@1240520028 : Integer;
      EOFNew@1240520002 : Boolean;
      EOFOld@1240520003 : Boolean;
      AddedComment@1240520013 : Text[1000];
    BEGIN
      ESSecuritySetup.GET;
      ESSecuritySetup.TestRestrictedRoleID(ESRoleDetail."Role ID",TRUE);

      IF ShowProgress AND GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text024) + Text007);

      IF ShowProgress AND GUIALLOWED THEN
        Window.UPDATE(1,Text025);
      IF NOT ESRole.GET(ESRoleDetail."Role ID") THEN BEGIN
        ESRole.INIT;
        ESRole."Role ID" := ESRoleDetail."Role ID";
        ESRole.Name := ESRoleDetail."Role Name";
        ESRole.INSERT(TRUE);
      END ELSE
        IF ESRole.Name <> ESRoleDetail."Role Name" THEN BEGIN
          ESRole.Name := ESRoleDetail."Role Name";
          ESRole.MODIFY(TRUE);
        END;

      IF ShowProgress AND GUIALLOWED THEN
        Window.UPDATE(1,Text026);
      ESRolePermTmp.RESET;
      ESRolePermTmp.SETRANGE("Role ID",ESRole."Role ID");
      ESRolePermTmp.DELETEALL;

      IF NOT ESRoleDetail."No Permissions" THEN BEGIN
        IF ShowProgress AND GUIALLOWED THEN
          Window.UPDATE(1,Text008);
        ESRoleRecording.RESET;
        ESRoleRecording.SETRANGE("Role ID",ESRoleDetail."Role ID");
        IF ESRoleRecording.FIND('-') THEN BEGIN
          REPEAT
            ESRecording.GET(ESRoleRecording."Recording Code");

            ESRolePermRecTmp.RESET;
            ESRolePermRecTmp.DELETEALL;

            CalculateRecordingRolePerm(
              ESRecording,ESSecuritySetup,ESRole."Role ID",ESRoleRecording."Extend Insert Permissions",
              ESRoleRecording."Add Related Permissions",ESRoleRecording."Role for Both Clients",
              ESRolePermRecTmp,InsertedTmpRecords);

            ESRolePermRecTmp.RESET;
            IF ESRolePermRecTmp.FIND('-') THEN
              REPEAT
                IF ESRolePermTmp.GET(
                     ESRole."Role ID",ESRolePermRecTmp."Object Type",ESRolePermRecTmp."Object ID")
                THEN BEGIN
                  RecordModified := FALSE;

                  AddRolePermissions(
                    ESRolePermTmp,ESRolePermRecTmp."Read Permission",
                    ESRolePermRecTmp."Insert Permission",ESRolePermRecTmp."Modify Permission",
                    ESRolePermRecTmp."Delete Permission",ESRolePermRecTmp."Execute Permission",
                    RecordModified);

                  // ESRolePermTmp."Security Filter" := ;
                  IF ESRolePermTmp.Origin > ESRolePermRecTmp.Origin THEN BEGIN
                    ESRolePermTmp.Origin := ESRolePermRecTmp.Origin;
                    RecordModified := TRUE;
                  END;
                  IF NOT ESRolePermTmp."Do not include Additional" AND
                     ESRolePermRecTmp."Do not include Additional"
                  THEN BEGIN
                    ESRolePermTmp."Do not include Additional" :=
                      ESRolePermRecTmp."Do not include Additional";
                    RecordModified := TRUE;
                  END;

                  IF RecordModified THEN
                    ESRolePermTmp.MODIFY;
                END ELSE BEGIN
                  ESRolePermTmp := ESRolePermRecTmp;
                  ESRolePermTmp.INSERT;

                  InsertedRecords := InsertedRecords + 1;
                END;
              UNTIL ESRolePermRecTmp.NEXT = 0;
          UNTIL ESRoleRecording.NEXT = 0;
        END;

        IF ShowProgress AND GUIALLOWED THEN
          Window.UPDATE(1,Text027);
        ESRoleBuilderPerm.RESET;
        ESRoleBuilderPerm.SETRANGE("Role ID",ESRoleDetail."Role ID");
        IF NOT ESSecuritySetup."Add All Role Builder Perms." THEN
          ESRoleBuilderPerm.SETFILTER("Object Type",ESSecuritySetup.ObjectTypeFilter);
        IF ESRoleBuilderPerm.FIND('-') THEN
          REPEAT
            IF ESRoleBuilderPerm."To Object ID" <> 0 THEN
              ToObjectID := ESRoleBuilderPerm."To Object ID"
            ELSE
              ToObjectID := ESRoleBuilderPerm."Object ID";

            ESObjectInformationTmp.RESET;
            ESObjectInformationTmp.DELETEALL;
            CASE TRUE OF
              ESRoleBuilderPerm."Object ID" = 0:
                BEGIN
                  ESObjectInformationTmp."Object Type" := ESRoleBuilderPerm."Object Type";
                  ESObjectInformationTmp."Object ID" := 0;
                  ESObjectInformationTmp.INSERT;
                END;
              ESRoleBuilderPerm."Object Type" = ESRoleBuilderPerm."Object Type"::System:
                FOR ObjectID := ESRoleBuilderPerm."Object ID" TO ToObjectID DO BEGIN
                  ESObjectInformationTmp."Object Type" := ESRoleBuilderPerm."Object Type";
                  ESObjectInformationTmp."Object ID" := ObjectID;
                  ESObjectInformationTmp.INSERT;
                END;
              ELSE BEGIN
                ESObjectInformation.RESET;
                IF ESRoleBuilderPerm."Object Type" = ESRoleBuilderPerm."Object Type"::TableData THEN
                  ESObjectInformation.SETRANGE("Object Type",ESObjectInformation."Object Type"::Table)
                ELSE
                  ESObjectInformation.SETRANGE("Object Type",ESRoleBuilderPerm."Object Type");
                ESObjectInformation.SETRANGE("Object ID",ESRoleBuilderPerm."Object ID",ToObjectID);
                IF ESObjectInformation.FIND('-') THEN
                  REPEAT
                    ESObjectInformationTmp."Object Type" := ESRoleBuilderPerm."Object Type";
                    ESObjectInformationTmp."Object ID" := ESObjectInformation."Object ID";
                    ESObjectInformationTmp.INSERT;
                  UNTIL ESObjectInformation.NEXT = 0;
              END;
            END;

            IF ToObjectID >= 2000000000 THEN
              FOR ObjectID := ESRoleBuilderPerm."Object ID" TO ToObjectID DO BEGIN
                ESObjectInformationTmp."Object Type" := ESRoleBuilderPerm."Object Type";
                ESObjectInformationTmp."Object ID" := ObjectID;
                IF NOT ESObjectInformationTmp.INSERT THEN
                  ;
              END;

            IF ESObjectInformationTmp.FIND('-') THEN
              REPEAT
                IF ESRolePermTmp.GET(
                     ESRole."Role ID",ESRoleBuilderPerm."Object Type",ESObjectInformationTmp."Object ID")
                THEN BEGIN
                  RecordModified := FALSE;

                  AddRolePermissions(
                    ESRolePermTmp,ESRoleBuilderPerm."Read Permission",
                    ESRoleBuilderPerm."Insert Permission",ESRoleBuilderPerm."Modify Permission",
                    ESRoleBuilderPerm."Delete Permission",ESRoleBuilderPerm."Execute Permission",
                    RecordModified);

                  IF FORMAT(ESRoleBuilderPerm."Security Filter") <> '' THEN BEGIN
                    ESRolePermTmp."Security Filter" := ESRoleBuilderPerm."Security Filter";
                    RecordModified := TRUE;
                  END;
                  IF ESRolePermTmp.Origin <> ESRoleBuilderPerm.Origin THEN BEGIN
                    ESRolePermTmp.Origin := ESRoleBuilderPerm.Origin;
                    RecordModified := TRUE;
                  END;
                  IF NOT ESRolePermTmp."Do not include Additional" AND
                     ESRoleBuilderPerm."Do not include Additional"
                  THEN BEGIN
                    ESRolePermTmp."Do not include Additional" := ESRoleBuilderPerm."Do not include Additional";
                    RecordModified := TRUE;
                  END;

                  IF RecordModified THEN
                    ESRolePermTmp.MODIFY;
                END ELSE BEGIN
                  ESRolePermTmp.INIT;
                  ESRolePermTmp."Role ID" := ESRole."Role ID";
                  ESRolePermTmp."Object Type" := ESRoleBuilderPerm."Object Type";
                  ESRolePermTmp."Object ID" := ESObjectInformationTmp."Object ID";
                  ESRolePermTmp."Read Permission" := ESRoleBuilderPerm."Read Permission";
                  ESRolePermTmp."Insert Permission" := ESRoleBuilderPerm."Insert Permission";
                  ESRolePermTmp."Modify Permission" := ESRoleBuilderPerm."Modify Permission";
                  ESRolePermTmp."Delete Permission" := ESRoleBuilderPerm."Delete Permission";
                  ESRolePermTmp."Execute Permission" := ESRoleBuilderPerm."Execute Permission";
                  ESRolePermTmp."Security Filter" := ESRoleBuilderPerm."Security Filter";
                  ESRolePermTmp.Origin := ESRoleBuilderPerm.Origin;
                  ESRolePermTmp."Do not include Additional" := ESRoleBuilderPerm."Do not include Additional";
                  ESRolePermTmp.INSERT;

                  InsertedRecords := InsertedRecords + 1;
                END;

                IF ESRoleBuilderPerm."Extend Insert Permissions" AND
                   (ESRolePermTmp."Insert Permission" = ESRolePermTmp."Insert Permission"::Yes)
                THEN BEGIN
                  ESRolePermTmp.CALCFIELDS("Limited License Object");
                  IF ESSecuritySetup."Extend Insert on Limited Lic." OR
                     NOT ESRolePermTmp."Limited License Object"
                  THEN BEGIN
                    ESRolePermTmp."Modify Permission" := ESRolePermTmp."Modify Permission"::Yes;
                    IF ESSecuritySetup."Extend Insert to Delete" THEN
                      ESRolePermTmp."Delete Permission" := ESRolePermTmp."Delete Permission"::Yes;
                    ESRolePermTmp.MODIFY;
                  END;
                END;

                IF ESRoleBuilderPerm."Add Related Permissions" AND
                   ((ESRoleBuilderPerm.Origin = ESRoleBuilderPerm.Origin::Recorded) OR
                    (ESRoleBuilderPerm.Origin = ESRoleBuilderPerm.Origin::Builder))
                THEN BEGIN
                  ESRolePerm2 := ESRolePermTmp;
                  ESRelationMgt.AddRelatedPermsToRole2(
                    ESRolePerm2,ESRolePermTmp,InsertedRecords,FALSE,TRUE);
                  ESRolePermTmp.GET(
                    ESRole."Role ID",ESRoleBuilderPerm."Object Type",ESObjectInformationTmp."Object ID");
                END;

                IF ESRoleBuilderPerm."Role for Both Clients" AND
                   (ESRolePermTmp."Object Type" IN
                    [ESRolePermTmp."Object Type"::"2",ESRolePermTmp."Object Type"::Page])
                THEN BEGIN
                  ESRolePerm2 := ESRolePermTmp;
                  CASE ESRolePermTmp."Object Type" OF
                    ESRolePermTmp."Object Type"::"2":
                      ESRolePerm2."Object Type" := ESRolePerm2."Object Type"::Page;
                    ESRolePermTmp."Object Type"::Page:
                      ESRolePerm2."Object Type" := ESRolePerm2."Object Type"::"2";
                  END;

                  ESRolePermTmp := ESRolePerm2;
                  IF ESRolePermTmp.INSERT THEN BEGIN
                    InsertedRecords := InsertedRecords + 1;

                    IF ESRoleBuilderPerm."Add Related Permissions" AND
                       ((ESRoleBuilderPerm.Origin = ESRoleBuilderPerm.Origin::Recorded) OR
                        (ESRoleBuilderPerm.Origin = ESRoleBuilderPerm.Origin::Builder))
                    THEN BEGIN
                      ESRolePerm3 := ESRolePerm2;
                      ESRelationMgt.AddRelatedPermsToRole2(
                        ESRolePerm3,ESRolePermTmp,InsertedRecords,FALSE,TRUE);
                    END;
                  END;
                END;
              UNTIL ESObjectInformationTmp.NEXT = 0;
          UNTIL ESRoleBuilderPerm.NEXT = 0;

        IF ESSecuritySetup."Add History and Security Perm." THEN BEGIN
          ESRolePermTmp.RESET;
          ESRolePermTmp.SETRANGE("Role ID",ESRole."Role ID");
          ESRolePermTmp.SETRANGE("Object Type",ESRolePerm2."Object Type"::TableData);
          IF ESRolePermTmp.FIND('-') THEN
            REPEAT
              ESRolePerm2 := ESRolePermTmp;

              IF ESObjectProperty.GET(
                   ESObjectProperty."Object Type"::Table,ESRolePerm2."Object ID")
              THEN BEGIN
                IF ESObjectProperty."History Table ID" <> 0 THEN BEGIN
                  IF NOT ESRolePermTmp.GET(
                           ESRolePermTmp."Role ID",ESRolePermTmp."Object Type"::TableData,
                           ESObjectProperty."History Table ID")
                  THEN BEGIN
                    ESRolePermTmp.INIT;
                    ESRolePermTmp."Role ID" := ESRole."Role ID";
                    ESRolePermTmp."Object Type" := ESRolePermTmp."Object Type"::TableData;
                    ESRolePermTmp."Object ID" := ESObjectProperty."History Table ID";
                    ESRolePermTmp."Read Permission" := ESRolePermTmp."Read Permission"::Yes;
                    IF (ESRolePerm2."Insert Permission" <> ESRolePerm2."Insert Permission"::" ") OR
                       (ESRolePerm2."Modify Permission" <> ESRolePerm2."Modify Permission"::" ") OR
                       (ESRolePerm2."Delete Permission" <> ESRolePerm2."Delete Permission"::" ")
                    THEN
                      ESRolePermTmp."Insert Permission" := ESRolePermTmp."Insert Permission"::Yes
                    ELSE
                      ESRolePermTmp."Insert Permission" := ESRolePermTmp."Insert Permission"::" ";
                    ESRolePermTmp."Modify Permission" := ESRolePermTmp."Modify Permission"::" ";
                    ESRolePermTmp."Delete Permission" := ESRolePermTmp."Delete Permission"::" ";
                    ESRolePermTmp."Execute Permission" := ESRolePermTmp."Execute Permission"::" ";
                    ESRolePermTmp.Origin := ESRolePermTmp.Origin::"History Table";
                    ESRolePermTmp.INSERT;

                    InsertedRecords := InsertedRecords + 1;
                  END ELSE BEGIN
                    ESRolePermTmp."Read Permission" := ESRolePermTmp."Read Permission"::Yes;
                    IF (ESRolePerm2."Insert Permission" <> ESRolePerm2."Insert Permission"::" ") OR
                       (ESRolePerm2."Modify Permission" <> ESRolePerm2."Modify Permission"::" ") OR
                       (ESRolePerm2."Delete Permission" <> ESRolePerm2."Delete Permission"::" ")
                    THEN
                      ESRolePermTmp."Insert Permission" := ESRolePermTmp."Insert Permission"::Yes;
                    ESRolePermTmp.MODIFY;
                  END;
                END;

                IF ESObjectProperty."Security Table ID" <> 0 THEN BEGIN
                  IF NOT ESRolePermTmp.GET(
                           ESRolePermTmp."Role ID",ESRolePermTmp."Object Type"::TableData,
                           ESObjectProperty."Security Table ID")
                  THEN BEGIN
                    ESRolePermTmp.INIT;
                    ESRolePermTmp."Role ID" := ESRole."Role ID";
                    ESRolePermTmp."Object Type" := ESRolePermTmp."Object Type"::TableData;
                    ESRolePermTmp."Object ID" := ESObjectProperty."Security Table ID";
                    ESRolePermTmp."Read Permission" := ESRolePermTmp."Read Permission"::Yes;
                    ESRolePermTmp."Insert Permission" := ESRolePermTmp."Insert Permission"::" ";
                    ESRolePermTmp."Modify Permission" := ESRolePermTmp."Modify Permission"::" ";
                    ESRolePermTmp."Delete Permission" := ESRolePermTmp."Delete Permission"::" ";
                    ESRolePermTmp."Execute Permission" := ESRolePermTmp."Execute Permission"::" ";
                    ESRolePermTmp.Origin := ESRolePermTmp.Origin::"Security Table";
                    ESRolePermTmp.INSERT;

                    InsertedRecords := InsertedRecords + 1;
                  END ELSE BEGIN
                    IF ESRolePermTmp."Read Permission" <>  ESRolePermTmp."Read Permission"::Yes THEN BEGIN
                      ESRolePermTmp."Read Permission" := ESRolePermTmp."Read Permission"::Yes;
                      ESRolePermTmp.MODIFY;
                    END;
                  END;
                END;
              END;

              ESRolePermTmp := ESRolePerm2;
            UNTIL ESRolePermTmp.NEXT = 0;
        END;
      END;

      IF ESSecuritySetup."Remove Specific Table Perm." THEN BEGIN
        ESRolePermTmp.RESET;
        ESRolePermTmp.SETRANGE("Role ID",ESRoleDetail."Role ID");
        ESRolePermTmp.SETRANGE("Object Type",ESRolePermTmp."Object Type"::Table);
        ESRolePermTmp.SETFILTER("Object ID",'>0');
        InsertedRecords := InsertedRecords - ESRolePermTmp.COUNT;
        ESRolePermTmp.DELETEALL;
      END;

      IF ESRoleDetail."Remove ALL Permissions" AND (ESSecuritySetup."ALL Role ID" <> '') THEN BEGIN
        ESRolePerm2.RESET;
        ESRolePerm2.SETRANGE("Role ID",ESSecuritySetup."ALL Role ID");
        IF ESRolePerm2.FIND('-') THEN
          REPEAT
            IF ESRolePermTmp.GET(ESRole."Role ID",ESRolePerm2."Object Type",ESRolePerm2."Object ID") THEN
              IF ESRolePermTmp.RoleLessThanOrEqual(ESRolePerm2) THEN BEGIN
                ESRolePermTmp.DELETE;
                InsertedRecords := InsertedRecords - 1;
              END;
          UNTIL ESRolePerm2.NEXT = 0;
      END;

      IF ESRoleDetail."Remove BASIC Permissions" AND (ESSecuritySetup."BASIC Role ID" <> '') THEN BEGIN
        ESRolePerm2.RESET;
        ESRolePerm2.SETRANGE("Role ID",ESSecuritySetup."BASIC Role ID");
        IF ESRolePerm2.FIND('-') THEN
          REPEAT
            IF ESRolePermTmp.GET(ESRole."Role ID",ESRolePerm2."Object Type",ESRolePerm2."Object ID") THEN
              IF ESRolePermTmp.RoleLessThanOrEqual(ESRolePerm2) THEN BEGIN
                ESRolePermTmp.DELETE;
                InsertedRecords := InsertedRecords - 1;
              END;
          UNTIL ESRolePerm2.NEXT = 0;
      END;

      IF ESSecuritySetup."Use Limited License Permission" THEN BEGIN
        ESObjectProperty.RESET;
        ESObjectProperty.SETRANGE("Limited License Object",TRUE);
        IF ESObjectProperty.FIND('-') THEN
          REPEAT
            IF ESRolePermTmp.GET(
                 ESRoleDetail."Role ID",ESObjectProperty."Object Type",
                 ESObjectProperty."Object ID")
            THEN BEGIN
              RecordModified := FALSE;

              IF ((ESRolePermTmp."Read Permission" = ESRolePermTmp."Read Permission"::Yes) AND
                  (ESObjectProperty."Read Permission (License)" <>
                   ESObjectProperty."Read Permission (License)"::Yes)) OR
                 ((ESRolePermTmp."Read Permission" = ESRolePermTmp."Read Permission"::Indirect) AND
                  (ESObjectProperty."Read Permission (License)" =
                   ESObjectProperty."Read Permission (License)"::" "))
              THEN BEGIN
                ESRolePermTmp."Read Permission" :=
                  ESObjectProperty."Read Permission (License)";
                RecordModified := TRUE;
              END;

              IF ((ESRolePermTmp."Insert Permission" = ESRolePermTmp."Insert Permission"::Yes) AND
                  (ESObjectProperty."Insert Permission (License)" <>
                   ESObjectProperty."Insert Permission (License)"::Yes)) OR
                 ((ESRolePermTmp."Insert Permission" = ESRolePermTmp."Insert Permission"::Indirect) AND
                  (ESObjectProperty."Insert Permission (License)" =
                   ESObjectProperty."Insert Permission (License)"::" "))
              THEN BEGIN
                ESRolePermTmp."Insert Permission" :=
                  ESObjectProperty."Insert Permission (License)";
                RecordModified := TRUE;
              END;

              IF ((ESRolePermTmp."Modify Permission" = ESRolePermTmp."Modify Permission"::Yes) AND
                  (ESObjectProperty."Modify Permission (License)" <>
                   ESObjectProperty."Modify Permission (License)"::Yes)) OR
                 ((ESRolePermTmp."Modify Permission" = ESRolePermTmp."Modify Permission"::Indirect) AND
                  (ESObjectProperty."Modify Permission (License)" =
                   ESObjectProperty."Modify Permission (License)"::" "))
              THEN BEGIN
                ESRolePermTmp."Modify Permission" :=
                  ESObjectProperty."Modify Permission (License)";
                RecordModified := TRUE;
              END;

              IF ((ESRolePermTmp."Delete Permission" = ESRolePermTmp."Delete Permission"::Yes) AND
                  (ESObjectProperty."Delete Permission (License)" <>
                   ESObjectProperty."Delete Permission (License)"::Yes)) OR
                 ((ESRolePermTmp."Delete Permission" = ESRolePermTmp."Delete Permission"::Indirect) AND
                  (ESObjectProperty."Delete Permission (License)" =
                   ESObjectProperty."Delete Permission (License)"::" "))
              THEN BEGIN
                ESRolePermTmp."Delete Permission" :=
                  ESObjectProperty."Delete Permission (License)";
                RecordModified := TRUE;
              END;

              IF ((ESRolePermTmp."Execute Permission" = ESRolePermTmp."Execute Permission"::Yes) AND
                  (ESObjectProperty."Execute Permission (License)" <>
                   ESObjectProperty."Execute Permission (License)"::Yes)) OR
                 ((ESRolePermTmp."Execute Permission" = ESRolePermTmp."Execute Permission"::Indirect) AND
                  (ESObjectProperty."Execute Permission (License)" =
                   ESObjectProperty."Execute Permission (License)"::" "))
              THEN BEGIN
                ESRolePermTmp."Execute Permission" :=
                  ESObjectProperty."Execute Permission (License)";
                RecordModified := TRUE;
              END;

              IF RecordModified THEN
                ESRolePermTmp.MODIFY;
            END;
          UNTIL ESObjectProperty.NEXT = 0;
      END;

      ESObjectProperty.RESET;
      ESObjectProperty.SETRANGE("Object Type",ESObjectProperty."Object Type"::TableData);
      ESObjectProperty.SETRANGE("Security Filter Table",TRUE);
      IF ESObjectProperty.FIND('-') THEN
        REPEAT
          IF ESRolePermTmp.GET(
               ESRole."Role ID",ESObjectProperty."Object Type",ESObjectProperty."Object ID")
          THEN
            ESRolePermTmp.DELETE;
        UNTIL ESObjectProperty.NEXT = 0;

      ESRoleBuilderPerm.RESET;
      ESRoleBuilderPerm.SETRANGE("Role ID",ESRoleDetail."Role ID");
      ESRoleBuilderPerm.SETRANGE("Override Permission",TRUE);
      IF NOT ESSecuritySetup."Add All Role Builder Perms." THEN
        ESRoleBuilderPerm.SETFILTER("Object Type",ESSecuritySetup.ObjectTypeFilter);
      IF ESRoleBuilderPerm.FIND('-') THEN
        REPEAT
          IF ESRolePermTmp.GET(
               ESRoleBuilderPerm."Role ID",ESRoleBuilderPerm."Object Type",
               ESRoleBuilderPerm."Object ID")
          THEN
            IF (ESRoleBuilderPerm."Read Permission" <> ESRolePermTmp."Read Permission") OR
                (ESRoleBuilderPerm."Insert Permission" <> ESRolePermTmp."Insert Permission") OR
                (ESRoleBuilderPerm."Modify Permission" <> ESRolePermTmp."Modify Permission") OR
                (ESRoleBuilderPerm."Delete Permission" <> ESRolePermTmp."Delete Permission") OR
                (ESRoleBuilderPerm."Execute Permission" <> ESRolePermTmp."Execute Permission")
            THEN BEGIN
              ESRolePermTmp."Read Permission" := ESRoleBuilderPerm."Read Permission";
              ESRolePermTmp."Insert Permission" := ESRoleBuilderPerm."Insert Permission";
              ESRolePermTmp."Modify Permission" := ESRoleBuilderPerm."Modify Permission";
              ESRolePermTmp."Delete Permission" := ESRoleBuilderPerm."Delete Permission";
              ESRolePermTmp."Execute Permission" := ESRoleBuilderPerm."Execute Permission";
              ESRolePermTmp.MODIFY;
            END;
        UNTIL ESRoleBuilderPerm.NEXT = 0;

      ESRolePermTmp.RESET;
      ESRolePermTmp.SETRANGE("Role ID",ESRoleDetail."Role ID");
      EOFNew := NOT ESRolePermTmp.FIND('-');

      ESRolePerm2Tmp.RESET;
      ESRolePerm2Tmp.DELETEALL;

      ESRolePerm2.RESET;
      ESRolePerm2.SETRANGE("Role ID",ESRoleDetail."Role ID");
      IF ESRolePerm2.FIND('-') THEN
        REPEAT
          ESRolePerm2Tmp := ESRolePerm2;
          ESRolePerm2Tmp.INSERT;
        UNTIL ESRolePerm2.NEXT = 0;
      EOFOld := NOT ESRolePerm2Tmp.FIND('-');

      WHILE NOT EOFNew AND NOT EOFOld DO BEGIN
        IF (ESRolePermTmp."Role ID" = ESRolePerm2Tmp."Role ID") AND
           (ESRolePermTmp."Object Type" = ESRolePerm2Tmp."Object Type") AND
           (ESRolePermTmp."Object ID" = ESRolePerm2Tmp."Object ID")
        THEN BEGIN
          IF (ESRolePermTmp."Read Permission" <> ESRolePerm2Tmp."Read Permission") OR
             (ESRolePermTmp."Insert Permission" <> ESRolePerm2Tmp."Insert Permission") OR
             (ESRolePermTmp."Modify Permission" <> ESRolePerm2Tmp."Modify Permission") OR
             (ESRolePermTmp."Delete Permission" <> ESRolePerm2Tmp."Delete Permission") OR
             (ESRolePermTmp."Execute Permission" <> ESRolePerm2Tmp."Execute Permission") OR
             (FORMAT(ESRolePermTmp."Security Filter") <> FORMAT(ESRolePerm2Tmp."Security Filter"))
          THEN BEGIN
            ESRolePerm3 := ESRolePermTmp;
            ESRolePerm3.MODIFY;
          END;

          EOFNew := ESRolePermTmp.NEXT = 0;
          EOFOld := ESRolePerm2Tmp.NEXT = 0;
        END ELSE
          IF (ESRolePermTmp."Role ID" < ESRolePerm2Tmp."Role ID") OR
             ((ESRolePermTmp."Role ID" = ESRolePerm2Tmp."Role ID") AND
              (ESRolePermTmp."Object Type" < ESRolePerm2Tmp."Object Type")) OR
             ((ESRolePermTmp."Role ID" = ESRolePerm2Tmp."Role ID") AND
              (ESRolePermTmp."Object Type" = ESRolePerm2Tmp."Object Type") AND
              (ESRolePermTmp."Object ID" < ESRolePerm2Tmp."Object ID"))
          THEN BEGIN
            IF ESRolePermTmp."Role ID" <> ESSecuritySetup."SUPER Role ID" THEN BEGIN
              ESRolePerm3 := ESRolePermTmp;
              ESRolePerm3.INSERT;
            END;

            EOFNew := ESRolePermTmp.NEXT = 0;
          END ELSE BEGIN
            IF ESRolePerm2Tmp."Role ID" <> ESSecuritySetup."SUPER Role ID" THEN BEGIN
              ESRolePerm3 := ESRolePerm2Tmp;
              ESRolePerm3.DELETE;
            END;

            EOFOld := ESRolePerm2Tmp.NEXT = 0;
          END;
      END;

      WHILE NOT EOFNew DO BEGIN
        ESRolePerm3 := ESRolePermTmp;
        ESRolePerm3.INSERT;

        EOFNew := ESRolePermTmp.NEXT = 0;
      END;

      WHILE NOT EOFOld DO BEGIN
        ESRolePerm3 := ESRolePerm2Tmp;
        ESRolePerm3.DELETE;

        EOFOld := ESRolePerm2Tmp.NEXT = 0;
      END;

      IF NOT ESSecuritySetup."Manual Update of Summary Perm." THEN
        ESMgt.UpdateRoleSummaryPerm(ESRole,TRUE,FALSE,ShowProgress);

      ESRoleDetail."Role Updated Date Time" := CURRENTDATETIME;
      ESRoleDetail.SetNoComment(NOT ESSecuritySetup."Detailed Comments");
      ESRoleDetail.MODIFY(TRUE);

      IF ShowProgress AND GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN BEGIN
        IF ESRoleDetail."Parent Role ID" <> '' THEN
          AddedComment :=
            AddedComment +
              STRSUBSTNO(Text029,ESRoleDetail.FIELDCAPTION("Parent Role ID"));

        IF ESRoleDetail."Role Group ID" <> '' THEN
          AddedComment :=
            AddedComment +
              STRSUBSTNO(Text029,ESRoleDetail.FIELDCAPTION("Role Group ID"));

        MESSAGE(Text028 + AddedComment,InsertedRecords,ESRole."Role ID");
      END;
    END;

    PROCEDURE CalculateRecordingRolePerm@1240520023(ESRecording@1240520016 : Record 14123651;ESSecuritySetup@1240520010 : Record 14123521;RoleID@1240520012 : Code[20];ExtendInsertPermissions@1240520009 : Boolean;AddRelatedPermissions@1240520017 : Boolean;RoleForBothClients@1240520018 : Boolean;VAR ESRolePermTmp@1240520014 : TEMPORARY Record 14123506;VAR InsertedTmpRecords@1240520013 : Integer);
    VAR
      ESRecordingPerm@1240520008 : Record 14123652;
      ESRolePermTmp2@1240520011 : TEMPORARY Record 14123506;
      ESRolePermTmp3@1240520020 : TEMPORARY Record 14123506;
      ESObjectInformation@1240520019 : Record 14123509;
      ESRelationMgt@1240520015 : Codeunit 14123602;
    BEGIN
      ESRecordingPerm.RESET;
      ESRecordingPerm.SETRANGE("Recording Code",ESRecording.Code);
      IF NOT ESSecuritySetup."Add All Recording Permissions" THEN
        ESRecordingPerm.SETFILTER("Object Type",ESSecuritySetup.ObjectTypeFilter);
      IF ESRecordingPerm.FIND('-') THEN BEGIN
        REPEAT
          ESRolePermTmp.INIT;
          ESRolePermTmp."Role ID" := RoleID;
          ESRolePermTmp."Object Type" := ESRecordingPerm."Object Type";
          ESRolePermTmp."Object ID" := ESRecordingPerm."Object ID";

          IF ESRecordingPerm."Read Required" THEN
            ESRolePermTmp."Read Permission" := ESRolePermTmp."Read Permission"::Yes
          ELSE
            IF ESRecordingPerm."Calculate Flowfield Required" THEN BEGIN
              IF ESSecuritySetup."Use Indirect for FlowFields" THEN
                ESRolePermTmp."Read Permission" := ESRolePermTmp."Read Permission"::Indirect
              ELSE
                ESRolePermTmp."Read Permission" := ESRolePermTmp."Read Permission"::Yes;
            END ELSE
              ESRolePermTmp."Read Permission" := ESRolePermTmp."Read Permission"::" ";

          IF ESRecordingPerm."Insert Required" THEN
            ESRolePermTmp."Insert Permission" := ESRolePermTmp."Insert Permission"::Yes
          ELSE
            ESRolePermTmp."Insert Permission" := ESRolePermTmp."Insert Permission"::" ";

          IF ESRecordingPerm."Modify Required" THEN
            ESRolePermTmp."Modify Permission" := ESRolePermTmp."Modify Permission"::Yes
          ELSE
            ESRolePermTmp."Modify Permission" := ESRolePermTmp."Modify Permission"::" ";

          IF ESRecordingPerm."Delete Required" THEN
            ESRolePermTmp."Delete Permission" := ESRolePermTmp."Delete Permission"::Yes
          ELSE
            ESRolePermTmp."Delete Permission" := ESRolePermTmp."Delete Permission"::" ";

          IF ESRecordingPerm."Execute Required" THEN
            ESRolePermTmp."Execute Permission" := ESRolePermTmp."Execute Permission"::Yes
          ELSE
            ESRolePermTmp."Execute Permission" := ESRolePermTmp."Execute Permission"::" ";

          // ESRolePermTmp."Security Filter" := '';
          ESRolePermTmp.Origin := ESRecordingPerm.Origin;
          ESRolePermTmp."Do not include Additional" := ESRecordingPerm."Do not include Additional";
          IF (ESRolePermTmp."Object Type" = ESRolePermTmp."Object Type"::System) OR
             (ESRolePermTmp."Object ID" >= 2000000000) OR
             ESObjectInformation.GET(ESRolePermTmp."Object Type",ESRolePermTmp."Object ID")
          THEN BEGIN
            ESRolePermTmp.INSERT;

            InsertedTmpRecords := InsertedTmpRecords + 1;
          END;
        UNTIL ESRecordingPerm.NEXT = 0;

        IF ExtendInsertPermissions THEN BEGIN
          ESRolePermTmp.RESET;
          ESRolePermTmp.SETRANGE("Insert Permission",ESRolePermTmp."Insert Permission"::Yes);
          IF ESRolePermTmp.FIND('-') THEN
            REPEAT
              ESRolePermTmp.CALCFIELDS("Limited License Object");
              IF ESSecuritySetup."Extend Insert on Limited Lic." OR
                 NOT ESRolePermTmp."Limited License Object"
              THEN BEGIN
                ESRolePermTmp."Modify Permission" := ESRolePermTmp."Modify Permission"::Yes;
                IF ESSecuritySetup."Extend Insert to Delete" THEN
                  ESRolePermTmp."Delete Permission" := ESRolePermTmp."Delete Permission"::Yes;
                ESRolePermTmp.MODIFY;
              END;
            UNTIL ESRolePermTmp.NEXT = 0;
        END;

        IF AddRelatedPermissions THEN BEGIN
          ESRolePermTmp.RESET;
          ESRolePermTmp.SETRANGE(Origin,ESRolePermTmp.Origin::Recorded);
          IF ESRolePermTmp.FIND('-') THEN BEGIN
            ESRolePermTmp2.RESET;
            ESRolePermTmp2.DELETEALL;
            REPEAT
              ESRolePermTmp2 := ESRolePermTmp;
              ESRolePermTmp2.INSERT;
            UNTIL ESRolePermTmp.NEXT = 0;

            ESRolePermTmp2.FIND('-');
            ESRelationMgt.AddRelatedPermsToRole2(
              ESRolePermTmp2,ESRolePermTmp,InsertedTmpRecords,FALSE,FALSE);
          END;
        END;

        IF RoleForBothClients THEN BEGIN
          ESRolePermTmp.RESET;
          ESRolePermTmp.SETFILTER(
            "Object Type",'%1|%2',ESRolePermTmp."Object Type"::"2",ESRolePermTmp."Object Type"::Page);
          IF ESRolePermTmp.FIND('-') THEN
            REPEAT
              ESRolePermTmp2 := ESRolePermTmp;
              CASE ESRolePermTmp."Object Type" OF
                ESRolePermTmp."Object Type"::"2":
                  ESRolePermTmp."Object Type" := ESRolePermTmp."Object Type"::Page;
                ESRolePermTmp."Object Type"::Page:
                  ESRolePermTmp."Object Type" := ESRolePermTmp."Object Type"::"2";
              END;

              IF ESObjectInformation.GET(ESRolePermTmp."Object Type",ESRolePermTmp."Object ID") THEN
                IF ESRolePermTmp.INSERT THEN BEGIN
                  InsertedTmpRecords := InsertedTmpRecords + 1;

                  IF AddRelatedPermissions THEN BEGIN
                    ESRolePermTmp3.RESET;
                    ESRolePermTmp3.DELETEALL;
                    ESRolePermTmp3 := ESRolePermTmp;
                    ESRolePermTmp3.INSERT;

                    ESRolePermTmp3.FIND('-');
                    ESRelationMgt.AddRelatedPermsToRole2(
                      ESRolePermTmp3,ESRolePermTmp,InsertedTmpRecords,FALSE,FALSE);
                  END;
                END;
              ESRolePermTmp := ESRolePermTmp2;
            UNTIL ESRolePermTmp.NEXT = 0;

          END;
      END;
    END;

    LOCAL PROCEDURE AddRolePermissions@1240520025(VAR ESRolePerm@1240520008 : Record 14123506;ReadPermission@1240520009 : ' ,Yes,Indirect';InsertPermission@1240520013 : ' ,Yes,Indirect';ModifyPermission@1240520012 : ' ,Yes,Indirect';DeletePermission@1240520011 : ' ,Yes,Indirect';ExecutePermission@1240520010 : ' ,Yes,Indirect';VAR RecordModified@1240520014 : Boolean);
    BEGIN
      IF ((ESRolePerm."Read Permission" = ESRolePerm."Read Permission"::" ") AND
          (ReadPermission <> ReadPermission::" ")) OR
         ((ESRolePerm."Read Permission" = ESRolePerm."Read Permission"::Indirect) AND
          (ReadPermission = ReadPermission::Yes))
      THEN BEGIN
        ESRolePerm."Read Permission" := ReadPermission;
        RecordModified := TRUE;
      END;

      IF ((ESRolePerm."Insert Permission" = ESRolePerm."Insert Permission"::" ") AND
          (InsertPermission <> InsertPermission::" ")) OR
         ((ESRolePerm."Insert Permission" = ESRolePerm."Insert Permission"::Indirect) AND
          (InsertPermission = InsertPermission::Yes))
      THEN BEGIN
        ESRolePerm."Insert Permission" := InsertPermission;
        RecordModified := TRUE;
      END;

      IF ((ESRolePerm."Modify Permission" = ESRolePerm."Modify Permission"::" ") AND
          (ModifyPermission <> ModifyPermission::" ")) OR
         ((ESRolePerm."Modify Permission" = ESRolePerm."Modify Permission"::Indirect) AND
          (ModifyPermission = ModifyPermission::Yes))
      THEN BEGIN
        ESRolePerm."Modify Permission" := ModifyPermission;
        RecordModified := TRUE;
      END;

      IF ((ESRolePerm."Delete Permission" = ESRolePerm."Delete Permission"::" ") AND
          (DeletePermission <> DeletePermission::" ")) OR
         ((ESRolePerm."Delete Permission" = ESRolePerm."Delete Permission"::Indirect) AND
          (DeletePermission = DeletePermission::Yes))
      THEN BEGIN
        ESRolePerm."Delete Permission" := DeletePermission;
        RecordModified := TRUE;
      END;

      IF ((ESRolePerm."Execute Permission" = ESRolePerm."Execute Permission"::" ") AND
          (ExecutePermission <> ExecutePermission::" ")) OR
         ((ESRolePerm."Execute Permission" = ESRolePerm."Execute Permission"::Indirect) AND
          (ExecutePermission = ExecutePermission::Yes))
      THEN BEGIN
        ESRolePerm."Execute Permission" := ExecutePermission;
        RecordModified := TRUE;
      END;
    END;

    PROCEDURE UpdateRoleGroupPermissions@1240520024(ESRoleDetail@1240520008 : Record 14123653);
    VAR
      ESRoleTmp@1240520009 : TEMPORARY Record 14123505;
      ESRolePerm@1240520012 : Record 14123506;
      ESRolePermTmp@1240520011 : TEMPORARY Record 14123506;
      ESMgt@1240520010 : Codeunit 14123501;
      RecordModified@1240520013 : Boolean;
    BEGIN
      ESMgt.CalculateRoleGroupRoles(ESRoleTmp,ESRoleDetail."Role Group ID",TRUE);

      IF ESRoleTmp.FIND('-') THEN
        REPEAT
          ESRolePerm.RESET;
          ESRolePerm.SETRANGE("Role ID",ESRoleTmp."Role ID");
          IF ESRolePerm.FIND('-') THEN
            REPEAT
              IF ESRolePermTmp.GET(
                   ESRoleDetail."Role ID",ESRolePerm."Object Type",ESRolePerm."Object ID")
              THEN BEGIN
                RecordModified := FALSE;

                AddRolePermissions(
                  ESRolePermTmp,ESRolePerm."Read Permission",ESRolePerm."Insert Permission",
                  ESRolePerm."Modify Permission",ESRolePerm."Delete Permission",
                  ESRolePerm."Execute Permission",RecordModified);

                IF RecordModified THEN
                  ESRolePermTmp.MODIFY;
              END ELSE BEGIN
                ESRolePermTmp.INIT;
                ESRolePermTmp."Role ID" := ESRoleDetail."Role ID";
                ESRolePermTmp."Object Type" := ESRolePerm."Object Type";
                ESRolePermTmp."Object ID" := ESRolePerm."Object ID";
                ESRolePermTmp."Read Permission" := ESRolePerm."Read Permission";
                ESRolePermTmp."Insert Permission" := ESRolePerm."Insert Permission";
                ESRolePermTmp."Modify Permission" := ESRolePerm."Modify Permission";
                ESRolePermTmp."Delete Permission" := ESRolePerm."Delete Permission";
                ESRolePermTmp."Execute Permission" := ESRolePerm."Execute Permission";
                ESRolePermTmp.INSERT;
              END;
            UNTIL ESRolePerm.NEXT = 0;
        UNTIL ESRoleTmp.NEXT = 0;

      ESRolePermTmp.RESET;
      IF ESRolePermTmp.FIND('-') THEN
        REPEAT
          ESRolePerm := ESRolePermTmp;
          ESRolePerm.INSERT;
        UNTIL ESRolePermTmp.NEXT = 0;
    END;

    PROCEDURE CreateRoleDetailFromRole@1240520021(ESRole@1240520008 : Record 14123505;ShowStatus@1240520012 : Boolean;ShowProgress@1240520016 : Boolean);
    VAR
      ESSecuritySetup@1240520013 : Record 14123521;
      ESRoleDetail@1240520009 : Record 14123653;
      ESRolePerm@1240520010 : Record 14123506;
      ESRoleBuilderPerm@1240520011 : Record 14123655;
      Window@1240520015 : Dialog;
      InsertedPermissions@1240520014 : Integer;
    BEGIN
      ESRole.TESTFIELD("Role ID");

      IF ESRoleDetail.GET(ESRole."Role ID") THEN
        ERROR(Text032,ESRole."Role ID");

      ESSecuritySetup.GET;
      ESSecuritySetup.TestRestrictedRoleID(ESRole."Role ID",TRUE);

      ESRoleDetail.RESET;
      ESRoleDetail.SETRANGE("Role ID",ESRole."Role ID");
      IF ESRoleDetail.FIND('-') THEN
        ERROR(Text012,ESRoleDetail."Role ID");

      IF ShowProgress AND GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text033) + Text007);

      IF ShowProgress AND GUIALLOWED THEN
        Window.UPDATE(1,Text034);
      ESRoleDetail.INIT;
      ESRoleDetail."Role ID" := ESRole."Role ID";
      ESRoleDetail.VALIDATE("Role ID",ESRole."Role ID");
      ESRoleDetail."Role Name" := ESRole.Name;
      ESRoleDetail.INSERT(TRUE);

      IF ShowProgress AND GUIALLOWED THEN
        Window.UPDATE(1,Text035);
      ESRolePerm.RESET;
      ESRolePerm.SETRANGE("Role ID",ESRole."Role ID");
      IF ESRolePerm.FIND('-') THEN
        REPEAT
          ESRoleBuilderPerm.INIT;
          ESRoleBuilderPerm.SetAllowZeroNoQuestion(TRUE,NOT ESSecuritySetup."Detailed Comments");
          ESRoleBuilderPerm."Role ID" := ESRoleDetail."Role ID";
          ESRoleBuilderPerm."Object Type" := ESRolePerm."Object Type";
          ESRoleBuilderPerm."Object ID" := ESRolePerm."Object ID";
          ESRoleBuilderPerm."Read Permission" := ESRolePerm."Read Permission";
          ESRoleBuilderPerm."Insert Permission" := ESRolePerm."Insert Permission";
          ESRoleBuilderPerm."Modify Permission" := ESRolePerm."Modify Permission";
          ESRoleBuilderPerm."Delete Permission" := ESRolePerm."Delete Permission";
          ESRoleBuilderPerm."Execute Permission" := ESRolePerm."Execute Permission";
          ESRoleBuilderPerm."Security Filter" := ESRolePerm."Security Filter";
          ESRoleBuilderPerm.Origin := ESRolePerm.Origin;
          ESRoleBuilderPerm."Do not include Additional" := ESRolePerm."Do not include Additional";
          ESRoleBuilderPerm.INSERT(TRUE);

          InsertedPermissions := InsertedPermissions + 1;
        UNTIL ESRolePerm.NEXT = 0;

      IF ShowProgress AND GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text036,ESRoleDetail."Role ID",InsertedPermissions);
    END;

    PROCEDURE CreateAllRoleDetailsFromRoles@1240520022(ShowStatus@1240520008 : Boolean);
    VAR
      ESRole@1240520009 : Record 14123505;
      ESSecuritySetup@1240520010 : Record 14123521;
      ESRoleDetail@1240520011 : Record 14123653;
      Window@1240520012 : Dialog;
      InsertedRecords@1240520013 : Integer;
    BEGIN
      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text037) + Text007);

      ESSecuritySetup.GET;
      ESSecuritySetup.CRONUSCompanyComment;

      ESRole.RESET;
      IF ESRole.FIND('-') THEN
        REPEAT
          IF GUIALLOWED THEN
            Window.UPDATE(1,STRSUBSTNO('%1 %2',ESRole."Role ID",ESRole.Name));

          IF NOT ESSecuritySetup.TestRestrictedRoleID(ESRole."Role ID",FALSE) THEN
            IF NOT ESRoleDetail.GET(ESRole."Role ID") THEN BEGIN
              CreateRoleDetailFromRole(ESRole,FALSE,FALSE);

              InsertedRecords := InsertedRecords + 1;
            END;
        UNTIL ESRole.NEXT = 0;

      IF ShowStatus THEN
        MESSAGE(Text038,InsertedRecords);
      ESSecuritySetup.Comment(1,STRSUBSTNO(Text038,InsertedRecords));
    END;

    PROCEDURE UpdateAllRecordingSummaryPerm@1240520031(UpdateSummaryPermissions@1240520017 : Boolean;ShowStatus@1240520018 : Boolean);
    VAR
      ESSecuritySetup@1240520015 : Record 14123521;
      ESRecording@1240520010 : Record 14123651;
      Window@1240520016 : Dialog;
      UpdatedRecords@1240520009 : Integer;
    BEGIN
      ESSecuritySetup.GET;
      ESSecuritySetup.CRONUSCompanyComment;

      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text039) + Text007);

      ESRecording.RESET;
      IF ESRecording.FIND('-') THEN
        REPEAT
          IF GUIALLOWED THEN
            Window.UPDATE(1,STRSUBSTNO('%1 %2',ESRecording.Code,ESRecording.Description));

          UpdateRecordingSummaryPerm(ESRecording,UpdateSummaryPermissions,FALSE,FALSE);

          UpdatedRecords := UpdatedRecords + 1;
        UNTIL ESRecording.NEXT = 0;

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text044,UpdatedRecords);
    END;

    PROCEDURE UpdateRecordingSummaryPerm@1240520030(ESRecording@1240520008 : Record 14123651;UpdateSummaryPermissions@1240520017 : Boolean;ShowStatus@1240520018 : Boolean;ShowProgress@1240520010 : Boolean);
    VAR
      ESSecuritySetup@1240520015 : Record 14123521;
      ESRolePermTmp@1240520011 : TEMPORARY Record 14123506;
      ESSummaryPerm@1240520013 : Record 14123537;
      Window@1240520016 : Dialog;
      InsertedPermissionRecords@1240520009 : Integer;
      InsertedTmpRecords@1240520012 : Integer;
    BEGIN
      IF ShowProgress AND GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text039) + Text007);

      ESSecuritySetup.GET;

      IF ShowProgress AND GUIALLOWED THEN
        Window.UPDATE(1,Text040);
      ESSummaryPerm.RESET;
      ESSummaryPerm.SETRANGE(Type,ESSummaryPerm.Type::Recording);
      ESSummaryPerm.SETRANGE(Code,ESRecording.Code);
      ESSummaryPerm.DELETEALL;

      IF ShowProgress AND GUIALLOWED THEN
        Window.UPDATE(1,Text041);

      ESRolePermTmp.RESET;
      ESRolePermTmp.DELETEALL;

      CalculateRecordingRolePerm(
        ESRecording,ESSecuritySetup,'',ESRecording."Extend Insert Permissions",
        ESRecording."Add Related Permissions",ESRecording."Role for Both Clients",
        ESRolePermTmp,InsertedTmpRecords);

      IF UpdateSummaryPermissions THEN BEGIN
        IF ShowProgress AND GUIALLOWED THEN
          Window.UPDATE(1,Text042);

        ESRolePermTmp.RESET;
        IF ESRolePermTmp.FIND('-') THEN
          REPEAT
            ESSummaryPerm.INIT;
            ESSummaryPerm.Type := ESSummaryPerm.Type::Recording;
            ESSummaryPerm.Code := ESRecording.Code;
            ESSummaryPerm."Object Type" := ESRolePermTmp."Object Type";
            ESSummaryPerm."Object ID" := ESRolePermTmp."Object ID";
            ESSummaryPerm."Read Permission" := ESRolePermTmp."Read Permission";
            ESSummaryPerm."Insert Permission" := ESRolePermTmp."Insert Permission";
            ESSummaryPerm."Modify Permission" := ESRolePermTmp."Modify Permission";
            ESSummaryPerm."Delete Permission" := ESRolePermTmp."Delete Permission";
            ESSummaryPerm."Execute Permission" := ESRolePermTmp."Execute Permission";
            ESSummaryPerm."Security Filter" := ESRolePermTmp."Security Filter";
            ESSummaryPerm.INSERT;

            InsertedPermissionRecords := InsertedPermissionRecords + 1;
          UNTIL ESRolePermTmp.NEXT = 0;
      END;

      IF ShowProgress AND GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(
          Text043,
          ESRecording.Code,ESRecording.TABLECAPTION,InsertedPermissionRecords);
    END;

    BEGIN
    END.
  }
}

