OBJECT Codeunit 51702 Comm. Jnl.-Post Batch
{
  OBJECT-PROPERTIES
  {
    Date=07/01/20;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=TPZ000.00.00;
  }
  PROPERTIES
  {
    TableNo=51705;
    Permissions=TableData 51704=imd;
    OnRun=BEGIN
            CommJnlLine.COPY(Rec);
            Code;
            Rec := CommJnlLine;
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=cannot exceed %1 characters;ESM=no puede superar %1 caracteres;FRC=ne peut d‚passer %1 caractŠres;ENC=cannot exceed %1 characters';
      PostingStateMsg@1001 : TextConst '@@@=This is a message for dialog window. Parameters do not require translation.;ENU=Journal Batch Name    #1##########\\Posting @2@@@@@@@@@@@@@\#3#############;ESM=Nombre secci¢n diario #1##########\\Registro @2@@@@@@@@@@@@@\#3#############;FRC=Nom de lot du journal    #1##########\\Report @2@@@@@@@@@@@@@\#3#############;ENC=Journal Batch Name    #1##########\\Posting @2@@@@@@@@@@@@@\#3#############';
      CheckingLinesMsg@1003 : TextConst 'ENU=Checking lines;ESM=Comprobando l¡neas;FRC=V‚rification des lignes;ENC=Checking lines';
      CheckingBalanceMsg@1004 : TextConst 'ENU=Checking balance;ESM=Comprobando saldo;FRC=V‚rification du solde;ENC=Checking balance';
      UpdatingBalLinesMsg@1005 : TextConst 'ENU=Updating bal. lines;ESM=Actualizando l¡neas saldo;FRC=Mise … jour des lignes contrepartie;ENC=Updating bal. lines';
      PostingLinesMsg@1006 : TextConst 'ENU=Posting lines;ESM=Registrando l¡neas;FRC=Report des lignes;ENC=Posting lines';
      PostingReversLinesMsg@1007 : TextConst 'ENU=Posting revers. lines;ESM=Regs. l¡ns. reversi¢n;FRC=Report des lignes oppos‚es;ENC=Posting revers. lines';
      UpdatingLinesMsg@1036 : TextConst 'ENU=Updating lines;ESM=Actualizando l¡neas;FRC=Mise … jour des lignes;ENC=Updating lines';
      Text008@1008 : TextConst 'ENU=must be the same on all lines for the same document.;ESM=debe ser el mismo en todas las l¡n. para el mismo doc.;FRC=doit ˆtre le mˆme sur toutes les lignes d''une mˆme document.;ENC=must be the same on all lines for the same document.';
      Text009@1009 : TextConst 'ENU="%1 %2 posted on %3 includes more than one customer or vendor. ";ESM="%1 %2 registrado en %3 incluye m s de un cliente o proveedor. ";FRC="%1 %2 report‚ vers %3 inclut plus d''un client ou fournisseur. ";ENC="%1 %2 posted on %3 includes more than one customer or vendor. "';
      Text010@1010 : TextConst 'ENU=In order for the program to calculate tax, the entries must be separated by another document number or by an empty line.;ESM=Para el c lculo de IVA, los movs. se deben separar por otro n£mero de documento o por una l¡nea en blanco.;FRC=Pour que le programme puisse calculer la TVA, les ‚critures doivent ˆtre s‚par‚es par un autre num‚ro de document ou par une ligne blanche.;ENC=In order for the program to calculate Tax, the entries must be separated by another document number or by an empty line.';
      Text012@1012 : TextConst 'ENU="%5 %2 is out of balance by %1. ";ESM="%5 %2 tiene un descuadre de %1. ";FRC="%5 %2 est hors balance de %1. ";ENC="%5 %2 is out of balance by %1. "';
      Text013@1013 : TextConst 'ENU=Please check that %3, %4, %5 and %6 are correct for each line.;ESM=Compruebe que son correctos para cada l¡nea %3, %4, %5 y %6.;FRC=V‚rifiez que %3, %4, %5 et %6 sont corrects pour chaque ligne.;ENC=Please check that %3, %4, %5 and %6 are correct for each line.';
      Text014@1014 : TextConst 'ENU="The lines in %1 are out of balance by %2. ";ESM="Hay un descuadre de %2 en las l¡neas de %1. ";FRC="Les lignes dans %1 sont hors balance de %2. ";ENC="The lines in %1 are out of balance by %2. "';
      Text015@1015 : TextConst 'ENU=Check that %3 and %4 are correct for each line.;ESM=Compruebe que %3 y/e %4 son correctos para cada l¡nea.;FRC=V‚rifiez que %3 et %4 sont corrects pour chaque ligne.;ENC=Check that %3 and %4 are correct for each line.';
      Text016@1016 : TextConst 'ENU="Your reversing entries in %4 %2 are out of balance by %1. ";ESM="Hay un descuadre de %1 en los movs. del contraasiento de %4 %2. ";FRC="Vos ‚critures de contrepassation dans %4 %2 sont hors balance de %1. ";ENC="Your reversing entries in %4 %2 are out of balance by %1. "';
      Text017@1017 : TextConst 'ENU=Please check whether %3 is correct for each line for this %4.;ESM=Compruebe que la %3 es correcta para este/a %4.;FRC=V‚rifiez si %3 est correct pour chaque ligne de ce %4.;ENC=Please check whether %3 is correct for each line for this %4.';
      Text018@1018 : TextConst 'ENU="Your reversing entries for %1 are out of balance by %2. ";ESM="Hay un descuadre de %2 en los movs. de contraasiento del %1. ";FRC="Vos ‚critures de contrepassation pour %1 sont hors balance de %2. ";ENC="Your reversing entries for %1 are out of balance by %2. "';
      Text019@1019 : TextConst 'ENU="%3 %1 is out of balance due to the additional reporting currency. ";ESM="%3 %1 no cuadra debido a la divisa adicional. ";FRC="%3 %1 est hors balance en raison de la devise additionnelle de rapport. ";ENC="%3 %1 is out of balance due to the additional reporting currency. "';
      Text020@1020 : TextConst 'ENU=Please check that %2 is correct for each line.;ESM=Compruebe que %2 es correcto para cada l¡nea.;FRC=V‚rifiez que ce %2 est correct pour chaque ligne.;ENC=Please check that %2 is correct for each line.';
      Text021@1021 : TextConst 'ENU=cannot be specified when using recurring journals.;ESM=no se puede utilizar en diarios peri¢dicos.;FRC=ne doit pas ˆtre pr‚cis‚ quand vous utilisez un journal r‚current.;ENC=cannot be specified when using recurring journals.';
      Text022@1022 : TextConst 'ENU=The Balance and Reversing Balance recurring methods can be used only for G/L accounts.;ESM=Los m‚todos recurrentes Saldo y Contrasiento saldo s¢lo se pueden com movs. de tipo Cuenta.;FRC=Les m‚thodes r‚currentes solde et solde de contrepass. peuvent ˆtre utilis‚es seulement pour des comptes GL.;ENC=The Balance and Reversing Balance recurring methods can be used only for G/L accounts.';
      Text023@1023 : TextConst 'ENU=Allocations can only be used with recurring journals.;ESM=Distribuciones s¢lo se permiten en diarios peri¢dicos.;FRC=Les imputations ne peuvent ˆtre utilis‚es qu''avec les journaux r‚currents.;ENC=Allocations can only be used with recurring journals.';
      Text024@1024 : TextConst 'ENU=<Month Text>;ESM=<Month Text>;FRC=<Month Text>;ENC=<Month Text>';
      Text025@1025 : TextConst 'ENU=A maximum of %1 posting number series can be used in each journal.;ESM=Se puede utilizar un m ximo de %1 n£meros de serie de registro en cada diario.;FRC=Un maximum de %1 s‚ries de num‚ros de report peuvent ˆtre utilis‚es dans chaque journal.;ENC=A maximum of %1 posting number series can be used in each journal.';
      Text026@1026 : TextConst 'ENU="%5 %2 is out of balance by %1 %7. ";ESM="%5 %2 descuadra por %1 %7. ";FRC="%5 %2 est hors balance de %1 %7. ";ENC="%5 %2 is out of balance by %1 %7. "';
      Text027@1027 : TextConst 'ENU="The lines in %1 are out of balance by %2 %5. ";ESM="Las l¡neas en %1 descuadran por %2 %5. ";FRC="Les lignes dans %1 sont hors balance de %2 %5. ";ENC="The lines in %1 are out of balance by %2 %5. "';
      Text028@1028 : TextConst 'ENU=The Balance and Reversing Balance recurring methods can be used only with Allocations.;ESM=Los m‚todos rec. de saldo y saldo rev. pueden usarse s¢lo con cuotas.;FRC=Les modes r‚currents Solde et Solde inverse ne peuvent ˆtre utilis‚s qu''avec des affectations.;ENC=The Balance and Reversing Balance recurring methods can be used only with Allocations.';
      CommJnlTemplate@1029 : Record 51703;
      CommJnlBatch@1030 : Record 51704;
      CommJnlLine@1031 : Record 51705;
      CommJnlLine2@1032 : Record 51705;
      CommJnlLine3@1033 : Record 51705;
      TempCommJnlLine4@1034 : TEMPORARY Record 51705;
      CommJnlLine5@1035 : Record 51705;
      CommLedgEntry@1037 : Record 51709;
      CommReg@1038 : Record 51702;
      NoSeries@1044 : TEMPORARY Record 308;
      CommSetup@1045 : Record 51700;
      CommJnlLineTemp@1102601000 : TEMPORARY Record 51705;
      CommJnlCheckLine@1047 : Codeunit 51700;
      CommJnlPostLine@1048 : Codeunit 51701;
      NoSeriesMgt@1049 : Codeunit 396;
      NoSeriesMgt2@1050 : ARRAY [10] OF Codeunit 396;
      Window@1052 : Dialog;
      CommRegNo@1053 : Integer;
      StartLineNo@1054 : Integer;
      StartLineNoReverse@1055 : Integer;
      LastDate@1056 : Date;
      LastDocType@1057 : Integer;
      LastDocNo@1058 : Code[20];
      LastPostedDocNo@1059 : Code[20];
      CurrentBalance@1060 : Decimal;
      CurrentBalanceReverse@1061 : Decimal;
      Day@1062 : Integer;
      Week@1063 : Integer;
      Month@1064 : Integer;
      MonthText@1065 : Text[30];
      NoOfRecords@1066 : Integer;
      NoOfReversingRecords@1067 : Integer;
      LineCount@1068 : Integer;
      NoOfPostingNoSeries@1069 : Integer;
      PostingNoSeriesNo@1070 : Integer;
      DocCorrection@1071 : Boolean;
      "0DF"@1077 : DateFormula;
      Text029@1041 : TextConst 'ENU="%1 %2 posted on %3 includes more than one customer, vendor or IC Partner. ";ESM="%1 %2, registrado el %3, incluye m s de un cliente, proveedor o IC asociada. ";FRC="%1 %2 report‚ sur %3 contient plus d''un client, d''un fournisseur ou d''un partenaire IC. ";ENC="%1 %2 posted on %3 includes more than one customer, vendor or IC Partner. "';
      Text030@1011 : TextConst 'ENU=You cannot enter G/L Account or Bank Account in both %1 and %2.;ESM=No puede introducir una cuenta o una cuenta bancaria en %1 y en %2.;FRC=Vous ne pouvez pas entrer le compte de grand livre ou le compte bancaire … la fois dans %1 et dans %2.;ENC=You cannot enter G/L Account or Bank Account in both %1 and %2.';
      Text031@1040 : TextConst 'ENU=Line No. %1 does not contain a G/L Account or Bank Account. When the %2 field contains an account number, either the %3 field or the %4 field must contain a G/L Account or Bank Account.;ESM=La l¡nea n§ %1 no incluye una cuenta o una cuenta bancaria. Si el campo %2 contiene un n£mero de cuenta, el campo %3 o el campo %4 deben contener una cuenta o una cuenta bancaria.;FRC=La ligne nø %1 ne contient pas de compte de grand livre ou de compte bancaire. Si le champ %2 contient un num‚ro de compte, le champ %3 ou le champ %4 doit contenir un compte de grand livre ou un compte bancaire.;ENC=Line No. %1 does not contain a G/L Account or Bank Account. When the %2 field contains an account number, either the %3 field or the %4 field must contain a G/L Account or Bank Account.';
      RefPostingState@1002 : 'Checking lines,Checking balance,Updating bal. lines,Posting Lines,Posting revers. lines,Updating lines';

    LOCAL PROCEDURE Code@7();
    VAR
      TempCommJnlLine@1010 : TEMPORARY Record 51705;
      TempCommJnlLine2@1011 : Record 51705;
    BEGIN
      WITH CommJnlLine DO BEGIN
        SETRANGE("Journal Template Name","Journal Template Name");
        SETRANGE("Journal Batch Name","Journal Batch Name");

        LOCKTABLE;

        CommJnlTemplate.GET("Journal Template Name");
        CommJnlBatch.GET("Journal Template Name","Journal Batch Name");
        IF STRLEN(INCSTR(CommJnlBatch.Name)) > MAXSTRLEN(CommJnlBatch.Name) THEN
          CommJnlBatch.FIELDERROR(
            Name,
            STRSUBSTNO(
              Text000,
              MAXSTRLEN(CommJnlBatch.Name)));

        IF NOT FIND('=><') THEN BEGIN
          "Line No." := 0;
          COMMIT;
          EXIT;
        END;

        Window.OPEN(PostingStateMsg);
        Window.UPDATE(1,"Journal Batch Name");

        // Check lines
        LineCount := 0;
        StartLineNo := "Line No.";
        NoOfRecords := COUNT;
        REPEAT
          LineCount := LineCount + 1;
          UpdateDialog(RefPostingState::"Checking lines",LineCount,NoOfRecords);
          CommJnlLine5.COPY(CommJnlLine);
          CommJnlCheckLine.RunCheck(CommJnlLine5);
          TempCommJnlLine := CommJnlLine5;
          TempCommJnlLine.INSERT;
          IF NEXT = 0 THEN
            FINDFIRST;
        UNTIL "Line No." = StartLineNo;

        // Find next register no.
        CommLedgEntry.LOCKTABLE;

        IF CommLedgEntry.FINDLAST THEN;
        CommReg.LOCKTABLE;
        IF CommReg.FINDLAST THEN
          CommRegNo := CommReg."No." + 1
        ELSE
          CommRegNo := 1;
        // Post lines
        LineCount := 0;
        LastDocNo := '';
        LastPostedDocNo := '';
        TempCommJnlLine4.DELETEALL;
        NoOfReversingRecords := 0;
        FINDSET(TRUE,FALSE);
        REPEAT
          CommJnlLine3 := CommJnlLine;
          WITH CommJnlLine3 DO BEGIN
            LineCount := LineCount + 1;
            UpdateDialog(RefPostingState::"Posting Lines",LineCount,NoOfRecords);
            CheckDocumentNo(CommJnlLine3);
            CommJnlLine5.COPY(CommJnlLine3);
            CommJnlPostLine.RunWithoutCheck(CommJnlLine5);
          END;
        UNTIL NEXT = 0;

        // Copy register no. and current journal batch name to general journal
        IF NOT CommReg.FINDLAST OR (CommReg."No." <> CommRegNo) THEN
          CommRegNo := 0;

        INIT;
        "Line No." := CommRegNo;

        // Update/delete lines
        IF CommRegNo <> 0 THEN BEGIN
          CommJnlLine2.COPY(CommJnlLine);
          IF CommJnlLine2.FINDLAST THEN; // Remember the last line
          CommJnlLine3.COPY(CommJnlLine);
          CommJnlLine3.DELETEALL;
          CommJnlLine3.RESET;
          CommJnlLine3.SETRANGE("Journal Template Name","Journal Template Name");
          CommJnlLine3.SETRANGE("Journal Batch Name","Journal Batch Name");
          IF NOT CommJnlLine3.FINDLAST THEN
            IF INCSTR("Journal Batch Name") <> '' THEN BEGIN
              CommJnlBatch.DELETE;
              CommJnlBatch.Name := INCSTR("Journal Batch Name");
              IF CommJnlBatch.INSERT THEN;
              "Journal Batch Name" := CommJnlBatch.Name;
            END;

          CommJnlLine3.SETRANGE("Journal Batch Name","Journal Batch Name");
          IF (CommJnlBatch."No. Series" = '') AND NOT CommJnlLine3.FINDLAST THEN BEGIN
            CommJnlLine3.INIT;
            CommJnlLine3."Journal Template Name" := "Journal Template Name";
            CommJnlLine3."Journal Batch Name" := "Journal Batch Name";
            CommJnlLine3."Line No." := 10000;
            CommJnlLine3.INSERT;
            TempCommJnlLine2 := CommJnlLine2;
            CommJnlLine3.SetUpNewLine(TempCommJnlLine2,TRUE);
            CommJnlLine3.MODIFY;
          END;
        END;
        IF CommJnlBatch."No. Series" <> '' THEN
          NoSeriesMgt.SaveNoSeries;
        IF NoSeries.FINDSET THEN
          REPEAT
            EVALUATE(PostingNoSeriesNo,NoSeries.Description);
            NoSeriesMgt2[PostingNoSeriesNo].SaveNoSeries;
          UNTIL NoSeries.NEXT = 0;
        COMMIT;
        CLEAR(CommJnlCheckLine);
        CLEAR(CommJnlPostLine);
      END;
      COMMIT;
    END;

    PROCEDURE CheckDocumentNo@11(VAR CommJnlLine2@1000 : Record 51705);
    BEGIN
      WITH CommJnlLine2 DO BEGIN
        IF "Posting No. Series" = '' THEN
          "Posting No. Series" := CommJnlBatch."No. Series"
        ELSE
          IF NOT EmptyLine THEN
            IF "Document No." = LastDocNo THEN
              "Document No." := LastPostedDocNo
            ELSE BEGIN
              IF NOT NoSeries.GET("Posting No. Series") THEN BEGIN
                NoOfPostingNoSeries := NoOfPostingNoSeries + 1;
                IF NoOfPostingNoSeries > ARRAYLEN(NoSeriesMgt2) THEN
                  ERROR(
                    Text025,
                    ARRAYLEN(NoSeriesMgt2));
                NoSeries.Code := "Posting No. Series";
                NoSeries.Description := FORMAT(NoOfPostingNoSeries);
                NoSeries.INSERT;
              END;
              LastDocNo := "Document No.";
              EVALUATE(PostingNoSeriesNo,NoSeries.Description);
              "Document No." :=
                NoSeriesMgt2[PostingNoSeriesNo].GetNextNo("Posting No. Series","Posting Date",TRUE);
              LastPostedDocNo := "Document No.";
            END;
      END;
    END;

    PROCEDURE CopyFields@12();
    VAR
      CommJnlLine4@1000 : Record 51705;
      CommJnlLine6@1001 : Record 51705;
      TempCommJnlLine@1007 : TEMPORARY Record 51705;
      JnlLineTotalQty@1002 : Integer;
      RefPostingSubState@1003 : 'Check account,Check bal. account,Update lines';
    BEGIN
      CommJnlLine6.SETCURRENTKEY("Journal Template Name","Journal Batch Name","Posting Date","Document No.");
      CommJnlLine4.FILTERGROUP(2);
      CommJnlLine4.COPY(CommJnlLine);
      CommJnlLine4.FILTERGROUP(0);
      CommJnlLine6.FILTERGROUP(2);
      CommJnlLine6.COPY(CommJnlLine);
      CommJnlLine6.FILTERGROUP(0);

      JnlLineTotalQty := TempCommJnlLine.COUNT;
      LineCount := 0;
      IF TempCommJnlLine.FINDSET THEN
        REPEAT
          LineCount := LineCount + 1;
          UpdateDialogUpdateBalLines(RefPostingSubState::"Update lines",LineCount,JnlLineTotalQty);
          CommJnlLine4.GET(TempCommJnlLine."Journal Template Name",TempCommJnlLine."Journal Batch Name",TempCommJnlLine."Line No.");
          CommJnlLine4.MODIFY;
        UNTIL TempCommJnlLine.NEXT = 0;
    END;

    LOCAL PROCEDURE UpdateDialog@23(PostingState@1000 : Integer;LineNo@1001 : Integer;TotalLinesQty@1002 : Integer);
    BEGIN
      UpdatePostingState(PostingState,LineNo);
      Window.UPDATE(2,GetProgressBarValue(PostingState,LineNo,TotalLinesQty));
    END;

    LOCAL PROCEDURE UpdateDialogUpdateBalLines@22(PostingSubState@1003 : Integer;LineNo@1001 : Integer;TotalLinesQty@1002 : Integer);
    BEGIN
      UpdatePostingState(RefPostingState::"Updating bal. lines",LineNo);
      Window.UPDATE(
        2,
        GetProgressBarUpdateBalLinesValue(
          CalcProgressPercent(PostingSubState,3,LineCount,TotalLinesQty)));
    END;

    LOCAL PROCEDURE UpdatePostingState@25(PostingState@1000 : Integer;LineNo@1002 : Integer);
    BEGIN
      Window.UPDATE(3,STRSUBSTNO('%1 (%2)',GetPostingStateMsg(PostingState),LineNo));
    END;

    LOCAL PROCEDURE GetPostingStateMsg@29(PostingState@1000 : Integer) : Text;
    BEGIN
      CASE PostingState OF
        RefPostingState::"Checking lines":
          EXIT(CheckingLinesMsg);
        RefPostingState::"Checking balance":
          EXIT(CheckingBalanceMsg);
        RefPostingState::"Updating bal. lines":
          EXIT(UpdatingBalLinesMsg);
        RefPostingState::"Posting Lines":
          EXIT(PostingLinesMsg);
        RefPostingState::"Posting revers. lines":
          EXIT(PostingReversLinesMsg);
        RefPostingState::"Updating lines":
          EXIT(UpdatingLinesMsg);
      END;
    END;

    LOCAL PROCEDURE GetProgressBarValue@21(PostingState@1002 : Integer;LineNo@1001 : Integer;TotalLinesQty@1000 : Integer) : Integer;
    BEGIN
      EXIT(ROUND(100 * CalcProgressPercent(PostingState,GetNumberOfPostingStages,LineNo,TotalLinesQty),1));
    END;

    LOCAL PROCEDURE GetProgressBarUpdateBalLinesValue@34(PostingStatePercent@1000 : Decimal) : Integer;
    BEGIN
      EXIT(ROUND((RefPostingState::"Updating bal. lines" * 100 + PostingStatePercent) / GetNumberOfPostingStages * 100,1));
    END;

    LOCAL PROCEDURE CalcProgressPercent@20(PostingState@1001 : Integer;NumberOfPostingStates@1000 : Integer;LineNo@1002 : Integer;TotalLinesQty@1003 : Integer) : Decimal;
    BEGIN
      EXIT(100 / NumberOfPostingStates * (PostingState + LineNo / TotalLinesQty));
    END;

    LOCAL PROCEDURE GetNumberOfPostingStages@33() : Integer;
    BEGIN
      EXIT(4);
    END;

    BEGIN
    {
      2015-05-11 TPZ92 TAKHMETO
        Codeunit has been created
    }
    END.
  }
}

