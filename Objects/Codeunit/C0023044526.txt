OBJECT Codeunit 23044526 WHI Translation Management
{
  OBJECT-PROPERTIES
  {
    Date=05/07/20;
    Time=[ 3:55:39 PM];
    Version List=WHI2.4.7684.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE GetTranslation@1000000003(pcodRegion@1000000000 : Code[10];ptxtCaption@1000000001 : Text[100]) ptxtOut : Text[100];
    VAR
      lrecTranslations@1000000002 : Record 23044519;
    BEGIN
      //
      // Will return a translated value for the specified region.
      // If no translation is available, it will return the input.
      // Assumes primary caption key language is english.
      //


      IF lrecTranslations.GET(ptxtCaption,pcodRegion) THEN BEGIN
        ptxtOut := COPYSTR( lrecTranslations.Translation, 1, MAXSTRLEN( ptxtOut) );
      END;

      IF ( ptxtOut = '' ) THEN BEGIN
        // if we do not yet have a translation, or if the translation was
        // a blank string then just return the input caption key
        ptxtOut := ptxtCaption;
      END;
    END;

    PROCEDURE CreateTranslationPlaceholders@1000000000(pcodRegion@1000000000 : Code[10]);
    VAR
      lrecPDAMenu@1000000001 : Record 23044510;
    BEGIN
      //
      // Ensures that there are placeholders for the specified region code.
      //

      lrecPDAMenu.RESET();
      lrecPDAMenu.FINDSET(FALSE,FALSE);
      REPEAT
        CreateUpdateTranslation(
          pcodRegion,          // the region to create the placeholder for
          lrecPDAMenu.Caption, // the original language (probably english)
          lrecPDAMenu.Caption, // translated for a placeholder is the original language (probably english)
          TRUE                 // if true, then don't overwrite any existing translation that matches that region key
           );
      UNTIL( lrecPDAMenu.NEXT() = 0 );
    END;

    PROCEDURE CreateUpdateTranslation@1000000010(pcodRegion@1000000000 : Code[10];pcodKey@1000000001 : Code[20];ptxtTranslation@1000000002 : Text[100];pbCreateMissingOnly@1000000004 : Boolean);
    VAR
      lrecTranslationValue@1000000003 : Record 23044519;
      lrecTranslationKey@1000000005 : Record 23044518;
    BEGIN
      //
      // Creates or updates a translation entry.
      //

      IF ( pcodKey <> '' ) AND ( pcodKey <> '-' ) THEN BEGIN
        // if it's not blank and not a menu separator.
        IF ( lrecTranslationValue.GET( pcodKey, pcodRegion ) ) THEN BEGIN
          IF ( NOT pbCreateMissingOnly  ) THEN BEGIN
            // if it exists and we do not have the pbCreateMissingOnly indicating
            // not to update existing translations
            lrecTranslationValue.Translation := COPYSTR(pcodKey, 1, MAXSTRLEN( lrecTranslationValue.Translation ) );
            lrecTranslationValue.MODIFY(FALSE);
          END ELSE BEGIN
            //
            // else nothing.  They already have a translation, and
            // we are not allowed to overwrite it.
          END;
        END ELSE BEGIN

          IF NOT lrecTranslationKey.GET(pcodKey) THEN BEGIN
            lrecTranslationKey.VALIDATE(Code,pcodKey);
            lrecTranslationKey.INSERT(TRUE);
          END;


          //
          // No translation placeholder yet, make one.
          lrecTranslationValue.INIT();
          lrecTranslationValue.Code := lrecTranslationKey.Code;
          lrecTranslationValue.Region := pcodRegion;
          lrecTranslationValue.Translation := COPYSTR( ptxtTranslation, 1, MAXSTRLEN( lrecTranslationValue.Translation ) );
          lrecTranslationValue.INSERT(FALSE);
        END;
      END;
    END;

    PROCEDURE getRegionCode@1000000001() lcodRegion : Code[10];
    VAR
      lrecLanguage@1000000001 : Record 23044517;
    BEGIN
      lrecLanguage.SETRANGE("Windows Language ID",GLOBALLANGUAGE);
      IF lrecLanguage.FINDFIRST THEN BEGIN
        lcodRegion := lrecLanguage.Region;
      END
      ELSE BEGIN
        lcodRegion := 'EN-US';
      END;

      EXIT(lcodRegion);
    END;

    PROCEDURE getTranslatedString@1000000041(ptxtInputString@1000000000 : Text;pcodRegionCode@1000000001 : Code[10]) : Text;
    VAR
      lrecTranslation@1000000002 : Record 23044519;
    BEGIN
      // return translated string

      IF pcodRegionCode = '' THEN
        pcodRegionCode := getRegionCode();

      IF (lrecTranslation.GET(COPYSTR(ptxtInputString,1,100), pcodRegionCode)) THEN BEGIN
        EXIT(lrecTranslation.Translation);
      END ELSE BEGIN
        EXIT(ptxtInputString);
      END;
    END;

    BEGIN
    {
      ************************
      Copyright Notice
      This objects content is copyright of Insight Works 2011.  All rights reserved.
      Any redistribution or reproduction of part or all of the contents in any form is prohibited.
      ************************
    }
    END.
  }
}

