OBJECT Codeunit 14123801 ES FLADS Management
{
  OBJECT-PROPERTIES
  {
    Date=09/17/15;
    Time=12:00:00 PM;
    Version List=ES1.41.14;
  }
  PROPERTIES
  {
    SingleInstance=Yes;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ESSecurityBufferTmp@1240520008 : TEMPORARY Record 14123811;
      ESSecurityCodeBufferTmp@1240520011 : TEMPORARY Record 14123812;
      ESFieldLevelSecurityObjectTmp@1240520013 : TEMPORARY Record 14123806;
      ESFieldLevelSecControlTmp@1240520012 : TEMPORARY Record 14123807;
      ESDataSecurityObjectTmp@1240520015 : TEMPORARY Record 14123808;
      ESDataSecurityFieldTmp@1240520014 : TEMPORARY Record 14123809;
      AllObjWithCaption@1240520010 : Record 2000000058;
      ESFLADSSetup@1240520018 : Record 14123801;
      ESGetEditable@1240520009 : Codeunit 14123811;
      DataFilterActive@1240520016 : Boolean;
      ESFLADSSetupRetrieved@1240520019 : Boolean;
      WindowsGroupRetrieved@1000000001 : Boolean;
      LastUpdateNo@1240520017 : Integer;
      Text001@1001 : TextConst 'ENU=%1 %2 %3 cannot be viewed.';
      Text002@1002 : TextConst 'ENU=Call GetFirstDataFilter first.';
      LastDataFilterObjectType@1240520002 : Integer;
      LastDataFilterObjectID@1240520001 : Integer;
      WindowsGroup@1000000000 : Code[50];
      Text003@1003 : TextConst 'ENU=Windows Group retrieval successful. Windows Group %1.';
      Text004@1004 : TextConst 'ENU=Windows Group retrieval failed (%1).';
      Text005@1005 : TextConst 'ENU=User %1 is using Field Level and Data Security Group %2.';
      Text006@1006 : TextConst 'ENU=Added Windows Group %1 (Source Table ID %2).';
      Text007@1007 : TextConst 'ENU=Substituted filter too long (Table %1 %2 %3 %4 Field %5).';

    PROCEDURE FormGeneral@1240520018(SourceTableID@1240520010 : Integer;FormID@1240520009 : Integer;Editable@1240520008 : Boolean) : Boolean;
    BEGIN
      IF NOT GetSecurityCodeBuffer(SourceTableID,AllObjWithCaption."Object Type"::"2",FormID,TRUE)
      THEN
        EXIT(TRUE);

      GetSecurityBuffer(SourceTableID,AllObjWithCaption."Object Type"::"2",FormID,0,0,TRUE);
      IF NOT ESSecurityBufferTmp.Visible THEN BEGIN
        GetAllObjWithCaption(AllObjWithCaption."Object Type"::"2",FormID);
        ERROR(
          Text001,
          AllObjWithCaption."Object Type",AllObjWithCaption."Object ID",
          AllObjWithCaption."Object Name");
      END;

      IF Editable THEN
        EXIT(
          ESSecurityBufferTmp.Editable AND
          ESGetEditable.IsEditable(AllObjWithCaption."Object Type"::"2",FormID,0));

      EXIT(TRUE);
    END;

    PROCEDURE FormControl@1240520017(SourceTableID@1240520013 : Integer;FormID@1240520011 : Integer;Type@1240520010 : Integer;ID@1240520009 : Integer;VAR Visible@1240520008 : Boolean;Editable@1240520012 : Boolean) : Boolean;
    BEGIN
      GetSecurityBuffer(SourceTableID,AllObjWithCaption."Object Type"::"2",FormID,Type,ID,FALSE);
      IF Visible THEN
        Visible := ESSecurityBufferTmp.Visible;
      IF Editable THEN BEGIN
        Editable := ESSecurityBufferTmp.Editable;
        EXIT(Editable);
      END ELSE
        EXIT(FALSE);
    END;

    PROCEDURE FormControlTableBox@1240520013(SourceTableID@1240520013 : Integer;FormID@1240520011 : Integer;Type@1240520010 : Integer;ID@1240520009 : Integer;VAR Visible@1240520008 : Boolean;Editable@1240520012 : Boolean) : Boolean;
    BEGIN
      GetSecurityBuffer(SourceTableID,AllObjWithCaption."Object Type"::"2",FormID,Type,ID,FALSE);
      Visible := ESSecurityBufferTmp.Visible;
      IF Editable THEN BEGIN
        Editable := ESSecurityBufferTmp.Editable;
        EXIT(Editable);
      END ELSE
        EXIT(FALSE);
    END;

    PROCEDURE PageGeneral@1240520020(SourceTableID@1240520010 : Integer;PageID@1240520009 : Integer;VAR Editable@1240520008 : Boolean) : Boolean;
    BEGIN
      IF NOT GetSecurityCodeBuffer(SourceTableID,AllObjWithCaption."Object Type"::Page,PageID,TRUE)
      THEN
        EXIT(FALSE);

      GetSecurityBuffer(SourceTableID,AllObjWithCaption."Object Type"::Page,PageID,0,0,TRUE);
      IF NOT ESSecurityBufferTmp.Visible THEN BEGIN
        GetAllObjWithCaption(AllObjWithCaption."Object Type"::Page,PageID);
        ERROR(
          Text001,
          AllObjWithCaption."Object Type",AllObjWithCaption."Object ID",
          AllObjWithCaption."Object Name");
      END;

      IF Editable THEN BEGIN
        Editable :=
          ESSecurityBufferTmp.Editable AND
          ESGetEditable.IsEditable(AllObjWithCaption."Object Type"::Page,PageID,0);
        EXIT(NOT Editable);
      END ELSE
        EXIT(FALSE);
    END;

    PROCEDURE PageControl@1240520019(SourceTableID@1240520014 : Integer;PageID@1240520011 : Integer;Type@1240520010 : Integer;ID@1240520009 : Integer;VAR Visible@1240520008 : Boolean;VAR Editable@1240520012 : Boolean;VAR HideValue@1240520013 : Boolean);
    BEGIN
      GetSecurityBuffer(SourceTableID,AllObjWithCaption."Object Type"::Page,PageID,Type,ID,FALSE);
      Visible := ESSecurityBufferTmp.Visible;
      Editable := ESSecurityBufferTmp.Editable;
      HideValue := NOT ESSecurityBufferTmp.Visible;
    END;

    PROCEDURE GetSecurityBuffer@1240520021(SourceTableID@1240520013 : Integer;ObjectType@1240520011 : Integer;ObjectID@1240520010 : Integer;Type@1240520009 : Integer;ID@1240520008 : Integer;Object@1240520012 : Boolean);
    BEGIN
      IF (ESSecurityBufferTmp."Source Table ID" = SourceTableID) AND
         (ESSecurityBufferTmp."Object Type" = ObjectType) AND
         (ESSecurityBufferTmp."Object ID" = ObjectID) AND
         (ESSecurityBufferTmp.Type = Type) AND
         (ESSecurityBufferTmp.ID = ID) AND
         (ESSecurityBufferTmp.Object = Object)
      THEN
        EXIT;

      IF ESSecurityBufferTmp.GET(SourceTableID,ObjectType,ObjectID,Type,ID,Object) THEN
        EXIT;

      ESSecurityBufferTmp.INIT;
      ESSecurityBufferTmp."Source Table ID" := SourceTableID;
      ESSecurityBufferTmp."Object Type" := ObjectType;
      ESSecurityBufferTmp."Object ID" := ObjectID;
      ESSecurityBufferTmp.Type := Type;
      ESSecurityBufferTmp.ID := ID;
      ESSecurityBufferTmp.Object := Object;

      IF GetSecurityCodeBuffer(SourceTableID,ObjectType,ObjectID,TRUE) THEN BEGIN
        IF Object THEN BEGIN
          ESFieldLevelSecurityObjectTmp.RESET;
          ESFieldLevelSecurityObjectTmp.SETRANGE("Source Table ID",SourceTableID);
          ESFieldLevelSecurityObjectTmp.SETRANGE(
            "Field Level Security Code",ESSecurityCodeBufferTmp."Field Level Security Code");
          ESFieldLevelSecurityObjectTmp.SETRANGE("Object Type",ObjectType);
          ESFieldLevelSecurityObjectTmp.SETFILTER("Object ID",'0|%1',ObjectID);
          IF ESFieldLevelSecurityObjectTmp.FIND('+') THEN BEGIN
            ESSecurityBufferTmp.Visible :=
              ESFieldLevelSecurityObjectTmp."General Permission" <>
              ESFieldLevelSecurityObjectTmp."General Permission"::Hide;
            ESSecurityBufferTmp.Editable :=
              ESFieldLevelSecurityObjectTmp."General Permission" =
              ESFieldLevelSecurityObjectTmp."General Permission"::Edit;
          END;
        END ELSE BEGIN
          ESFieldLevelSecurityObjectTmp.RESET;
          ESFieldLevelSecurityObjectTmp.SETRANGE("Source Table ID",SourceTableID);
          ESFieldLevelSecurityObjectTmp.SETRANGE(
            "Field Level Security Code",ESSecurityCodeBufferTmp."Field Level Security Code");
          ESFieldLevelSecurityObjectTmp.SETRANGE("Object Type",ObjectType);
          ESFieldLevelSecurityObjectTmp.SETFILTER("Object ID",'0|%1',ObjectID);
          IF ESFieldLevelSecurityObjectTmp.FIND('+') THEN BEGIN
            ESFieldLevelSecControlTmp.RESET;
            ESFieldLevelSecControlTmp.SETRANGE("Source Table ID",SourceTableID);
            ESFieldLevelSecControlTmp.SETRANGE(
              "Field Level Security Code",ESSecurityCodeBufferTmp."Field Level Security Code");
            ESFieldLevelSecControlTmp.SETRANGE(
              "Object Type",ESFieldLevelSecurityObjectTmp."Object Type");
            ESFieldLevelSecControlTmp.SETRANGE(
              "Object ID",ESFieldLevelSecurityObjectTmp."Object ID");
            ESFieldLevelSecControlTmp.SETRANGE(Type,Type);
            ESFieldLevelSecControlTmp.SETFILTER(ID,'0|%1',ID);
            IF ESFieldLevelSecControlTmp.FIND('+') THEN BEGIN
              ESSecurityBufferTmp.Visible :=
                ESFieldLevelSecControlTmp.Permission IN
                [ESFieldLevelSecControlTmp.Permission::Edit,
                 ESFieldLevelSecControlTmp.Permission::View];
              IF Type = 0 THEN
                ESSecurityBufferTmp.Editable :=
                  (ESFieldLevelSecControlTmp.Permission =
                   ESFieldLevelSecControlTmp.Permission::Edit) AND
                  ESGetEditable.IsEditable(
                    AllObjWithCaption."Object Type"::Table,SourceTableID,ID)
              ELSE
                ESSecurityBufferTmp.Editable :=
                 ESFieldLevelSecControlTmp.Permission =
                    ESFieldLevelSecControlTmp.Permission::Edit;
            END;
          END;
        END;
      END ELSE
        IF NOT Object AND (Type = 0) THEN
          ESSecurityBufferTmp.Editable :=
            ESGetEditable.IsEditable(
              AllObjWithCaption."Object Type"::Table,SourceTableID,ID);

      ESSecurityBufferTmp.INSERT;
    END;

    PROCEDURE GetAllObjWithCaption@1240520023(ObjectType@1240520008 : Integer;ObjectID@1240520009 : Integer);
    BEGIN
      IF (AllObjWithCaption."Object Type" <> ObjectType) OR
         (AllObjWithCaption."Object ID" <> ObjectID)
      THEN
        IF NOT AllObjWithCaption.GET(ObjectType,ObjectID) THEN BEGIN
          CLEAR(AllObjWithCaption);
          AllObjWithCaption."Object Type" := ObjectType;
          AllObjWithCaption."Object ID" := ObjectID;
        END;
    END;

    PROCEDURE GetFirstDataFilters@1240520022(VAR ESDataSecurityField@1240520008 : Record 14123809;SourceTableID@1240520009 : Integer;ObjectType@1240520010 : Integer;ObjectID@1240520011 : Integer) : Boolean;
    BEGIN
      IF NOT GetSecurityCodeBuffer(SourceTableID,ObjectType,ObjectID,FALSE) THEN
        EXIT(FALSE);

      IF ESSecurityCodeBufferTmp."Data Security Code" = '' THEN
        EXIT(FALSE);

      ESDataSecurityObjectTmp.RESET;
      ESDataSecurityObjectTmp.SETRANGE("Source Table ID",SourceTableID);
      ESDataSecurityObjectTmp.SETRANGE("Data Security Code",ESSecurityCodeBufferTmp."Data Security Code");
      ESDataSecurityObjectTmp.SETRANGE("Object Type",ObjectType);
      ESDataSecurityObjectTmp.SETFILTER("Object ID",'0|%1',ObjectID);
      IF NOT ESDataSecurityObjectTmp.FIND('+') THEN
        EXIT(FALSE);

      ESDataSecurityFieldTmp.RESET;
      ESDataSecurityFieldTmp.SETRANGE("Source Table ID",SourceTableID);
      ESDataSecurityFieldTmp.SETRANGE("Data Security Code",ESSecurityCodeBufferTmp."Data Security Code");
      ESDataSecurityFieldTmp.SETRANGE("Object Type",ESDataSecurityObjectTmp."Object Type");
      ESDataSecurityFieldTmp.SETRANGE("Object ID",ESDataSecurityObjectTmp."Object ID");
      IF ESDataSecurityFieldTmp.FIND('-') THEN BEGIN
        ESDataSecurityField := ESDataSecurityFieldTmp;

        IF ESDataSecurityField."Substitute Filter Value" AND
           ESDataSecurityField."Always Substitute Filter Value"
        THEN
          SubstituteFilterValue(ESDataSecurityField,ObjectType,ObjectID,TRUE);

        DataFilterActive := TRUE;
        LastDataFilterObjectType := ObjectType;
        LastDataFilterObjectID := ObjectID;
        EXIT(TRUE);
      END ELSE
        EXIT(FALSE);
    END;

    PROCEDURE GetNextDataFilters@1240520011(VAR ESDataSecurityField@1240520008 : Record 14123809) : Boolean;
    BEGIN
      IF NOT DataFilterActive THEN
        ERROR(Text002);

      IF ESDataSecurityFieldTmp.NEXT = 0 THEN BEGIN
        DataFilterActive := FALSE;
        EXIT(FALSE);
      END ELSE BEGIN
        ESDataSecurityField := ESDataSecurityFieldTmp;

        IF ESDataSecurityField."Substitute Filter Value" AND
           ESDataSecurityField."Always Substitute Filter Value"
        THEN
          SubstituteFilterValue(
            ESDataSecurityField,LastDataFilterObjectType,LastDataFilterObjectID,TRUE);

        EXIT(TRUE);
      END;
    END;

    PROCEDURE GetSecurityCodeBuffer@1240520010(SourceTableID@1240520008 : Integer;ObjectType@1240520010 : Integer;ObjectID@1240520009 : Integer;FieldLevelSecurity@1240520011 : Boolean) : Boolean;
    VAR
      ESUserSecuritySetup@1240520016 : Record 14123805;
      ESFieldLevelSecurityObject@1240520013 : Record 14123806;
      ESFieldLevelSecControl@1240520012 : Record 14123807;
      ESDataSecurityObject@1240520015 : Record 14123808;
      ESDataSecurityField@1240520014 : Record 14123809;
      ESFLADSUpdateNo@1240520017 : Record 14123813;
      UserSecurityUserID@1240520018 : Code[50];
    BEGIN
      GetESFLADSSetup;
      IF ESFLADSSetup."Dynamic Setup" THEN BEGIN
        IF ESFLADSUpdateNo.GET THEN
          IF LastUpdateNo <> ESFLADSUpdateNo."Update No." THEN BEGIN
            FlushSecurityCache;
            WindowsGroupRetrieved := FALSE;

            LastUpdateNo := ESFLADSUpdateNo."Update No.";
          END;
      END;

      IF (ESSecurityCodeBufferTmp."Source Table ID" = SourceTableID) AND
         (ESSecurityCodeBufferTmp."Object Type" = ObjectType) AND
         (ESSecurityCodeBufferTmp."Object ID" = ObjectID) AND
         (ESSecurityCodeBufferTmp."Field Level Security" = FieldLevelSecurity)
      THEN
        IF FieldLevelSecurity THEN
          EXIT(ESSecurityCodeBufferTmp."Field Level Security Code" <> '')
        ELSE
          EXIT(ESSecurityCodeBufferTmp."Data Security Code" <> '');

      IF ESSecurityCodeBufferTmp.GET(SourceTableID,ObjectType,ObjectID,FieldLevelSecurity) THEN
        IF FieldLevelSecurity THEN
          EXIT(ESSecurityCodeBufferTmp."Field Level Security Code" <> '')
        ELSE
          EXIT(ESSecurityCodeBufferTmp."Data Security Code" <> '');

      GetWindowsGroup;

      ESUserSecuritySetup.RESET;
      ESUserSecuritySetup.SETRANGE("User ID",USERID);
      ESUserSecuritySetup.SETRANGE("Source Table ID",SourceTableID);
      IF NOT ESUserSecuritySetup.FIND('-') THEN
        IF WindowsGroup <> '' THEN
          UserSecurityUserID := WindowsGroup
        ELSE
          UserSecurityUserID := USERID
      ELSE
        UserSecurityUserID := USERID;

      ESUserSecuritySetup.RESET;
      ESUserSecuritySetup.SETFILTER("User ID",'%1|%2','',UserSecurityUserID);
      ESUserSecuritySetup.SETRANGE("Source Table ID",SourceTableID);
      IF NOT ESUserSecuritySetup.FIND('+') THEN
        CLEAR(ESUserSecuritySetup);

      ESSecurityCodeBufferTmp.INIT;
      ESSecurityCodeBufferTmp."Source Table ID" := SourceTableID;
      ESSecurityCodeBufferTmp."Object Type" := ObjectType;
      ESSecurityCodeBufferTmp."Object ID" := ObjectID;
      ESSecurityCodeBufferTmp."Field Level Security" := FieldLevelSecurity;
      IF FieldLevelSecurity THEN BEGIN
        ESSecurityCodeBufferTmp."Field Level Security Code" :=
          ESUserSecuritySetup."Field Level Security Code";
        ESSecurityCodeBufferTmp.INSERT;

        IF ESUserSecuritySetup."Field Level Security Code" <> '' THEN BEGIN
          ESFieldLevelSecurityObject.RESET;
          ESFieldLevelSecurityObject.SETRANGE("Source Table ID",SourceTableID);
          ESFieldLevelSecurityObject.SETRANGE(
            "Field Level Security Code",ESSecurityCodeBufferTmp."Field Level Security Code");
          ESFieldLevelSecurityObject.SETRANGE("Object Type",ESFLADSSetup.GetObjectTypeFilter(ObjectType));
          ESFieldLevelSecurityObject.SETFILTER("Object ID",'0|%1',ObjectID);
          IF ESFieldLevelSecurityObject.FIND('-') THEN
            REPEAT
              ESFieldLevelSecurityObjectTmp := ESFieldLevelSecurityObject;
              ESFieldLevelSecurityObjectTmp."Object Type" := ObjectType;
              IF ESFieldLevelSecurityObjectTmp.INSERT THEN
                ;

              IF NOT ESFieldLevelSecControl.GET(
                       ESFieldLevelSecurityObject."Source Table ID",
                       ESFieldLevelSecurityObject."Field Level Security Code",
                       ESFieldLevelSecurityObject."Object Type",
                       ESFieldLevelSecurityObject."Object ID",
                       ESFieldLevelSecControl.Type::Field,0)
              THEN BEGIN
                ESFieldLevelSecControlTmp.INIT;
                ESFieldLevelSecControlTmp."Source Table ID" :=
                  ESFieldLevelSecurityObjectTmp."Source Table ID";
                ESFieldLevelSecControlTmp."Field Level Security Code" :=
                  ESFieldLevelSecurityObjectTmp."Field Level Security Code";
                ESFieldLevelSecControlTmp."Object Type" :=
                  ESFieldLevelSecurityObjectTmp."Object Type";
                ESFieldLevelSecControlTmp."Object ID" :=
                  ESFieldLevelSecurityObjectTmp."Object ID";
                ESFieldLevelSecControlTmp.Type := ESFieldLevelSecControl.Type::Field;
                ESFieldLevelSecControlTmp.ID := 0;
                IF ESFieldLevelSecControlTmp.INSERT THEN
                  ;
              END;
            UNTIL ESFieldLevelSecurityObject.NEXT = 0;

          ESFieldLevelSecControl.RESET;
          ESFieldLevelSecControl.SETRANGE("Source Table ID",SourceTableID);
          ESFieldLevelSecControl.SETRANGE(
            "Field Level Security Code",ESSecurityCodeBufferTmp."Field Level Security Code");
          ESFieldLevelSecControl.SETRANGE("Object Type",ESFLADSSetup.GetObjectTypeFilter(ObjectType));
          ESFieldLevelSecControl.SETFILTER("Object ID",'0|%1',ObjectID);
          IF ESFieldLevelSecControl.FIND('-') THEN
            REPEAT
              ESFieldLevelSecControlTmp := ESFieldLevelSecControl;
              ESFieldLevelSecControlTmp."Object Type" := ObjectType;
              IF ESFieldLevelSecControlTmp.INSERT THEN
                ;
            UNTIL ESFieldLevelSecControl.NEXT = 0;

          EXIT(TRUE);
        END ELSE
          EXIT(FALSE);
      END ELSE BEGIN
        ESSecurityCodeBufferTmp."Data Security Code" := ESUserSecuritySetup."Data Security Code";
        ESSecurityCodeBufferTmp.INSERT;

        IF ESUserSecuritySetup."Data Security Code" <> '' THEN BEGIN
          ESDataSecurityObject.RESET;
          ESDataSecurityObject.SETRANGE("Source Table ID",SourceTableID);
          ESDataSecurityObject.SETRANGE(
            "Data Security Code",ESSecurityCodeBufferTmp."Data Security Code");
          ESDataSecurityObject.SETRANGE("Object Type",ESFLADSSetup.GetObjectTypeFilter(ObjectType));
          ESDataSecurityObject.SETFILTER("Object ID",'0|%1',ObjectID);
          IF ESDataSecurityObject.FIND('-') THEN
            REPEAT
              ESDataSecurityObjectTmp := ESDataSecurityObject;
              ESDataSecurityObjectTmp."Object Type" := ObjectType;
              IF ESDataSecurityObjectTmp.INSERT THEN
                ;
            UNTIL ESDataSecurityObject.NEXT = 0;

          ESDataSecurityField.RESET;
          ESDataSecurityField.SETRANGE("Source Table ID",SourceTableID);
          ESDataSecurityField.SETRANGE(
            "Data Security Code",ESSecurityCodeBufferTmp."Data Security Code");
          ESDataSecurityField.SETRANGE("Object Type",ESFLADSSetup.GetObjectTypeFilter(ObjectType));
          ESDataSecurityField.SETFILTER("Object ID",'0|%1',ObjectID);
          IF ESDataSecurityField.FIND('-') THEN
            REPEAT
              ESDataSecurityFieldTmp := ESDataSecurityField;
              ESDataSecurityFieldTmp."Object Type" := ObjectType;
              IF ESDataSecurityFieldTmp."Substitute Filter Value" THEN
                SubstituteFilterValue(ESDataSecurityFieldTmp,ObjectType,ObjectID,FALSE);
              IF ESDataSecurityFieldTmp.INSERT THEN
                ;
            UNTIL ESDataSecurityField.NEXT = 0;

          EXIT(TRUE);
        END ELSE
          EXIT(FALSE);
      END;
    END;

    PROCEDURE GetESFLADSSetup@1240520012();
    BEGIN
      IF ESFLADSSetupRetrieved THEN
        EXIT;

      IF ESFLADSSetup.GET THEN
        ;

      ESFLADSSetupRetrieved := TRUE;
    END;

    PROCEDURE FlushSecurityCache@1240520008();
    BEGIN
      ESSecurityBufferTmp.RESET;
      ESSecurityBufferTmp.DELETEALL;

      ESSecurityCodeBufferTmp.RESET;
      ESSecurityCodeBufferTmp.DELETEALL;

      ESFieldLevelSecurityObjectTmp.RESET;
      ESFieldLevelSecurityObjectTmp.DELETEALL;

      ESFieldLevelSecControlTmp.RESET;
      ESFieldLevelSecControlTmp.DELETEALL;

      ESDataSecurityObjectTmp.RESET;
      ESDataSecurityObjectTmp.DELETEALL;

      ESDataSecurityFieldTmp.RESET;
      ESDataSecurityFieldTmp.DELETEALL;
    END;

    PROCEDURE SaveSecurityBuffer@1240520014();
    VAR
      ESSecurityBuffer@1240520010 : Record 14123811;
      ESSecurityCodeBuffer@1240520009 : Record 14123812;
    BEGIN
      ESSecurityBuffer.RESET;
      ESSecurityBuffer.DELETEALL;

      ESSecurityBufferTmp.RESET;
      IF ESSecurityBufferTmp.FIND('-') THEN
        REPEAT
          ESSecurityBuffer := ESSecurityBufferTmp;
          ESSecurityBuffer.INSERT;
        UNTIL ESSecurityBufferTmp.NEXT = 0;

      ESSecurityCodeBuffer.RESET;
      ESSecurityCodeBuffer.DELETEALL;

      ESSecurityCodeBufferTmp.RESET;
      IF ESSecurityCodeBufferTmp.FIND('-') THEN
        REPEAT
          ESSecurityCodeBuffer := ESSecurityCodeBufferTmp;
          ESSecurityCodeBuffer.INSERT;
        UNTIL ESSecurityCodeBufferTmp.NEXT = 0;
    END;

    PROCEDURE GetSecurityBufferStatistics@1240520009(VAR ESSecurityBuffers@1240520013 : Integer;VAR ESSecurityCodeBuffers@1240520012 : Integer;VAR ESFieldLevelSecurityObjects@1240520011 : Integer;VAR ESFieldLevelSecControls@1240520010 : Integer;VAR ESDataSecurityObjects@1240520009 : Integer;VAR ESDataSecurityFields@1240520008 : Integer);
    BEGIN
      ESSecurityBufferTmp.RESET;
      ESSecurityBuffers := ESSecurityBufferTmp.COUNT;

      ESSecurityCodeBufferTmp.RESET;
      ESSecurityCodeBuffers := ESSecurityCodeBufferTmp.COUNT;

      ESFieldLevelSecurityObjectTmp.RESET;
      ESFieldLevelSecurityObjects := ESFieldLevelSecurityObjectTmp.COUNT;

      ESFieldLevelSecControlTmp.RESET;
      ESFieldLevelSecControls := ESFieldLevelSecControlTmp.COUNT;

      ESDataSecurityObjectTmp.RESET;
      ESDataSecurityObjects := ESDataSecurityObjectTmp.COUNT;

      ESDataSecurityFieldTmp.RESET;
      ESDataSecurityFields := ESDataSecurityFieldTmp.COUNT;
    END;

    LOCAL PROCEDURE GetWindowsGroup@1000000001();
    VAR
      ESFLADSGroupMember@1240520001 : Record 14123817;
    BEGIN
      IF WindowsGroupRetrieved THEN
        EXIT;
      WindowsGroupRetrieved := TRUE;

      GetESFLADSSetup;
      CASE TRUE OF
        ESFLADSSetup."Lookup Live Windows Groups":
          BEGIN
            CLEARLASTERROR;
            IF CODEUNIT.RUN(CODEUNIT::"ES Get Wind. Group Membership") THEN BEGIN
              IF ESFLADSSetup."Show Group Messages (Debug)" THEN
                MESSAGE(Text003,WindowsGroup);
            END ELSE
              IF ESFLADSSetup."Show Group Messages (Debug)" THEN
                MESSAGE(Text004,GETLASTERRORTEXT);
          END;
        ESFLADSSetup."Use FLADS Groups":
          BEGIN
            ESFLADSGroupMember.RESET;
            ESFLADSGroupMember.SETCURRENTKEY("Member User ID",Priority);
            ESFLADSGroupMember.SETRANGE("Member User ID",USERID);
            ESFLADSGroupMember.SETFILTER(Priority,'>0');
            ESFLADSGroupMember.SETRANGE("Do Not Use",FALSE);
            IF NOT ESFLADSGroupMember.FIND('-') THEN BEGIN
              ESFLADSGroupMember.SETRANGE(Priority,0);
              IF NOT ESFLADSGroupMember.FIND('-') THEN
                ;
            END;
            IF ESFLADSGroupMember."Group User ID" <> '' THEN
              WindowsGroup := ESFLADSGroupMember."Group User ID";
          END;
        ELSE
          WindowsGroup := '';
      END;

      IF ESFLADSSetup."Show Group Messages (Debug)" THEN
        MESSAGE(Text005,USERID,WindowsGroup);
    END;

    PROCEDURE SetWindowsGroup@1000000000(CurrentWindowsGroup@1000000000 : Code[50]);
    VAR
      ESUserSecuritySetup@1000000001 : Record 14123805;
    BEGIN
      IF WindowsGroup = '' THEN BEGIN
        ESUserSecuritySetup.RESET;
        ESUserSecuritySetup.SETRANGE("User ID",CurrentWindowsGroup);
        IF ESUserSecuritySetup.FIND('-') THEN
          WindowsGroup := CurrentWindowsGroup;
      END;

      IF ESFLADSSetup."Show Group Messages (Debug)" THEN
        MESSAGE(
          Text006,
          CurrentWindowsGroup,ESUserSecuritySetup."Source Table ID");
    END;

    PROCEDURE SubstituteFilterValue@1240520001(VAR ESDataSecurityField@1240520001 : Record 14123809;FromObjectType@1240520011 : Integer;FromObjectID@1240520012 : Integer;Recalculate@1240520013 : Boolean);
    VAR
      Field@1240520010 : Record 2000000041;
      OldFilter@1240520007 : Text[250];
      NewFilter@1240520002 : Text[250];
      PartialFilter@1240520008 : Text[250];
      ValueCode@1240520003 : Code[10];
      StartPos@1240520004 : Integer;
      EndPos@1240520005 : Integer;
      Finished@1240520006 : Boolean;
      ShowError@1240520009 : Boolean;
    BEGIN
      IF NOT Recalculate THEN
        ESDataSecurityField."Original Filter Value" := ESDataSecurityField."Filter Value";

      IF STRPOS(ESDataSecurityField."Original Filter Value",'%') = 0 THEN
        EXIT;

      OldFilter := ESDataSecurityField."Original Filter Value";
      NewFilter := '';
      REPEAT
        StartPos := STRPOS(OldFilter,'%');
        IF (StartPos > 0) AND (StartPos < STRLEN(OldFilter)) THEN BEGIN
          EndPos := STRPOS(COPYSTR(OldFilter,StartPos + 1),'%');
          IF EndPos > 1 THEN BEGIN
            IF EndPos <= 11 THEN BEGIN
              ValueCode := COPYSTR(OldFilter,StartPos + 1,EndPos - 1);

              PartialFilter :=
                GetSubstituteFilterValue(ESDataSecurityField,ValueCode,FromObjectType,FromObjectID);

              IF STRLEN(NewFilter) + STRLEN(PartialFilter) + STRLEN(OldFilter) - STRLEN(ValueCode) >
                 MAXSTRLEN(ESDataSecurityField."Filter Value")
              THEN BEGIN
                IF Field.GET(ESDataSecurityField."Source Table ID",ESDataSecurityField."Field ID")
                THEN BEGIN
                  IF Field.Type IN
                     [Field.Type::Decimal,Field.Type::Boolean,Field.Type::Integer,
                      Field.Type::Option,Field.Type::BigInteger,Field.Type::Duration]
                  THEN
                    PartialFilter := '0'
                  ELSE
                    PartialFilter := '''''';
                END;

                ShowError := TRUE;
              END;

              IF StartPos = 1 THEN
                NewFilter := NewFilter + PartialFilter
              ELSE
                NewFilter := NewFilter + COPYSTR(OldFilter,1,StartPos - 1) + PartialFilter;

              IF STRLEN(OldFilter) > StartPos + EndPos THEN BEGIN
                OldFilter := COPYSTR(OldFilter,StartPos + EndPos + 1);
                Finished := STRPOS(OldFilter,'%') = 0;
              END ELSE BEGIN
                OldFilter := '';
                Finished := TRUE;
              END;
            END ELSE BEGIN
              ShowError := TRUE;
              Finished := TRUE;
            END;
          END ELSE
            Finished := TRUE;
        END ELSE
          Finished := TRUE;
      UNTIL Finished;

      IF OldFilter <> '' THEN
        NewFilter := NewFilter + OldFilter;

      IF ShowError THEN
        IF ESDataSecurityField."Filter Type" = ESDataSecurityField."Filter Type"::Editable THEN
          MESSAGE(
            Text007,
            ESDataSecurityField."Source Table ID",ESDataSecurityField."Data Security Code",
            ESDataSecurityField."Object Type",ESDataSecurityField."Object ID",
            ESDataSecurityField."Field ID")
        ELSE
          ERROR(
            Text007,
            ESDataSecurityField."Source Table ID",ESDataSecurityField."Data Security Code",
            ESDataSecurityField."Object Type",ESDataSecurityField."Object ID",
            ESDataSecurityField."Field ID");

      ESDataSecurityField."Filter Value" := NewFilter;
    END;

    PROCEDURE GetSubstituteFilterValue@1240520002(ESDataSecurityField@1240520005 : Record 14123809;ValueCode@1240520001 : Code[10];FromObjectType@1240520004 : Integer;FromObjectID@1240520003 : Integer) : Text[250];
    VAR
      ESDynamicFilter@1240520002 : Record 14123818;
    BEGIN
      ESDynamicFilter.GET(ValueCode);

      ESDynamicFilter."Source Table ID" := ESDataSecurityField."Source Table ID";
      ESDynamicFilter."Data Security Code" := ESDataSecurityField."Data Security Code";
      ESDynamicFilter."Object Type" := ESDataSecurityField."Object Type";
      ESDynamicFilter."Object ID" := ESDataSecurityField."Object ID";
      ESDynamicFilter."Field ID" := ESDataSecurityField."Field ID";
      ESDynamicFilter."From Object Type" := FromObjectType;
      ESDynamicFilter."From Object ID" := FromObjectID;

      EXIT(ESDynamicFilter.CalculateFilterValue(TRUE));
    END;

    BEGIN
    END.
  }
}

