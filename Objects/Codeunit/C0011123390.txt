OBJECT Codeunit 11123390 SC - NAVApp Upgrade Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=04/18/17;
    Time=[ 1:00:00 PM];
    Version List=SCW19.2.0;
  }
  PROPERTIES
  {
    Permissions=TableData 4=rimd,
                TableData 9=rimd,
                TableData 13=rimd,
                TableData 18=rimd,
                TableData 27=rimd,
                TableData 30=rimd,
                TableData 36=rimd,
                TableData 110=rimd,
                TableData 112=rimd,
                TableData 114=rimd,
                TableData 279=rimd,
                TableData 5050=rimd,
                TableData 5401=rimd,
                TableData 5404=rimd,
                TableData 5715=rimd,
                TableData 5722=rimd,
                TableData 5723=rimd,
                TableData 6660=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {

    LOCAL PROCEDURE UpgradeDataFromVersion@11123305() : Text;
    BEGIN
      EXIT('9.1.1');
    END;

    LOCAL PROCEDURE GetArchivedDataVersion@11123344() : Text;
    BEGIN
      EXIT(NAVAPP.GETARCHIVEVERSION);
    END;

    PROCEDURE OnNavAppUpgradePerDatabase@11123304();
    BEGIN
      // The Procedure for upgrading process. Uses if the extension contains cross-company tables
    END;

    PROCEDURE OnNavAppUpgradePerCompany@11123306();
    BEGIN
      // The Procedure for upgrading process per company.
      UpgradeStandardTablesData;
      UpgradeSanaTablesData;
    END;

    LOCAL PROCEDURE SetSanaTablesNAVAppData@11123307(TableId@11123303 : Integer);
    VAR
      FromRecordRef@11123310 : RecordRef;
      ToRecordRef@11123309 : RecordRef;
      CommonFunctions@11123308 : Codeunit 11123309;
      ArchivedTableId@11123307 : Integer;
      ToTableId@11123306 : Integer;
      ArchivedDataVersion@11123305 : Text;
      UpgradeDataVersion@11123304 : Text;
    BEGIN
      ArchivedTableId := TableId;
      ToTableId := TableId;

      ArchivedDataVersion := GetArchivedDataVersion;
      UpgradeDataVersion := UpgradeDataFromVersion;
      IF ArchivedDataVersion >= UpgradeDataVersion THEN BEGIN
        NAVAPP.RESTOREARCHIVEDATA(TableId);
        EXIT;
      END;

      IF NAVAPP.GETARCHIVERECORDREF(ArchivedTableId,FromRecordRef) THEN BEGIN
        IF FromRecordRef.FINDSET THEN BEGIN
          ToRecordRef.OPEN(ToTableId);
          REPEAT
            CommonFunctions.CopyRecRefByFields(FromRecordRef,ToRecordRef);
            IF NOT ToRecordRef.INSERT THEN
              ToRecordRef.MODIFY;
          UNTIL FromRecordRef.NEXT = 0;
        END;
      END;

      FromRecordRef.CLOSE;
      ToRecordRef.CLOSE;
    END;

    LOCAL PROCEDURE SetStdTablesNAVAppData@11123340(TableId@11123303 : Integer);
    VAR
      FromRecordRef@11123307 : RecordRef;
      ToRecordRef@11123306 : RecordRef;
      ArchivedTableId@11123305 : Integer;
      ToTableId@11123304 : Integer;
    BEGIN
      ArchivedTableId := TableId;
      ToTableId := TableId;

      IF NAVAPP.GETARCHIVERECORDREF(ArchivedTableId,FromRecordRef) THEN BEGIN
        IF FromRecordRef.FINDSET THEN BEGIN
          ToRecordRef.OPEN(ToTableId);
          REPEAT
            CopyRecRefByField(FromRecordRef,ToRecordRef,11123302);
            CopyRecRefByField(FromRecordRef,ToRecordRef,11123303);
            CopyRecRefByField(FromRecordRef,ToRecordRef,11123304);
            CopyRecRefByField(FromRecordRef,ToRecordRef,11123350);
            CopyRecRefByField(FromRecordRef,ToRecordRef,11123399);
          UNTIL FromRecordRef.NEXT = 0;
        END;
      END;
      FromRecordRef.CLOSE;
      ToRecordRef.CLOSE;
    END;

    LOCAL PROCEDURE CopyRecRefByField@11123350(VAR FromRecordRef@11123305 : RecordRef;VAR ToRecordRef@11123304 : RecordRef;FieldId@11123303 : Integer);
    VAR
      FromFieldRef@11123307 : FieldRef;
      ToFieldRef@11123306 : FieldRef;
    BEGIN
      IF NOT FromRecordRef.FIELDEXIST(FieldId) THEN
        EXIT;

      FromFieldRef := FromRecordRef.FIELD(FieldId);
      IF ToRecordRef.GET(FromRecordRef.RECORDID) THEN BEGIN
        ToFieldRef := ToRecordRef.FIELD(FromFieldRef.NUMBER);
        ToFieldRef.VALUE(FromFieldRef.VALUE);
        ToRecordRef.MODIFY;
      END;
    END;

    LOCAL PROCEDURE UpgradeStandardTablesData@11123336();
    BEGIN
      UpgradeCurrency;
      UpgradeCountryRegion;
      UpgradeSalespersonPurchaser;
      UpgradeCustomer;
      UpgradeItem;
      UpgradeSalesHeader;
      UpgradeSalesShipmentHeader;
      UpgradeSalesInvoiceHeader;
      UpgradeSalesCrMemoHeader;
      UpgradeExtendedTextHeader;
      UpgradeContact;
      UpgradeItemVariant;
      UpgradeItemUnitofMeasure;
      UpgradeItemSubstitution;
      UpgradeItemCategory;
      UpgradeProductGroup;
      UpgradeReturnReceiptHeader;
      UpgradeBOMComponent;
    END;

    LOCAL PROCEDURE UpgradeSanaTablesData@11123334();
    BEGIN
      UpgradeWebshop;
      UpgradeOperetion;
      UpgradeSetup;
      UpgradeCatalogFilter; // Obsolete; Will be removed in the future version.
      UpgradeWebshopFilter;
      UpgradeOrderImportInfo;
      UpgradeManualProcessRequest;
      UpgradeProcessRequestSetup;
      UpgradeProductInfo;
      UpgradeVariantInfo;
      UpgradeDataValidationHeader;
      UpgradeDataValidationLine;
      UpgradeSalesDocumentHeader;
      UpgradeSalesHeaderBlob;
      UpgradeSalesDocumentLine;
      UpgradeCustomerAssortment;
      UpgradeVolumePriceDiscount;
      UpgradeCurrencyISOCode;
      UpgradeRecordInfo;
      UpgradeTranslation;
      DeleteArchivedSanaData; // Redundant data for restore
    END;

    LOCAL PROCEDURE UpgradeWebshop@11123301();
    BEGIN
      SetSanaTablesNAVAppData(DATABASE::"SC - Webshop");
    END;

    LOCAL PROCEDURE UpgradeOperetion@11123303();
    BEGIN
      SetSanaTablesNAVAppData(DATABASE::"SC - Operation");
    END;

    LOCAL PROCEDURE UpgradeSetup@11123308();
    BEGIN
      SetSanaTablesNAVAppData(DATABASE::"SC - Setup");
    END;

    LOCAL PROCEDURE UpgradeCatalogFilter@11123310();
    BEGIN
      SetSanaTablesNAVAppData(11123308); // SC - Obsolete 11123308
    END;

    LOCAL PROCEDURE UpgradeWebshopFilter@11123351();
    BEGIN
      SetSanaTablesNAVAppData(DATABASE::"SC - Webshop Filter");
    END;

    LOCAL PROCEDURE UpgradeOrderImportInfo@11123311();
    BEGIN
      SetSanaTablesNAVAppData(DATABASE::"SC - Order Import Info.");
    END;

    LOCAL PROCEDURE UpgradeManualProcessRequest@11123312();
    BEGIN
      SetSanaTablesNAVAppData(DATABASE::"SC - Manual Process Request");
    END;

    LOCAL PROCEDURE UpgradeProcessRequestSetup@11123314();
    BEGIN
      SetSanaTablesNAVAppData(DATABASE::"SC - Process Request Setup");
    END;

    LOCAL PROCEDURE UpgradeProductInfo@11123309();
    BEGIN
      SetSanaTablesNAVAppData(DATABASE::"SC - Product Info.");
    END;

    LOCAL PROCEDURE UpgradeVariantInfo@11123315();
    BEGIN
      SetSanaTablesNAVAppData(DATABASE::"SC - Variant Info.");
    END;

    LOCAL PROCEDURE UpgradeDataValidationHeader@11123317();
    BEGIN
      SetSanaTablesNAVAppData(DATABASE::"SC - Data Validation Header");
    END;

    LOCAL PROCEDURE UpgradeDataValidationLine@11123319();
    BEGIN
      SetSanaTablesNAVAppData(DATABASE::"SC - Data Validation Line");
    END;

    LOCAL PROCEDURE UpgradeSalesDocumentHeader@11123321();
    BEGIN
      SetSanaTablesNAVAppData(DATABASE::"SC - Sales Document Header");
    END;

    LOCAL PROCEDURE UpgradeSalesHeaderBlob@11123324();
    BEGIN
      SetSanaTablesNAVAppData(DATABASE::"SC - Sales Header Blob");
    END;

    LOCAL PROCEDURE UpgradeSalesDocumentLine@11123326();
    BEGIN
      SetSanaTablesNAVAppData(DATABASE::"SC - Sales Document Line");
    END;

    LOCAL PROCEDURE UpgradeCustomerAssortment@11123329();
    BEGIN
      SetSanaTablesNAVAppData(DATABASE::"SC - Customer Assortment");
    END;

    LOCAL PROCEDURE UpgradeVolumePriceDiscount@11123331();
    BEGIN
      SetSanaTablesNAVAppData(DATABASE::"SC - Volume Price/Discount");
    END;

    LOCAL PROCEDURE UpgradeCurrencyISOCode@11123332();
    BEGIN
      SetSanaTablesNAVAppData(DATABASE::"SC - Currency ISO Code");
    END;

    LOCAL PROCEDURE UpgradeRecordInfo@11123313();
    BEGIN
      SetSanaTablesNAVAppData(DATABASE::"SC - Record Info");
    END;

    LOCAL PROCEDURE UpgradeTranslation@11123346();
    BEGIN
      SetSanaTablesNAVAppData(DATABASE::"SC - Translation");
    END;

    LOCAL PROCEDURE UpgradeCurrency@11123339();
    BEGIN
      SetStdTablesNAVAppData(DATABASE::Currency);
    END;

    LOCAL PROCEDURE UpgradeCountryRegion@11123347();
    BEGIN
      SetStdTablesNAVAppData(DATABASE::"Country/Region");
    END;

    LOCAL PROCEDURE UpgradeSalespersonPurchaser@11123316();
    BEGIN
      SetStdTablesNAVAppData(DATABASE::"Salesperson/Purchaser");
    END;

    LOCAL PROCEDURE UpgradeCustomer@11123342();
    BEGIN
      SetStdTablesNAVAppData(DATABASE::Customer);
    END;

    LOCAL PROCEDURE UpgradeItem@11123318();
    BEGIN
      SetStdTablesNAVAppData(DATABASE::Item);
    END;

    LOCAL PROCEDURE UpgradeSalesHeader@11123320();
    BEGIN
      SetStdTablesNAVAppData(DATABASE::"Sales Header");
    END;

    LOCAL PROCEDURE UpgradeSalesShipmentHeader@11123322();
    BEGIN
      SetStdTablesNAVAppData(DATABASE::"Sales Shipment Header");
    END;

    LOCAL PROCEDURE UpgradeSalesInvoiceHeader@11123323();
    BEGIN
      SetStdTablesNAVAppData(DATABASE::"Sales Invoice Header");
    END;

    LOCAL PROCEDURE UpgradeSalesCrMemoHeader@11123325();
    BEGIN
      SetStdTablesNAVAppData(DATABASE::"Sales Cr.Memo Header");
    END;

    LOCAL PROCEDURE UpgradeExtendedTextHeader@11123327();
    BEGIN
      SetStdTablesNAVAppData(DATABASE::"Extended Text Header");
    END;

    LOCAL PROCEDURE UpgradeContact@11123328();
    BEGIN
      SetStdTablesNAVAppData(DATABASE::Contact);
    END;

    LOCAL PROCEDURE UpgradeItemVariant@11123330();
    BEGIN
      SetStdTablesNAVAppData(DATABASE::"Item Variant");
    END;

    LOCAL PROCEDURE UpgradeItemUnitofMeasure@11123333();
    BEGIN
      SetStdTablesNAVAppData(DATABASE::"Item Unit of Measure");
    END;

    LOCAL PROCEDURE UpgradeItemSubstitution@11123335();
    BEGIN
      SetStdTablesNAVAppData(DATABASE::"Item Substitution");
    END;

    LOCAL PROCEDURE UpgradeItemCategory@11123337();
    BEGIN
      SetStdTablesNAVAppData(DATABASE::"Item Category");
    END;

    LOCAL PROCEDURE UpgradeProductGroup@11123338();
    BEGIN
      SetStdTablesNAVAppData(DATABASE::"Product Group");
    END;

    LOCAL PROCEDURE UpgradeReturnReceiptHeader@11123341();
    BEGIN
      SetStdTablesNAVAppData(DATABASE::"Return Receipt Header");
    END;

    LOCAL PROCEDURE UpgradeBOMComponent@11123345();
    BEGIN
      SetStdTablesNAVAppData(DATABASE::"BOM Component");
    END;

    LOCAL PROCEDURE DeleteArchivedSanaData@11123343();
    BEGIN
      NAVAPP.DELETEARCHIVEDATA(DATABASE::"SC - XML Buffer (dotNET)");
      NAVAPP.DELETEARCHIVEDATA(DATABASE::"SC - Parameters Collection");
      NAVAPP.DELETEARCHIVEDATA(DATABASE::"SC - Role Center Cue");
      NAVAPP.DELETEARCHIVEDATA(DATABASE::"SC - Calc. Values Info.");
      NAVAPP.DELETEARCHIVEDATA(DATABASE::"SC - Lookup Value");
      NAVAPP.DELETEARCHIVEDATA(DATABASE::"SC - Record Action");
      NAVAPP.DELETEARCHIVEDATA(DATABASE::"SC - Key Value");
      NAVAPP.DELETEARCHIVEDATA(DATABASE::"SC - Chart Sales Ord. Setup");
      NAVAPP.DELETEARCHIVEDATA(DATABASE::"SC - Webshop Orders Overview");

      // NOT SUPPORTED IN CURRENT IMPLEMENTATION
      //NAVAPP.DELETEARCHIVEDATA(DATABASE::"SC - Cloud Param. Collection");
      //NAVAPP.DELETEARCHIVEDATA(DATABASE::"SC - Cloud Webshop");
    END;

    BEGIN
    END.
  }
}

