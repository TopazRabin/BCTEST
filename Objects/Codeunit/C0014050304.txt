OBJECT Codeunit 14050304 Process Receive Document Job
{
  OBJECT-PROPERTIES
  {
    Date=03/21/17;
    Time=12:00:00 PM;
    Version List=SE0.60.13;
  }
  PROPERTIES
  {
    TableNo=14050305;
    OnRun=BEGIN
            EDIJobRoutine.GET(Rec."Job Code",Rec."Line No.");
            GetJobFilters;
            ProcessReceiveDocument;
          END;

  }
  CODE
  {
    VAR
      EDIJobRoutine@1240020024 : Record 14050305;
      EDIRecDocHdr@1240020005 : Record 14002358;
      EDIRecDocHdr2@1240020021 : Record 14002358;
      EDISetup@1240020023 : Record 14002367;
      EDICreateSalesOrder@1240020020 : Codeunit 14002365;
      EDISalesOrderUpdate@1240020019 : Codeunit 14002362;
      EDIFunctAckUpdate@1240020018 : Codeunit 14002364;
      EDIUpdateOrgRelationships@1240020017 : Codeunit 14002401;
      EDIUpdateRouteReq@1240020016 : Codeunit 14002404;
      EDIUpdatePurchaseOrder@1240020015 : Codeunit 14002363;
      ProcessWhseShipNotice@1240020014 : Codeunit 14050701;
      EDICreatePurchaseDoc@1240020013 : Codeunit 14002382;
      ReceiveInventoryAdvice@1240020012 : Codeunit 14002410;
      EDICreateTransferOrder@1240020011 : Codeunit 14050902;
      EDICreateFreightInvoice@1240020010 : Codeunit 14050805;
      EDIUpdateTransferOrder@1240020009 : Codeunit 14050909;
      NavisionDocumentFilter@1240020000 : Code[250];
      EDIDocumentNoFilter@1240020001 : Code[250];
      TradePartnerFilter@1240020002 : Code[250];
      CompanyFilter@1240020003 : Text[250];
      DataError@1240020004 : Boolean;

    PROCEDURE ProcessReceiveDocument@1240030000() : Boolean;
    VAR
      EDICreateSalesOrder@1240030000 : Codeunit 14002365;
      EDISalesOrderUpdate@1240030001 : Codeunit 14002362;
      EDIFunctAckUpdate@1240030002 : Codeunit 14002364;
      EDIUpdateOrgRelationships@1240030003 : Codeunit 14002401;
      EDIUpdateRouteReq@1240030004 : Codeunit 14002404;
      EDIUpdatePurchaseOrder@1240030005 : Codeunit 14002363;
      ProcessWhseShipNotice@1240030008 : Codeunit 14050701;
      EDICreatePurchaseDoc@1240020001 : Codeunit 14002382;
      ReceiveInventoryAdvice@1240020000 : Codeunit 14002410;
      EDICreateTransferOrder@1240020002 : Codeunit 14050902;
      EDICreateFreightInvoice@1240020003 : Codeunit 14050805;
      EDIUpdateTransferOrder@1240020004 : Codeunit 14050909;
      EDIRecDocHdr2@1240020005 : Record 14002358;
    BEGIN
      EDIRecDocHdr.RESET;
      EDIRecDocHdr.SETCURRENTKEY(
        "Company Name","Navision Document","EDI Document No.","Trade Partner No.");
      EDIRecDocHdr.SETRANGE("Process Receive Doc. Job Ready",TRUE);
      EDIRecDocHdr.SETRANGE("Document Processed",FALSE);
      EDIRecDocHdr.SETFILTER("Company Name",CompanyFilter);
      EDIRecDocHdr.SETFILTER("Navision Document",NavisionDocumentFilter);
      EDIRecDocHdr.SETFILTER("EDI Document No.",EDIDocumentNoFilter);
      EDIRecDocHdr.SETFILTER("Trade Partner No.",TradePartnerFilter);
      IF DataError THEN
        EDIRecDocHdr.SETRANGE("Data Error",TRUE)
      ELSE
        EDIRecDocHdr.SETRANGE("Data Error",FALSE);
      IF EDIRecDocHdr.FIND('-') THEN
        REPEAT
          WITH EDIRecDocHdr DO BEGIN
            IF DataError THEN BEGIN
              EDIRecDocHdr2.GET("Internal Doc. No.");
              EDIRecDocHdr2."Error Message Text" := '';
              EDIRecDocHdr2.MODIFY;
              COMMIT
            END;
            CASE "Navision Document" OF
              'I_SLSORD':
                BEGIN
                  CLEARLASTERROR;
                  CLEAR(EDICreateSalesOrder);
                  SetDataError;
                  IF NOT EDICreateSalesOrder.RUN(EDIRecDocHdr) THEN BEGIN
                    EDIRecDocHdr2.GET("Internal Doc. No.");
                    EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                    EDIRecDocHdr2.MODIFY;
                    COMMIT;
                  END;
                END;
              'U_SLSORD','U_SLSWSA':
                BEGIN
                  CLEARLASTERROR;
                  CLEAR(EDISalesOrderUpdate);
                  SetDataError;
                  IF NOT EDISalesOrderUpdate.RUN(EDIRecDocHdr) THEN BEGIN
                    EDIRecDocHdr2.GET("Internal Doc. No.");
                    EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                    EDIRecDocHdr2.MODIFY;
                    COMMIT;
                  END;
                END;
              'U_PURWSA','I_PURINV','I_PURORD','U_PURORD':
                BEGIN
                  CLEARLASTERROR;
                  CLEAR(EDIUpdatePurchaseOrder);
                  SetDataError;
                  IF NOT EDIUpdatePurchaseOrder.RUN(EDIRecDocHdr) THEN BEGIN
                    EDIRecDocHdr2.GET("Internal Doc. No.");
                    EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                    EDIRecDocHdr2.MODIFY;
                    COMMIT;
                  END;
                END;
              'I_SLSCUS':
                BEGIN
                  CLEARLASTERROR;
                  CLEAR(EDIUpdateOrgRelationships);
                  SetDataError;
                  IF NOT EDIUpdateOrgRelationships.RUN(EDIRecDocHdr) THEN BEGIN
                    EDIRecDocHdr2.GET("Internal Doc. No.");
                    EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                    EDIRecDocHdr2.MODIFY;
                    COMMIT;
                  END;
                END;
              'U_ROUTEREQ':
                BEGIN
                  CLEARLASTERROR;
                  CLEAR(EDIUpdateRouteReq);
                  SetDataError;
                  IF NOT EDIUpdateRouteReq.RUN(EDIRecDocHdr) THEN BEGIN
                    EDIRecDocHdr2.GET("Internal Doc. No.");
                    EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                    EDIRecDocHdr2.MODIFY;
                    COMMIT;
                  END;
                END;
              'I_FUNCTACK':
                BEGIN
                  CLEARLASTERROR;
                  CLEAR(EDIFunctAckUpdate);
                  SetDataError;
                  IF NOT EDIFunctAckUpdate.RUN(EDIRecDocHdr) THEN BEGIN
                    EDIRecDocHdr2.GET("Internal Doc. No.");
                    EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                    EDIRecDocHdr2.MODIFY;
                    COMMIT;
                  END;
                END;
              'I_SLSASN','I_SLSWSA':
                BEGIN
                  CLEARLASTERROR;
                  CLEAR(ProcessWhseShipNotice);
                  SetDataError;
                  IF NOT ProcessWhseShipNotice.RUN(EDIRecDocHdr) THEN BEGIN
                    EDIRecDocHdr2.GET("Internal Doc. No.");
                    EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                    EDIRecDocHdr2.MODIFY;
                    COMMIT;
                  END;
                END;
              'I_PURDOC':
                BEGIN
                  CLEARLASTERROR;
                  CLEAR(EDICreatePurchaseDoc);
                  SetDataError;
                  IF NOT EDICreatePurchaseDoc.RUN(EDIRecDocHdr) THEN BEGIN
                    EDIRecDocHdr2.GET("Internal Doc. No.");
                    EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                    EDIRecDocHdr2.MODIFY;
                    COMMIT;
                  END;
                END;
              'I_FGTINV':
                BEGIN
                  CLEARLASTERROR;
                  CLEAR(EDICreateFreightInvoice);
                  SetDataError;
                  IF NOT EDICreateFreightInvoice.RUN(EDIRecDocHdr) THEN BEGIN
                    EDIRecDocHdr2.GET("Internal Doc. No.");
                    EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                    EDIRecDocHdr2.MODIFY;
                    COMMIT;
                  END;
                END;
              'I_INVRPT','I_INVADJ':
                BEGIN
                  CLEARLASTERROR;
                  CLEAR(ReceiveInventoryAdvice);
                  SetDataError;
                  IF NOT ReceiveInventoryAdvice.RUN(EDIRecDocHdr) THEN BEGIN
                    EDIRecDocHdr2.GET("Internal Doc. No.");
                    EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                    EDIRecDocHdr2.MODIFY;
                    COMMIT;
                  END;
                END;
              'I_TFRORD':
                BEGIN
                  CLEARLASTERROR;
                  CLEAR(EDICreateTransferOrder);
                  SetDataError;
                  IF NOT EDICreateTransferOrder.RUN(EDIRecDocHdr) THEN BEGIN
                    EDIRecDocHdr2.GET("Internal Doc. No.");
                    EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                    EDIRecDocHdr2.MODIFY;
                    COMMIT;
                  END;
                END;
              'U_TFRORD':
                BEGIN
                  CLEARLASTERROR;
                  CLEAR(EDIUpdateTransferOrder);
                  SetDataError;
                  IF NOT EDIUpdateTransferOrder.RUN(EDIRecDocHdr) THEN BEGIN
                    EDIRecDocHdr2.GET("Internal Doc. No.");
                    EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                    EDIRecDocHdr2.MODIFY;
                    COMMIT;
                  END;
                END;
            END;
          END;
        UNTIL EDIRecDocHdr.NEXT = 0;
    END;

    PROCEDURE SetDataError@1240020001();
    BEGIN
      EDIRecDocHdr2.GET(EDIRecDocHdr."Internal Doc. No.");
      EDIRecDocHdr2."Document Processed" := FALSE;
      EDIRecDocHdr2."Data Error" := TRUE;
      EDIRecDocHdr2."Error Message Text" := '';
      EDIRecDocHdr2.MODIFY;
      COMMIT;
      EDIRecDocHdr := EDIRecDocHdr2;
    END;

    PROCEDURE GetJobFilters@1240020000();
    BEGIN
      WITH EDIJobRoutine DO BEGIN
        NavisionDocumentFilter := "Navision Document Filter" ;
        EDIDocumentNoFilter := "EDI Document No. Filter";
        TradePartnerFilter := "Trade Partner Filter";
        CompanyFilter := "Company Filter";
        DataError := "Process Data Error";
      END;
    END;

    BEGIN
    END.
  }
}

