OBJECT Codeunit 52000 Unishipper
{
  OBJECT-PROPERTIES
  {
    Date=06/25/21;
    Time=[ 6:48:02 AM];
    Modified=Yes;
    Version List=3187;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            //MESSAGE('Start at %1',CURRENTDATETIME);//Start at 11/23/19 01:12 PM
            IF GUIALLOWED THEN
              ProgressWindow.OPEN(Text50001);

                ProgressWindow.UPDATE(1,ShiptoAddress."Customer No.");
                ProgressWindow.UPDATE(2,ShiptoAddress.Code);
            IF GUIALLOWED THEN
              ProgressWindow.CLOSE;
          END;

  }
  CODE
  {
    VAR
      HttpWebRequestMgt@1000000000 : Codeunit 1297;
      OutStrm@1000000003 : OutStream;
      ExportShiptoAddressUSPS@1000000002 : XMLport 50021;
      USPSSetup@1000000001 : Record 50059;
      TempBlob@1000000004 : Record 99008535;
      ResponseError@1000000005 : Text;
      XMLDocument@1000000007 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      myOutstream@1000000008 : OutStream;
      Streamreader@1000000009 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.StreamReader";
      USPSAddressRecords@1000000011 : Record 50057;
      ShiptoAddress@1000000012 : Record 222;
      RequestText@1000000006 : Text;
      ProgressWindow@1000000013 : Dialog;
      Text50001@1000000014 : TextConst 'ENU=Processing Rate Request....';
      ResponseText@1000000015 : Text;
      Text50002@1000000016 : TextConst 'ENU=Unable to Process response received for Customer No %1 Ship-to Code %2.';
      ImportUSPSAddressResponse@1000000017 : XMLport 50022;
      Add1@1000000010 : Text;
      Add2@1000000018 : Text;
      HttpWebRequestMgtQuote@1000000019 : Codeunit 1297;
      QuoteRequest@1000000020 : XMLport 50088;
      IWXLicensePlateHeader@1000000021 : Record 23044505;
      XMLBuffer@1000000023 : TEMPORARY Record 1235;
      XMLDocQ@1000000024 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      XMLNodeRef@1000000025 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLNodeListRef@1000000026 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeList";
      NodeCountRef@1000000027 : Integer;
      XMLNodeValue@1000000029 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      QuoteResponseValues@1000000028 : ARRAY [6] OF Text;
      UnishipperQuoteResponse@1000000022 : Page 51117;

    PROCEDURE CreateXMLRequest@1000000000(SourceNo@1000000000 : Code[20];VAR ltrecRateBuffer@1000000006 : TEMPORARY Record 23044603);
    VAR
      ShiptoAddress2@1000000001 : Record 222;
      instrm@1000000002 : InStream;
      TestRequestText@1000000003 : Text;
      UnishipperXmlExport@1000000005 : XMLport 50079;
    BEGIN
      CLEAR(OutStrm);
      CLEAR(TempBlob);
      IWXLicensePlateHeader.CALCFIELDS("Source No.");
      IWXLicensePlateHeader.SETRANGE("Source No.",SourceNo);
      UnishipperXmlExport.SETTABLEVIEW(IWXLicensePlateHeader);
      TempBlob.INIT;
      TempBlob.Blob.CREATEOUTSTREAM(OutStrm);
      UnishipperXmlExport.SETDESTINATION(OutStrm);
      UnishipperXmlExport.EXPORT;
      TempBlob.Blob.CREATEINSTREAM(instrm);
      Streamreader := Streamreader.StreamReader(instrm);
      RequestText := Streamreader.ReadToEnd;
      RequestText := COPYSTR(RequestText,57,STRLEN(RequestText)-56);
      //RequestText := USPSSetup.URL+RequestText;
      PostRequest(SourceNo,RequestText,ltrecRateBuffer);
    END;

    LOCAL PROCEDURE PostRequest@1000000002(VAR SourceNo@1000000007 : Code[20];VAR RequestTextP@1000000008 : Text;VAR ltrecRateBuffer@1000000011 : TEMPORARY Record 23044603);
    VAR
      ResponseInStrm@1000000000 : InStream;
      HttpStatusCode@1000000002 : DotNet "'System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Net.HttpStatusCode";
      ResponseHeaders@1000000003 : DotNet "'System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Specialized.NameValueCollection";
      WebRequestHelper@1000000004 : Codeunit 1299;
      WebException@1000000005 : DotNet "'System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Net.WebException";
      Instrm@1000000006 : InStream;
      USPSAddressRecords2@1000000001 : Record 50057;
      ImportUSPSErrorResponse@1000000009 : XMLport 50078;
      DSHIPFreightIntegProvider@1000000010 : Record 23044624;
      RateResponse@1000000012 : XMLport 50081;
      ResponseBodyXMLDoc@1000000015 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      ResponseBodyXmlNode@1000000014 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XmlNode@1000000013 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      Doc@1000000016 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      ParentNode@1000000017 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ChildNode@1000000018 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NodeList@1000000019 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeList";
      ChildNodeList@1000000020 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeList";
      i@1000000021 : Integer;
      j@1000000022 : Integer;
      XMLCurrNode@1000000025 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLDoc@1000000027 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      XMLDOMNodeList@1000000026 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeList";
      NodeCount@1000000028 : Integer;
      Counter@1000000029 : Integer;
      XMLDOMManagement@1000000030 : Codeunit 6224;
      CarrierNode@1000000032 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      RateNode@1000000031 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ChargeNode@1000000033 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      AmountNode@1000000034 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLDOMNamedNodeMap@1000000035 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNamedNodeMap";
      AttributeNode@1000000036 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ChargesNode@1000000037 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      PriceSheetNode@1000000038 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ChargeXMLNodeList@1000000039 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeList";
      ServiceNode@1000000040 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      CarrierIDNode@1000000041 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ServiceDaysNode@1000000042 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF GUIALLOWED THEN
        ProgressWindow.OPEN(Text50001);
      COMMIT;
      CLEAR(Instrm);
      //CLEAR(ResponseInStrm);
      CLEAR(HttpWebRequestMgt);
      CLEAR(ImportUSPSAddressResponse);
      DSHIPFreightIntegProvider.SETRANGE(Code,'EXTERNAL');
      DSHIPFreightIntegProvider.FINDFIRST;
      //HttpWebRequestMgt.Initialize(USPSSetup.URL);
      HttpWebRequestMgt.Initialize(DSHIPFreightIntegProvider."API URL");
      HttpWebRequestMgt.DisableUI();
      HttpWebRequestMgt.SetMethod('POST');
      //MESSAGE('Request\ %1',RequestTextP);
      HttpWebRequestMgt.AddBodyAsText(RequestTextP);
      TempBlob.INIT;
      TempBlob.Blob.CREATEINSTREAM(ResponseInStrm);
      IF HttpWebRequestMgt.GetResponse(ResponseInStrm,HttpStatusCode,ResponseHeaders) THEN BEGIN
          //ResponseInStrm.READ(ResponseText);
          //MESSAGE('Response\%1',ResponseText);
          //XMLPORT.IMPORT(XMLPORT::"Import USPS Address Response",ResponseInStrm);
         //IF (XMLPORT.IMPORT(XMLPORT::"Import USPS Address Response",ResponseInStrm)) THEN BEGIN
         //EXIT;
       {XMLBuffer.LoadFromStream(ResponseInStrm);
       IF XMLBuffer.FINDSET THEN
         REPEAT
           XMLBuffer1 := XMLBuffer;
           XMLBuffer1.INSERT;
         UNTIL XMLBuffer.NEXT=0;}
      CLEAR(XMLDoc);
      XMLDoc := XMLDoc.XmlDocument();
      XMLDOMManagement.LoadXMLDocumentFromInStream(ResponseInStrm,XMLDoc);
      //XMLDoc.LoadXml(ResponseText);
      //XMLDoc.Save('U:\Lanham\xmlres.xml');
      XMLCurrNode := XMLDoc.SelectSingleNode('//PriceSheets');
      XMLDOMNodeList := XMLCurrNode.ChildNodes;
      NodeCount := XMLDOMNodeList.Count;

      //XMLNodeList1 := XmlDoc.SelectNodes('//Body/Cube');
      //XmlNodeList.ItemOf(I - 1).InnerText
      FOR i := 0 TO (NodeCount - 1) DO BEGIN
        CarrierNode := XMLDOMNodeList.ItemOf(i).SelectSingleNode('CarrierName');
        ServiceNode :=   XMLDOMNodeList.ItemOf(i).SelectSingleNode('Service');
        CarrierIDNode := XMLDOMNodeList.ItemOf(i).SelectSingleNode('CarrierId');
        ChargeNode := XMLDOMNodeList.ItemOf(i).SelectSingleNode('Charges');
        ServiceDaysNode := XMLDOMNodeList.ItemOf(i).SelectSingleNode('ServiceDays');
        ChargeXMLNodeList := ChargeNode.ChildNodes;
        FOR j := 0 TO (ChargeXMLNodeList.Count - 1) DO BEGIN
          ChildNode := ChargeXMLNodeList.ItemOf(j).SelectSingleNode('@type');
          RateNode := ChargeXMLNodeList.ItemOf(j).SelectSingleNode('Rate');
          AmountNode := ChargeXMLNodeList.ItemOf(j).SelectSingleNode('Amount');
          IF ChildNode.InnerText = 'ITEM' THEN BEGIN
            //MESSAGE('Line no is %1..carrier name %2.. Line 2 no %3  Rate %4',i,PriceSheetNode.InnerText, j ,RateNode.InnerText);
            ltrecRateBuffer.INIT;
            ltrecRateBuffer.ID := 'extGeneric'+FORMAT(i);
            ltrecRateBuffer."Carrier Name" := CarrierNode.InnerText;
            //ltrecRateBuffer.Service := ServiceNode.InnerText;
            ltrecRateBuffer.Service := 'Ground';
            ltrecRateBuffer."Carrier Account ID" := CarrierIDNode.InnerText;
            EVALUATE(ltrecRateBuffer."Rate Price" , RateNode.InnerText);
            EVALUATE(ltrecRateBuffer."Rate Cost" , AmountNode.InnerText);
            EVALUATE(ltrecRateBuffer."Delivery Days" ,ServiceDaysNode.InnerText);
            ltrecRateBuffer.Currency := 'USD';
            ltrecRateBuffer.INSERT;
          END;
        END;
          //MESSAGE('Line no is %1.. %2',i,PriceSheetNode.InnerText);
      END;
      ProgressWindow.CLOSE;
      END;
      {
      //Quote request;
      CLEAR(OutStrm);
      CLEAR(TempBlob);
      CLEAR(HttpWebRequestMgtQuote);
      CLEAR(RequestText);
      CLEAR(ResponseInStrm);

      IWXLicensePlateHeader.CALCFIELDS("Source No.");
      IWXLicensePlateHeader.SETRANGE("Source No.",SourceNo);
      QuoteRequest.GetSourceDocument(SourceNo,'(909044313,3840,0)');
      QuoteRequest.SETTABLEVIEW(IWXLicensePlateHeader);
      TempBlob.INIT;
      TempBlob.Blob.CREATEOUTSTREAM(OutStrm);
      QuoteRequest.SETDESTINATION(OutStrm);
      QuoteRequest.EXPORT;
      TempBlob.Blob.CREATEINSTREAM(Instrm);
      Streamreader := Streamreader.StreamReader(Instrm);
      RequestText := Streamreader.ReadToEnd;
      RequestText := COPYSTR(RequestText,57,STRLEN(RequestText)-56);
      HttpWebRequestMgtQuote.Initialize(DSHIPFreightIntegProvider."API URL");
      HttpWebRequestMgtQuote.DisableUI();
      HttpWebRequestMgtQuote.SetMethod('POST');
      MESSAGE('Request\ %1',RequestText);
      HttpWebRequestMgtQuote.AddBodyAsText(RequestText);
      TempBlob.INIT;
      TempBlob.Blob.CREATEINSTREAM(ResponseInStrm);
      IF HttpWebRequestMgtQuote.GetResponse(ResponseInStrm,HttpStatusCode,ResponseHeaders) THEN BEGIN
          //ResponseInStrm.READ(ResponseText);
          //MESSAGE('Response\%1',ResponseText);
          CLEAR(XMLDocQ);
          XMLDocQ := XMLDocQ.XmlDocument();
          XMLDOMManagement.LoadXMLDocumentFromInStream(ResponseInStrm,XMLDocQ);

          XMLNodeListRef := XMLDocQ.SelectNodes('//ReferenceNumber');
          {XMLNodeRef := XMLDocq.SelectSingleNode('//ReferenceNumbers');
          XMLNodeListRef := XMLNodeRef.ChildNodes;
          NodeCountRef := XMLNodeListRef.Count;
          FOR i := 0 TO (NodeCountRef - 1) DO BEGIN
            XMLNodeValue := XMLNodeListRef.ItemOf(i).SelectSingleNode('ReferenceNumber');
            MESSAGE(XMLNodeValue.InnerText);
            QuoteResponseValues[i+1] := XMLNodeValue.InnerText;
          END;}
          FOREACH XMLNodeValue IN XMLNodeListRef DO BEGIN
            NodeCountRef += 1;
            QuoteResponseValues[NodeCountRef] := XMLNodeValue.InnerText;
            //MESSAGE(XMLNodeValue.InnerText);
          END;

          UnishipperQuoteResponse.SetValues(QuoteResponseValues[1],QuoteResponseValues[2],QuoteResponseValues[3],QuoteResponseValues[4],QuoteResponseValues[5]);
          UnishipperQuoteResponse.RUNMODAL;
      END;
      END;
      }//Quot Request END
      {
      EXIT;


      FOREACH XmlNode IN XMLCurrNode.ChildNodes DO BEGIN
        CarrierNode := XmlNode.SelectSingleNode('CarrierName');
        //ChargesNode := XMLNode.SelectSingleNode('Charges');

        //FOREACH ChargesNode IN XMLNode.SelectNodes('//Rate') DO BEGIN

        //FOREACH PriceSheet IN XmlNode.ChildNodes DO BEGIN
       // ERROR(XmlNode.InnerText);
        //FOREACH ChargesNode IN XmlNode.ChildNodes DO BEGIN
          //FOREACH ChargeNode IN XmlNode.ChildNodes DO BEGIN
          //FOREACH ChargeNode IN XMLNode.ChildNodes DO BEGIN
          //FOREACH ChargesNode IN PriceSheet.ChildNodes DO BEGIN
              //RateNode := ChargesNode.SelectSingleNode('Rate');
              //AmountNode := ChargesNode.SelectSingleNode('Amount');
              //MESSAGE(CarrierNode.InnerText+'   '+RateNode.InnerText+'  '+AmountNode.InnerText);
              //MESSAGE(ChargesNode.InnerText);
            //FOREACH ChargeNode IN ChargesNode.ChildNodes DO BEGIN
              //ERROR(ChargeNode.InnerText);
              //XMLDOMNamedNodeMap := ChargeNode.Attributes;
              //AttributeNode := XMLDOMNamedNodeMap.GetNamedItem('Type');
              //ERROR(AttributeNode.InnerText);
              //RateNode := ChargeNode.SelectSingleNode('Rate');
              //AmountNode := ChargeNode.SelectSingleNode('Amount');
              //MESSAGE(CarrierNode.InnerText+'   '+RateNode.InnerText+'  '+AmountNode.InnerText);
              MESSAGE(CarrierNode.InnerText+'   '+ChargeNode.InnerText+'  '+ChargeNode.InnerText);
              //MESSAGE('r');
            //END;
          //END;
        //END;
      END;

      EXIT;
      FOR Counter := 0 TO (NodeCount - 1) DO BEGIN
        CarrierNode := XmlNode.SelectSingleNode('BatchExternalId');
        XMLCurrNode := XMLDOMNodeList.Item(Counter);
        MESSAGE(XMLCurrNode.InnerText);
        //XMLDoc.AppendChild(XMLDoc.ImportNode(XMLCurrNode,TRUE));
      END;
      EXIT;
       //ERROR(FORMAT(XMLBuffer.COUNT));
      // XMLBuffer.FindNodesByXPath(XMLBuffer,'/responses/response/RateResults/PriceSheets/PriceSheet');
      // XMLBuffer.FindChildElements(XMLBuffer);

      // EXIT;
       Doc := Doc.XmlDocument();
      Doc.Load(ResponseInStrm);
      //ParentNode := Doc.SelectSingleNode('PriceSheets');
      NodeList := Doc.SelectNodes('PriceSheet');
      FOR i := 1 TO NodeList.Count DO BEGIN

       ChildNode := NodeList.Item(i-1);

       MESSAGE('%1',ChildNode.Value);

      END;
      // NodeList ... String1, String2, DataChild, DataChild
      {
      FOR i := 0 TO NodeList.Count -1 DO BEGIN
        ChildNode := NodeList.ItemOf(i);
        CASE ChildNode.Name OF
          'PriceSheet':
            BEGIN
              ChildNodeList := ChildNode.ChildNodes();
              FOR j := 0 TO ChildNodeList.Count - 1 DO BEGIN
                ChildNode := ChildNodeList.ItemOf(j);
                MESSAGE('I''''m a DataChild Node Name: %1 InnerText: %2',ChildNode.Name,ChildNode.InnerText);
              END;
            END;
        END;
      END;
       }
         RateResponse.SETSOURCE(ResponseInStrm);
         IF RateResponse.IMPORT THEN BEGIN
           MESSAGE('test');
           RateResponse.SetCariierRateBuffer(ltrecRateBuffer);
         END;
      END;
      //END;

      //MESSAGE('%1',ResponseError);
      }
    END;

    PROCEDURE CreateQuoteRequest@1000000001(SourceNo@1000000000 : Code[20];VAR ltrecRateBuffer@1000000006 : TEMPORARY Record 23044603);
    VAR
      instrm@1000000002 : InStream;
      TestRequestText@1000000003 : Text;
      IWXLicensePlateHeader@1000000004 : Record 23044505;
      QuoteRequestXmlPort@1000000001 : XMLport 50088;
    BEGIN
      CLEAR(OutStrm);
      CLEAR(TempBlob);
      IWXLicensePlateHeader.CALCFIELDS("Source No.");
      IWXLicensePlateHeader.SETRANGE("Source No.",SourceNo);
      QuoteRequestXmlPort.SETTABLEVIEW(IWXLicensePlateHeader);
      TempBlob.INIT;
      TempBlob.Blob.CREATEOUTSTREAM(OutStrm);
      QuoteRequestXmlPort.SETDESTINATION(OutStrm);
      QuoteRequestXmlPort.EXPORT;
      TempBlob.Blob.CREATEINSTREAM(instrm);
      Streamreader := Streamreader.StreamReader(instrm);
      RequestText := Streamreader.ReadToEnd;
      RequestText := COPYSTR(RequestText,57,STRLEN(RequestText)-56);
      //RequestText := USPSSetup.URL+RequestText;
      PostQuotetRequest(SourceNo,RequestText,ltrecRateBuffer);
    END;

    LOCAL PROCEDURE PostQuotetRequest@1000000003(VAR SourceNo@1000000007 : Code[20];VAR RequestTextP@1000000008 : Text;VAR ltrecRateBuffer@1000000011 : TEMPORARY Record 23044603);
    VAR
      ResponseInStrm@1000000000 : InStream;
      HttpStatusCode@1000000002 : DotNet "'System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Net.HttpStatusCode";
      ResponseHeaders@1000000003 : DotNet "'System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Specialized.NameValueCollection";
      WebRequestHelper@1000000004 : Codeunit 1299;
      WebException@1000000005 : DotNet "'System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Net.WebException";
      Instrm@1000000006 : InStream;
      USPSAddressRecords2@1000000001 : Record 50057;
      ImportUSPSErrorResponse@1000000009 : XMLport 50078;
      DSHIPFreightIntegProvider@1000000010 : Record 23044624;
      RateResponse@1000000012 : XMLport 50081;
      ResponseBodyXMLDoc@1000000015 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      ResponseBodyXmlNode@1000000014 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XmlNode@1000000013 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      Doc@1000000016 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      ParentNode@1000000017 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ChildNode@1000000018 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NodeList@1000000019 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeList";
      ChildNodeList@1000000020 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeList";
      i@1000000021 : Integer;
      j@1000000022 : Integer;
      XMLBuffer@1000000023 : Record 1235;
      XMLBuffer1@1000000024 : TEMPORARY Record 1235;
      XMLCurrNode@1000000025 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLDoc@1000000027 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      XMLDOMNodeList@1000000026 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeList";
      NodeCount@1000000028 : Integer;
      Counter@1000000029 : Integer;
      XMLDOMManagement@1000000030 : Codeunit 6224;
      CarrierNode@1000000032 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      RateNode@1000000031 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ChargeNode@1000000033 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      AmountNode@1000000034 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLDOMNamedNodeMap@1000000035 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNamedNodeMap";
      AttributeNode@1000000036 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ChargesNode@1000000037 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      PriceSheetNode@1000000038 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ChargeXMLNodeList@1000000039 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeList";
      ServiceNode@1000000040 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      CarrierIDNode@1000000041 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ServiceDaysNode@1000000042 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF GUIALLOWED THEN
        ProgressWindow.OPEN(Text50001);
      COMMIT;
      CLEAR(Instrm);
      //CLEAR(ResponseInStrm);
      CLEAR(HttpWebRequestMgt);
      CLEAR(ImportUSPSAddressResponse);
      DSHIPFreightIntegProvider.SETRANGE(Code,'EXTERNAL');
      DSHIPFreightIntegProvider.FINDFIRST;
      //HttpWebRequestMgt.Initialize(USPSSetup.URL);
      HttpWebRequestMgt.Initialize(DSHIPFreightIntegProvider."API URL");
      HttpWebRequestMgt.DisableUI();
      HttpWebRequestMgt.SetMethod('POST');
      //MESSAGE('Request\ %1',RequestTextP);
      HttpWebRequestMgt.AddBodyAsText(RequestTextP);
      TempBlob.INIT;
      TempBlob.Blob.CREATEINSTREAM(ResponseInStrm);
      IF HttpWebRequestMgt.GetResponse(ResponseInStrm,HttpStatusCode,ResponseHeaders) THEN BEGIN
          //ResponseInStrm.READ(ResponseText);
          //MESSAGE('Response\%1',ResponseText);
          //XMLPORT.IMPORT(XMLPORT::"Import USPS Address Response",ResponseInStrm);
         //IF (XMLPORT.IMPORT(XMLPORT::"Import USPS Address Response",ResponseInStrm)) THEN BEGIN
         //EXIT;
       {XMLBuffer.LoadFromStream(ResponseInStrm);
       IF XMLBuffer.FINDSET THEN
         REPEAT
           XMLBuffer1 := XMLBuffer;
           XMLBuffer1.INSERT;
         UNTIL XMLBuffer.NEXT=0;}
      CLEAR(XMLDoc);
      XMLDoc := XMLDoc.XmlDocument();
      XMLDOMManagement.LoadXMLDocumentFromInStream(ResponseInStrm,XMLDoc);
      //XMLDoc.LoadXml(ResponseText);
      //XMLDoc.Save('U:\Lanham\xmlres.xml');
      XMLCurrNode := XMLDoc.SelectSingleNode('//PriceSheets');
      XMLDOMNodeList := XMLCurrNode.ChildNodes;
      NodeCount := XMLDOMNodeList.Count;

      //XMLNodeList1 := XmlDoc.SelectNodes('//Body/Cube');
      //XmlNodeList.ItemOf(I - 1).InnerText
      FOR i := 0 TO (NodeCount - 1) DO BEGIN
        CarrierNode := XMLDOMNodeList.ItemOf(i).SelectSingleNode('CarrierName');
        ServiceNode :=   XMLDOMNodeList.ItemOf(i).SelectSingleNode('Service');
        CarrierIDNode := XMLDOMNodeList.ItemOf(i).SelectSingleNode('CarrierId');
        ChargeNode := XMLDOMNodeList.ItemOf(i).SelectSingleNode('Charges');
        ServiceDaysNode := XMLDOMNodeList.ItemOf(i).SelectSingleNode('ServiceDays');
        ChargeXMLNodeList := ChargeNode.ChildNodes;
        FOR j := 0 TO (ChargeXMLNodeList.Count - 1) DO BEGIN
          ChildNode := ChargeXMLNodeList.ItemOf(j).SelectSingleNode('@type');
          RateNode := ChargeXMLNodeList.ItemOf(j).SelectSingleNode('Rate');
          AmountNode := ChargeXMLNodeList.ItemOf(j).SelectSingleNode('Amount');
          IF ChildNode.InnerText = 'ITEM' THEN BEGIN
            //MESSAGE('Line no is %1..carrier name %2.. Line 2 no %3  Rate %4',i,PriceSheetNode.InnerText, j ,RateNode.InnerText);
            ltrecRateBuffer.INIT;
            ltrecRateBuffer.ID := 'extGeneric'+FORMAT(i);
            ltrecRateBuffer."Carrier Name" := CarrierNode.InnerText;
            //ltrecRateBuffer.Service := ServiceNode.InnerText;
            ltrecRateBuffer.Service := 'Ground';
            ltrecRateBuffer."Carrier Account ID" := CarrierIDNode.InnerText;
            EVALUATE(ltrecRateBuffer."Rate Price" , RateNode.InnerText);
            EVALUATE(ltrecRateBuffer."Rate Cost" , AmountNode.InnerText);
            EVALUATE(ltrecRateBuffer."Delivery Days" ,ServiceDaysNode.InnerText);
            ltrecRateBuffer.Currency := 'USD';
            ltrecRateBuffer.INSERT;
          END;
        END;
          //MESSAGE('Line no is %1.. %2',i,PriceSheetNode.InnerText);
      END;
      ProgressWindow.CLOSE;
      EXIT;
      FOREACH XmlNode IN XMLCurrNode.ChildNodes DO BEGIN
        CarrierNode := XmlNode.SelectSingleNode('CarrierName');
        //ChargesNode := XMLNode.SelectSingleNode('Charges');

        //FOREACH ChargesNode IN XMLNode.SelectNodes('//Rate') DO BEGIN

        //FOREACH PriceSheet IN XmlNode.ChildNodes DO BEGIN
       // ERROR(XmlNode.InnerText);
        //FOREACH ChargesNode IN XmlNode.ChildNodes DO BEGIN
          //FOREACH ChargeNode IN XmlNode.ChildNodes DO BEGIN
          //FOREACH ChargeNode IN XMLNode.ChildNodes DO BEGIN
          //FOREACH ChargesNode IN PriceSheet.ChildNodes DO BEGIN
              //RateNode := ChargesNode.SelectSingleNode('Rate');
              //AmountNode := ChargesNode.SelectSingleNode('Amount');
              //MESSAGE(CarrierNode.InnerText+'   '+RateNode.InnerText+'  '+AmountNode.InnerText);
              //MESSAGE(ChargesNode.InnerText);
            //FOREACH ChargeNode IN ChargesNode.ChildNodes DO BEGIN
              //ERROR(ChargeNode.InnerText);
              //XMLDOMNamedNodeMap := ChargeNode.Attributes;
              //AttributeNode := XMLDOMNamedNodeMap.GetNamedItem('Type');
              //ERROR(AttributeNode.InnerText);
              //RateNode := ChargeNode.SelectSingleNode('Rate');
              //AmountNode := ChargeNode.SelectSingleNode('Amount');
              //MESSAGE(CarrierNode.InnerText+'   '+RateNode.InnerText+'  '+AmountNode.InnerText);
              MESSAGE(CarrierNode.InnerText+'   '+ChargeNode.InnerText+'  '+ChargeNode.InnerText);
              //MESSAGE('r');
            //END;
          //END;
        //END;
      END;

      EXIT;
      FOR Counter := 0 TO (NodeCount - 1) DO BEGIN
        CarrierNode := XmlNode.SelectSingleNode('BatchExternalId');
        XMLCurrNode := XMLDOMNodeList.Item(Counter);
        MESSAGE(XMLCurrNode.InnerText);
        //XMLDoc.AppendChild(XMLDoc.ImportNode(XMLCurrNode,TRUE));
      END;
      EXIT;
       //ERROR(FORMAT(XMLBuffer.COUNT));
      // XMLBuffer.FindNodesByXPath(XMLBuffer,'/responses/response/RateResults/PriceSheets/PriceSheet');
      // XMLBuffer.FindChildElements(XMLBuffer);

      // EXIT;
       Doc := Doc.XmlDocument();
      Doc.Load(ResponseInStrm);
      //ParentNode := Doc.SelectSingleNode('PriceSheets');
      NodeList := Doc.SelectNodes('PriceSheet');
      FOR i := 1 TO NodeList.Count DO BEGIN

       ChildNode := NodeList.Item(i-1);

       MESSAGE('%1',ChildNode.Value);

      END;
      // NodeList ... String1, String2, DataChild, DataChild
      {
      FOR i := 0 TO NodeList.Count -1 DO BEGIN
        ChildNode := NodeList.ItemOf(i);
        CASE ChildNode.Name OF
          'PriceSheet':
            BEGIN
              ChildNodeList := ChildNode.ChildNodes();
              FOR j := 0 TO ChildNodeList.Count - 1 DO BEGIN
                ChildNode := ChildNodeList.ItemOf(j);
                MESSAGE('I''''m a DataChild Node Name: %1 InnerText: %2',ChildNode.Name,ChildNode.InnerText);
              END;
            END;
        END;
      END;
       }
         RateResponse.SETSOURCE(ResponseInStrm);
         IF RateResponse.IMPORT THEN BEGIN
           MESSAGE('test');
           RateResponse.SetCariierRateBuffer(ltrecRateBuffer);
         END;
      END;
      //END;

      //MESSAGE('%1',ResponseError);
    END;

    EVENT XMLDocument@1000000007::NodeInserting@94(sender@1000000001 : Variant;e@1000000000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT XMLDocument@1000000007::NodeInserted@95(sender@1000000001 : Variant;e@1000000000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT XMLDocument@1000000007::NodeRemoving@96(sender@1000000001 : Variant;e@1000000000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT XMLDocument@1000000007::NodeRemoved@97(sender@1000000001 : Variant;e@1000000000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT XMLDocument@1000000007::NodeChanging@98(sender@1000000001 : Variant;e@1000000000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT XMLDocument@1000000007::NodeChanged@99(sender@1000000001 : Variant;e@1000000000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT XMLDocQ@1000000024::NodeInserting@94(sender@1000000001 : Variant;e@1000000000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT XMLDocQ@1000000024::NodeInserted@95(sender@1000000001 : Variant;e@1000000000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT XMLDocQ@1000000024::NodeRemoving@96(sender@1000000001 : Variant;e@1000000000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT XMLDocQ@1000000024::NodeRemoved@97(sender@1000000001 : Variant;e@1000000000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT XMLDocQ@1000000024::NodeChanging@98(sender@1000000001 : Variant;e@1000000000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT XMLDocQ@1000000024::NodeChanged@99(sender@1000000001 : Variant;e@1000000000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    BEGIN
    END.
  }
}

