OBJECT Codeunit 50040 Table900EventSubscriber
{
  OBJECT-PROPERTIES
  {
    Date=11/05/20;
    Time=11:38:39 AM;
    Modified=Yes;
    Version List=NAVEVENT;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [EventSubscriber(Codeunit,51939,Tb900_UnitofMeasureCode_OnValidate)]
    PROCEDURE Tb900_UnitofMeasureCode_OnValidate@1000000000(VAR Sender@1000000000 : Codeunit 51939;VAR Rec@1000000001 : Record 900;VAR xRec@1000000002 : Record 900);
    VAR
      UOMMgt@1000000003 : Codeunit 5402;
      Item@1000000004 : Record 27;
    BEGIN
      WITH Rec DO BEGIN
        Item.GET("Item No.");
        //TOP050 KT ABCSI Modification to Item Cards 01232015
        "Qty. per Alt. UOM" := UOMMgt.GetQtyPerUnitOfMeasure(Item,"Alt. UOM Code");

        IF "Alt. UOM Code" <> '' THEN
          "Alt. UOM Unit Cost" := CalcAltUOMUnitCost(Rec,"Unit Cost");
        //TOP050 KT ABCSI Modification to Item Cards 01232015
      END;
    END;

    [EventSubscriber(Table,900,OnAfterValidateEvent,"Unit cost")]
    PROCEDURE Tb900_UnitCost_OnValidate@1000000005(VAR Rec@1000000000 : Record 900;VAR xRec@1000000001 : Record 900;CurrFieldNo@1000000002 : Integer);
    VAR
      UOMMgt@1000000003 : Codeunit 5402;
      Item@1000000004 : Record 27;
    BEGIN
      //TOP050 KT ABCSI Modification to Item Cards 01212015
      IF Rec."Alt. UOM Code" <> '' THEN
        Rec."Alt. UOM Unit Cost" := CalcAltUOMUnitCost(Rec,Rec."Unit Cost");
      //TOP050 KT ABCSI Modification to Item Cards 01212015
      Rec."Cost Amount" := ROUND(Rec.Quantity * Rec."Unit Cost");
    END;

    [EventSubscriber(Table,900,OnAfterValidateEvent,quantity)]
    PROCEDURE Tb900_Quantity_OnValidate@1000000007(VAR Rec@1000000000 : Record 900;VAR xRec@1000000001 : Record 900;CurrFieldNo@1000000002 : Integer);
    VAR
      UOMMgt@1000000003 : Codeunit 5402;
      Item@1000000004 : Record 27;
    BEGIN
      WITH Rec DO BEGIN
        IF Rec."Alt. UOM Code" <> '' THEN BEGIN
          IF "Qty. per Alt. UOM" <> 0 THEN BEGIN
            IF "Qty. per Alt. UOM" <> "Qty. per Unit of Measure" THEN BEGIN
              IF "Qty. per Alt. UOM" > "Qty. per Unit of Measure" THEN
                Rec."Alt. UOM Quantity" := ROUND(Quantity / "Qty. per Alt. UOM",0.00001)
              ELSE
                Rec."Alt. UOM Quantity" := ROUND(Quantity * "Qty. per Unit of Measure",0.00001);
            END ELSE
              Rec."Alt. UOM Quantity" := Quantity;
          END ELSE
            Rec."Alt. UOM Quantity" := 0;
        END;
        //TOP050 KT ABCSI Modification to Item Cards 01212015
      END;
    END;

    [EventSubscriber(Table,900,OnBeforeValidateEvent,"item no.")]
    PROCEDURE Tb900_ItemNo_OnValidate@1000000010(VAR Rec@1000000000 : Record 900;VAR xRec@1000000001 : Record 900;CurrFieldNo@1000000002 : Integer);
    VAR
      UOMMgt@1000000003 : Codeunit 5402;
      Item@1000000004 : Record 27;
    BEGIN
      WITH Rec DO BEGIN
        CALCFIELDS("Assemble to Order");
        TESTFIELD("Assemble to Order",FALSE);
        IF "Item No." <> '' THEN BEGIN
          //TOP050 KT ABCSI Modification to Item Cards 01202015
          VALIDATE("Alt. UOM Code",Item."Alt. Base Unit of Measure");
          "Alt. UOM Unit Cost" := CalcAltUOMUnitCost(Rec,"Unit Cost");
          //TOP050 KT ABCSI Modification to Item Cards 01212015
        END;
      END;
    END;

    PROCEDURE "****ABCSI Functions****"@1000000006();
    BEGIN
    END;

    PROCEDURE CalcAltUOMQty@1000000001(AssemblyHeader@1000000000 : Record 900;Qty@14000700 : Decimal) : Decimal;
    BEGIN
      //TOP050 KT ABCSI Modification to Item Cards 01212015
      WITH AssemblyHeader DO BEGIN
        IF "Qty. per Alt. UOM" <> 0 THEN BEGIN
          IF "Qty. per Alt. UOM" <> "Qty. per Unit of Measure" THEN BEGIN
            IF "Qty. per Alt. UOM" > "Qty. per Unit of Measure" THEN
              EXIT(ROUND(Qty / "Qty. per Alt. UOM",0.00001))
            ELSE
              EXIT(ROUND(Qty * "Qty. per Unit of Measure",0.00001));
          END ELSE
            EXIT(Qty);
        END ELSE
          EXIT(0);
      END;
      //TOP050 KT ABCSI Modification to Item Cards 01212015
    END;

    PROCEDURE CalcQtyFromAltUOMQty@1000000004(AssemblyHeader@1000000000 : Record 900;Qty@1000000001 : Decimal) : Decimal;
    BEGIN
      //TOP050 KT ABCSI Modification to Item Cards 01212015
      WITH AssemblyHeader DO BEGIN
        IF "Qty. per Alt. UOM" <> 0 THEN BEGIN
          IF "Qty. per Alt. UOM" <> "Qty. per Unit of Measure" THEN BEGIN
            IF "Qty. per Alt. UOM" > "Qty. per Unit of Measure" THEN
              EXIT(ROUND(Qty * "Qty. per Alt. UOM",0.00001))
            ELSE
              EXIT(ROUND(Qty / "Qty. per Unit of Measure",0.00001));
          END ELSE
            EXIT(Qty);
        END ELSE
          EXIT(0);
      END;
      //TOP050 KT ABCSI Modification to Item Cards 01212015
    END;

    PROCEDURE CalcAltUOMUnitCost@1000000016(AssemblyHeader@1000000000 : Record 900;LocalUnitCost@1000000001 : Decimal) : Decimal;
    BEGIN
      //TOP050 KT ABCSI Modification to Item Cards 01212015
      WITH AssemblyHeader DO BEGIN
        IF "Qty. per Alt. UOM" <> 0 THEN BEGIN
          IF "Qty. per Alt. UOM" <> "Qty. per Unit of Measure" THEN BEGIN
            IF "Qty. per Alt. UOM" > "Qty. per Unit of Measure" THEN
              EXIT(ROUND(LocalUnitCost * "Qty. per Alt. UOM",0.00001))
            ELSE
              EXIT(ROUND(LocalUnitCost / "Qty. per Unit of Measure",0.00001));
          END ELSE
            EXIT(LocalUnitCost);
        END ELSE
          EXIT(0);
      END;
      //TOP050 KT ABCSI Modification to Item Cards 01212015
    END;

    PROCEDURE CalcUnitCostFromAltUOMUnitCost@1000000017(AssemblyHeader@1000000000 : Record 900;LocalUnitCost@1000000001 : Decimal) : Decimal;
    BEGIN
      //TOP050 KT ABCSI Modification to Item Cards 01212015
      WITH AssemblyHeader DO BEGIN

        IF "Qty. per Alt. UOM" <> 0 THEN BEGIN
          IF "Qty. per Alt. UOM" <> "Qty. per Unit of Measure" THEN BEGIN
            IF "Qty. per Alt. UOM" > "Qty. per Unit of Measure" THEN
              EXIT(ROUND(LocalUnitCost / "Qty. per Alt. UOM",0.00001))
            ELSE
              EXIT(ROUND(LocalUnitCost / "Qty. per Unit of Measure",0.00001));
          END ELSE
            EXIT(LocalUnitCost);
        END ELSE
          EXIT(0);
      END;
      //TOP050 KT ABCSI Modification to Item Cards 01212015
    END;

    BEGIN
    {
      20200228  NTR_PS  Created new object
    }
    END.
  }
}

