OBJECT Codeunit 14002408 Sales Document Change
{
  OBJECT-PROPERTIES
  {
    Date=09/24/20;
    Time=11:01:19 AM;
    Modified=Yes;
    Version List=SE0.62;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      EDIRecDocField@1240030000 : Record 14002359;
      EDITemplate@1240020000 : Record 14002350;
      OrderStatusHdr@1240020001 : Record 14002400;
      QuoteHdr@1240020013 : Record 36;
      EDIDocumentNo@1240030002 : Code[30];
      TransSetPurposeCode@1240030003 : Code[10];
      ChangeDate@1240030001 : Date;
      HdrUpdate@1000000000 : Boolean;
      DeleteItem@1000000001 : Boolean;
      LastQty@1240020002 : Decimal;
      LineShipmentDate@1240020005 : Date;
      LineRequestedDeliveryDate@1240020004 : Date;
      QtyFound@1240020003 : Boolean;
      SingleDocument@1240020006 : Boolean;
      OrderFound@1240020007 : Boolean;
      SDQFound@1240020009 : Boolean;
      ShipToFound@1240020008 : Boolean;
      DiscountUnitPrice@1240020010 : Decimal;
      LastUnitPrice@1240020011 : Decimal;
      UnitPriceFound@1240020012 : Boolean;
      MultiplierFound@1240020014 : Boolean;
      QuoteRequest@1240020015 : Boolean;
      ProcessChange@1240020019 : Boolean;
      TotalOrderCount@1240020018 : Integer;
      ReleasedNotProcessed@1240020017 : Integer;
      ExternalDocNo@1240020016 : Code[50];
      OrderChangeStatusReq@1240020020 : Boolean;
      DocumentType@1240020021 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order';
      OrderFindError@1240020022 : Boolean;
      OrderFindErrorCount@1240020023 : Integer;
      CancelReleasedOrderUpdate@1240020024 : Boolean;

    PROCEDURE ProcessSingleDocument@1240020002(QuoteHeader@1240020004 : Record 36;SingleDoc@1240020000 : Boolean;InternalDocNo@1240020001 : Code[10]);
    VAR
      EDIRecDocHdr@1240020002 : Record 14002358;
      EDIDocument@1240020003 : Record 14002353;
      Text001@1240020006 : TextConst 'ENU=P.O. change has been processed.';
    BEGIN
      SingleDocument := SingleDoc;
      EDIRecDocHdr.GET(InternalDocNo);
      QuoteHdr.COPY(QuoteHeader);

      WITH EDIRecDocHdr DO
        EDIDocument.GET(
          "Trade Partner No.","Navision Document","EDI Document No.","EDI Version",
          EDIDocument.Type::Import);
      EvaluateChange(EDIRecDocHdr,EDIDocument);
      IF (QuoteRequest = FALSE) AND (ProcessChange) THEN
        MESSAGE(Text001);
    END;

    PROCEDURE EvaluateChange@1240030000(CurrEDIRecDocHeader@1240030000 : Record 14002358;EDIDocument@1240030015 : Record 14002353) Resp : Boolean;
    VAR
      EDIRecDocHeader@1240030001 : Record 14002358;
      OrderHeader@1240020005 : Record 36;
      QuoteHeader@1240030002 : Record 36;
      Text010@1000000000 : TextConst 'ENU=Change previously processed.\';
      Text011@1000000001 : TextConst 'ENU=Do you want to process again?';
      Text012@1000000002 : TextConst 'ENU=Update aborted.';
      Text013@1240030020 : TextConst 'ENU=Sales Quote with EDI Internal Doc. No. %1 was not found.\ Update cannot be processed.';
      Text014@1240020002 : TextConst 'ENU=Quote %1 was previously processed.\';
      Text015@1240020003 : TextConst 'ENU=Processing a P.O. Change request for a released sales order is not enabled. %1 P.O. Change request for a released sales order with P.O. No. %2  have been received.\';
      Text016@1240020004 : TextConst 'ENU=Processing a P.O. Change request for a released sales order is not enabled. P.O. change for quote %1 cannot be processed.';
      Text017@1240020000 : TextConst 'ENU=Sales order not found for %1 P.O. change request with P.O. No. %2.\';
      Text018@1240020001 : TextConst 'ENU=%1  out of %2 change request have not been processed.';
      TotalNotProcessed@1240020007 : Integer;
      DeleteQuote@1240020006 : Boolean;
    BEGIN
      ExternalDocNo := '';
      ReleasedNotProcessed := 0;
      TotalOrderCount := 0;
      OrderFindErrorCount := 0;

      EDIRecDocHeader.GET(CurrEDIRecDocHeader."Internal Doc. No.");
      EDIRecDocHeader."Data Error" := TRUE;
      EDIRecDocHeader."PO Change Error" := TRUE;
      EDIRecDocHeader."Document Processed" := FALSE;
      EDIRecDocHeader.MODIFY;
      COMMIT;

      CASE TRUE OF
        SingleDocument AND QuoteRequest:
          BEGIN
            IF QuoteHdr."EDI Quote Change Processed" THEN
              IF GUIALLOWED THEN BEGIN
                IF NOT CONFIRM(
                  STRSUBSTNO(Text014,QuoteHdr."No.") +
                    Text011)
                THEN
                  ERROR(Text012)
              END ELSE
                ERROR(Text012);
          END;
        ELSE BEGIN
          IF EDIRecDocHeader."PO Change Updated" THEN
            IF GUIALLOWED THEN BEGIN
              IF NOT CONFIRM(
                Text010 +
                Text011)
              THEN
                ERROR(Text012);
            END ELSE
              ERROR(Text012);
        END;
      END;

      EDIDocumentNo := EDIRecDocHeader."EDI Document No.";
      TransSetPurposeCode := EDIRecDocHeader."PO Change Purpose Code";

      WITH EDIRecDocHeader DO BEGIN
        EDIDocument.GET(
          "Trade Partner No.","Navision Document","EDI Document No.","EDI Version",
          EDIDocument.Type::Import);
        CancelReleasedOrderUpdate := "Cancel Released Order Update";
      END;

      EDITemplate.GET(EDIRecDocHeader."EDI Template Code");
      OrderChangeStatusReq := EDITemplate."PO Change Generates Change Ack";

      EDIRecDocField.RESET;
      EDIRecDocField.SETCURRENTKEY("Internal Doc. No.","Field Name");
      EDIRecDocField.SETRANGE("Internal Doc. No.",EDIRecDocHeader."Internal Doc. No.");
      EDIRecDocField.SETRANGE("Field Name",'SDQ SHIP TO');
      IF EDIRecDocField.FIND('-') THEN
        SDQFound := TRUE
      ELSE
        SDQFound := FALSE;

      EDIRecDocField.RESET;
      EDIRecDocField.SETCURRENTKEY("Internal Doc. No.","NAV Table No.","Nav Field No.");
      EDIRecDocField.SETRANGE("Internal Doc. No.",EDIRecDocHeader."Internal Doc. No.");
      EDIRecDocField.SETRANGE("NAV Table No.",DATABASE::"Sales Header");
      EDIRecDocField.SETRANGE("Nav Field No.",OrderHeader.FIELDNO("Ship-to Code"));
      IF EDIRecDocField.FIND('-') THEN
        ShipToFound := TRUE
      ELSE
        ShipToFound := FALSE;

      MultiplierFound := FALSE;
      GetMultiplier(EDIRecDocHeader);

      IF QuoteRequest THEN
        DocumentType := DocumentType::Quote
      ELSE
        DocumentType := DocumentType::Order;

      QuoteHeader.RESET;
      QuoteHeader.SETCURRENTKEY("EDI Order","EDI Trade Partner","EDI Internal Doc. No.");
      QuoteHeader.SETRANGE("EDI Order",TRUE);
      QuoteHeader.SETRANGE("EDI Internal Doc. No.",CurrEDIRecDocHeader."Internal Doc. No.");
      QuoteHeader.SETRANGE("Document Type",QuoteHeader."Document Type"::Quote);
      IF SingleDocument THEN
        QuoteHeader.SETRANGE("No.",QuoteHdr."No.");
      IF QuoteHeader.FIND('-') THEN BEGIN
        ExternalDocNo := QuoteHeader."External Document No.";
        HdrUpdate := FALSE;
        REPEAT
          TotalOrderCount := TotalOrderCount + 1;
          GetOrder(QuoteHeader,EDIRecDocHeader,EDIDocument);
        UNTIL QuoteHeader.NEXT = 0;
      END ELSE
        ERROR(Text013,EDIRecDocHeader."Internal Doc. No.");

      TotalNotProcessed := ReleasedNotProcessed + OrderFindErrorCount;
      CASE TRUE OF
        (ReleasedNotProcessed > 0) AND (OrderFindErrorCount > 0):
          BEGIN
            IF GUIALLOWED THEN
              COMMIT;
            ERROR(
              STRSUBSTNO(Text015,ReleasedNotProcessed,ExternalDocNo) +
              STRSUBSTNO(Text017,OrderFindErrorCount,ExternalDocNo) +
              STRSUBSTNO(Text018,TotalNotProcessed,TotalOrderCount))
          END;
        ReleasedNotProcessed > 0:
          BEGIN
            IF GUIALLOWED THEN
              COMMIT;
            IF SingleDocument THEN
              ERROR(Text016,QuoteHeader."No.")
            ELSE
              ERROR(
                STRSUBSTNO(Text015,ReleasedNotProcessed,ExternalDocNo) +
                STRSUBSTNO(Text018,ReleasedNotProcessed,TotalOrderCount));
          END;
        OrderFindErrorCount > 0:
          BEGIN
            IF GUIALLOWED THEN
              COMMIT;
            ERROR(
              STRSUBSTNO(Text017,OrderFindErrorCount,ExternalDocNo) +
              STRSUBSTNO(Text018,TotalNotProcessed,TotalOrderCount))
          END;
      END;

      IF TotalNotProcessed = 0 THEN BEGIN
        EDIRecDocHeader.GET(CurrEDIRecDocHeader."Internal Doc. No.");
        EDIRecDocHeader."Data Error" := FALSE;
        EDIRecDocHeader."PO Change Error" := FALSE;
        EDIRecDocHeader."PO Change Updated" := TRUE;
        EDIRecDocHeader."PO Change Updated Date" := TODAY;
        EDIRecDocHeader."PO Change Updated Time" := TIME;
        EDIRecDocHeader."Evaluate PO Change" := FALSE;
        EDIRecDocHeader."Document Processed" := TRUE;
        EDIRecDocHeader.MODIFY;
      END;

      DeleteQuote := EDIDocument."Delete Quote After Change";
      IF (GUIALLOWED) AND ((OrderFindErrorCount > 0) OR (ReleasedNotProcessed > 0)) THEN
        DeleteQuote := FALSE;
      IF DeleteQuote THEN BEGIN
        IF SingleDocument THEN
          QuoteHeader.DELETE(TRUE)
        ELSE BEGIN
          QuoteHeader.RESET;
          QuoteHeader.SETCURRENTKEY("EDI Order","EDI Trade Partner","EDI Internal Doc. No.");
          QuoteHeader.SETRANGE("EDI Order",TRUE);
          QuoteHeader.SETRANGE("EDI Internal Doc. No.",CurrEDIRecDocHeader."Internal Doc. No.");
          QuoteHeader.SETRANGE("Document Type",QuoteHeader."Document Type"::Quote);
          QuoteHeader.DELETEALL(TRUE);
        END;
      END;

      COMMIT;

      SingleDocument := FALSE;
      EXIT(TRUE);
    END;

    PROCEDURE UpdateOrderHdr@1240030001(VAR OrderHeader@1240030000 : Record 36;QuoteHeader@1240030001 : Record 36);
    VAR
      ShipmentDate@1240020000 : Date;
      RequestedDeliveryDate@1240020001 : Date;
      EDIExpectedDeliveryDate@1240020002 : Date;
      DocumentDate@1240020003 : Date;
      PromisedDeliveryDate@1240020004 : Date;
      EDICancelAfterDate@1240020005 : Date;
    BEGIN
      IF (TransSetPurposeCode <> '21') AND (TransSetPurposeCode <> '36') THEN BEGIN
        DocumentDate := 0D;
        ShipmentDate := 0D;
        EDICancelAfterDate := 0D;
        EDIExpectedDeliveryDate := 0D;
        PromisedDeliveryDate := 0D;
        RequestedDeliveryDate := 0D;

        EDIRecDocField.RESET;
        EDIRecDocField.SETCURRENTKEY("Internal Doc. No.","NAV Table No.","Nav Field No.");
        EDIRecDocField.SETRANGE("Internal Doc. No.",QuoteHeader."EDI Internal Doc. No.");
        EDIRecDocField.SETRANGE("NAV Table No.",DATABASE::"Sales Header");
        IF EDIRecDocField.FIND('-') THEN
          REPEAT
            CASE EDIRecDocField."Nav Field No." OF
              OrderHeader.FIELDNO("Document Date"):
                DocumentDate := EDIRecDocField."Field Date Value";
              OrderHeader.FIELDNO("Shipment Date"):
                ShipmentDate := EDIRecDocField."Field Date Value";
              OrderHeader.FIELDNO("EDI Cancel After Date"):
                EDICancelAfterDate := EDIRecDocField."Field Date Value";
              OrderHeader.FIELDNO("EDI Expected Delivery Date"):
                EDIExpectedDeliveryDate := EDIRecDocField."Field Date Value";
              OrderHeader.FIELDNO("Promised Delivery Date"):
                PromisedDeliveryDate := EDIRecDocField."Field Date Value";
              OrderHeader.FIELDNO("Requested Delivery Date"):
                RequestedDeliveryDate := EDIRecDocField."Field Date Value";
              OrderHeader.FIELDNO("Shipping Agent Code"):
                IF QuoteHeader."Shipping Agent Code" <> '' THEN
                  OrderHeader.VALIDATE("Shipping Agent Code",QuoteHeader."Shipping Agent Code");
              OrderHeader.FIELDNO("Shipping Agent Service Code"):
                IF QuoteHeader."Shipping Agent Service Code" <> '' THEN
                  OrderHeader.VALIDATE(
                    "Shipping Agent Service Code",QuoteHeader."Shipping Agent Service Code");
              OrderHeader.FIELDNO("E-Ship Agent Service"):
                IF QuoteHeader."E-Ship Agent Service" <> '' THEN
                  OrderHeader.VALIDATE("E-Ship Agent Service",QuoteHeader."E-Ship Agent Service");
              OrderHeader.FIELDNO("Payment Terms Code"):
                IF QuoteHeader."Payment Terms Code" <> '' THEN
                  OrderHeader.VALIDATE("Payment Terms Code",QuoteHeader."Payment Terms Code");
              OrderHeader.FIELDNO("Shipment Method Code"):
                IF QuoteHeader."Shipment Method Code" <> '' THEN
                  OrderHeader.VALIDATE("Shipment Method Code",QuoteHeader."Shipment Method Code");
              OrderHeader.FIELDNO("Shipping Payment Type"):
                OrderHeader.VALIDATE("Shipping Payment Type",QuoteHeader."Shipping Payment Type");
              OrderHeader.FIELDNO("Third Party Ship. Account No."):
                IF QuoteHeader."Third Party Ship. Account No." <> '' THEN
                  OrderHeader.VALIDATE(
                    "Third Party Ship. Account No.",QuoteHeader."Third Party Ship. Account No.");
              OrderHeader.FIELDNO("Campaign No."):
                IF QuoteHeader."Campaign No." <> '' THEN
                  OrderHeader.VALIDATE(
                    "Campaign No.",QuoteHeader."Campaign No.");
            END;
          UNTIL EDIRecDocField.NEXT = 0;

        OrderHeader.SetRunFromEDI(TRUE);
        IF DocumentDate <> 0D THEN
          OrderHeader.VALIDATE("Document Date",DocumentDate);
        IF ShipmentDate <> 0D THEN
          OrderHeader.VALIDATE("Shipment Date",QuoteHeader."Shipment Date");
        IF RequestedDeliveryDate <> 0D THEN
          OrderHeader.VALIDATE("Requested Delivery Date",RequestedDeliveryDate);
        IF PromisedDeliveryDate <> 0D THEN
          OrderHeader.VALIDATE("Promised Delivery Date",PromisedDeliveryDate);
        IF EDIExpectedDeliveryDate <> 0D THEN
          OrderHeader.VALIDATE("EDI Expected Delivery Date",EDIExpectedDeliveryDate);
        IF EDICancelAfterDate <> 0D THEN
          OrderHeader.VALIDATE("EDI Cancel After Date",EDICancelAfterDate);
        IF SDQFound = FALSE AND ShipToFound THEN BEGIN
          IF QuoteHeader."Ship-to Code" <> '' THEN BEGIN
            IF OrderHeader."Ship-to Code" <> QuoteHeader."Ship-to Code" THEN BEGIN
              OrderHeader.VALIDATE("Ship-to Code",QuoteHeader."Ship-to Code");
              OrderHeader.VALIDATE("Ship-for Code",QuoteHeader."Ship-for Code");
              OrderHeader."EDI Ship-for Code" := QuoteHeader."EDI Ship-for Code";
              OrderHeader."EDI Ship-to Code" := QuoteHeader."EDI Ship-to Code";
              OrderHeader."External Ship-to No." := QuoteHeader."External Ship-to No.";
              OrderHeader."External Ship-for No." := QuoteHeader."External Ship-for No.";
            END ELSE BEGIN
              OrderHeader."Ship-to Name" := QuoteHeader."Ship-to Name";
              OrderHeader."Ship-to Address" := QuoteHeader."Ship-to Address";
              OrderHeader."Ship-to Address 2" := QuoteHeader."Ship-to Address 2";
              OrderHeader."Ship-to City" := QuoteHeader."Ship-to City";
              OrderHeader."Ship-to Post Code" := QuoteHeader."Ship-to Post Code";
              OrderHeader."Ship-to County" := QuoteHeader."Ship-to County";
            END;
          END;
        END;
        OrderHeader.VALIDATE("Your Reference",QuoteHeader."Your Reference");
        OrderHeader.MODIFY;
        OrderHeader.SetRunFromEDI(FALSE);
      END;

        //
        // Add additional sales header fields
        //
    END;

    PROCEDURE MapSalesCommentLine@1240020000(EDIRecDocHdr@1240020003 : Record 14002358;VAR OrderHeader@1240020005 : Record 36);
    VAR
      EDIRecDocField@1240020002 : Record 14002359;
      SalesCommentLine@1240020001 : Record 44;
      LineNo@1240020000 : Integer;
      CommentLines@1240020004 : Integer;
    BEGIN
      IF EDIRecDocHdr."PO Change Purpose Code" IN ['05','5','RZ'] THEN BEGIN
        SalesCommentLine.SETRANGE("Document Type",OrderHeader."Document Type");
        SalesCommentLine.SETRANGE("No.",OrderHeader."No.");
        SalesCommentLine.SETRANGE(Code,'EDI');
        IF SalesCommentLine.FIND('-') THEN
          SalesCommentLine.DELETEALL;
      END;

      CommentLines := 0;

      EDIRecDocField.RESET;
      EDIRecDocField.SETCURRENTKEY("Internal Doc. No.","NAV Table No.","Nav Field No.");
      EDIRecDocField.SETRANGE("Internal Doc. No.",EDIRecDocHdr."Internal Doc. No.");
      EDIRecDocField.SETRANGE("NAV Table No.",DATABASE::"Sales Comment Line");
      EDIRecDocField.SETRANGE("Nav Field No.",SalesCommentLine.FIELDNO(Comment));
      EDIRecDocField.SETFILTER("Field Text Value",'<>%1','');
      IF EDIRecDocField.FIND('-') THEN
        REPEAT
          CommentLines := CommentLines + 1;
          IF CommentLines = 1 THEN BEGIN
            SalesCommentLine.RESET;
            SalesCommentLine.SETRANGE("Document Type",OrderHeader."Document Type");
            SalesCommentLine.SETRANGE("No.",OrderHeader."No.");
            IF SalesCommentLine.FIND('+') THEN
              LineNo := SalesCommentLine."Line No." + 10000
            ELSE
              LineNo := 10000;
            SalesCommentLine.INIT;
            SalesCommentLine."Document Type" := OrderHeader."Document Type";
            SalesCommentLine."No." := OrderHeader."No.";
            SalesCommentLine."Line No." := LineNo;
            SalesCommentLine.Date := TODAY;
            SalesCommentLine.Comment := 'P.O. Change Message';
            SalesCommentLine.Code := 'EDI';
            SalesCommentLine.INSERT;
          END;
          SalesCommentLine.RESET;
          SalesCommentLine.SETRANGE("Document Type",OrderHeader."Document Type");
          SalesCommentLine.SETRANGE("No.",OrderHeader."No.");
          IF SalesCommentLine.FIND('+') THEN
            LineNo := SalesCommentLine."Line No." + 10000
          ELSE
            LineNo := 10000;
          SalesCommentLine.INIT;
          SalesCommentLine."Document Type" := OrderHeader."Document Type";
          SalesCommentLine."No." := OrderHeader."No.";
          SalesCommentLine."Line No." := LineNo;
          SalesCommentLine.Date := TODAY;
          SalesCommentLine.Comment := EDIRecDocField."Field Text Value";
          SalesCommentLine.Code := 'EDI';
          SalesCommentLine.INSERT;
        UNTIL EDIRecDocField.NEXT = 0;
    END;

    PROCEDURE CalculateQuantity@1240030002(VAR CurrQuoteLine@1240030000 : Record 37;CurrEDIRecDocHdr@1240030001 : Record 14002358;VAR CurrOrderLine@1240020000 : Record 37) Quantity : Decimal;
    VAR
      EDIRecDocField@1240030002 : Record 14002359;
    BEGIN
      DeleteItem := FALSE;

      CASE CurrQuoteLine."EDI Code" OF
        'QD','QI':
          CurrOrderLine.VALIDATE(Quantity,CurrQuoteLine.Quantity);
        'DI','2':
          BEGIN
            DeleteItem := TRUE;
            CurrOrderLine.VALIDATE(Quantity,CurrQuoteLine.Quantity);
          END;
        'PC':
          QtyFound := FALSE;
        ELSE
          IF QtyFound THEN BEGIN
            CurrOrderLine.VALIDATE(Quantity,LastQty);
            IF LastQty = 0 THEN
              DeleteItem := TRUE;
          END;
      END;

      IF DeleteItem THEN
        CurrQuoteLine."EDI Line Status" := CurrQuoteLine."EDI Line Status"::Cancellation
      ELSE
        CurrQuoteLine."EDI Line Status" := CurrQuoteLine."EDI Line Status"::"Change Made";
      CurrQuoteLine.MODIFY;
    END;

    PROCEDURE ReleaseStatus@1240030003(CurrOrderHdr@1240030000 : Record 36;CurrEDIRecDocHdr@1240030001 : Record 14002358);
    BEGIN
      ProcessChange := FALSE;
      IF CurrOrderHdr.Status = CurrOrderHdr.Status::Released THEN BEGIN
        IF (CurrEDIRecDocHdr."Cancel Released Order Update") AND
          (NOT CurrEDIRecDocHdr."PO Change Release Override")
        THEN BEGIN
          ProcessChange := FALSE;
          ReleasedNotProcessed := ReleasedNotProcessed + 1;
        END ELSE
          ProcessChange := TRUE;
      END ELSE
        ProcessChange := TRUE;
    END;

    PROCEDURE GetChangeDate@1240030004(EDIRecDocHdr@1240030001 : Record 14002358);
    VAR
      EDIRecDocField@1240030000 : Record 14002359;
    BEGIN
      ChangeDate := 0D;

      EDIRecDocField.RESET;
      EDIRecDocField.SETCURRENTKEY("Internal Doc. No.","Field Name");
      EDIRecDocField.SETRANGE("Internal Doc. No.",EDIRecDocHdr."Internal Doc. No.");
      IF QuoteRequest THEN BEGIN
        EDIRecDocField.SETRANGE(Segment,'BQT');
        EDIRecDocField.SETRANGE(Element,'03');
      END ELSE BEGIN
        EDIRecDocField.SETRANGE(Segment,'BCH');
        EDIRecDocField.SETRANGE(Element,'06');
      END;
      IF EDIRecDocField.FIND('-') THEN
        ChangeDate := EDIRecDocField."Field Date Value"
      ELSE
        ChangeDate := TODAY;
    END;

    PROCEDURE SetStatus@1240030005(EDIRecDocHdr@1240030000 : Record 14002358;CurrOrderLine@1240030001 : Record 37);
    VAR
      Found@1240030002 : Boolean;
    BEGIN
      Found := FALSE;

      EDIRecDocField.RESET;
      EDIRecDocField.SETCURRENTKEY("Internal Doc. No.","Segment Group");
      EDIRecDocField.SETRANGE("Internal Doc. No.",EDIRecDocHdr."Internal Doc. No.");
      EDIRecDocField.SETRANGE("Segment Group",CurrOrderLine."EDI Segment Group");
      IF EDIRecDocField.FIND('-') THEN
        REPEAT
          CASE EDIRecDocField."Nav Field No." OF
            CurrOrderLine.FIELDNO("EDI Item Cross Ref."):
              BEGIN
                EDIRecDocField."New Item" := TRUE;
                EDIRecDocField.MODIFY;
                Found := TRUE;
              END;
            CurrOrderLine.FIELDNO("Cross-Reference No."):
              BEGIN
                EDIRecDocField."New Item" := TRUE;
                EDIRecDocField.MODIFY;
                Found := TRUE;
              END;
            CurrOrderLine.FIELDNO("No."):
              BEGIN
                EDIRecDocField."New Item" := TRUE;
                EDIRecDocField.MODIFY;
                 Found := TRUE;
              END;
          END;
        UNTIL (EDIRecDocField.NEXT = 0) OR  (Found = TRUE)
    END;

    PROCEDURE AddItem@1240020001(VAR QuoteLine@1240020000 : Record 37;VAR OrderLine@1240020001 : Record 37;OrderHeader@1240020003 : Record 36;EDIRecDocHeader@1240020004 : Record 14002358);
    VAR
      LineNo@1240020002 : Integer;
    BEGIN
      QuoteLine."EDI Line Status" := QuoteLine."EDI Line Status"::New;
      QuoteLine.MODIFY;
      OrderLine.RESET;
      OrderLine.SETRANGE("Document Type",OrderHeader."Document Type");
      OrderLine.SETRANGE("Document No.",OrderHeader."No.");
      IF OrderLine.FIND('+') THEN
        LineNo := OrderLine."Line No." + 10000
      ELSE
        LineNo := 10000;
      OrderLine.INIT;
      OrderLine."Document Type" := OrderHeader."Document Type";
      OrderLine."Document No." := OrderHeader."No.";
      OrderLine."Line No." := LineNo;
      OrderLine."Sell-to Customer No." := OrderHeader."Sell-to Customer No.";
      OrderLine.VALIDATE(Type,QuoteLine.Type);
      OrderLine.VALIDATE("No.",QuoteLine."No.");
      OrderLine.VALIDATE("Variant Code",QuoteLine."Variant Code");
      OrderLine.VALIDATE("Location Code",QuoteLine."Location Code");
      OrderLine.VALIDATE(Quantity,QuoteLine.Quantity);
      OrderLine.TRANSFERFIELDS(QuoteLine,FALSE);
      OrderLine.INSERT(TRUE);
      SetStatus(EDIRecDocHeader,OrderLine);

      IF (CancelReleasedOrderUpdate = FALSE) AND (EDITemplate."Update P.O. Ack. On Change Rec") THEN
        UpdatePOAck(OrderHeader,OrderLine,TRUE);
    END;

    PROCEDURE GetMultiplier@1240020003(EDIRecDocHeader@1240020000 : Record 14002358);
    VAR
      EDIRecDocField@1240020001 : Record 14002359;
    BEGIN
      EDIRecDocField.RESET;
      EDIRecDocField.SETRANGE("Internal Doc. No.",EDIRecDocHeader."Internal Doc. No.");
      EDIRecDocField.SETFILTER("Segment Group",'>%1',0);
      EDIRecDocField.SETRANGE(Multiplier,TRUE);
      IF EDIRecDocField.FIND('-') THEN
        MultiplierFound := TRUE
      ELSE
        MultiplierFound := FALSE;
    END;

    PROCEDURE SetProcessType@1240020007(RequestforQuote@1240020000 : Boolean);
    BEGIN
      QuoteRequest := RequestforQuote;
    END;

    PROCEDURE SetQuoteStatus@1240020005(OrderHeader@1240020002 : Record 36;QuoteHeader@1240020003 : Record 36);
    VAR
      CurrQuoteHdr@1240020000 : Record 36;
      Text001@1240020001 : TextConst 'ENU=Quote %1 has been updated.';
    BEGIN
      CurrQuoteHdr.GET(QuoteHeader."Document Type",QuoteHeader."No.");
      CurrQuoteHdr."EDI Quote Change Processed" := TRUE;
      CurrQuoteHdr."EDI Quote Change ProcessedDate" := TODAY;
      CurrQuoteHdr.MODIFY;
      IF SingleDocument THEN
        MESSAGE(Text001,OrderHeader."No.");
    END;

    PROCEDURE GetOrder@1240020004(VAR QuoteHeader@1240020000 : Record 36;VAR EDIRecDocHeader@1240020001 : Record 14002358;EDIDocument@1240020014 : Record 14002353);
    VAR
      Text001@1240020007 : TextConst 'ENU=Document Type %1 Sell-to Customer %2  External Document Number %3 can not be found.';
      Text003@1240020006 : TextConst 'ENU=More than one sales line exists on Document Type %1 Document %2 with Type %3 Number %4.  Can not determine which to change.';
      Text008@1240020005 : TextConst 'ENU=Document Type %1 Sell-to Customer %2 External Document Number %3 Ship-to Code %4 Ship-for Code %5 can not be found.';
      Text009@1240020004 : TextConst 'ENU=%1 sales orders were found for Sell-to Customer %2 External Document Number %3 Ship to Code %4 Ship for Code %5.  \Cannot determine which order to change.';
      QuoteLine@1240020003 : Record 37;
      OrderHeader@1240020002 : Record 36;
      OrderLine@1240020008 : Record 37;
      ReleaseSalesDocument@1240020011 : Codeunit 414;
      EDIRecordAssocDoc@1240020010 : Codeunit 14002380;
      ArchiveManagement@1240020009 : Codeunit 5063;
      HeaderCount@1240020013 : Integer;
      OrderWasReleased@1240020012 : Boolean;
      DescriptionFound@1240020020 : Boolean;
    BEGIN
      OrderFindError := FALSE;
      OrderHeader.RESET;
      OrderHeader.SETCURRENTKEY("Document Type","Sell-to Customer No.","No.");
      IF QuoteRequest THEN BEGIN
        OrderHeader.SETRANGE("Document Type",OrderHeader."Document Type"::Quote);
        OrderHeader.SETFILTER("EDI Internal Doc. No.",'<>%1',QuoteHeader."EDI Internal Doc. No.");
      END ELSE
        OrderHeader.SETRANGE("Document Type",OrderHeader."Document Type"::Order);
      OrderHeader.SETRANGE("Sell-to Customer No.",QuoteHeader."Sell-to Customer No.");
      OrderHeader.SETRANGE("External Document No.",QuoteHeader."External Document No.");
      IF NOT OrderHeader.FIND('-') THEN BEGIN
        OrderFindError := TRUE;
        IF OrderChangeStatusReq THEN BEGIN
          CreateOrderStatus(QuoteHeader,OrderHeader,OrderFindError);
          COMMIT;
        END;
        IF SingleDocument THEN
          ERROR(
            Text001,
            DocumentType,
            QuoteHeader."Sell-to Customer No.",
            QuoteHeader."External Document No.")
        ELSE
          OrderFindErrorCount := OrderFindErrorCount + 1;
        EXIT;
      END;
      QuoteLine.RESET;
      QuoteLine.SETRANGE("Document Type",QuoteHeader."Document Type");
      QuoteLine.SETRANGE("Document No.",QuoteHeader."No.");
      QuoteLine.SETFILTER("No.",'<>%1','');
      IF (NOT QuoteLine.FIND('-')) OR (EDIRecDocHeader."PO Change Purpose Code" = '20') THEN
        IF EDIRecDocHeader."PO Change Purpose Code" IN ['01','1','17','CF','DELETE'] THEN BEGIN
          HdrUpdate := TRUE;
          REPEAT
            ReleaseStatus(OrderHeader,EDIRecDocHeader);
            IF ProcessChange THEN BEGIN
              IF EDIDocument."Archive Sales Order" THEN
                ArchiveManagement.StoreSalesDocument(OrderHeader,FALSE);
              GetChangeDate(EDIRecDocHeader);
              OrderHeader."EDI Cancellation Request" := TRUE;
              OrderHeader."EDI Cancellation Date" := ChangeDate;
              IF OrderHeader.Status = OrderHeader.Status::Released THEN
                ReleaseSalesDocument.Reopen(OrderHeader);
              OrderHeader.MODIFY;
              COMMIT;
              IF EDIDocument."Zero Sales Line Qty. On Cancel" THEN BEGIN
                OrderLine.RESET;
                OrderLine.SETRANGE("Document Type",OrderHeader."Document Type");
                OrderLine.SETRANGE("Document No.",OrderHeader."No.");
                OrderLine.SETRANGE(Type,OrderLine.Type::Item);
                OrderLine.SETFILTER("No.",'<>%1','');
                IF OrderLine.FIND('-') THEN
                  REPEAT
                    OrderLine.VALIDATE(Quantity,0);
                    OrderLine.MODIFY(TRUE);
                  UNTIL OrderLine.NEXT = 0;
              END;
              EDIRecordAssocDoc.RecordAssocDoc(EDIRecDocHeader,OrderHeader,FALSE);
              SetChangedDocAssocDocNo(EDIRecDocHeader,OrderHeader,QuoteHeader);
              MapSalesCommentLine(EDIRecDocHeader,OrderHeader);
              UpdateReceiveDocInfoRecord(QuoteHeader,OrderHeader);
            END;
            IF OrderChangeStatusReq THEN
              CreateOrderStatus(QuoteHeader,OrderHeader,FALSE);
          UNTIL OrderHeader.NEXT = 0;
        END ELSE BEGIN
          HdrUpdate := TRUE;
          REPEAT
            ReleaseStatus(OrderHeader,EDIRecDocHeader);
            IF ProcessChange THEN BEGIN
              IF EDIDocument."Archive Sales Order" THEN
                ArchiveManagement.StoreSalesDocument(OrderHeader,FALSE);
              IF (OrderHeader.Status = OrderHeader.Status::Released) THEN BEGIN
                ReleaseSalesDocument.Reopen(OrderHeader);
                OrderWasReleased := TRUE;
              END ELSE
                OrderWasReleased := FALSE;
              UpdateOrderHdr(OrderHeader,QuoteHeader);
              IF OrderWasReleased THEN BEGIN
                OrderLine.RESET;
                OrderLine.SETRANGE("Document Type",OrderHeader."Document Type");
                OrderLine.SETRANGE("Document No.",OrderHeader."No.");
                OrderLine.SETFILTER(Type,'>0');
                OrderLine.SETFILTER(Quantity,'<>0');
                IF OrderLine.FIND('-') THEN BEGIN
                  ReleaseDocument(OrderHeader);
                  OrderWasReleased := FALSE;
                END;
              END;
            END;
            EDIRecordAssocDoc.RecordAssocDoc(EDIRecDocHeader,OrderHeader,FALSE);
            SetChangedDocAssocDocNo(EDIRecDocHeader,OrderHeader,QuoteHeader);
            MapSalesCommentLine(EDIRecDocHeader,OrderHeader);
            UpdateReceiveDocInfoRecord(QuoteHeader,OrderHeader);
            IF OrderChangeStatusReq THEN
              CreateOrderStatus(QuoteHeader,OrderHeader,FALSE);
          UNTIL OrderHeader.NEXT = 0;
      END;
      IF NOT HdrUpdate THEN BEGIN
        OrderFound := FALSE;
        OrderHeader.RESET;
        OrderHeader.SETCURRENTKEY("Document Type","Sell-to Customer No.","No.");
        IF QuoteRequest THEN BEGIN
          OrderHeader.SETRANGE("Document Type",OrderHeader."Document Type"::Quote);
          OrderHeader.SETFILTER("EDI Internal Doc. No.",'<>%1',QuoteHeader."EDI Internal Doc. No.");
        END ELSE
          OrderHeader.SETRANGE("Document Type",OrderHeader."Document Type"::Order);
        OrderHeader.SETRANGE("Sell-to Customer No.",QuoteHeader."Sell-to Customer No.");
        OrderHeader.SETRANGE("External Document No.",QuoteHeader."External Document No.");
        IF SDQFound OR ShipToFound THEN BEGIN
          OrderHeader.SETRANGE("Ship-to Code",QuoteHeader."Ship-to Code");
          OrderHeader.SETRANGE("Ship-for Code",QuoteHeader."Ship-for Code");
        END;
        IF NOT OrderHeader.FIND('-') THEN BEGIN
          IF SDQFound = FALSE AND ShipToFound THEN BEGIN
            OrderHeader.SETRANGE("Ship-to Code");
            OrderHeader.SETRANGE("Ship-for Code");
            IF OrderHeader.FIND('-') THEN BEGIN
              OrderFound := TRUE;
              OrderFindError := FALSE;
            END ELSE BEGIN
              OrderFindError := TRUE;
              IF OrderChangeStatusReq THEN BEGIN
                CreateOrderStatus(QuoteHeader,OrderHeader,OrderFindError);
                COMMIT;
              END;
              IF SingleDocument THEN
                ERROR(
                  Text008,
                  OrderHeader."Document Type",
                  QuoteHeader."Sell-to Customer No.",
                  QuoteHeader."External Document No.",
                  QuoteHeader."Ship-to Code",
                  QuoteHeader."Ship-for Code")
              ELSE
                OrderFindErrorCount := OrderFindErrorCount + 1;
            END;
          END ELSE BEGIN
            OrderFindError := TRUE;
            IF OrderChangeStatusReq THEN BEGIN
              CreateOrderStatus(QuoteHeader,OrderHeader,OrderFindError);
              COMMIT;
            END;
            IF SingleDocument THEN
              ERROR(
                Text008,
                OrderHeader."Document Type",
                QuoteHeader."Sell-to Customer No.",
                QuoteHeader."External Document No.",
                QuoteHeader."Ship-to Code",
                QuoteHeader."Ship-for Code")
            ELSE
              OrderFindErrorCount := OrderFindErrorCount + 1;
          END;
        END ELSE
          OrderFound := TRUE;
        IF OrderFound THEN BEGIN
          HeaderCount := OrderHeader.COUNT;
          IF HeaderCount > 1 THEN
            ERROR(
              Text009,
              HeaderCount,
              OrderHeader."Sell-to Customer No.",
              OrderHeader."External Document No.",
              OrderHeader."Ship-to Code",
              OrderHeader."Ship-for Code");
          ReleaseStatus(OrderHeader,EDIRecDocHeader);
          IF ProcessChange THEN BEGIN
            IF EDIDocument."Archive Sales Order" THEN
              ArchiveManagement.StoreSalesDocument(OrderHeader,FALSE);
            IF (OrderHeader.Status = OrderHeader.Status::Released) THEN BEGIN
              ReleaseSalesDocument.Reopen(OrderHeader);
              OrderWasReleased := TRUE;
            END ELSE
              OrderWasReleased := FALSE;
            CASE EDIRecDocHeader."PO Change Purpose Code" OF
              '01','1','17','CF','DELETE':
                BEGIN
                  GetChangeDate(EDIRecDocHeader);
                  OrderHeader."EDI Cancellation Request" := TRUE;
                  OrderHeader."EDI Cancellation Date" := ChangeDate;
                  IF OrderHeader.Status = OrderHeader.Status::Released THEN
                    ReleaseSalesDocument.Reopen(OrderHeader);
                  OrderHeader.MODIFY;
                  COMMIT;
                  IF EDIDocument."Zero Sales Line Qty. On Cancel" THEN BEGIN
                    QuoteLine.RESET;
                    QuoteLine.SETRANGE("Document Type",QuoteHeader."Document Type");
                    QuoteLine.SETRANGE("Document No.",QuoteHeader."No.");
                    QuoteLine.SETFILTER("No.",'<>%1','');
                    IF QuoteLine.FIND('-') THEN
                      REPEAT
                        OrderLine.RESET;
                        OrderLine.SETRANGE("Document Type",OrderHeader."Document Type");
                        OrderLine.SETRANGE("Document No.",OrderHeader."No.");
                        OrderLine.SETRANGE(Type,QuoteLine.Type);
                        OrderLine.SETRANGE("No.",QuoteLine."No.");
                        OrderLine.SETRANGE("Variant Code",QuoteLine."Variant Code");
                        IF OrderLine.FIND('-') THEN BEGIN
                          QuoteLine."EDI Line Status" :=
                          QuoteLine."EDI Line Status"::Cancellation;
                          QuoteLine.MODIFY;
                          OrderLine.VALIDATE(Quantity,0);
                          OrderLine.MODIFY(TRUE);
                        END;
                      UNTIL QuoteLine.NEXT = 0;
                  END;
                  EDIRecordAssocDoc.RecordAssocDoc(EDIRecDocHeader,OrderHeader,FALSE);
                  SetChangedDocAssocDocNo(EDIRecDocHeader,OrderHeader,QuoteHeader);
                  MapSalesCommentLine(EDIRecDocHeader,OrderHeader);
                  UpdateReceiveDocInfoRecord(QuoteHeader,OrderHeader);
                END;
              '02','03','04','2','3','4','20','21','36','R','UPDATE':
                BEGIN
                  UpdateOrderHdr(OrderHeader,QuoteHeader);
                  QuoteLine.RESET;
                  QuoteLine.SETRANGE("Document Type",QuoteHeader."Document Type");
                  QuoteLine.SETRANGE("Document No.",QuoteHeader."No.");
                  QuoteLine.SETFILTER("No.",'<>%1','');
                  IF QuoteLine.FIND('-') THEN
                    REPEAT
                      LineShipmentDate := 0D;
                      LineRequestedDeliveryDate := 0D;
                      LastQty := 0;
                      LastUnitPrice := 0;
                      QtyFound := FALSE;
                      UnitPriceFound := FALSE;
                      DescriptionFound := FALSE;
                      EDIRecDocField.RESET;
                      EDIRecDocField.SETCURRENTKEY("Internal Doc. No.","NAV Table No.","Nav Field No.");
                      EDIRecDocField.SETRANGE("Internal Doc. No.",EDIRecDocHeader."Internal Doc. No.");
                      EDIRecDocField.SETRANGE("NAV Table No.",DATABASE::"Sales Line");
                      EDIRecDocField.SETRANGE("Segment Group",QuoteLine."EDI Segment Group");
                      IF EDIRecDocHeader."Subline Item Detail Used" THEN
                        EDIRecDocField.SETRANGE("SLN Document Line No.",QuoteLine."Line No.");
                      IF EDIRecDocField.FIND('-') THEN
                        REPEAT
                          CASE  EDIRecDocField."Nav Field No." OF
                            QuoteLine.FIELDNO("Shipment Date"):
                              LineShipmentDate := EDIRecDocField."Field Date Value";
                            QuoteLine.FIELDNO("Requested Delivery Date"):
                              LineRequestedDeliveryDate := EDIRecDocField."Field Date Value";
                            QuoteLine.FIELDNO(Quantity):
                              BEGIN
                                QtyFound := TRUE;
                                IF EDIRecDocField."Field Integer Value" <> 0 THEN
                                  LastQty := EDIRecDocField."Field Integer Value";
                                IF EDIRecDocField."Field Dec. Value" <> 0 THEN
                                  LastQty := EDIRecDocField."Field Dec. Value";
                                IF MultiplierFound THEN
                                  LastQty := EDIRecDocField."Extended Quantity"
                              END;
                            QuoteLine.FIELDNO("Unit Price"):
                              BEGIN
                                UnitPriceFound := TRUE;
                                LastUnitPrice := EDIRecDocField."Field Dec. Value";
                              END;
                            QuoteLine.FIELDNO(Description):
                              DescriptionFound := TRUE;
                          END;
                        UNTIL EDIRecDocField.NEXT = 0;
                      OrderLine.RESET;
                      OrderLine.SETCURRENTKEY(
                        "Document Type","Document No.",Type,"No.","Variant Code",
                        "Drop Shipment",Pack,"Location Code");
                      OrderLine.SETRANGE("Document Type",OrderHeader."Document Type");
                      OrderLine.SETRANGE("Document No.",OrderHeader."No.");
                      OrderLine.SETRANGE(Type,QuoteLine.Type);
                      OrderLine.SETRANGE("No.",QuoteLine."No.");
                      OrderLine.SETRANGE("EDI ID",QuoteLine."EDI ID");
                      OrderLine.SETRANGE("Variant Code",QuoteLine."Variant Code");
                      IF NOT OrderLine.FIND('-') THEN
                        AddItem(QuoteLine,OrderLine,OrderHeader,EDIRecDocHeader)
                      ELSE
                        IF ((QuoteLine."EDI Code" = 'DI') OR
                            (QuoteLine."EDI Code" = '2')) AND
                            (EDIDocument."Delete Item Action" =
                            EDIDocument."Delete Item Action"::"Delete Item")
                        THEN BEGIN
                          QuoteLine."EDI Line Status" :=
                            QuoteLine."EDI Line Status"::Cancellation;
                          QuoteLine.MODIFY;
                          OrderLine.DELETE(TRUE)
                        END ELSE BEGIN
                          IF (QuoteLine."EDI Code" = 'AI') OR
                             (QuoteLine."EDI Code" = '1')
                          THEN
                            AddItem(QuoteLine,OrderLine,OrderHeader,EDIRecDocHeader)
                          ELSE BEGIN
                            OrderLine.SetRunFromEDI(TRUE);
                            IF (EDIDocumentNo = '860') OR
                               (EDIDocumentNo = 'ORDCHG') OR
                               (EDIDocumentNo = '876') OR
                               (EDIDocumentNo = '875')
                            THEN
                              CalculateQuantity(QuoteLine,EDIRecDocHeader,OrderLine)
                            ELSE
                              IF QtyFound THEN
                                OrderLine.VALIDATE(Quantity,LastQty);
                            IF UnitPriceFound THEN
                              OrderLine.VALIDATE("Unit Price",LastUnitPrice);
                            IF DescriptionFound THEN
                              OrderLine.Description := QuoteLine.Description;
                            IF LineShipmentDate <> 0D THEN
                              OrderLine.VALIDATE("Shipment Date",LineShipmentDate);
                            IF LineRequestedDeliveryDate <> 0D THEN
                              OrderLine.VALIDATE(
                                "Requested Delivery Date",LineRequestedDeliveryDate);
                            IF QuoteLine."EDI Item Cross Ref." <> '' THEN
                              OrderLine.VALIDATE(
                                "EDI Item Cross Ref.",QuoteLine."EDI Item Cross Ref.");
                            IF QuoteLine."EDI Unit of Measure" <> '' THEN
                              OrderLine.VALIDATE(
                                "EDI Unit of Measure",QuoteLine."EDI Unit of Measure");
                            IF QuoteLine."EDI Unit Price" <> 0 THEN BEGIN
                              DiscountUnitPrice := 0;
                              OrderLine."EDI Price Discrepancy" := FALSE;
                              OrderLine.VALIDATE("EDI Unit Price",QuoteLine."EDI Unit Price");
                              CASE TRUE OF
                                OrderLine."Line Discount %" = 0:
                                  BEGIN
                                    CASE TRUE OF
                                      OrderLine."Unit Price" <> OrderLine."EDI Unit Price":
                                        OrderLine."EDI Price Discrepancy" := TRUE;
                                      OrderLine."Unit Price" = OrderLine."EDI Unit Price":
                                        OrderLine."EDI Price Discrepancy" := FALSE;
                                    END;
                                  END;
                                ELSE BEGIN
                                  DiscountUnitPrice :=
                                    OrderLine."Unit Price" -
                                      (OrderLine."Unit Price" * (OrderLine."Line Discount %" / 100));
                                  DiscountUnitPrice := ROUND(DiscountUnitPrice,0.01);
                                  IF DiscountUnitPrice <> OrderLine."EDI Unit Price" THEN
                                    OrderLine."EDI Price Discrepancy" := TRUE;
                                END;
                              END;
                            END;
                            IF QuoteLine."EDI Ship Req. Date" <> 0D THEN
                              OrderLine.VALIDATE(
                                "EDI Ship Req. Date",QuoteLine."EDI Ship Req. Date");
                            IF QuoteLine."EDI Kanban No." <> ''THEN
                              OrderLine.VALIDATE("EDI Kanban No.",QuoteLine."EDI Kanban No.");
                            IF QuoteLine."EDI Release No." <> '' THEN
                              OrderLine.VALIDATE("EDI Release No.",QuoteLine."EDI Release No.");
                            OrderLine."EDI Line Status" := QuoteLine."EDI Line Status";
                            OrderLine.MODIFY(TRUE);
                            IF (OrderLine.Type = OrderLine.Type::Item) AND
                               (OrderLine.Reserve = OrderLine.Reserve::Always)
                            THEN BEGIN
                              OrderLine.GET(OrderLine."Document Type",OrderLine."Document No.",OrderLine."Line No.");
                             OrderLine.AutoReserve;//(FALSE);
                            END;
                            OrderLine.SetRunFromEDI(FALSE);
                          END;
                        END;
                        IF OrderLine.NEXT <> 0 THEN
                          ERROR(
                            Text003,
                            OrderLine."Document Type",
                            OrderLine."Document No.",
                            OrderLine.Type,
                            OrderLine."No.");
                    UNTIL QuoteLine.NEXT = 0;
                    EDIRecordAssocDoc.RecordAssocDoc(EDIRecDocHeader,OrderHeader,FALSE);
                    SetChangedDocAssocDocNo(EDIRecDocHeader,OrderHeader,QuoteHeader);
                    MapSalesCommentLine(EDIRecDocHeader,OrderHeader);
                    UpdateReceiveDocInfoRecord(QuoteHeader,OrderHeader);
                    IF OrderWasReleased THEN BEGIN
                      OrderLine.RESET;
                      OrderLine.SETRANGE("Document Type",OrderHeader."Document Type");
                      OrderLine.SETRANGE("Document No.",OrderHeader."No.");
                      OrderLine.SETFILTER(Type,'>0');
                      OrderLine.SETFILTER(Quantity,'<>0');
                      IF OrderLine.FIND('-') THEN BEGIN
                        ReleaseDocument(OrderHeader);
                        OrderWasReleased := FALSE;
                      END;
                    END;
                END;
                '05','5','RZ':
                  BEGIN
                    QuoteHeader.TRANSFERFIELDS(QuoteHeader,TRUE);
                    UpdateOrderHdr(OrderHeader,QuoteHeader);
                    OrderLine.RESET;
                    OrderLine.SETRANGE("Document Type",OrderHeader."Document Type");
                    OrderLine.SETRANGE("Document No.",OrderHeader."No.");
                    OrderLine.DELETEALL(TRUE);
                    QuoteLine.RESET;
                    QuoteLine.SETRANGE("Document Type",QuoteHeader."Document Type");
                    QuoteLine.SETRANGE("Document No.",QuoteHeader."No.");
                    QuoteLine.SETFILTER("No.",'<>%1','');
                    IF QuoteLine.FIND('-') THEN
                      REPEAT
                        IF ((QuoteLine."EDI Code" = 'DI') OR
                            (QuoteLine."EDI Code" = '2')) AND
                            (EDIDocument."Delete Item Action" =
                            EDIDocument."Delete Item Action"::"Delete Item")
                        THEN BEGIN
                          QuoteLine."EDI Line Status" :=
                            QuoteLine."EDI Line Status"::Cancellation;
                          QuoteLine.MODIFY;
                        END ELSE BEGIN
                          OrderLine.RESET;
                          OrderLine.INIT;
                          OrderLine.SetRunFromEDI(TRUE);
                          OrderLine."Sell-to Customer No." := OrderHeader."Sell-to Customer No.";
                          OrderLine."Document Type" := OrderHeader."Document Type";
                          OrderLine."Document No." := OrderHeader."No.";
                          OrderLine."Line No." := QuoteLine."Line No.";
                          OrderLine.VALIDATE(Type,QuoteLine.Type);
                          OrderLine.VALIDATE("No.",QuoteLine."No.");
                          OrderLine.TRANSFERFIELDS(QuoteLine,FALSE);
                          IF (EDIRecDocHeader."EDI Document No." = '860') OR
                             (EDIRecDocHeader."EDI Document No." = 'ORDCHG')
                          THEN
                            CalculateQuantity(QuoteLine,EDIRecDocHeader,OrderLine);
                          OrderLine."EDI Line Status" := OrderLine."EDI Line Status"::"Change Made";
                          OrderLine.INSERT(TRUE);
                          IF (OrderLine.Type = OrderLine.Type::Item) AND
                             (OrderLine.Reserve = OrderLine.Reserve::Always)
                          THEN BEGIN
                            OrderLine.GET(OrderLine."Document Type",OrderLine."Document No.",OrderLine."Line No.");
                            OrderLine.AutoReserve;//(FALSE);
                          END;
                          OrderLine.SetRunFromEDI(FALSE);
                        END;
                      UNTIL QuoteLine.NEXT = 0;
                    EDIRecordAssocDoc.RecordAssocDoc(EDIRecDocHeader,OrderHeader,FALSE);
                    SetChangedDocAssocDocNo(EDIRecDocHeader,OrderHeader,QuoteHeader);
                    MapSalesCommentLine(EDIRecDocHeader,OrderHeader);
                    UpdateReceiveDocInfoRecord(QuoteHeader,OrderHeader);
                    IF OrderWasReleased THEN BEGIN
                      OrderLine.RESET;
                      OrderLine.SETRANGE("Document Type",OrderHeader."Document Type");
                      OrderLine.SETRANGE("Document No.",OrderHeader."No.");
                      OrderLine.SETFILTER(Type,'>0');
                      OrderLine.SETFILTER(Quantity,'<>0');
                      IF OrderLine.FIND('-') THEN BEGIN
                        ReleaseDocument(OrderHeader);
                        OrderWasReleased := FALSE;
                      END;
                    END;
                  END;
            END;
          END;
          IF OrderChangeStatusReq THEN
            CreateOrderStatus(QuoteHeader,OrderHeader,FALSE);
        END;
      END;
      IF QuoteRequest THEN
        SetQuoteStatus(OrderHeader,QuoteHeader);
    END;

    PROCEDURE CreateOrderStatus@1240020011(QuoteHeader@1240020000 : Record 36;OrderHeader@1240020001 : Record 36;OrderFoundError@1240020002 : Boolean);
    BEGIN
      OrderStatusHdr.RESET;
      OrderStatusHdr.SETRANGE("Trade Partner Code",QuoteHeader."EDI Trade Partner");
      OrderStatusHdr.SETRANGE("Source Doc. Type",QuoteHeader."Document Type");
      OrderStatusHdr.SETRANGE("Source Doc. No.",QuoteHeader."No.");
      OrderStatusHdr.SETRANGE("Document Type",OrderStatusHdr."Document Type"::"Order Change Status");
      OrderStatusHdr.SETRANGE("Buyer Initiated Change",TRUE);
      IF OrderStatusHdr.FIND('-') THEN BEGIN
        IF OrderFound THEN BEGIN
          OrderStatusHdr."Assoc. Source Doc. Type" := OrderHeader."Document Type"::Order;
          OrderStatusHdr."Assoc. Source Doc. No." :=  OrderHeader."No.";
        END;
        OrderStatusHdr."Sales Order Find Error" := OrderFoundError;
        OrderStatusHdr."Cancel Released Order Update" := CancelReleasedOrderUpdate;
        IF ProcessChange THEN BEGIN
          OrderStatusHdr."Change Processed" := TRUE;
          OrderStatusHdr."Cancel Released Order Update" := FALSE;
          OrderStatusHdr."P.O. Change Processed" := TRUE;
          OrderStatusHdr."P.O. Change Processed Date" := TODAY;
          OrderStatusHdr."P.O. Change Processed Time" := TIME;
        END ELSE BEGIN
          OrderStatusHdr."Change Processed" := FALSE;
          IF OrderFoundError THEN
            OrderStatusHdr."Released Order Cancellation" := FALSE
          ELSE
            OrderStatusHdr."Released Order Cancellation" := TRUE;
        END;
        OrderStatusHdr.MODIFY;
      END;
    END;

    PROCEDURE SetChangedDocAssocDocNo@1240020006(EDIRecDocHeader@1240020003 : Record 14002358;OrderHeader@1240020000 : Record 36;QuoteHeader@1240020001 : Record 36);
    VAR
      EDIChangedDocument@1240020002 : Record 14002373;
    BEGIN
      EDIChangedDocument.RESET;
      EDIChangedDocument.SETRANGE("Internal Doc. No.",EDIRecDocHeader."Internal Doc. No.");
      EDIChangedDocument.SETRANGE("Document Type",OrderHeader."Document Type");
      EDIChangedDocument.SETRANGE("Document No.",OrderHeader."No.");
      EDIChangedDocument.SETRANGE("Assoc. Internal Doc. No.",OrderHeader."EDI Internal Doc. No.");
      EDIChangedDocument.SETRANGE("Date Received",EDIRecDocHeader."Date Received");
      EDIChangedDocument.SETRANGE("Time Received",EDIRecDocHeader."Time Received");
      EDIChangedDocument.SETRANGE("EDI Document No.",EDIRecDocHeader."EDI Document No.");
      IF EDIChangedDocument.FIND('-') THEN BEGIN
        EDIChangedDocument."Assoc. Document No." := QuoteHeader."No.";
        EDIChangedDocument.MODIFY;
      END;
    END;

    PROCEDURE UpdateReceiveDocInfoRecord@1240020008(QuoteHeader@1240020002 : Record 36;OrderHeader@1240020003 : Record 36);
    VAR
      ChangeEDIReceiveDocHdrInfo@1240020000 : Record 14002371;
      OrderEDIReceiveDocHdrInfo@1240020004 : Record 14002371;
      ChangeEDIReceiveDocLineInfo@1240020001 : Record 14002372;
      OrderEDIReceiveDocLineInfo@1240020005 : Record 14002372;
    BEGIN
      ChangeEDIReceiveDocHdrInfo.RESET;
      ChangeEDIReceiveDocHdrInfo.SETRANGE("Internal Doc. No.",QuoteHeader."EDI Internal Doc. No.");
      ChangeEDIReceiveDocHdrInfo.SETRANGE("Document No.",QuoteHeader."No.");
      IF ChangeEDIReceiveDocHdrInfo.FIND('-') THEN BEGIN
        OrderEDIReceiveDocHdrInfo.RESET;
        OrderEDIReceiveDocHdrInfo.SETRANGE("Internal Doc. No.",OrderHeader."EDI Internal Doc. No.");
        OrderEDIReceiveDocHdrInfo.SETRANGE("Document No.",OrderHeader."No.");
        IF OrderEDIReceiveDocHdrInfo.FIND('-') THEN BEGIN
          IF ChangeEDIReceiveDocHdrInfo."Text Field 1" <> '' THEN
            OrderEDIReceiveDocHdrInfo."Text Field 1" := ChangeEDIReceiveDocHdrInfo."Text Field 1";
          IF ChangeEDIReceiveDocHdrInfo."Text Field 2" <> '' THEN
            OrderEDIReceiveDocHdrInfo."Text Field 2" := ChangeEDIReceiveDocHdrInfo."Text Field 2";
          IF ChangeEDIReceiveDocHdrInfo."Text Field 3" <> '' THEN
            OrderEDIReceiveDocHdrInfo."Text Field 3" := ChangeEDIReceiveDocHdrInfo."Text Field 3";
          IF ChangeEDIReceiveDocHdrInfo."Text Field 4" <> '' THEN
            OrderEDIReceiveDocHdrInfo."Text Field 4" := ChangeEDIReceiveDocHdrInfo."Text Field 4";
          IF ChangeEDIReceiveDocHdrInfo."Text Field 5" <> '' THEN
            OrderEDIReceiveDocHdrInfo."Text Field 5" := ChangeEDIReceiveDocHdrInfo."Text Field 5";
          IF ChangeEDIReceiveDocHdrInfo."Text Field 6" <> '' THEN
            OrderEDIReceiveDocHdrInfo."Text Field 6" := ChangeEDIReceiveDocHdrInfo."Text Field 6";
          IF ChangeEDIReceiveDocHdrInfo."Text Field 7" <> '' THEN
            OrderEDIReceiveDocHdrInfo."Text Field 7" := ChangeEDIReceiveDocHdrInfo."Text Field 7";
          IF ChangeEDIReceiveDocHdrInfo."Text Field 8" <> '' THEN
            OrderEDIReceiveDocHdrInfo."Text Field 8" := ChangeEDIReceiveDocHdrInfo."Text Field 8";
          IF ChangeEDIReceiveDocHdrInfo."Text Field 9" <> '' THEN
            OrderEDIReceiveDocHdrInfo."Text Field 9" := ChangeEDIReceiveDocHdrInfo."Text Field 9";
          IF ChangeEDIReceiveDocHdrInfo."Text Field 10" <> '' THEN
            OrderEDIReceiveDocHdrInfo."Text Field 10" := ChangeEDIReceiveDocHdrInfo."Text Field 10";

          IF ChangeEDIReceiveDocHdrInfo."Date Field 1" <> 0D THEN
            OrderEDIReceiveDocHdrInfo."Date Field 1" := ChangeEDIReceiveDocHdrInfo."Date Field 1";
          IF ChangeEDIReceiveDocHdrInfo."Date Field 2" <> 0D THEN
            OrderEDIReceiveDocHdrInfo."Date Field 2" := ChangeEDIReceiveDocHdrInfo."Date Field 2";
          IF ChangeEDIReceiveDocHdrInfo."Date Field 3" <> 0D THEN
            OrderEDIReceiveDocHdrInfo."Date Field 3" := ChangeEDIReceiveDocHdrInfo."Date Field 3";
          IF ChangeEDIReceiveDocHdrInfo."Date Field 4" <> 0D THEN
            OrderEDIReceiveDocHdrInfo."Date Field 4" := ChangeEDIReceiveDocHdrInfo."Date Field 4";
          IF ChangeEDIReceiveDocHdrInfo."Date Field 5" <> 0D THEN
            OrderEDIReceiveDocHdrInfo."Date Field 5" := ChangeEDIReceiveDocHdrInfo."Date Field 5";

          IF ChangeEDIReceiveDocHdrInfo."Decimal Field 1" <> 0 THEN
            OrderEDIReceiveDocHdrInfo."Decimal Field 1" := ChangeEDIReceiveDocHdrInfo."Decimal Field 1";
          IF ChangeEDIReceiveDocHdrInfo."Decimal Field 2" <> 0 THEN
            OrderEDIReceiveDocHdrInfo."Decimal Field 2" := ChangeEDIReceiveDocHdrInfo."Decimal Field 2";
          IF ChangeEDIReceiveDocHdrInfo."Decimal Field 3" <> 0 THEN
            OrderEDIReceiveDocHdrInfo."Decimal Field 3" := ChangeEDIReceiveDocHdrInfo."Decimal Field 3";
          IF ChangeEDIReceiveDocHdrInfo."Decimal Field 4" <> 0 THEN
            OrderEDIReceiveDocHdrInfo."Decimal Field 4" := ChangeEDIReceiveDocHdrInfo."Decimal Field 4";
          IF ChangeEDIReceiveDocHdrInfo."Decimal Field 5" <> 0 THEN
            OrderEDIReceiveDocHdrInfo."Decimal Field 5" := ChangeEDIReceiveDocHdrInfo."Decimal Field 5";
          OrderEDIReceiveDocHdrInfo."Assoc Source Doc. No." := QuoteHeader."No.";
          OrderEDIReceiveDocHdrInfo.MODIFY;
        END;
      END;

      ChangeEDIReceiveDocLineInfo.RESET;
      ChangeEDIReceiveDocLineInfo.SETRANGE("Internal Doc. No.",QuoteHeader."EDI Internal Doc. No.");
      ChangeEDIReceiveDocLineInfo.SETRANGE("Document No.",QuoteHeader."No.");
      IF ChangeEDIReceiveDocLineInfo.FIND('-') THEN
        REPEAT
        OrderEDIReceiveDocLineInfo.RESET;
        OrderEDIReceiveDocLineInfo.SETRANGE("Internal Doc. No.",OrderHeader."EDI Internal Doc. No.");
        OrderEDIReceiveDocLineInfo.SETRANGE("Document No.",OrderHeader."No.");
        OrderEDIReceiveDocLineInfo.SETRANGE("Line No.",ChangeEDIReceiveDocLineInfo."Line No.");
        IF OrderEDIReceiveDocLineInfo.FIND('-') THEN BEGIN
          IF ChangeEDIReceiveDocLineInfo."Text Field 1" <> '' THEN
            OrderEDIReceiveDocLineInfo."Text Field 1" := ChangeEDIReceiveDocLineInfo."Text Field 1";
          IF ChangeEDIReceiveDocLineInfo."Text Field 2" <> '' THEN
            OrderEDIReceiveDocLineInfo."Text Field 2" := ChangeEDIReceiveDocLineInfo."Text Field 2";
          IF ChangeEDIReceiveDocLineInfo."Text Field 3" <> '' THEN
            OrderEDIReceiveDocLineInfo."Text Field 3" := ChangeEDIReceiveDocLineInfo."Text Field 3";
          IF ChangeEDIReceiveDocLineInfo."Text Field 4" <> '' THEN
            OrderEDIReceiveDocLineInfo."Text Field 4" := ChangeEDIReceiveDocLineInfo."Text Field 4";
          IF ChangeEDIReceiveDocLineInfo."Text Field 5" <> '' THEN
            OrderEDIReceiveDocLineInfo."Text Field 5" := ChangeEDIReceiveDocLineInfo."Text Field 5";
          IF ChangeEDIReceiveDocLineInfo."Text Field 6" <> '' THEN
            OrderEDIReceiveDocLineInfo."Text Field 6" := ChangeEDIReceiveDocLineInfo."Text Field 6";
          IF ChangeEDIReceiveDocLineInfo."Text Field 7" <> '' THEN
            OrderEDIReceiveDocLineInfo."Text Field 7" := ChangeEDIReceiveDocLineInfo."Text Field 7";
          IF ChangeEDIReceiveDocLineInfo."Text Field 8" <> '' THEN
            OrderEDIReceiveDocLineInfo."Text Field 8" := ChangeEDIReceiveDocLineInfo."Text Field 8";
          IF ChangeEDIReceiveDocLineInfo."Text Field 9" <> '' THEN
            OrderEDIReceiveDocLineInfo."Text Field 9" := ChangeEDIReceiveDocLineInfo."Text Field 9";
          IF ChangeEDIReceiveDocLineInfo."Text Field 10" <> '' THEN
            OrderEDIReceiveDocLineInfo."Text Field 10" := ChangeEDIReceiveDocLineInfo."Text Field 10";

          IF ChangeEDIReceiveDocLineInfo."Date Field 1" <> 0D THEN
            OrderEDIReceiveDocLineInfo."Date Field 1" := ChangeEDIReceiveDocLineInfo."Date Field 1";
          IF ChangeEDIReceiveDocLineInfo."Date Field 2" <> 0D THEN
            OrderEDIReceiveDocLineInfo."Date Field 2" := ChangeEDIReceiveDocLineInfo."Date Field 2";
          IF ChangeEDIReceiveDocLineInfo."Date Field 3" <> 0D THEN
            OrderEDIReceiveDocLineInfo."Date Field 3" := ChangeEDIReceiveDocLineInfo."Date Field 3";
          IF ChangeEDIReceiveDocLineInfo."Date Field 4" <> 0D THEN
            OrderEDIReceiveDocLineInfo."Date Field 4" := ChangeEDIReceiveDocLineInfo."Date Field 4";
          IF ChangeEDIReceiveDocLineInfo."Date Field 5" <> 0D THEN
            OrderEDIReceiveDocLineInfo."Date Field 5" := ChangeEDIReceiveDocLineInfo."Date Field 5";

          IF ChangeEDIReceiveDocLineInfo."Decimal Field 1" <> 0 THEN
            OrderEDIReceiveDocLineInfo."Decimal Field 1" := ChangeEDIReceiveDocLineInfo."Decimal Field 1";
          IF ChangeEDIReceiveDocLineInfo."Decimal Field 2" <> 0 THEN
            OrderEDIReceiveDocLineInfo."Decimal Field 2" := ChangeEDIReceiveDocLineInfo."Decimal Field 2";
          IF ChangeEDIReceiveDocLineInfo."Decimal Field 3" <> 0 THEN
            OrderEDIReceiveDocLineInfo."Decimal Field 3" := ChangeEDIReceiveDocLineInfo."Decimal Field 3";
          IF ChangeEDIReceiveDocLineInfo."Decimal Field 4" <> 0 THEN
            OrderEDIReceiveDocLineInfo."Decimal Field 4" := ChangeEDIReceiveDocLineInfo."Decimal Field 4";
          IF ChangeEDIReceiveDocLineInfo."Decimal Field 5" <> 0 THEN
            OrderEDIReceiveDocLineInfo."Decimal Field 5" := ChangeEDIReceiveDocLineInfo."Decimal Field 5";
          OrderEDIReceiveDocLineInfo."Assoc Source Doc. No." := QuoteHeader."No.";
          OrderEDIReceiveDocLineInfo.MODIFY;
        END;
      UNTIL ChangeEDIReceiveDocLineInfo.NEXT = 0;
    END;

    PROCEDURE UpdatePOAck@1240020009(OrderHeader@1240020000 : Record 36;OrderLine@1240020003 : Record 37;NewItem@1240020006 : Boolean);
    VAR
      EDIOrderStatusHdr@1240020001 : Record 14002400;
      EDIOrderStatusLine@1240020002 : Record 14002401;
      EDISalesOrderStatusSend@1240020005 : Codeunit 14002400;
      LineNo@1240020004 : Integer;
    BEGIN
      LineNo := 0;

      EDIOrderStatusHdr.RESET;
      EDIOrderStatusHdr.SETRANGE("Trade Partner Code",OrderHeader."EDI Trade Partner");
      EDIOrderStatusHdr.SETRANGE("Source Doc. Type",EDIOrderStatusHdr."Source Doc. Type"::Order);
      EDIOrderStatusHdr.SETRANGE("Source Doc. No.",OrderHeader."No.");
      IF EDIOrderStatusHdr.FIND('-') THEN BEGIN
        IF NewItem THEN BEGIN
          EDIOrderStatusLine.RESET;
          EDIOrderStatusLine.SETRANGE("Internal Doc. No.",EDIOrderStatusHdr."Internal Doc. No.");
          EDIOrderStatusLine.SETRANGE("Export Version",EDIOrderStatusHdr."Export Version");
          EDIOrderStatusLine.SETRANGE("Source Doc. Type",EDIOrderStatusHdr."Source Doc. Type");
          EDIOrderStatusLine.SETRANGE("Source Doc. No.",EDIOrderStatusHdr."Source Doc. No.");
          EDIOrderStatusLine.SETRANGE("Document Type",EDIOrderStatusHdr."Document Type");
          EDIOrderStatusLine.SETRANGE("Line No.",OrderLine."Line No.");
          IF EDIOrderStatusLine.FIND('-') THEN BEGIN
            EDIOrderStatusLine.SETRANGE("Line No.");
            EDIOrderStatusLine.FIND('+');
            LineNo := EDIOrderStatusLine."Line No." + 10000;
          END ELSE
            LineNo := OrderLine."Line No.";
          EDIOrderStatusLine."Internal Doc. No." := EDIOrderStatusHdr."Internal Doc. No.";
          EDIOrderStatusLine."Export Version" := EDIOrderStatusHdr."Export Version";
          EDIOrderStatusLine."Source Doc. Type" := EDIOrderStatusHdr."Source Doc. Type";
          EDIOrderStatusLine."Source Doc. No." := EDIOrderStatusHdr."Source Doc. No.";
          EDIOrderStatusLine."Line No." := LineNo;
          EDIOrderStatusLine.Type := OrderLine.Type;
          EDIOrderStatusLine."No." := OrderLine."No.";
          EDIOrderStatusLine.Description := OrderLine.Description;
          EDIOrderStatusLine."Original Order Qty." := OrderLine."EDI Original Qty.";
          EDIOrderStatusLine."Order Quantity" := OrderLine.Quantity;
          EDIOrderStatusLine."Quantity To Ship" := OrderLine."Qty. to Ship";
          EDIOrderStatusLine."EDI Segment Group" := OrderLine."EDI Segment Group";
          EDIOrderStatusLine."EDI Code" := OrderLine."EDI Code";
          EDIOrderStatusLine."EDI Line Status" := OrderLine."EDI Line Status";
          EDIOrderStatusLine."Document Type" := EDIOrderStatusHdr."Document Type";
          EDIOrderStatusLine."Unit Price" := OrderLine."Unit Price";
          EDIOrderStatusLine."EDI Unit Price" := OrderLine."EDI Unit Price";
          CLEAR(EDISalesOrderStatusSend);
          EDISalesOrderStatusSend.SetPriceDiscrepancy(EDIOrderStatusLine,OrderLine);
          EDIOrderStatusLine."EDI Item Cross Ref." := OrderLine."EDI Item Cross Ref.";
          EDIOrderStatusLine."EDI Unit of Measure" := OrderLine."EDI Unit of Measure";
          EDIOrderStatusLine."EDI Variant Code" := OrderLine."EDI Variant Code";
          EDIOrderStatusLine."Variant Code" := OrderLine."Variant Code";
          EDIOrderStatusLine."Unit of Measure Code" := OrderLine."Unit of Measure Code";
          EDIOrderStatusLine.INSERT;
        END;
      END;
    END;

    PROCEDURE ReleaseDocument@1240020012(VAR SalesHeader@1240020001 : Record 36);
    VAR
      ReleaseSalesDocument@1240020000 : Codeunit 414;
      EDISetGlobalVariable@1240020002 : Codeunit 14050658;
    BEGIN
      CLEAR(ReleaseSalesDocument);
      EDISetGlobalVariable."ReleaseSalesDoc-SetRunFromEDI"(TRUE);
      ReleaseSalesDocument.RUN(SalesHeader);
      EDISetGlobalVariable."ReleaseSalesDoc-SetRunFromEDI"(FALSE);
    END;

    BEGIN
    END.
  }
}

