OBJECT Codeunit 14050002 UPSlink Management
{
  OBJECT-PROPERTIES
  {
    Date=07/13/20;
    Time=12:00:00 PM;
    Version List=SE0.62;
  }
  PROPERTIES
  {
    Permissions=TableData 14000707=rm,
                TableData 14000769=rimd,
                TableData 14050001=rm,
                TableData 14050002=rimd,
                TableData 14050003=rimd,
                TableData 14050004=rimd,
                TableData 14050005=rm,
                TableData 14050006=rimd,
                TableData 14050010=rimd,
                TableData 14050011=rimd,
                TableData 14050012=rimd,
                TableData 14050015=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ShippingAgent@1240030000 : Record 291;
      PackingStation@1240030001 : Record 14000709;
      CarrierPackingStation@1240030004 : Record 14000729;
      ShippingSetup@1240030002 : Record 14000707;
      ShippingAgentAccount@1240030003 : Record 14050005;
      UPSlinkSetup@1240030010 : Record 14050001;
      Shipping@1240030007 : Codeunit 14000701;
      ShippingSetupRetrieved@1240030008 : Boolean;
      UPSlinkCommMgt@1240030009 : Codeunit 14050007;
      Text001@1001 : TextConst 'ENU=%1 uploaded successfully';
      Text002@1002 : TextConst 'ENU=UPS Communication Setup Failed.';
      Text004@1004 : TextConst 'ENU=Error accessing UPSlink OCX';
      Text005@1005 : TextConst 'ENU=UPS Commissioning failed.';
      Text006@1006 : TextConst 'ENU=This must not be the primary UPS Shipping Agent Account on the UPS Setup card.';
      Text007@1007 : TextConst 'ENU=Waiting for response from UPSlink...';
      Text008@1008 : TextConst 'ENU=UPS Add Additional Shipper Request failed.';
      Text009@1009 : TextConst 'ENU=UPS Add Additional Shipper Request has been sent.';
      Text010@1010 : TextConst 'ENU=Reading UPS mail.  This may take several minutes.  Please wait...';
      Text013@1013 : TextConst 'ENU=No UPS Mail to be processed.';
      Text014@1014 : TextConst 'ENU=UPS Shipper Account Number %1 does not exist. Assumed to be processed';
      Text015@1015 : TextConst 'ENU=UPS Commissioning was successful.';
      Text016@1016 : TextConst 'ENU=Shipper %1 has been added.  Book and Page updated on UPS Account.';
      Text017@1017 : TextConst 'ENU=Sending %1 message to UPS.  Please wait...';
      Text030@1030 : TextConst 'ENU=Sending Dim Weight message to UPS. Please wait...';
      Text031@1031 : TextConst 'ENU=Sending SafeStore message for %1  Please wait...';
      Text032@1032 : TextConst 'ENU=Error Renaming %1 to %2';
      Text033@1033 : TextConst 'ENU=Updating %1 data %2.  Please wait...';
      Text037@1037 : TextConst 'ENU=#1############################## Progress\#2#################  #3#################';
      Text039@1039 : TextConst 'ENU=Unzipping %1 data %2.  Please wait...';
      Text057@1057 : TextConst 'ENU=Unknown UPS Distributed object received. %1 %2';
      Text058@1058 : TextConst 'ENU="The Distributed Object %1 has not been applied. Not applying the object can result in UPS chargebacks! "';
      Text059@1059 : TextConst 'ENU="To apply the object, go to UPSlink Setup, Functions, UPSlink Mail. "';
      Text060@1060 : TextConst 'ENU=Click on the message with %2 %3 and click Functions, Apply Distributed Object.';
      Text061@1061 : TextConst 'ENU=Deleting processed messages. Please wait...';
      Text063@1063 : TextConst 'ENU=Pending UPS Mail has been processed.';
      Text064@1064 : TextConst 'ENU=No Address Validation Responses pending for processing.';
      Text065@1065 : TextConst 'ENU=One or more addresses not found';
      Text066@1066 : TextConst 'ENU=Address Validation Response has been processed.';
      Text067@1067 : TextConst 'ENU=Getting MailboxID...';
      Text068@1068 : TextConst 'ENU=Error getting UPSlink MailBox ID from Registry';
      Text071@1071 : TextConst 'ENU=Check file %1 and call UPS.';
      Text072@1072 : TextConst 'ENU=Invalid UPS File Format.\';
      Text073@1073 : TextConst 'ENU=Invalid UPS File Format. No Version Number present.\';
      Text074@1074 : TextConst 'ENU=Invalid UPS File Format. No URC Date present.\';
      Text076@1076 : TextConst 'ENU=Error sending message to UPS.';
      Text077@1077 : TextConst 'ENU=UPSlink Reset Error';
      Text078@1078 : TextConst 'ENU=Reset was successful.';
      Text084@1240030011 : TextConst 'ENU=Processing UPS mail.  Please wait...';
      Text085@1240030012 : TextConst 'ENU=User Cancelled Address Validation Result Processing.';
      Text086@1240030013 : TextConst 'ENU=Manifest for %1 %2 already uploaded to UPS. Do you want to upload it to UPS again?  This may result in duplicate UPS charges.';
      Text087@1240030014 : TextConst 'ENU=Uploading Manifest to UPS.  Please wait...';
      Text088@1240030015 : TextConst 'ENU=" Source Not Found"';
      Text099@1240030005 : TextConst 'ENU=Setting Registry Values Failed.';
      Text100@1240030006 : TextConst 'ENU=Registry values successfully retrieved.';
      Text101@1240030016 : TextConst 'ENU=Recommissioning will change your UPSlink Mailbox ID and replace your UPS Book and Page numbers with new ones.  Your UPS rep will have to reset any UPS contract services.  Are you sure you want to proceed?';
      Text102@1240030017 : TextConst 'ENU=Error getting registry values.';
      Text103@1240030019 : TextConst 'ENU="Registry values for UPSlink have not been set for this workstation. "';
      Text104@1240030021 : TextConst 'ENU=UPSlink Work Files Created';
      Text113@1240030032 : TextConst 'ENU=%1 %2 Enabled. \';
      Text114@1240030033 : TextConst 'ENU=" %1 \Invalid ISO 3 char %2 for %3."';
      Text115@1240030034 : TextConst 'ENU=" %1 \Missing UPSlink Work Files - Create on Carrier Packing Station, %2."';
      Text116@1240030035 : TextConst 'ENU=" %1 \Invalid %2 %3."';
      Text117@1240030036 : TextConst 'ENU=" %1 \Invalid %2 %3, %4 %5, or %6 %7."';
      Text118@1240030037 : TextConst 'ENU=You are about to perform a Live Commissioning.  This must be done on a live packing station.  Do you want to continue?';
      Text119@1240030038 : TextConst 'ENU=Cancelled by user.';
      UPSlinkdotNetMgt@1240030039 : Codeunit 14050008;
      Text122@1240030042 : TextConst 'ENU=Pending UPS Mail has been processed WITH ERRORS.';
      Text123@1240030018 : TextConst 'ENU=Applying %1.';
      Text124@1240030020 : TextConst 'ENU=UPSlink components not installed properly on this workstation.';
      Text125@1240020000 : TextConst 'ENU=%1 \Copy the POSTAL.DAT and ETBL.BIN files from the Install_Data folder located in the Install Package to %2.';
      Text126@1240020001 : TextConst 'ENU=Missing required field in Packing Station, %1: %2.';
      Text127@1240020002 : TextConst 'ENU=The UPS Rate files need to be updated to %1. Please notify your Lanham Partner.';
      Text128@1240020003 : TextConst 'ENU=Users require FULL permissions to %1.';
      Text129@1240020004 : TextConst 'ENU=Missing required field in UPSlink Setup: %1.';
      Text130@1240021005 : TextConst 'ENU=Copy the POSTAL.DAT and ETBL.BIN files from the Install_Data folder located in the Install Package to %1 on this computer.';
      Text131@1240020005 : TextConst 'ENU=%1 is %2.';

    PROCEDURE UploadUPSManifest@9(UPSManifest@1240030000 : Record 14050007;UploadFileName@1240030003 : Text[250]);
    VAR
      ManifestHeader@1240030010 : Record 14000712;
      UPSUploadedManifest@1240030002 : Record 14050009;
      UPSAccessorialCharge@1240030029 : Record 14000767;
      PickupDateText@1240030005 : Text[8];
      PldSeqNumber@1240030006 : Text[15];
      URCFileName@1240030007 : Text[30];
      WVFileName@1240030020 : Text[30];
      EntryNo@1240030001 : Integer;
      integertest@1240030008 : Integer;
      i@1240030009 : Integer;
      MailCount@1240030018 : Integer;
      MailRefList@1240030011 : Text[250];
      MailFileList@1240030012 : Text[250];
      ConfigFile@1240030013 : File;
      TextLine@1240030014 : Text[100];
      ConfigLine@1240030015 : Text[100];
      MessageLength@1240030016 : Integer;
      MessageLengthCode@1240030017 : Code[8];
      UPSlinkAppMsgID@1240030019 : Integer;
      Window@1240030004 : Dialog;
      Text1@1240030021 : Text[10];
      Text2@1240030022 : Text[10];
      UPSlinkVersionMajor@1240030023 : Integer;
      UPSlinkVersionMinor@1240030024 : Integer;
      MsgType@1240030026 : 'Create,Set,Delete,Info,InfoDelete';
      MsgSection@1240030025 : 'Installation,Shipper,Workstation';
      ServiceTierSuffix@1240030027 : Text[4];
      LargeMailFile@1240030028 : ARRAY [25] OF Boolean;
    BEGIN
      GetShippingSetup;
      GetUPSlinkSetup;
      UPSlinkSetup.TESTFIELD(Commissioned);

      IF NOT UPSlinkSetup.Demo AND
         UPSlinkSetup."Set Registry Before OCX Call"
      THEN
        SetRegistryCommissioningValues;

      IF NOT GetUPSlinkInfo('GetVersionInfo',Text1,Text2,UPSlinkVersionMajor,UPSlinkVersionMinor) THEN
        ERROR(Text004);

      UpdateUPSlinkCommSoftwareVersion(FALSE,FALSE);

      IF UPSlinkSetup."Lanham UPSlink Version" <> UPSlinkSetup.UPSlinkVersion
      THEN BEGIN
        UPSlinkSetup."Lanham UPSlink Version" := UPSlinkSetup.UPSlinkVersion;
        UPSlinkSetup.MODIFY;
        SendPCConfig(
          UPSlinkSetup."Primary Account No.",
          UPSlinkSetup."Primary Account No." + UPSlinkSetup."Lanham UPSlink Version",
          'shippingSoftwareVersion',UPSlinkSetup."Lanham UPSlink Version",
          MsgSection::Installation,MsgType::Set);
      END;

      IF UPSlinkSetup."Lanham UPSlink Version" = UPSlinkSetup.UPSlinkVersion THEN BEGIN
        CLEAR(UPSAccessorialCharge);
        UPSAccessorialCharge.SETRANGE(UPSAccessorialCharge.Type,UPSAccessorialCharge.Type::UPS);
        UPSAccessorialCharge.SETRANGE(UPSAccessorialCharge."From Zip Code",'VERSION');
        IF UPSAccessorialCharge.FIND('-') THEN
          IF DELCHR(FORMAT(UPSAccessorialCharge.Fee),'=',',') =
             COPYSTR(UPSlinkSetup."Lanham UPSlink Version",
               STRLEN(UPSlinkSetup."Lanham UPSlink Version")-3,4)
          THEN
            IF DELCHR(FORMAT(UPSAccessorialCharge.Fee),'=',',') >
               UPSlinkSetup."Rate Version"
            THEN BEGIN
              UPSlinkSetup."Rate Version" := DELCHR(FORMAT(UPSAccessorialCharge.Fee),'=',',');
              UPSlinkSetup.MODIFY;
            END;
      END;

      GetPackingStation;
      CarrierPackingStation.GetPackingStation(PackingStation);
      ManifestHeader.GET(UPSManifest."Manifest No.");

      IF COPYSTR(
           CarrierPackingStation."UPS Manifest Upload Directory",
           STRLEN(CarrierPackingStation."UPS Manifest Upload Directory"),1) <> '\'
      THEN
        CarrierPackingStation."UPS Manifest Upload Directory" :=
          CarrierPackingStation."UPS Manifest Upload Directory" + '\';

      i := STRLEN(UPSManifest."Manifest No.");
      REPEAT
        IF EVALUATE(integertest,COPYSTR(UPSManifest."Manifest No.",i,1)) THEN BEGIN
          PldSeqNumber := COPYSTR(UPSManifest."Manifest No.",i,1) + PldSeqNumber;
          i := i - 1;
        END ELSE
          i := 0;
      UNTIL i = 0;

      WHILE STRLEN(PldSeqNumber) < 15 DO
        PldSeqNumber := '0' + PldSeqNumber;

      PickupDateText := FORMAT(ManifestHeader."Pickup Date",0,'<YEAR4><MONTH,2><DAY,2>');
      PickupDateText := CONVERTSTR(PickupDateText, ' ', '0');

      URCFileName := 'URCVersion.txt';
      IF ERASE(URCFileName) THEN ;

      ConfigFile.TEXTMODE(TRUE);
      ConfigFile.WRITEMODE(TRUE);
      ConfigFile.CREATE(CarrierPackingStation."UPS Manifest Upload Directory" + URCFileName);

      ConfigLine :=
        'URC=URC' +
        COPYSTR(ShippingSetup."UPS Routing Version",1,STRPOS(ShippingSetup."UPS Routing Version",' ')-1);

      MessageLength := MessageLength + STRLEN(ConfigLine) + 4;  // CRLF code on each line
      MessageLength := MessageLength + 14;  // installation text added to first line (below)

      MessageLengthCode := FORMAT(MessageLength);

      FOR i := STRLEN(MessageLengthCode) TO MAXSTRLEN(MessageLengthCode) - 1 DO
        MessageLengthCode := '0' + MessageLengthCode;

      TextLine := '0002S' + UPSManifest."Shipper Account Number";
      TextLine := PADSTR(TextLine,15);
      TextLine := TextLine + MessageLengthCode;

      TextLine := TextLine + '{installation}';

      ConfigFile.WRITE(TextLine);
      ConfigFile.WRITE(ConfigLine);
      ConfigFile.CLOSE;
      CLEAR(ConfigFile);

      WVFileName := 'WVVersion.txt';
      IF ERASE(CarrierPackingStation."UPS Manifest Upload Directory" + WVFileName) THEN ;

      ConfigFile.TEXTMODE(TRUE);
      ConfigFile.WRITEMODE(TRUE);
      ConfigFile.CREATE(CarrierPackingStation."UPS Manifest Upload Directory" + WVFileName);

      ConfigLine := 'versionNumWV=' + UPSlinkSetup."WW Validation Data Version";
      MessageLength := MessageLength + STRLEN(ConfigLine) + 4;  // CRLF code on each line
      MessageLength := MessageLength + 14;  // installation text added to first line (below)

      MessageLengthCode := FORMAT(MessageLength);

      FOR i := STRLEN(MessageLengthCode) TO MAXSTRLEN(MessageLengthCode) - 1 DO
        MessageLengthCode := '0' + MessageLengthCode;

      TextLine := '0002S' + UPSManifest."Shipper Account Number";
      TextLine := PADSTR(TextLine,15);
      TextLine := TextLine + MessageLengthCode;

      TextLine := TextLine + '{installation}';

      ConfigFile.WRITE(TextLine);
      ConfigFile.WRITE(ConfigLine);
      ConfigFile.CLOSE;
      CLEAR(ConfigFile);

      UPSUploadedManifest.SETCURRENTKEY("Manifest No.");
      UPSUploadedManifest.SETRANGE("Manifest No.",ManifestHeader."No.");
      UPSUploadedManifest.SETRANGE("Shipping Agent Account No.",UPSManifest."Shipper Account Number");
      UPSUploadedManifest.SETRANGE("World Ease Master No.",UPSManifest."World Ease Master No.");

      IF UPSUploadedManifest.FIND('-') THEN
        IF NOT CONFIRM(
                 STRSUBSTNO(
                   Text086,UPSManifest.FIELDCAPTION("Shipper Account Number"),
                   UPSManifest."Shipper Account Number"))
        THEN BEGIN
          ManifestHeader.GET(UPSManifest."Manifest No.");
          ManifestHeader."UPS Processing Required" := FALSE;
          ManifestHeader.MODIFY;
          EXIT;
        END;

      Window.OPEN(Text087);

      IF UploadPld(
           CarrierPackingStation."UPS Manifest Upload Directory",
           UploadFileName,PickupDateText,PldSeqNumber,
           URCFileName,WVFileName,MailCount,MailRefList,MailFileList,UPSlinkAppMsgID,ServiceTierSuffix,
           LargeMailFile)
      THEN BEGIN
        UPSUploadedManifest.RESET;
        UPSUploadedManifest.LOCKTABLE;
        IF UPSUploadedManifest.FIND('+') THEN
          EntryNo := UPSUploadedManifest."Entry No." + 1
        ELSE
          EntryNo := 1;

        UPSUploadedManifest.INIT;
        UPSUploadedManifest."Entry No." := EntryNo;
        UPSUploadedManifest."Manifest No." := UPSManifest."Manifest No.";
        UPSUploadedManifest."Shipping Agent Account No." := UPSManifest."Shipper Account Number";
        UPSUploadedManifest."World Ease Master No." := UPSManifest."World Ease Master No.";

        UPSUploadedManifest."Pickup Date" := UPSManifest."Pickup Date";
        UPSUploadedManifest."Text File Name" := UPSManifest."Text File Name";
        UPSUploadedManifest."Book Number" := UPSManifest."Book Number";
        UPSUploadedManifest."Page Number" := UPSManifest."Page Number";
        UPSUploadedManifest.INSERT(TRUE);

        COMMIT;
        MESSAGE(Text001,UPSManifest.TABLENAME);
      END;

      Window.CLOSE;
    END;

    PROCEDURE CommunicationSetup@58();
    BEGIN
      GetUPSlinkSetup;

      IF NOT UPSlinkSetup.Demo THEN
        UPSlinkSetup.TESTFIELD("UPSlink EULA Accepted",TRUE);

      CASE UPSlinkSetup."UPSlink Integration" OF
        UPSlinkSetup."UPSlink Integration"::OCX:
          IF NOT UPSlinkCommMgt.CommSetup() THEN
            ERROR(Text002);
        UPSlinkSetup."UPSlink Integration"::".NET Automation":
          IF NOT UPSlinkdotNetMgt.CommSetup() THEN
            ERROR(Text002);
      END;
    END;

    PROCEDURE Commissioning@55();
    VAR
      ShippingAgentAccount2@1240030023 : Record 14050005;
      ShippingAgent@1240030001 : Record 291;
      Country@1240030003 : Record 9;
      UPSlinkWorkstation@1240030004 : Record 14050002;
      ReqFileName@1240030005 : Text[250];
      RspFileName@1240030006 : Text[250];
      RequestFile@1240030010 : File;
      TextLine@1240030012 : ARRAY [100] OF Text[80];
      MessageLength@1240030013 : Integer;
      MessageLengthCode@1240030014 : Code[8];
      i@1240030015 : Integer;
      j@1240030016 : Integer;
      UPSlinkVersionMajor@1240030017 : Integer;
      UPSlinkVersionMinor@1240030018 : Integer;
      UPSNetworkEntry@1240030019 : Text[12];
      UPSPhoneListVersion@1240030020 : Text[30];
      Text1@1240030021 : Text[30];
      Text2@1240030022 : Text[30];
      Int1@1240030000 : Integer;
      Int2@1240030002 : Integer;
      ServiceTierSuffix@1240030007 : Text[4];
      LargeMailFile@1240030008 : ARRAY [25] OF Boolean;
    BEGIN
      ShippingAgent.RESET;
      ShippingAgent.SETRANGE("Shipper Type",ShippingAgent."Shipper Type"::UPS);
      ShippingAgent.FIND('-');
      GetPackingStation;
      CarrierPackingStation.GetPackingStation(PackingStation);

      GetShippingSetup;
      GetUPSlinkSetup;
      UPSlinkSetup.TESTFIELD(Commissioned,FALSE);
      UPSlinkSetup.TESTFIELD("UPSlink EULA Accepted",TRUE);

      CarrierPackingStation.TESTFIELD("UPSlink Temp. Files Directory");
      ShippingAgentAccount2.GET(UPSlinkSetup."Primary Account No.");

      IF NOT UPSlinkSetup.Demo THEN
        IF NOT CONFIRM(Text118) THEN
          ERROR(Text119);

      IF UPSlinkSetup."Rate Version" = '' THEN
        UPSlinkSetup."Rate Version" := COPYSTR(UPSlinkSetup.UPSlinkVersion,
          STRLEN(UPSlinkSetup.UPSlinkVersion)-3,4);

      IF COPYSTR(
        CarrierPackingStation."UPSlink Temp. Files Directory",
        STRLEN(CarrierPackingStation."UPSlink Temp. Files Directory"),1) = '\'
      THEN
        CarrierPackingStation."UPSlink Temp. Files Directory" :=
          COPYSTR(CarrierPackingStation."UPSlink Temp. Files Directory", 1,
          STRLEN(CarrierPackingStation."UPSlink Temp. Files Directory") - 1);

      ReqFileName :=
        CarrierPackingStation."UPSlink Temp. Files Directory" + '\COMMISSION_' +
        FORMAT(UPSlinkSetup."Primary Account No.") + '.txt';
      IF ERASE(ReqFileName) THEN ;

      RequestFile.TEXTMODE(TRUE);
      RequestFile.WRITEMODE(TRUE);
      RequestFile.CREATE(ReqFileName);

      IF UPSlinkSetup.Demo THEN BEGIN
        UPSlinkVersionMajor := 22;
        UPSlinkVersionMinor := 9;
      END ELSE
        IF NOT GetUPSlinkInfo('GetVersionInfo',Text1,Text2,UPSlinkVersionMajor,UPSlinkVersionMinor) THEN
          ERROR(Text004);

      IF UPSlinkVersionMinor <= 9 THEN
        TextLine[2] :=
          'commSoftwareVersion=' + FORMAT(UPSlinkVersionMajor) + '.0' + FORMAT(UPSlinkVersionMinor)
      ELSE
        TextLine[2] :=
          'commSoftwareVersion=' + FORMAT(UPSlinkVersionMajor) + '.' + FORMAT(UPSlinkVersionMinor);
      MessageLength := MessageLength + STRLEN(TextLine[2]);

      UPSNetworkEntry := 'PhoneVersion';
      IF UPSlinkSetup.Demo THEN
        UPSPhoneListVersion := '20170726'
      ELSE
        IF NOT GetUPSlinkInfo('GetNetworkConfig',UPSNetworkEntry,UPSPhoneListVersion,Int1,Int2) THEN
          ERROR(Text004);

      UPSlinkSetup."PhoneList Version" := UPSPhoneListVersion;
      UPSlinkSetup.MODIFY;

      TextLine[3] := 'iccPhonelistVersion=' + UPSPhoneListVersion;
      MessageLength := MessageLength + STRLEN(TextLine[3]);

      TextLine[4] := 'networkControlPointName=12345678';
      MessageLength := MessageLength + STRLEN(TextLine[4]);

      TextLine[5] := 'rateVersion=' + UPSlinkSetup."Rate Version";
      MessageLength := MessageLength + STRLEN(TextLine[5]);

      TextLine[6] :=
        'shippingSoftwareVersion=' + UPSlinkSetup.UPSlinkVersion;
      MessageLength := MessageLength + STRLEN(TextLine[6]);

      IF UPSlinkSetup."Billing Address" = '' THEN
        ERROR(Text129,UPSlinkSetup.FIELDCAPTION("Billing Address"));
      TextLine[7] := 'siteAddress1=' + UPSlinkSetup."Billing Address";
      MessageLength := MessageLength + STRLEN(TextLine[7]);

      i := 7;

      IF UPSlinkSetup."Billing Address 2" <> '' THEN BEGIN
        i := i + 1;
        TextLine[i] := 'siteAddress2=' + UPSlinkSetup."Billing Address 2";
        MessageLength := MessageLength + STRLEN(TextLine[i]);
      END;

      IF UPSlinkSetup."Billing Address 3" <> '' THEN BEGIN
        i := i + 1;
        TextLine[i] := 'siteAddress3=' + UPSlinkSetup."Billing Address 3";
        MessageLength := MessageLength + STRLEN(TextLine[i]);
      END;

      i := i + 1;
      IF UPSlinkSetup."Billing City" = '' THEN
        ERROR(Text129,UPSlinkSetup.FIELDCAPTION("Billing City"));
      TextLine[i] := 'siteCity=' + UPSlinkSetup."Billing City";
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      i := i + 1;
      IF UPSlinkSetup."Billing Contact" = '' THEN
        ERROR(Text129,UPSlinkSetup.FIELDCAPTION("Billing Contact"));
      TextLine[i] := 'siteContact=' + UPSlinkSetup."Billing Contact";
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      i := i + 1;
      TextLine[i] := 'siteCountry=US';
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      i := i + 1;
      IF UPSlinkSetup."Billing Company Name" = '' THEN
        ERROR(Text129,UPSlinkSetup.FIELDCAPTION("Billing Company Name"));
      TextLine[i] := 'siteName=' + UPSlinkSetup."Billing Company Name";
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      i := i + 1;
      IF UPSlinkSetup."Billing Phone" = '' THEN
        ERROR(Text129,UPSlinkSetup.FIELDCAPTION("Billing Phone"));
      TextLine[i] := 'sitePhone=' + UPSlinkSetup."Billing Phone";
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      i := i + 1;
      IF UPSlinkSetup."Billing Zip Code" = '' THEN
        ERROR(Text129,UPSlinkSetup.FIELDCAPTION("Billing Zip Code"));
      TextLine[i] := 'sitePostalCode=' + UPSlinkSetup."Billing Zip Code";
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      i := i + 1;
      IF UPSlinkSetup."Billing State" = '' THEN
        ERROR(Text129,UPSlinkSetup.FIELDCAPTION("Billing State"));
      TextLine[i] := 'siteStateProv=' + UPSlinkSetup."Billing State";
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      i := i + 1;
      TextLine[i] := 'systemModel=E-SHIP';
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      i := i + 1;
      TextLine[i] := 'systemVendor=LANHAM ASSOCIATES';
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      i := i + 1;
      TextLine[i] :=
        'URC=URC' +
        COPYSTR(ShippingSetup."UPS Routing Version",1,STRPOS(ShippingSetup."UPS Routing Version",' ')-1);
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      IF NOT UPSlinkWorkstation.FIND('-') THEN BEGIN
        UPSlinkWorkstation.INIT;
        UPSlinkWorkstation."No." := 1;
        UPSlinkWorkstation.CPU := 'INTEL';
        UPSlinkWorkstation."Disk Size" := 999;
        UPSlinkWorkstation."Floppy Size" := 999;
        UPSlinkWorkstation."Memory Size" := 999;
        UPSlinkWorkstation.OS := 'Windows 7';
        UPSlinkWorkstation."COM1 Printer" := 'HP Laserjet 4';
        UPSlinkWorkstation."Thermal Printer" := 'Zebra 2844';
        IF UPSlinkWorkstation.INSERT THEN;
      END;

      i := i + 2;
      TextLine[i] := '{workstation=' + FORMAT(UPSlinkWorkstation."No.") + '}';
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      i := i + 1;
      TextLine[i] := 'CPU=' + UPSlinkWorkstation.CPU;
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      i := i + 1;
      TextLine[i] := 'CPUUPS=' + COPYSTR(FORMAT(UPSlinkWorkstation."CPU UPS"),1,1);
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      i := i + 1;
      TextLine[i] := 'diskSz=' + FORMAT(UPSlinkWorkstation."Disk Size");
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      i := i + 1;
      TextLine[i] := 'floppy=' + FORMAT(UPSlinkWorkstation."Floppy Size");
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      i := i + 1;
      TextLine[i] := 'memorySz=' + FORMAT(UPSlinkWorkstation."Memory Size");
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      i := i + 1;
      TextLine[i] := 'OS=' + FORMAT(UPSlinkWorkstation.OS);
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      i := i + 1;
      TextLine[i] := 'addPrt=' + FORMAT(UPSlinkWorkstation."COM1 Printer");
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      i := i + 1;
      TextLine[i] := 'thermalPrt=' + FORMAT(UPSlinkWorkstation."Thermal Printer");
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      i := i + 2;
      TextLine[i] := '{shipper=' + UPSlinkSetup."Primary Account No." + '}';
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      ShipperAddress(i,TextLine,MessageLength,ShippingAgentAccount2."Account No.",TRUE);

      i := i + 1;
      MessageLength := MessageLength + i * 2;  // CRLF codes on each line
      MessageLength := MessageLength + 14;  // installation text added to first line (below)

      MessageLengthCode := FORMAT(MessageLength);

      FOR j := STRLEN(MessageLengthCode) TO MAXSTRLEN(MessageLengthCode) - 1 DO
        MessageLengthCode := '0' + MessageLengthCode;

      TextLine[1] := '0002S' + UPSlinkSetup."Primary Account No.";
      TextLine[1] := PADSTR(TextLine[1],15);
      TextLine[1] := TextLine[1] + MessageLengthCode;

      TextLine[1] := TextLine[1] + '{installation}';

      FOR j := 1 TO i DO
        RequestFile.WRITE(TextLine[j]);

      RequestFile.CLOSE;
      CLEAR(RequestFile);

      IF UPSlinkSetup.Demo THEN BEGIN
        UPSlinkSetup.Commissioned := TRUE;
        UPSlinkSetup."PhoneList Version" := '20170726';
        UPSlinkSetup."WW Validation Data Version" := 'WWVCX124';
        UPSlinkSetup."ISC Alc. Bev. Serial No." := 'ABT12304';
        UPSlinkSetup."Mailbox ID" := 'DEMOMAILBOXID';
        UPSlinkSetup."UPS Comm. Software Version" := '22.09';
        UPSlinkSetup.MODIFY;

        ShippingAgentAccount2."Book No." := '0123456';
        ShippingAgentAccount2."Alternative Book No." := '0123457';
        ShippingAgentAccount2."Page No." := '00';

        ShippingAgentAccount2."Basic Flex" := TRUE;
        ShippingAgentAccount2."Expanded Flex" := TRUE;
        ShippingAgentAccount2."TNT Flex" := TRUE;
        ShippingAgentAccount2."Exchange Collect" := TRUE;

        ShippingAgentAccount2."ISC Alcohol" := TRUE;
        ShippingAgentAccount2."ISC Biological Substance" := TRUE;
        ShippingAgentAccount2."ISC Perishables" := TRUE;
        ShippingAgentAccount2."ISC Plants" := TRUE;
        ShippingAgentAccount2."ISC Seeds"  := TRUE;
        ShippingAgentAccount2."ISC Tobacco" := TRUE;
        ShippingAgentAccount2."ISC Special Exceptions" := TRUE;
        ShippingAgentAccount2."Dry Ice"  := TRUE;
        ShippingAgentAccount2."World Ease" := ShippingAgentAccount2."World Ease"::"Invoice Detail Printed";
        ShippingAgentAccount2."Proactive Response" := TRUE;
        ShippingAgentAccount2."Paperless Invoice" := TRUE;
        ShippingAgentAccount2."Check for Hundred Weight" := TRUE;
        ShippingAgentAccount2."Hundred Weight Tier" := '3';
        ShippingAgentAccount2."US48 Standard to Mexico" := TRUE;
        ShippingAgentAccount2.Refrigeration := TRUE;
        ShippingAgentAccount2."Returns Exchange" := TRUE;
        ShippingAgentAccount2."Pack and Collect RS1 Box1" := FALSE;
        ShippingAgentAccount2."Pack and Collect RS1 Box2" := FALSE;
        ShippingAgentAccount2."Pack and Collect RS1 Box3" := FALSE;
        ShippingAgentAccount2."Pack and Collect RS1 Box4" := FALSE;
        ShippingAgentAccount2."Pack and Collect RS1 Box5" := FALSE;
        ShippingAgentAccount2."Pack and Collect RS3 Box1" := FALSE;
        ShippingAgentAccount2."Pack and Collect RS3 Box2" := FALSE;
        ShippingAgentAccount2."Pack and Collect RS3 Box3" := FALSE;
        ShippingAgentAccount2."Pack and Collect RS3 Box4" := FALSE;
        ShippingAgentAccount2."Pack and Collect RS3 Box5" := FALSE;
        ShippingAgentAccount2."Paperless NAFTA" := TRUE;
        ShippingAgentAccount2."Shipper Account Type" := '01';
        ShippingAgentAccount2."Pickup Plan Type" := '04';
        ShippingAgentAccount2.MODIFY;
        MESSAGE(Text015);
      END ELSE BEGIN
        CASE UPSlinkSetup."UPSlink Integration" OF
          UPSlinkSetup."UPSlink Integration"::OCX:
            IF NOT UPSlinkCommMgt.Commission(
              ReqFileName,RspFileName,CarrierPackingStation."UPSlink Temp. Files Directory")
            THEN
              ERROR(Text005);
          UPSlinkSetup."UPSlink Integration"::".NET Automation":
            IF NOT UPSlinkdotNetMgt.Commission(
                     ReqFileName,RspFileName,CarrierPackingStation."UPSlink Temp. Files Directory",
                     ServiceTierSuffix)
           THEN
              ERROR(Text005);
        END;

        ReadMail(
          CarrierPackingStation."UPSlink Temp. Files Directory",1,'Commission,',
          COPYSTR(RspFileName,1,STRLEN(RspFileName)-4) + ',',38,ServiceTierSuffix,LargeMailFile);
        ProcessMail(CarrierPackingStation."UPSlink Temp. Files Directory",TRUE);
        GetUPSlinkSetup;

        REPEAT
          SLEEP(1000);  // To give UPSHTTPlink time to update registry
        UNTIL GetMailboxID <> '';

        UPSNetworkEntry := 'PhoneVersion';
        IF NOT GetUPSlinkInfo('GetNetworkConfig',UPSNetworkEntry,UPSlinkSetup."PhoneList Version",Int1,Int2) THEN
          ERROR(Text004);

        UPSNetworkEntry := 'Password';

        IF NOT GetUPSlinkInfo('GetConfig',UPSNetworkEntry,UPSlinkSetup."UPSlink Password",Int1,Int2) THEN
          ERROR(Text004);

        UPSlinkSetup."Mailbox ID" := GetMailboxID;
        UpdateUPSlinkCommSoftwareVersion(FALSE,FALSE);
        UPSlinkSetup."Lanham UPSlink Version" := UPSlinkSetup.UPSlinkVersion;
        UPSlinkSetup.MODIFY;
      END;
    END;

    PROCEDURE AddShipperRequest@3(ShippingAgentAccount2@1240030000 : Record 14050005);
    VAR
      EffectiveDate@1240030003 : Code[8];
      ReqFileName@1240030004 : Text[250];
      RequestFile@1240030005 : File;
      UPSlinkMailSentLogFile@1240020000 : File;
      TextLine@1240030006 : ARRAY [100] OF Text[100];
      MessageLength@1240030007 : Integer;
      MessageLengthCode@1240030008 : Code[8];
      i@1240030009 : Integer;
      j@1240030010 : Integer;
      UPSMailboxID@1240030012 : Text[50];
      Window@1240030013 : Dialog;
    BEGIN
      ShippingAgentAccount2.TESTFIELD("Pending Add Shipper Response",FALSE);
      GetUPSlinkSetup;
      UPSlinkSetup.TESTFIELD("UPSlink EULA Accepted",TRUE);

      IF NOT UPSlinkSetup.Demo AND
         UPSlinkSetup."Set Registry Before OCX Call"
      THEN
        SetRegistryCommissioningValues;

      GetPackingStation;
      CarrierPackingStation.GetPackingStation(PackingStation);
      CarrierPackingStation.TESTFIELD("UPSlink Temp. Files Directory");

      IF ShippingAgentAccount2."Account No." = UPSlinkSetup."Primary Account No." THEN
        ERROR(Text006);

      IF COPYSTR(
           CarrierPackingStation."UPSlink Temp. Files Directory",
           STRLEN(CarrierPackingStation."UPSlink Temp. Files Directory"),1) <> '\'
      THEN
        CarrierPackingStation."UPSlink Temp. Files Directory" :=
          CarrierPackingStation."UPSlink Temp. Files Directory" + '\';

      ReqFileName :=
        CarrierPackingStation."UPSlink Temp. Files Directory" + 'ADDSHIPPER_' +
        FORMAT(ShippingAgentAccount2."Account No.") + '.txt';
      IF ERASE(ReqFileName) THEN ;

      RequestFile.TEXTMODE(TRUE);
      RequestFile.WRITEMODE(TRUE);
      RequestFile.CREATE(ReqFileName);

      UPSlinkMailSentLogFile.TEXTMODE(TRUE);
      UPSlinkMailSentLogFile.WRITEMODE(TRUE);
      IF EXISTS(CarrierPackingStation."UPSlink Temp. Files Directory" + 'UPSlinkMailSentLog.txt') THEN BEGIN
        UPSlinkMailSentLogFile.OPEN(CarrierPackingStation."UPSlink Temp. Files Directory" + 'UPSlinkMailSentLog.txt');
        UPSlinkMailSentLogFile.SEEK(UPSlinkMailSentLogFile.LEN);
      END ELSE
        UPSlinkMailSentLogFile.CREATE(CarrierPackingStation."UPSlink Temp. Files Directory" + 'UPSlinkMailSentLog.txt');

      UPSlinkMailSentLogFile.WRITE('AddShipper Sent: ' + FORMAT(TODAY) + FORMAT(TIME) + ' by ' + USERID);

      i := 1;
      ShipperAddress(i,TextLine,MessageLength,ShippingAgentAccount2."Account No.",FALSE);

      i := i + 1;
      MessageLength := MessageLength + i * 2;  // CRLF codes on each line

      // shipper=nnnnnn text added to first line (below)
      MessageLength := MessageLength + 10 + STRLEN(ShippingAgentAccount2."Account No.");

      MessageLengthCode := FORMAT(MessageLength);

      FOR j := STRLEN(MessageLengthCode) TO MAXSTRLEN(MessageLengthCode) - 1 DO
        MessageLengthCode := '0' + MessageLengthCode;

      EffectiveDate := FORMAT(WORKDATE,8,'<Year4><Month,2><Day,2>');
      TextLine[1] :=
        '0000AddShipper     ' + EffectiveDate + 'AS' + ShippingAgentAccount2."Account No.";
      TextLine[1] := PADSTR(TextLine[1],42);

      UPSMailboxID := UPSlinkSetup."Mailbox ID";

      TextLine[1] := TextLine[1] + UPSMailboxID;
      TextLine[1] := PADSTR(TextLine[1],66);

      TextLine[1] := TextLine[1] + MessageLengthCode;

      TextLine[1] := TextLine[1] + '{shipper=' + ShippingAgentAccount2."Account No." + '}';

      FOR j := 1 TO i DO BEGIN
        RequestFile.WRITE(TextLine[j]);
        UPSlinkMailSentLogFile.WRITE(TextLine[j]);
      END;

      RequestFile.CLOSE;
      CLEAR(RequestFile);
      UPSlinkMailSentLogFile.CLOSE;
      CLEAR(UPSlinkMailSentLogFile);

      Window.OPEN(Text007);
      IF NOT UPSlinkSetup.Demo THEN
        CASE UPSlinkSetup."UPSlink Integration" OF
          UPSlinkSetup."UPSlink Integration"::OCX:
            IF NOT UPSlinkCommMgt.AddShipperRequest(ReqFileName,UPSMailboxID) THEN
              ERROR(Text008);
          UPSlinkSetup."UPSlink Integration"::".NET Automation":
            IF NOT UPSlinkdotNetMgt.AddShipperRequest(ReqFileName,UPSMailboxID) THEN
              ERROR(Text008);
        END;
      Window.CLOSE;

      ShippingAgentAccount2."Pending Add Shipper Response" := TRUE;
      ShippingAgentAccount2.MODIFY;

      MESSAGE(Text009);
    END;

    PROCEDURE CheckUPSMail@7() MailCount : Integer;
    VAR
      UPSlinkSetup@1240020000 : Record 14050001;
      MailRefList@1240030001 : Text[150];
      MailFileList@1240030002 : Text[150];
      UPSlinkAppMsgID@1240030003 : Integer;
      Window@1240030015 : Dialog;
      ServiceTierSuffix@1240030000 : Text[4];
      LargeMailFile@1240030004 : ARRAY [25] OF Boolean;
    BEGIN
      GetUPSlinkSetup;
      GetPackingStation;
      CarrierPackingStation.GetPackingStation(PackingStation);
      CarrierPackingStation.TESTFIELD("UPS Manifest Upload Directory");

      IF UPSlinkSetup.GetUPSRateVersion < FORMAT(TODAY,0,'<YEAR4>') THEN
        MESSAGE(Text127,FORMAT(TODAY,0,'<YEAR4>'));

      IF NOT UPSlinkSetup.Demo AND
         UPSlinkSetup."Set Registry Before OCX Call"
      THEN
        SetRegistryCommissioningValues;

      IF COPYSTR(
           CarrierPackingStation."UPS Manifest Upload Directory",
           STRLEN(CarrierPackingStation."UPS Manifest Upload Directory"),1) = '\'
      THEN
        CarrierPackingStation."UPS Manifest Upload Directory" :=
          COPYSTR(CarrierPackingStation."UPS Manifest Upload Directory", 1,
          STRLEN(CarrierPackingStation."UPS Manifest Upload Directory") - 1);

      Window.OPEN(Text010);

      CASE UPSlinkSetup."UPSlink Integration" OF
        UPSlinkSetup."UPSlink Integration"::OCX:
          MailCount :=
            UPSlinkCommMgt.GetUPSMail(
              CarrierPackingStation."UPS Manifest Upload Directory",MailRefList,MailFileList,
              UPSlinkAppMsgID);
        UPSlinkSetup."UPSlink Integration"::".NET Automation":
          MailCount :=
            UPSlinkdotNetMgt.GetUPSMail(
              CarrierPackingStation."UPS Manifest Upload Directory",MailRefList,MailFileList,
              UPSlinkAppMsgID,ServiceTierSuffix,LargeMailFile);
      END;

      IF MailCount > 0 THEN BEGIN
        ReadMail(
          CarrierPackingStation."UPS Manifest Upload Directory",MailCount,MailRefList,MailFileList,
          UPSlinkAppMsgID,ServiceTierSuffix,LargeMailFile);

        IF (UPSlinkAppMsgID = 51) AND
           UPSlinkSetup."Process Val. Resp. Upon Rcpt."
        THEN
          ProcessValResponse;
      END;

      Window.CLOSE;

      ProcessMail(CarrierPackingStation."UPS Manifest Upload Directory",TRUE);
    END;

    LOCAL PROCEDURE ReadMail@10(MailFileFolder@1240030000 : Text[200];MailCount@1240030001 : Integer;MailRefList@1240030002 : Text[150];MailFileList@1240030003 : Text[150];UPSlinkAppMsgID@1240030010 : Integer;ServiceTierSuffix@1240030014 : Text[4];LargeMailFile@1240030015 : ARRAY [25] OF Boolean);
    VAR
      UPSlinkMail@1240030005 : Record 14050006;
      UPSlinkMail2@1240030006 : Record 14050006;
      ShippingComment@1240030033 : Record 14000706;
      EntryNo@1240030007 : Integer;
      i@1240030008 : Integer;
      j@1240030009 : Integer;
      LineNo@1240030034 : Integer;
      MailFile@1240030011 : File;
      MailFileName@1240030012 : Text[250];
      TextLine@1240030013 : Text[150];
      Delimiter@1240030004 : Code[10];
      x@1240030016 : Integer;
    BEGIN
      IF COPYSTR(MailFileFolder,STRLEN(MailFileFolder),1) <> '\' THEN
        MailFileFolder := MailFileFolder + '\';

      IF MailCount > 0 THEN BEGIN
        UPSlinkMail.RESET;
        UPSlinkMail.LOCKTABLE;
        IF UPSlinkMail.FIND('+') THEN
          EntryNo := UPSlinkMail."Entry No.";
        x := 1;

        REPEAT
          UPSlinkMail.INIT;
          EntryNo := EntryNo + 1;
          UPSlinkMail."Entry No." := EntryNo;
          i := STRPOS(MailFileList,',');
          UPSlinkMail."File Name" := COPYSTR(MailFileList,1,i-1);

          IF STRLEN(MailFileList) > i THEN
            MailFileList := COPYSTR(MailFileList,i+1)
          ELSE
            MailFileList := ',';

          j := STRPOS(MailRefList,',');
          UPSlinkMail."Reference No." := COPYSTR(MailRefList,1,j-1);
          UPSlinkMail."Service Tier Suffix" := ServiceTierSuffix;

          UPSlinkMail2.RESET;
          UPSlinkMail2.SETCURRENTKEY("Read and Processed","Duplicate Receipt","Reference No.");
          UPSlinkMail2.SETRANGE("Reference No.",UPSlinkMail."Reference No.");
          UPSlinkMail2.SETRANGE("Deleted from UPS",FALSE);
          UPSlinkMail2.SETRANGE("Duplicate Receipt",FALSE);
          UPSlinkMail2.SETRANGE("Read and Processed",FALSE);

          IF UPSlinkMail2.FIND('-') THEN BEGIN
            UPSlinkMail."Duplicate Receipt" := TRUE;
            UPSlinkMail."Deleted from UPS" := TRUE;
          END;

          IF UPSlinkMail."Reference No." = 'Commission' THEN
            MailFileName := MailFileFolder + UPSlinkMail."File Name" +
            UPSlinkMail."Service Tier Suffix" + '.000'
          ELSE
            MailFileName :=
              MailFileFolder + UPSlinkMail."File Name" + UPSlinkMail."Reference No." +
              UPSlinkMail."Service Tier Suffix" + '.000';

          IF EXISTS(MailFileName) THEN BEGIN
            MailFile.TEXTMODE(FALSE);
            MailFile.OPEN(MailFileName);
            GetMailLine(MailFile,TextLine,Delimiter,UPSlinkAppMsgID);

            IF UPSlinkMail."Reference No." = 'Commission' THEN
              TextLine := '    Commission     ' + TextLine;
            UPSlinkMail."Exception Text" := '';

            LineNo := 0;
            REPEAT
              LineNo := LineNo + 10000;
              ShippingComment.INIT;
              ShippingComment."Table ID" := 14050006;
              ShippingComment.Integer := UPSlinkMail."Entry No.";
              ShippingComment."Line No." := LineNo;
              ShippingComment.Date := TODAY;
              ShippingComment.Comment := COPYSTR(TextLine,1,MAXSTRLEN(ShippingComment.Comment));
              ShippingComment.INSERT;
            UNTIL NOT (GetMailLine(MailFile,TextLine,Delimiter,UPSlinkAppMsgID));
            MailFile.CLOSE;

            IF UPSlinkAppMsgID = 51 THEN
              UPSlinkMail."Message Type" := UPSlinkMail."Message Type"::"Addr. Val.";

            UPSlinkMail."Large Distributed Object" := LargeMailFile[x];
            UPSlinkMail.INSERT(TRUE);
            COMMIT;

            ERASE(MailFileName);

            IF UPSlinkSetup."UPSlink Integration" =
               UPSlinkSetup."UPSlink Integration"::".NET Automation"
            THEN
              UPSlinkdotNetMgt.DeleteMailFile(MailFileName);
          END;

          IF STRLEN(MailRefList) > j THEN
            MailRefList := COPYSTR(MailRefList,j+1);
          x := x + 1;
        UNTIL STRLEN(MailFileList) = 1;
      END;
    END;

    PROCEDURE ProcessMail@1240030007(MailFileFolder@1240030018 : Text[200];ShowError@1240030031 : Boolean);
    VAR
      ShippingAgentAccount2@1240030001 : Record 14050005;
      UPSlinkMail@1240030000 : Record 14050006;
      UPSlinkMail2@1240030021 : Record 14050006;
      ShippingComment@1240030005 : Record 14000706;
      UPSAccessorialCharge@1240030012 : Record 14000767;
      UPSTransaction@1240030029 : Codeunit 14050001;
      FileMgmt@1240040000 : Codeunit 419;
      GetNext@1240030004 : Boolean;
      ShipperFound@1240030003 : Boolean;
      ReadandProcessed@1240030002 : Boolean;
      Found@1240020000 : Boolean;
      DistFileName@1240030010 : Text[50];
      DistFileNamePath@1240030009 : Text[250];
      MessageType@1240030008 : ' ,Phone List,Routing Code,Restricted Article,Shipper Config.,Addr. Val.,Air Commit,Paperless Invoice,WW Validation Data,Dim. Wt. Divisor,Letter Limit,3Party Bill-to Country';
      DistributionType@1240030017 : Integer;
      j@1240030020 : Integer;
      Year@1240030027 : Integer;
      Month@1240030026 : Integer;
      Day@1240030025 : Integer;
      DistributionID@1240030015 : Text[30];
      RcvDateTime@1240030013 : Text[14];
      ErrText@1240030006 : Text[150];
      MessageLine@1240030019 : ARRAY [10] OF Text[150];
      Window@1240030011 : Dialog;
      MsgType@1240030024 : 'Create,Set,Delete,Info,InfoDelete';
      MsgSection@1240030028 : 'Installation,Shipper,Workstation';
      Zipped@1240030016 : Boolean;
      ZippedMulti@1240030022 : Boolean;
      ErrorFound@1240030023 : Boolean;
    BEGIN
      GetShippingSetup;
      GetUPSlinkSetup;
      CheckUPSlinkInstall(UPSlinkSetup.Demo);
      GetPackingStation;
      CarrierPackingStation.GetPackingStation(PackingStation);

      IF MailFileFolder = '' THEN BEGIN
        CarrierPackingStation.TESTFIELD("UPS Manifest Upload Directory");
        MailFileFolder := CarrierPackingStation."UPS Manifest Upload Directory";
      END;

      IF COPYSTR(MailFileFolder,STRLEN(MailFileFolder),1) <> '\' THEN
        MailFileFolder := MailFileFolder + '\';

      UPSlinkMail.RESET;
      UPSlinkMail.SETCURRENTKEY("Deleted from UPS","Read and Processed");
      UPSlinkMail.SETRANGE("Read and Processed",FALSE);
      UPSlinkMail.SETRANGE("Duplicate Receipt",FALSE);
      UPSlinkMail.SETFILTER("Message Type",'<>%1',UPSlinkMail."Message Type"::"Addr. Val.");

      IF NOT UPSlinkMail.FIND('-') THEN BEGIN
        IF ShowError THEN
          ERROR(Text013);
      END ELSE BEGIN
        REPEAT
          ReadandProcessed := FALSE;
          ShipperFound := FALSE;
          Found := FALSE;
          DistFileName := '';
          MessageType := UPSlinkMail."Message Type";
          ErrText := '';

          ShippingComment.RESET;
          ShippingComment.SETRANGE("Table ID",14050006);
          ShippingComment.SETRANGE(Integer,UPSlinkMail."Entry No.");

          IF ShippingComment.FIND('-') THEN BEGIN
            UPSlinkMail."Exception Text" := '';
            GetNext := FALSE;
            Window.OPEN(
              '#1################################################################################');
            Window.UPDATE(1,Text084);

            REPEAT
              CASE DELCHR(COPYSTR(ShippingComment.Comment,5,15),'>') OF
                'Create','Set','Commission':
                  BEGIN
                    MessageType := MessageType::"Shipper Config.";
                    IF STRPOS(ShippingComment.Comment,'{shipper=') > 0 THEN BEGIN
                      ShippingAgentAccount2."Account No." :=
                        COPYSTR(ShippingComment.Comment,STRPOS(ShippingComment.Comment,'{shipper=')+9,6);
                      IF NOT ShippingAgentAccount2.GET(ShippingAgentAccount2."Account No.") THEN BEGIN
                        ReadandProcessed := TRUE;
                        ErrText :=
                          STRSUBSTNO(
                            Text014,
                            ShippingAgentAccount2."Account No.");
                        MESSAGE('%1',ErrText);
                        ShipperFound := FALSE;
                        GetNext := TRUE;
                      END ELSE
                        ShipperFound := TRUE;
                    END;

                    IF STRPOS(ShippingComment.Comment,'{installation}') > 0 THEN BEGIN
                      GetUPSlinkSetup;
                      ShipperFound := TRUE;
                      ShippingAgentAccount2."Account No." := '';
                    END;

                    WHILE (ShippingComment.NEXT <> 0) AND NOT GetNext DO BEGIN
                      IF COPYSTR(ShippingComment.Comment,1,9) = '{shipper=' THEN BEGIN
                        ShippingAgentAccount2."Account No." := COPYSTR(ShippingComment.Comment,10,6);
                        IF NOT ShippingAgentAccount2.GET(ShippingAgentAccount2."Account No.") THEN BEGIN
                          ReadandProcessed := TRUE;
                          ErrText :=
                            STRSUBSTNO(
                              Text014,
                              ShippingAgentAccount2."Account No.");
                          MESSAGE('%1',ErrText);
                          ShipperFound := FALSE;
                          GetNext := TRUE;
                        END ELSE
                          ShipperFound := TRUE;
                      END;

                      IF ShipperFound THEN BEGIN
                        IF COPYSTR(ShippingComment.Comment,1,5) = 'book1' THEN BEGIN
                          ShippingAgentAccount2."Book No." := COPYSTR(ShippingComment.Comment,7);
                          WHILE STRLEN(ShippingAgentAccount2."Book No.") < 7 DO
                            ShippingAgentAccount2."Book No." := '0' + ShippingAgentAccount2."Book No.";
                          ShippingComment.NEXT;
                          ShippingAgentAccount2."Alternative Book No." :=
                            COPYSTR(ShippingComment.Comment,7);

                          WHILE STRLEN(ShippingAgentAccount2."Alternative Book No.") < 7 DO
                            ShippingAgentAccount2."Alternative Book No." :=
                              '0' + ShippingAgentAccount2."Alternative Book No.";
                          ShippingAgentAccount2."Page No." := '00';

                          // reset all contract services for the shipping account
                          ShippingAgentAccount2."Basic Flex" := FALSE;
                          ShippingAgentAccount2."Expanded Flex" := FALSE;
                          ShippingAgentAccount2."TNT Flex" := FALSE;
                          ShippingAgentAccount2."Exchange Collect" := FALSE;

                          ShippingAgentAccount2."ISC Alcohol" := FALSE;
                          ShippingAgentAccount2."ISC Biological Substance" := FALSE;
                          ShippingAgentAccount2."ISC Perishables" := FALSE;
                          ShippingAgentAccount2."ISC Plants" := FALSE;
                          ShippingAgentAccount2."ISC Seeds"  := FALSE;
                          ShippingAgentAccount2."ISC Tobacco" := FALSE;
                          ShippingAgentAccount2."ISC Special Exceptions" := FALSE;
                          ShippingAgentAccount2."Proactive Response" := FALSE;
                          ShippingAgentAccount2."Paperless Invoice" := FALSE;
                          ShippingAgentAccount2."Dry Ice" := FALSE;
                          ShippingAgentAccount2."US48 Standard to Mexico" := FALSE;
                          ShippingAgentAccount2.Refrigeration := FALSE;
                          ShippingAgentAccount2."Returns Exchange" := FALSE;
                          ShippingAgentAccount2."Pack and Collect RS1 Box1" := FALSE;
                          ShippingAgentAccount2."Pack and Collect RS1 Box2" := FALSE;
                          ShippingAgentAccount2."Pack and Collect RS1 Box3" := FALSE;
                          ShippingAgentAccount2."Pack and Collect RS1 Box4" := FALSE;
                          ShippingAgentAccount2."Pack and Collect RS1 Box5" := FALSE;
                          ShippingAgentAccount2."Pack and Collect RS3 Box1" := FALSE;
                          ShippingAgentAccount2."Pack and Collect RS3 Box2" := FALSE;
                          ShippingAgentAccount2."Pack and Collect RS3 Box3" := FALSE;
                          ShippingAgentAccount2."Pack and Collect RS3 Box4" := FALSE;
                          ShippingAgentAccount2."Pack and Collect RS3 Box5" := FALSE;
                          ShippingAgentAccount2."Paperless NAFTA" := FALSE;
                          ShippingAgentAccount2."Express Freight Haz. Mat." := FALSE;
                          ShippingAgentAccount2."ISC Expr Freight Alcohol" := FALSE;
                          ShippingAgentAccount2."ISC Expr Freight Bio. Sub." := FALSE;
                          ShippingAgentAccount2."ISC Expr Freight Perishables" := FALSE;
                          ShippingAgentAccount2."ISC Expr Freight Plants" := FALSE;
                          ShippingAgentAccount2."ISC Expr Freight Seeds" := FALSE;
                          ShippingAgentAccount2."ISC Expr Freight Spec. Except." := FALSE;
                          ShippingAgentAccount2."ISC Expr Freight Tobacco" := FALSE;
                          ShippingAgentAccount2."Shipper Account Type" := '';
                          ShippingAgentAccount2."Pickup Plan Type" := '';
                          ShippingAgentAccount2."Displayable Company Name" := FALSE;
                          ShippingAgentAccount2."Company Display Name" := '';
                          ShippingAgentAccount2."Direct Delivery Only" := FALSE;
                          ShippingAgentAccount2."Synchronized Delivery" := FALSE;
                          ShippingAgentAccount2."World Ease" := ShippingAgentAccount2."World Ease"::" ";

                          IF UPSlinkMail."Reference No." = 'Commission' THEN BEGIN
                            UPSlinkSetup.Commissioned := TRUE;
                            UPSlinkSetup.MODIFY;
                            MESSAGE(Text015);
                          END;

                          MESSAGE(
                            Text016,
                            ShippingAgentAccount2."Account No.");
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,9) = 'basicFlex' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,11,3) = '028' THEN
                            ShippingAgentAccount2."Basic Flex" := TRUE
                          ELSE
                            ShippingAgentAccount2."Basic Flex" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,ShippingAgentAccount2.FIELDCAPTION("Basic Flex")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,9),COPYSTR(ShippingComment.Comment,11,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,12) = 'expandedFlex' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,14,3) = '029' THEN
                            ShippingAgentAccount2."Expanded Flex" := TRUE
                          ELSE
                            ShippingAgentAccount2."Expanded Flex" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,ShippingAgentAccount2.FIELDCAPTION("Expanded Flex")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,12),COPYSTR(ShippingComment.Comment,14,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,7) = 'tntFlex' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,9,3) = '030' THEN
                            ShippingAgentAccount2."TNT Flex" := TRUE
                          ELSE
                            ShippingAgentAccount2."TNT Flex" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,ShippingAgentAccount2.FIELDCAPTION("TNT Flex")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,7),COPYSTR(ShippingComment.Comment,9,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,15) = 'exchangeCollect' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,17,3) = '031' THEN
                            ShippingAgentAccount2."Exchange Collect" := TRUE
                          ELSE
                            ShippingAgentAccount2."Exchange Collect" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,ShippingAgentAccount2.FIELDCAPTION("Exchange Collect")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,15),COPYSTR(ShippingComment.Comment,17,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,19) = 'onlineAdrValidation' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,21,1) = '1' THEN
                            UPSlinkSetup."Online Address Validation" := TRUE
                          ELSE
                            UPSlinkSetup."Online Address Validation" := FALSE;

                          UPSlinkSetup.MODIFY;
                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,UPSlinkSetup.FIELDCAPTION("Online Address Validation")));

                          SendPCConfig(
                            UPSlinkSetup."Primary Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,19),COPYSTR(ShippingComment.Comment,21,1),
                            MsgSection::Installation,MsgType::Set);
                          ReadandProcessed := TRUE;
                        END;

                        IF (COPYSTR(ShippingComment.Comment,1,8) = 'iscSeeds') AND NOT Found THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,10,3) = '032' THEN
                            ShippingAgentAccount2."ISC Seeds" := TRUE
                          ELSE
                            ShippingAgentAccount2."ISC Seeds" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,ShippingAgentAccount2.FIELDCAPTION("ISC Seeds")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,8),COPYSTR(ShippingComment.Comment,10,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                          Found := TRUE;
                        END;

                        IF (COPYSTR(ShippingComment.Comment,1,14) = 'iscPerishables') AND NOT Found THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,16,3) = '033' THEN
                            ShippingAgentAccount2."ISC Perishables" := TRUE
                          ELSE
                            ShippingAgentAccount2."ISC Perishables" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,ShippingAgentAccount2.FIELDCAPTION("ISC Perishables")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,14),COPYSTR(ShippingComment.Comment,16,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                          Found := TRUE;
                        END;

                        IF (COPYSTR(ShippingComment.Comment,1,10) = 'iscTobacco') AND NOT Found THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,12,3) = '034' THEN
                            ShippingAgentAccount2."ISC Tobacco" := TRUE
                          ELSE
                            ShippingAgentAccount2."ISC Tobacco" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,ShippingAgentAccount2.FIELDCAPTION("ISC Tobacco")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,10),COPYSTR(ShippingComment.Comment,12,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                          Found := TRUE;
                        END;

                        IF (COPYSTR(ShippingComment.Comment,1,9) = 'iscPlants') AND NOT Found THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,11,3) = '035' THEN
                            ShippingAgentAccount2."ISC Plants" := TRUE
                          ELSE
                            ShippingAgentAccount2."ISC Plants" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,ShippingAgentAccount2.FIELDCAPTION("ISC Plants")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,9),COPYSTR(ShippingComment.Comment,11,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                          Found := TRUE;
                        END;

                        IF (COPYSTR(ShippingComment.Comment,1,10) = 'iscAlcohol') AND NOT Found THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,12,3) = '036' THEN
                            ShippingAgentAccount2."ISC Alcohol" := TRUE
                          ELSE
                            ShippingAgentAccount2."ISC Alcohol" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,ShippingAgentAccount2.FIELDCAPTION("ISC Alcohol")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,10),COPYSTR(ShippingComment.Comment,12,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                          Found := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,11) = 'iscDiagSpec' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,13,3) = '037' THEN
                            ShippingAgentAccount2."ISC Biological Substance" := TRUE
                          ELSE
                            ShippingAgentAccount2."ISC Biological Substance" := FALSE;

                          Window.UPDATE(
                            1,
                            STRSUBSTNO(
                              Text017,ShippingAgentAccount2.FIELDCAPTION("ISC Biological Substance")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,11),COPYSTR(ShippingComment.Comment,13,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF (COPYSTR(ShippingComment.Comment,1,13) = 'iscSpecExcept') AND NOT Found THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,15,3) = '038' THEN
                            ShippingAgentAccount2."ISC Special Exceptions" := TRUE
                          ELSE
                            ShippingAgentAccount2."ISC Special Exceptions" := FALSE;

                          Window.UPDATE(
                            1,
                            STRSUBSTNO(
                              Text017,ShippingAgentAccount2.FIELDCAPTION("ISC Special Exceptions")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,13),COPYSTR(ShippingComment.Comment,15,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                          Found := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,17) = 'proActiveResponse' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,19,3) = '046' THEN
                            ShippingAgentAccount2."Proactive Response" := TRUE
                          ELSE
                            ShippingAgentAccount2."Proactive Response" := FALSE;

                          Window.UPDATE(
                            1,
                            STRSUBSTNO(Text017,ShippingAgentAccount2.FIELDCAPTION("Proactive Response")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,17),COPYSTR(ShippingComment.Comment,19,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,16) = 'paperlessInvoice' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,18,3) = '048' THEN
                            ShippingAgentAccount2."Paperless Invoice" := TRUE
                          ELSE
                            ShippingAgentAccount2."Paperless Invoice" := FALSE;

                          Window.UPDATE(
                            1,
                            STRSUBSTNO(Text017,ShippingAgentAccount2.FIELDCAPTION("Paperless Invoice")));
                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,16),COPYSTR(ShippingComment.Comment,18,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,6) = 'dryIce' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,8,3) = '047' THEN
                            ShippingAgentAccount2."Dry Ice" := TRUE
                          ELSE
                            ShippingAgentAccount2."Dry Ice" := FALSE;

                          Window.UPDATE(
                            1,
                            STRSUBSTNO(Text017,ShippingAgentAccount2.FIELDCAPTION("Dry Ice")));
                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,6),COPYSTR(ShippingComment.Comment,8,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,10) = 'cwtEnabled' THEN BEGIN
                          IF UPPERCASE(COPYSTR(ShippingComment.Comment,12,1)) = 'Y' THEN
                            ShippingAgentAccount2."Check for Hundred Weight" := TRUE
                          ELSE
                            ShippingAgentAccount2."Check for Hundred Weight" := FALSE;

                          Window.UPDATE(
                            1,
                            STRSUBSTNO(
                              Text017,ShippingAgentAccount2.FIELDCAPTION("Check for Hundred Weight")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,10),COPYSTR(ShippingComment.Comment,12,1),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,17) = 'thirdCtryContract' THEN
                          ReadandProcessed := TRUE;

                        IF COPYSTR(ShippingComment.Comment,1,7) = 'cwtTier' THEN BEGIN
                          ShippingAgentAccount2."Hundred Weight Tier" :=
                            DELCHR(COPYSTR(ShippingComment.Comment,9,2),'<','0');

                          Window.UPDATE(
                            1,
                            STRSUBSTNO(
                              Text113,ShippingAgentAccount2.FIELDCAPTION("Hundred Weight Tier"),
                              ShippingAgentAccount2."Hundred Weight Tier") +
                            STRSUBSTNO(Text017,ShippingAgentAccount2.FIELDCAPTION("Hundred Weight Tier")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,7),COPYSTR(ShippingComment.Comment,9,2),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;
                        IF COPYSTR(ShippingComment.Comment,1,16) = 'intlDimWtDivisor' THEN BEGIN
                          UPSAccessorialCharge.RESET;
                          UPSAccessorialCharge.SETRANGE(Type,UPSAccessorialCharge.Type::WWDWF);

                          IF UPSAccessorialCharge.FIND('-') THEN BEGIN
                            EVALUATE(UPSAccessorialCharge.Fee,COPYSTR(ShippingComment.Comment,18,3));
                            UPSAccessorialCharge.MODIFY;
                          END ELSE BEGIN
                            UPSAccessorialCharge.INIT;
                            UPSAccessorialCharge.Type := UPSAccessorialCharge.Type::WWDWF;
                            UPSAccessorialCharge.Description := 'International Dim Weight Divisor';
                            EVALUATE(UPSAccessorialCharge.Fee,COPYSTR(ShippingComment.Comment,18,3));
                            UPSAccessorialCharge.INSERT;
                          END;

                          IF UPSlinkMail."Reference No." <> 'Commission' THEN BEGIN
                            Window.UPDATE(1,Text030);
                            SendPCConfig(
                              ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                              COPYSTR(ShippingComment.Comment,1,16),
                              COPYSTR(ShippingComment.Comment,18,3),MsgSection::Shipper,MsgType::Info);
                          END;
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,13) = 'domesDimWtDiv' THEN BEGIN
                          UPSAccessorialCharge.RESET;
                          UPSAccessorialCharge.SETRANGE(Type,UPSAccessorialCharge.Type::DWF);

                          IF UPSAccessorialCharge.FIND('-') THEN BEGIN
                            EVALUATE(UPSAccessorialCharge.Fee,COPYSTR(ShippingComment.Comment,15,3));
                            UPSAccessorialCharge.MODIFY;
                          END ELSE BEGIN
                            UPSAccessorialCharge.INIT;
                            UPSAccessorialCharge.Type := UPSAccessorialCharge.Type::DWF;
                            UPSAccessorialCharge.Description := 'Domestic Dim Weight Divisor';
                            EVALUATE(UPSAccessorialCharge.Fee,COPYSTR(ShippingComment.Comment,15,3));
                            UPSAccessorialCharge.INSERT;
                          END;

                          IF UPSlinkMail."Reference No." <> 'Commission' THEN BEGIN
                            Window.UPDATE(1,Text030);
                            SendPCConfig(
                              ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                              COPYSTR(
                                ShippingComment.Comment,1,13),COPYSTR(ShippingComment.Comment,15,3),
                              MsgSection::Shipper,MsgType::Info);
                          END;
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,14) = 'canadaDimWtDiv' THEN BEGIN
                          UPSAccessorialCharge.RESET;
                          UPSAccessorialCharge.SETRANGE(
                            UPSAccessorialCharge.Type,UPSAccessorialCharge.Type::CADWF);

                          IF UPSAccessorialCharge.FIND('-') THEN BEGIN
                            EVALUATE(UPSAccessorialCharge.Fee,COPYSTR(ShippingComment.Comment,16,3));
                            UPSAccessorialCharge.MODIFY;
                          END ELSE BEGIN
                            UPSAccessorialCharge.INIT;
                            UPSAccessorialCharge.Type := UPSAccessorialCharge.Type::CADWF;
                            UPSAccessorialCharge.Description := 'Canada Dim Weight Divisor';
                            EVALUATE(UPSAccessorialCharge.Fee,COPYSTR(ShippingComment.Comment,16,3));
                            UPSAccessorialCharge.INSERT;
                          END;

                          IF UPSlinkMail."Reference No." <> 'Commission' THEN BEGIN
                            Window.UPDATE(1,Text030);
                            SendPCConfig(
                              ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                              COPYSTR(
                                ShippingComment.Comment,1,14),COPYSTR(ShippingComment.Comment,16,3),
                              MsgSection::Shipper,MsgType::Info);
                          END;
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,14) = 'groundDimWtDiv' THEN BEGIN
                          UPSAccessorialCharge.RESET;
                          UPSAccessorialCharge.SETRANGE(Type,UPSAccessorialCharge.Type::GDWF);

                          IF UPSAccessorialCharge.FIND('-') THEN BEGIN
                            EVALUATE(UPSAccessorialCharge.Fee,COPYSTR(ShippingComment.Comment,16,3));
                            UPSAccessorialCharge.MODIFY;
                          END ELSE BEGIN
                            UPSAccessorialCharge.INIT;
                            UPSAccessorialCharge.Type := UPSAccessorialCharge.Type::GDWF;
                            UPSAccessorialCharge.Description := 'Ground Dim Weight Divisor';
                            EVALUATE(UPSAccessorialCharge.Fee,COPYSTR(ShippingComment.Comment,16,3));
                            UPSAccessorialCharge.INSERT;
                          END;

                          IF UPSlinkMail."Reference No." <> 'Commission' THEN BEGIN
                            Window.UPDATE(1,Text030);
                            SendPCConfig(
                              ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                              COPYSTR(
                                ShippingComment.Comment,1,14),COPYSTR(ShippingComment.Comment,16,3),
                              MsgSection::Shipper,MsgType::Info);
                          END;
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,7) = 'wwsUSMX' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,9,3) = '008' THEN
                            ShippingAgentAccount2."US48 Standard to Mexico" := TRUE
                          ELSE
                            ShippingAgentAccount2."US48 Standard to Mexico" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,ShippingAgentAccount2.FIELDCAPTION("US48 Standard to Mexico")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,7),COPYSTR(ShippingComment.Comment,9,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,13) = 'refrigeration' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,15,3) = '062' THEN
                            ShippingAgentAccount2.Refrigeration := TRUE
                          ELSE
                            ShippingAgentAccount2.Refrigeration := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,ShippingAgentAccount2.FIELDCAPTION(Refrigeration)));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,13),COPYSTR(ShippingComment.Comment,15,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,15) = 'returnsExchange' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,17,3) = '090' THEN
                            ShippingAgentAccount2."Returns Exchange" := TRUE
                          ELSE
                            ShippingAgentAccount2."Returns Exchange" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,ShippingAgentAccount2.FIELDCAPTION("Returns Exchange")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,15),COPYSTR(ShippingComment.Comment,17,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,21) = 'packandcollectRS1Box1' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,23,3) = '080' THEN
                            ShippingAgentAccount2."Pack and Collect RS1 Box1" := TRUE
                          ELSE
                            ShippingAgentAccount2."Pack and Collect RS1 Box1" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,
                            ShippingAgentAccount2.FIELDCAPTION("Pack and Collect RS1 Box1")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,21),COPYSTR(ShippingComment.Comment,23,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,21) = 'packandcollectRS1Box2' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,23,3) = '081' THEN
                            ShippingAgentAccount2."Pack and Collect RS1 Box2" := TRUE
                          ELSE
                            ShippingAgentAccount2."Pack and Collect RS1 Box2" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,ShippingAgentAccount2.FIELDCAPTION("Pack and Collect RS1 Box2")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,21),COPYSTR(ShippingComment.Comment,23,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,21) = 'packandcollectRS1Box3' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,23,3) = '082' THEN
                            ShippingAgentAccount2."Pack and Collect RS1 Box3" := TRUE
                          ELSE
                            ShippingAgentAccount2."Pack and Collect RS1 Box3" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,
                            ShippingAgentAccount2.FIELDCAPTION("Pack and Collect RS1 Box3")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,21),COPYSTR(ShippingComment.Comment,23,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,21) = 'packandcollectRS1Box4' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,23,3) = '083' THEN
                            ShippingAgentAccount2."Pack and Collect RS1 Box4" := TRUE
                          ELSE
                            ShippingAgentAccount2."Pack and Collect RS1 Box4" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,
                            ShippingAgentAccount2.FIELDCAPTION("Pack and Collect RS1 Box4")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,21),COPYSTR(ShippingComment.Comment,23,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,21) = 'packandcollectRS1Box5' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,23,3) = '084' THEN
                            ShippingAgentAccount2."Pack and Collect RS1 Box5" := TRUE
                          ELSE
                            ShippingAgentAccount2."Pack and Collect RS1 Box5" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,
                            ShippingAgentAccount2.FIELDCAPTION("Pack and Collect RS1 Box5")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,21),COPYSTR(ShippingComment.Comment,23,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,21) = 'packandcollectRS3Box1' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,23,3) = '085' THEN
                            ShippingAgentAccount2."Pack and Collect RS3 Box1" := TRUE
                          ELSE
                            ShippingAgentAccount2."Pack and Collect RS3 Box1" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,
                            ShippingAgentAccount2.FIELDCAPTION("Pack and Collect RS3 Box1")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,21),COPYSTR(ShippingComment.Comment,23,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,21) = 'packandcollectRS3Box2' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,23,3) = '086' THEN
                            ShippingAgentAccount2."Pack and Collect RS3 Box2" := TRUE
                          ELSE
                            ShippingAgentAccount2."Pack and Collect RS3 Box2" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,
                            ShippingAgentAccount2.FIELDCAPTION("Pack and Collect RS3 Box2")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,21),COPYSTR(ShippingComment.Comment,23,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,21) = 'packandcollectRS3Box3' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,23,3) = '087' THEN
                            ShippingAgentAccount2."Pack and Collect RS3 Box3" := TRUE
                          ELSE
                            ShippingAgentAccount2."Pack and Collect RS3 Box3" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,
                            ShippingAgentAccount2.FIELDCAPTION("Pack and Collect RS3 Box3")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,21),COPYSTR(ShippingComment.Comment,23,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,21) = 'packandcollectRS3Box4' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,23,3) = '088' THEN
                            ShippingAgentAccount2."Pack and Collect RS3 Box4" := TRUE
                          ELSE
                            ShippingAgentAccount2."Pack and Collect RS3 Box4" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,
                            ShippingAgentAccount2.FIELDCAPTION("Pack and Collect RS3 Box4")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,21),COPYSTR(ShippingComment.Comment,23,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,21) = 'packandcollectRS3Box5' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,23,3) = '089' THEN
                            ShippingAgentAccount2."Pack and Collect RS3 Box5" := TRUE
                          ELSE
                            ShippingAgentAccount2."Pack and Collect RS3 Box5" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,
                            ShippingAgentAccount2.FIELDCAPTION("Pack and Collect RS3 Box5")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,21),COPYSTR(ShippingComment.Comment,23,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,23) = 'billableWeightExemptInd' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,25,2) = '01' THEN
                            ShippingAgentAccount2."Billable Weight Exempt Status" :=
                              ShippingAgentAccount2."Billable Weight Exempt Status"::Exempt
                          ELSE
                            ShippingAgentAccount2."Billable Weight Exempt Status" :=
                              ShippingAgentAccount2."Billable Weight Exempt Status"::"Non-Exempt";

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,
                            ShippingAgentAccount2.FIELDCAPTION("Billable Weight Exempt Status")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,23),COPYSTR(ShippingComment.Comment,25,2),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,8) = 'rateType' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,10,2) = '01' THEN
                            ShippingAgentAccount2."Rate Type" :=
                              ShippingAgentAccount2."Rate Type"::"Base Rates"
                          ELSE
                            IF COPYSTR(ShippingComment.Comment,10,2) = '03' THEN
                              ShippingAgentAccount2."Rate Type" :=
                                ShippingAgentAccount2."Rate Type"::"New List Rates";

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,ShippingAgentAccount2.FIELDCAPTION("Rate Type")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,8),COPYSTR(ShippingComment.Comment,10,2),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,16) = 'paperlessNAFTASP' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,18,3) = '507' THEN
                            ShippingAgentAccount2."Paperless NAFTA" := TRUE
                          ELSE
                            ShippingAgentAccount2."Paperless NAFTA" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,ShippingAgentAccount2.FIELDCAPTION("Paperless NAFTA")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,16),COPYSTR(ShippingComment.Comment,18,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,13) = 'iscAlcoholWXP' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,15,3) = '150' THEN
                            ShippingAgentAccount2."ISC Expr Freight Alcohol" := TRUE
                          ELSE
                            ShippingAgentAccount2."ISC Expr Freight Alcohol" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,
                            ShippingAgentAccount2.FIELDCAPTION("ISC Expr Freight Alcohol")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,13),COPYSTR(ShippingComment.Comment,15,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,12) = 'iscBioSubWXP' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,14,3) = '151' THEN
                            ShippingAgentAccount2."ISC Expr Freight Bio. Sub." := TRUE
                          ELSE
                            ShippingAgentAccount2."ISC Expr Freight Bio. Sub." := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,
                            ShippingAgentAccount2.FIELDCAPTION("ISC Expr Freight Bio. Sub.")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,12),COPYSTR(ShippingComment.Comment,14,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,17) = 'iscPerishablesWXP' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,19,3) = '152' THEN
                            ShippingAgentAccount2."ISC Expr Freight Perishables" := TRUE
                          ELSE
                            ShippingAgentAccount2."ISC Expr Freight Perishables" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,
                            ShippingAgentAccount2.FIELDCAPTION("ISC Expr Freight Perishables")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,17),COPYSTR(ShippingComment.Comment,19,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,12) = 'iscPlantsWXP' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,14,3) = '153' THEN
                            ShippingAgentAccount2."ISC Expr Freight Plants" := TRUE
                          ELSE
                            ShippingAgentAccount2."ISC Expr Freight Plants" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,
                            ShippingAgentAccount2.FIELDCAPTION("ISC Expr Freight Plants")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,12),COPYSTR(ShippingComment.Comment,14,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,11) = 'iscSeedsWXP' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,13,3) = '154' THEN
                            ShippingAgentAccount2."ISC Expr Freight Seeds" := TRUE
                          ELSE
                            ShippingAgentAccount2."ISC Expr Freight Seeds" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,
                            ShippingAgentAccount2.FIELDCAPTION("ISC Expr Freight Seeds")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,11),COPYSTR(ShippingComment.Comment,13,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,16) = 'iscSpecExceptWXP' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,18,3) = '155' THEN
                            ShippingAgentAccount2."ISC Expr Freight Spec. Except." := TRUE
                          ELSE
                            ShippingAgentAccount2."ISC Expr Freight Spec. Except." := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,
                            ShippingAgentAccount2.FIELDCAPTION("ISC Expr Freight Spec. Except.")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,16),COPYSTR(ShippingComment.Comment,18,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,13) = 'iscTobaccoWXP' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,15,3) = '156' THEN
                            ShippingAgentAccount2."ISC Expr Freight Tobacco" := TRUE
                          ELSE
                            ShippingAgentAccount2."ISC Expr Freight Tobacco" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,
                            ShippingAgentAccount2.FIELDCAPTION("ISC Expr Freight Tobacco")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,13),COPYSTR(ShippingComment.Comment,15,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,11) = 'hazmatDGWXP' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,13,3) = '157' THEN
                            ShippingAgentAccount2."Express Freight Haz. Mat." := TRUE
                          ELSE
                            ShippingAgentAccount2."Express Freight Haz. Mat." := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,
                            ShippingAgentAccount2.FIELDCAPTION("Express Freight Haz. Mat.")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,11),COPYSTR(ShippingComment.Comment,13,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,18) = 'shipperAccountType' THEN BEGIN
                            EVALUATE(ShippingAgentAccount2."Shipper Account Type",
                              COPYSTR(ShippingComment.Comment,20,2));

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,
                            ShippingAgentAccount2.FIELDCAPTION("Shipper Account Type")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,18),COPYSTR(ShippingComment.Comment,20,2),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,14) = 'pickupPlanType' THEN BEGIN
                            EVALUATE(ShippingAgentAccount2."Pickup Plan Type",
                              COPYSTR(ShippingComment.Comment,16,2));

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,
                            ShippingAgentAccount2.FIELDCAPTION("Pickup Plan Type")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,14),COPYSTR(ShippingComment.Comment,16,2),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,16) = 'pldCoDisplayName' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,18,3) = '201' THEN
                            ShippingAgentAccount2."Displayable Company Name" := TRUE
                          ELSE
                            ShippingAgentAccount2."Displayable Company Name" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,
                            ShippingAgentAccount2.FIELDCAPTION("Displayable Company Name")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,16),COPYSTR(ShippingComment.Comment,18,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,15) = 'accountLevelDdo' THEN BEGIN
                          EVALUATE(ShippingAgentAccount2."Direct Delivery Only",
                            COPYSTR(ShippingComment.Comment,17,1));

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,
                            ShippingAgentAccount2.FIELDCAPTION("Direct Delivery Only")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,15),COPYSTR(ShippingComment.Comment,17,1),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,9) = 'syncDelSS' THEN BEGIN
                          IF COPYSTR(ShippingComment.Comment,11,3) = '109' THEN
                            ShippingAgentAccount2."Synchronized Delivery" := TRUE
                          ELSE IF COPYSTR(ShippingComment.Comment,11,3) = '000' THEN
                            ShippingAgentAccount2."Synchronized Delivery" := FALSE;

                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,
                            ShippingAgentAccount2.FIELDCAPTION("Synchronized Delivery")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,9),COPYSTR(ShippingComment.Comment,11,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;

                        IF COPYSTR(ShippingComment.Comment,1,14) = 'sigReqAcctPref' THEN BEGIN

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,14),COPYSTR(ShippingComment.Comment,16,1),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;
                        IF COPYSTR(ShippingComment.Comment,1,16) = 'stateDeptLicense' THEN BEGIN

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,16),COPYSTR(ShippingComment.Comment,18,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;
                        IF COPYSTR(ShippingComment.Comment,1,17) = 'worldEaseContract' THEN BEGIN
                          CASE COPYSTR(ShippingComment.Comment,19,3) OF
                            '022':
                              ShippingAgentAccount2."World Ease" :=
                                ShippingAgentAccount2."World Ease"::"Invoice Detail Printed";
                            '041':
                              ShippingAgentAccount2."World Ease" :=
                                ShippingAgentAccount2."World Ease"::"Invoice Detail Saved to File";
                            '000':
                              ShippingAgentAccount2."World Ease" :=
                                ShippingAgentAccount2."World Ease"::" ";
                          END;
                          Window.UPDATE(
                            1,STRSUBSTNO(Text017,ShippingAgentAccount2.FIELDCAPTION("World Ease")));

                          SendPCConfig(
                            ShippingAgentAccount2."Account No.",UPSlinkMail."Reference No.",
                            COPYSTR(ShippingComment.Comment,1,17),COPYSTR(ShippingComment.Comment,19,3),
                            MsgSection::Shipper,MsgType::Info);
                          ReadandProcessed := TRUE;
                        END;
                      END;
                    END;

                    IF ReadandProcessed AND
                       NOT GetNext AND
                       (ShippingAgentAccount2."Account No." <> '')
                    THEN BEGIN
                      ShippingAgentAccount2."Pending Add Shipper Response" := FALSE;
                      ShippingAgentAccount2.MODIFY;
                    END;
                    GetNext := TRUE;
                  END;
                'Delete':
                  BEGIN
                    GetNext := TRUE;
                    ReadandProcessed := TRUE;
                  END;
                ELSE
                  IF EVALUATE(DistributionType,COPYSTR(ShippingComment.Comment,5,3)) THEN BEGIN
                    DistributionID := COPYSTR(ShippingComment.Comment,8,10);
                    RcvDateTime :=
                      UPSTransaction.FormatDateYYYYMMDD(TODAY) + UPSTransaction.FormatTime24HRMMSS(TIME);
                    GetUPSlinkSetup;

                    IF NOT SetDistTypeFields(
                             DistributionType,MessageType,DistFileName,Zipped,ZippedMulti)
                    THEN BEGIN
                      MESSAGE(Text057,UPSlinkMail.FIELDCAPTION("Entry No."),UPSlinkMail."Entry No.");
                      ErrorFound := TRUE;
                    END;

                    IF UPSlinkMail."Distributed Object File Name" = '' THEN BEGIN
                      DistFileNamePath :=
                        MailFileFolder + UPSlinkMail."File Name" + UPSlinkMail."Reference No." +
                        DistFileName;

                      UPSlinkMail."Host Config. Account No." := UPSlinkSetup."Primary Account No.";
                      UPSlinkMail."Distributed Object File Name" := DistFileName;
                      UPSlinkMail."Distribution ID" := DistributionID;
                      UPSlinkMail."Object Distribution Type" := DistributionType;
                      UPSlinkMail."Message Type" := MessageType;

                      EVALUATE(Month,COPYSTR(ShippingComment.Comment,24,2));
                      EVALUATE(Day,COPYSTR(ShippingComment.Comment,22,2));
                      EVALUATE(Year,COPYSTR(ShippingComment.Comment,18,4));
                      UPSlinkMail."Enable Date" := DMY2DATE(Month,Day,Year);

                      Window.UPDATE(1,STRSUBSTNO(Text031,MessageType));
                      IF SendDistResponse(
                        MailFileFolder,DistributionType,'001',DistributionID,'',RcvDateTime,'')
                      THEN ;

                      IF NOT UPSlinkMail."Large Distributed Object" OR
                         NOT UPSlinkSetup."Manually Apply Files Over 1M"
                      THEN
                        IF EXISTS(DistFileNamePath) OR
                           RENAME(
                             MailFileFolder + UPSlinkMail."File Name" + UPSlinkMail."Reference No." +
                             '.001',DistFileNamePath)
                        THEN BEGIN
                          FileMgmt.DeleteClientFile(MailFileFolder + UPSlinkMail."File Name" +
                            UPSlinkMail."Reference No." + '.001');
                          FileMgmt.DeleteClientFile(MailFileFolder + UPSlinkMail."File Name" +
                            UPSlinkMail."Reference No." + '.000');
                          UPSlinkMail.ImportDistributedObject(DistFileNamePath,FALSE)
                        END ELSE BEGIN
                          UPSlinkMail.CALCFIELDS("Distributed Object");
                          IF NOT UPSlinkMail."Distributed Object".HASVALUE THEN BEGIN
                            MESSAGE(
                              Text032,
                              MailFileFolder + UPSlinkMail."File Name" + UPSlinkMail."Reference No." +
                              UPSlinkMail."Service Tier Suffix" + '.001',DistFileNamePath);
                            ErrorFound := TRUE;
                          END;
                        END;
                    END;

                    UPSlinkMail.MODIFY;
                    COMMIT;

                    IF NOT UPSlinkMail."Large Distributed Object" OR
                       NOT UPSlinkSetup."Manually Apply Files Over 1M"
                    THEN
                      IF ApplyDistributedObject2(UPSlinkMail,MailFileFolder,ErrText) THEN
                        ReadandProcessed := TRUE
                      ELSE
                        ErrorFound := TRUE;

                    GetNext := TRUE;
                  END ELSE BEGIN
                    CLEAR(MessageLine);
                    j := 0;

                    REPEAT
                      j := j + 1;
                      MessageLine[j] := ShippingComment.Comment;

                      IF COPYSTR(MessageLine[j],5,5) = 'Error' THEN
                        ErrText := COPYSTR(MessageLine[j],5,15);
                      IF STRPOS(MessageLine[j],'errorText=') > 0 THEN
                        ErrText := ErrText + COPYSTR(MessageLine[j],11,MAXSTRLEN(ErrText));

                      IF j = 10 THEN BEGIN
                        MESSAGE(
                          '%1\%2\%3\%4\%5\%6\%7\%8\%9\%10',MessageLine[1],MessageLine[2],MessageLine[3],
                          MessageLine[4],MessageLine[5],MessageLine[6],MessageLine[7],MessageLine[8],
                          MessageLine[9],MessageLine[10]);
                        CLEAR(MessageLine);
                        j := 0;
                      END;
                    UNTIL ShippingComment.NEXT = 0;

                    IF MessageLine[1] <> '' THEN
                      MESSAGE(
                        '%1\%2\%3\%4\%5\%6\%7\%8\%9\%10',MessageLine[1],MessageLine[2],MessageLine[3],
                        MessageLine[4],MessageLine[5],MessageLine[6],MessageLine[7],MessageLine[8],
                        MessageLine[9],MessageLine[10]);
                    GetNext := TRUE;
                    ReadandProcessed := TRUE;
                  END;
              END;
            UNTIL GetNext;

            Window.CLOSE;
          END;

          UPSlinkMail2.GET(UPSlinkMail."Entry No.");
          UPSlinkMail2 := UPSlinkMail;

          IF MessageType = MessageType::"Shipper Config." THEN BEGIN
            UPSlinkMail2."Host Config. Account No." := ShippingAgentAccount2."Account No.";
            UPSlinkMail2."Distributed Object File Name" := DistFileName;
            UPSlinkMail2."Message Type" := MessageType;
          END;

          IF ReadandProcessed THEN BEGIN
            UPSlinkMail2."Read and Processed" :=  TRUE;
            UPSlinkMail2."Processed Date" := TODAY;
            UPSlinkMail2."Processed Time" := TIME;
            UPSlinkMail2."Processed By" := USERID;
            IF ERASE(DistFileNamePath) THEN ;
          END;

          IF ErrText <> '' THEN BEGIN
            UPSlinkMail2."Exception Text" := ErrText;
            ErrorFound := TRUE;
          END;

          UPSlinkMail2.MODIFY;
          COMMIT;
        UNTIL UPSlinkMail.NEXT = 0;
      END;

      UPSlinkMail.RESET;
      UPSlinkMail.SETCURRENTKEY("Read and Processed","Duplicate Receipt","Reference No.");
      UPSlinkMail.SETRANGE("Read and Processed",FALSE);
      UPSlinkMail.SETRANGE("Duplicate Receipt",FALSE);
      UPSlinkMail.SETFILTER("Object Distribution Type",'>%1',0);
      UPSlinkMail.SETFILTER("Distributed Object File Name",'<>%1','');

      IF UPSlinkMail.FIND('-') THEN
        REPEAT
          IF UPSlinkMail."Distributed Object".HASVALUE OR
             UPSlinkMail."Large Distributed Object"
          THEN
            MESSAGE(
              Text058 +
              Text059 + Text060,
              UPSlinkMail."Distributed Object File Name",UPSlinkMail.FIELDCAPTION("Message Type"),
              UPSlinkMail."Message Type");
        UNTIL UPSlinkMail.NEXT = 0;

      DeleteAllMail;

      IF ErrorFound THEN
        MESSAGE(Text122)
      ELSE
        MESSAGE(Text063);
    END;

    PROCEDURE ProcessValResponse@1240030011();
    VAR
      UPSlinkMail@1240030000 : Record 14050006;
      UPSlinkMail2@1240030021 : Record 14050006;
      ShippingComment@1240030005 : Record 14000706;
      Customer@1240030003 : Record 18;
      ShipToAddress@1240030004 : Record 222;
      Vendor@1240030007 : Record 23;
      OrderAddress@1240030010 : Record 224;
      Bank@1240030008 : Record 270;
      ValidationResponse@1240030012 : 'Yes,No,Update All,Skip All';
      ReadandProcessed@1240030002 : Boolean;
      SourceType@1240030001 : Integer;
      SourceNo@1240030009 : Code[20];
      j@1240030020 : Integer;
      ErrText@1240030006 : Text[150];
      NewZip@1240030017 : Code[20];
    BEGIN
      GetPackingStation;
      GetUPSlinkSetup;

      IF UPSlinkSetup."Online Addr. Val. Result" = UPSlinkSetup."Online Addr. Val. Result"::Discard THEN
        ValidationResponse := ValidationResponse::"Skip All";

      IF UPSlinkSetup."Online Addr. Val. Result" = UPSlinkSetup."Online Addr. Val. Result"::"Auto Update"
      THEN
        ValidationResponse := ValidationResponse::"Update All";

      UPSlinkMail.RESET;
      UPSlinkMail.SETCURRENTKEY("Deleted from UPS","Read and Processed");
      UPSlinkMail.SETRANGE("Read and Processed",FALSE);
      UPSlinkMail.SETRANGE("Duplicate Receipt",FALSE);
      UPSlinkMail.SETRANGE("Message Type",UPSlinkMail."Message Type"::"Addr. Val.");

      IF NOT UPSlinkMail.FIND('-') THEN
        ERROR(Text064)
      ELSE BEGIN
        REPEAT
          ReadandProcessed := FALSE;
          ErrText := '';

          ShippingComment.RESET;
          ShippingComment.SETRANGE("Table ID",14050006);
          ShippingComment.SETRANGE(Integer,UPSlinkMail."Entry No.");

          IF ShippingComment.FIND('-') THEN BEGIN
            ShippingComment.NEXT;
            REPEAT
              UPSlinkMail."Exception Text" := '';
              IF EVALUATE(SourceType,COPYSTR(ShippingComment.Comment,1,4)) THEN
                CASE SourceType OF
                  DATABASE::Customer:
                    BEGIN
                      SourceNo := DELCHR(COPYSTR(ShippingComment.Comment,5,20));

                      IF NOT Customer.GET(SourceNo) THEN BEGIN
                        ShippingComment.Comment := ShippingComment.Comment + Text088;
                        ShippingComment.MODIFY;
                        ErrText := Text065;
                      END ELSE BEGIN
                        NewZip :=
                          GetNewZip(
                            ValidationResponse,ErrText,ShippingComment.Comment,SourceType,SourceNo,'',
                            Customer.Name,Customer.Address,Customer."Address 2",Customer.City,
                            Customer.County,Customer."Post Code",UPSlinkMail."First Read Date");
                        IF NewZip <> '' THEN BEGIN
                          Customer."Post Code" := NewZip;
                          Customer.MODIFY;
                        END;

                       ShippingComment.MODIFY;
                      END;
                    END;
                  DATABASE::"Ship-to Address":
                    BEGIN
                      SourceNo := DELCHR(COPYSTR(ShippingComment.Comment,5,20));
                      j := STRPOS(SourceNo,'~');

                      IF NOT ShipToAddress.GET(COPYSTR(SourceNo,1,j-1),COPYSTR(SourceNo,j+1)) THEN BEGIN
                        ShippingComment.Comment := ShippingComment.Comment + Text088;
                        ShippingComment.MODIFY;
                        ErrText := Text065;
                      END ELSE BEGIN
                        NewZip :=
                          GetNewZip(
                            ValidationResponse,ErrText,ShippingComment.Comment,SourceType,
                            COPYSTR(SourceNo,1,j-1),COPYSTR(SourceNo,j+1),ShipToAddress.Name,
                            ShipToAddress.Address,ShipToAddress."Address 2",ShipToAddress.City,
                            ShipToAddress.County,ShipToAddress."Post Code",
                            UPSlinkMail."First Read Date");
                        IF NewZip <> '' THEN BEGIN
                          ShipToAddress."Post Code" := NewZip;
                          ShipToAddress.MODIFY;
                        END;

                       ShippingComment.MODIFY;
                      END;
                    END;
                  DATABASE::Vendor:
                    BEGIN
                      SourceNo := DELCHR(COPYSTR(ShippingComment.Comment,5,20));

                      IF NOT Vendor.GET(SourceNo) THEN BEGIN
                        ShippingComment.Comment := ShippingComment.Comment + Text088;
                        ShippingComment.MODIFY;
                        ErrText := Text065;
                      END ELSE BEGIN
                        NewZip :=
                          GetNewZip(
                            ValidationResponse,ErrText,ShippingComment.Comment,SourceType,SourceNo,'',
                            Vendor.Name,Vendor.Address,Vendor."Address 2",Vendor.City,
                            Vendor.County,Vendor."Post Code",UPSlinkMail."First Read Date");
                        IF NewZip <> '' THEN BEGIN
                          Vendor."Post Code" := NewZip;
                          Vendor.MODIFY;
                        END;

                       ShippingComment.MODIFY;
                      END;
                    END;
                  DATABASE::"Order Address":
                    BEGIN
                      SourceNo := DELCHR(COPYSTR(ShippingComment.Comment,5,20));
                      j := STRPOS(SourceNo,'~');

                      IF NOT OrderAddress.GET(COPYSTR(SourceNo,1,j-1),COPYSTR(SourceNo,j+1)) THEN BEGIN
                        ShippingComment.Comment := ShippingComment.Comment + Text088;
                        ShippingComment.MODIFY;
                        ErrText := Text065;
                      END ELSE BEGIN
                        NewZip :=
                          GetNewZip(
                            ValidationResponse,ErrText,ShippingComment.Comment,SourceType,
                            COPYSTR(SourceNo,1,j-1),COPYSTR(SourceNo,j+1),OrderAddress.Name,
                            OrderAddress.Address,OrderAddress."Address 2",OrderAddress.City,
                            OrderAddress.County,OrderAddress."Post Code",
                            UPSlinkMail."First Read Date");
                        IF NewZip <> '' THEN BEGIN
                          OrderAddress."Post Code" := NewZip;
                          OrderAddress.MODIFY;
                        END;

                       ShippingComment.MODIFY;
                      END;
                    END;
                  DATABASE::"Bank Account":
                    BEGIN
                      SourceNo := DELCHR(COPYSTR(ShippingComment.Comment,5,20));

                      IF NOT Bank.GET(SourceNo) THEN BEGIN
                        ShippingComment.Comment := ShippingComment.Comment + Text088;
                        ShippingComment.MODIFY;
                        ErrText := Text065;
                      END ELSE BEGIN
                        NewZip :=
                          GetNewZip(
                            ValidationResponse,ErrText,ShippingComment.Comment,SourceType,SourceNo,'',
                            Bank.Name,Bank.Address,Bank."Address 2",Bank.City,Bank.County,
                            Bank."Post Code",UPSlinkMail."First Read Date");
                        IF NewZip <> '' THEN BEGIN
                          Bank."Post Code" := NewZip;
                          Bank.MODIFY;
                        END;

                       ShippingComment.MODIFY;
                      END;
                    END;
                  ELSE
                      ShippingComment.Comment := ShippingComment.Comment + Text088;
                END;
            UNTIL ShippingComment.NEXT = 0;
          END;
          UPSlinkMail2.GET(UPSlinkMail."Entry No.");
          UPSlinkMail2 := UPSlinkMail;

          UPSlinkMail2."Read and Processed" :=  TRUE;
          UPSlinkMail2."Processed Date" := TODAY;
          UPSlinkMail2."Processed Time" := TIME;
          UPSlinkMail2."Processed By" := USERID;

          IF ErrText <> '' THEN
            UPSlinkMail2."Exception Text" := ErrText;
          UPSlinkMail2.MODIFY;
          COMMIT;
        UNTIL UPSlinkMail.NEXT = 0;
      END;

      DeleteAllMail;
      MESSAGE(Text066);
    END;

    PROCEDURE GetMailboxID@8() UPSMailboxID : Text[30];
    VAR
      Window@1240030000 : Dialog;
      UPSConfigEntry@1240030001 : Text[10];
      Int1@1240030002 : Integer;
      Int2@1240030003 : Integer;
    BEGIN
      GetUPSlinkSetup;
      Window.OPEN(Text067);
      UPSConfigEntry := 'MailboxID';

      IF NOT GetUPSlinkInfo('GetConfig',UPSConfigEntry,UPSMailboxID,Int1,Int2) THEN BEGIN
        Window.CLOSE;
        ERROR(Text068);
      END;

      Window.CLOSE;
    END;

    LOCAL PROCEDURE UpdateAlcBevTable@1240030002(UPSlinkMail@1240030012 : Record 14050006;MailFileFolder@1240030011 : Text[250];RcvDateTime@1240030009 : Text[14]) : Boolean;
    VAR
      UPSlinkRestrictedArticle@1240030003 : Record 14050003;
      UPSTransaction@1240030000 : Codeunit 14050001;
      UPSInputFile@1240030001 : File;
      Textline@1240030002 : Text[250];
      i@1240030004 : Integer;
      CommaPos@1240030008 : Integer;
      AlcState@1240030005 : Code[10];
      AlcCountry@1240030006 : Code[10];
      AlcOK@1240030007 : Boolean;
      AlcBevSerialNo@1240030010 : Code[20];
      ConfigMailMsgType@1240030014 : 'Create,Set,Delete,Info,InfoDelete';
      ConfigMailMsgSection@1240030013 : 'Installation,Shipper,Workstation';
    BEGIN
      GetUPSlinkSetup;

      UPSInputFile.TEXTMODE(TRUE);
      UPSInputFile.OPEN(
        MailFileFolder + UPSlinkMail."File Name" + UPSlinkMail."Reference No." +
        UPSlinkMail."Service Tier Suffix" + UPSlinkMail."Distributed Object File Name");
      UPSInputFile.READ(Textline);
      Textline := DELCHR(Textline,'=','"');
      Textline := Textline + ',';

      AlcBevSerialNo := SELECTSTR(4,Textline);

      IF AlcBevSerialNo = '' THEN
        ERROR(
          Text073 +
          Text071,UPSlinkMail."Distributed Object File Name");

      IF AlcBevSerialNo <> UPSlinkSetup."ISC Alc. Bev. Serial No." THEN BEGIN
        UPSlinkRestrictedArticle.DELETEALL;
        UPSlinkSetup."ISC Alc. Bev. Serial No." := AlcBevSerialNo;
        UPSlinkSetup.MODIFY;
      END;

      UPSlinkRestrictedArticle.SETRANGE(
        "Restricted Article",UPSlinkRestrictedArticle."Restricted Article"::"Alcoholic Beverages");

      WHILE UPSInputFile.READ(Textline) <> 0 DO BEGIN
        Textline := Textline + ',';
        FOR i := 1 TO 3 DO BEGIN
          CommaPos := STRPOS(Textline,',');
          IF CommaPos <= 0 THEN
            ERROR(
              Text072 +
              Text071,UPSlinkMail."Distributed Object File Name");

          CASE i OF
            1:
              AlcState := COPYSTR(Textline,1,CommaPos - 1);
            2:
              AlcCountry := COPYSTR(Textline,1,CommaPos - 1);
            3:
              AlcOK := (COPYSTR(Textline,1,CommaPos - 1)) = '1';
          END;
          Textline := COPYSTR(Textline,CommaPos + 1,STRLEN(Textline));
        END;

        UPSlinkRestrictedArticle.SETRANGE(State,AlcState);
        UPSlinkRestrictedArticle.SETRANGE(Country,AlcCountry);

        IF UPSlinkRestrictedArticle.FIND('-') THEN BEGIN
          UPSlinkRestrictedArticle."Alcohol Allowed" := AlcOK;
          UPSlinkRestrictedArticle.MODIFY;
        END ELSE BEGIN
          UPSlinkRestrictedArticle.INIT;
          UPSlinkRestrictedArticle.State := AlcState;
          UPSlinkRestrictedArticle.Country := AlcCountry;
          UPSlinkRestrictedArticle."Alcohol Allowed" := AlcOK;
          UPSlinkRestrictedArticle.INSERT;
        END;
      END;

      UPSInputFile.CLOSE;
      IF SendDistResponse(
           MailFileFolder,15,'002',UPSlinkMail."Distribution ID",
           UPSlinkSetup."ISC Alc. Bev. Serial No.",RcvDateTime,
           UPSTransaction.FormatDateYYYYMMDD(TODAY) + UPSTransaction.FormatTime24HRMMSS(TIME))
      THEN ;

      SendPCConfig(
        '',UPSlinkMail."Reference No.",'serialNumISCBev',UPSlinkSetup."ISC Alc. Bev. Serial No.",
        ConfigMailMsgSection::Installation,ConfigMailMsgType::Set);

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE UpdateUPSRoutingCodes@1240030000(UPSlinkMail@1240030001 : Record 14050006;MailFileFolder@1240030016 : Text[250];RcvDateTime@1240030000 : Text[14]) : Boolean;
    VAR
      UPSRouting@1240030010 : Record 14000769;
      UPSTransaction@1240030013 : Codeunit 14050001;
      UPSInputFile@1240030009 : File;
      Textline@1240030008 : Text[250];
      i@1240030007 : Integer;
      CommaPos@1240030006 : Integer;
      URCVersion@1240030002 : Code[20];
      URCDate@1240030011 : Code[10];
      ConfigMailMsgType@1240030015 : 'Create,Set,Delete,Info,InfoDelete';
      ConfigMailMsgSection@1240030014 : 'Installation,Shipper,Workstation';
      ProgressWindow@1240030003 : Dialog;
      Timer@1240030004 : Time;
    BEGIN
      IF UPSlinkMail."Dist. Obj. Unzip FilePathName" = '' THEN
        EXIT;

      GetShippingSetup;
      GetUPSlinkSetup;

      UPSInputFile.TEXTMODE(TRUE);
      UPSInputFile.OPEN(UPSlinkMail."Dist. Obj. Unzip FilePathName");
      UPSInputFile.READ(Textline);
      Textline := DELCHR(Textline,'=','"');
      Textline := Textline + ',';

      URCVersion := SELECTSTR(4,Textline);
      IF COPYSTR(URCVersion,1,3) = 'URC' THEN
        URCVersion := COPYSTR(URCVersion,4);

      IF URCVersion = '' THEN
        ERROR(
          Text073 +
          Text071,UPSlinkMail."Dist. Obj. Unzip FilePathName");

      URCDate := SELECTSTR(5,Textline);

      IF URCDate = '' THEN
        ERROR(
          Text074 +
          Text071,UPSlinkMail."Dist. Obj. Unzip FilePathName");

      UPSRouting.DELETEALL;
      ShippingSetup."UPS Routing Version" := DELCHR(URCVersion,'=','"') + ' ' + DELCHR(URCDate,'=','"');
      ShippingSetup.MODIFY;

      ProgressWindow.OPEN(Text037);
      ProgressWindow.UPDATE(1,UPSlinkMail."Message Type");
      Timer := TIME;

      WHILE UPSInputFile.READ(Textline) <> 0 DO BEGIN
        UPSRouting.INIT;
        Textline := DELCHR(Textline,'=','"');
        Textline := Textline + ',';

        FOR i := 1 TO 4 DO BEGIN
          CommaPos := STRPOS(Textline,',');
          IF CommaPos <= 0 THEN
            ERROR(
              Text072 +
              Text071,UPSlinkMail."Dist. Obj. Unzip FilePathName");

          CASE i OF
            1:
              UPSRouting."Country Code" := COPYSTR(Textline,1,CommaPos - 1);
            2:
              UPSRouting."Min Zip Code" := COPYSTR(Textline,1,CommaPos - 1);
            3:
              UPSRouting."Max Zip Code" := COPYSTR(Textline,1,CommaPos - 1);
            4:
              UPSRouting."Routing Code" := COPYSTR(Textline,1,CommaPos - 1);
          END;
          Textline := COPYSTR(Textline,CommaPos + 1,STRLEN(Textline));
        END;

        IF UPSRouting."Min Zip Code" = '!!!!!!' THEN
          UPSRouting."Min Zip Code" := '';
        IF UPSRouting."Max Zip Code" = '!!!!!!' THEN
          UPSRouting."Max Zip Code" := '';

        UPSRouting.INSERT;
        IF TIME - Timer > 1000 THEN BEGIN
          Timer := TIME;
          ProgressWindow.UPDATE(2,UPSRouting."Routing Code");
        END;
      END;
      UPSInputFile.CLOSE;
      ProgressWindow.CLOSE;

      IF SendDistResponse(
           MailFileFolder,12,'002',UPSlinkMail."Distribution ID",'URC' +
           COPYSTR(
             ShippingSetup."UPS Routing Version",1,STRPOS(ShippingSetup."UPS Routing Version",' ')-1),
           RcvDateTime,UPSTransaction.FormatDateYYYYMMDD(TODAY) + UPSTransaction.FormatTime24HRMMSS(TIME))
      THEN ;

      SendPCConfig(
        '',UPSlinkMail."Reference No.",'URC','URC' +
        COPYSTR(ShippingSetup."UPS Routing Version",1,STRPOS(ShippingSetup."UPS Routing Version",' ')-1),
        ConfigMailMsgSection::Installation,ConfigMailMsgType::Set);

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE UpdatePaperlessInvCountries@1240030010(UPSlinkMail@1240030007 : Record 14050006;MailFileFolder@1240030005 : Text[250];RcvDateTime@1240030004 : Text[14]) : Boolean;
    VAR
      UPSlinkPaperlessInvCountry@1240030003 : Record 14050010;
      UPSTransaction@1240030009 : Codeunit 14050001;
      UPSInputFile@1240030001 : File;
      Textline@1240030002 : Text[250];
      i@1240030000 : Integer;
      PIVersion@1240030010 : Code[20];
      ConfigMailMsgType@1240030012 : 'Create,Set,Delete,Info,InfoDelete';
      ConfigMailMsgSection@1240030011 : 'Installation,Shipper,Workstation';
      commapos@1240030006 : Integer;
    BEGIN
      GetUPSlinkSetup;
      UPSInputFile.TEXTMODE(TRUE);
      UPSInputFile.OPEN(UPSlinkMail."Dist. Obj. Unzip FilePathName");
      UPSInputFile.READ(Textline);
      Textline := Textline + ',';
      Textline := DELCHR(Textline,'=','"');
      PIVersion := SELECTSTR(7,Textline);

      UPSlinkPaperlessInvCountry.DELETEALL;
      UPSlinkSetup."Paperless Inv. Country Version" := PIVersion;
      UPSlinkSetup.MODIFY;

      WHILE UPSInputFile.READ(Textline) <> 0 DO BEGIN
        Textline := Textline + ',';
        Textline := DELCHR(Textline,'=','"');
        UPSlinkPaperlessInvCountry.INIT;
        IF COPYSTR(Textline,1,2) = 'US' THEN BEGIN
          FOR i := 1 TO 6 DO BEGIN
            commapos := STRPOS(Textline,',');
            IF commapos <= 0 THEN
              ERROR(
                Text072 +
                Text071,UPSlinkMail."Dist. Obj. Unzip FilePathName");

            CASE i OF
              3:
                UPSlinkPaperlessInvCountry."Destination Country Code" :=
                  DELCHR(COPYSTR(Textline,1,commapos - 1),'>');
              4:
                UPSlinkPaperlessInvCountry."Destination Country Name" :=
                  DELCHR(COPYSTR(Textline,1,commapos - 1),'>');
              5:
                IF DELCHR(COPYSTR(Textline,1,commapos - 1), '>') = '1' THEN
                  UPSlinkPaperlessInvCountry."Paperless Invoice" := TRUE
                ELSE
                  UPSlinkPaperlessInvCountry."Paperless Invoice" := FALSE;
              6:
                IF DELCHR(COPYSTR(Textline,1,commapos - 1), '>') = '1' THEN
                  UPSlinkPaperlessInvCountry."Paperless NAFTA" := TRUE
                ELSE
                  UPSlinkPaperlessInvCountry."Paperless NAFTA" := FALSE;
            END;
            Textline := COPYSTR(Textline,commapos + 1,STRLEN(Textline));
          END;

          IF UPSlinkPaperlessInvCountry.INSERT THEN;
        END;
      END;

      UPSInputFile.CLOSE;

      IF SendDistResponse(
           MailFileFolder,21,'002',UPSlinkMail."Distribution ID",
           UPSlinkSetup."Paperless Inv. Country Version",RcvDateTime,
           UPSTransaction.FormatDateYYYYMMDD(TODAY) +
           UPSTransaction.FormatTime24HRMMSS(TIME))
      THEN ;

      SendPCConfig(
        '',UPSlinkMail."Reference No.",'paperlessDataVer',
        UPSlinkSetup."Paperless Inv. Country Version",
        ConfigMailMsgSection::Installation,ConfigMailMsgType::Set);

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE SendDistResponse@1240030003(MailFileFolder@1240030004 : Text[250];DistType@1240030000 : Integer;DistStatus@1240030001 : Code[3];DistID@1240030006 : Text[30];DistVersion@1240030005 : Text[30];DistRecvDateTime@1240030007 : Text[30];DistProcDateTime@1240030008 : Text[30]) : Boolean;
    VAR
      MailFile@1240030002 : File;
      MailFileName@1240030003 : Text[250];
      Subject@1240030009 : Text[30];
      Recipient@1240030010 : Text[30];
      UPSlinkMailSentLogFile@1240030011 : File;
      DistTypeText@1240030012 : Text[10];
    BEGIN
      GetUPSlinkSetup;
      MailFileName := MailFileFolder + 'PC_DIST_RESPONSE.txt';
      IF ERASE(MailFileName) THEN ;

      IF NOT UPSlinkSetup.Demo AND
         UPSlinkSetup."Set Registry Before OCX Call"
      THEN
        SetRegistryCommissioningValues;

      UPSlinkMailSentLogFile.TEXTMODE(TRUE);
      UPSlinkMailSentLogFile.WRITEMODE(TRUE);

      IF EXISTS(MailFileFolder + 'UPSlinkMailSentLog.txt') THEN BEGIN
        UPSlinkMailSentLogFile.OPEN(MailFileFolder + 'UPSlinkMailSentLog.txt');
        UPSlinkMailSentLogFile.SEEK(UPSlinkMailSentLogFile.LEN);
      END ELSE
        UPSlinkMailSentLogFile.CREATE(MailFileFolder + 'UPSlinkMailSentLog.txt');

      MailFile.TEXTMODE(TRUE);
      MailFile.WRITEMODE(TRUE);
      MailFile.CREATE(MailFileName);

      DistProcDateTime := PADSTR(DistProcDateTime,14,' ');
      DistID := PADSTR(DistID,10);
      DistVersion := PADSTR(DistVersion,10);
      DistTypeText := FORMAT(DistType);

      MailFile.WRITE(
        '0002' + DistID + DistRecvDateTime + DistProcDateTime + DistStatus + DistTypeText + DistVersion +
        'N');
      UPSlinkMailSentLogFile.WRITE(
        '0002' + DistID + DistRecvDateTime + DistProcDateTime + DistStatus + DistTypeText + DistVersion +
        'N');

      MailFile.CLOSE;
      UPSlinkMailSentLogFile.CLOSE;
      Subject := 'PC_DIST_RES';
      Recipient := 'UPS_DIST';

      IF NOT SendUPSMail(Subject,Recipient,MailFileName,UPSlinkSetup.Demo) THEN
        EXIT(FALSE);

      IF ERASE(MailFileName) THEN ;
      CLEAR(MailFile);
      EXIT(TRUE);
    END;

    PROCEDURE SendPCConfig@1240030004(No@1240030000 : Code[20];ReferenceNo@1240030014 : Text[30];ConfigParam@1240030015 : Text[30];ConfigValue@1240030016 : Text[30];MsgSection@1240030020 : 'Installation,Shipper,Workstation';MsgType@1240030019 : 'Create,Set,Delete,Info,InfoDelete') : Boolean;
    VAR
      MailFileName@1240030004 : Text[250];
      MailFile@1240030005 : File;
      TextLine@1240030006 : Text[100];
      MessageLength@1240030007 : Integer;
      MessageLengthCode@1240030008 : Code[8];
      i@1240030009 : Integer;
      j@1240030010 : Integer;
      UPSConfigEntry@1240030011 : Text[30];
      UPSMailboxID@1240030012 : Text[50];
      MailSubject@1240030002 : Text[30];
      MailRecipient@1240030003 : Text[30];
      EffectiveDate@1240030017 : Text[8];
      Workstation@1240030021 : Text[30];
      UPSlinkMailSentLogFile@1240030018 : File;
      Int1@1240030001 : Integer;
      Int2@1240030013 : Integer;
    BEGIN
      GetUPSlinkSetup;
      GetPackingStation;
      CarrierPackingStation.GetPackingStation(PackingStation);
      CarrierPackingStation.TESTFIELD("UPSlink Temp. Files Directory");

      IF NOT UPSlinkSetup.Demo AND
         UPSlinkSetup."Set Registry Before OCX Call"
      THEN
        SetRegistryCommissioningValues;

      IF COPYSTR(
           CarrierPackingStation."UPSlink Temp. Files Directory",
           STRLEN(CarrierPackingStation."UPSlink Temp. Files Directory"),1) <> '\'
      THEN
        CarrierPackingStation."UPSlink Temp. Files Directory" :=
          CarrierPackingStation."UPSlink Temp. Files Directory" + '\';

      MailFileName :=
        CarrierPackingStation."UPSlink Temp. Files Directory" + 'PC_CONFIG_INFO_' + No + '.txt';
      IF ERASE(MailFileName) THEN ;

      UPSlinkMailSentLogFile.TEXTMODE(TRUE);
      UPSlinkMailSentLogFile.WRITEMODE(TRUE);

      IF EXISTS(CarrierPackingStation."UPSlink Temp. Files Directory" + 'UPSlinkMailSentLog.txt')
      THEN BEGIN
        UPSlinkMailSentLogFile.OPEN(
          CarrierPackingStation."UPSlink Temp. Files Directory" + 'UPSlinkMailSentLog.txt');
        UPSlinkMailSentLogFile.SEEK(UPSlinkMailSentLogFile.LEN);
      END ELSE
        UPSlinkMailSentLogFile.CREATE(
          CarrierPackingStation."UPSlink Temp. Files Directory" + 'UPSlinkMailSentLog.txt');

      MailFile.TEXTMODE(TRUE);
      MailFile.WRITEMODE(TRUE);
      MailFile.CREATE(MailFileName);

      IF ConfigParam = '' THEN
        MessageLength := MessageLength + STRLEN(ConfigParam) + STRLEN(ConfigValue) + 4   // 2 CRLF
      ELSE
        MessageLength := MessageLength + STRLEN(ConfigParam) + STRLEN(ConfigValue) + 7;  // 3 CRLF + '='

      CASE MsgSection OF
        MsgSection::Installation:
          MessageLength := MessageLength + 14;
        MsgSection::Workstation:
        BEGIN
          Workstation :=  COPYSTR(ReferenceNo,STRPOS(ReferenceNo, 'WK') + 2,STRLEN(ReferenceNo) - 1);
          MessageLength := MessageLength + 14 + STRLEN(Workstation);
        END;
        MsgSection::Shipper:
          MessageLength := MessageLength + 10 + STRLEN(No);
      END;
      MessageLengthCode := FORMAT(MessageLength);

      FOR j := STRLEN(MessageLengthCode) TO MAXSTRLEN(MessageLengthCode) - 1 DO
        MessageLengthCode := '0' + MessageLengthCode;

      EffectiveDate := FORMAT(WORKDATE,8,'<Year4><Month,2><Day,2>');

      CASE MsgType OF
        MsgType::Create:
         TextLine := '0000Create         ' + EffectiveDate + 'INFO' + ReferenceNo;
        MsgType::Set:
        TextLine := '0000Set            ' + EffectiveDate + 'SET' + ReferenceNo;
        MsgType::Delete:
         TextLine := '0000InfoDelete     ' + EffectiveDate + 'DEL' + ReferenceNo;
        MsgType::Info:
         TextLine := '0000Info           ' + EffectiveDate + 'INFO' + ReferenceNo;
        MsgType::InfoDelete:
         TextLine := '0000InfoDelete     ' + EffectiveDate + 'IDEL' + ReferenceNo;
      END;

      TextLine := PADSTR(TextLine,42);
      UPSConfigEntry := 'MailboxID';
      UPSMailboxID := '';

      IF NOT UPSlinkSetup.Demo THEN
        IF NOT GetUPSlinkInfo('GetConfig',UPSConfigEntry,UPSMailboxID,Int1,Int2) THEN
          ERROR(Text068);

      TextLine := TextLine + UPSMailboxID;
      TextLine := PADSTR(TextLine,66);
      TextLine := TextLine + MessageLengthCode;

      CASE MsgSection OF
        MsgSection::Installation:
          TextLine := TextLine + '{installation}';
        MsgSection::Workstation:
          TextLine := TextLine + '{workstation=' + Workstation + '}';
        MsgSection::Shipper:
          TextLine := TextLine + '{shipper=' + No + '}';
      END;

      MailFile.WRITE(TextLine);

      IF ConfigParam <> '' THEN
        MailFile.WRITE(ConfigParam + '=' + ConfigValue);

      MailFile.WRITE('');

      UPSlinkMailSentLogFile.WRITE(TextLine);
      IF ConfigParam <> '' THEN
        UPSlinkMailSentLogFile.WRITE(ConfigParam + '=' + ConfigValue);
      UPSlinkMailSentLogFile.WRITE('');

      UPSlinkMailSentLogFile.CLOSE;
      MailFile.CLOSE;
      CLEAR(MailFile);

      MailSubject := 'PC_CONFIG_MSG';
      MailRecipient := 'UPS_CONFIG';

      IF SendUPSMail(MailSubject,MailRecipient,MailFileName,UPSlinkSetup.Demo) THEN
        EXIT(TRUE)
      ELSE
        MESSAGE(Text076);
    END;

    PROCEDURE ResetCommissioning@2();
    BEGIN
      GetUPSlinkSetup;

      IF NOT UPSlinkSetup.Demo THEN
        CASE UPSlinkSetup."UPSlink Integration" OF
          UPSlinkSetup."UPSlink Integration"::OCX:
            IF NOT UPSlinkCommMgt.Reset THEN
              ERROR(Text077);
          UPSlinkSetup."UPSlink Integration"::".NET Automation":
            IF NOT UPSlinkdotNetMgt.Reset THEN
              ERROR(Text077);
        END;

      UPSlinkSetup."PhoneList Version" := '';
      UPSlinkSetup."Mailbox ID" := '';
      UPSlinkSetup."UPSlink Password" := '';
      UPSlinkSetup.Commissioned := FALSE;
      UPSlinkSetup."Online Address Validation" := FALSE;
      UPSlinkSetup.MODIFY;

      IF ShippingAgentAccount.FIND('-') THEN
        REPEAT
          ShippingAgentAccount."Book No." := '';
          ShippingAgentAccount."Alternative Book No." := '';
          ShippingAgentAccount."Page No." := '00';

          ShippingAgentAccount."Basic Flex" := FALSE;
          ShippingAgentAccount."Expanded Flex" := FALSE;
          ShippingAgentAccount."TNT Flex" := FALSE;
          ShippingAgentAccount."Exchange Collect" := FALSE;

          ShippingAgentAccount."ISC Alcohol" := FALSE;
          ShippingAgentAccount."ISC Biological Substance" := FALSE;
          ShippingAgentAccount."ISC Perishables" := FALSE;
          ShippingAgentAccount."ISC Plants" := FALSE;
          ShippingAgentAccount."ISC Seeds" := FALSE;
          ShippingAgentAccount."ISC Special Exceptions" := FALSE;
          ShippingAgentAccount."ISC Tobacco" := FALSE;
          ShippingAgentAccount."Proactive Response" := FALSE;
          ShippingAgentAccount."Paperless Invoice" := FALSE;

          ShippingAgentAccount."Hundred Weight Tier" := '';
          ShippingAgentAccount."Check for Hundred Weight" := FALSE;
          ShippingAgentAccount."Dry Ice" := FALSE;
          ShippingAgentAccount."US48 Standard to Mexico" := FALSE;
          ShippingAgentAccount.Refrigeration := FALSE;
          ShippingAgentAccount."Returns Exchange" := FALSE;
          ShippingAgentAccount."Pack and Collect RS1 Box1" := FALSE;
          ShippingAgentAccount."Pack and Collect RS1 Box2" := FALSE;
          ShippingAgentAccount."Pack and Collect RS1 Box3" := FALSE;
          ShippingAgentAccount."Pack and Collect RS1 Box4" := FALSE;
          ShippingAgentAccount."Pack and Collect RS1 Box5" := FALSE;
          ShippingAgentAccount."Pack and Collect RS3 Box1" := FALSE;
          ShippingAgentAccount."Pack and Collect RS3 Box2" := FALSE;
          ShippingAgentAccount."Pack and Collect RS3 Box3" := FALSE;
          ShippingAgentAccount."Pack and Collect RS3 Box4" := FALSE;
          ShippingAgentAccount."Pack and Collect RS3 Box5" := FALSE;
          ShippingAgentAccount."Paperless NAFTA" := FALSE;
          ShippingAgentAccount."Express Freight Haz. Mat." := FALSE;
          ShippingAgentAccount."ISC Expr Freight Alcohol" := FALSE;
          ShippingAgentAccount."ISC Expr Freight Bio. Sub." := FALSE;
          ShippingAgentAccount."ISC Expr Freight Perishables" := FALSE;
          ShippingAgentAccount."ISC Expr Freight Plants" := FALSE;
          ShippingAgentAccount."ISC Expr Freight Seeds" := FALSE;
          ShippingAgentAccount."ISC Expr Freight Spec. Except." := FALSE;
          ShippingAgentAccount."ISC Expr Freight Tobacco" := FALSE;
          ShippingAgentAccount."Shipper Account Type" := '';
          ShippingAgentAccount."Pickup Plan Type" := '';
          ShippingAgentAccount."World Ease" := ShippingAgentAccount."World Ease"::" ";
          ShippingAgentAccount."Displayable Company Name" := FALSE;
          ShippingAgentAccount."Company Display Name" := ' ';
          ShippingAgentAccount."Direct Delivery Only" := FALSE;
          ShippingAgentAccount."Synchronized Delivery" := FALSE;
          ShippingAgentAccount.MODIFY;
        UNTIL ShippingAgentAccount.NEXT = 0;
    END;

    PROCEDURE CreateMaxiCode@6(Package@1240030000 : Record 14000701;ZipCode@1240030001 : Text[30];ISOCountryCodeClassCode@1240030002 : Text[9];tJulDayShip@1240030005 : Text[30];ShipmentID@1240030006 : Text[30];ShiptoCity@1240030007 : Text[30];ShiptoState@1240030008 : Text[30];ShiptoName@1240030009 : Text[35];ShiptoName2@1240030010 : Text[35];ShiptoAddress@1240030011 : Text[35];ShiptoAddress2@1240030012 : Text[35];ShiptoContact@1240030013 : Text[35];CallTagLabel@1240030044 : Boolean;ActualWeight@1240030015 : Decimal;VAR CodeOut@1240030014 : Text[250]);
    VAR
      UPSManifest@1240030037 : Record 14050007;
      UPSTransaction@1240030004 : Codeunit 14050001;
      ReturnCode@1240030016 : Integer;
      Zip@1240030017 : Text[30];
      State@1240030018 : Text[10];
      OrigCarrier@1240030019 : Text[10];
      Weight@1240030020 : Text[10];
      ShipmentNoOfX@1240030021 : Text[10];
      ParmText@1240030022 : Text[46];
      CompCityState@1240030023 : Boolean;
      char1@1240030041 : Char;
      GS@1240030024 : Char;
      RS@1240030025 : Char;
      CR@1240030026 : Char;
      Char20@1240030027 : Char;
      Char21@1240030028 : Char;
      UnderScore@1240030039 : Char;
      tGS@1240030029 : Text[1];
      tRS@1240030030 : Text[1];
      tCR@1240030031 : Text[1];
      tChar20@1240030032 : Text[1];
      tChar21@1240030033 : Text[1];
      i@1240030034 : Integer;
      j@1240030042 : Integer;
      k@1240030043 : Integer;
      zCodeOut@1240030036 : Text[250];
      AddressValidated@1240030038 : Boolean;
      TrackingNo@1240030045 : Text[30];
    BEGIN
      WITH Package DO BEGIN
        GetPackingStation;
        CarrierPackingStation.GetPackingStation(PackingStation);
        GetUPSlinkSetup;
        CarrierPackingStation.TESTFIELD("UPSlink Temp. Files Directory");

        IF COPYSTR(
          CarrierPackingStation."UPSlink Temp. Files Directory",
          STRLEN(CarrierPackingStation."UPSlink Temp. Files Directory"),1) <> '\'
        THEN
          CarrierPackingStation."UPSlink Temp. Files Directory" :=
            CarrierPackingStation."UPSlink Temp. Files Directory" + '\';

        TrackingNo := UPSTransaction.UPSTrackingNo("External Tracking No.");
        Zip := PADSTR(ZipCode,9,'0');
        State := ShiptoState;
        OrigCarrier := 'UPSN';

        Weight := STRSUBSTNO('%1',ROUND(ActualWeight,1,'>'));
        ShipmentNoOfX := STRSUBSTNO('%1/%2',"Package No.","Total Packages");
        CompCityState := TRUE;

        AddressValidated := FALSE;

        IF CallTagLabel THEN BEGIN
          IF CarrierPackingStation."CASS Validated Address" THEN
            AddressValidated := TRUE;
        END ELSE BEGIN
          UPSManifest.RESET;
          UPSManifest.SETCURRENTKEY(
            "Consignee Address1","Consignee Address2","Consignee City","Consignee State");
             UPSManifest.SETRANGE("Consignee Address1","Ship-to Address");
          UPSManifest.SETRANGE("Consignee Address2","Ship-to Address 2");
          UPSManifest.SETRANGE("Consignee City","Ship-to City");
          UPSManifest.SETRANGE("Consignee State","Ship-to State");
          UPSManifest.SETFILTER(
            "Consignee Postal Code",'%1|%2..%3',COPYSTR("Ship-to ZIP Code",1,5),
            COPYSTR("Ship-to ZIP Code",1,5) + '-0000',COPYSTR("Ship-to ZIP Code",1,5) + '-9999');

          IF UPSManifest.FIND('+') THEN
            IF UPSManifest."Address Validation Results" =
               UPSManifest."Address Validation Results"::Validated
            THEN
              AddressValidated := TRUE;
        END;

        ParmText :=
          ISOCountryCodeClassCode +
          PADSTR(TrackingNo,10) +
          PADSTR("Shipping Agent Account No.",6) +
          PADSTR(tJulDayShip,3) +
          COPYSTR(FORMAT(AddressValidated),1,1) +
          COPYSTR(FORMAT(UPSlinkSetup."UPS Label Cert. Submission"),1,1);

        ShiptoName := FixMaxiInput(ShiptoName);
        ShiptoAddress := FixMaxiInput(ShiptoAddress);
        ShiptoAddress2 := FixMaxiInput(ShiptoAddress2);
        ShiptoName2 := FixMaxiInput(ShiptoName2);
        ShiptoCity := FixMaxiInput(ShiptoCity);
        ShiptoState := FixMaxiInput(ShiptoState);
        ShiptoContact := FixMaxiInput(ShiptoContact);

        ReturnCode :=
          BuildMaxiStr(
            CodeOut,CarrierPackingStation."UPSlink Temp. Files Directory",Zip,OrigCarrier,ShipmentID,
            ShipmentNoOfX,Weight,ShiptoName,ShiptoAddress,ShiptoAddress2,ShiptoName2,ShiptoCity,
            ShiptoState,ShiptoContact,ParmText,CompCityState);

        IF ReturnCode = 0 THEN BEGIN
          CASE CarrierPackingStation."UPS Label Printer Type" OF
            CarrierPackingStation."UPS Label Printer Type"::Zebra:
              BEGIN
                GS := 29;
                RS := 30;
                Char20 := 20;
                Char21 := 21;
                CR := 13;
                UnderScore := 95;
                tGS[1] := GS;
                tRS[1] := RS;
                tChar20[1] := Char20;
                tChar21[1] := Char21;
                tCR[1] := CR;

                zCodeOut := COPYSTR(CodeOut,1,3);
                i := 3;

                WHILE i < STRLEN(CodeOut) DO BEGIN
                  i := i + 1;
                  CASE COPYSTR(CodeOut,i,1) OF
                    '^':
                      zCodeOut := zCodeOut + '^CC' + tChar20 + tChar20 + 'CC^';
                    '~':
                      zCodeOut := zCodeOut + '~CT' + tChar21 + tChar21 + 'CT~';
                    ELSE
                      BEGIN
                        char1 := CodeOut[i];

                        IF char1 IN [4,13,28,29,30,46] THEN BEGIN  // EOT CR FS GS RS .
                          j := 0;

                          WHILE char1 > 16 DO BEGIN
                           j := j + 1;
                           char1 := char1 - 16;
                          END;

                          k := char1;

                          IF k < 10 THEN
                            zCodeOut := zCodeOut + '_' + FORMAT(j) + FORMAT(k)
                          ELSE
                            CASE k OF
                              10:
                                zCodeOut := zCodeOut + '_' + FORMAT(j) + 'A';
                              11:
                                zCodeOut := zCodeOut + '_' + FORMAT(j) + 'B';
                              12:
                                zCodeOut := zCodeOut + '_' + FORMAT(j) + 'C';
                              13:
                                zCodeOut := zCodeOut + '_' + FORMAT(j) + 'D';
                              14:
                                zCodeOut := zCodeOut + '_' + FORMAT(j) + 'E';
                            END;
                        END ELSE
                          zCodeOut := zCodeOut + COPYSTR(CodeOut,i,1);
                      END;
                  END;
                END;

                CodeOut := zCodeOut;
                zCodeOut := COPYSTR(CodeOut,1,STRPOS(CodeOut,'_1D96') + 4);
                zCodeOut := zCodeOut + COPYSTR(CodeOut,STRPOS(CodeOut,'_1D1Z') + 3);
                CodeOut := zCodeOut;
              END;
            CarrierPackingStation."UPS Label Printer Type"::"Eltron Orion":
              BEGIN
                CR := 0;
                tCR[1] := CR;
                WHILE i < STRLEN(CodeOut) DO BEGIN
                  i := i + 1;
                  CASE COPYSTR(CodeOut,i,1) OF
                    tCR:
                      zCodeOut := zCodeOut + '\' + tCR;
                    '"':
                      zCodeOut := zCodeOut + '\"';
                    '''':
                      zCodeOut := zCodeOut + '\''';
                    '\':
                      zCodeOut := zCodeOut + '\\';
                    ELSE
                      zCodeOut := zCodeOut + COPYSTR(CodeOut,i,1);
                  END;
                END;
                CodeOut := zCodeOut;
              END;
          END;
        END ELSE
        CASE ReturnCode OF
          4:
            ERROR(
              CodeOut + Text114,ReturnCode,COPYSTR(ISOCountryCodeClassCode,1,3),
              FIELDCAPTION("Ship-to Country Code"));
          5:
            ERROR(CodeOut + Text116,ReturnCode,Package.FIELDCAPTION("Ship-to ZIP Code"),Zip);
          23:
            ERROR(CodeOut + Text125,ReturnCode,CarrierPackingStation."UPSlink Temp. Files Directory");
          28,29:
            ERROR(CodeOut + Text125,ReturnCode,CarrierPackingStation."UPSlink Temp. Files Directory");

          40:
            ERROR(
              CodeOut + Text117,ReturnCode,Package.FIELDCAPTION("Ship-to State"),ShiptoState,
              Package.FIELDCAPTION("External Tracking No."),TrackingNo,
              Package.FIELDCAPTION("Shipping Agent Account No."),"Shipping Agent Account No.");
          70400:
            ERROR(CodeOut);
          70401:
            ERROR(CodeOut);
          70402:
            ERROR(CodeOut);
          70403:
            ERROR(CodeOut);
          70404:
            ERROR(CodeOut);
          ELSE
            ERROR('%1 %2',CodeOut,ReturnCode);
        END;
      END;
    END;

    LOCAL PROCEDURE EraseUPSMailFile@11(MailFileName@1240030000 : Text[250]);
    VAR
      i@1240030001 : Integer;
      iText@1240030002 : Code[3];
      MailFileNameExt@1240030003 : Text[250];
    BEGIN
      MailFileName := MailFileName + '.';

      iText := '000';
      MailFileNameExt := MailFileName + iText;

      IF EXISTS(MailFileNameExt) THEN
        REPEAT
          IF ERASE(MailFileNameExt) THEN ;
          iText := INCSTR(iText);
          MailFileNameExt := MailFileName + iText;
        UNTIL (i > 999) OR NOT EXISTS(MailFileNameExt);
    END;

    LOCAL PROCEDURE GetShippingSetup@50();
    BEGIN
      IF NOT ShippingSetupRetrieved THEN BEGIN
        ShippingSetup.GET;
        ShippingSetupRetrieved := TRUE;
      END;
    END;

    LOCAL PROCEDURE GetUPSlinkSetup@1240030006();
    BEGIN
      IF UPSlinkSetup."Primary Account No." = '' THEN
        UPSlinkSetup.GET;
    END;

    LOCAL PROCEDURE GetPackingStation@1240030005();
    BEGIN
      IF PackingStation.Code = '' THEN
        PackingStation.GetPackingStation;
    END;

    LOCAL PROCEDURE GetMailLine@1240030008(VAR MailFile@1240030000 : File;VAR MailLine@1240030001 : Text[150];VAR Delimiter@1240030004 : Code[10];UPSlinkAppMsgId@1240030005 : Integer) : Boolean;
    VAR
      i@1240030002 : Integer;
      Char@1240030003 : Char;
    BEGIN
      IF UPSlinkAppMsgId = 51 THEN
        Delimiter := '*A';

      i := 1;
      CLEAR(MailLine);
      IF (MailFile.READ(Char)) = 0 THEN
        EXIT(FALSE);

      MailLine := MailLine + FORMAT(Char);
      REPEAT
        IF MailFile.READ(Char) = 0 THEN
          Char := 10
        ELSE
          IF (i < 150) AND (Char <> 10) AND (Char <> 13) THEN
            MailLine := MailLine + FORMAT(Char);
        i := i + 1;
      UNTIL
        (Char = 10) OR
        ((Delimiter <> '') AND
         (COPYSTR(MailLine,STRLEN(MailLine)-STRLEN(Delimiter) + 1,STRLEN(Delimiter)) = Delimiter));

      IF STRLEN(MailLine) > 0 THEN
        EXIT(TRUE)
      ELSE
        EXIT(FALSE);
    END;

    PROCEDURE GetNewZip@1240030012(VAR ValidationResponse@1240030011 : 'Yes,No,Update All,Skip All';VAR ErrText@1240030009 : Text[150];VAR Comment@1240030010 : Text[80];SourceType@1240030012 : Integer;SourceNo@1240030013 : Code[20];SourceCode@1240030001 : Code[10];Name@1240030014 : Text[50];Address@1240030002 : Text[50];Address2@1240030003 : Text[50];City@1240030004 : Text[50];County@1240030005 : Code[20];PostCode@1240030006 : Code[10];FirstReadDate@1240030000 : Date) NewZip : Code[20];
    VAR
      UPSManifest@1240030008 : Record 14050007;
      AddressValidationResultForm@1240030007 : Page 14050007;
    BEGIN
      UPSManifest.RESET;
      UPSManifest.SETCURRENTKEY(
        "Consignee Address1","Consignee Address2","Consignee City","Consignee State");
      UPSManifest.SETRANGE("Consignee Address1",Address);
      UPSManifest.SETRANGE("Consignee Address2",Address2);
      UPSManifest.SETRANGE("Consignee City",City);
      UPSManifest.SETRANGE("Consignee State",County);
      UPSManifest.SETFILTER(
        "Consignee Postal Code",'%1..',COPYSTR(DELCHR(PostCode,'=','-'),1,5));

      IF UPSManifest.FIND('+') THEN BEGIN
        CASE COPYSTR(Comment,37,2) OF
          '00':
            UPSManifest."Address Validation Results" :=
              UPSManifest."Address Validation Results"::Invalid;
          '01':
            BEGIN
              IF NOT (ValidationResponse IN
                      [ValidationResponse::"Skip All",ValidationResponse::"Update All"])
              THEN BEGIN
                CLEAR(AddressValidationResultForm);

                AddressValidationResultForm.SetSource(
                  SourceType,SourceNo,SourceCode,Name,Address,Address2,City,County,PostCode,
                  COPYSTR(PostCode,1,5) + '-' + COPYSTR(Comment,39,4));

                IF AddressValidationResultForm.RUNMODAL = ACTION::OK THEN
                  AddressValidationResultForm.GetValidationResponse(ValidationResponse)
                ELSE
                  ERROR(Text085);
              END;

              CASE ValidationResponse OF
                ValidationResponse::Yes,ValidationResponse::"Update All":
                  BEGIN
                    UPSManifest."Address Validation Results" :=
                    UPSManifest."Address Validation Results"::Validated;
                    UPSManifest."Address Validation Date" := FirstReadDate;
                    NewZip := COPYSTR(PostCode,1,5) + '-' + COPYSTR(Comment,39,4);
                  END;
                ValidationResponse::No,ValidationResponse::"Skip All":
                  BEGIN
                    UPSManifest."Address Validation Results" :=
                    UPSManifest."Address Validation Results"::"Validation Rejected";
                  END;
              END;
            END;
          '02':
            BEGIN
              UPSManifest."Address Validation Results" :=
                UPSManifest."Address Validation Results"::Validated;
              UPSManifest."Address Validation Date" := FirstReadDate;
            END;
        END;

        UPSManifest.MODIFY;
        Comment := Comment + ' ' + FORMAT(UPSManifest."Address Validation Results");
      END;
    END;

    PROCEDURE ApplyDistributedObject@1240030009(UPSlinkMail@1240030000 : Record 14050006);
    VAR
      ErrText@1240030001 : Text[250];
    BEGIN
      GetUPSlinkSetup;
      CheckUPSlinkInstall(UPSlinkSetup.Demo);

      GetPackingStation;
      CarrierPackingStation.GetPackingStation(PackingStation);
      IF COPYSTR(
           CarrierPackingStation."UPS Manifest Upload Directory",
           STRLEN(CarrierPackingStation."UPS Manifest Upload Directory"),1) <> '\'
      THEN
        CarrierPackingStation."UPS Manifest Upload Directory" :=
          CarrierPackingStation."UPS Manifest Upload Directory" + '\';

      UPSlinkMail.TESTFIELD("Object Distribution Type");
      UPSlinkMail.TESTFIELD("Distribution ID");
      UPSlinkMail.TESTFIELD("Reference No.");
      UPSlinkMail.TESTFIELD("First Read Date");
      UPSlinkMail.TESTFIELD("First Read Time");

      IF UPSlinkMail."Large Distributed Object" THEN
        UPSlinkdotNetMgt.LargeDistributedFile(UPSlinkMail,
        CarrierPackingStation."UPS Manifest Upload Directory");

      IF ApplyDistributedObject2(UPSlinkMail,CarrierPackingStation."UPS Manifest Upload Directory",ErrText)
      THEN BEGIN
        UPSlinkMail."Read and Processed" := TRUE;
        UPSlinkMail.MODIFY;
        DeleteAllMail;
      END ELSE
        ERROR(ErrText);
    END;

    PROCEDURE ApplyDistributedObject2@1240030036(VAR UPSlinkMail@1240030003 : Record 14050006;MailFileFolder@1240030008 : Text[250];ErrText@1240030010 : Text[250]) : Boolean;
    VAR
      UPSTransaction@1240030011 : Codeunit 14050001;
      DistFileName@1240030002 : Text[50];
      DistFileNamePath@1240030001 : Text[250];
      DistFileNameUnzip@1240030000 : Text[600];
      Zipped@1240030005 : Boolean;
      ZippedMulti@1240030004 : Boolean;
      RcvDateTime@1240030009 : Text[14];
      Window@1240030012 : Dialog;
      ReadandProcessed@1240030013 : Boolean;
    BEGIN
      IF NOT SetDistTypeFields(
        UPSlinkMail."Object Distribution Type",UPSlinkMail."Message Type",DistFileName,Zipped,
        ZippedMulti)
      THEN
        ERROR(Text057,UPSlinkMail.FIELDCAPTION("Entry No."),UPSlinkMail."Entry No.");

      Window.OPEN('#1################################################################################');
      Window.UPDATE(1,STRSUBSTNO(Text123,UPSlinkMail."Message Type"));

      DistFileName := UPSlinkMail."Distributed Object File Name";
      DistFileNamePath :=
        MailFileFolder + UPSlinkMail."File Name" + UPSlinkMail."Reference No." +
        DistFileName;

      RcvDateTime :=
        UPSTransaction.FormatDateYYYYMMDD(UPSlinkMail."First Read Date") +
        UPSTransaction.FormatTime24HRMMSS(UPSlinkMail."First Read Time");

      UPSlinkMail.CALCFIELDS("Distributed Object");
      IF UPSlinkMail."Distributed Object".HASVALUE THEN
        IF NOT EXISTS(DistFileNamePath) THEN
          UPSlinkMail.ExportDistributedObject(DistFileNamePath,FALSE);

      IF EXISTS(DistFileNamePath) THEN BEGIN
        IF Zipped THEN BEGIN
          Window.UPDATE(1,STRSUBSTNO(Text039,UPSlinkMail."Message Type",DistFileNamePath));
          DistFileNameUnzip := '';
          ErrText := '';

          IF ZippedMulti THEN BEGIN
            IF NOT UnZipMulti(MailFileFolder,DistFileNamePath,DistFileNameUnzip) THEN BEGIN
              MESSAGE(DistFileNameUnzip);
              ErrText := DistFileNameUnzip;
            END;
          END ELSE
            IF NOT UnZipFile(MailFileFolder,DistFileNamePath,DistFileNameUnzip) THEN BEGIN
              MESSAGE(DistFileNameUnzip);
              ErrText := DistFileNameUnzip;
            END;

          IF ErrText = '' THEN BEGIN
            IF STRLEN(DistFileNameUnzip) <= 250 THEN
              UPSlinkMail."Dist. Obj. Unzip FilePathName" := DistFileNameUnzip
            ELSE
              UPSlinkMail."Dist. Obj. Unzip FilePathName" := COPYSTR(DistFileNameUnzip,1,250);
          END;
        END;

        Window.UPDATE(1,STRSUBSTNO(Text033,UPSlinkMail."Message Type",DistFileNamePath));

        CASE UPSlinkMail."Object Distribution Type" OF
          11:
            IF PhoneListUpdate(UPSlinkMail,MailFileFolder,RcvDateTime) THEN
              ReadandProcessed := TRUE;
          12:
            IF UpdateUPSRoutingCodes(UPSlinkMail,MailFileFolder,RcvDateTime) THEN
              ReadandProcessed := TRUE;
          14:
            IF UpdatePortOfEntryTable(UPSlinkMail,MailFileFolder,RcvDateTime) THEN
              ReadandProcessed := TRUE;
          15:
            IF UpdateAlcBevTable(UPSlinkMail,MailFileFolder,RcvDateTime) THEN
              ReadandProcessed := TRUE;
          17:
            IF UpdateWWValidationData(UPSlinkMail,MailFileFolder,RcvDateTime) THEN
              ReadandProcessed := TRUE;
          19:
            ReadandProcessed := TRUE;
          21:
            IF UpdatePaperlessInvCountries(UPSlinkMail,MailFileFolder,RcvDateTime) THEN
              ReadandProcessed := TRUE;
          24:
            IF UpdatePeakSurcharge(UPSlinkMail,MailFileFolder,RcvDateTime) THEN
              ReadandProcessed := TRUE;
          25,26:
            IF UpdateUPSCalculationValues(UPSlinkMail,MailFileFolder,RcvDateTime) THEN
              ReadandProcessed := TRUE;
          27:
            IF Update3rdPartyBillToCountries(UPSlinkMail,MailFileFolder,RcvDateTime) THEN
              ReadandProcessed := TRUE;
          28:
            IF UpdateCommInvRemovalCtry(UPSlinkMail,MailFileFolder,RcvDateTime) THEN
              ReadandProcessed := TRUE;
          30:
            IF UpdateBillableWeightExemptCtry(UPSlinkMail,MailFileFolder,RcvDateTime) THEN
              ReadandProcessed := TRUE;
          31:
            IF UpdateTermsandConditions(UPSlinkMail,MailFileFolder,RcvDateTime,DistFileNameUnzip) THEN
              ReadandProcessed := TRUE;
        END;

        IF NOT ReadandProcessed THEN
          SendDistResponse(
            MailFileFolder,UPSlinkMail."Object Distribution Type",'003',UPSlinkMail."Distribution ID",
            '',RcvDateTime,'')
        ELSE
          EXIT(TRUE);
      END;
    END;

    PROCEDURE SetDistTypeFields@1240030033(VAR DistributionType@1240030005 : Integer;VAR MessageType@1240030000 : ' ,Phone List,Routing Code,Restricted Article,Shipper Config.,Addr. Val.,Air Commit,Paperless Invoice,WW Validation Data,Dim. Wt. Divisor,Letter Limit,3Party Bill-to Country,Comm. Inv. Removal Ctry,Billable Weight Exempt Ctry,Terms,Peak';VAR DistFileName@1240030001 : Text[50];VAR Zipped@1240030002 : Boolean;VAR ZippedMulti@1240030003 : Boolean) : Boolean;
    BEGIN
      Zipped := FALSE;
      ZippedMulti := FALSE;

      CASE DistributionType OF
        11:  // Phone List
          BEGIN
            MessageType := MessageType::"Phone List";
            DistFileName := '_PHONELIST' + '.txt';
          END;
        12:  // URC (UPS Routing Code)
          BEGIN
            MessageType := MessageType::"Routing Code";
            DistFileName := '_URC' + '.zip';
            Zipped := TRUE;
          END;
        14:  // POE (World Ease Port of Entry Table)
          BEGIN
            MessageType := 14050601;
            DistFileName := '_POE' + '.txt';
          END;
        15:  // Restricted Article (Alcoholic Beverage Table)
          BEGIN
            MessageType := MessageType::"Restricted Article";
            DistFileName := '_RESTRICTEDARTICLE' + '.txt';
          END;
        17:  // Worldwide Validation Data
          BEGIN
            MessageType := MessageType::"WW Validation Data";
            DistFileName := '_WWVal' + '.zip';
            Zipped := TRUE;
            ZippedMulti := TRUE;
          END;
        19:  // EARLY AM Commit - not used for UPSlink
          BEGIN
            MessageType := MessageType::" ";
            DistFileName := '_EARLYAM' + '.txt';
          END;
        21:  // Paperless Invoice Countries
          BEGIN
            MessageType := MessageType::"Paperless Invoice";
            DistFileName := '_PI' + '.zip';
            Zipped := TRUE;
          END;
        24:  //Peak Season Surcharge
          BEGIN
            MessageType := MessageType::Peak;
            DistFileName := '_PSS' + '.zip';
            Zipped := TRUE;
            ZippedMulti := TRUE;
          END;
        25:  // Dimensional Weight Divisors
          BEGIN
            MessageType := MessageType::"Dim. Wt. Divisor";
            DistFileName := '_DWT' + '.zip';
            Zipped := TRUE;
           END;
        26:  // UPS Letter Limits
          BEGIN
            MessageType := MessageType::"Letter Limit";
            DistFileName := '_LETTER_LIMIT' + '.zip';
            Zipped := TRUE;
           END;
        27:  // 3rd Party Bill-to Countries
          BEGIN
            MessageType := MessageType::"3Party Bill-to Country";
            DistFileName := '_3P_BILL_TO' + '.zip';
            Zipped := TRUE;
            ZippedMulti := TRUE;
           END;
        28:  //Commercial Invoice Removal Countries
          BEGIN
            MessageType := MessageType::"Comm. Inv. Removal Ctry";
            DistFileName := '_CIR' + '.zip';
            Zipped := TRUE;
            ZippedMulti := TRUE;
            END;
        30:  //Billable Weight Determination
          BEGIN
            MessageType := MessageType::"Billable Weight Exempt Ctry";
            DistFileName := '_BW' + '.zip';
            Zipped := TRUE;
            ZippedMulti := TRUE;
            END;
        31:  //Terms and Notification Information
          BEGIN
            MessageType := MessageType::Terms;
            DistFileName := '_TACA' + '.zip';
            Zipped := TRUE;
            ZippedMulti := TRUE;
          END;
        ELSE
          EXIT(FALSE);
      END;

      EXIT(TRUE);
    END;

    PROCEDURE ShipperAddress@1240030013(VAR i@1240030000 : Integer;VAR TextLine@1240030001 : ARRAY [100] OF Text[80];VAR MessageLength@1240030002 : Integer;ShippingAgentAccountNo@1240030004 : Code[20];IncludeShipperNumber@1240030003 : Boolean);
    VAR
      PackingStation2@1240030005 : Record 14000709;
      CarrierPackingStation2@1240030014 : Record 14000729;
      Address1@1240030006 : Text[50];
      Address2@1240030007 : Text[50];
      City@1240030008 : Text[50];
      State@1240030013 : Text[30];
      ZIPCode@1240030012 : Code[20];
      Contact@1240030009 : Text[50];
      ContactPhone@1240030010 : Text[30];
      CountryCode@1240030011 : Code[10];
    BEGIN
      GetPackingStation;
      CarrierPackingStation2.GetPackingStation(PackingStation);

      PackingStation2.RESET;
      PackingStation2.SETRANGE("Carrier Packing Station Code",CarrierPackingStation2.Code);
      PackingStation2.FIND('-');

      Address1 := PackingStation2."Ship-from Address";
      Address2 := PackingStation2."Ship-from Address2";
      City := PackingStation2."Ship-from City";
      State := PackingStation2."Ship-from State";
      ZIPCode := PackingStation2."Ship-from ZIP Code";
      Contact := PackingStation2."Ship-from Contact";
      ContactPhone := PackingStation2."Ship-from Phone No.";
      CountryCode := PackingStation2."Ship-from Country Code";

      IF PackingStation2.NEXT <> 0 THEN
        REPEAT
          PackingStation2.TESTFIELD("Ship-from Address",Address1);
          PackingStation2.TESTFIELD("Ship-from Address2",Address2);
          PackingStation2.TESTFIELD("Ship-from City",City);
          PackingStation2.TESTFIELD("Ship-from State",State);
          PackingStation2.TESTFIELD("Ship-from ZIP Code",ZIPCode);
          PackingStation2.TESTFIELD("Ship-from Contact",Contact);
          PackingStation2.TESTFIELD("Ship-from Phone No.",ContactPhone);
          PackingStation2.TESTFIELD("Ship-from Country Code",CountryCode);
        UNTIL PackingStation2.NEXT =0;

      IF PackingStation2."Ship-from Address" = '' THEN
        ERROR(Text126,PackingStation2.Code,PackingStation2.FIELDCAPTION("Ship-from Address"));

      IF PackingStation2."Ship-from City" = '' THEN
        ERROR(Text126,PackingStation2.Code,PackingStation2.FIELDCAPTION("Ship-from City"));

      IF PackingStation2."Ship-from Contact" = '' THEN
        ERROR(Text126,PackingStation2.Code,PackingStation2.FIELDCAPTION("Ship-from Contact"));

      IF PackingStation2."Ship-from Phone No." = '' THEN
        ERROR(Text126,PackingStation2.Code,PackingStation2.FIELDCAPTION("Ship-from Phone No."));

      IF PackingStation2."Ship-from ZIP Code" = '' THEN
        ERROR(Text126,PackingStation2.Code,PackingStation2.FIELDCAPTION("Ship-from ZIP Code"));

      IF PackingStation2."Ship-from Company" = '' THEN
        ERROR(Text126,PackingStation2.Code,PackingStation2.FIELDCAPTION("Ship-from Company"));

      IF PackingStation2."Ship-from State" = '' THEN
        ERROR(Text126,PackingStation2.Code,PackingStation2.FIELDCAPTION("Ship-from State"));

      i := i + 1;
      TextLine[i] := 'address1=' + PackingStation2."Ship-from Address";
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      IF PackingStation2."Ship-from Address2" <> '' THEN BEGIN
        i := i + 1;
        TextLine[i] := 'address2=' + PackingStation2."Ship-from Address2";
        MessageLength := MessageLength + STRLEN(TextLine[i]);
      END;

      i := i + 1;
      TextLine[i] := 'city=' + PackingStation2."Ship-from City";
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      i := i + 1;
      TextLine[i] := 'contact=' + PackingStation2."Ship-from Contact";
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      i := i + 1;
      TextLine[i] := 'contactPhone=' + PackingStation2."Ship-from Phone No.";
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      i := i + 1;
      TextLine[i] := 'country=US';
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      i := i + 1;
      TextLine[i] := 'postalCode=' + PackingStation2."Ship-from ZIP Code";
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      i := i + 1;
      TextLine[i] := 'shipperName=' + PackingStation2."Ship-from Company";
      MessageLength := MessageLength + STRLEN(TextLine[i]);

      IF IncludeShipperNumber THEN BEGIN
        i := i + 1;
        TextLine[i] := 'shipperNumber=' + UPSlinkSetup."Primary Account No.";
        MessageLength := MessageLength + STRLEN(TextLine[i]);
      END;

      i := i + 1;
      TextLine[i] := 'stateProv=' + PackingStation2."Ship-from State";
      MessageLength := MessageLength + STRLEN(TextLine[i]);
    END;

    PROCEDURE SetRegistryCommissioningValues@1240030014();
    BEGIN
      GetUPSlinkSetup;
      IF NOT(UPSlinkSetup.Demo) THEN BEGIN
        UPSlinkSetup.TESTFIELD("Mailbox ID");
        UPSlinkSetup.TESTFIELD("UPSlink Password");
      END;

      CASE UPSlinkSetup."UPSlink Integration" OF
        UPSlinkSetup."UPSlink Integration"::OCX:
          IF NOT UPSlinkCommMgt.SetRegistryCommissioningValues(
                   UPSlinkSetup."Mailbox ID",UPSlinkSetup."UPSlink Password")
          THEN
            ERROR(Text099);
        UPSlinkSetup."UPSlink Integration"::".NET Automation":
          IF NOT UPSlinkdotNetMgt.SetRegistryCommissioningValues(
                   UPSlinkSetup."Mailbox ID",UPSlinkSetup."UPSlink Password")
          THEN
            ERROR(Text099);
      END;
    END;

    PROCEDURE GetRegistryCommissioningValues@1240030015();
    VAR
      UPSConfigEntry@1240030000 : Text[30];
      CommissionStatus@1240030001 : Text[10];
      Int1@1240030002 : Integer;
      Int2@1240030003 : Integer;
    BEGIN
      GetUPSlinkSetup;

      UPSConfigEntry := 'CommissionStatus';
      IF NOT GetUPSlinkInfo('GetConfig',UPSConfigEntry,CommissionStatus,Int1,Int2) THEN
        ERROR(Text102);

      IF CommissionStatus <> '0' THEN
        ERROR(Text103);

      UPSlinkSetup."Mailbox ID" := GetMailboxID;

      UPSConfigEntry := 'Password';
      IF NOT GetUPSlinkInfo('GetConfig',UPSConfigEntry,UPSlinkSetup."UPSlink Password",Int1,Int2) THEN
        ERROR(Text102);

      UPSlinkSetup.MODIFY;
      MESSAGE(Text100);
    END;

    PROCEDURE ReCommission@1240030016();
    BEGIN
      IF NOT CONFIRM(Text101) THEN
        EXIT;

      ResetCommissioning;
      Commissioning;
    END;

    PROCEDURE CreateUPSlinkWorkFIles@1240030017();
    VAR
      UPSlinkMaxicodeETBLBINFile@1240030000 : Codeunit 14050005;
      UPSlinkMaxicdPOSTALDATFile@1240030001 : Codeunit 14050006;
      SEWECIDReportRDLC@1240020000 : Codeunit 14050605;
      NAVFileMgmt@1240020001 : Codeunit 419;
    BEGIN
      //UPSlinkMaxicodeETBLBINFile.RUN;
      //UPSlinkMaxicdPOSTALDATFile.RUN;
      //SEWECIDReportRDLC.RUN;
      //MESSAGE(Text104);

      PackingStation.GetPackingStation;
      CarrierPackingStation.GET(PackingStation."Carrier Packing Station Code");
      CarrierPackingStation.TESTFIELD("UPSlink Temp. Files Directory");

      IF COPYSTR(
           CarrierPackingStation."UPSlink Temp. Files Directory",
           STRLEN(CarrierPackingStation."UPSlink Temp. Files Directory"),1) <> '\'
      THEN
        CarrierPackingStation."UPSlink Temp. Files Directory" :=
          CarrierPackingStation."UPSlink Temp. Files Directory" + '\';

      IF NOT (NAVFileMgmt.ClientFileExists(CarrierPackingStation."UPSlink Temp. Files Directory" + 'POSTAL.DAT')) OR
         NOT (NAVFileMgmt.ClientFileExists(CarrierPackingStation."UPSlink Temp. Files Directory" + 'ETBL.BIN')) THEN
        ERROR(Text130,CarrierPackingStation."UPSlink Temp. Files Directory");
    END;

    PROCEDURE UpdateWWValidationData@1240030019(UPSlinkMail@1240030001 : Record 14050006;MailFileFolder@1240030016 : Text[250];RcvDateTime@1240030000 : Text[14]) : Boolean;
    VAR
      UPSTransaction@1240030013 : Codeunit 14050001;
      i@1240030007 : Integer;
      CommaCounter@1240020000 : Integer;
      ConfigMailMsgType@1240030015 : 'Create,Set,Delete,Info,InfoDelete';
      ConfigMailMsgSection@1240030014 : 'Installation,Shipper,Workstation';
      DistFileUnzip@1240030005 : Text[200];
      DistFileNamesUnzip@1240030002 : Text[300];
      UPSInputFile@1240030004 : File;
      Textline@1240030003 : Text[250];
    BEGIN
      GetUPSlinkSetup;

      DistFileNamesUnzip := UPSlinkMail."Dist. Obj. Unzip FilePathName" + ',';

      FOR i := 1 TO STRLEN(DistFileNamesUnzip) DO BEGIN
        IF DistFileNamesUnzip[i] = ',' THEN
          CommaCounter += 1;
      END;

      FOR i := 1 TO CommaCounter DO BEGIN  // Make sure Services file is processed first
        DistFileUnzip := SELECTSTR(i,DistFileNamesUnzip);
        IF UPPERCASE(DistFileUnzip) = 'SERVICES.CSV' THEN
          UpdateWWOrigDestValidation(MailFileFolder,DistFileUnzip,0,TRUE);
      END;

      FOR i := 1 TO CommaCounter DO BEGIN
        DistFileUnzip := SELECTSTR(i,DistFileNamesUnzip);
        CASE UPPERCASE(COPYSTR(DistFileUnzip,1,3)) OF
          'VER':
            BEGIN
              UPSInputFile.TEXTMODE(TRUE);
              UPSInputFile.OPEN(MailFileFolder + DistFileUnzip);
              UPSInputFile.READ(Textline);
              UPSlinkSetup."WW Validation Data Version" := Textline;
            END;
          'WV':  // 2009 Version of WWVal
            UPSlinkSetup."WW Validation Data Version" :=
              COPYSTR(DistFileUnzip,1,STRLEN(DistFileUnzip) - 4);
          'ACC':
            UpdateWWOrigDestValidation(MailFileFolder,DistFileUnzip,1,TRUE);
          'BIL':
            UpdateWWOrigDestValidation(MailFileFolder,DistFileUnzip,2,TRUE);
          'PAC':
            UpdateWWOrigDestValidation(MailFileFolder,DistFileUnzip,3,TRUE);
          'COM':
            UpdateWWCommit(MailFileFolder,DistFileUnzip);
          'BAS':
            BEGIN
              IF UPPERCASE(DistFileUnzip) = 'BASESERVICEVERIFICATION.TXT' THEN
                UpdateWWServiceVerification(MailFileFolder,DistFileUnzip);
              IF UPPERCASE(DistFileUnzip) = 'BASE_SERVICE_VERIFICATION_620.TXT' THEN
                UpdateWWServVerifEnhancement(MailFileFolder,DistFileUnzip);
            END;
          'COU':
            UpdateCountryCityList(MailFileFolder,DistFileUnzip);
        END;
      END;
      UPSlinkSetup.MODIFY;

      IF UPSlinkMail."Distribution ID" <> '' THEN BEGIN
        IF SendDistResponse(
             MailFileFolder,17,'002',UPSlinkMail."Distribution ID",
             UPSlinkSetup."WW Validation Data Version",RcvDateTime,
             UPSTransaction.FormatDateYYYYMMDD(TODAY) +
             UPSTransaction.FormatTime24HRMMSS(TIME))
        THEN ;

        SendPCConfig(
          '',UPSlinkMail."Reference No.",'versionNumSV',
          UPSlinkSetup."WW Validation Data Version",
          ConfigMailMsgSection::Installation,ConfigMailMsgType::Set);
      END;

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE UpdateWWOrigDestValidation@1240030021(MailFileFolder@1240030006 : Text[250];MailFileName@1240030009 : Text[100];ValidationType@1240030007 : Integer;Header@1240030008 : Boolean);
    VAR
      UPSlinkWWOrigDestValid@1240030005 : Record 14050011;
      ProgressWindow@1240030000 : Dialog;
      UPSInputFile@1240030004 : File;
      Textline@1240030003 : Text[250];
      i@1240030002 : Integer;
      CommaPos@1240030001 : Integer;
      Timer@1240030010 : Time;
    BEGIN
      UPSlinkWWOrigDestValid.SETRANGE("Validation Type",ValidationType);
      UPSlinkWWOrigDestValid.DELETEALL;

      UPSlinkWWOrigDestValid."Validation Type" := ValidationType;
      ProgressWindow.OPEN(Text037);
      ProgressWindow.UPDATE(1,UPSlinkWWOrigDestValid."Validation Type");
      Timer := TIME;

      UPSInputFile.TEXTMODE(TRUE);
      UPSInputFile.OPEN(MailFileFolder + MailFileName);
      IF Header THEN
        UPSInputFile.READ(Textline);

      WHILE UPSInputFile.READ(Textline) <> 0 DO BEGIN
        UPSlinkWWOrigDestValid.INIT;
        UPSlinkWWOrigDestValid."Validation Type" := ValidationType;
        Textline := DELCHR(Textline,'=','"');
        Textline := Textline + ',';

        FOR i := 1 TO 3 DO BEGIN
          CommaPos := STRPOS(Textline,',');
          IF CommaPos <= 0 THEN
            ERROR(
              Text072 +
              Text071,MailFileFolder + MailFileName);

          CASE i OF
            1:
              UPSlinkWWOrigDestValid."Origin Country Code" :=
                DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
            2:
              UPSlinkWWOrigDestValid."Destination Country Code" :=
                DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
            3:
              UPSlinkWWOrigDestValid."Validation Code Description" :=
                DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
          END;
          Textline := COPYSTR(Textline,CommaPos + 1,STRLEN(Textline));
        END;

      IF (COPYSTR(UPSlinkWWOrigDestValid."Origin Country Code",1,2) = 'US') OR
         (COPYSTR(UPSlinkWWOrigDestValid."Destination Country Code",1,2) = 'US')
      THEN BEGIN
          IF UPSlinkWWOrigDestValid."Validation Type" =
             UPSlinkWWOrigDestValid."Validation Type"::Service
          THEN
            UPSlinkWWOrigDestValid."Validation Code" :=
              ServiceCodeToServiceIndicator(UPSlinkWWOrigDestValid."Validation Code Description")
          ELSE
            UPSlinkWWOrigDestValid."Validation Code" :=
              UPSlinkWWOrigDestValid."Validation Code Description";

          IF UPSlinkWWOrigDestValid."Validation Code" <> '' THEN
            IF NOT((UPSlinkWWOrigDestValid."Destination Country Code" = 'CA') AND
              (UPSlinkWWOrigDestValid."Validation Code Description" = 'WWS'))
            THEN
              UPSlinkWWOrigDestValid.INSERT;
      END;
        IF TIME - Timer > 1000 THEN BEGIN
          Timer := TIME;
          ProgressWindow.UPDATE(2,UPSlinkWWOrigDestValid."Destination Country Code");
          ProgressWindow.UPDATE(3,UPSlinkWWOrigDestValid."Validation Code Description");
        END;
      END;
      UPSInputFile.CLOSE;
      ProgressWindow.CLOSE;
    END;

    LOCAL PROCEDURE UpdateWWServiceVerification@1240030018(MailFileFolder@1240030005 : Text[250];MailFileName@1240030007 : Text[100]);
    VAR
      UPSlinkWWServiceVerif@1240030006 : Record 14050012;
      UPSlinkWWOrigDestValid@1240030008 : Record 14050011;
      ProgressWindow@1240030000 : Dialog;
      UPSInputFile@1240030004 : File;
      Textline@1240030003 : Text[350];
      i@1240030002 : Integer;
      CommaPos@1240030001 : Integer;
      Timer@1240030009 : Time;
      WWValVersion@1240030010 : Code[10];
    BEGIN
      UPSlinkWWServiceVerif.DELETEALL;

      UPSlinkWWOrigDestValid.RESET;
      UPSlinkWWOrigDestValid.SETRANGE("Origin Country Code",'US48');
      UPSlinkWWOrigDestValid.SETRANGE(
        "Validation Type",UPSlinkWWOrigDestValid."Validation Type"::Service);

      ProgressWindow.OPEN(Text037);
      ProgressWindow.UPDATE(1,UPSlinkWWServiceVerif.TABLECAPTION);
      Timer := TIME;
      UPSInputFile.TEXTMODE(TRUE);
      UPSInputFile.OPEN(MailFileFolder + MailFileName);

      UPSInputFile.READ(Textline);
      IF COPYSTR(Textline,3,1) <> ',' THEN BEGIN
        WWValVersion := '2010';
        UPSInputFile.READ(Textline);
      END ELSE
        WWValVersion := '2009';

      REPEAT
        UPSlinkWWServiceVerif.INIT;
        Textline := DELCHR(Textline,'=','"');
        Textline := Textline + ',,';

        FOR i := 1 TO 7 DO BEGIN
          CommaPos := STRPOS(Textline,',');
          IF CommaPos <= 0 THEN
            ERROR(
              Text072 +
              Text071,MailFileFolder + MailFileName);
          CASE WWValVersion OF
            '2009':
              CASE i OF
                1:
                  UPSlinkWWServiceVerif."Destination Country Code" :=
                    DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
                2:
                  UPSlinkWWServiceVerif."UPS Service Code" := DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
                3:
                  UPSlinkWWServiceVerif."Destination ZIP Lower Limit" :=
                    DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
                4:
                  UPSlinkWWServiceVerif."Destination ZIP Upper Limit" :=
                    DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
                5:
                  UPSlinkWWServiceVerif."Destination County Name" :=
                    DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
                6:
                  UPSlinkWWServiceVerif."Destination City Name" :=
                    DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
              END;
            '2010':
              CASE i OF
                1:
                  UPSlinkWWServiceVerif."Destination Country Code" :=
                    DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
                2:
                  UPSlinkWWServiceVerif."UPS Service Code" :=
                    DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
                3:
                  UPSlinkWWServiceVerif."Movement Type" :=
                    DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
                4:
                  UPSlinkWWServiceVerif."Destination ZIP Lower Limit" :=
                    DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
                5:
                  UPSlinkWWServiceVerif."Destination ZIP Upper Limit" :=
                    DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
                6:
                  UPSlinkWWServiceVerif."Destination County Name" :=
                    DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
                7:
                  UPSlinkWWServiceVerif."Destination City Name" :=
                    DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
              END;
            END;
          Textline := COPYSTR(Textline,CommaPos + 1,STRLEN(Textline));
        END;

        UPSlinkWWServiceVerif."Service Indicator" :=
          ServiceCodeToServiceIndicator(UPSlinkWWServiceVerif."UPS Service Code");
        IF UPSlinkWWServiceVerif."Service Indicator" <> '' THEN BEGIN
          UPSlinkWWOrigDestValid.SETRANGE(
            "Destination Country Code",UPSlinkWWServiceVerif."Destination Country Code");;
          UPSlinkWWOrigDestValid.SETRANGE("Validation Code",UPSlinkWWServiceVerif."Service Indicator");
          IF UPSlinkWWOrigDestValid.FIND('-') THEN
            UPSlinkWWServiceVerif.INSERT;
        END;

        IF TIME - Timer > 1000 THEN BEGIN
          Timer := TIME;
          ProgressWindow.UPDATE(2,UPSlinkWWServiceVerif."Destination Country Code");
          ProgressWindow.UPDATE(
            3,
            STRSUBSTNO(
              '%1 %2',UPSlinkWWServiceVerif."UPS Service Code",
              UPSlinkWWServiceVerif."Destination ZIP Lower Limit"));
        END;
      UNTIL UPSInputFile.READ(Textline) = 0;

      UPSInputFile.CLOSE;
      ProgressWindow.CLOSE;
    END;

    LOCAL PROCEDURE UpdateWWCommit@1240030020(MailFileFolder@1240030000 : Text[250];MailFileName@1240030007 : Text[100]);
    VAR
      UPSlinKWorldwideCommit@1240030006 : Record 14050004;
      UPSlinkWWOrigDestValid@1240030001 : Record 14050011;
      ProgressWindow@1240030005 : Dialog;
      UPSInputFile@1240030004 : File;
      Textline@1240030003 : Text[250];
      i@1240030002 : Integer;
      Timer@1240030008 : Time;
    BEGIN
      UPSlinKWorldwideCommit.DELETEALL;
      UPSlinkWWOrigDestValid.RESET;
      UPSlinkWWOrigDestValid.SETRANGE("Origin Country Code",'US48');
      UPSlinkWWOrigDestValid.SETRANGE(
        "Validation Type",UPSlinkWWOrigDestValid."Validation Type"::Service);

      ProgressWindow.OPEN(Text037);
      ProgressWindow.UPDATE(1,MailFileName);
      Timer := TIME;
      UPSInputFile.TEXTMODE(TRUE);
      UPSInputFile.OPEN(MailFileFolder + MailFileName);

      WHILE UPSInputFile.READ(Textline) <> 0 DO BEGIN
        UPSlinKWorldwideCommit.INIT;
        UPSlinKWorldwideCommit."UPS Service Code" := DELCHR(COPYSTR(Textline,1,6),'>');
        UPSlinKWorldwideCommit."Destination Country Code" := COPYSTR(Textline,9,2);
        UPSlinKWorldwideCommit."Destination ZIP Lower Limit" := DELCHR(COPYSTR(Textline,11,10),'>');
        UPSlinKWorldwideCommit."Destination ZIP Upper Limit" := DELCHR(COPYSTR(Textline,21,10),'>');

        IF TIME - Timer > 1000 THEN BEGIN
          Timer := TIME;
          ProgressWindow.UPDATE(2,UPSlinKWorldwideCommit."Destination Country Code");
          ProgressWindow.UPDATE(
            3,
            STRSUBSTNO(
              '%1 %2',UPSlinKWorldwideCommit."UPS Service Code",
              UPSlinKWorldwideCommit."Destination ZIP Lower Limit"));
        END;

        IF COPYSTR(Textline,7,2) IN ['US','* '] THEN BEGIN
          UPSlinKWorldwideCommit."Destination Area" := DELCHR(COPYSTR(Textline,31,65),'>');
          EVALUATE(UPSlinKWorldwideCommit."Commit Time",COPYSTR(Textline,96,10));
          UPSlinKWorldwideCommit.Residential := COPYSTR(Textline,106,1);
          UPSlinKWorldwideCommit."Duty Assessible" := COPYSTR(Textline,107,1);
          UPSlinKWorldwideCommit."Saturday Delivery" := COPYSTR(Textline,108,1);

          UPSlinKWorldwideCommit."Service Indicator" :=
            ServiceCodeToServiceIndicator(UPSlinKWorldwideCommit."UPS Service Code");
          IF UPSlinKWorldwideCommit."Service Indicator" <> '' THEN BEGIN
            IF UPSlinKWorldwideCommit."Destination Country Code" = 'US' THEN
              UPSlinkWWOrigDestValid.SETRANGE("Destination Country Code",'US48')
            ELSE
              UPSlinkWWOrigDestValid.SETRANGE(
                "Destination Country Code",UPSlinKWorldwideCommit."Destination Country Code");
            UPSlinkWWOrigDestValid.SETRANGE(
              "Validation Code",UPSlinKWorldwideCommit."Service Indicator");
            IF UPSlinkWWOrigDestValid.FIND('-') THEN BEGIN
              i := i + 1;
              UPSlinKWorldwideCommit."Entry No." := i;
              UPSlinKWorldwideCommit.INSERT;
            END;
          END;
        END;
      END;
      UPSInputFile.CLOSE;
      ProgressWindow.CLOSE;
    END;

    LOCAL PROCEDURE UpdateUPSCalculationValues@1240030026(UPSlinkMail@1240030001 : Record 14050006;MailFileFolder@1240030016 : Text[250];RcvDateTime@1240030000 : Text[14]) : Boolean;
    VAR
      UPSCalculationValue@1240030010 : Record 14050015;
      UPSTransaction@1240030013 : Codeunit 14050001;
      UPSInputFile@1240030009 : File;
      Textline@1240030008 : Text[250];
      FullTextline@1240020001 : Text[250];
      CSV@1240020002 : ARRAY [8] OF Text[30];
      i@1240030007 : Integer;
      CommaPos@1240030006 : Integer;
      Loop@1240020000 : Integer;
      FileVersion@1240030002 : Code[20];
      ConfigMailMsgType@1240030015 : 'Create,Set,Delete,Info,InfoDelete';
      ConfigMailMsgSection@1240030014 : 'Installation,Shipper,Workstation';
      ProgressWindow@1240030003 : Dialog;
      CalculationType@1240030004 : 'Dim. Weight Divisor,Letter Weight Limit';
      ConfigVersionName@1240030005 : Text[30];
      Continue@1240020003 : Boolean;
    BEGIN
      GetUPSlinkSetup;

      UPSInputFile.TEXTMODE(TRUE);
      UPSInputFile.OPEN(UPSlinkMail."Dist. Obj. Unzip FilePathName");
      UPSInputFile.READ(Textline);
      Textline := DELCHR(Textline,'=','"');
      Textline := Textline + ',';

      CASE UPSlinkMail."Object Distribution Type" OF
        25:  // Dimensional Weight Divisors
          BEGIN
            ConfigVersionName := 'dimWeightDivVer';
            FileVersion := SELECTSTR(9,Textline);
          END;
        26:  // UPS Letter Limits
          BEGIN
            ConfigVersionName := 'ltrWgtThresholdVer';
            FileVersion := SELECTSTR(5,Textline);
          END;
      END;

      IF FileVersion = '' THEN
        ERROR(Text071,UPSlinkMail."Dist. Obj. Unzip FilePathName");

      UPSCalculationValue.RESET;

      CASE UPSlinkMail."Object Distribution Type" OF
        25:
          BEGIN
            UPSlinkSetup."Dim. Weight Divisor Version" := DELCHR(FileVersion,'=','"');
            CalculationType := CalculationType::"Dim. Weight Divisor";
            Loop := 8;
          END;
        26:
          BEGIN
            UPSlinkSetup."Letter Limits Version" := DELCHR(FileVersion,'=','"');
            CalculationType := CalculationType::"Letter Weight Limit";
            Loop := 4;
          END;
      END;

      UPSCalculationValue.SETRANGE(UPSCalculationValue."Calculation Type",CalculationType);
      UPSCalculationValue.DELETEALL;
      UPSlinkSetup.MODIFY;

      ProgressWindow.OPEN(Text037);
      ProgressWindow.UPDATE(1,CalculationType);

      WHILE UPSInputFile.READ(Textline) <> 0 DO BEGIN
        UPSCalculationValue.INIT;
        UPSCalculationValue."Calculation Type" := CalculationType;
        Textline := DELCHR(Textline,'=','"');
        Textline := Textline + ',';
        FullTextline := Textline;

        IF UPSlinkMail."Object Distribution Type" = 25 THEN BEGIN
          FOR i := 1 TO 8 DO BEGIN
            CommaPos := STRPOS(FullTextline,',');
            CSV[i] := COPYSTR(FullTextline,1,CommaPos - 1);
            FullTextline := COPYSTR(FullTextline,CommaPos + 1,STRLEN(FullTextline));
          END;
        END;

        FOR i := 1 TO Loop DO BEGIN
          CommaPos := STRPOS(Textline,',');
          Continue := FALSE;
          IF CommaPos <= 0 THEN
            ERROR(
              Text072 +
              Text071,UPSlinkMail."Dist. Obj. Unzip FilePathName");

          IF (UPSlinkMail."Object Distribution Type" = 25) AND
             (DELCHR(CSV[1],'>',' ') = 'US') AND
             (DELCHR(CSV[5],'>',' ') = 'E') AND
             (DELCHR(CSV[6],'>',' ') = '01')
          THEN
            Continue := TRUE;

          IF (UPSlinkMail."Object Distribution Type" = 26) OR Continue THEN BEGIN
            CASE i OF
              1:
                UPSCalculationValue."Country Code" := COPYSTR(Textline,1,CommaPos - 1);
              2:
                UPSCalculationValue."UPS Service Code" := COPYSTR(Textline,1,CommaPos - 1);
              3:
                UPSCalculationValue."Measurement Unit" := COPYSTR(Textline,1,CommaPos - 1);
              4:
                EVALUATE(UPSCalculationValue.Value,COPYSTR(Textline,1,CommaPos - 1));
              5:
                UPSCalculationValue."Movement Direction" := COPYSTR(Textline,1,CommaPos - 1);
              6:
                UPSCalculationValue."Rate Chart" := COPYSTR(Textline,1,CommaPos - 1);
              7:
                EVALUATE(UPSCalculationValue."Low Range",COPYSTR(Textline,1,CommaPos - 1));
              8:
                EVALUATE(UPSCalculationValue."High Range",COPYSTR(Textline,1,CommaPos - 1));
            END;
            Textline := COPYSTR(Textline,CommaPos + 1,STRLEN(Textline));
          END;
        END;
        IF Continue OR (UPSlinkMail."Object Distribution Type" = 26) THEN BEGIN
          IF UPSCalculationValue."UPS Service Code" <> '*' THEN
            UPSCalculationValue."Service Indicator" :=
              ServiceCodeToServiceIndicator(UPSCalculationValue."UPS Service Code")
          ELSE
            UPSCalculationValue."Service Indicator" := '*';

          IF (UPSCalculationValue."Service Indicator" <> '') AND
             (UPSCalculationValue."UPS Service Code" <> 'WWS') THEN
            UPSCalculationValue.INSERT;

          ProgressWindow.UPDATE(2,UPSCalculationValue."Country Code");
          ProgressWindow.UPDATE(3,UPSCalculationValue."UPS Service Code");
        END;
      END;

      UPSInputFile.CLOSE;
      ProgressWindow.CLOSE;

      IF SendDistResponse(
           MailFileFolder,UPSlinkMail."Object Distribution Type",'002',
           UPSlinkMail."Distribution ID",FileVersion,RcvDateTime,
           UPSTransaction.FormatDateYYYYMMDD(TODAY) + UPSTransaction.FormatTime24HRMMSS(TIME))
      THEN ;

      SendPCConfig(
        '',UPSlinkMail."Reference No.",ConfigVersionName,FileVersion,ConfigMailMsgSection::Installation,
        ConfigMailMsgType::Set);

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE Update3rdPartyBillToCountries@1240030027(UPSlinkMail@1240030010 : Record 14050006;MailFileFolder@1240030006 : Text[250];RcvDateTime@1240030008 : Text[14]) : Boolean;
    VAR
      UPSlinkWWOrigDestValid@1240030005 : Record 14050011;
      ProgressWindow@1240030000 : Dialog;
      UPSInputFile@1240030004 : File;
      Textline@1240030003 : Text[250];
      i@1240030002 : Integer;
      FileVersion@1240030007 : Text[30];
      UPSTransaction@1240030009 : Codeunit 14050001;
      ConfigMailMsgType@1240030012 : 'Create,Set,Delete,Info,InfoDelete';
      ConfigMailMsgSection@1240030011 : 'Installation,Shipper,Workstation';
      DistFileUnzip@1240030013 : Text[100];
      DistFileNamesUnzip@1240030014 : Text[250];
    BEGIN
      GetUPSlinkSetup;

      DistFileNamesUnzip := UPSlinkMail."Dist. Obj. Unzip FilePathName" + ',';
      DistFileUnzip := SELECTSTR(1,DistFileNamesUnzip);

      UPSlinkWWOrigDestValid.SETRANGE(
        "Validation Type",UPSlinkWWOrigDestValid."Validation Type"::"Bill-to Country");
      UPSlinkWWOrigDestValid.DELETEALL;

      ProgressWindow.OPEN(Text037);
      ProgressWindow.UPDATE(1,UPSlinkWWOrigDestValid."Validation Type"::"Bill-to Country");

      UPSlinkWWOrigDestValid.INIT;
      UPSlinkWWOrigDestValid."Validation Type" :=
        UPSlinkWWOrigDestValid."Validation Type"::"Bill-to Country";
      UPSlinkWWOrigDestValid."Origin Country Code" := 'US';

      UPSInputFile.TEXTMODE(TRUE);
      UPSInputFile.OPEN(MailFileFolder + DistFileUnzip);
      UPSInputFile.READ(Textline);

      Textline := DELCHR(Textline,'=','"');
      Textline := Textline + ',';
      FileVersion := SELECTSTR(2,Textline);

      WHILE UPSInputFile.READ(Textline) <> 0 DO BEGIN
        UPSlinkWWOrigDestValid."Validation Code" := DELCHR(Textline);
        UPSlinkWWOrigDestValid."Validation Code Description" := UPSlinkWWOrigDestValid."Validation Code";
        UPSlinkWWOrigDestValid.INSERT;
        ProgressWindow.UPDATE(2,UPSlinkWWOrigDestValid."Validation Code");
      END;

      UPSInputFile.CLOSE;
      ProgressWindow.CLOSE;

      SendDistResponse(
        MailFileFolder,27,'002',UPSlinkMail."Distribution ID",FileVersion,RcvDateTime,
        UPSTransaction.FormatDateYYYYMMDD(TODAY) + UPSTransaction.FormatTime24HRMMSS(TIME));

      SendPCConfig(
        '',UPSlinkMail."Reference No.",'3rdPartyDataVer',FileVersion,
        ConfigMailMsgSection::Installation,ConfigMailMsgType::Set);

      UPSlinkSetup."3Party Bill-to Country Version" := FileVersion;
      UPSlinkSetup.MODIFY;
      EXIT(TRUE);
    END;

    PROCEDURE UpdateTermsandConditions@1240020000(UPSlinkMail@1240020002 : Record 14050006;MailFileFolder@1240020001 : Text[250];RcvDateTime@1240020000 : Text[14];DistFileNameUnzip@1240020011 : Text[600]) : Boolean;
    VAR
      UPSlinkMail2@1240020018 : Record 14050006;
      UPSTransaction@1240020010 : Codeunit 14050001;
      i@1240020009 : Integer;
      ConfigMailMsgType@1240020008 : 'Create,Set,Delete,Info,InfoDelete';
      ConfigMailMsgSection@1240020007 : 'Installation,Shipper,Workstation';
      UPSInputFile@1240020004 : File;
      Textline@1240020003 : Text[250];
      DistFileNames@1240020013 : ARRAY [21] OF Text[30];
      CommaPosition@1240020012 : Integer;
      EntryNo@1240020021 : Integer;
    BEGIN
      GetUPSlinkSetup;
      DistFileNameUnzip += ',';

      FOR i := 1 TO 21 DO BEGIN
        IF STRPOS(DistFileNameUnzip,',') > 0 THEN BEGIN
          CommaPosition := STRPOS(DistFileNameUnzip,',');
          DistFileNames[i] := COPYSTR(DistFileNameUnzip,1,CommaPosition - 1);
          DistFileNameUnzip := COPYSTR(DistFileNameUnzip,CommaPosition+1,STRLEN(DistFileNameUnzip));
        END;
      END;

      FOR i := 1 TO 21 DO BEGIN
        IF STRLEN(DistFileNames[i]) > 11 THEN BEGIN
          IF UPPERCASE(COPYSTR(DistFileNames[i],20,3)) = 'ENU' THEN BEGIN
            UPSlinkMail2.RESET;
            UPSlinkMail2.LOCKTABLE;
            IF UPSlinkMail2.FINDLAST THEN BEGIN
              EntryNo := UPSlinkMail2."Entry No.";
              UPSlinkMail2.INIT;
              EntryNo := EntryNo + 1;
            END;
            UPSlinkMail2."Entry No." := EntryNo;
            UPSlinkMail2."Reference No." := UPSlinkMail."Reference No.";
            UPSlinkMail2."File Name" := 'Terms and Conditions';
            UPSlinkMail2."Deleted from UPS" := TRUE;
            UPSlinkMail2."Message Type" := UPSlinkMail2."Message Type"::Terms;
            UPSlinkMail2."Processed Date" := TODAY;
            UPSlinkMail2."Processed Time" := TIME;
            UPSlinkMail2."Processed By" := USERID;
            UPSlinkMail2."Host Config. Account No." := UPSlinkSetup."Primary Account No.";
            UPSlinkMail2."Large Distributed Object" := FALSE;
            UPSlinkMail2.ImportDistributedObject(MailFileFolder + DistFileNames[i],FALSE);
            UPSlinkMail2."Read and Processed" := TRUE;
            UPSlinkMail2."Enable Date" := TODAY;
            UPSlinkMail2."Object Distribution Type" := 0;
            UPSlinkMail2."Distributed Object File Name" := DistFileNames[i];
            UPSlinkMail2.INSERT(TRUE);
            COMMIT;

            UPSlinkMail2.ViewEmail(UPSlinkMail2."Entry No.");
          END;
        END;
      END;

      IF STRLEN(DistFileNames[i] ) = 11 THEN BEGIN
        IF UPPERCASE(COPYSTR(DistFileNames[i],1,3)) = 'VER' THEN BEGIN
          UPSInputFile.TEXTMODE(TRUE);
          UPSInputFile.OPEN(MailFileFolder + DistFileNames[i]);
          UPSInputFile.READ(Textline);
          UPSlinkSetup."Terms and Conditions Version" := Textline;
          UPSlinkSetup.MODIFY;
        END;
      END;

      IF UPSlinkMail."Distribution ID" <> '' THEN BEGIN
        IF SendDistResponse(
          MailFileFolder,31,'002',UPSlinkMail."Distribution ID",
          UPSlinkSetup."Terms and Conditions Version",RcvDateTime,
          UPSTransaction.FormatDateYYYYMMDD(TODAY) +
          UPSTransaction.FormatTime24HRMMSS(TIME))
        THEN ;

      SendPCConfig(
        '',UPSlinkMail."Reference No.",'shippingTermsDataVer',
        UPSlinkSetup."Terms and Conditions Version",
        ConfigMailMsgSection::Installation,ConfigMailMsgType::Set);
      END;

      EXIT(TRUE);
    END;

    PROCEDURE CheckUPSlinkInstall@1240030034(Demo@1240030000 : Boolean);
    VAR
      Text1@1240030001 : Text[30];
      Text2@1240030002 : Text[30];
      Int1@1240030003 : Integer;
      Int2@1240030004 : Integer;
    BEGIN
      GetUPSlinkSetup;
      IF Demo THEN
        EXIT;

      IF NOT GetUPSlinkInfo('GetVersionInfo',Text1,Text2,Int1,Int2) THEN
        ERROR(Text124);

      Text1 := 'CommissionStatus';
      IF GetUPSlinkInfo('GetConfig',Text1,Text2,Int1,Int2) THEN ;

      IF Text2 <> '0' THEN
        ERROR(Text124);
    END;

    LOCAL PROCEDURE ServiceCodeToServiceIndicator@1240030001(ServiceCode@1240030000 : Code[10]) : Code[10];
    BEGIN
      CASE ServiceCode OF
        '1DA':
          EXIT('01');
        '2DA':
          EXIT('02');
        'GND':
          EXIT('03');
        'XPR':
          EXIT('07');
        'XPD':
          EXIT('08');
        'STD':
          EXIT('11');
        '3DS':
          EXIT('12');
        '1DP':
          EXIT('13');
        '1DM':
          EXIT('15');
        'XDM':
          EXIT('54');
        '2DM':
          EXIT('59');
        'WXS':
          EXIT('04');
        'WWS':
          EXIT('11');
        'WXP':
          EXIT('E1');
      END;
    END;

    PROCEDURE FixMaxiInput@1240030022(InputText@1240030000 : Text[250]) FixedInputText : Text[250];
    VAR
      char1@1240030002 : Char;
      i@1240030001 : Integer;
    BEGIN
      WHILE i < STRLEN(InputText) DO BEGIN
        i := i + 1;
        char1 := InputText[i];

        IF (char1 > 31) AND  // excludes control chars
           (char1 < 123) AND // excludes INVALID chars, del char, brackets, and | ~
           NOT (char1 IN [34,36,39,40,41,42,59,60,61,62,63,64,91,92,93,94,95,96])  // "$'()*;<=>?@[\]^_`
        THEN
          IF char1 IN [33,37,43,44,58] THEN  // !%+,:
            FixedInputText := FixedInputText + ' '
          ELSE
            FixedInputText := FixedInputText + UPPERCASE(COPYSTR(InputText,i,1));
      END;

      EXIT(FixedInputText);
    END;

    PROCEDURE BuildMaxiStr@1240030024(VAR CodeOut@1240030014 : Text[250];UPSlinkTempFilesDirectory@1240030003 : Text[250];Zip@1240030019 : Text[30];OrigCarrier@1240030017 : Text[10];ShipmentID@1240030006 : Text[30];ShipmentNoOfX@1240030000 : Text[10];Weight@1240030001 : Text[10];ShiptoName@1240030002 : Text[35];ShiptoAddress@1240030009 : Text[35];ShiptoAddress2@1240030005 : Text[35];ShiptoName2@1240030010 : Text[35];ShiptoCity@1240030007 : Text[30];ShiptoState@1240030008 : Text[30];ShiptoContact@1240030013 : Text[35];ParmText@1240030012 : Text[46];CompCityState@1240030011 : Boolean) : Integer;
    BEGIN
      CASE UPSlinkSetup."UPSlink Integration" OF
        UPSlinkSetup."UPSlink Integration"::OCX:
          EXIT(
            UPSlinkCommMgt.BuildMaxiStr(
               CodeOut,UPSlinkTempFilesDirectory,Zip,OrigCarrier,ShipmentID,ShipmentNoOfX,Weight,ShiptoName,
               ShiptoAddress,ShiptoAddress2,ShiptoName2,ShiptoCity,ShiptoState,ShiptoContact,ParmText,
               CompCityState));
        UPSlinkSetup."UPSlink Integration"::".NET Automation":
          EXIT(
             UPSlinkdotNetMgt.BuildMaxiStr(
               CodeOut,UPSlinkTempFilesDirectory,Zip,OrigCarrier,ShipmentID,ShipmentNoOfX,Weight,ShiptoName,
               ShiptoAddress,ShiptoAddress2,ShiptoName2,ShiptoCity,ShiptoState,ShiptoContact,ParmText,
               CompCityState));
      END;
    END;

    PROCEDURE DeleteAllMail@1240030028();
    VAR
      UPSlinkMail@1240030003 : Record 14050006;
      MailRefList@1240030002 : Text[150];
      MailCount@1240030001 : Integer;
      MailFileEnd@1240030000 : Boolean;
      Window@1240030004 : Dialog;
      DeletedCount@1240030005 : Integer;
    BEGIN
      UPSlinkMail.RESET;
      UPSlinkMail.SETCURRENTKEY("Read and Processed","Duplicate Receipt","Reference No.");
      UPSlinkMail.SETRANGE("Read and Processed",TRUE);
      UPSlinkMail.SETRANGE("Duplicate Receipt",FALSE);
      UPSlinkMail.SETRANGE("Deleted from UPS",FALSE);

      IF UPSlinkMail.FIND('-') THEN BEGIN
        REPEAT
          MailRefList := '';
          MailCount := 0;
          REPEAT
            IF UPSlinkMail."Reference No." <> 'Commission' THEN BEGIN
              MailRefList := MailRefList + UPSlinkMail."Reference No." + ',';
              MailCount := MailCount + 1;
            END;
            IF UPSlinkMail.NEXT = 0 THEN
              MailFileEnd := TRUE;
          UNTIL (MailCount = 5) OR MailFileEnd;

          IF MailCount > 0 THEN BEGIN
            Window.OPEN(Text061);
            IF NOT UPSlinkSetup.Demo THEN BEGIN
              IF UPSlinkSetup."Set Registry Before OCX Call" THEN
                SetRegistryCommissioningValues;
              CASE UPSlinkSetup."UPSlink Integration" OF
                UPSlinkSetup."UPSlink Integration"::OCX:
                  DeletedCount := UPSlinkCommMgt.DeleteAllMail(MailRefList,MailCount);
                UPSlinkSetup."UPSlink Integration"::".NET Automation":
                  DeletedCount := UPSlinkdotNetMgt.DeleteAllMail(MailRefList,MailCount,
                    CarrierPackingStation."UPSlink Temp. Files Directory");
              END;
            END;
            Window.CLOSE;
          END;
        UNTIL MailFileEnd;

        IF DeletedCount > 0 THEN BEGIN
          UPSlinkMail.FIND('-');
          REPEAT
            UPSlinkMail."Deleted from UPS" := TRUE;
            UPSlinkMail."Deleted from UPS Date" := TODAY;
            UPSlinkMail."Deleted from UPS Time" := TIME;
            UPSlinkMail.MODIFY;
          UNTIL UPSlinkMail.NEXT = 0;
        END;
      END;
    END;

    PROCEDURE GetUPSlinkInfo@1240030023(InfoText@1240030004 : Text[30];VAR TextValue1@1240030003 : Text[30];VAR TextValue2@1240030002 : Text[30];VAR IntValue1@1240030001 : Integer;VAR IntValue2@1240030000 : Integer) : Boolean;
    BEGIN
      CASE UPSlinkSetup."UPSlink Integration" OF
        UPSlinkSetup."UPSlink Integration"::OCX:
          IF UPSlinkCommMgt.GetUPSlinkInfo(InfoText,TextValue1,TextValue2,IntValue1,IntValue2) THEN
            EXIT(TRUE);
        UPSlinkSetup."UPSlink Integration"::".NET Automation":
          IF UPSlinkdotNetMgt.GetUPSlinkInfo(InfoText,TextValue1,TextValue2,IntValue1,IntValue2) THEN
            EXIT(TRUE);
      END;
    END;

    PROCEDURE UnZipFile@1240030029(MailFileFolder@1240030002 : Text[200];DistFileNamePath@1240030001 : Text[250];VAR DistFileNameUnzip@1240030000 : Text[255]) : Boolean;
    BEGIN
      CASE UPSlinkSetup."UPSlink Integration" OF
        UPSlinkSetup."UPSlink Integration"::OCX:
          IF UPSlinkCommMgt.UnZipFile(MailFileFolder,DistFileNamePath,DistFileNameUnzip) THEN
            EXIT(TRUE);
        UPSlinkSetup."UPSlink Integration"::".NET Automation":
          IF UPSlinkdotNetMgt.UnZipFile(MailFileFolder,DistFileNamePath,DistFileNameUnzip) THEN BEGIN
            DistFileNameUnzip := MailFileFolder + DistFileNameUnzip;
            EXIT(TRUE);
          END;
      END;
    END;

    PROCEDURE UnZipMulti@1240030032(MailFileFolder@1240030002 : Text[200];DistFileNamePath@1240030001 : Text[250];VAR DistFileNameUnzip@1240030000 : Text[255]) : Boolean;
    BEGIN
      CASE UPSlinkSetup."UPSlink Integration" OF
        UPSlinkSetup."UPSlink Integration"::OCX:
          IF UPSlinkCommMgt.UnZipMulti(MailFileFolder,DistFileNamePath,DistFileNameUnzip) THEN
            EXIT(TRUE);
        UPSlinkSetup."UPSlink Integration"::".NET Automation":
          IF UPSlinkdotNetMgt.UnZipFile(MailFileFolder,DistFileNamePath,DistFileNameUnzip) THEN
            EXIT(TRUE);
      END;
    END;

    PROCEDURE UploadPld@1240030030(ManifestUploadDirectory@1240030000 : Text[250];UploadFileName@1240030003 : Text[250];PickupDateText@1240030020 : Text[8];PldSeqNumber@1240030007 : Text[15];URCFileName@1240030006 : Text[30];WVFileName@1240030005 : Text[30];VAR MailCount@1240030018 : Integer;VAR MailRefList@1240030012 : Text[250];VAR MailFileList@1240030011 : Text[250];VAR UPSlinkAppMsgID@1240030027 : Integer;VAR ServiceTierSuffix@1240030002 : Text[4];VAR LargeMailFile@1240030001 : ARRAY [25] OF Boolean) : Boolean;
    BEGIN
      CASE UPSlinkSetup."UPSlink Integration" OF
        UPSlinkSetup."UPSlink Integration"::OCX:
          IF UPSlinkCommMgt.UploadPld(
               ManifestUploadDirectory,UploadFileName,PickupDateText,PldSeqNumber,
               URCFileName,WVFileName,MailCount,MailRefList,MailFileList,UPSlinkAppMsgID)
          THEN
            EXIT(TRUE);
        UPSlinkSetup."UPSlink Integration"::".NET Automation":
          IF UPSlinkdotNetMgt.UploadPld(
               ManifestUploadDirectory,UploadFileName,PickupDateText,PldSeqNumber,
               URCFileName,WVFileName,MailCount,MailRefList,MailFileList,UPSlinkAppMsgID,
               ServiceTierSuffix,LargeMailFile)
          THEN
            EXIT(TRUE);
      END;
    END;

    PROCEDURE PhoneListUpdate@1240030031(UPSlinkMail@1240030007 : Record 14050006;MailFileFolder@1240030004 : Text[250];RcvDateTime@1240030000 : Text[14]) : Boolean;
    VAR
      UPSTransaction@1240030006 : Codeunit 14050001;
      ConfigMailMsgType@1240030009 : 'Create,Set,Delete,Info,InfoDelete';
      ConfigMailMsgSection@1240030008 : 'Installation,Shipper,Workstation';
      DistFileNamePath@1240030003 : Text[250];
      PhoneListVersion@1240030001 : Text[30];
    BEGIN
      DistFileNamePath :=
        MailFileFolder + UPSlinkMail."File Name" + UPSlinkMail."Reference No." +
        UPSlinkMail."Distributed Object File Name";

      CASE UPSlinkSetup."UPSlink Integration" OF
        UPSlinkSetup."UPSlink Integration"::OCX:
          IF NOT UPSlinkCommMgt.PhoneListUpdate(
                   MailFileFolder,DistFileNamePath,UPSlinkMail."Distribution ID",PhoneListVersion,
                   RcvDateTime)
          THEN
            EXIT(FALSE);
        UPSlinkSetup."UPSlink Integration"::".NET Automation":
          IF NOT UPSlinkdotNetMgt.PhoneListUpdate(
                   MailFileFolder,DistFileNamePath,UPSlinkMail."Distribution ID",PhoneListVersion,
                   RcvDateTime)
          THEN
            EXIT(FALSE);
      END;

      SendDistResponse(
        MailFileFolder,11,'002',UPSlinkMail."Distribution ID",PhoneListVersion,RcvDateTime,
        UPSTransaction.FormatDateYYYYMMDD(TODAY) +
        UPSTransaction.FormatTime24HRMMSS(TIME));

      SendPCConfig(
        '',UPSlinkMail."Reference No.",'iccPhonelistVersion',PhoneListVersion,
        ConfigMailMsgSection::Installation,ConfigMailMsgType::Set);

      UPSlinkSetup."PhoneList Version" := PhoneListVersion;
      UPSlinkSetup.MODIFY;
      EXIT(TRUE);
    END;

    PROCEDURE SendUPSMail@1240030025(Subject@1240030004 : Text[30];Recipient@1240030001 : Text[30];MailFileName@1240030000 : Text[250];Demo@1240030002 : Boolean) : Boolean;
    BEGIN
      IF Demo THEN
        EXIT(TRUE);

      CASE UPSlinkSetup."UPSlink Integration" OF
        UPSlinkSetup."UPSlink Integration"::OCX:
          IF UPSlinkCommMgt.SendUPSMail(Subject,Recipient,MailFileName) THEN
            EXIT(TRUE);
        UPSlinkSetup."UPSlink Integration"::".NET Automation":
          IF UPSlinkdotNetMgt.SendUPSMail(Subject,Recipient,MailFileName) THEN
            EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE UpdateCommInvRemovalCtry@1240030035(UPSlinkMail@1240030002 : Record 14050006;MailFileFolder@1240030001 : Text[250];RcvDateTime@1240030000 : Text[14]) : Boolean;
    VAR
      UPSlinkWWOrigDestValid@1240030014 : Record 14050011;
      ProgressWindow@1240030013 : Dialog;
      UPSInputFile@1240030012 : File;
      Textline@1240030011 : Text[250];
      i@1240030010 : Integer;
      FileVersion@1240030008 : Text[30];
      UPSTransaction@1240030007 : Codeunit 14050001;
      ConfigMailMsgType@1240030006 : 'Create,Set,Delete,Info,InfoDelete';
      ConfigMailMsgSection@1240030005 : 'Installation,Shipper,Workstation';
      DistFileUnzip@1240030004 : Text[100];
      DistFileNamesUnzip@1240030003 : Text[250];
    BEGIN
      GetUPSlinkSetup;

      DistFileNamesUnzip := UPSlinkMail."Dist. Obj. Unzip FilePathName" + ',';
      DistFileUnzip := SELECTSTR(1,DistFileNamesUnzip);

      UPSlinkWWOrigDestValid.SETRANGE(
        "Validation Type",UPSlinkWWOrigDestValid."Validation Type"::"Comm. Inv. Removal Ctry");
      UPSlinkWWOrigDestValid.DELETEALL;

      ProgressWindow.OPEN(Text037);
      ProgressWindow.UPDATE(1,UPSlinkWWOrigDestValid."Validation Type"::"Comm. Inv. Removal Ctry");

      UPSlinkWWOrigDestValid.INIT;
      UPSlinkWWOrigDestValid."Validation Type" :=
        UPSlinkWWOrigDestValid."Validation Type"::"Comm. Inv. Removal Ctry";
      UPSlinkWWOrigDestValid."Origin Country Code" := 'US';

      UPSInputFile.TEXTMODE(TRUE);
      UPSInputFile.OPEN(MailFileFolder + DistFileUnzip);
      UPSInputFile.READ(Textline);

      Textline := DELCHR(Textline,'=','"');
      Textline := Textline + ',';
      FileVersion := SELECTSTR(2,Textline);

      WHILE UPSInputFile.READ(Textline) <> 0 DO BEGIN
        UPSlinkWWOrigDestValid."Destination Country Code" := DELCHR(Textline);
        UPSlinkWWOrigDestValid.INSERT;
        ProgressWindow.UPDATE(2,UPSlinkWWOrigDestValid."Destination Country Code");
      END;

      UPSInputFile.CLOSE;
      ProgressWindow.CLOSE;

      SendDistResponse(
        MailFileFolder,28,'002',UPSlinkMail."Distribution ID",FileVersion,RcvDateTime,
        UPSTransaction.FormatDateYYYYMMDD(TODAY) + UPSTransaction.FormatTime24HRMMSS(TIME));

      SendPCConfig(
        '',UPSlinkMail."Reference No.",'cirDataVer',FileVersion,
        ConfigMailMsgSection::Installation,ConfigMailMsgType::Set);

      UPSlinkSetup."Comm. Inv. Removal Ctry Ver." := FileVersion;
      UPSlinkSetup.MODIFY;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE UpdateBillableWeightExemptCtry@1240030037(UPSlinkMail@1240030002 : Record 14050006;MailFileFolder@1240030001 : Text[250];RcvDateTime@1240030000 : Text[14]) : Boolean;
    VAR
      UPSlinkWWOrigDestValid@1240030014 : Record 14050011;
      ProgressWindow@1240030013 : Dialog;
      UPSInputFile@1240030012 : File;
      Textline@1240030011 : Text[250];
      i@1240030010 : Integer;
      FileVersion@1240030008 : Text[30];
      UPSTransaction@1240030007 : Codeunit 14050001;
      ConfigMailMsgType@1240030006 : 'Create,Set,Delete,Info,InfoDelete';
      ConfigMailMsgSection@1240030005 : 'Installation,Shipper,Workstation';
      DistFileUnzip@1240030004 : Text[100];
      DistFileNamesUnzip@1240030003 : Text[250];
    BEGIN
      GetUPSlinkSetup;

      DistFileNamesUnzip := UPSlinkMail."Dist. Obj. Unzip FilePathName" + ',';
      DistFileUnzip := SELECTSTR(1,DistFileNamesUnzip);

      UPSlinkWWOrigDestValid.SETRANGE(
        "Validation Type",UPSlinkWWOrigDestValid."Validation Type"::"Billable Weight Exempt Ctry");
      UPSlinkWWOrigDestValid.DELETEALL;

      ProgressWindow.OPEN(Text037);
      ProgressWindow.UPDATE(1,UPSlinkWWOrigDestValid."Validation Type"::"Billable Weight Exempt Ctry");

      UPSlinkWWOrigDestValid.INIT;
      UPSlinkWWOrigDestValid."Validation Type" :=
        UPSlinkWWOrigDestValid."Validation Type"::"Billable Weight Exempt Ctry";
      UPSlinkWWOrigDestValid."Destination Country Code" := 'US';

      UPSInputFile.TEXTMODE(TRUE);
      UPSInputFile.OPEN(MailFileFolder + DistFileUnzip);
      UPSInputFile.READ(Textline);

      Textline := DELCHR(Textline,'=','"');
      Textline := Textline + ',';
      FileVersion := SELECTSTR(2,Textline);

      WHILE UPSInputFile.READ(Textline) <> 0 DO BEGIN
        UPSlinkWWOrigDestValid."Origin Country Code" := DELCHR(Textline);
        UPSlinkWWOrigDestValid.INSERT;
        ProgressWindow.UPDATE(2,UPSlinkWWOrigDestValid."Origin Country Code");
      END;

      UPSInputFile.CLOSE;
      ProgressWindow.CLOSE;

      SendDistResponse(
        MailFileFolder,30,'002',UPSlinkMail."Distribution ID",FileVersion,RcvDateTime,
        UPSTransaction.FormatDateYYYYMMDD(TODAY) + UPSTransaction.FormatTime24HRMMSS(TIME));

      SendPCConfig(
        '',UPSlinkMail."Reference No.",'countryExemptDataVer',FileVersion,
        ConfigMailMsgSection::Installation,ConfigMailMsgType::Set);

      UPSlinkSetup."Billable Wgt Ctry Exempt Ver." := FileVersion;
      UPSlinkSetup.MODIFY;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE UpdateWWServVerifEnhancement@1240030038(MailFileFolder@1240030001 : Text[250];MailFileName@1240030000 : Text[100]);
    VAR
      UPSlinkWWServiceVerif@1240030011 : Record 14050016;
      ProgressWindow@1240030008 : Dialog;
      UPSInputFile@1240030007 : File;
      Textline@1240030006 : Text[350];
      i@1240030005 : Integer;
      EntryNo@1240030012 : Integer;
      NextQuote@1240030009 : Integer;
      Timer@1240030003 : Time;
      WWValVersion@1240030002 : Code[10];
    BEGIN
      UPSlinkWWServiceVerif.DELETEALL;

      ProgressWindow.OPEN(Text037);
      ProgressWindow.UPDATE(1,UPSlinkWWServiceVerif.TABLECAPTION);
      Timer := TIME;
      UPSInputFile.TEXTMODE(TRUE);
      UPSInputFile.OPEN(MailFileFolder + MailFileName);

      UPSInputFile.READ(Textline);
      IF STRPOS(Textline,',') = 16 THEN BEGIN
        WWValVersion := '2011';
        UPSInputFile.READ(Textline);
      END;

      EntryNo := 0;

      REPEAT
        UPSlinkWWServiceVerif.INIT;
        Textline := Textline + ',,';
        EntryNo := EntryNo + 1;
        UPSlinkWWServiceVerif."Entry No." := EntryNo;

        FOR i := 1 TO 17 DO BEGIN
          IF STRPOS(Textline,'"') = 1 THEN
            Textline := COPYSTR(Textline,2,STRLEN(Textline));

          NextQuote := STRPOS(Textline,'"');

          IF NextQuote <= 0 THEN
            ERROR(
              Text072 +
              Text071,MailFileFolder + MailFileName);
          CASE WWValVersion OF
            '2011':
              CASE i OF
                1:
                  UPSlinkWWServiceVerif."Origin Country Code" :=
                    DELCHR(COPYSTR(Textline,1,NextQuote - 1),'>');
                2:
                  UPSlinkWWServiceVerif."Origin ZIP Lower Limit" :=
                    DELCHR(COPYSTR(Textline,1,NextQuote - 1),'>');
                3:
                  UPSlinkWWServiceVerif."Origin ZIP Upper Limit" :=
                    DELCHR(COPYSTR(Textline,1,NextQuote - 1),'>');
                4:
                  UPSlinkWWServiceVerif."Origin County Name" :=
                    DELCHR(COPYSTR(Textline,1,NextQuote - 1),'>');
                5:
                  UPSlinkWWServiceVerif."Origin City Name" :=
                    DELCHR(COPYSTR(Textline,1,NextQuote - 1),'>');
                6:
                  UPSlinkWWServiceVerif."Destination Country Code" :=
                    DELCHR(COPYSTR(Textline,1,NextQuote - 1),'>');
                7:
                  UPSlinkWWServiceVerif."Destination ZIP Lower Limit" :=
                    DELCHR(COPYSTR(Textline,1,NextQuote - 1),'>');
                8:
                  UPSlinkWWServiceVerif."Destination ZIP Upper Limit" :=
                    DELCHR(COPYSTR(Textline,1,NextQuote - 1),'>');
                9:
                  UPSlinkWWServiceVerif."Destination County Name" :=
                    DELCHR(COPYSTR(Textline,1,NextQuote - 1),'>');
                10:
                  UPSlinkWWServiceVerif."Destination City Name" :=
                    DELCHR(COPYSTR(Textline,1,NextQuote - 1),'>');
                11:
                  UPSlinkWWServiceVerif."UPS Service Code" :=
                    DELCHR(COPYSTR(Textline,1,NextQuote - 1),'>');
                12:
                  UPSlinkWWServiceVerif."Is Domestic" :=
                    DELCHR(COPYSTR(Textline,1,NextQuote - 1),'>');
                13:
                  UPSlinkWWServiceVerif."Is Not Domestic" :=
                    DELCHR(COPYSTR(Textline,1,NextQuote - 1),'>');
                14:
                  UPSlinkWWServiceVerif."Is Duty Assessable" :=
                    DELCHR(COPYSTR(Textline,1,NextQuote - 1),'>');
                15:
                  UPSlinkWWServiceVerif."Is Not Saturday Delivery" :=
                    DELCHR(COPYSTR(Textline,1,NextQuote - 1),'>');
                16:
                  UPSlinkWWServiceVerif."Is Saturday Delivery" :=
                    DELCHR(COPYSTR(Textline,1,NextQuote - 1),'>');
                17:
                  UPSlinkWWServiceVerif."Is Residential" :=
                    DELCHR(COPYSTR(Textline,1,NextQuote - 1),'>');
              END;
          END;
          Textline := COPYSTR(Textline,NextQuote+1,STRLEN(Textline));
          IF STRPOS(Textline,',') = 1 THEN
            Textline := COPYSTR(Textline,2,STRLEN(Textline));
        END;

        UPSlinkWWServiceVerif."Service Indicator" :=
          ServiceCodeToServiceIndicator(UPSlinkWWServiceVerif."UPS Service Code");
        IF UPSlinkWWServiceVerif."Service Indicator" <> '' THEN
            UPSlinkWWServiceVerif.INSERT;

        IF TIME - Timer > 1000 THEN BEGIN
          Timer := TIME;
          ProgressWindow.UPDATE(2,UPSlinkWWServiceVerif."Destination Country Code");
          ProgressWindow.UPDATE(
            3,
            STRSUBSTNO(
              '%1 %2',UPSlinkWWServiceVerif."UPS Service Code",
              UPSlinkWWServiceVerif."Destination ZIP Lower Limit"));
        END;

      UNTIL UPSInputFile.READ(Textline) = 0;

      UPSInputFile.CLOSE;
      ProgressWindow.CLOSE;
    END;

    LOCAL PROCEDURE UpdateCountryCityList@1240030039(MailFileFolder@1240030001 : Text[250];MailFileName@1240030000 : Text[100]);
    VAR
      UPSlinkCountryCityList@1240030012 : Record 14050017;
      ProgressWindow@1240030010 : Dialog;
      UPSInputFile@1240030009 : File;
      Textline@1240030008 : Text[350];
      i@1240030007 : Integer;
      NextQuote@1240030004 : Integer;
      Timer@1240030003 : Time;
    BEGIN
      UPSlinkCountryCityList.DELETEALL;

      ProgressWindow.OPEN(Text037);
      ProgressWindow.UPDATE(1,UPSlinkCountryCityList.TABLECAPTION);
      Timer := TIME;
      UPSInputFile.TEXTMODE(TRUE);
      UPSInputFile.OPEN(MailFileFolder + MailFileName);

      UPSInputFile.READ(Textline);
      UPSInputFile.READ(Textline);

      REPEAT
        UPSlinkCountryCityList.INIT;
        Textline := Textline + ',,';

        FOR i := 1 TO 2 DO BEGIN
          IF STRPOS(Textline,'"') = 1 THEN
            Textline := COPYSTR(Textline,2,STRLEN(Textline));

          NextQuote := STRPOS(Textline,'"');

          IF NextQuote <= 0 THEN
            ERROR(
              Text072 +
              Text071,MailFileFolder + MailFileName);
              CASE i OF
                1:
                  UPSlinkCountryCityList."Country Code" :=
                    DELCHR(COPYSTR(Textline,1,NextQuote - 1),'>');
                2:
                  UPSlinkCountryCityList."City Name" :=
                    DELCHR(COPYSTR(Textline,1,NextQuote - 1),'>');
              END;

          Textline := COPYSTR(Textline,NextQuote+1,STRLEN(Textline));
          IF STRPOS(Textline,',') = 1 THEN
            Textline := COPYSTR(Textline,2,STRLEN(Textline));
        END;

        UPSlinkCountryCityList.INSERT;

        IF TIME - Timer > 1000 THEN BEGIN
          Timer := TIME;
          ProgressWindow.UPDATE(2,UPSlinkCountryCityList."Country Code");
          ProgressWindow.UPDATE(
            3,
            STRSUBSTNO(
              '%1 %2',UPSlinkCountryCityList."Country Code",
              UPSlinkCountryCityList."City Name"));
        END;

      UNTIL UPSInputFile.READ(Textline) = 0;

      UPSInputFile.CLOSE;
      ProgressWindow.CLOSE;
    END;

    PROCEDURE UpdatePeakSurcharge@1240020006(UPSlinkMail@1240030001 : Record 14050006;MailFileFolder@1240030016 : Text[250];RcvDateTime@1240030000 : Text[14]) : Boolean;
    VAR
      UPSTransaction@1240030013 : Codeunit 14050001;
      i@1240030007 : Integer;
      ConfigMailMsgType@1240030015 : 'Create,Set,Delete,Info,InfoDelete';
      ConfigMailMsgSection@1240030014 : 'Installation,Shipper,Workstation';
      DistFileUnzip@1240030005 : Text[200];
      DistFileNamesUnzip@1240030002 : Text[300];
      UPSInputFile@1240030004 : File;
      Textline@1240030003 : Text[250];
    BEGIN
      GetUPSlinkSetup;

      DistFileNamesUnzip := UPSlinkMail."Dist. Obj. Unzip FilePathName" + ',';

      FOR i := 1 TO 3 DO BEGIN
        DistFileUnzip := SELECTSTR(i,DistFileNamesUnzip);
        CASE UPPERCASE(COPYSTR(DistFileUnzip,1,3)) OF
          'VER':
            BEGIN
              UPSInputFile.TEXTMODE(TRUE);
              UPSInputFile.OPEN(MailFileFolder + DistFileUnzip);
              UPSInputFile.READ(Textline);
              UPSlinkSetup."Peak Surcharge Version" := Textline;
            END;
        END;

        CASE UPPERCASE(COPYSTR(DistFileUnzip,20,3)) OF
          'DAT':
            BEGIN
              UPSInputFile.TEXTMODE(TRUE);
              UPSInputFile.OPEN(MailFileFolder + DistFileUnzip);
              UPSInputFile.READ(Textline);
              Textline := DELCHR(Textline,'=','"');
              Textline := Textline + ',';
              UPSlinkSetup."Peak Surcharge Date Range Ver." := SELECTSTR(9,Textline);
              UPSInputFile.CLOSE;
              UpdatePeakSurchargeDateRange(MailFileFolder,DistFileUnzip,0,TRUE);
            END;
          'RAT':
            BEGIN
              UPSInputFile.TEXTMODE(TRUE);
              UPSInputFile.OPEN(MailFileFolder + DistFileUnzip);
              UPSInputFile.READ(Textline);
              Textline := DELCHR(Textline,'=','"');
              Textline := Textline + ',';
              UPSlinkSetup."Peak Surcharge Rate Version" := SELECTSTR(19,Textline);
              UPSInputFile.CLOSE;
              UpdatePeakSurchargeRate(MailFileFolder,DistFileUnzip,1,TRUE);
            END;
        END;
      END;

      UPSlinkSetup.MODIFY;
      UPSInputFile.CLOSE;

      IF UPSlinkMail."Distribution ID" <> '' THEN BEGIN
        IF SendDistResponse(
             MailFileFolder,UPSlinkMail."Object Distribution Type",'002',UPSlinkMail."Distribution ID",
             UPSlinkSetup."Peak Surcharge Version",RcvDateTime,
             UPSTransaction.FormatDateYYYYMMDD(TODAY) +
             UPSTransaction.FormatTime24HRMMSS(TIME))
        THEN ;

        SendPCConfig(
          '',UPSlinkMail."Reference No.",'pssVer',
          UPSlinkSetup."Peak Surcharge Version",
          ConfigMailMsgSection::Installation,ConfigMailMsgType::Set);
      END;

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE UpdatePeakSurchargeDateRange@1240020002(MailFileFolder@1240030006 : Text[250];MailFileName@1240030009 : Text[100];DataType@1240030007 : Integer;Header@1240030008 : Boolean);
    VAR
      UPSlinkSurchargeData@1240030005 : Record 14050021;
      ProgressWindow@1240030000 : Dialog;
      UPSInputFile@1240030004 : File;
      Textline@1240030003 : Text[250];
      FullTextline@1240020003 : Text[250];
      DateStr@1240020000 : Text[30];
      CSV@1240020002 : ARRAY [8] OF Text[50];
      i@1240030002 : Integer;
      CommaPos@1240030001 : Integer;
      Timer@1240030010 : Time;
      Continue@1240020004 : Boolean;
    BEGIN
      UPSlinkSurchargeData.RESET;
      UPSlinkSurchargeData.SETRANGE(Type,DataType);
      UPSlinkSurchargeData.DELETEALL;

      ProgressWindow.OPEN(Text037);
      ProgressWindow.UPDATE(1,UPSlinkSurchargeData.Type);
      Timer := TIME;

      UPSInputFile.TEXTMODE(TRUE);
      UPSInputFile.OPEN(MailFileFolder + MailFileName);
      IF Header THEN
        UPSInputFile.READ(Textline);

      WHILE UPSInputFile.READ(Textline) <> 0 DO BEGIN
        UPSlinkSurchargeData.INIT;
        UPSlinkSurchargeData.Type := DataType;
        Textline := DELCHR(Textline,'=','"');
        Textline := Textline + ',';
        FullTextline := Textline;

        FOR i := 1 TO 8 DO BEGIN
          CommaPos := STRPOS(FullTextline,',');
          CSV[i] := COPYSTR(FullTextline,1,CommaPos - 1);
          FullTextline := COPYSTR(FullTextline,CommaPos + 1,STRLEN(FullTextline));
        END;

        FOR i := 1 TO 8 DO BEGIN
          CommaPos := STRPOS(Textline,',');
          Continue := FALSE;
          IF CommaPos <= 0 THEN
            ERROR(
              Text072 +
              Text071,MailFileFolder + MailFileName);

          IF (DELCHR(CSV[1],'>',' ') IN ['US','US48']) AND
             (DELCHR(CSV[3],'>',' ') = 'E')
          THEN
            Continue := TRUE;

          IF Continue THEN BEGIN
            CASE i OF
              1:
                UPSlinkSurchargeData."Origin Country Code" :=
                  DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
              2:
                UPSlinkSurchargeData."Destination Country Code" :=
                  DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
              3:
                UPSlinkSurchargeData."Movement Direction" :=
                  DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
              4:
                UPSlinkSurchargeData."Service Code" :=
                  DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
              5:
                UPSlinkSurchargeData."Accessorial Code" :=
                  DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
              6:
                UPSlinkSurchargeData."Calculation Method" :=
                  DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
              7:
                BEGIN
                  DateStr := DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
                  EVALUATE(UPSlinkSurchargeData."Start Date Range",
                    COPYSTR(DateStr,5,2)+COPYSTR(DateStr,7,2)+COPYSTR(DateStr,1,4));
                END;
              8:
                BEGIN
                  DateStr := DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
                  EVALUATE(UPSlinkSurchargeData."End Date Range",
                    COPYSTR(DateStr,5,2)+COPYSTR(DateStr,7,2)+COPYSTR(DateStr,1,4));
                END;
            END;
            Textline := COPYSTR(Textline,CommaPos + 1,STRLEN(Textline));
          END;
        END;

        IF Continue THEN BEGIN
          UPSlinkSurchargeData."Service Code Indicator" :=
            ServiceCodeToServiceIndicator(UPSlinkSurchargeData."Service Code");

          UPSlinkSurchargeData.INSERT;

          IF TIME - Timer > 1000 THEN BEGIN
            Timer := TIME;
            ProgressWindow.UPDATE(2,UPSlinkSurchargeData."Destination Country Code");
          END;
        END;
      END;
      UPSInputFile.CLOSE;
      ProgressWindow.CLOSE;
    END;

    LOCAL PROCEDURE UpdatePeakSurchargeRate@1240020004(MailFileFolder@1240030006 : Text[250];MailFileName@1240030009 : Text[100];DataType@1240030007 : Integer;Header@1240030008 : Boolean);
    VAR
      UPSlinkSurchargeData@1240030005 : Record 14050021;
      ProgressWindow@1240030000 : Dialog;
      UPSInputFile@1240030004 : File;
      Textline@1240030003 : Text[250];
      FullTextline@1240020003 : Text[250];
      DateStr@1240020000 : Text[30];
      CSV@1240020002 : ARRAY [18] OF Text[50];
      i@1240030002 : Integer;
      CommaPos@1240030001 : Integer;
      Timer@1240030010 : Time;
      Continue@1240020004 : Boolean;
    BEGIN
      UPSlinkSurchargeData.RESET;
      UPSlinkSurchargeData.SETRANGE(Type,DataType);
      UPSlinkSurchargeData.DELETEALL;

      ProgressWindow.OPEN(Text037);
      ProgressWindow.UPDATE(1,UPSlinkSurchargeData.Type);
      Timer := TIME;

      UPSInputFile.TEXTMODE(TRUE);
      UPSInputFile.OPEN(MailFileFolder + MailFileName);
      IF Header THEN
        UPSInputFile.READ(Textline);

      WHILE UPSInputFile.READ(Textline) <> 0 DO BEGIN
        UPSlinkSurchargeData.INIT;
        UPSlinkSurchargeData.Type := DataType;
        Textline := DELCHR(Textline,'=','"');
        Textline := Textline + ',';
        FullTextline := Textline;

        FOR i := 1 TO 18 DO BEGIN
          CommaPos := STRPOS(FullTextline,',');
          CSV[i] := COPYSTR(FullTextline,1,CommaPos - 1);
          FullTextline := COPYSTR(FullTextline,CommaPos + 1,STRLEN(FullTextline));
        END;

        FOR i := 1 TO 18 DO BEGIN
          CommaPos := STRPOS(Textline,',');
          Continue := FALSE;
          IF CommaPos <= 0 THEN
            ERROR(
              Text072 +
              Text071,MailFileFolder + MailFileName);

          IF (DELCHR(CSV[2],'>',' ') IN ['US','US48']) AND
             (DELCHR(CSV[6],'>',' ') = 'E') AND
             (DELCHR(CSV[18],'>',' ') = 'BSE')
          THEN
            Continue := TRUE;

          IF Continue THEN BEGIN
            CASE i OF
              1:
                UPSlinkSurchargeData."Accessorial Code" :=
                  DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
              2:
                UPSlinkSurchargeData."Origin Country Code" :=
                  DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
              3:
                UPSlinkSurchargeData."Destination Country Code" :=
                  DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
              4:
                UPSlinkSurchargeData."Service Code" :=
                  DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
              5:
                UPSlinkSurchargeData."Package Code" :=
                  DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
              6:
                UPSlinkSurchargeData."Movement Direction" :=
                  DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
              7:
                UPSlinkSurchargeData."Measurement Unit" :=
                  UPPERCASE(DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>'));
              8:
                UPSlinkSurchargeData."Accessorial Name" :=
                  DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
              9:
                UPSlinkSurchargeData."Calculation Method" :=
                  DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
              10:
                EVALUATE(UPSlinkSurchargeData."Start Weight Range",DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>'));
              11:
                EVALUATE(UPSlinkSurchargeData."End Weight Range",DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>'));
              12:
                BEGIN
                  EVALUATE(UPSlinkSurchargeData."Flat Rate",DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>'));
                  UPSlinkSurchargeData."Flat Rate" := UPSlinkSurchargeData."Flat Rate";
                END;
              13:
                BEGIN
                  EVALUATE(UPSlinkSurchargeData."Multiplier Rate",DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>'));
                  UPSlinkSurchargeData."Multiplier Rate" := UPSlinkSurchargeData."Multiplier Rate";
                END;
              14:
                BEGIN
                  EVALUATE(UPSlinkSurchargeData."Minimum Rate",DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>'));
                  UPSlinkSurchargeData."Minimum Rate" := UPSlinkSurchargeData."Minimum Rate";
                END;
              15:
                BEGIN
                  EVALUATE(UPSlinkSurchargeData."Maximum Rate",DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>'));
                  UPSlinkSurchargeData."Maximum Rate" := UPSlinkSurchargeData."Maximum Rate";
                END;
              16:
                BEGIN
                  DateStr := DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
                  EVALUATE(UPSlinkSurchargeData."Start Date Range",
                    COPYSTR(DateStr,5,2)+COPYSTR(DateStr,7,2)+COPYSTR(DateStr,1,4));
                END;
              17:
                BEGIN
                  DateStr := DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
                  EVALUATE(UPSlinkSurchargeData."End Date Range",
                    COPYSTR(DateStr,5,2)+COPYSTR(DateStr,7,2)+COPYSTR(DateStr,1,4));
                END;
            END;
            Textline := COPYSTR(Textline,CommaPos + 1,STRLEN(Textline));
          END;
        END;

        IF Continue THEN BEGIN
          UPSlinkSurchargeData."Service Code Indicator" :=
            ServiceCodeToServiceIndicator(UPSlinkSurchargeData."Service Code");

          UPSlinkSurchargeData.INSERT;

          IF TIME - Timer > 1000 THEN BEGIN
            Timer := TIME;
            ProgressWindow.UPDATE(2,UPSlinkSurchargeData."Destination Country Code");
          END;
        END;
      END;
      UPSInputFile.CLOSE;
      ProgressWindow.CLOSE;
    END;

    PROCEDURE CheckUPSlinkCommConfig@1240020001();
    BEGIN
      UPSlinkdotNetMgt.CheckUPSlinkCommConfig;
    END;

    PROCEDURE GetUPSFuelSurchargeData@1240020005(ForceUpdate@1240020017 : Boolean);
    VAR
      UPSlinkFuelSurcharge@1240020015 : Record 14050022;
      ServicePointMgr@1240020010 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Net.ServicePointManager";
      SecurityProtocolType@1240020009 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Net.SecurityProtocolType";
      XMLHTTPRequest@1240020008 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Net.HttpWebRequest";
      XMLHTTPResponse@1240020007 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Net.HttpWebResponse";
      UPSFuelSurchargeURL@1240020000 : Text[250];
      FSCFileName@1240020001 : Text[200];
      Subtext@1240020002 : Text[200];
      ResponseInstream@1240020003 : InStream;
      Response@1240020004 : BigText;
      FileOutstream@1240020005 : OutStream;
      FSCFile@1240020006 : File;
      EffectiveDate@1240020012 : Date;
      Update@1240020016 : Boolean;
      Stream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";
      StreamReader@1000000001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.StreamReader";
    BEGIN
      GetUPSlinkSetup;
      GetPackingStation;
      CarrierPackingStation.GetPackingStation(PackingStation);
      CarrierPackingStation.TESTFIELD("UPSlink Temp. Files Directory");

      UPSlinkFuelSurcharge.SETFILTER("Export Country",'US48');

      IF  ((UPSlinkSetup."Fuel Surcharge Updated Date" < TODAY) OR
           (UPSlinkSetup."Fuel Surcharge Updated Date" = 0D)) OR
          (UPSlinkSetup."Fuel Surcharge Effective Date" = 0D) OR
          (NOT(UPSlinkFuelSurcharge.FIND('-')))
      THEN
        Update := TRUE;

      IF Update THEN BEGIN
        IF ISNULL(XMLHTTPRequest) THEN
          XMLHTTPRequest := XMLHTTPRequest.HttpWebRequest;

        IF UPPERCASE(FORMAT(TODAY,0,'<Weekday Text>')) IN ['MONDAY','TUESDAY','WEDNESDAY'] THEN
          UPSFuelSurchargeURL := UPSlinkFuelSurcharge.Current
        ELSE
          UPSFuelSurchargeURL := UPSlinkFuelSurcharge.Previous;

        IF COPYSTR(
          CarrierPackingStation."UPSlink Temp. Files Directory",
          STRLEN(CarrierPackingStation."UPSlink Temp. Files Directory"),1) = '\'
        THEN
          CarrierPackingStation."UPSlink Temp. Files Directory" :=
            COPYSTR(CarrierPackingStation."UPSlink Temp. Files Directory", 1,
            STRLEN(CarrierPackingStation."UPSlink Temp. Files Directory") - 1);

        FSCFileName := CarrierPackingStation."UPSlink Temp. Files Directory" + '\FSC.txt';

        IF ERASE(FSCFileName) THEN ;
        FSCFile.TEXTMODE(TRUE);
        FSCFile.WRITEMODE(TRUE);
        FSCFile.CREATE(FSCFileName);
        FSCFile.CREATEOUTSTREAM(FileOutstream);

        ServicePointMgr.Expect100Continue := TRUE;
        ServicePointMgr.SecurityProtocol := SecurityProtocolType.Tls12;
        XMLHTTPRequest := XMLHTTPRequest.Create(UPSFuelSurchargeURL);
        XMLHTTPRequest.UseDefaultCredentials(FALSE);
        XMLHTTPRequest.ContentType := 'application/json';
        XMLHTTPRequest.Accept := 'application/json';
        XMLHTTPRequest.Method := 'GET';
        XMLHTTPResponse := XMLHTTPRequest.GetResponse;

        ResponseInstream := XMLHTTPResponse.GetResponseStream;
        //vaseem
        Stream := XMLHTTPResponse.GetResponseStream;
        StreamReader := StreamReader.StreamReader(Stream);
        Response.ADDTEXT(StreamReader.ReadToEnd);
        //vaseem
        //Response.READ(ResponseInstream);//vaseem
        Response.WRITE(FileOutstream);
        XMLHTTPResponse.Close;
        FSCFile.CLOSE;
        ImportUPSFuelSurcharges(FSCFileName);
      END;
    END;

    PROCEDURE ImportUPSFuelSurcharges@1240020003(FSCFilename@1240020015 : Text[200]);
    VAR
      UPSlinkFuelSurcharge@1240020000 : Record 14050022;
      UPSInputFile@1240020002 : File;
      Textline@1240020003 : Text[250];
      FullTextline@1240020004 : Text[250];
      CSV@1240020006 : ARRAY [7] OF Text[30];
      DateStr@1240020007 : Text[30];
      GetValue@1240020008 : Text[30];
      i@1240020009 : Integer;
      CommaPos@1240020010 : Integer;
      Header@1240020011 : Boolean;
      Continue@1240020012 : Boolean;
      UpdateEffectiveDate@1240020013 : Boolean;
    BEGIN
      UPSlinkFuelSurcharge.RESET;
      UPSlinkFuelSurcharge.DELETEALL;

      Header := TRUE;
      UPSInputFile.TEXTMODE(TRUE);
      UPSInputFile.OPEN(FSCFilename);
      IF Header THEN BEGIN
        UPSInputFile.READ(Textline);
        UPSInputFile.READ(Textline);
      END;

      WHILE UPSInputFile.READ(Textline) <> 1 DO BEGIN
        UPSlinkFuelSurcharge.INIT;
        Textline := DELCHR(Textline,'=',' "{}');
        Textline := CONVERTSTR(Textline,']',',');

        FullTextline := Textline;

        FOR i := 1 TO 7 DO BEGIN
          CommaPos := STRPOS(FullTextline,',');
          CSV[i] := COPYSTR(FullTextline,1,CommaPos - 1);
          CSV[i] := DELSTR(CSV[i],1,STRPOS(CSV[i],':'));
          FullTextline := COPYSTR(FullTextline,CommaPos + 1,STRLEN(FullTextline));
        END;


        FOR i := 1 TO 7 DO BEGIN
          CommaPos := STRPOS(Textline,',');
          Continue := FALSE;
          IF CommaPos <= 0 THEN
            ERROR('no data');

          IF (CSV[1] IN ['US','USAK','USHI','US48','DUMY']) AND    //Ship-from Country
             (CSV[3] = 'E') AND                                    //Export
             (CSV[5] = '01')                                       //Daily Rates
          THEN
            Continue := TRUE;

          IF Continue THEN BEGIN
            GetValue := DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
            GetValue := DELSTR(GetValue,1,STRPOS(GetValue,':'));

            CASE i OF
              1:
                UPSlinkFuelSurcharge."Export Country" := GetValue;
              2:
                UPSlinkFuelSurcharge."Import Country" := GetValue;
              4:
                 UPSlinkFuelSurcharge."Service Code" := GetValue;
              6:
                EVALUATE(UPSlinkFuelSurcharge."Surcharge Percent",GetValue);
              7:
                BEGIN
                  DateStr := DELCHR(COPYSTR(Textline,1,CommaPos - 1),'>');
                  EVALUATE(UPSlinkFuelSurcharge."Effective Date",
                    COPYSTR(GetValue,1,2)+COPYSTR(GetValue,4,2)+COPYSTR(GetValue,7,4));

                  IF NOT(UpdateEffectiveDate) THEN BEGIN
                     IF UPSlinkSetup.GET THEN BEGIN
                       UPSlinkSetup."Fuel Surcharge Effective Date" := UPSlinkFuelSurcharge."Effective Date";
                       UPSlinkSetup."Fuel Surcharge Updated Date" := TODAY;
                       UPSlinkSetup.MODIFY();
                       UpdateEffectiveDate := TRUE;
                     END;
                   END;
                END;
            END;
            Textline := COPYSTR(Textline,CommaPos + 1,STRLEN(Textline));
          END;
        END;

        IF Continue THEN BEGIN
          UPSlinkFuelSurcharge."Service Indicator" :=
            ServiceCodeToServiceIndicator(UPSlinkFuelSurcharge."Service Code");

          UPSlinkFuelSurcharge.INSERT();
        END;
      END;
      UPSInputFile.CLOSE;
    END;

    PROCEDURE UpdateUPSlinkCommSoftwareVersion@1240020007(ShowMessage@1240020007 : Boolean;AlwaysUpdateUPS@1240020008 : Boolean);
    VAR
      Text1@1240020003 : Text[10];
      Text2@1240020002 : Text[10];
      UPSlinkVersionMajor@1240020001 : Integer;
      UPSlinkVersionMinor@1240020000 : Integer;
      MsgType@1240020005 : 'Create,Set,Delete,Info,InfoDelete';
      MsgSection@1240020004 : 'Installation,Shipper,Workstation';
      VersionText@1240020006 : Text;
      VersionTextWithoutDecimal@1240020010 : Text;
      Update@1240020009 : Boolean;
    BEGIN
      GetUPSlinkSetup;
      UPSlinkSetup.TESTFIELD(Commissioned);

      IF NOT GetUPSlinkInfo('GetVersionInfo',Text1,Text2,UPSlinkVersionMajor,UPSlinkVersionMinor) THEN
        ERROR(Text004);

      IF UPSlinkVersionMinor <= 9 THEN BEGIN
        VersionText := FORMAT(UPSlinkVersionMajor) + '.0' + FORMAT(UPSlinkVersionMinor);
        VersionTextWithoutDecimal := FORMAT(UPSlinkVersionMajor) + '0' + FORMAT(UPSlinkVersionMinor);
      END ELSE BEGIN
        VersionText := FORMAT(UPSlinkVersionMajor) + '.' + FORMAT(UPSlinkVersionMinor);
        VersionTextWithoutDecimal := FORMAT(UPSlinkVersionMajor) + FORMAT(UPSlinkVersionMinor);
      END;

      IF ShowMessage THEN
        MESSAGE(Text131,
          UPSlinkSetup.FIELDCAPTION("UPS Comm. Software Version"),
          VersionText);

      IF UPSlinkSetup."UPS Comm. Software Version" <> VersionText THEN BEGIN
        UPSlinkSetup."UPS Comm. Software Version" :=
          VersionText;
        UPSlinkSetup.MODIFY;
        Update := TRUE;
      END;

      IF AlwaysUpdateUPS OR Update THEN
        SendPCConfig(
          UPSlinkSetup."Primary Account No.",
          UPSlinkSetup."Primary Account No." + VersionTextWithoutDecimal,
          'commSoftwareVersion',VersionText,
          MsgSection::Installation,MsgType::Set);
    END;

    LOCAL PROCEDURE UpdatePortOfEntryTable@14050601(UPSlinkMail@1240030012 : Record 14050006;MailFileFolder@1240030011 : Text[250];RcvDateTime@1240030009 : Text[14]) : Boolean;
    VAR
      PortOfEntry@1240030003 : Record 14050604;
      UPSTransaction@1240030000 : Codeunit 14050001;
      UPSInputFile@1240030001 : File;
      Textline@1240030002 : Text[300];
      i@1240030004 : Integer;
      CommaPos@1240030008 : Integer;
      ConfigMailMsgType@1240030014 : 'Create,Set,Delete,Info,InfoDelete';
      ConfigMailMsgSection@1240030013 : 'Installation,Shipper,Workstation';
      ProgressWindow@1240030015 : Dialog;
      EUMovement@1240030005 : Boolean;
      PortofEntryCode@1240020000 : Code[5];
    BEGIN
      GetUPSlinkSetup;

      UPSInputFile.TEXTMODE(TRUE);
      UPSInputFile.OPEN(
        MailFileFolder + UPSlinkMail."File Name" + UPSlinkMail."Reference No." +
        UPSlinkMail."Service Tier Suffix" + UPSlinkMail."Distributed Object File Name");
      UPSInputFile.READ(Textline);
      Textline := DELCHR(Textline,'=','"');
      Textline := Textline + ',';

      FOR i := 1 TO 17 DO BEGIN
        CommaPos := STRPOS(Textline,',');
        IF CommaPos <= 0 THEN
          ERROR(
            Text072 +
            Text071,UPSlinkMail."Distributed Object File Name");

        IF i = 17 THEN
          UPSlinkSetup."Port Of Entry Serial No." := COPYSTR(Textline,1,CommaPos - 1);
        Textline := COPYSTR(Textline,CommaPos + 1,STRLEN(Textline));
      END;

      IF UPSlinkSetup."Port Of Entry Serial No." = '' THEN
        ERROR(
          Text073 +
          Text071,UPSlinkMail."Dist. Obj. Unzip FilePathName");

      UPSlinkSetup.MODIFY;

      ProgressWindow.OPEN(Text037);
      ProgressWindow.UPDATE(1,PortOfEntry.TABLECAPTION);

      PortOfEntry.DELETEALL;

      WHILE UPSInputFile.READ(Textline) <> 0 DO BEGIN
        PortOfEntry.INIT;
        Textline := Textline + ',';
        Textline := DELCHR(Textline,'=','"');

        FOR i := 1 TO 15 DO BEGIN
          CommaPos := STRPOS(Textline,',');
          IF CommaPos <= 0 THEN
            ERROR(
              Text072 +
              Text071,UPSlinkMail."Dist. Obj. Unzip FilePathName");

          CASE i OF
            1:
              PortOfEntry."Shipping Agent Account No." := COPYSTR(Textline,1,CommaPos - 1);
            2:
              PortOfEntry."Service Level" := COPYSTR(Textline,1,CommaPos - 1);
            3:
              PortOfEntry."Dest. Country ISO 2 Char" := COPYSTR(Textline,1,CommaPos - 1);
            4:
              PortOfEntry."Dest. Postal Code High" := COPYSTR(Textline,1,CommaPos - 1);
            5:
              PortOfEntry."Dest. Postal Code Low" := COPYSTR(Textline,1,CommaPos - 1);
            6:
              IF COPYSTR(Textline,1,CommaPos - 1) = '1' THEN
                EUMovement := TRUE
              ELSE
                EUMovement := FALSE;
            7:
              IF COPYSTR(Textline,1,CommaPos - 1) = '1' THEN
                PortOfEntry.IsSatDel := TRUE
              ELSE
                PortOfEntry.IsSatDel := FALSE;
            8:
            BEGIN
              PortofEntryCode := COPYSTR(Textline,1,CommaPos - 1);
              PortOfEntry."Port Code" := PADSTR('',MAXSTRLEN(PortofEntryCode)-STRLEN(PortofEntryCode),'0') + PortofEntryCode;
            END;
            9:
              PortOfEntry."Port Name" := COPYSTR(Textline,1,CommaPos - 1);
            10:
              PortOfEntry."Port Consignee" := COPYSTR(Textline,1,CommaPos - 1);
            11:
              PortOfEntry."Port Address 1" := COPYSTR(Textline,1,CommaPos - 1);
            12:
              PortOfEntry."Port Address 2" := COPYSTR(Textline,1,CommaPos - 1);
            13:
              PortOfEntry."Port City" := COPYSTR(Textline,1,CommaPos - 1);
            14:
              PortOfEntry."Port State" := COPYSTR(Textline,1,CommaPos - 1);
            15:
              PortOfEntry."Port Post Code" := COPYSTR(Textline,1,CommaPos - 1);
            16:
              PortOfEntry."Port Country Code ISO 2 Char" := COPYSTR(Textline,1,CommaPos - 1);
          END;
          Textline := COPYSTR(Textline,CommaPos + 1,STRLEN(Textline));
        END;

        IF NOT EUMovement THEN
          IF NOT(PortOfEntry.INSERT) THEN;
      END;

      UPSInputFile.CLOSE;
      IF SendDistResponse(
           MailFileFolder,14,'002',UPSlinkMail."Distribution ID",
           UPSlinkSetup."Port Of Entry Serial No.",RcvDateTime,
           UPSTransaction.FormatDateYYYYMMDD(TODAY) + UPSTransaction.FormatTime24HRMMSS(TIME))
      THEN ;

      SendPCConfig(
        '',UPSlinkMail."Reference No.",'serialNumPOE',UPSlinkSetup."Port Of Entry Serial No.",
        ConfigMailMsgSection::Installation,ConfigMailMsgType::Set);

      EXIT(TRUE);
    END;

    PROCEDURE ImportPortOfEntryTable@14050602() : Boolean;
    VAR
      PortOfEntry@1240030003 : Record 14050604;
      FileMgmt@1240020001 : Codeunit 419;
      UPSInputFile@1240030001 : File;
      Textline@1240030002 : Text[300];
      DataFile@1240020002 : Text[250];
      ServerFilename@1240020003 : Text[250];
      i@1240030004 : Integer;
      CommaPos@1240030008 : Integer;
      ProgressWindow@1240030015 : Dialog;
      EUMovement@1240030005 : Boolean;
      PortofEntryCode@1240020000 : Code[5];
    BEGIN
      GetUPSlinkSetup;

      DataFile := FileMgmt.OpenFileDialog('Select Port of Entry file (.txt format).','','');
      ServerFilename := FileMgmt.UploadFileSilent(DataFile);

      UPSInputFile.TEXTMODE(TRUE);
      UPSInputFile.OPEN(ServerFilename);
      UPSInputFile.READ(Textline);
      Textline := DELCHR(Textline,'=','"');
      Textline := Textline + ',';

      FOR i := 1 TO 17 DO BEGIN
        CommaPos := STRPOS(Textline,',');
        IF CommaPos <= 0 THEN
          ERROR(
            Text072 +
            Text071,DataFile);

        Textline := COPYSTR(Textline,CommaPos + 1,STRLEN(Textline));
      END;

      ProgressWindow.OPEN(Text037);
      ProgressWindow.UPDATE(1,PortOfEntry.TABLECAPTION);

      PortOfEntry.DELETEALL;

      WHILE UPSInputFile.READ(Textline) <> 0 DO BEGIN
        PortOfEntry.INIT;
        Textline := Textline + ',';
        Textline := DELCHR(Textline,'=','"');

        FOR i := 1 TO 16 DO BEGIN
          CommaPos := STRPOS(Textline,',');
          IF CommaPos <= 0 THEN
            ERROR(
              Text072 +
              Text071,DataFile);

          CASE i OF
            1:
              PortOfEntry."Shipping Agent Account No." := COPYSTR(Textline,1,CommaPos - 1);
            2:
              PortOfEntry."Service Level" := COPYSTR(Textline,1,CommaPos - 1);
            3:
              PortOfEntry."Dest. Country ISO 2 Char" := COPYSTR(Textline,1,CommaPos - 1);
            4:
              PortOfEntry."Dest. Postal Code High" := COPYSTR(Textline,1,CommaPos - 1);
            5:
              PortOfEntry."Dest. Postal Code Low" := COPYSTR(Textline,1,CommaPos - 1);
            6:
              IF COPYSTR(Textline,1,CommaPos - 1) = '1' THEN
                EUMovement := TRUE
              ELSE
                EUMovement := FALSE;
            7:
              IF COPYSTR(Textline,1,CommaPos - 1) = '1' THEN
                PortOfEntry.IsSatDel := TRUE
              ELSE
                PortOfEntry.IsSatDel := FALSE;
            8:
            BEGIN
              PortofEntryCode := COPYSTR(Textline,1,CommaPos - 1);
              PortOfEntry."Port Code" := PADSTR('',MAXSTRLEN(PortofEntryCode)-STRLEN(PortofEntryCode),'0') + PortofEntryCode;
            END;
            9:
              PortOfEntry."Port Name" := COPYSTR(Textline,1,CommaPos - 1);
            10:
              PortOfEntry."Port Consignee" := COPYSTR(Textline,1,CommaPos - 1);
            11:
              PortOfEntry."Port Address 1" := COPYSTR(Textline,1,CommaPos - 1);
            12:
              PortOfEntry."Port Address 2" := COPYSTR(Textline,1,CommaPos - 1);
            13:
              PortOfEntry."Port City" := COPYSTR(Textline,1,CommaPos - 1);
            14:
              PortOfEntry."Port State" := COPYSTR(Textline,1,CommaPos - 1);
            15:
              PortOfEntry."Port Post Code" := COPYSTR(Textline,1,CommaPos - 1);
            16:
              PortOfEntry."Port Country Code ISO 2 Char" := COPYSTR(Textline,1,CommaPos - 1);
          END;
          Textline := COPYSTR(Textline,CommaPos + 1,STRLEN(Textline));
        END;

        IF NOT EUMovement THEN
          IF NOT(PortOfEntry.INSERT) THEN;
      END;

      UPSInputFile.CLOSE;
      EXIT(TRUE);
    END;

    PROCEDURE ImporterCountries@1240020010();
    VAR
      ImporterCountries@1240020000 : Record 14050023;
      CarrierPackingStation@1240020005 : Record 14000729;
      UPSFilename@1240020001 : Text;
      UPSInputFile@1240020002 : File;
      Textline@1240020003 : Text[250];
      FullTextline@1240020004 : Text[250];
      CSV@1240020006 : ARRAY [7] OF Text[30];
      DateStr@1240020007 : Text[30];
      GetValue@1240020008 : Text[30];
      i@1240020009 : Integer;
      CommaPos@1240020010 : Integer;
      Header@1240020011 : Boolean;
    BEGIN
      ImporterCountries.RESET;
      ImporterCountries.DELETEALL;


      GetUPSlinkSetup;
      GetPackingStation;
      CarrierPackingStation.GetPackingStation(PackingStation);
      CarrierPackingStation.TESTFIELD("UPSlink Temp. Files Directory");

      IF COPYSTR(
        CarrierPackingStation."UPSlink Temp. Files Directory",
        STRLEN(CarrierPackingStation."UPSlink Temp. Files Directory"),1) = '\'
      THEN
        CarrierPackingStation."UPSlink Temp. Files Directory" :=
          COPYSTR(CarrierPackingStation."UPSlink Temp. Files Directory", 1,
          STRLEN(CarrierPackingStation."UPSlink Temp. Files Directory") - 1);

      UPSFilename := CarrierPackingStation."UPSlink Temp. Files Directory" + '\importercountries.txt';

      UPSInputFile.TEXTMODE(TRUE);
      UPSInputFile.OPEN(UPSFilename);
      WHILE UPSInputFile.READ(Textline) <> 0 DO BEGIN
        ImporterCountries.INIT;
        Textline := Textline + ',';
        Textline := DELCHR(Textline,'=','"');

        FOR i := 1 TO 3 DO BEGIN
          CommaPos := STRPOS(Textline,',');
          IF CommaPos <= 0 THEN
            ERROR(
              Text072 +
              Text071,UPSFilename);

          CASE i OF
            2:
              ImporterCountries.Importer := COPYSTR(Textline,1,CommaPos - 1);
            3:
              ImporterCountries.ShipmentType := COPYSTR(Textline,1,CommaPos - 1);
          END;
          Textline := COPYSTR(Textline,CommaPos + 1,STRLEN(Textline));
        END;
        ImporterCountries.INSERT;
      END;
      UPSInputFile.CLOSE;
    END;

    BEGIN
    END.
  }
}

