OBJECT Codeunit 5700 User Setup Management
{
  OBJECT-PROPERTIES
  {
    Date=02/16/21;
    Time=11:57:18 AM;
    Modified=Yes;
    Version List=NAVW111.00.00.24232;
  }
  PROPERTIES
  {
    Permissions=TableData 14=r,
                TableData 5714=r;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=customer;ESM=cliente;FRC=client;ENC=customer';
      Text001@1001 : TextConst 'ENU=vendor;ESM=proveedor;FRC=fournisseur;ENC=vendor';
      Text002@1002 : TextConst 'ENU=This %1 is related to %2 %3. Your identification is setup to process from %2 %4.;ESM=Este %1 es relativo a %2 %3. Su identific. est  config. para procesar desde %2 %4.;FRC=Ce %1 est associ‚ au %2 %3. Votre identification est param‚tr‚e pour travailler … partir de %2 %4.;ENC=This %1 is related to %2 %3. Your identification is setup to process from %2 %4.';
      Text003@1003 : TextConst 'ENU=This document will be processed in your %2.;ESM=Este documento se procesar  en su %2.;FRC=Ce document sera trait‚ dans votre %2.;ENC=This document will be processed in your %2.';
      UserSetup@1004 : Record 91;
      RespCenter@1005 : Record 5714;
      CompanyInfo@1006 : Record 79;
      UserLocation@1008 : Code[10];
      UserRespCenter@1014 : Code[10];
      SalesUserRespCenter@1013 : Code[10];
      PurchUserRespCenter@1012 : Code[10];
      ServUserRespCenter@1007 : Code[10];
      HasGotSalesUserSetup@1009 : Boolean;
      HasGotPurchUserSetup@1010 : Boolean;
      HasGotServUserSetup@1011 : Boolean;
      AllowedPostingDateErr@1015 : TextConst 'ENU=The date in the Allow Posting From field must not be after the date in the Allow Posting To field.;ESM=La fecha especificada en el campo Permitir registro desde no debe ser posterior al valor del campo Permitir registro hasta.;FRC=La date du champ D‚but p‚riode report ne doit pas ˆtre post‚rieure … la date du champ Fin p‚riode report.;ENC=The date in the Allow Posting From field must not be after the date in the Allow Posting To field.';
      HasGotDivisionFilterUserSetup@1170000000 : Boolean;
      DivisionFilter@1170000001 : Text[250];
      HasGotMfrRepUserSetup@1170000002 : Boolean;
      MfrRepSalesFilter@1170000003 : Code[20];
      HasGotPriceBookUserSetup@1170000004 : Boolean;
      PriceBookFilter@1170000005 : Code[10];
      HasGotLocationFilterUserSetup@1170000006 : Boolean;
      LocationFilter@1170000007 : Code[20];
      HasGotICWHESetup@1170000008 : Boolean;
      ICLocationCode@1170000009 : Code[1024];

    [External]
    PROCEDURE GetSalesFilter@1() : Code[10];
    BEGIN
      EXIT(GetSalesFilter2(USERID));
    END;

    PROCEDURE GetDivisionFilter@1000000007() : Code[10];
    BEGIN
      // <TPZ159>
      EXIT(GetDivisionFilter2(USERID));
      // </TPZ159>
    END;

    PROCEDURE GetMfrRepSalesFilter@1000000000() : Code[20];
    BEGIN
      // <TPZ159>
      EXIT(GetMfrRepSalesFilter2(USERID));
      // </TPZ159>
    END;

    PROCEDURE GetPriceBookFilter@1000000002() : Code[10];
    BEGIN
      // <TPZ159>
      EXIT(GetPriceBookFilter2(USERID));
      // </TPZ159>
    END;

    PROCEDURE GetLocationFilter@1000000003() : Code[20];
    BEGIN
      // <TPZ159>
      EXIT(GetLocationFilter2(USERID));
      // </TPZ159>
    END;

    [External]
    PROCEDURE GetPurchasesFilter@3() : Code[10];
    BEGIN
      EXIT(GetPurchasesFilter2(USERID));
    END;

    [External]
    PROCEDURE GetServiceFilter@5() : Code[10];
    BEGIN
      EXIT(GetServiceFilter2(USERID));
    END;

    [External]
    PROCEDURE GetSalesFilter2@6(UserCode@1000 : Code[50]) : Code[10];
    BEGIN
      IF NOT HasGotSalesUserSetup THEN BEGIN
        CompanyInfo.GET;
        SalesUserRespCenter := CompanyInfo."Responsibility Center";
        UserLocation := CompanyInfo."Location Code";
        IF UserSetup.GET(UserCode) AND (UserCode <> '') THEN
          IF UserSetup."Sales Resp. Ctr. Filter" <> '' THEN
            SalesUserRespCenter := UserSetup."Sales Resp. Ctr. Filter";
        HasGotSalesUserSetup := TRUE;
      END;
      EXIT(SalesUserRespCenter);
    END;

    PROCEDURE GetDivisionFilter2@1000000008(UserCode@1000000000 : Code[50]) : Code[10];
    BEGIN
      // <TPZ159>
      IF NOT HasGotDivisionFilterUserSetup THEN BEGIN
        IF UserSetup.GET(UserCode) AND (UserCode <> '') THEN
          IF UserSetup."Shortcut Dimension 5 Filter" <> '' THEN
            DivisionFilter := UserSetup."Shortcut Dimension 5 Filter";
        HasGotDivisionFilterUserSetup := TRUE;
      END;
      EXIT(DivisionFilter);
      // </TPZ159>
    END;

    PROCEDURE GetMfrRepSalesFilter2@1000000001(UserCode@1000000000 : Code[50]) : Code[20];
    BEGIN
      // <TPZ159>
      IF NOT HasGotMfrRepUserSetup THEN BEGIN
        IF UserSetup.GET(UserCode) AND (UserCode <> '') THEN
          IF UserSetup."Mfr. Rep. Filter" <> '' THEN
            MfrRepSalesFilter := UserSetup."Mfr. Rep. Filter";
        HasGotMfrRepUserSetup := TRUE;
      END;
      EXIT(MfrRepSalesFilter);
      // </TPZ159>
    END;

    PROCEDURE GetPriceBookFilter2@1000000004(UserCode@1000000000 : Code[50]) : Code[50];
    BEGIN
      // <TPZ159>
      IF NOT HasGotPriceBookUserSetup THEN BEGIN
        IF UserSetup.GET(UserCode) AND (UserCode <> '') THEN
          IF UserSetup."Price Book Filter" <> '' THEN
            PriceBookFilter := UserSetup."Price Book Filter";
        HasGotPriceBookUserSetup := TRUE;
      END;
      EXIT(PriceBookFilter);
      // </TPZ159>
    END;

    PROCEDURE GetLocationFilter2@1000000005(UserCode@1000000000 : Code[50]) : Code[50];
    BEGIN
      // <TPZ159>
      IF NOT HasGotLocationFilterUserSetup THEN BEGIN
        IF UserSetup.GET(UserCode) AND (UserCode <> '') THEN
          IF UserSetup."Location Filter" <> '' THEN
            LocationFilter := UserSetup."Location Filter";
        HasGotLocationFilterUserSetup := TRUE;
      END;
      EXIT(LocationFilter);
      // </TPZ159>
    END;

    [External]
    PROCEDURE GetPurchasesFilter2@13(UserCode@1000 : Code[50]) : Code[10];
    BEGIN
      IF NOT HasGotPurchUserSetup THEN BEGIN
        CompanyInfo.GET;
        PurchUserRespCenter := CompanyInfo."Responsibility Center";
        UserLocation := CompanyInfo."Location Code";
        IF UserSetup.GET(UserCode) AND (UserCode <> '') THEN
          IF UserSetup."Purchase Resp. Ctr. Filter" <> '' THEN
            PurchUserRespCenter := UserSetup."Purchase Resp. Ctr. Filter";
        HasGotPurchUserSetup := TRUE;
      END;
      EXIT(PurchUserRespCenter);
    END;

    [External]
    PROCEDURE GetServiceFilter2@17(UserCode@1000 : Code[50]) : Code[10];
    BEGIN
      IF NOT HasGotServUserSetup THEN BEGIN
        CompanyInfo.GET;
        ServUserRespCenter := CompanyInfo."Responsibility Center";
        UserLocation := CompanyInfo."Location Code";
        IF UserSetup.GET(UserCode) AND (UserCode <> '') THEN
          IF UserSetup."Service Resp. Ctr. Filter" <> '' THEN
            ServUserRespCenter := UserSetup."Service Resp. Ctr. Filter";
        HasGotServUserSetup := TRUE;
      END;
      EXIT(ServUserRespCenter);
    END;

    [External]
    PROCEDURE GetRespCenter@2(DocType@1000 : 'Sales,Purchase,Service';AccRespCenter@1001 : Code[10]) : Code[10];
    VAR
      AccType@1002 : Text[50];
    BEGIN
      CASE DocType OF
        DocType::Sales:
          BEGIN
            AccType := Text000;
            UserRespCenter := GetSalesFilter;
          END;
        DocType::Purchase:
          BEGIN
            AccType := Text001;
            UserRespCenter := GetPurchasesFilter;
          END;
        DocType::Service:
          BEGIN
            AccType := Text000;
            UserRespCenter := GetServiceFilter;
          END;
      END;
      IF (AccRespCenter <> '') AND
         (UserRespCenter <> '') AND
         (AccRespCenter <> UserRespCenter)
      THEN
        MESSAGE(
          Text002 +
          Text003,
          AccType,RespCenter.TABLECAPTION,AccRespCenter,UserRespCenter);
      IF UserRespCenter = '' THEN
        EXIT(AccRespCenter);

      EXIT(UserRespCenter);
    END;

    [External]
    PROCEDURE CheckRespCenter@4(DocType@1000 : 'Sales,Purchase,Service';AccRespCenter@1001 : Code[10]) : Boolean;
    BEGIN
      EXIT(CheckRespCenter2(DocType,AccRespCenter,USERID));
    END;

    [External]
    PROCEDURE CheckRespCenter2@7(DocType@1000 : 'Sales,Purchase,Service';AccRespCenter@1001 : Code[20];UserCode@1002 : Code[50]) : Boolean;
    BEGIN
      CASE DocType OF
        DocType::Sales:
          UserRespCenter := GetSalesFilter2(UserCode);
        DocType::Purchase:
          UserRespCenter := GetPurchasesFilter2(UserCode);
        DocType::Service:
          UserRespCenter := GetServiceFilter2(UserCode);
      END;
      IF (UserRespCenter <> '') AND
         (AccRespCenter <> UserRespCenter)
      THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    [External]
    PROCEDURE GetLocation@46(DocType@1000 : 'Sales,Purchase,Service';AccLocation@1001 : Code[10];RespCenterCode@1002 : Code[10]) : Code[10];
    BEGIN
      CASE DocType OF
        DocType::Sales:
          UserRespCenter := GetSalesFilter;
        DocType::Purchase:
          UserRespCenter := GetPurchasesFilter;
        DocType::Service:
          UserRespCenter := GetServiceFilter;
      END;
      IF UserRespCenter <> '' THEN
        RespCenterCode := UserRespCenter;
      IF RespCenter.GET(RespCenterCode) THEN
        IF RespCenter."Location Code" <> '' THEN
          UserLocation := RespCenter."Location Code";
      IF AccLocation <> '' THEN
        EXIT(AccLocation);

      EXIT(UserLocation);
    END;

    PROCEDURE GetCommHdlgAdmin@1000000006(UserCode@1000000000 : Code[50]) : Boolean;
    BEGIN
      // <TPZ858>
      IF UserSetup.GET(UserCode) AND (UserCode <> '') THEN
        IF UserSetup."Comm. / Hdlg Admin." THEN
          EXIT(TRUE);

      EXIT(FALSE);
      // </TPZ858>
    END;

    PROCEDURE GetOSRCSRISRMfrRepAdmin@1000000009(UserCode@1000000000 : Code[50]) : Boolean;
    BEGIN
      // <TPZ1015>
      IF UserSetup.GET(UserCode) AND (UserCode <> '') THEN
        IF UserSetup."OSR/CSR/ISR/Mfr. Rep. Admin." THEN
          EXIT(TRUE);

      EXIT(FALSE);
      // </TPZ1015>
    END;

    PROCEDURE GetICLocationFilter@1000000010() : Code[1024];
    BEGIN
      //<TPZ1882>
      EXIT(GetICLocationFilter2(USERID));
      //</TPZ1882>
    END;

    PROCEDURE GetICLocationFilter2@1000000011(Usercode@1000000000 : Code[100]) : Code[1024];
    VAR
      WarehouseEmployee@1000000001 : Record 7301;
      I@1000000002 : Integer;
      BLANK@1000000003 : Code[10];
    BEGIN
      //<TPZ1882>
      BLANK := ''''+'''';
      IF NOT HasGotICWHESetup THEN BEGIN
        WarehouseEmployee.RESET;
        WarehouseEmployee.SETRANGE("User ID",Usercode);
        IF WarehouseEmployee.FINDSET AND (Usercode <> '') THEN BEGIN
          REPEAT
            IF WarehouseEmployee."Location Code" <> '' THEN BEGIN
              I := I + 1;
              IF I = 1 THEN
                ICLocationCode := BLANK+'|'+WarehouseEmployee."Location Code"
              ELSE
                ICLocationCode := ICLocationCode +'|'+ WarehouseEmployee."Location Code";
            END;
          UNTIL WarehouseEmployee.NEXT = 0;
          HasGotICWHESetup := TRUE;
        END ELSE
          ICLocationCode := BLANK;
      END;
      EXIT(ICLocationCode);
      //</TPZ1882>
    END;

    PROCEDURE CheckAllowedPostingDates@10(AllowPostingFrom@1001 : Date;AllowPostingTo@1000 : Date);
    BEGIN
      IF AllowPostingFrom <= AllowPostingTo THEN
        EXIT;

      IF (AllowPostingFrom = 0D) OR (AllowPostingTo = 0D) THEN
        EXIT;

      ERROR(AllowedPostingDateErr);
    END;

    BEGIN
    END.
  }
}

