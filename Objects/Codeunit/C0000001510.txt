OBJECT Codeunit 1510 Notification Management
{
  OBJECT-PROPERTIES
  {
    Date=08/10/21;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=NAVW111.00.00.43796,002;
  }
  PROPERTIES
  {
    Permissions=TableData 458=i,
                TableData 1511=rimd,
                TableData 1514=rim;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      OverdueEntriesMsg@1047 : TextConst 'ENU=Overdue approval entries have been created.;ESM=Los movs. de aprobaciï¿½n vencida se han creado.;FRC=Les ï¿½critures approbations ï¿½chues ont ï¿½tï¿½ crï¿½ï¿½es.;ENC=Overdue approval entries have been created.';
      SalesTxt@1008 : TextConst 'ENU=Sales;ESM=Ventas;FRC=Ventes;ENC=Sales';
      PurchaseTxt@1007 : TextConst 'ENU=Purchase;ESM=Compra;FRC=Achat;ENC=Purchase';
      ServiceTxt@1006 : TextConst 'ENU=Service;ESM=Servicio;FRC=Service;ENC=Service';
      SalesInvoiceTxt@1005 : TextConst 'ENU=Sales Invoice;ESM=Factura venta;FRC=Facture vente;ENC=Sales Invoice';
      PurchaseInvoiceTxt@1004 : TextConst 'ENU=Purchase Invoice;ESM=Factura compra;FRC=Facture achat;ENC=Purchase Invoice';
      ServiceInvoiceTxt@1003 : TextConst 'ENU=Service Invoice;ESM=Factura servicio;FRC=Facture service;ENC=Service Invoice';
      SalesCreditMemoTxt@1002 : TextConst 'ENU=Sales Credit Memo;ESM=Nota de cr‚dito de venta;FRC=Note de cr‚dit vente;ENC=Sales Credit Memo';
      PurchaseCreditMemoTxt@1001 : TextConst 'ENU=Purchase Credit Memo;ESM=Nota de cr‚dito compra;FRC=Note de cr‚dit achat;ENC=Purchase Credit Memo';
      ServiceCreditMemoTxt@1000 : TextConst 'ENU=Service Credit Memo;ESM=Nota cr‚dito servicio;FRC=Note de cr‚dit service;ENC=Service Credit Memo';
      ActionNewRecordTxt@1015 : TextConst '@@@=E.g. Sales Invoice 10000 has been created.;ENU=has been created.;ESM=se ha creado.;FRC=a ï¿½tï¿½ crï¿½ï¿½(e).;ENC=has been created.';
      ActionApproveTxt@1014 : TextConst '@@@=E.g. Sales Invoice 10000 requires your approval.;ENU=requires your approval.;ESM=requiere su aprobaciï¿½n.;FRC=exige votre approbation.;ENC=requires your approval.';
      ActionApprovedTxt@1013 : TextConst '@@@=E.g. Sales Invoice 10000 has been approved.;ENU=has been approved.;ESM=se ha aprobado.;FRC=a ï¿½tï¿½ approuvï¿½(e).;ENC=has been approved.';
      ActionApprovalCreatedTxt@1012 : TextConst '@@@=E.g. Sales Invoice 10000 approval request has been created.;ENU=approval request has been created.;ESM=se ha creado una solicitud de aprobaciï¿½n.;FRC=demande d''approbation a ï¿½tï¿½ crï¿½ï¿½e.;ENC=approval request has been created.';
      ActionApprovalCanceledTxt@1011 : TextConst '@@@=E.g. Sales Invoice 10000 approval request has been canceled.;ENU=approval request has been canceled.;ESM=se ha cancelado una solicitud de aprobaciï¿½n.;FRC=demande d''approbation a ï¿½tï¿½ annulï¿½e.;ENC=approval request has been cancelled.';
      ActionApprovalRejectedTxt@1010 : TextConst '@@@=E.g. Sales Invoice 10000 approval request has been rejected.;ENU=approval has been rejected.;ESM=se ha rechazado una aprobaciï¿½n.;FRC=approbation a ï¿½tï¿½ rejetï¿½e.;ENC=approval has been rejected.';
      ActionOverdueTxt@1009 : TextConst '@@@=E.g. Sales Invoice 10000 has a pending approval.;ENU=has a pending approval.;ESM=tiene una aprobaci¢n pendiente.;FRC=a une approbation en attente.;ENC=has a pending approval.';
      SMTPMailSetup@1000000014 : Record 409;
      AppSetup@1000000013 : Record 452;
      SMTP@1000000012 : Codeunit 400;
      SenderName@1000000011 : Text[100];
      SenderAddress@1000000010 : Text[100];
      Recipient@1000000009 : Text[100];
      Subject@1000000008 : Text[100];
      Body@1000000007 : Text;
      InStreamTemplate@1000000006 : InStream;
      InSReadChar@1000000005 : Text[1];
      CharNo@1000000004 : Text[4];
      I@1000000003 : Integer;
      FromUser@1000000002 : Text[100];
      MailCreated@1000000001 : Boolean;
      EMailSetupRetrieved@1000000000 : Boolean;
      Text001@1000000041 : TextConst 'ENU=Sales %1;ESM=Ventas %1;FRC=Vente %1;ENC=Sales %1';
      Text002@1000000040 : TextConst 'ENU=Purchase %1;ESM=Compra %1;FRC=Achat %1;ENC=Purchase %1';
      Text003@1000000039 : TextConst 'ENU=requires your approval.;ESM=requiere su aprobaciï¿½n.;FRC=nï¿½cessite votre approbation.;ENC=requires your approval.';
      Text004@1000000038 : TextConst 'ENU=To view your documents for approval, please use this link;ESM=Para ver los documentos para aprobaciï¿½n, abra este vï¿½nculo;FRC=Pour afficher vos documents pour approbation, utilisez ce lien;ENC=To view your documents for approval, please use this link';
      Text005@1000000037 : TextConst 'ENU=Customer;ESM=Cliente;FRC=Client;ENC=Customer';
      WebViewTok@1000000036 : TextConst '@@@=Opens the document in the Microsoft Dynamics NAV web client;ENU=Web view;ESM=Vista web;FRC=Affichage Web;ENC=Web view';
      Text007@1000000035 : TextConst 'ENU=Microsoft Dynamics NAV: %1 Mail;ESM=Microsoft Dynamics NAV: Correo %1;FRC=Microsoft Dynamics NAV: %1 courriel;ENC=Microsoft Dynamics NAV: %1 Mail';
      Text008@1000000034 : TextConst 'ENU=Approval;ESM=Aprobaciï¿½n;FRC=Approbation;ENC=Approval';
      Text009@1000000033 : TextConst 'ENU=Cancelation;ESM=Cancelaciï¿½n;FRC=Annulation;ENC=Cancellation';
      Text010@1000000032 : TextConst 'ENU=Rejection;ESM=Rechazo;FRC=Refus;ENC=Rejection';
      Text011@1000000031 : TextConst 'ENU=Delegation;ESM=Delegaciï¿½n;FRC=Dï¿½lï¿½gation;ENC=Delegation';
      Text012@1000000030 : TextConst 'ENU=Overdue Approvals;ESM=Aprobaciones vencidas;FRC=Approbations en retard;ENC=Overdue Approvals';
      Text013@1000000029 : TextConst 'ENU=Microsoft Dynamics NAV Document Approval System;ESM=Sistema aprobaciï¿½n docs. Microsoft Dynamics NAV;FRC=Systï¿½me d''approbation de documents de Microsoft Dynamics NAV;ENC=Microsoft Dynamics NAV Document Approval System';
      Text014@1000000028 : TextConst 'ENU=has been canceled.;ESM=se ha cancelado.;FRC=a ï¿½tï¿½ annulï¿½.;ENC=has been cancelled.';
      Text016@1000000027 : TextConst 'ENU=has been rejected.;ESM=se ha rechazado.;FRC=a ï¿½tï¿½ refusï¿½.;ENC=has been rejected.';
      Text018@1000000026 : TextConst 'ENU=Vendor;ESM=Proveedor;FRC=Fournisseur;ENC=Vendor';
      Text020@1000000025 : TextConst 'ENU=has been delegated.;ESM=se ha delegado.;FRC=a ï¿½tï¿½ dï¿½lï¿½guï¿½.;ENC=has been delegated.';
      Text022@1000000024 : TextConst 'ENU=Overdue approval;ESM=Aprobaciï¿½n vencida;FRC=Approbation en retard;ENC=Overdue approval';
      Text030@1000000023 : TextConst 'ENU=Not yet overdue;ESM=No vencida todavï¿½a;FRC=Pas encore en retard;ENC=Not yet overdue';
      Text033@1000000022 : TextConst 'ENU=Rejection comments:;ESM=Comentarios rechazo:;FRC=Commentaires sur le refus :;ENC=Rejection comments:';
      Text040@1000000021 : TextConst 'ENU=You must import an Approval Template in Approval Setup.;ESM=Debe importar una Plantilla aprobaciï¿½n en Configuraciï¿½n aprobaciï¿½n.;FRC=Vous devez importer un modï¿½le d''approbation dans le module Configuration d''approbation.;ENC=You must import an Approval Template in Approval Setup.';
      Text041@1000000020 : TextConst 'ENU=You must import an Overdue Approval Template in Approval Setup.;ESM=Debe importar una Plantilla aprobaciï¿½n vencida en Configuraciï¿½n aprobaciï¿½n.;FRC=Vous devez importer un modï¿½le d''approbation en retard dans le module Configuration d''approbation.;ENC=You must import an Overdue Approval Template in Approval Setup.';
      Text042@1000000019 : TextConst 'ENU=Available Credit Limit ($);ESM=Lï¿½mite crï¿½dito disponible ($);FRC=Limite de crï¿½dit disponible ($);ENC=Available Credit Limit ($)';
      Text043@1000000018 : TextConst 'ENU=Request Amount ($);ESM=Importe solic. ($);FRC=Montant demandï¿½ ($);ENC=Request Amount ($)';
      OpenBracketTok@1000000017 : TextConst '@@@={Locked};ENU=(;ESM=(;FRC=(;ENC=(';
      CloseBracketTok@1000000016 : TextConst '@@@={Locked};ENU=);ESM=);FRC=);ENC=)';
      abcsi001@1000000015 : TextConst 'ENU=Approval Type';
      Text044@1000000042 : TextConst 'ENU=has been approved.';
      Text045@1000000043 : TextConst 'ENU=Comments:';
      PageManagement@1000000045 : Codeunit 700;
      JobQueueEntry@1000000044 : Record 472;
      JobQueueManagement@1000000046 : Codeunit 456;
      Text046@1000000047 : TextConst 'ENU=Hello,';
      Text047@1000000048 : TextConst 'ENU=requires your approval.';

    [External]
    PROCEDURE CreateOverdueNotifications@14(WorkflowStepArgument@1002 : Record 1523);
    VAR
      UserSetup@1006 : Record 91;
      ApprovalEntry@1000 : Record 454;
      OverdueApprovalEntry@1001 : Record 458;
      NotificationEntry@1003 : Record 1511;
    BEGIN
      IF UserSetup.FINDSET THEN
        REPEAT
          ApprovalEntry.RESET;
          ApprovalEntry.SETRANGE("Approver ID",UserSetup."User ID");
          ApprovalEntry.SETRANGE(Status,ApprovalEntry.Status::Open);
          ApprovalEntry.SETFILTER("Due Date",'<=%1',TODAY);
          IF ApprovalEntry.FINDSET THEN
            REPEAT
              InsertOverdueEntry(ApprovalEntry,OverdueApprovalEntry);
              NotificationEntry.CreateNew(NotificationEntry.Type::Overdue,
                UserSetup."User ID",OverdueApprovalEntry,WorkflowStepArgument."Link Target Page",
                WorkflowStepArgument."Custom Link");
            UNTIL ApprovalEntry.NEXT = 0;
        UNTIL UserSetup.NEXT = 0;

      MESSAGE(OverdueEntriesMsg);
    END;

    LOCAL PROCEDURE InsertOverdueEntry@13(ApprovalEntry@1000 : Record 454;VAR OverdueApprovalEntry@1001 : Record 458);
    VAR
      User@1002 : Record 2000000120;
      UserSetup@1003 : Record 91;
    BEGIN
      WITH OverdueApprovalEntry DO BEGIN
        INIT;
        "Approver ID" := ApprovalEntry."Approver ID";
        User.SETRANGE("User Name",ApprovalEntry."Approver ID");
        IF User.FINDFIRST THEN BEGIN
          "Sent to Name" := COPYSTR(User."Full Name",1,MAXSTRLEN("Sent to Name"));
          UserSetup.GET(User."User Name");
        END;

        "Table ID" := ApprovalEntry."Table ID";
        "Document Type" := ApprovalEntry."Document Type";
        "Document No." := ApprovalEntry."Document No.";
        "Sent to ID" := ApprovalEntry."Approver ID";
        "Sent Date" := TODAY;
        "Sent Time" := TIME;
        "E-Mail" := UserSetup."E-Mail";
        "Sequence No." := ApprovalEntry."Sequence No.";
        "Due Date" := ApprovalEntry."Due Date";
        "Approval Code" := ApprovalEntry."Approval Code";
        "Approval Type" := ApprovalEntry."Approval Type";
        "Limit Type" := ApprovalEntry."Limit Type";
        "Record ID to Approve" := ApprovalEntry."Record ID to Approve";
        INSERT;
      END;
    END;

    [External]
    PROCEDURE CreateDefaultNotificationSetup@1(NotificationType@1000 : Option);
    VAR
      NotificationSetup@1001 : Record 1512;
    BEGIN
      IF DefaultNotificationEntryExists(NotificationType) THEN
        EXIT;

      NotificationSetup.INIT;
      NotificationSetup.VALIDATE("Notification Type",NotificationType);
      NotificationSetup.VALIDATE("Notification Method",NotificationSetup."Notification Method"::Email);
      NotificationSetup.INSERT(TRUE);
    END;

    LOCAL PROCEDURE DefaultNotificationEntryExists@4(NotificationType@1000 : Option) : Boolean;
    VAR
      NotificationSetup@1001 : Record 1512;
    BEGIN
      NotificationSetup.SETRANGE("User ID",'');
      NotificationSetup.SETRANGE("Notification Type",NotificationType);
      EXIT(NOT NotificationSetup.ISEMPTY)
    END;

    [External]
    PROCEDURE MoveNotificationEntryToSentNotificationEntries@11(VAR NotificationEntry@1000 : Record 1511;NotificationBody@1001 : Text;AggregatedNotifications@1002 : Boolean;NotificationMethod@1005 : Option);
    VAR
      SentNotificationEntry@1003 : Record 1514;
      InitialSentNotificationEntry@1006 : Record 1514;
    BEGIN
      IF AggregatedNotifications THEN BEGIN
        IF NotificationEntry.FINDSET THEN BEGIN
          InitialSentNotificationEntry.NewRecord(NotificationEntry,NotificationBody,NotificationMethod);
          WHILE NotificationEntry.NEXT <> 0 DO BEGIN
            SentNotificationEntry.NewRecord(NotificationEntry,NotificationBody,NotificationMethod);
            SentNotificationEntry.VALIDATE("Aggregated with Entry",InitialSentNotificationEntry.ID);
            SentNotificationEntry.MODIFY(TRUE);
          END;
        END;
        NotificationEntry.DELETEALL(TRUE);
      END ELSE BEGIN
        SentNotificationEntry.NewRecord(NotificationEntry,NotificationBody,NotificationMethod);
        NotificationEntry.DELETE(TRUE);
      END;
    END;

    [External]
    PROCEDURE GetDocumentTypeAndNumber@3(VAR RecRef@1000 : RecordRef;VAR DocumentType@1001 : Text;VAR DocumentNo@1002 : Text);
    VAR
      FieldRef@1003 : FieldRef;
    BEGIN
      CASE RecRef.NUMBER OF
        DATABASE::"Incoming Document":
          BEGIN
            DocumentType := RecRef.CAPTION;
            FieldRef := RecRef.FIELD(2);
            DocumentNo := FORMAT(FieldRef.VALUE);
          END;
        DATABASE::"Sales Header":
          BEGIN
            FieldRef := RecRef.FIELD(1);
            DocumentType := SalesTxt + ' ' + FORMAT(FieldRef.VALUE);
            FieldRef := RecRef.FIELD(3);
            DocumentNo := FORMAT(FieldRef.VALUE);
          END;
        DATABASE::"Purchase Header":
          BEGIN
            FieldRef := RecRef.FIELD(1);
            DocumentType := PurchaseTxt + ' ' + FORMAT(FieldRef.VALUE);
            FieldRef := RecRef.FIELD(3);
            DocumentNo := FORMAT(FieldRef.VALUE);
          END;
        DATABASE::"Service Header":
          BEGIN
            FieldRef := RecRef.FIELD(1);
            DocumentType := ServiceTxt + ' ' + FORMAT(FieldRef.VALUE);
            FieldRef := RecRef.FIELD(3);
            DocumentNo := FORMAT(FieldRef.VALUE);
          END;
        DATABASE::"Sales Invoice Header":
          BEGIN
            DocumentType := SalesInvoiceTxt;
            FieldRef := RecRef.FIELD(3);
            DocumentNo := FORMAT(FieldRef.VALUE);
          END;
        DATABASE::"Purch. Inv. Header":
          BEGIN
            DocumentType := PurchaseInvoiceTxt;
            FieldRef := RecRef.FIELD(3);
            DocumentNo := FORMAT(FieldRef.VALUE);
          END;
        DATABASE::"Service Invoice Header":
          BEGIN
            DocumentType := ServiceInvoiceTxt;
            FieldRef := RecRef.FIELD(3);
            DocumentNo := FORMAT(FieldRef.VALUE);
          END;
        DATABASE::"Sales Cr.Memo Header":
          BEGIN
            DocumentType := SalesCreditMemoTxt;
            FieldRef := RecRef.FIELD(3);
            DocumentNo := FORMAT(FieldRef.VALUE);
          END;
        DATABASE::"Purch. Cr. Memo Hdr.":
          BEGIN
            DocumentType := PurchaseCreditMemoTxt;
            FieldRef := RecRef.FIELD(3);
            DocumentNo := FORMAT(FieldRef.VALUE);
          END;
        DATABASE::"Service Cr.Memo Header":
          BEGIN
            DocumentType := ServiceCreditMemoTxt;
            FieldRef := RecRef.FIELD(3);
            DocumentNo := FORMAT(FieldRef.VALUE);
          END;
        DATABASE::"Gen. Journal Line":
          BEGIN
            DocumentType := RecRef.CAPTION;
            FieldRef := RecRef.FIELD(1);
            DocumentNo := FORMAT(FieldRef.VALUE);
            FieldRef := RecRef.FIELD(51);
            DocumentNo += ',' + FORMAT(FieldRef.VALUE);
            FieldRef := RecRef.FIELD(2);
            DocumentNo += ',' + FORMAT(FieldRef.VALUE);
          END;
        DATABASE::"Gen. Journal Batch":
          BEGIN
            DocumentType := RecRef.CAPTION;
            FieldRef := RecRef.FIELD(1);
            DocumentNo := FORMAT(FieldRef.VALUE);
            FieldRef := RecRef.FIELD(2);
            DocumentNo += ',' + FORMAT(FieldRef.VALUE);
          END;
        DATABASE::Customer,
        DATABASE::Vendor,
        DATABASE::Item:
          BEGIN
            DocumentType := RecRef.CAPTION;
            FieldRef := RecRef.FIELD(1);
            DocumentNo := FORMAT(FieldRef.VALUE);
          END;
        ELSE BEGIN
          DocumentType := RecRef.CAPTION;
          FieldRef := RecRef.FIELD(3);
          DocumentNo := FORMAT(FieldRef.VALUE);
        END;
      END;
    END;

    [External]
    PROCEDURE GetActionTextFor@7(VAR NotificationEntry@1000 : Record 1511) : Text;
    VAR
      ApprovalEntry@1001 : Record 454;
      DataTypeManagement@1002 : Codeunit 701;
      RecRef@1003 : RecordRef;
    BEGIN
      CASE NotificationEntry.Type OF
        NotificationEntry.Type::"New Record":
          EXIT(ActionNewRecordTxt);
        NotificationEntry.Type::Approval:
          BEGIN
            DataTypeManagement.GetRecordRef(NotificationEntry."Triggered By Record",RecRef);
            RecRef.SETTABLE(ApprovalEntry);
            CASE ApprovalEntry.Status OF
              ApprovalEntry.Status::Open:
                EXIT(ActionApproveTxt);
              ApprovalEntry.Status::Canceled:
                EXIT(ActionApprovalCanceledTxt);
              ApprovalEntry.Status::Rejected:
                EXIT(ActionApprovalRejectedTxt);
              ApprovalEntry.Status::Created:
                EXIT(ActionApprovalCreatedTxt);
              ApprovalEntry.Status::Approved:
                EXIT(ActionApprovedTxt);
            END;
          END;
        NotificationEntry.Type::Overdue:
          EXIT(ActionOverdueTxt);
      END;
    END;

    PROCEDURE SendSalesApprovalsMail@1000000000(SalesHeader@1000 : Record 36;ApprovalEntry@1001 : Record 454);
    BEGIN
      SetTemplate(ApprovalEntry);
      Subject := STRSUBSTNO(Text007,Text008);
      Body := Text013;

      SMTP.CreateMessage(SenderName,SenderAddress,Recipient,Subject,Body,TRUE);
      Body := '';

      WHILE InStreamTemplate.EOS = FALSE DO BEGIN
        InStreamTemplate.READTEXT(InSReadChar,1);
        IF InSReadChar = '%' THEN BEGIN
          SMTP.AppendBody(Body);
          Body := InSReadChar;
          IF InStreamTemplate.READTEXT(InSReadChar,1) <> 0 THEN;
          IF (InSReadChar >= '0') AND (InSReadChar <= '9') THEN BEGIN
            Body := Body + '1';
            CharNo := InSReadChar;
            WHILE (InSReadChar >= '0') AND (InSReadChar <= '9') DO BEGIN
              IF InStreamTemplate.READTEXT(InSReadChar,1) <> 0 THEN;
              IF (InSReadChar >= '0') AND (InSReadChar <= '9') THEN
                CharNo := CharNo + InSReadChar;
            END;
          END ELSE
            Body := Body + InSReadChar;
          FillSalesTemplate(Body,CharNo,SalesHeader,ApprovalEntry,0);
          SMTP.AppendBody(Body);
          Body := InSReadChar;
        END ELSE BEGIN
          Body := Body + InSReadChar;
          I := I + 1;
          IF I = 500 THEN BEGIN
            SMTP.AppendBody(Body);
            Body := '';
            I := 0;
          END;
        END;
      END;
      SMTP.AppendBody(Body);
      SMTP.Send;
    END;

    PROCEDURE SetTemplate@25(AppEntry@1000 : Record 454);
    BEGIN
      AppSetup.GET;
      AppSetup.CALCFIELDS("Approval Template");
      IF NOT AppSetup."Approval Template".HASVALUE THEN
        ERROR(Text040);
      AppSetup."Approval Template".CREATEINSTREAM(InStreamTemplate);
      // <TPZ859>
      GetSMTPMailSetup;
      IF SMTPMailSetup."From Name" = '' THEN
        SenderName := COMPANYNAME
      ELSE
        SenderName := SMTPMailSetup."From Name";
      // <TPZ859>
      CLEAR(SenderAddress);
      CLEAR(Recipient);
      GetEmailAddress(AppEntry);
    END;

    PROCEDURE FillSalesTemplate@1000000001(VAR Body@1000 : Text;FieldNo@1001 : Text[30];Header@1002 : Record 36;AppEntry@1003 : Record 454;CalledFrom@1004 : 'Approve,Cancel,Reject,Delegate');
    BEGIN
      CASE FieldNo OF
        '1':
          Body := STRSUBSTNO(Text001,Header."Document Type");
        '2':
          Body := STRSUBSTNO(Body,Header."No.");
        '3':
          CASE CalledFrom OF
            CalledFrom::Approve:
              Body := STRSUBSTNO(Body,Text003);
            CalledFrom::Cancel:
              Body := STRSUBSTNO(Body,Text014);
            CalledFrom::Reject:
              Body := STRSUBSTNO(Body,Text016);
            CalledFrom::Delegate:
              Body := STRSUBSTNO(Body,Text020);
          END;
        '4':
          IF CalledFrom IN [CalledFrom::Approve,CalledFrom::Cancel,CalledFrom::Reject,CalledFrom::Delegate] THEN
            Body := '';
        '5':
          Body := STRSUBSTNO(Body,GetApprovalEntriesWinUri);
        '6':
          Body := STRSUBSTNO(Body,Text004);
        '7':
          Body := STRSUBSTNO(Body,AppEntry.FIELDCAPTION(Amount));
        '8':
          Body := STRSUBSTNO(Body,AppEntry."Currency Code");
        '9':
          Body := STRSUBSTNO(Body,AppEntry.Amount);
        '10':
          Body := STRSUBSTNO(Body,AppEntry.FIELDCAPTION("Amount (LCY)"));
        '11':
          Body := STRSUBSTNO(Body,AppEntry."Amount (LCY)");
        '12':
          Body := STRSUBSTNO(Body,Text005);
        '13':
          Body := STRSUBSTNO(Body,Header."Bill-to Customer No.");
        '14':
          Body := STRSUBSTNO(Body,Header."Bill-to Name");
        '15':
          Body := STRSUBSTNO(Body,AppEntry.FIELDCAPTION("Due Date"));
        '16':
          Body := STRSUBSTNO(Body,AppEntry."Due Date");
        '17':
          Body := Text042;
        '18':
          Body := STRSUBSTNO(Body,AppEntry."Available Credit Limit (LCY)");
        '19':
          Body := STRSUBSTNO(Body,GetApprovalEntriesWebUri);
        '20':
          Body := STRSUBSTNO(Body,WebViewTok);
        '21':
          Body := STRSUBSTNO(Body,OpenBracketTok);
        '22':
          Body := STRSUBSTNO(Body,CloseBracketTok);
        //TOP150 - KT ABCSI Sales Order Margin Review 04072015 Start
        '23':
          Body := STRSUBSTNO(Body,AppEntry.FIELDCAPTION("Overdue Balance (LCY)"));
        '24':
          Body := STRSUBSTNO(Body,AppEntry."Overdue Balance (LCY)");
        '25':
          Body := STRSUBSTNO(Body,AppEntry.FIELDCAPTION("Margin %"));
        '26':
          Body := STRSUBSTNO(Body,AppEntry."Margin %");
        '27':
          Body := STRSUBSTNO(Body,abcsi001);
        '28':
          Body := STRSUBSTNO(Body,FORMAT(AppEntry."Limit Type"));
        //TOP150 - KT ABCSI Sales Order Margin Review 04072015 Start
      END;
    END;

    PROCEDURE GetSMTPMailSetup@1000000002();
    BEGIN
      // <TPZ859>
      IF EMailSetupRetrieved THEN
        EXIT;
      {
      SMTPMailSetup.GET;
      SMTPMailSetup.TESTFIELD("SMTP Server");
      SMTPMailSetup.TESTFIELD("From Name");
      SMTPMailSetup.TESTFIELD("From Address");

      EMailSetupRetrieved := TRUE;
      // <TPZ859>
      }//EB
    END;

    LOCAL PROCEDURE GetApprovalEntriesWinUri@22() : Text;
    BEGIN
      // Generates a url to the Approval Entries list page, such as
      // dynamicsnav://server:port/instance/company/runpage?page=658<?Tenant=tenantId>.
      EXIT(GETURL(CLIENTTYPE::Windows,COMPANYNAME,OBJECTTYPE::Page,PAGE::"Approval Entries"));
    END;

    LOCAL PROCEDURE GetApprovalEntriesWebUri@21() : Text;
    BEGIN
      // Generates a url to the Approval Entries list page, such as
      // http://server:port/instance/WebClient/company/runpage?page=658<?Tenant=tenantId>.
      EXIT(GETURL(CLIENTTYPE::Web,COMPANYNAME,OBJECTTYPE::Page,PAGE::"Approval Entries"));
    END;

    PROCEDURE GetEmailAddress@1000000003(AppEntry@1000 : Record 454);
    VAR
      UserSetup@1001 : Record 91;
    BEGIN
      UserSetup.GET(AppEntry."Sender ID");
      UserSetup.TESTFIELD("E-Mail");
      // <TPZ859>
      GetSMTPMailSetup;
      IF SMTPMailSetup."From Address" = '' THEN BEGIN
        SenderAddress := UserSetup."E-Mail";
        UserSetup.GET(USERID);
        UserSetup.TESTFIELD("E-Mail");
        FromUser := UserSetup."E-Mail";
      END ELSE BEGIN
        SenderAddress := SMTPMailSetup."From Address";
        FromUser := SMTPMailSetup."From Address";
      END;
      // <TPZ859>
      UserSetup.GET(AppEntry."Approver ID");
      UserSetup.TESTFIELD("E-Mail");
      Recipient := UserSetup."E-Mail";
    END;

    PROCEDURE SendPurchaseApprovalsMail@10(PurchaseHeader@1001 : Record 38;ApprovalEntry@1000 : Record 454);
    BEGIN
      SetTemplate(ApprovalEntry);
      Subject := STRSUBSTNO(Text007,Text008);
      Body := Text013;

      SMTP.CreateMessage(SenderName,SenderAddress,Recipient,Subject,Body,TRUE);
      Body := '';

      WHILE InStreamTemplate.EOS = FALSE DO BEGIN
        InStreamTemplate.READTEXT(InSReadChar,1);
        IF InSReadChar = '%' THEN BEGIN
          SMTP.AppendBody(Body);
          Body := InSReadChar;
          IF InStreamTemplate.READTEXT(InSReadChar,1) <> 0 THEN;
          IF (InSReadChar >= '0') AND (InSReadChar <= '9') THEN BEGIN
            Body := Body + '1';
            CharNo := InSReadChar;
            WHILE (InSReadChar >= '0') AND (InSReadChar <= '9') DO BEGIN
              IF InStreamTemplate.READTEXT(InSReadChar,1) <> 0 THEN;
              IF (InSReadChar >= '0') AND (InSReadChar <= '9') THEN
                CharNo := CharNo + InSReadChar;
            END;
          END ELSE
            Body := Body + InSReadChar;
          FillPurchaseTemplate(Body,CharNo,PurchaseHeader,ApprovalEntry,0);
          SMTP.AppendBody(Body);
          Body := InSReadChar;
        END ELSE BEGIN
          Body := Body + InSReadChar;
          I := I + 1;
          IF I = 500 THEN BEGIN
            SMTP.AppendBody(Body);
            Body := '';
            I := 0;
          END;
        END;
      END;
      SMTP.AppendBody(Body);
      SMTP.Send;
    END;

    PROCEDURE FillPurchaseTemplate@15(VAR Body@1000 : Text;FieldNo@1001 : Text[30];Header@1002 : Record 38;AppEntry@1003 : Record 454;CalledFrom@1004 : 'Approve,Cancel,Reject,Delegate,Approved');
    BEGIN
      CASE FieldNo OF
        '1':
          Body := STRSUBSTNO(Text002,Header."Document Type");
        '2':
          Body := STRSUBSTNO(Body,Header."No.");
        '3':
          CASE CalledFrom OF
            CalledFrom::Approve:
              Body := STRSUBSTNO(Body,Text003);
            CalledFrom::Cancel:
              Body := STRSUBSTNO(Body,Text014);
            CalledFrom::Reject:
              Body := STRSUBSTNO(Body,Text016);
            CalledFrom::Delegate:
              Body := STRSUBSTNO(Body,Text020);
            //>>001 TPZ3134
            CalledFrom::Approved:
              Body := STRSUBSTNO(Body,Text044);
            //<<001 TPZ3134
          END;
        '4':
          IF CalledFrom IN [CalledFrom::Approve,CalledFrom::Cancel,CalledFrom::Reject,CalledFrom::Delegate] THEN
            Body := '';
        '5':
          Body := STRSUBSTNO(Body,GetApprovalEntriesWinUri);
        '6':
          Body := STRSUBSTNO(Body,Text004);
        '7':
          Body := STRSUBSTNO(Body,AppEntry.FIELDCAPTION(Amount));
        '8':
          Body := STRSUBSTNO(Body,AppEntry."Currency Code");
        '9':
          Body := STRSUBSTNO(Body,AppEntry.Amount);
        '10':
          Body := STRSUBSTNO(Body,AppEntry.FIELDCAPTION("Amount (LCY)"));
        '11':
          Body := STRSUBSTNO(Body,AppEntry."Amount (LCY)");
        '12':
          Body := STRSUBSTNO(Body,Text018);
        '13':
          Body := STRSUBSTNO(Body,Header."Pay-to Vendor No.");
        '14':
          Body := STRSUBSTNO(Body,Header."Pay-to Name");
        '15':
          Body := STRSUBSTNO(Body,AppEntry.FIELDCAPTION("Due Date"));
        '16':
          Body := STRSUBSTNO(Body,AppEntry."Due Date");
        '17':
          BEGIN
            IF AppEntry."Limit Type" = AppEntry."Limit Type"::"Request Limits" THEN
              Body := Text043
            ELSE
              Body := ' ';
          END;
        '18':
          BEGIN
            IF AppEntry."Limit Type" = AppEntry."Limit Type"::"Request Limits" THEN
              Body := STRSUBSTNO(Body,AppEntry."Amount (LCY)")
            ELSE
              Body := ' ';
          END;
        '19':
          Body := STRSUBSTNO(Body,GetApprovalEntriesWebUri);
        '20':
          Body := STRSUBSTNO(Body,WebViewTok);
        '21':
          Body := STRSUBSTNO(Body,OpenBracketTok);
        '22':
          Body := STRSUBSTNO(Body,CloseBracketTok);
      END;
    END;

    PROCEDURE SendMail@19();
    BEGIN
      SMTP.Send;
      MailCreated := FALSE;
    END;

    PROCEDURE SendSalesRejectionsMail@1000000004(SalesHeader@1001 : Record 36;ApprovalEntry@1000 : Record 454);
    VAR
      AppCommentLine@1002 : Record 455;
    BEGIN
      IF MailCreated THEN BEGIN
        GetEmailAddress(ApprovalEntry);
        IF Recipient <> SenderAddress THEN
          SMTP.AddCC(Recipient);
      END ELSE BEGIN
        SetTemplate(ApprovalEntry);
        Subject := STRSUBSTNO(Text007,Text010);
        Body := Text013;

        SMTP.CreateMessage(SenderName,FromUser,SenderAddress,Subject,Body,TRUE);
        SMTP.AddCC(Recipient);
        Body := '';

        WHILE InStreamTemplate.EOS = FALSE DO BEGIN
          InStreamTemplate.READTEXT(InSReadChar,1);
          IF InSReadChar = '%' THEN BEGIN
            SMTP.AppendBody(Body);
            Body := InSReadChar;
            IF InStreamTemplate.READTEXT(InSReadChar,1) <> 0 THEN;
            IF (InSReadChar >= '0') AND (InSReadChar <= '9') THEN BEGIN
              Body := Body + '1';
              CharNo := InSReadChar;
              WHILE (InSReadChar >= '0') AND (InSReadChar <= '9') DO BEGIN
                IF InStreamTemplate.READTEXT(InSReadChar,1) <> 0 THEN;
                IF (InSReadChar >= '0') AND (InSReadChar <= '9') THEN
                  CharNo := CharNo + InSReadChar;
              END;
            END ELSE
              Body := Body + InSReadChar;
            FillSalesTemplate(Body,CharNo,SalesHeader,ApprovalEntry,2);
            SMTP.AppendBody(Body);
            Body := InSReadChar;
          END ELSE BEGIN
            Body := Body + InSReadChar;
            I := I + 1;
            IF I = 500 THEN BEGIN
              SMTP.AppendBody(Body);
              Body := '';
              I := 0;
            END;
          END;
        END;
        SMTP.AppendBody(Body);
        // Append Comment Lines
        ApprovalEntry.CALCFIELDS(Comment);
        IF ApprovalEntry.Comment THEN BEGIN
          AppCommentLine.SETCURRENTKEY("Table ID","Document Type","Document No.");
          AppCommentLine.SETRANGE("Table ID",ApprovalEntry."Table ID");
          AppCommentLine.SETRANGE("Document Type",ApprovalEntry."Document Type");
          AppCommentLine.SETRANGE("Document No.",ApprovalEntry."Document No.");
          IF AppCommentLine.FIND('-') THEN BEGIN
            Body := STRSUBSTNO('<p class="MsoNormal"><font face="Arial size 2"><b>%1</b></font></p>',Text033);
            SMTP.AppendBody(Body);
            REPEAT
              BuildCommentLine(AppCommentLine);
            UNTIL AppCommentLine.NEXT = 0;
          END;
        END;
        MailCreated := TRUE;
      END;
    END;

    PROCEDURE BuildCommentLine@17(Comments@1000 : Record 455);
    VAR
      CommentLine@1002 : Text[500];
    BEGIN
      CommentLine := '<p class="MsoNormal"><span style="font-family:Arial size 2">' +
        Comments.Comment + '</span></p>';
      SMTP.AppendBody(CommentLine);
    END;

    PROCEDURE SendPurchaseRejectionsMail@12(PurchaseHeader@1001 : Record 38;ApprovalEntry@1000 : Record 454);
    VAR
      AppCommentLine@1002 : Record 455;
    BEGIN
      EXIT;//001 TPZ3134
      IF MailCreated THEN BEGIN
        GetEmailAddress(ApprovalEntry);
        IF Recipient <> SenderAddress THEN
          SMTP.AddCC(Recipient);
      END ELSE BEGIN
        SetTemplate(ApprovalEntry);
        Subject := STRSUBSTNO(Text007,Text010);
        Body := Text013;

        SMTP.CreateMessage(SenderName,FromUser,SenderAddress,Subject,Body,TRUE);
        SMTP.AddCC(Recipient);
        Body := '';

        WHILE InStreamTemplate.EOS = FALSE DO BEGIN
          InStreamTemplate.READTEXT(InSReadChar,1);
          IF InSReadChar = '%' THEN BEGIN
            SMTP.AppendBody(Body);
            Body := InSReadChar;
            IF InStreamTemplate.READTEXT(InSReadChar,1) <> 0 THEN;
            IF (InSReadChar >= '0') AND (InSReadChar <= '9') THEN BEGIN
              Body := Body + '1';
              CharNo := InSReadChar;
              WHILE (InSReadChar >= '0') AND (InSReadChar <= '9') DO BEGIN
                IF InStreamTemplate.READTEXT(InSReadChar,1) <> 0 THEN;
                IF (InSReadChar >= '0') AND (InSReadChar <= '9') THEN
                  CharNo := CharNo + InSReadChar;
              END;
            END ELSE
              Body := Body + InSReadChar;
            FillPurchaseTemplate(Body,CharNo,PurchaseHeader,ApprovalEntry,2);
            SMTP.AppendBody(Body);
            Body := InSReadChar;
          END ELSE BEGIN
            Body := Body + InSReadChar;
            I := I + 1;
            IF I = 500 THEN BEGIN
              SMTP.AppendBody(Body);
              Body := '';
              I := 0;
            END;
          END;
        END;
        SMTP.AppendBody(Body);
        // Append Comment Lines
        ApprovalEntry.CALCFIELDS(Comment);
        IF ApprovalEntry.Comment THEN BEGIN
          AppCommentLine.SETCURRENTKEY("Table ID","Document Type","Document No.");
          AppCommentLine.SETRANGE("Table ID",ApprovalEntry."Table ID");
      //  AppCommentLine.SETRANGE("Document Type",ApprovalEntry."Document Type");
      //  AppCommentLine.SETRANGE("Document No.",ApprovalEntry."Document No.");
          AppCommentLine.SETRANGE("Workflow Step Instance ID",ApprovalEntry."Workflow Step Instance ID");
          //rabin
          IF AppCommentLine.FIND('-') THEN BEGIN
            Body := STRSUBSTNO('<p class="MsoNormal"><font face="Arial size 2"><b>%1</b></font></p>',
                Text033);
            SMTP.AppendBody(Body);
            REPEAT
              BuildCommentLine(AppCommentLine);
            UNTIL AppCommentLine.NEXT = 0;
          END;
        END;

        MailCreated := TRUE;
      END;
    END;

    PROCEDURE SendSalesCancellationsMail@2(SalesHeader@1001 : Record 36;ApprovalEntry@1000 : Record 454);
    BEGIN
      IF MailCreated THEN BEGIN
        GetEmailAddress(ApprovalEntry);
        IF Recipient <> SenderAddress THEN
          SMTP.AddCC(Recipient);
      END ELSE BEGIN
        SetTemplate(ApprovalEntry);
        Subject := STRSUBSTNO(Text007,Text009);
        Body := Text013;

        SMTP.CreateMessage(SenderName,FromUser,SenderAddress,Subject,Body,TRUE);
        IF Recipient <> SenderAddress THEN
          SMTP.AddCC(Recipient);

        Body := '';

        WHILE InStreamTemplate.EOS = FALSE DO BEGIN
          InStreamTemplate.READTEXT(InSReadChar,1);
          IF InSReadChar = '%' THEN BEGIN
            SMTP.AppendBody(Body);
            Body := InSReadChar;
            IF InStreamTemplate.READTEXT(InSReadChar,1) <> 0 THEN;
            IF (InSReadChar >= '0') AND (InSReadChar <= '9') THEN BEGIN
              Body := Body + '1';
              CharNo := InSReadChar;
              WHILE (InSReadChar >= '0') AND (InSReadChar <= '9') DO BEGIN
                IF InStreamTemplate.READTEXT(InSReadChar,1) <> 0 THEN;
                IF (InSReadChar >= '0') AND (InSReadChar <= '9') THEN
                  CharNo := CharNo + InSReadChar;
              END;
            END ELSE
              Body := Body + InSReadChar;
            FillSalesTemplate(Body,CharNo,SalesHeader,ApprovalEntry,1);
            SMTP.AppendBody(Body);
            Body := InSReadChar;
          END ELSE BEGIN
            Body := Body + InSReadChar;
            I := I + 1;
            IF I = 500 THEN BEGIN
              SMTP.AppendBody(Body);
              Body := '';
              I := 0;
            END;
          END;
        END;
        SMTP.AppendBody(Body);
        MailCreated := TRUE;
      END;
    END;

    PROCEDURE SendSalesDelegationsMail@1000000006(SalesHeader@1001 : Record 36;ApprovalEntry@1000 : Record 454);
    BEGIN
      SetTemplate(ApprovalEntry);
      Subject := STRSUBSTNO(Text007,Text011);
      Body := Text013;

      SMTP.CreateMessage(SenderName,FromUser,Recipient,Subject,Body,TRUE);
      SMTP.AddCC(SenderAddress);
      Body := '';

      WHILE InStreamTemplate.EOS = FALSE DO BEGIN
        InStreamTemplate.READTEXT(InSReadChar,1);
        IF InSReadChar = '%' THEN BEGIN
          SMTP.AppendBody(Body);
          Body := InSReadChar;
          IF InStreamTemplate.READTEXT(InSReadChar,1) <> 0 THEN;
          IF (InSReadChar >= '0') AND (InSReadChar <= '9') THEN BEGIN
            Body := Body + '1';
            CharNo := InSReadChar;
            WHILE (InSReadChar >= '0') AND (InSReadChar <= '9') DO BEGIN
              IF InStreamTemplate.READTEXT(InSReadChar,1) <> 0 THEN;
              IF (InSReadChar >= '0') AND (InSReadChar <= '9') THEN
                CharNo := CharNo + InSReadChar;
            END;
          END ELSE
            Body := Body + InSReadChar;
          FillSalesTemplate(Body,CharNo,SalesHeader,ApprovalEntry,3);
          SMTP.AppendBody(Body);
          Body := InSReadChar;
        END ELSE BEGIN
          Body := Body + InSReadChar;
          I := I + 1;
          IF I = 500 THEN BEGIN
            SMTP.AppendBody(Body);
            Body := '';
            I := 0;
          END;
        END;
      END;
      SMTP.AppendBody(Body);
      SMTP.Send;
    END;

    PROCEDURE SendPurchaseDelegationsMail@1000000005(PurchaseHeader@1000 : Record 38;ApprovalEntry@1001 : Record 454);
    VAR
      SettingsURL@1000000000 : Text;
      AppCommentLine@1000000001 : Record 455;
    BEGIN
      //>>001 TPZ3134
      SetTemplate(ApprovalEntry);
      Subject := STRSUBSTNO(Text007,Text011);
      Body := Text046;
      //Body := Text013;

      SMTP.CreateMessage(SenderName,FromUser,Recipient,Subject,Body,TRUE);
      SMTP.AddCC(SenderAddress);
      Body := '';

      //UTK 3151
      SettingsURL :='<a href=' + GETURL(CLIENTTYPE::Web,COMPANYNAME,OBJECTTYPE::Page,50,PurchaseHeader,FALSE) + '> ' +PurchaseHeader."No."+'</a>' ;
      //SettingsURL := PageManagement.GetWebUrl1(PurchaseHeader,50);
      SMTP.AppendBody(Body);
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('You are registered to receive notifications related to TOPAZ LIGHTING CORP.');
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('This is a message to notify you that:');
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('Purchase '+ FORMAT(PurchaseHeader."Document Type")+' '+FORMAT(SettingsURL) +' has been delegated.');
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('<table border="1">');
      SMTP.AppendBody('<tr>');
      SMTP.AppendBody('<td>' + '<font face="Arial size 2"><b> Amount </b></font></td>');
      SMTP.AppendBody('<td>' + FORMAT(ApprovalEntry.Amount) + '   </td>');
      SMTP.AppendBody('</tr>');
      SMTP.AppendBody('<tr>');
      SMTP.AppendBody('<td>' + '<font face="Arial size 2"><b> Amount($) </b></font></td>');
      SMTP.AppendBody('<td>' + FORMAT(ApprovalEntry."Amount (LCY)") + '   </td>');
      SMTP.AppendBody('</tr>');
      SMTP.AppendBody('<tr>');
      SMTP.AppendBody('<td>' + '<font face="Arial size 2"><b> Vendor </b></font></td>');
      SMTP.AppendBody('<td>' + FORMAT(PurchaseHeader."Pay-to Vendor No.") + ' '+ FORMAT(PurchaseHeader."Pay-to Name")+'</td>');
      SMTP.AppendBody('</tr>');
      SMTP.AppendBody('<tr>');
      SMTP.AppendBody('<td>' + '<font face="Arial size 2"><b> Due Date </b></font></td>');
      SMTP.AppendBody('<td>' + FORMAT(ApprovalEntry."Due Date")+'</td>');
      SMTP.AppendBody('</tr>');

      // Append Comment Lines
      ApprovalEntry.CALCFIELDS(Comment);
      IF ApprovalEntry.Comment THEN BEGIN
        AppCommentLine.SETCURRENTKEY("Table ID","Document Type","Document No.");
        AppCommentLine.SETRANGE("Table ID",ApprovalEntry."Table ID");
      //  AppCommentLine.SETRANGE("Document Type",ApprovalEntry."Document Type");
      //  AppCommentLine.SETRANGE("Document No.",ApprovalEntry."Document No.");
        AppCommentLine.SETRANGE("Workflow Step Instance ID",ApprovalEntry."Workflow Step Instance ID");
        SMTP.AppendBody('<tr>');
        IF AppCommentLine.FIND('-') THEN BEGIN
          SMTP.AppendBody('<td>'+ '<font face="Arial size 2"><b> Comments </b></font></td>');
          SMTP.AppendBody('<td>');
          REPEAT
            BuildCommentLine(AppCommentLine);
          UNTIL AppCommentLine.NEXT = 0;
          SMTP.AppendBody('</td>');
        END;
        SMTP.AppendBody('</tr>');
      END;

      SMTP.Send;
      //<<001 TPZ3134
      //UpdateApprovalEntryForDelegation(lUserSetup."User ID",ApprovalEntry);
    END;

    PROCEDURE SendPurchaseApprovedMail@1000000009(PurchaseHeader@1001 : Record 38;ApprovalEntry@1000 : Record 454);
    VAR
      AppCommentLine@1000000000 : Record 455;
      SettingsURL@1000000001 : Text;
      JobQueueDispatcher@1000000002 : Codeunit 448;
      GUIDValue@1000000003 : GUID;
    BEGIN
      //>>001 TPZ3134
      SetTemplate(ApprovalEntry);
      Subject := STRSUBSTNO(Text007,Text008);
      Body := Text046;
      //Body := Text013;

      SMTP.CreateMessage(SenderName,SenderAddress,Recipient,Subject,Body,TRUE);
      Body := '';
      //UTK 3151
      SettingsURL :='<a href=' + GETURL(CLIENTTYPE::Web,COMPANYNAME,OBJECTTYPE::Page,50,PurchaseHeader,FALSE) + '> ' +PurchaseHeader."No."+'</a>' ;
      //SettingsURL := PageManagement.GetWebUrl1(PurchaseHeader,50);
      SMTP.AppendBody(Body);
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('You are registered to receive notifications related to TOPAZ LIGHTING CORP.');
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('This is a message to notify you that:');
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('Purchase '+ FORMAT(PurchaseHeader."Document Type")+' '+FORMAT(SettingsURL) +' has been Approved.');
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('<table border="1">');
      SMTP.AppendBody('<tr>');
      SMTP.AppendBody('<td>' + '<font face="Arial size 2"><b> Amount </b></font></td>');
      SMTP.AppendBody('<td>' + FORMAT(ApprovalEntry.Amount) + '   </td>');
      SMTP.AppendBody('</tr>');
      SMTP.AppendBody('<tr>');
      SMTP.AppendBody('<td>' + '<font face="Arial size 2"><b> Amount($) </b></font></td>');
      SMTP.AppendBody('<td>' + FORMAT(ApprovalEntry."Amount (LCY)") + '   </td>');
      SMTP.AppendBody('</tr>');
      SMTP.AppendBody('<tr>');
      SMTP.AppendBody('<td>' + '<font face="Arial size 2"><b> Vendor </b></font></td>');
      SMTP.AppendBody('<td>' + FORMAT(PurchaseHeader."Pay-to Vendor No.") + ' '+ FORMAT(PurchaseHeader."Pay-to Name")+'</td>');
      SMTP.AppendBody('</tr>');
      SMTP.AppendBody('<tr>');
      SMTP.AppendBody('<td>' + '<font face="Arial size 2"><b> Due Date </b></font></td>');
      SMTP.AppendBody('<td>' + FORMAT(ApprovalEntry."Due Date")+'</td>');
      SMTP.AppendBody('</tr>');
      // Append Comment Lines
      ApprovalEntry.CALCFIELDS(Comment);
      IF ApprovalEntry.Comment THEN BEGIN
        AppCommentLine.SETCURRENTKEY("Table ID","Document Type","Document No.");
        AppCommentLine.SETRANGE("Table ID",ApprovalEntry."Table ID");
      //  AppCommentLine.SETRANGE("Document Type",ApprovalEntry."Document Type");
      //  AppCommentLine.SETRANGE("Document No.",ApprovalEntry."Document No.");
        AppCommentLine.SETRANGE("Workflow Step Instance ID",ApprovalEntry."Workflow Step Instance ID");
        SMTP.AppendBody('<tr>');
        IF AppCommentLine.FIND('-') THEN BEGIN
          SMTP.AppendBody('<td>'+ '<font face="Arial size 2"><b> Comments </b></font></td>');
          SMTP.AppendBody('<td>');
          REPEAT
            BuildCommentLine(AppCommentLine);
          UNTIL AppCommentLine.NEXT = 0;
          SMTP.AppendBody('</td>');
        END;
        SMTP.AppendBody('</tr>');
      END;

      SMTP.Send;
      //<<001 TPZ3134
      //>>002 TPZ3228
      PurchaseHeader."Show Order" := TRUE;
      PurchaseHeader.MODIFY(FALSE);
      //<<002 TPZ3228
      DeletePendingJobQueueEntry(PurchaseHeader,ApprovalEntry);//001 TPZ3134
    END;

    PROCEDURE SendPurchaseRejectedMailManual@1000000007(PurchaseHeader@1001 : Record 38;ApprovalEntry@1000 : Record 454);
    VAR
      AppCommentLine@1000000000 : Record 455;
      SettingsURL@1000000001 : Text;
    BEGIN
      //>>001 TPZ3134
      SetTemplate(ApprovalEntry);
      Subject := STRSUBSTNO(Text007,Text008);
      Body := Text013;

      SMTP.CreateMessage(SenderName,SenderAddress,Recipient,Subject,Body,TRUE);
      Body := '';

      //UTK 3151
      SettingsURL :='<a href=' + GETURL(CLIENTTYPE::Web,COMPANYNAME,OBJECTTYPE::Page,50,PurchaseHeader,FALSE) + '> ' +PurchaseHeader."No."+'</a>' ;
      SMTP.AppendBody(Body);
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('You are registered to receive notifications related to TOPAZ LIGHTING CORP.');
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('This is a message to notify you that:');
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('Purchase '+ FORMAT(PurchaseHeader."Document Type")+' '+FORMAT(SettingsURL) +' has been Rejected.');
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('<table border="1">');
      SMTP.AppendBody('<tr>');
      SMTP.AppendBody('<td>' + '<font face="Arial size 2"><b> Amount </b></font></td>');
      SMTP.AppendBody('<td>' + FORMAT(ApprovalEntry.Amount) + '   </td>');
      SMTP.AppendBody('</tr>');
      SMTP.AppendBody('<tr>');
      SMTP.AppendBody('<td>' + '<font face="Arial size 2"><b> Amount($) </b></font></td>');
      SMTP.AppendBody('<td>' + FORMAT(ApprovalEntry."Amount (LCY)") + '   </td>');
      SMTP.AppendBody('</tr>');
      SMTP.AppendBody('<tr>');
      SMTP.AppendBody('<td>' + '<font face="Arial size 2"><b> Vendor </b></font></td>');
      SMTP.AppendBody('<td>' + FORMAT(PurchaseHeader."Pay-to Vendor No.") + ' '+ FORMAT(PurchaseHeader."Pay-to Name")+'</td>');
      SMTP.AppendBody('</tr>');
      SMTP.AppendBody('<tr>');
      SMTP.AppendBody('<td>' + '<font face="Arial size 2"><b> Due Date </b></font></td>');
      SMTP.AppendBody('<td>' + FORMAT(ApprovalEntry."Due Date")+'</td>');
      SMTP.AppendBody('</tr>');

      // Append Comment Lines
      ApprovalEntry.CALCFIELDS(Comment);
      IF ApprovalEntry.Comment THEN BEGIN
        AppCommentLine.SETCURRENTKEY("Table ID","Document Type","Document No.");
        AppCommentLine.SETRANGE("Table ID",ApprovalEntry."Table ID");
      //  AppCommentLine.SETRANGE("Document Type",ApprovalEntry."Document Type");
      //  AppCommentLine.SETRANGE("Document No.",ApprovalEntry."Document No.");
        AppCommentLine.SETRANGE("Workflow Step Instance ID",ApprovalEntry."Workflow Step Instance ID");
        SMTP.AppendBody('<tr>');
        IF AppCommentLine.FIND('-') THEN BEGIN
          SMTP.AppendBody('<td>'+ '<font face="Arial size 2"><b> Comments </b></font></td>');
          SMTP.AppendBody('<td>');
          REPEAT
            BuildCommentLine(AppCommentLine);
          UNTIL AppCommentLine.NEXT = 0;
          SMTP.AppendBody('</td>');
        END;
        SMTP.AppendBody('</tr>');
      END;

      SMTP.Send;
      //<<001 TPZ3134
      DeletePendingJobQueueEntry(PurchaseHeader,ApprovalEntry);//001 TPZ3134
    END;

    PROCEDURE FillPurchaseTemplate1@1000000008(VAR Body@1000 : Text;FieldNo@1001 : Text[30];Header@1002 : Record 38;AppEntry@1003 : Record 454;CalledFrom@1004 : 'Approve,Cancel,Reject,Delegate,Approved');
    BEGIN
      CASE FieldNo OF
        '1':
          Body := STRSUBSTNO(Text002,Header."Document Type");
        '2':
          Body := STRSUBSTNO(Body,Header."No.");
        '3':
          CASE CalledFrom OF
            CalledFrom::Approve:
              Body := STRSUBSTNO(Body,Text003);
            CalledFrom::Cancel:
              Body := STRSUBSTNO(Body,Text014);
            CalledFrom::Reject:
              Body := STRSUBSTNO(Body,Text016);
            CalledFrom::Delegate:
              Body := STRSUBSTNO(Body,Text020);
            //>>001 TPZ3134
            CalledFrom::Approved:
              Body := STRSUBSTNO(Body,Text044);
            //<<001 TPZ3134
          END;
        '4':
         // IF CalledFrom IN [CalledFrom::Approve,CalledFrom::Cancel,CalledFrom::Reject,CalledFrom::Delegate] THEN
            Body := '';
        '5':
          Body := STRSUBSTNO(Body,GetApprovalEntriesWinUri);
        '6':
          Body := STRSUBSTNO(Body,Text004);
        '7':
          Body := STRSUBSTNO(Body,AppEntry.FIELDCAPTION(Amount));
        '8':
          Body := '';//STRSUBSTNO(Body,AppEntry."Currency Code");
        '9':
          Body := STRSUBSTNO(Body,AppEntry.Amount);
        '10':
          Body := '';//STRSUBSTNO(Body,AppEntry.FIELDCAPTION("Amount (LCY)"));
        '11':
          Body :='';// STRSUBSTNO(Body,AppEntry."Amount (LCY)");
        '12':
          Body := STRSUBSTNO(Body,Text018);
        '13':
          Body := STRSUBSTNO(Body,Header."Pay-to Vendor No.");
        '14':
          Body := STRSUBSTNO(Body,Header."Pay-to Name");
        '15':
          Body := STRSUBSTNO(Body,AppEntry.FIELDCAPTION("Due Date"));
        '16':
          Body := STRSUBSTNO(Body,AppEntry."Due Date");
        '17':
          BEGIN
            IF AppEntry."Limit Type" = AppEntry."Limit Type"::"Request Limits" THEN
              Body := ''//Text043
            ELSE
              Body := ' ';
          END;
        '18':
          BEGIN
            IF AppEntry."Limit Type" = AppEntry."Limit Type"::"Request Limits" THEN
              Body := STRSUBSTNO(Body,AppEntry."Amount (LCY)")
            ELSE
              Body := ' ';
          END;
        '19':
          Body :='';// STRSUBSTNO(Body,GetApprovalEntriesWebUri);
        '20':
          Body :='';// STRSUBSTNO(Body,WebViewTok);
        '21':
          Body :='';// STRSUBSTNO(Body,OpenBracketTok);
        '22':
          Body := '';//STRSUBSTNO(Body,CloseBracketTok);
      END;
    END;

    PROCEDURE SendPurchaseDelegationsAwayMail@1000000010(PurchaseHeader@1000 : Record 38;ApprovalEntry@1001 : Record 454);
    VAR
      SettingsURL@1000000000 : Text;
      AppCommentLine@1000000001 : Record 455;
      lUserSetup@1000000002 : Record 91;
      lUserSetup2@1000000003 : Record 91;
    BEGIN
      //>>001 TPZ3134
      SetTemplate(ApprovalEntry);
      Subject := STRSUBSTNO(Text007,Text011);
      Body := Text046;
      //Body := Text013;
      //>>001 TPZ3134
      IF lUserSetup.GET(ApprovalEntry."Approver ID") THEN
        IF lUserSetup2.GET(lUserSetup.Substitute) THEN
          Recipient := lUserSetup2."E-Mail"
        ELSE
           ERROR ('Substitute is not setup for User %1',lUserSetup."User ID");
      //<<001 TPZ3134
      SMTP.CreateMessage(SenderName,FromUser,Recipient,Subject,Body,TRUE);
      SMTP.AddCC(SenderAddress);
      Body := '';

      //UTK 3151
      SettingsURL :='<a href=' + GETURL(CLIENTTYPE::Web,COMPANYNAME,OBJECTTYPE::Page,50,PurchaseHeader,FALSE) + '> ' +PurchaseHeader."No."+'</a>' ;
      //SettingsURL := PageManagement.GetWebUrl1(PurchaseHeader,50);
      SMTP.AppendBody(Body);
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('You are registered to receive notifications related to TOPAZ LIGHTING CORP.');
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('This is a message to notify you that:');
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('Purchase '+ FORMAT(PurchaseHeader."Document Type")+' '+FORMAT(SettingsURL) +' has been delegated.');
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('<table border="1">');
      SMTP.AppendBody('<tr>');
      SMTP.AppendBody('<td>' + '<font face="Arial size 2"><b> Amount </b></font></td>');
      SMTP.AppendBody('<td>' + FORMAT(ApprovalEntry.Amount) + '   </td>');
      SMTP.AppendBody('</tr>');
      SMTP.AppendBody('<tr>');
      SMTP.AppendBody('<td>' + '<font face="Arial size 2"><b> Amount($) </b></font></td>');
      SMTP.AppendBody('<td>' + FORMAT(ApprovalEntry."Amount (LCY)") + '   </td>');
      SMTP.AppendBody('</tr>');
      SMTP.AppendBody('<tr>');
      SMTP.AppendBody('<td>' + '<font face="Arial size 2"><b> Vendor </b></font></td>');
      SMTP.AppendBody('<td>' + FORMAT(PurchaseHeader."Pay-to Vendor No.") + ' '+ FORMAT(PurchaseHeader."Pay-to Name")+'</td>');
      SMTP.AppendBody('</tr>');
      SMTP.AppendBody('<tr>');
      SMTP.AppendBody('<td>' + '<font face="Arial size 2"><b> Due Date </b></font></td>');
      SMTP.AppendBody('<td>' + FORMAT(ApprovalEntry."Due Date")+'</td>');
      SMTP.AppendBody('</tr>');

      // Append Comment Lines
      ApprovalEntry.CALCFIELDS(Comment);
      IF ApprovalEntry.Comment THEN BEGIN
        AppCommentLine.SETCURRENTKEY("Table ID","Document Type","Document No.");
        AppCommentLine.SETRANGE("Table ID",ApprovalEntry."Table ID");
      //  AppCommentLine.SETRANGE("Document Type",ApprovalEntry."Document Type");
      //  AppCommentLine.SETRANGE("Document No.",ApprovalEntry."Document No.");
        AppCommentLine.SETRANGE("Workflow Step Instance ID",ApprovalEntry."Workflow Step Instance ID");
        SMTP.AppendBody('<tr>');
        IF AppCommentLine.FIND('-') THEN BEGIN
          SMTP.AppendBody('<td>'+ '<font face="Arial size 2"><b> Comments </b></font></td>');
          SMTP.AppendBody('<td>');
          REPEAT
            BuildCommentLine(AppCommentLine);
          UNTIL AppCommentLine.NEXT = 0;
          SMTP.AppendBody('</td>');
        END;
        SMTP.AppendBody('</tr>');
      END;

      SMTP.Send;
      //<<001 TPZ3134
      UpdateApprovalEntryForDelegation(lUserSetup2."User ID",ApprovalEntry);
    END;

    LOCAL PROCEDURE UpdateApprovalEntryForDelegation@1000000011(ReceiverID@1000000001 : Code[50];ApprovalEntry@1000000000 : Record 454);
    BEGIN
      //>>001 TPZ3134
      WITH ApprovalEntry DO BEGIN
        "Approver ID" := ReceiverID;
        MODIFY;
      END;
      //<<001 TPZ3134
    END;

    LOCAL PROCEDURE DeletePendingJobQueueEntry@1000000012(PurchaseHeader@1000000001 : Record 38;ApprovalEntry@1000000000 : Record 454);
    VAR
      JobQueueEntry@1000000002 : Record 472;
    BEGIN
      //>>001 TPZ3134
      WITH PurchaseHeader DO BEGIN
        ApprovalEntry.SETCURRENTKEY("Table ID","Document Type","Document No.","Sequence No.");
        ApprovalEntry.SETRANGE("Table ID",DATABASE::"Purchase Header");
        ApprovalEntry.SETRANGE("Document Type","Document Type");
        ApprovalEntry.SETRANGE("Document No.","No.");
        ApprovalEntry.SETFILTER(Status,'<>%1',ApprovalEntry.Status::Open);
        IF ApprovalEntry.FIND('+') THEN BEGIN
          JobQueueEntry.SETRANGE(Description,ApprovalEntry."Document No.");
          JobQueueEntry.SETRANGE("Object Type to Run",JobQueueEntry."Object Type to Run"::Codeunit);
          IF JobQueueEntry.FINDSET THEN
            JobQueueEntry.DELETEALL;
        END;
      END;
      //<<001 TPZ3134
    END;

    PROCEDURE SendPurchaseApprovalRequestMail@1000000014(PurchaseHeader@1001 : Record 38;ApprovalEntry@1000 : Record 454);
    VAR
      AppCommentLine@1000000000 : Record 455;
      SettingsURL@1000000001 : Text;
      JobQueueDispatcher@1000000002 : Codeunit 448;
      GUIDValue@1000000003 : GUID;
      lUserSetup@1000000004 : Record 91;
      lUserSetup2@1000000005 : Record 91;
    BEGIN
      //>>001 TPZ3134
      Subject := STRSUBSTNO(Text007,Text047);
      Body := Text046;
      IF lUserSetup.GET(USERID) THEN BEGIN
        SenderName := lUserSetup."E-Mail Sender Name";
        SenderAddress := lUserSetup."E-Mail";
        IF lUserSetup2.GET(lUserSetup."Approver ID") THEN
          Recipient := lUserSetup2."E-Mail"
        ELSE
          ERROR('Please setup Approver.');
      END;
      SMTP.CreateMessage(SenderName,SenderAddress,Recipient,Subject,Body,TRUE);
      Body := '';
      SettingsURL :='<a href=' + GETURL(CLIENTTYPE::Web,COMPANYNAME,OBJECTTYPE::Page,50,PurchaseHeader,FALSE) + '> ' +PurchaseHeader."No."+'</a>' ;
      SMTP.AppendBody(Body);
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('You are registered to receive notifications related to TOPAZ LIGHTING CORP.');
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('This is a message to notify you that:');
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('Purchase '+ FORMAT(PurchaseHeader."Document Type")+' '+FORMAT(SettingsURL) +' requires your approval.');
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('<br>');
      SMTP.AppendBody('<table border="1">');
      SMTP.AppendBody('<tr>');
      SMTP.AppendBody('<td>' + '<font face="Arial size 2"><b> Amount($) </b></font></td>');
      PurchaseHeader.CALCFIELDS(Amount);
      SMTP.AppendBody('<td>' + FORMAT(PurchaseHeader.Amount) + '   </td>');
      SMTP.AppendBody('</tr>');
      SMTP.AppendBody('<tr>');
      SMTP.AppendBody('<td>' + '<font face="Arial size 2"><b> Vendor </b></font></td>');
      SMTP.AppendBody('<td>' + FORMAT(PurchaseHeader."Pay-to Vendor No.") + ' '+ FORMAT(PurchaseHeader."Pay-to Name")+'</td>');
      SMTP.AppendBody('</tr>');
      SMTP.AppendBody('<tr>');
      SMTP.AppendBody('<td>' + '<font face="Arial size 2"><b> Due Date </b></font></td>');
      SMTP.AppendBody('<td>' + FORMAT(PurchaseHeader."Due Date")+'</td>');
      SMTP.AppendBody('</tr>');
      ApprovalEntry.CALCFIELDS(Comment);
      IF ApprovalEntry.Comment THEN BEGIN
        AppCommentLine.SETCURRENTKEY("Table ID","Document Type","Document No.");
        AppCommentLine.SETRANGE("Table ID",ApprovalEntry."Table ID");
        AppCommentLine.SETRANGE("Workflow Step Instance ID",ApprovalEntry."Workflow Step Instance ID");
        SMTP.AppendBody('<tr>');
        IF AppCommentLine.FIND('-') THEN BEGIN
          SMTP.AppendBody('<td>'+ '<font face="Arial size 2"><b> Comments </b></font></td>');
          SMTP.AppendBody('<td>');
          REPEAT
            BuildCommentLine(AppCommentLine);
          UNTIL AppCommentLine.NEXT = 0;
          SMTP.AppendBody('</td>');
        END;
        SMTP.AppendBody('</tr>');
      END;

      SMTP.Send;
      //<<001 TPZ3134
    END;

    BEGIN
    {
      001 TPZ3134 RPS 04142021 - Workflow setup for PO approvals
      002 TPZ3228 RPS 06152021 - PO Approval for multiple archived versions
    }
    END.
  }
}

