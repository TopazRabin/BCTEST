OBJECT Codeunit 51911 Codeunit5750EventSubscriber
{
  OBJECT-PROPERTIES
  {
    Date=10/10/21;
    Time=[ 7:05:53 AM];
    Modified=Yes;
    Version List=NAVEVENT,3362;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      TopazLocation@1000000000 : Record 14;

    [EventSubscriber(Codeunit,51910,CU5750_CreateShptLineFromSalesLine)]
    LOCAL PROCEDURE CU5750_CreateShptLineFromSalesLine@1000000003(VAR Sender@1000000000 : Codeunit 51910;VAR WhseShptLine@1000000001 : Record 7321;WhseShptHeader@1000000003 : Record 7320;SalesLine@1000000004 : Record 37);
    VAR
      OldLineNo@1000000002 : Integer;
    BEGIN
      WITH WhseShptLine DO BEGIN
        //TMEI 070215 - WMS Mod
        OldLineNo := 0;
        RESET;
        SETRANGE("No.", WhseShptHeader."No.");
        SETRANGE("Source No.", SalesLine."Document No.");
        SETRANGE("Source Line No.", SalesLine."Line No.");
        SETRANGE("Item No.", SalesLine."No.");
        IF FIND('-') THEN BEGIN
          LOCKTABLE;
          SuspendStatusCheck(TRUE);
          VALIDATE(Quantity,ABS(SalesLine."Outstanding Quantity") + WhseShptLine."Qty. Shipped");
          MODIFY;
          EXIT;
        END ELSE BEGIN
          SETFILTER("Item No.", '<>%1', SalesLine."No.");
          IF FIND('-') THEN BEGIN
            SuspendStatusCheck(TRUE);
            OldLineNo := "Line No.";
            DELETE(TRUE);
          END;
        END;
        //TM END 070215
        RESET;
      END;
    END;

    [EventSubscriber(Codeunit,51910,CU5750_CreateShptLineFromSalesLine_1)]
    LOCAL PROCEDURE CU5750_CreateShptLineFromSalesLine_1@1000000005(VAR Sender@1000000000 : Codeunit 51910;VAR WhseShptLine@1000000001 : Record 7321;WhseShptHeader@1000000003 : Record 7320;SalesLine@1000000004 : Record 37);
    VAR
      OldLineNo@1000000002 : Integer;
    BEGIN
      WITH WhseShptLine DO BEGIN
        //TM BEG 070215 - WMS Mod
        //"Line No." := "Line No." + 10000 original code

        SuspendStatusCheck(TRUE);
        IF OldLineNo = 0 THEN
          "Line No." := "Line No." + 10000
        ELSE
          "Line No." := OldLineNo;
        //TM END 070215
      END;
    END;

    [EventSubscriber(Codeunit,5750,OnAfterCreateShptLineFromSalesLine)]
    LOCAL PROCEDURE CU5750_CreateShptLineFromSalesLine_2@1000000006(VAR WarehouseShipmentLine@1000000000 : Record 7321;WarehouseShipmentHeader@1000000001 : Record 7320;SalesLine@1000000002 : Record 37);
    VAR
      WhseShptLine@1000000010 : Record 7321;
      SalesHeader@1000000009 : Record 36;
      Location@1000000008 : Record 14;
      OldLineNo@1000000007 : Integer;
      TpzSL@1000000006 : Record 37;
      ItemTypeCheck@1000000005 : Record 27;
      TpzwSL@1000000004 : Record 7321;
      TpzwSL1@1000000003 : Record 7321;
      WhseMgt@1000000011 : Codeunit 5775;
    BEGIN
      WITH WarehouseShipmentLine DO BEGIN
        //<TPZ2482>
        TpzSL.RESET;
        TpzSL.SETRANGE("Document No.",SalesLine."Document No.");
        TpzSL.SETFILTER("Outstanding Quantity",'<>%1',0);// bug fix
        IF TpzSL.FINDSET THEN REPEAT
          ItemTypeCheck.RESET;
          IF ItemTypeCheck.GET(TpzSL."No.") THEN
            IF ItemTypeCheck.Type = ItemTypeCheck.Type :: Service THEN BEGIN
              TpzwSL1.RESET;
              TpzwSL1.SETRANGE("No.", WarehouseShipmentHeader."No.");
              IF TpzwSL1.FINDLAST THEN;
              TpzwSL.RESET;
              TpzwSL.SETRANGE("No.", WarehouseShipmentHeader."No.");
              TpzwSL.SETRANGE("Item No.", TpzSL."No.");
              TpzwSL.SETRANGE("Source Line No.",TpzSL."Line No.");
              IF NOT TpzwSL.FINDFIRST THEN BEGIN
                TpzwSL.INIT;
                TpzwSL."No." := WarehouseShipmentHeader."No.";
                TpzwSL."Line No." := TpzwSL1."Line No."+ 10000;
                TpzwSL."Source Type" := DATABASE::"Sales Line";
                TpzwSL."Source Subtype" := TpzSL."Document Type";
                TpzwSL."Source No." := TpzSL."Document No.";
                TpzwSL."Source Line No." := TpzSL."Line No.";
                TpzwSL."Source Document" := WhseMgt.GetSourceDocument("Source Type","Source Subtype");
                TpzwSL."Location Code" := TpzwSL."Location Code";
                TpzwSL."Item No." := TpzSL."No.";
                TpzwSL."Variant Code" := TpzSL."Variant Code";
                //TpzwSL.TpzSL.TESTFIELD("Unit of Measure Code");
                TpzwSL."Unit of Measure Code" := TpzSL."Unit of Measure Code";
                TpzwSL."Qty. per Unit of Measure" := TpzSL."Qty. per Unit of Measure";
                TpzwSL.Description := TpzSL.Description;
                TpzwSL."Description 2" := TpzSL."Description 2";
                CU5750_SetQtysOnShptLine(TpzwSL,TpzSL.Quantity,TpzSL."Quantity (Base)");
                {TpzwSL.Quantity := TpzSL.Quantity;
                TpzwSL."Qty. (Base)" := TpzSL."Quantity (Base)";}
                TpzwSL."Qty. to Ship" := TpzSL."Qty. to Ship";
                TpzwSL."Qty. to Ship (Base)" := TpzSL."Qty. to Ship (Base)";
                //"Assemble to Order" := AssembleToOrder;
                IF TpzSL."Document Type" = TpzSL."Document Type"::Order THEN
                  TpzwSL."Due Date" := TpzSL."Planned Shipment Date";
                IF TpzSL."Document Type" = TpzSL."Document Type"::"Return Order" THEN
                  TpzwSL."Due Date" := WORKDATE;
                IF WarehouseShipmentHeader."Shipment Date" = 0D THEN
                  TpzwSL."Shipment Date" := TpzSL."Shipment Date"
                ELSE
                  TpzwSL."Shipment Date" := WarehouseShipmentHeader."Shipment Date";
                TpzwSL."Destination Type" := "Destination Type"::Customer;
                TpzwSL."Destination No." := TpzSL."Sell-to Customer No.";
                TpzwSL."Shipping Advice" := SalesHeader."Shipping Advice";
                TpzwSL.INSERT;
            END;
          END;
        UNTIL TpzSL.NEXT=0;
      END;
      //</TPZ2482>
    END;

    [EventSubscriber(Codeunit,5750,OnAfterCreateRcptLineFromPurchLine)]
    LOCAL PROCEDURE CU5750_PurchLine2ReceiptLine@1000000000(VAR WarehouseReceiptLine@1000000000 : Record 7317;WarehouseReceiptHeader@1000000001 : Record 7316;PurchaseLine@1000000002 : Record 39);
    VAR
      Inspection@1000000003 : Boolean;
      PurchPrice@1000000004 : Record 7012;
      Item@1000000008 : Record 27;
      Vendor@1000000007 : Record 23;
      PInspection@1000000006 : Boolean;
      DefaultDimension@1000000005 : Record 352;
    BEGIN
      //<TPZ1813>
      WITH WarehouseReceiptLine DO BEGIN
        Inspection := FALSE;//<TPZ2412>
        GetTopazLocation(PurchaseLine."Location Code");
        IF TopazLocation."Incoming Inspection Bin Code" <> '' THEN BEGIN
          PurchPrice.SETCURRENTKEY("Item No.","Vendor No.","Unit of Measure Code");
          PurchPrice.SETRANGE("Item No.", PurchaseLine."No.");
          PurchPrice.SETRANGE("Vendor No.",PurchaseLine."Buy-from Vendor No.");
          PurchPrice.SETRANGE("Unit of Measure Code",'PCS');
          IF PurchPrice.FIND('-') THEN
            PInspection := PurchPrice.Inspection;
          IF PurchaseLine."Buy-from Vendor No." <> '' THEN
            Vendor.GET(PurchaseLine."Buy-from Vendor No.");

          Item.GET(PurchaseLine."No.");

          IF Item.Inspection OR Vendor.Inspection OR PInspection THEN
            VALIDATE("Bin Code", TopazLocation."Incoming Inspection Bin Code");
            Inspection := TRUE; //<TPZ2412>
        END;
        //</TPZ1813>
        //<TPZ2412>
        NPI := FALSE;
        DefaultDimension.RESET;
        DefaultDimension.SETCURRENTKEY("Table ID","No.","Dimension Code");
        DefaultDimension.SETRANGE("Table ID",27);
        DefaultDimension.SETRANGE("No.","Item No.");
        DefaultDimension.SETRANGE("Dimension Code",'PRODLIFECYCLE');
        DefaultDimension.SETRANGE("Dimension Value Code",'INTRO');
        IF DefaultDimension.FINDFIRST THEN
          NPI := TRUE
        ELSE
          NPI := FALSE;
        //</TPZ2412>
        //-->TPZ3362
        "Package Tracking No." := PurchaseLine."Package Tracking No.";
        MODIFY;
        //<--TPZ3362
      END;
    END;

    [EventSubscriber(Codeunit,5750,OnAfterCreateRcptLineFromTransLine)]
    LOCAL PROCEDURE CU5750_TransLine2ReceiptLine@1000000004(VAR WarehouseReceiptLine@1000000000 : Record 7317;WarehouseReceiptHeader@1000000001 : Record 7316;TransferLine@1000000002 : Record 5741);
    VAR
      PurchRcptLine@1000000015 : Record 121;
      TransferHeader@1000000014 : Record 5740;
      TmpPurchLine@1000000013 : Record 39;
      TmpTrnsReceiptHeader@1000000012 : Record 5746;
      PurchLine@1000000011 : Record 39;
      PurchPrice@1000000010 : Record 7012;
      PInspection@1000000009 : Boolean;
      vendor@1000000008 : Record 23;
      item@1000000007 : Record 27;
      WhseInbndOtsdgQty@1000000006 : Decimal;
      UnitOfMeasureMgt@1000000005 : Codeunit 5402;
    BEGIN
      //TPZ2830
      WITH WarehouseReceiptLine DO BEGIN
        //EB <VSO2380>
        GetTopazLocation(TransferLine."Transfer-to Code");
        IF TopazLocation."Incoming Inspection Bin Code" <> '' THEN BEGIN
          PInspection := FALSE;
          IF TransferHeader.GET(TransferLine."Document No.") THEN BEGIN
            TmpPurchLine.SETRANGE("Inbound Container Number",TransferHeader."Inbound Container Number");
            TmpPurchLine.SETRANGE("No.",TransferLine."Item No.");
            IF TmpPurchLine.FINDFIRST THEN
              PurchPrice.RESET;
              PurchPrice.SETCURRENTKEY("Item No.","Vendor No.","Unit of Measure Code");
              PurchPrice.SETRANGE("Item No.", TransferLine."Item No.");
              PurchPrice.SETRANGE("Vendor No.",TmpPurchLine."Buy-from Vendor No.");
              PurchPrice.SETRANGE("Unit of Measure Code",'PCS');
            IF (PurchPrice.FINDFIRST) AND (TmpPurchLine."Buy-from Vendor No."<>'') THEN
              PInspection := PurchPrice.Inspection;
            IF TmpPurchLine."Buy-from Vendor No." <> '' THEN
              vendor.GET(TmpPurchLine."Buy-from Vendor No.");
            IF item."No." <> TransferLine."Item No." THEN
              item.GET(TransferLine."Item No.");

            IF item.Inspection OR vendor.Inspection OR PInspection THEN
                VALIDATE("Bin Code", TopazLocation."Incoming Inspection Bin Code");
          END;
        END;
        //EB </VSO2380>
        //MODIFY;
      END;
    END;

    LOCAL PROCEDURE CU5750_SetQtysOnShptLine@10(VAR WarehouseShipmentLine@1002 : Record 7321;Qty@1000 : Decimal;QtyBase@1001 : Decimal);
    VAR
      Location@1003 : Record 14;
    BEGIN
      WITH WarehouseShipmentLine DO BEGIN
        Quantity := Qty;
        "Qty. (Base)" := QtyBase;
        InitOutstandingQtys;
        CheckSourceDocLineQty;
        IF Location.GET("Location Code") THEN
          IF Location."Directed Put-away and Pick" THEN
            CheckBin(0,0);
      END;
    END;

    PROCEDURE DeleteWhseShptLine@1000000002(WhseShptHeader@1000000000 : Record 7320) : Boolean;
    VAR
      WhseShptLine@1000000001 : Record 7321;
      SalesLine@1000000002 : Record 37;
      LineDeleted@1000000003 : Boolean;
    BEGIN
      //TM BEG 111615
      LineDeleted := FALSE;
      WhseShptLine.SETRANGE("No.", WhseShptHeader."No.");
      IF WhseShptLine.FINDSET THEN
      REPEAT
        SalesLine.SETRANGE("Document Type", WhseShptLine."Source Subtype");
        SalesLine.SETRANGE("Document No.", WhseShptLine."Source No.");
        SalesLine.SETRANGE("Line No.", WhseShptLine."Source Line No.");

        IF SalesLine.FINDFIRST = FALSE THEN BEGIN
          WhseShptLine.DELETE;
          LineDeleted := TRUE;
        END ELSE BEGIN
          IF SalesLine.Quantity = 0 THEN BEGIN
            WhseShptLine.DELETE;
            LineDeleted := TRUE;
          END;
        END;
      UNTIL WhseShptLine.NEXT = 0;
      EXIT(LineDeleted);
      //TM END 111615
    END;

    PROCEDURE GetTopazLocation@1000000001(LocationCode@1000000000 : Code[10]);
    BEGIN
      //<TPZ1813>
      IF TopazLocation.Code <> LocationCode THEN
        TopazLocation.GET(LocationCode);
      //</TPZ1813>
    END;

    BEGIN
    END.
  }
}

