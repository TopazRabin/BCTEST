OBJECT Codeunit 51921 Codeunit7000EventSubscriber
{
  OBJECT-PROPERTIES
  {
    Date=04/27/21;
    Time=[ 7:14:10 AM];
    Modified=Yes;
    Version List=NAVEVENT;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      FoundSalesPrice@1000000010 : Boolean;
      ExchRateDate@1000000005 : Date;
      Item@1000000000 : Record 27;
      "***ABCSI Globals***"@1000000004 : Integer;
      TempHotSheetPrice@1000000003 : TEMPORARY Record 50017;
      FoundHotSheetPrice@1000000002 : Boolean;
      CustDivision@1000000001 : Record 50007;
      DateCaption@1000000006 : Text[30];
      PricesInCurrency@1000000007 : Boolean;
      Currency@1000000008 : Record 4;
      CurrencyFactor@1000000009 : Decimal;
      GLSetup@1000000011 : Record 98;
      "--"@1000000012 : Integer;
      AllowLineDisc@1000000019 : Boolean;
      AllowInvDisc@1000000018 : Boolean;
      VATPerCent@1000000017 : Decimal;
      PricesInclVAT@1000000016 : Boolean;
      VATCalcType@1000000015 : 'Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax';
      VATBusPostingGr@1000000014 : Code[10];
      QtyPerUOM@1000000013 : Decimal;
      Qty@1000000020 : Decimal;
      LineDiscPerCent@1000000021 : Decimal;
      TempSalesPrice@1000000022 : TEMPORARY Record 7002;
      ResPrice@1000000023 : Record 201;
      ResFindUnitPrice@1000000024 : Codeunit 221;
      TempSalesLineDisc@1000000025 : TEMPORARY Record 7004;

    [EventSubscriber(Codeunit,51920,CU7000_FindSalesLinePrice)]
    LOCAL PROCEDURE CU7000_FindSalesLinePrice@1000000000(VAR Sender@1000000000 : Codeunit 51920;VAR SalesLine@1000000001 : Record 37;VAR TempSalesPrice@1000000002 : Record 7002;VAR CalledByFieldNo@1000000003 : Integer);
    BEGIN
      //-->TPZ2765 Pankaj
      IF SalesLine."Pricing Logic" = SalesLine."Pricing Logic"::"Hot Sheet" THEN
        CalledByFieldNo := SalesLine.FIELDNO(Quantity);
      TempSalesPrice."Pricing Logic" := SalesLine."Pricing Logic";
      //<--
    END;

    [EventSubscriber(Codeunit,51920,CU7000_FindSalesLinePrice_1)]
    PROCEDURE CU7000_FindSalesLinePrice_1@1000000021(VAR Sender@1000000000 : Codeunit 51920;VAR SalesLine@1000000001 : Record 37;VAR TempSalesPrice@1000000002 : Record 7002);
    BEGIN
       WITH SalesLine DO BEGIN
         IF (SalesLine."Pricing Logic" <> SalesLine."Pricing Logic"::"Sales Price") AND (Multiplier = 0) THEN
           "Pricing Logic" := "Pricing Logic"::"Item Unit Price"; //TOP230 KT ABCSI CRP 2 Fixes 06092015
         "Alt. UOM Unit Price" := TempSalesPrice."Unit Price" * "Qty. per Alt. UOM";  //TOP050 KT ABCSI Modification to Item Cards 01202015
       END;
    END;

    [EventSubscriber(Codeunit,7000,OnAfterFindSalesLineLineDisc)]
    PROCEDURE CU7000_FindSalesLineLineDisc@1000000022(VAR SalesLine@1000000000 : Record 37;SalesHeader@1000000001 : Record 36;SalesLineDiscount@1000000002 : Record 7004);
    VAR
      StartingDate@1000000003 : Date;
      HotSheetPrice@1000000004 : Record 50017;
    BEGIN
      WITH SalesLine DO BEGIN
        //IF CustDivision.GET(SalesHeader."Sell-to Customer No.",SalesHeader."Shortcut Dimension 5 Code") THEN BEGIN END; //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04142015
        IF SalesLine."Pricing Logic"= SalesLine."Pricing Logic"::"Sales Price" THEN BEGIN
          SalesLine."Line Discount %" := 0;
          EXIT;  //PSHUKLA
        END;
        {
        //-->Code used on Sales Line Quantity field to skip update unit price
        IF (SalesLine."Shortcut Dimension 5 Code" <> 'E') AND (SalesLine."Shortcut Dimension 5 Code" <> 'P') THEN BEGIN //<TPZ2558> //<TPZ2641>
        END ELSE BEGIN
          //SalesLine."Line Discount %" := 0;
          EXIT;  //PSHUKLA
        END;
        //<--
        }
        IF Type = Type::Item THEN BEGIN
          //TOP230 KT ABCSI CRP 2 Fixes 05282015 - Comment End
          //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04142015 End
          "Line Discount %" := SalesLineDiscount."Line Discount %";
          "Recomm. Multiplier" := SalesLineDiscount.Multiplier; //TOP100A KT ABCSI Multipliers 02182015
          Multiplier := SalesLineDiscount.Multiplier; //TOP100A KT ABCSI Multipliers 02182015
          //TOP230 KT ABCSI CRP 2 Fixes 06042015
          IF NOT SalesLineDiscount.ISEMPTY THEN BEGIN
            IF SalesLineDiscount."Hot Sheet Code" <> '' THEN BEGIN
              StartingDate := 0D;
              IF SalesHeader."Document Type" IN [SalesHeader."Document Type"::Invoice,SalesHeader."Document Type"::"Credit Memo"] THEN
                StartingDate := SalesHeader."Posting Date"
              ELSE
                StartingDate := SalesHeader."Order Date";

              HotSheetPrice.RESET;
              HotSheetPrice.SETRANGE(Code,SalesLineDiscount."Hot Sheet Code");
              IF (SalesLineDiscount.Type = SalesLineDiscount.Type::Item) AND (SalesLineDiscount.Code <> '') THEN
                HotSheetPrice.SETRANGE("Item No.",SalesLineDiscount.Code)
              ELSE IF (SalesLine.Type = SalesLine.Type::Item) THEN
                HotSheetPrice.SETRANGE("Item No.",SalesLine."No.");
              IF "Unit of Measure Code" <> '' THEN
                HotSheetPrice.SETFILTER("Unit of Measure Code",'%1|%2',"Unit of Measure Code",'');
              HotSheetPrice.SETFILTER("Ending Date",'%1|>=%2',0D,StartingDate);
              HotSheetPrice.SETRANGE("Starting Date",0D,StartingDate);
              IF HotSheetPrice.FINDFIRST THEN BEGIN
                "Unit Price" := HotSheetPrice."Unit Price";
                "Alt. UOM Unit Price" := HotSheetPrice."Unit Price" * "Qty. per Alt. UOM";  //TOP050 KT ABCSI Modification to Item Cards 01202015
                "Pricing Logic" := "Pricing Logic"::"Hot Sheet";
              END;
            END ELSE BEGIN
              IF SalesLineDiscount."Sales Type" = SalesLineDiscount."Sales Type"::Customer THEN
                "Pricing Logic" := "Pricing Logic"::"Sales Line Multiplier(Cust.)"
              ELSE IF SalesLineDiscount."Sales Type" = SalesLineDiscount."Sales Type"::"Customer Disc. Group" THEN
                "Pricing Logic" := "Pricing Logic"::"Sales Line Multiplier(Cust. Mult. Grp.)";
            END;
          END;
          //TOP230 KT ABCSI CRP 2 Fixes 06042015
        END;
      END;
    END;

    [EventSubscriber(Codeunit,51920,CU7000_CalcBestUnitPrice)]
    LOCAL PROCEDURE CU7000_BestCalcSalesPrice@1000000001(SalesPrice@1000000000 : Record 7002;VAR BestSalesPrice@1000000001 : Boolean);
    BEGIN
      //-->TPZ2765 Pankaj
      IF SalesPrice."Pricing Logic" = SalesPrice."Pricing Logic"::"Sales Price" THEN
        BestSalesPrice := TRUE;
      //<--
    END;

    [EventSubscriber(Codeunit,51920,CU7000_FindSalesPrice)]
    PROCEDURE CU7000_FindSalesPrice@1000000026(VAR Sender@1000000000 : Codeunit 51920;VAR SalesLine@1000000001 : Record 37);
    VAR
      CustLoc@1000000002 : Record 18;
    BEGIN
      SalesLine."Sales Price Bill To" := SalesLine."Bill-to Customer No.";
      SalesLine."Bill-to Customer No." := SalesLine."Sell-to Customer No.";
      IF CustLoc.GET(SalesLine."Sell-to Customer No.") THEN;
      SalesLine."Customer Price Group" := CustLoc."Customer Price Group"; //
      SalesLine."Customer Disc. Group" := CustLoc."Customer Disc. Group";
    END;

    [EventSubscriber(Codeunit,51920,CU7000_FindSalesPrice_1)]
    PROCEDURE CU7000_FindSalesPrice_1@1000000027(VAR Sender@1000000000 : Codeunit 51920;VAR SalesLine@1000000001 : Record 37);
    VAR
      SalesHeaderLoc@1000000002 : Record 36;
    BEGIN
      SalesLine."Bill-to Customer No." := SalesLine."Sales Price Bill To";
      SalesLine."Sales Price Bill To" := '';
      IF SalesHeaderLoc.GET(SalesLine."Document Type",SalesLine."Document No.") THEN BEGIN
        SalesLine."Customer Price Group" := SalesHeaderLoc."Customer Price Group";
        SalesLine."Customer Disc. Group" := SalesHeaderLoc."Customer Disc. Group";
      END;
    END;

    PROCEDURE FindSalesLineHotSheetPrice@1000000007(SalesHeader@1001 : Record 36;VAR SalesLine@1000 : Record 37;CalledByFieldNo@1002 : Integer);
    BEGIN
      //not used in any object
      //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04132015 Start,
      WITH SalesLine DO BEGIN
        //SetUoM(ABS(Quantity),"Qty. per Unit of Measure"); //Pankaj need to open code
        TESTFIELD("Qty. per Unit of Measure");
        CASE Type OF
          Type::Item:
            BEGIN
              Item.GET("No.");
              SalesLineHotSheetPriceExists(SalesHeader,SalesLine);
              CalcBestHotSheetPrice(TempHotSheetPrice);

              IF FoundHotSheetPrice OR
                 NOT ((CalledByFieldNo = FIELDNO(Quantity)) OR
                      (CalledByFieldNo = FIELDNO("Variant Code")))
              THEN BEGIN
                "Unit Price" := TempHotSheetPrice."Unit Price";
                "Alt. UOM Unit Price" := TempHotSheetPrice."Unit Price" * "Qty. per Alt. UOM";  //TOP050 KT ABCSI Modification to Item Cards 01202015
                "Hot Sheet Code" := TempHotSheetPrice.Code;
              END;
            END;
        END;
      END;
      //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04132015 End
    END;

    LOCAL PROCEDURE CalcBestSalesPrice@1000000002(VAR SalesPrice@1000 : Record 7002);
    VAR
      BestSalesPrice@1002 : Record 7002;
    BEGIN
      //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04132015 Start
      WITH SalesPrice DO BEGIN
        FoundSalesPrice := FINDSET;
        IF FoundSalesPrice THEN
          REPEAT
            IF IsInMinQty("Unit of Measure Code","Minimum Quantity") THEN BEGIN
              ConvertPriceToVAT(
                "Price Includes VAT",Item."VAT Prod. Posting Group",
                "VAT Bus. Posting Gr. (Price)","Unit Price");
              ConvertPriceToUoM("Unit of Measure Code","Unit Price");
              ConvertPriceLCYToFCY("Currency Code","Unit Price");

              CASE TRUE OF
                ((BestSalesPrice."Currency Code" = '') AND ("Currency Code" <> '')) OR
                ((BestSalesPrice."Variant Code" = '') AND ("Variant Code" <> '')):
                  BestSalesPrice := SalesPrice;
                ((BestSalesPrice."Currency Code" = '') OR ("Currency Code" <> '')) AND
                ((BestSalesPrice."Variant Code" = '') OR ("Variant Code" <> '')):
                  IF (BestSalesPrice."Unit Price" = 0) OR
                     (CalcLineAmount(BestSalesPrice) > CalcLineAmount(SalesPrice))
                  THEN
                    BestSalesPrice := SalesPrice;
              END;
            END;
          UNTIL NEXT = 0;
      END;


      SalesPrice := BestSalesPrice;
      //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04132015 End
    END;

    LOCAL PROCEDURE CalcBestHotSheetPrice@1000000017(VAR HotSheetPrice@1000 : Record 50017);
    VAR
      BestHotSheetPrice@1002 : Record 50017;
    BEGIN
      //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04132015 Start
      WITH HotSheetPrice DO BEGIN
        FoundHotSheetPrice := FINDSET;
        IF FoundHotSheetPrice THEN
          REPEAT
              ConvertPriceToUoM("Unit of Measure Code","Unit Price");
              IF (BestHotSheetPrice."Unit Price" = 0) OR (BestHotSheetPrice."Unit Price" > HotSheetPrice."Unit Price") THEN
              BestHotSheetPrice := HotSheetPrice;
          UNTIL NEXT = 0;
      END;


      HotSheetPrice := BestHotSheetPrice;
      //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04132015 End
    END;

    PROCEDURE FindHotSheetPrice@1000000010(VAR ToHotSheetPrice@1003 : Record 50017;ItemNo@1012 : Code[20];UOM@1010 : Code[10];StartingDate@1008 : Date);
    VAR
      FromHotSheetPrice@1002 : Record 50017;
    BEGIN
      //Used in  SalesLineHotSheetPriceExists()
      //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04132015 Start
      WITH FromHotSheetPrice DO BEGIN
        SETRANGE("Item No.",ItemNo);
        SETFILTER("Ending Date",'%1|>=%2',0D,StartingDate);
        IF UOM <> '' THEN
          SETFILTER("Unit of Measure Code",'%1|%2',UOM,'');
        SETRANGE("Starting Date",0D,StartingDate);

        ToHotSheetPrice.RESET;
        ToHotSheetPrice.DELETEALL;

        CopyHotSheetPriceToHotSheetPrice(FromHotSheetPrice,ToHotSheetPrice);

      END;
      //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04132015 End
    END;

    PROCEDURE SalesLineHotSheetPriceExists@1000000009(SalesHeader@1001 : Record 36;VAR SalesLine@1000 : Record 37) : Boolean;
    BEGIN
      //Used in FindSalesLineHotSheetPrice() //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04132015 Start
      WITH SalesLine DO
        IF (Type = Type::Item) AND Item.GET("No.") THEN BEGIN
          FindHotSheetPrice(
            TempHotSheetPrice,
            "No.","Unit of Measure Code",
            SalesHeaderStartDate(SalesHeader,DateCaption));
          EXIT(TempHotSheetPrice.FINDFIRST);
        END;
      EXIT(FALSE);
      //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04132015 End
    END;

    LOCAL PROCEDURE CopyHotSheetPriceToHotSheetPrice@1000000005(VAR FromHotSheetPrice@1000 : Record 50017;VAR ToHotSheetPrice@1001 : Record 50017);
    BEGIN
      //used in FindHotSheetPrice() //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04132015 Start
      WITH ToHotSheetPrice DO BEGIN
        IF FromHotSheetPrice.FINDSET THEN
          REPEAT
            IF FromHotSheetPrice."Unit Price" <> 0 THEN BEGIN
              ToHotSheetPrice := FromHotSheetPrice;
              INSERT;
            END;
          UNTIL FromHotSheetPrice.NEXT = 0;
      END;
      //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04132015 End
    END;

    LOCAL PROCEDURE CalcBestUnitPrice@1(VAR SalesPrice@1000 : Record 7002);
    VAR
      BestSalesPrice@1002 : Record 7002;
      BestSalesPriceFound@1001 : Boolean;
      Codeunit7000EventPublisher@1000000000 : Codeunit 51920;
    BEGIN
      WITH SalesPrice DO BEGIN
        FoundSalesPrice := FINDSET;
        IF FoundSalesPrice THEN
          REPEAT
            IF IsInMinQty("Unit of Measure Code","Minimum Quantity") THEN BEGIN
              ConvertPriceToVAT(
                "Price Includes VAT",Item."VAT Prod. Posting Group",
                "VAT Bus. Posting Gr. (Price)","Unit Price");
              ConvertPriceToUoM("Unit of Measure Code","Unit Price");
              ConvertPriceLCYToFCY("Currency Code","Unit Price");

              CASE TRUE OF
                ((BestSalesPrice."Currency Code" = '') AND ("Currency Code" <> '')) OR
                ((BestSalesPrice."Variant Code" = '') AND ("Variant Code" <> '')):
                  BEGIN
                    BestSalesPrice := SalesPrice;
                    BestSalesPriceFound := TRUE;
                  END;
                ((BestSalesPrice."Currency Code" = '') OR ("Currency Code" <> '')) AND
                ((BestSalesPrice."Variant Code" = '') OR ("Variant Code" <> '')):
                  IF (BestSalesPrice."Unit Price" = 0) OR
                     (CalcLineAmount(BestSalesPrice) > CalcLineAmount(SalesPrice))
                  THEN BEGIN
                    BestSalesPrice := SalesPrice;
                    BestSalesPriceFound := TRUE;
                  END;
              END;
            END;
          UNTIL NEXT = 0;
      END;
      // //-->TPZ2765 Pankaj
      // IF SalesPrice."Pricing Logic" = SalesPrice."Pricing Logic"::"Sales Price" THEN
      //  BestSalesPriceFound := TRUE;
      // //<--
      Codeunit7000EventPublisher.CU7000_CalcBestUnitPrice(SalesPrice,BestSalesPriceFound); //Pankaj
      // No price found in agreement
      IF NOT BestSalesPriceFound THEN BEGIN
        ConvertPriceToVAT(
          Item."Price Includes VAT",Item."VAT Prod. Posting Group",
          Item."VAT Bus. Posting Gr. (Price)",Item."Unit Price");
        ConvertPriceToUoM('',Item."Unit Price");
        ConvertPriceLCYToFCY('',Item."Unit Price");

        CLEAR(BestSalesPrice);
        BestSalesPrice."Unit Price" := Item."Unit Price";
        BestSalesPrice."Allow Line Disc." := AllowLineDisc;
        BestSalesPrice."Allow Invoice Disc." := AllowInvDisc;
      END;

      SalesPrice := BestSalesPrice;
    END;

    PROCEDURE SetResPrice@28(Code2@1006 : Code[20];WorkTypeCode@1005 : Code[10];CurrencyCode@1003 : Code[10]);
    BEGIN
      WITH ResPrice DO BEGIN
        INIT;
        Code := Code2;
        "Work Type Code" := WorkTypeCode;
        "Currency Code" := CurrencyCode;
      END;
    END;

    LOCAL PROCEDURE CalcBestLineDisc@11(VAR SalesLineDisc@1000 : Record 7004);
    VAR
      BestSalesLineDisc@1002 : Record 7004;
    BEGIN
      WITH SalesLineDisc DO BEGIN
        IF FINDSET THEN
          REPEAT
            IF IsInMinQty("Unit of Measure Code","Minimum Quantity") THEN
              CASE TRUE OF
                ((BestSalesLineDisc."Currency Code" = '') AND ("Currency Code" <> '')) OR
                ((BestSalesLineDisc."Variant Code" = '') AND ("Variant Code" <> '')) OR
                ((BestSalesLineDisc."Hot Sheet Code" = '') AND ("Hot Sheet Code" <> '')): //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04132015 End
                  BestSalesLineDisc := SalesLineDisc;
                ((BestSalesLineDisc."Currency Code" = '') OR ("Currency Code" <> '')) AND
                ((BestSalesLineDisc."Variant Code" = '') OR ("Variant Code" <> '')) AND
                ((BestSalesLineDisc."Hot Sheet Code" = '') OR ("Hot Sheet Code" <> '')): //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04132015 End
                  IF BestSalesLineDisc."Line Discount %" < "Line Discount %" THEN
                    BestSalesLineDisc := SalesLineDisc;
              END;
          UNTIL NEXT = 0;
      END;

      SalesLineDisc := BestSalesLineDisc;
    END;

    [EventSubscriber(Codeunit,51920,CU7000_FindSalesLineDiscCustom)]
    PROCEDURE CU7000_FindSalesLineDiscCustom@1000000018(VAR Sender@1000000000 : Codeunit 51920;VAR ToSalesLineDisc@1000000001 : Record 7004;CustNo@1000000002 : Code[20];ContNo@1000000003 : Code[20];CustDiscGrCode@1000000004 : Code[20];CampaignNo@1000000005 : Code[20];ItemNo@1000000006 : Code[20];ItemDiscGrCode@1000000007 : Code[20];VariantCode@1000000008 : Code[10];UOM@1000000009 : Code[10];CurrencyCode@1000000010 : Code[10];HotSheetCode@1000000011 : Code[10];StartingDate@1000000012 : Date;ShowAll@1000000013 : Boolean);
    VAR
      FromSalesLineDisc@1007 : Record 7004;
      TempCampaignTargetGr@1009 : TEMPORARY Record 7030;
      InclCampaigns@1008 : Boolean;
    BEGIN
      //used in codeunit 7000 SalesLineBufferLineDiscExists,SalesLineLineDiscExists //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04152015 Start
      WITH FromSalesLineDisc DO BEGIN
        SETFILTER("Ending Date",'%1|>=%2',0D,StartingDate);
        SETFILTER("Variant Code",'%1|%2',VariantCode,'');
        IF NOT ShowAll THEN BEGIN
          SETRANGE("Starting Date",0D,StartingDate);
          SETFILTER("Currency Code",'%1|%2',CurrencyCode,'');
          IF UOM <> '' THEN
            SETFILTER("Unit of Measure Code",'%1|%2',UOM,'');
        END;
        IF HotSheetCode <> '' THEN
          SETFILTER("Hot Sheet Code",'%1|%2',HotSheetCode,'');
        ToSalesLineDisc.RESET;
        ToSalesLineDisc.DELETEALL;
        FOR "Sales Type" := "Sales Type"::Customer TO "Sales Type"::Campaign DO
          IF ("Sales Type" = "Sales Type"::"All Customers") OR
             (("Sales Type" = "Sales Type"::Customer) AND (CustNo <> '')) OR
             (("Sales Type" = "Sales Type"::"Customer Disc. Group") AND (CustDiscGrCode <> '')) OR
             (("Sales Type" = "Sales Type"::Campaign) AND
              NOT ((CustNo = '') AND (ContNo = '') AND (CampaignNo = '')))
          THEN BEGIN
            InclCampaigns := FALSE;

            SETRANGE("Sales Type","Sales Type");
            CASE "Sales Type" OF
              "Sales Type"::"All Customers":
                SETRANGE("Sales Code");
              "Sales Type"::Customer:
                SETRANGE("Sales Code",CustNo);
              "Sales Type"::"Customer Disc. Group":
                SETRANGE("Sales Code",CustDiscGrCode);
              "Sales Type"::Campaign:
                BEGIN
                  InclCampaigns := ActivatedCampaignExists(TempCampaignTargetGr,CustNo,ContNo,CampaignNo);
                  SETRANGE("Sales Code",TempCampaignTargetGr."Campaign No.");
                END;
            END;

            REPEAT
              SETRANGE(Type,Type::Item);
              SETRANGE(Code,ItemNo);
              CopySalesDiscToSalesDiscCustom(FromSalesLineDisc,ToSalesLineDisc,"Hot Sheet Code",ItemNo,UOM,StartingDate);
              //TOP180 KT ABCSI Customer Pricing - Hot Sheets 07202015 Start

              IF ItemDiscGrCode <> '' THEN BEGIN
                SETRANGE(Type,Type::"Item Disc. Group");
                SETRANGE(Code,ItemDiscGrCode);
                //TOP180 KT ABCSI Customer Pricing - Hot Sheets 07202015 Start
                CopySalesDiscToSalesDiscCustom(FromSalesLineDisc,ToSalesLineDisc,"Hot Sheet Code",ItemNo,UOM,StartingDate);
                //TOP180 KT ABCSI Customer Pricing - Hot Sheets 07202015 Start
              END;

              IF InclCampaigns THEN BEGIN
                InclCampaigns := TempCampaignTargetGr.NEXT <> 0;
                SETRANGE("Sales Code",TempCampaignTargetGr."Campaign No.");
              END;
            UNTIL NOT InclCampaigns;
          END;
      END;
      //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04152015 End
    END;

    [EventSubscriber(Codeunit,51920,CU7000_CopySalesDiscToSalesDisc)]
    LOCAL PROCEDURE CU7000_CopySalesDiscToSalesDisc@1000000025(VAR Sender@1000000000 : Codeunit 51920;VAR ToSalesLineDisc@1000000001 : Record 7004);
    BEGIN
      ToSalesLineDisc.RESET;
      IF ToSalesLineDisc.FINDSET THEN
        REPEAT
          IF (ToSalesLineDisc."Hot Sheet Code" = '') AND (ToSalesLineDisc."Line Discount %" = 0) THEN BEGIN
            ToSalesLineDisc.DELETE;
          END; //TOP180 KT ABCSI
        UNTIL ToSalesLineDisc.NEXT = 0;
    END;

    PROCEDURE FindSalesLineDiscCustom@1000000024(VAR ToSalesLineDisc@1000000001 : Record 7004;CustNo@1000000002 : Code[20];ContNo@1000000003 : Code[20];CustDiscGrCode@1000000004 : Code[20];CampaignNo@1000000005 : Code[20];ItemNo@1000000006 : Code[20];ItemDiscGrCode@1000000007 : Code[20];VariantCode@1000000008 : Code[10];UOM@1000000009 : Code[10];CurrencyCode@1000000010 : Code[10];HotSheetCode@1000000011 : Code[10];StartingDate@1000000012 : Date;ShowAll@1000000013 : Boolean);
    VAR
      FromSalesLineDisc@1007 : Record 7004;
      TempCampaignTargetGr@1009 : TEMPORARY Record 7030;
      InclCampaigns@1008 : Boolean;
    BEGIN
      //used in codeunit 7000 SalesLineBufferLineDiscExists,SalesLineLineDiscExists //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04152015 Start
      WITH FromSalesLineDisc DO BEGIN
        SETFILTER("Ending Date",'%1|>=%2',0D,StartingDate);
        SETFILTER("Variant Code",'%1|%2',VariantCode,'');
        IF NOT ShowAll THEN BEGIN
          SETRANGE("Starting Date",0D,StartingDate);
          SETFILTER("Currency Code",'%1|%2',CurrencyCode,'');
          IF UOM <> '' THEN
            SETFILTER("Unit of Measure Code",'%1|%2',UOM,'');
        END;
        IF HotSheetCode <> '' THEN
          SETFILTER("Hot Sheet Code",'%1|%2',HotSheetCode,'');
        ToSalesLineDisc.RESET;
        ToSalesLineDisc.DELETEALL;
        FOR "Sales Type" := "Sales Type"::Customer TO "Sales Type"::Campaign DO
          IF ("Sales Type" = "Sales Type"::"All Customers") OR
             (("Sales Type" = "Sales Type"::Customer) AND (CustNo <> '')) OR
             (("Sales Type" = "Sales Type"::"Customer Disc. Group") AND (CustDiscGrCode <> '')) OR
             (("Sales Type" = "Sales Type"::Campaign) AND
              NOT ((CustNo = '') AND (ContNo = '') AND (CampaignNo = '')))
          THEN BEGIN
            InclCampaigns := FALSE;

            SETRANGE("Sales Type","Sales Type");
            CASE "Sales Type" OF
              "Sales Type"::"All Customers":
                SETRANGE("Sales Code");
              "Sales Type"::Customer:
                SETRANGE("Sales Code",CustNo);
              "Sales Type"::"Customer Disc. Group":
                SETRANGE("Sales Code",CustDiscGrCode);
              "Sales Type"::Campaign:
                BEGIN
                  InclCampaigns := ActivatedCampaignExists(TempCampaignTargetGr,CustNo,ContNo,CampaignNo);
                  SETRANGE("Sales Code",TempCampaignTargetGr."Campaign No.");
                END;
            END;

            REPEAT
              SETRANGE(Type,Type::Item);
              SETRANGE(Code,ItemNo);
              CopySalesDiscToSalesDiscCustom(FromSalesLineDisc,ToSalesLineDisc,"Hot Sheet Code",ItemNo,UOM,StartingDate);
              //TOP180 KT ABCSI Customer Pricing - Hot Sheets 07202015 Start

              IF ItemDiscGrCode <> '' THEN BEGIN
                SETRANGE(Type,Type::"Item Disc. Group");
                SETRANGE(Code,ItemDiscGrCode);
                //TOP180 KT ABCSI Customer Pricing - Hot Sheets 07202015 Start
                CopySalesDiscToSalesDiscCustom(FromSalesLineDisc,ToSalesLineDisc,"Hot Sheet Code",ItemNo,UOM,StartingDate);
                //TOP180 KT ABCSI Customer Pricing - Hot Sheets 07202015 Start
              END;

              IF InclCampaigns THEN BEGIN
                InclCampaigns := TempCampaignTargetGr.NEXT <> 0;
                SETRANGE("Sales Code",TempCampaignTargetGr."Campaign No.");
              END;
            UNTIL NOT InclCampaigns;
          END;
      END;
      //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04152015 End
    END;

    LOCAL PROCEDURE "----------VSO2417-----------"@1000000016();
    BEGIN
    END;

    PROCEDURE FindSalesLineBufferPrice@1000000008(SalesHeader@1001 : Record 50005;VAR SalesLine@1000 : Record 50006;CalledByFieldNo@1002 : Integer);
    BEGIN
      //Used in table 50006
      WITH SalesLine DO BEGIN
        SetCurrency(
          SalesHeader."Currency Code",SalesHeader."Currency Factor",SalesHeaderBufferExchDate(SalesHeader));
        SetVAT(SalesHeader."Prices Including VAT","VAT %","VAT Calculation Type","VAT Bus. Posting Group");
        SetUoM(ABS(Quantity),"Qty. per Unit of Measure");
        SetLineDisc("Line Discount %","Allow Line Disc.","Allow Invoice Disc.");

        TESTFIELD("Qty. per Unit of Measure");
        IF PricesInCurrency THEN
          SalesHeader.TESTFIELD("Currency Factor");

        CASE Type OF
          Type::Item:
            BEGIN
              Item.GET("No.");
              SalesLineBufferPriceExists(SalesHeader,SalesLine,FALSE);
              CalcBestUnitPrice(TempSalesPrice);

              IF FoundSalesPrice OR
                 NOT ((CalledByFieldNo = FIELDNO(Quantity)) OR
                      (CalledByFieldNo = FIELDNO("Variant Code")))
              THEN BEGIN
                "Allow Line Disc." := TempSalesPrice."Allow Line Disc.";
                "Allow Invoice Disc." := TempSalesPrice."Allow Invoice Disc.";
                "Unit Price" := TempSalesPrice."Unit Price";
                IF Multiplier = 0 THEN
                  "Pricing Logic" := "Pricing Logic"::"Item Unit Price"; //TOP230 KT ABCSI CRP 2 Fixes 06092015
                "Alt. UOM Unit Price" := TempSalesPrice."Unit Price" * "Qty. per Alt. UOM";  //TOP050 KT ABCSI Modification to Item Cards 01202015
              END;
            END;
          Type::Resource:
            BEGIN
              SetResPrice("No.","Work Type Code","Currency Code");
              CODEUNIT.RUN(CODEUNIT::"Resource-Find Price",ResPrice);

              ConvertPriceToVAT(FALSE,'','',ResPrice."Unit Price");
              ConvertPriceLCYToFCY(ResPrice."Currency Code",ResPrice."Unit Price");
              "Unit Price" := ResPrice."Unit Price" * "Qty. per Unit of Measure";
            END;
        END;
      END;
    END;

    PROCEDURE FindSalesLineBufferSalesPrice@1000000015(SalesHeader@1001 : Record 50005;VAR SalesLine@1000 : Record 50006;CalledByFieldNo@1002 : Integer);
    BEGIN
      ////Used in table 50006 TOP180 KT ABCSI Customer Pricing - Hot Sheets 04132015 Start
      WITH SalesLine DO BEGIN
        SetCurrency(
          SalesHeader."Currency Code",SalesHeader."Currency Factor",SalesHeaderBufferExchDate(SalesHeader));
        SetVAT(SalesHeader."Prices Including VAT","VAT %","VAT Calculation Type","VAT Bus. Posting Group");
        SetUoM(ABS(Quantity),"Qty. per Unit of Measure");
        SetLineDisc("Line Discount %","Allow Line Disc.","Allow Invoice Disc.");

        TESTFIELD("Qty. per Unit of Measure");
        IF PricesInCurrency THEN
          SalesHeader.TESTFIELD("Currency Factor");

        CASE Type OF
          Type::Item:
            BEGIN
              Item.GET("No.");
              SalesLineBufferPriceExists(SalesHeader,SalesLine,FALSE);
              CalcBestSalesPrice(TempSalesPrice);

              IF FoundSalesPrice OR
                 NOT ((CalledByFieldNo = FIELDNO(Quantity)) OR
                      (CalledByFieldNo = FIELDNO("Variant Code")))
              THEN BEGIN
                "Allow Line Disc." := TempSalesPrice."Allow Line Disc.";
                "Allow Invoice Disc." := TempSalesPrice."Allow Invoice Disc.";
                "Unit Price" := TempSalesPrice."Unit Price";
                IF "Unit Price" <> 0  THEN
                  "Pricing Logic" := "Pricing Logic"::"Sales Price"; //TOP230 KT ABCSI CRP 2 Fixes 06092015
                "Alt. UOM Unit Price" := TempSalesPrice."Unit Price" * "Qty. per Alt. UOM";  //TOP050 KT ABCSI Modification to Item Cards 01202015
                "Line Discount %" := 0;
                Multiplier := 0;
                "Recomm. Multiplier" := 0;
              END;
            END;
          Type::Resource:
            BEGIN
              SetResPrice("No.","Work Type Code","Currency Code");
              ResFindUnitPrice.RUN(ResPrice);

              ConvertPriceToVAT(FALSE,'','',ResPrice."Unit Price");
              ConvertPriceLCYToFCY(ResPrice."Currency Code",ResPrice."Unit Price");
              "Unit Price" := ResPrice."Unit Price" * "Qty. per Unit of Measure";
            END;
        END;
      END;
      //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04132015 End
    END;

    PROCEDURE FindSalesLineBufferLineDisc@1000000006(SalesHeader@1001 : Record 50005;VAR SalesLine@1000 : Record 50006);
    VAR
      HotSheetPrice@1000000000 : Record 50017;
      StartingDate@1000000001 : Date;
    BEGIN
      //Used in table 50006
      WITH SalesLine DO BEGIN
        SetCurrency(SalesHeader."Currency Code",0,0D);
        SetUoM(ABS(Quantity),"Qty. per Unit of Measure");

        TESTFIELD("Qty. per Unit of Measure");
        IF CustDivision.GET(SalesHeader."Sell-to Customer No.",SalesHeader."Shortcut Dimension 5 Code") THEN BEGIN END; //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04142015
        IF Type = Type::Item THEN BEGIN
          SalesLineBufferLineDiscExists(SalesHeader,SalesLine,FALSE);
          CalcBestLineDisc(TempSalesLineDisc);
          "Line Discount %" := TempSalesLineDisc."Line Discount %";
          "Recomm. Multiplier" := TempSalesLineDisc.Multiplier; //TOP100A KT ABCSI Multipliers 02182015
          Multiplier := TempSalesLineDisc.Multiplier; //TOP100A KT ABCSI Multipliers 02182015
          //TOP230 KT ABCSI CRP 2 Fixes 06042015
          IF NOT TempSalesLineDisc.ISEMPTY THEN BEGIN
            IF TempSalesLineDisc."Hot Sheet Code" <> '' THEN BEGIN
              StartingDate := 0D;
              IF SalesHeader."Document Type" IN [SalesHeader."Document Type"::Invoice,SalesHeader."Document Type"::"Credit Memo"] THEN
                StartingDate := SalesHeader."Posting Date"
              ELSE
                StartingDate := SalesHeader."Order Date";

              HotSheetPrice.RESET;
              HotSheetPrice.SETRANGE(Code,TempSalesLineDisc."Hot Sheet Code");
              IF (TempSalesLineDisc.Type = TempSalesLineDisc.Type::Item) AND (TempSalesLineDisc.Code <> '') THEN
                HotSheetPrice.SETRANGE("Item No.",TempSalesLineDisc.Code)
              ELSE IF (SalesLine.Type = SalesLine.Type::Item) THEN
                HotSheetPrice.SETRANGE("Item No.",SalesLine."No.");
              IF "Unit of Measure Code" <> '' THEN
                HotSheetPrice.SETFILTER("Unit of Measure Code",'%1|%2',"Unit of Measure Code",'');
              HotSheetPrice.SETFILTER("Ending Date",'%1|>=%2',0D,StartingDate);
              HotSheetPrice.SETRANGE("Starting Date",0D,StartingDate);
              IF HotSheetPrice.FINDFIRST THEN BEGIN
                "Unit Price" := HotSheetPrice."Unit Price";
                "Alt. UOM Unit Price" := HotSheetPrice."Unit Price" * "Qty. per Alt. UOM";  //TOP050 KT ABCSI Modification to Item Cards 01202015
                "Pricing Logic" := "Pricing Logic"::"Hot Sheet";
                "Hot Sheet Code" := TempSalesLineDisc."Hot Sheet Code"; //PKS
              END;
            END ELSE BEGIN
              IF TempSalesLineDisc."Sales Type" = TempSalesLineDisc."Sales Type"::Customer THEN
                "Pricing Logic" := "Pricing Logic"::"Sales Line Multiplier(Cust.)"
              ELSE IF TempSalesLineDisc."Sales Type" = TempSalesLineDisc."Sales Type"::"Customer Disc. Group" THEN
                "Pricing Logic" := "Pricing Logic"::"Sales Line Multiplier(Cust. Mult. Grp.)";
            END;
          END;
          //TOP230 KT ABCSI CRP 2 Fixes 06042015
        END;
      END;
    END;

    LOCAL PROCEDURE SalesHeaderBufferExchDate@1000000012(SalesHeader@1000 : Record 50005) : Date;
    BEGIN
      //used in FindSalesLineBufferPrice and FindSalesLineBufferSalesPrice
      WITH SalesHeader DO BEGIN
        IF "Posting Date" <> 0D THEN
          EXIT("Posting Date");
        EXIT(WORKDATE);
      END;
    END;

    PROCEDURE SalesLineBufferPriceExists@1000000013(SalesHeader@1001 : Record 50005;VAR SalesLine@1000 : Record 50006;ShowAll@1002 : Boolean) : Boolean;
    VAR
      c7000@1000000000 : Codeunit 7000;
    BEGIN
      WITH SalesLine DO   //used in FindSalesLineBufferPrice, FindSalesLineBufferSalesPrice     and table 5006
        IF (Type = Type::Item) AND Item.GET("No.") THEN BEGIN
          c7000.FindSalesPrice(
            //TempSalesPrice,"Bill-to Customer No.",SalesHeader."Bill-to Contact No.",
            TempSalesPrice,"Sell-to Customer No.",SalesHeader."Bill-to Contact No.",
            "Customer Price Group",'',"No.","Variant Code","Unit of Measure Code",
            SalesHeader."Currency Code",SalesHeaderBufferStartDate(SalesHeader,DateCaption),ShowAll);
          EXIT(TempSalesPrice.FINDFIRST);
        END;
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE SalesHeaderBufferStartDate@1000000014(SalesHeader@1000 : Record 50005;VAR DateCaption@1001 : Text[30]) : Date;
    BEGIN
      WITH SalesHeader DO //used in SalesLineBufferPriceExists and SalesLineBufferLineDiscExists
        IF "Document Type" IN ["Document Type"::Invoice,"Document Type"::"Credit Memo"] THEN BEGIN
          DateCaption := FIELDCAPTION("Posting Date");
          EXIT("Posting Date")
        END ELSE BEGIN
          DateCaption := FIELDCAPTION("Order Date");
          EXIT("Order Date");
        END;
    END;

    PROCEDURE SalesLineBufferLineDiscExists@1000000019(SalesHeader@1001 : Record 50005;VAR SalesLine@1000 : Record 50006;ShowAll@1002 : Boolean) : Boolean;
    BEGIN
      WITH SalesLine DO //used in FindSalesLineBufferLineDisc and table 5006
        IF (Type = Type::Item) AND Item.GET("No.") THEN BEGIN
          //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04152015 Start
          {
          FindSalesLineDisc(
            TempSalesLineDisc,"Bill-to Customer No.",SalesHeader."Bill-to Contact No.",
            "Customer Disc. Group",'',"No.",Item."Item Disc. Group","Variant Code","Unit of Measure Code",
            SalesHeader."Currency Code",SalesHeaderBufferStartDate(SalesHeader,DateCaption),ShowAll);
          }
          FindSalesLineDiscCustom(
            //TempSalesLineDisc,"Bill-to Customer No.",SalesHeader."Bill-to Contact No.",
            TempSalesLineDisc,"Sell-to Customer No.",SalesHeader."Bill-to Contact No.",
            "Customer Disc. Group",'',"No.",Item."Item Disc. Group","Variant Code","Unit of Measure Code",
            SalesHeader."Currency Code","Hot Sheet Code",SalesHeaderBufferStartDate(SalesHeader,DateCaption),ShowAll);
          //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04152015 End
          EXIT(TempSalesLineDisc.FINDFIRST);
        END;
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE "-----"@1000000003();
    BEGIN
    END;

    LOCAL PROCEDURE "--7000--"@1000000011();
    BEGIN
    END;

    LOCAL PROCEDURE SetCurrency@18(CurrencyCode2@1003 : Code[10];CurrencyFactor2@1001 : Decimal;ExchRateDate2@1002 : Date);
    BEGIN
      PricesInCurrency := CurrencyCode2 <> '';
      IF PricesInCurrency THEN BEGIN
        Currency.GET(CurrencyCode2);
        Currency.TESTFIELD("Unit-Amount Rounding Precision");
        CurrencyFactor := CurrencyFactor2;
        ExchRateDate := ExchRateDate2;
      END ELSE
        GLSetup.GET;
    END;

    LOCAL PROCEDURE SalesHeaderExchDate@25(SalesHeader@1000 : Record 36) : Date;
    BEGIN
      WITH SalesHeader DO BEGIN
        IF "Posting Date" <> 0D THEN
          EXIT("Posting Date");
        EXIT(WORKDATE);
      END;
    END;

    LOCAL PROCEDURE SetVAT@22(PriceInclVAT2@1003 : Boolean;VATPerCent2@1002 : Decimal;VATCalcType2@1001 : Option;VATBusPostingGr2@1000 : Code[10]);
    BEGIN
      PricesInclVAT := PriceInclVAT2;
      VATPerCent := VATPerCent2;
      VATCalcType := VATCalcType2;
      VATBusPostingGr := VATBusPostingGr2;
    END;

    LOCAL PROCEDURE SetUoM@23(Qty2@1000 : Decimal;QtyPerUoM2@1001 : Decimal);
    BEGIN
      Qty := Qty2;
      QtyPerUOM := QtyPerUoM2;
    END;

    LOCAL PROCEDURE SetLineDisc@29(LineDiscPerCent2@1000 : Decimal;AllowLineDisc2@1001 : Boolean;AllowInvDisc2@1002 : Boolean);
    BEGIN
      LineDiscPerCent := LineDiscPerCent2;
      AllowLineDisc := AllowLineDisc2;
      AllowInvDisc := AllowInvDisc2;
    END;

    LOCAL PROCEDURE ConvertPriceToVAT@4(FromPricesInclVAT@1006 : Boolean;FromVATProdPostingGr@1000 : Code[10];FromVATBusPostingGr@1002 : Code[10];VAR UnitPrice@1004 : Decimal);
    VAR
      VATPostingSetup@1007 : Record 325;
    BEGIN
      IF FromPricesInclVAT THEN BEGIN
        VATPostingSetup.GET(FromVATBusPostingGr,FromVATProdPostingGr);

        CASE VATPostingSetup."VAT Calculation Type" OF
          VATPostingSetup."VAT Calculation Type"::"Reverse Charge VAT":
            VATPostingSetup."VAT %" := 0;
          VATPostingSetup."VAT Calculation Type"::"Sales Tax":
            ERROR(
              //Text010, 'Need to check pankaj
              VATPostingSetup.FIELDCAPTION("VAT Calculation Type"),
              VATPostingSetup."VAT Calculation Type");
        END;

        CASE VATCalcType OF
          VATCalcType::"Normal VAT",
          VATCalcType::"Full VAT",
          VATCalcType::"Sales Tax":
            BEGIN
              IF PricesInclVAT THEN BEGIN
                IF VATBusPostingGr <> FromVATBusPostingGr THEN
                  UnitPrice := UnitPrice * (100 + VATPerCent) / (100 + VATPostingSetup."VAT %");
              END ELSE
                UnitPrice := UnitPrice / (1 + VATPostingSetup."VAT %" / 100);
            END;
          VATCalcType::"Reverse Charge VAT":
            UnitPrice := UnitPrice / (1 + VATPostingSetup."VAT %" / 100);
        END;
      END ELSE
        IF PricesInclVAT THEN
          UnitPrice := UnitPrice * (1 + VATPerCent / 100);
    END;

    LOCAL PROCEDURE ConvertPriceLCYToFCY@6(CurrencyCode@1005 : Code[10];VAR UnitPrice@1001 : Decimal);
    VAR
      CurrExchRate@1000 : Record 330;
    BEGIN
      IF PricesInCurrency THEN BEGIN
        IF CurrencyCode = '' THEN
          UnitPrice :=
            CurrExchRate.ExchangeAmtLCYToFCY(ExchRateDate,Currency.Code,UnitPrice,CurrencyFactor);
        UnitPrice := ROUND(UnitPrice,Currency."Unit-Amount Rounding Precision");
      END ELSE
        UnitPrice := ROUND(UnitPrice,GLSetup."Unit-Amount Rounding Precision");
    END;

    LOCAL PROCEDURE SalesHeaderStartDate@31(SalesHeader@1000 : Record 36;VAR DateCaption@1001 : Text[30]) : Date;
    BEGIN
      WITH SalesHeader DO
        IF "Document Type" IN ["Document Type"::Invoice,"Document Type"::"Credit Memo"] THEN BEGIN
          DateCaption := FIELDCAPTION("Posting Date");
          EXIT("Posting Date")
        END ELSE BEGIN
          DateCaption := FIELDCAPTION("Order Date");
          EXIT("Order Date");
        END;
    END;

    LOCAL PROCEDURE IsInMinQty@1000000004(UnitofMeasureCode@1003 : Code[10];MinQty@1000 : Decimal) : Boolean;
    BEGIN
      IF UnitofMeasureCode = '' THEN
        EXIT(MinQty <= QtyPerUOM * Qty);
      EXIT(MinQty <= Qty);
    END;

    LOCAL PROCEDURE ConvertPriceToUoM@5(UnitOfMeasureCode@1002 : Code[10];VAR UnitPrice@1001 : Decimal);
    BEGIN
      IF UnitOfMeasureCode = '' THEN
        UnitPrice := UnitPrice * QtyPerUOM;
    END;

    LOCAL PROCEDURE CalcLineAmount@15(SalesPrice@1000 : Record 7002) : Decimal;
    BEGIN
      WITH SalesPrice DO BEGIN
        IF "Allow Line Disc." THEN
          EXIT("Unit Price" * (1 - LineDiscPerCent / 100));
        EXIT("Unit Price");
      END;
    END;

    LOCAL PROCEDURE ActivatedCampaignExists@21(VAR ToCampaignTargetGr@1001 : Record 7030;CustNo@1000 : Code[20];ContNo@1002 : Code[20];CampaignNo@1004 : Code[20]) : Boolean;
    VAR
      FromCampaignTargetGr@1003 : Record 7030;
      Cont@1005 : Record 5050;
    BEGIN
      WITH FromCampaignTargetGr DO BEGIN
        ToCampaignTargetGr.RESET;
        ToCampaignTargetGr.DELETEALL;

        IF CampaignNo <> '' THEN BEGIN
          ToCampaignTargetGr."Campaign No." := CampaignNo;
          ToCampaignTargetGr.INSERT;
        END ELSE BEGIN
          SETRANGE(Type,Type::Customer);
          SETRANGE("No.",CustNo);
          IF FINDSET THEN
            REPEAT
              ToCampaignTargetGr := FromCampaignTargetGr;
              ToCampaignTargetGr.INSERT;
            UNTIL NEXT = 0
          ELSE BEGIN
            IF Cont.GET(ContNo) THEN BEGIN
              SETRANGE(Type,Type::Contact);
              SETRANGE("No.",Cont."Company No.");
              IF FINDSET THEN
                REPEAT
                  ToCampaignTargetGr := FromCampaignTargetGr;
                  ToCampaignTargetGr.INSERT;
                UNTIL NEXT = 0;
            END;
          END;
        END;
        EXIT(ToCampaignTargetGr.FINDFIRST);
      END;
    END;

    LOCAL PROCEDURE CopySalesDiscToSalesDiscCustom@1000000020(VAR FromSalesLineDisc@1000 : Record 7004;VAR ToSalesLineDisc@1001 : Record 7004;HotSheetCode@1000000003 : Code[10];ItemNo@1000000002 : Code[20];UOM@1000000001 : Code[10];StartingDate@1000000000 : Date);
    BEGIN
      //Used in FindSalesLineDiscCustom()//TOP180 KT ABCSI Customer Pricing - Hot Sheets 07202015 Start
      WITH ToSalesLineDisc DO BEGIN
        IF FromSalesLineDisc.FINDSET THEN
          REPEAT
            IF FromSalesLineDisc."Hot Sheet Code" <> '' THEN BEGIN
              IF IsItemNoInHotSheet(FromSalesLineDisc."Hot Sheet Code",ItemNo,UOM,StartingDate) THEN BEGIN
                ToSalesLineDisc := FromSalesLineDisc;
                INSERT;
              END;
            END ELSE BEGIN
              IF FromSalesLineDisc."Line Discount %" <> 0 THEN BEGIN
                ToSalesLineDisc := FromSalesLineDisc;
                INSERT;
              END;
            END;
          UNTIL FromSalesLineDisc.NEXT = 0;
      END;
      //TOP180 KT ABCSI Customer Pricing - Hot Sheets 07202015 Start
    END;

    PROCEDURE IsItemNoInHotSheet@1000000023(HotSheetCode@1000000001 : Code[10];ItemNo@1000000000 : Code[20];UOM@1000000003 : Code[10];StartingDate@1000000004 : Date) : Boolean;
    VAR
      HotSheetPrice@1000000002 : Record 50017;
    BEGIN
      //TOP180 KT ABCSI Customer Pricing - Hot Sheets 07202015 Start
      HotSheetPrice.RESET;
      HotSheetPrice.SETRANGE(Code,HotSheetCode);
      HotSheetPrice.SETRANGE("Item No.",ItemNo);
      HotSheetPrice.SETFILTER("Ending Date",'%1|>=%2',0D,StartingDate);
      HotSheetPrice.SETRANGE("Starting Date",0D,StartingDate);
      IF UOM <> '' THEN
        HotSheetPrice.SETFILTER("Unit of Measure Code",'%1|%2',UOM,'');
      EXIT(HotSheetPrice.FINDFIRST);
      //TOP180 KT ABCSI Customer Pricing - Hot Sheets 07202015 End
    END;

    [EventSubscriber(Codeunit,7000,OnGetCustNoForSalesHeader)]
    LOCAL PROCEDURE SetCustNo@1000000029(VAR SalesHeader@1000000000 : Record 36;VAR CustomerNo@1000000001 : Code[20]);
    BEGIN
      CustomerNo := SalesHeader."Sell-to Customer No.";
    END;

    BEGIN
    END.
  }
}

