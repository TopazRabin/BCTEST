OBJECT Codeunit 5771 Whse.-Sales Release
{
  OBJECT-PROPERTIES
  {
    Date=03/02/21;
    Time=12:36:04 PM;
    Modified=Yes;
    Version List=NAVW111.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      WhseRqst@1000 : Record 5765;
      SalesLine@1001 : Record 37;
      Location@1002 : Record 14;
      OldLocationCode@1003 : Code[10];
      First@1004 : Boolean;
      OldWhseRqst@1000000000 : Record 5765;
      Codeunit414EventSubscriber@1000000001 : Codeunit 51946;

    [External]
    PROCEDURE Release@1(SalesHeader@1000 : Record 36);
    VAR
      WhseType@1001 : 'Inbound,Outbound';
      OldWhseType@1002 : 'Inbound,Outbound';
    BEGIN
      WITH SalesHeader DO BEGIN
        CASE "Document Type" OF
          "Document Type"::Order:
            WhseRqst."Source Document" := WhseRqst."Source Document"::"Sales Order";
          "Document Type"::"Return Order":
            WhseRqst."Source Document" := WhseRqst."Source Document"::"Sales Return Order";
          ELSE
            EXIT;
        END;

        SalesLine.SETCURRENTKEY("Document Type","Document No.","Location Code");
        SalesLine.SETRANGE("Document Type","Document Type");
        SalesLine.SETRANGE("Document No.","No.");
        SalesLine.SETRANGE(Type,SalesLine.Type::Item);
        SalesLine.SETRANGE("Drop Shipment",FALSE);
        SalesLine.SETRANGE("Job No.",'');
        IF SalesLine.FINDSET THEN BEGIN
          First := TRUE;
          REPEAT
            IF (("Document Type" = "Document Type"::Order) AND (SalesLine.Quantity >= 0)) OR
               (("Document Type" = "Document Type"::"Return Order") AND (SalesLine.Quantity < 0))
            THEN
              WhseType := WhseType::Outbound
            ELSE
              WhseType := WhseType::Inbound;

            IF First OR (SalesLine."Location Code" <> OldLocationCode) OR (WhseType <> OldWhseType) THEN
              CreateWhseRqst(SalesHeader,SalesLine,WhseType);

            First := FALSE;
            OldLocationCode := SalesLine."Location Code";
            OldWhseType := WhseType;
          UNTIL SalesLine.NEXT = 0;
        END;

        WhseRqst.RESET;
        WhseRqst.SETCURRENTKEY("Source Type","Source Subtype","Source No.");
        WhseRqst.SETRANGE(Type,WhseRqst.Type);
        WhseRqst.SETRANGE("Source Type",DATABASE::"Sales Line");
        WhseRqst.SETRANGE("Source Subtype","Document Type");
        WhseRqst.SETRANGE("Source No.","No.");
        WhseRqst.SETRANGE("Document Status",Status::Open);
        IF NOT WhseRqst.ISEMPTY THEN
          WhseRqst.DELETEALL(TRUE);
      END;
    END;

    [External]
    PROCEDURE Reopen@2(SalesHeader@1000 : Record 36);
    VAR
      WhseRqst@1001 : Record 5765;
    BEGIN
      WITH SalesHeader DO BEGIN
        CASE "Document Type" OF
          "Document Type"::Order:
            WhseRqst.Type := WhseRqst.Type::Outbound;
          "Document Type"::"Return Order":
            WhseRqst.Type := WhseRqst.Type::Inbound;
        END;

        WhseRqst.RESET;
        WhseRqst.SETCURRENTKEY("Source Type","Source Subtype","Source No.");
        WhseRqst.SETRANGE(Type,WhseRqst.Type);
        WhseRqst.SETRANGE("Source Type",DATABASE::"Sales Line");
        WhseRqst.SETRANGE("Source Subtype","Document Type");
        WhseRqst.SETRANGE("Source No.","No.");
        WhseRqst.SETRANGE("Document Status",Status::Released);
        WhseRqst.LOCKTABLE;
        IF NOT WhseRqst.ISEMPTY THEN
          WhseRqst.MODIFYALL("Document Status",WhseRqst."Document Status"::Open);
      END;
    END;

    LOCAL PROCEDURE CreateWhseRqst@3(SalesHeader@1000 : Record 36;VAR SalesLine@1003 : Record 37;WhseType@1002 : 'Inbound,Outbound');
    VAR
      SalesLine2@1001 : Record 37;
      RFSetup@1240020000 : Record 14002801;
      EShipIntegration@1240030000 : Codeunit 14000704;
      SalesLineLoc@1000000000 : Record 37;
    BEGIN
      IF ((WhseType = WhseType::Outbound) AND
          (Location.RequireShipment(SalesLine."Location Code") OR
           Location.RequirePicking(SalesLine."Location Code"))) OR
         ((WhseType = WhseType::Inbound) AND
          (Location.RequireReceive(SalesLine."Location Code") OR
           Location.RequirePutaway(SalesLine."Location Code")))
      THEN BEGIN
        SalesLine2.COPY(SalesLine);
        SalesLine2.SETRANGE("Location Code",SalesLine."Location Code");
        SalesLine2.SETRANGE("Unit of Measure Code",'');
        IF SalesLine2.FINDFIRST THEN
          SalesLine2.TESTFIELD("Unit of Measure Code");

        //>>TPZ2830 Event created
        {
        //TM BEG 061215
        OldWhseRqst.SETCURRENTKEY("Source Type","Source Subtype","Source No.");
        OldWhseRqst.SETRANGE("Source Type",DATABASE::"Sales Line");
        OldWhseRqst.SETRANGE("Source Subtype",SalesLine."Document Type");
        OldWhseRqst.SETRANGE("Source No.",SalesLine."Document No.");
        OldWhseRqst.SETRANGE("Location Code", SalesLine."Location Code");
        IF OldWhseRqst.FINDFIRST THEN BEGIN
          WhseRqst."Activity Status" := OldWhseRqst."Activity Status";
          WhseRqst."Order Changed" := OldWhseRqst."Order Changed";
        END;
        //TM END 061215
        }
        //<<
        WhseRqst.Type := WhseType;
        WhseRqst."Source Type" := DATABASE::"Sales Line";
        WhseRqst."Source Subtype" := SalesHeader."Document Type";
        WhseRqst."Source No." := SalesHeader."No.";
        WhseRqst."Shipment Method Code" := SalesHeader."Shipment Method Code";
        WhseRqst."Shipping Agent Code" := SalesHeader."Shipping Agent Code";
        WhseRqst."Shipping Advice" := SalesHeader."Shipping Advice";
        WhseRqst."Document Status" := SalesHeader.Status::Released;
        WhseRqst."Location Code" := SalesLine."Location Code";
        WhseRqst."Destination Type" := WhseRqst."Destination Type"::Customer;
        WhseRqst."Destination No." := SalesHeader."Sell-to Customer No.";
        WhseRqst."External Document No." := SalesHeader."External Document No.";

        //>>TPZ2830 Event created
        {
        //TM BEG 061115
        WhseRqst."E-Ship Agent Service" := SalesHeader."E-Ship Agent Service";
        WhseRqst."Sell-to/Transfer-to No." := SalesHeader."Sell-to Customer No.";
        WhseRqst."Sell-to/Transfer-to Name" := SalesHeader."Sell-to Customer Name";
        WhseRqst."Ship-to Name" := SalesHeader."Ship-to Name";
        WhseRqst."Division Code" := SalesHeader."Shortcut Dimension 5 Code";
        WhseRqst."Requested Delivery Date" := SalesHeader."Requested Delivery Date";
        WhseRqst."Ship-to Code" := SalesHeader."Ship-to Code";
        //TM END 061115

        //<TPZ1333>
        IF (WhseRqst."Activity Status" = WhseRqst."Activity Status"::Shipped) AND
           (SalesHeader."Shipment Date" <> WhseRqst."Shipment Date") THEN
          WhseRqst."Activity Status" := WhseRqst."Activity Status"::" ";
        //</TPZ1333>
        }
        //<<TPZ2830
        IF WhseType = WhseType::Inbound THEN
          WhseRqst."Expected Receipt Date" := SalesHeader."Shipment Date"
        ELSE
          WhseRqst."Shipment Date" := SalesHeader."Shipment Date";
        SalesHeader.SETRANGE("Location Filter",SalesLine."Location Code");
        SalesHeader.CALCFIELDS("Completely Shipped");
        WhseRqst."Completely Handled" := SalesHeader."Completely Shipped";

        //>>TPZ2830 Event created
        {
        //>>TPZ2781 PSHUKLA
        SalesLineLoc.SETCURRENTKEY("Document Type","Document No.","Location Code");
        SalesLineLoc.SETRANGE("Document Type",SalesHeader."Document Type");
        SalesLineLoc.SETRANGE("Document No.",SalesHeader."No.");
        SalesLineLoc.SETRANGE(Type,SalesLineLoc.Type::Item);
        SalesLineLoc.SETRANGE("Drop Shipment",FALSE);
        SalesLineLoc.SETRANGE("Job No.",'');
        IF SalesLineLoc.FINDSET THEN
          WhseRqst."Number of Lines" := SalesLineLoc.COUNT;
        WhseRqst."Shipping Method" := SalesHeader."Shipping Agent Code";
        WhseRqst."Pick Type" := WhseRqst."Pick Type"::SO;
        //<<TPZ2781
        }
        //<<TPZ2830
        // >> RF
      //  RFSetup.GetRFSetup;
      //  IF RFSetup."Copy EShip fields to OWR" THEN
      //    EShipIntegration.SetEShipFields(SalesHeader,WhseRqst); pankaj

        WhseRqst.UpdateWarehouseRequest;
        // << RF
        //>>TPZ2830 Call publisher Event from 2018

        //<<TPZ2830

        OnBeforeCreateWhseRequest(WhseRqst,SalesHeader,SalesLine);

        IF NOT WhseRqst.INSERT THEN
          WhseRqst.MODIFY;

      END;
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeCreateWhseRequest@4(VAR WhseRqst@1000 : Record 5765;SalesHeader@1001 : Record 36;SalesLine@1002 : Record 37);
    BEGIN
    END;

    BEGIN
    {
      20200331  TPZ2781  PSHUKLA  Added code to flow shipment method and number of SO lines
      001 TPZ2830 PKS 07232020 Converted code to event
    }
    END.
  }
}

