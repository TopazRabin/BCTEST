OBJECT Codeunit 14123501 ES Management
{
  OBJECT-PROPERTIES
  {
    Date=10/05/18;
    Time=12:00:00 PM;
    Version List=ES1.41.55;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'ENU=Restore Point %1 and %2 have been created and %3 moved to Live.';
      Text002@1002 : TextConst 'ENU=Restore Point %1 and %2 have been created and %3 moved to Easy Security.';
      Text003@1003 : TextConst 'ENU=" and "';
      Text004@1004 : TextConst 'ENU=Creating new Logins\';
      Text005@1005 : TextConst 'ENU=Process #1################################################';
      Text007@1007 : TextConst 'ENU=Adding Users';
      Text008@1008 : TextConst 'ENU=Deleting Removed Logins';
      Text009@1009 : TextConst 'ENU=User %1 is not unique.';
      Text010@1010 : TextConst 'ENU=%1 added Logins with %3 Access Controls and %2 deleted.';
      Text011@1011 : TextConst 'ENU=%1 added Logins and %2 deleted.';
      Text012@1012 : TextConst 'ENU=Updating all Easy Security Logins\';
      Text013@1013 : TextConst 'ENU=%1 Logins updated.';
      Text014@1014 : TextConst 'ENU=Updating Easy Security Login\';
      Text015@1015 : TextConst 'ENU=Summarizing permission sets';
      Text016@1016 : TextConst 'ENU=Removing extra permissions';
      Text017@1017 : TextConst 'ENU=Update User';
      Text019@1019 : TextConst 'ENU=%1 Access Controls and %4 Summary Permissions inserted for Login %2 %3.';
      Text020@1020 : TextConst 'ENU=Removing unnecessary permission sets if SUPER';
      Text021@1021 : TextConst 'ENU=Updating Summary Permissions.';
      Text022@1022 : TextConst 'ENU=Multiple Security Filters on %1 %2.';
      Text023@1240520008 : TextConst 'ENU=Testing Requirements\';
      Text024@1023 : TextConst 'ENU=%1 "%2" does not match "%3".';
      Text025@1024 : TextConst 'ENU=%1 %2 %3 does not match %4 %5.';
      Text026@1025 : TextConst 'ENU=does not exists as object';
      Text027@1240520009 : TextConst 'ENU=%3 Summary Permissions inserted for %1 %2.';
      Text028@1240520010 : TextConst 'ENU=Updating Permission Group Summary Permissions\';
      Text029@1240520011 : TextConst 'ENU=Removing Summary Permissions.';
      Text030@1240520012 : TextConst 'ENU=%1 Permission Groups updated.';
      Text031@1240520013 : TextConst 'ENU=Updating Permission Set Summary Permissions\';
      Text032@1240520014 : TextConst 'ENU=%1 Permission Sets updated.';
      Text033@1240520015 : TextConst 'ENU=Updating Windows Group Summary Permissions.';
      Text034@1026 : TextConst 'ENU=Windows Group Summary Permissions cannot be updated when doing other updates.';
      Text035@1240520016 : TextConst 'ENU=Data in Live and Easy Security does not match. Use "Get New Data From Live" function to update Easy Security data.';
      Text036@1027 : TextConst 'ENU=Permissions have been successfully published.';
      Text037@1028 : TextConst 'ENU=Updating permissions for permission sets in Live\';
      Text038@1029 : TextConst 'ENU=Testing Permission Sets.';
      Text039@1030 : TextConst 'ENU=" and more"';
      Text040@1031 : TextConst 'ENU=Updating permissions for %1 permission sets (%2).';
      Text041@1032 : TextConst 'ENU=Updating Permission Sets.';
      Text042@1033 : TextConst 'ENU=%1 permission sets have been updated in live.';
      Text043@1034 : TextConst 'ENU=Updated permission sets %2.';
      Text044@1035 : TextConst 'ENU=Updating No Permissions based on Expiry Date\';
      Text045@1036 : TextConst 'ENU=Nothing has been changed based on Expiry Date %1.';
      Text046@1037 : TextConst 'ENU=%1 Logins and %2 Login Access Controls have been updated based on Expiry Date %3.';
      Text050@1240520017 : TextConst 'ENU=New data from Live has successfully been added to Easy Security.';
      Text051@1041 : TextConst 'ENU=Copy New Permission Sets from Live';
      Text052@1042 : TextConst 'ENU=Testing Permission Sets #1################################################.';
      Text053@1043 : TextConst 'ENU=No Permission Sets created.';
      Text054@1044 : TextConst 'ENU=%1 Permission Sets created (%2).';
      Text057@1240520019 : TextConst 'ENU=User %1 must be a SUPER user.';
      Text058@1240520020 : TextConst 'ENU=Before and after publishing.';
      Text059@1046 : TextConst 'ENU=Update selected permission sets before updating in live?';
      Text060@1240520001 : TextConst 'ENU="Start: "';
      Text061@1240520002 : TextConst 'ENU="Finish: "';
      Text047@1038 : TextConst 'ENU=Publish Permissions';
      Text048@1039 : TextConst 'ENU=Test Requirements';
      Text049@1040 : TextConst 'ENU=Update No Permissions based on Expiry Date';
      Text055@1045 : TextConst 'ENU=Update All Free Permission Set';
      Text062@1047 : TextConst 'ENU=Update All Permission Sets from Permission Set Details';
      Text063@1048 : TextConst 'ENU=Update All Logins';
      Text064@1049 : TextConst 'ENU=Publish to Live';
      Text065@1050 : TextConst 'ENU=Synchronize Live -> Easy Security';
      Text066@1240520003 : TextConst 'ENU=Deleting Old Restore Points';
      Text067@1051 : TextConst 'ENU=%1 Restore Points have been deleted.';
      Text070@1054 : TextConst 'ENU=Updating Live User Summary Permissions\';
      Text071@1055 : TextConst 'ENU=%1 Live Users updated.';
      Text072@1056 : TextConst 'ENU=Updating Live Permission Set Summary Permissions\';
      Text073@1057 : TextConst 'ENU=%1 Live Permission Sets updated.';
      Text074@1058 : TextConst 'ENU=Update selected logins before updating in live?';
      Text075@1059 : TextConst 'ENU=Updating access controls for logins in Live\';
      Text076@1060 : TextConst 'ENU=Testing Logins.';
      Text077@1061 : TextConst 'ENU=Updating access controls for %1 logins (%2).';
      Text078@1062 : TextConst 'ENU=Updating Logins.';
      Text079@1063 : TextConst 'ENU=%1 logins have been updated in live.';
      Text080@1064 : TextConst 'ENU=Updated logins %2.';
      Text081@1065 : TextConst 'ENU=Publish to Live?';
      Text082@1066 : TextConst 'ENU=Nothing changed.';

    PROCEDURE PublishSecurity@1240520020(NewDescription@1240520011 : Text[250];TestRequirements@1240520014 : Boolean;DeleteOldRestorePoints@1240520001 : Boolean;UpdateBasedOnExpiryDate@1240520017 : Boolean;UpdateAllFreeAndLimitedRole@1240520008 : Boolean;UpdateRolesFromRoleDetails@1240520009 : Boolean;UpdateLogins@1240520010 : Boolean;PublishRolesAndAccessControl@1240520013 : Boolean;ShowStatus@1240520012 : Boolean);
    VAR
      ESSecuritySetup@1240520015 : Record 14123521;
      ESRoleRecordingMgt@1240520016 : Codeunit 14123651;
    BEGIN
      ESSecuritySetup.GET;
      ESSecuritySetup.TestPublishCompany;
      ESSecuritySetup.TestNoPublishInOtherCompanies;
      ESSecuritySetup.Comment(1,Text060 + Text047);

      TestESMatchLive(TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE);

      IF TestRequirements THEN BEGIN
        ESSecuritySetup.Comment(1,Text060 + Text048);
        PublishSecurityTestRequirement(UpdateRolesFromRoleDetails,UpdateLogins,TRUE);
        IF NOT ISSERVICETIER THEN
          COMMIT;
      END;

      IF DeleteOldRestorePoints THEN BEGIN
        ESSecuritySetup.Comment(1,Text060 + Text066);
        DeleteAdditionalRestorePoints(ESSecuritySetup."No. of Restore Points to Keep",ShowStatus);
        IF NOT ISSERVICETIER THEN
          COMMIT;
      END;

      IF UpdateBasedOnExpiryDate THEN BEGIN
        ESSecuritySetup.Comment(1,Text060 + Text049);
        UpdateNoPermsFromExpiryDate(0,'',TODAY,TRUE,ShowStatus);
        IF NOT ISSERVICETIER THEN
          COMMIT;
      END;

      IF UpdateAllFreeAndLimitedRole THEN BEGIN
        ESSecuritySetup.Comment(1,Text060 + Text055);
        ESSecuritySetup.UpdateFREEAndLIMITEDRoles(ShowStatus);
        IF NOT ISSERVICETIER THEN
          COMMIT;

        IF ESSecuritySetup."Data Role ID (Quick Security)" <> '' THEN BEGIN
          ESSecuritySetup.Comment(1,Text060 + ESSecuritySetup.FIELDNAME("Data Role ID (Quick Security)"));
          ESSecuritySetup.UpdateQuickSecurityRoles(ShowStatus);
          IF NOT ISSERVICETIER THEN
            COMMIT;
        END;
      END;

      IF UpdateRolesFromRoleDetails AND ESSecuritySetup."Permission Recorder Licensed" THEN BEGIN
        ESSecuritySetup.Comment(1,Text060 + Text062);
        ESRoleRecordingMgt.UpdateAllRolesFromRoleDetails(ShowStatus);
        IF NOT ISSERVICETIER THEN
          COMMIT;
      END;

      IF UpdateLogins THEN BEGIN
        ESSecuritySetup.Comment(1,Text060 + Text063);
        UpdateAllLogins(TRUE,NOT ESSecuritySetup."Manual Update of Summary Perm.",FALSE,ShowStatus);
        IF NOT ISSERVICETIER THEN
          COMMIT;
      END;

      IF PublishRolesAndAccessControl THEN BEGIN
        ESSecuritySetup.Comment(1,Text060 + Text064);
        ES2Live(ShowStatus,NewDescription,FALSE,TRUE,TRUE,TRUE);
        IF NOT ISSERVICETIER THEN
          COMMIT;
      END;

      ESSecuritySetup.Comment(1,Text061 + Text047);
      IF NOT ISSERVICETIER THEN
        COMMIT;

      MESSAGE(Text036);
    END;

    PROCEDURE PublishSecurityTestRequirement@1240520027(UpdateRolesFromRoleDetails@1240520009 : Boolean;UpdateLogins@1240520010 : Boolean;FromPublishCode@1240520008 : Boolean);
    BEGIN
      IF NOT FromPublishCode THEN
        TestESMatchLive(TRUE,FALSE,TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE);

      IF UpdateRolesFromRoleDetails THEN
        TestESMatchLive(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,TRUE,FALSE,FALSE)
      ELSE
        TestESMatchLive(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE);

      IF UpdateLogins THEN
        TestESMatchLive(FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,TRUE)
      ELSE
        TestESMatchLive(FALSE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE);
    END;

    PROCEDURE SynchronizeLiveToEasySecurity@1240520034(NewDescription@1240520008 : Text[250];UpdateAllFreeAndLimitedRole@1240520014 : Boolean;UpdateRolesFromRoleDetails@1240520013 : Boolean;UpdateLogins@1240520012 : Boolean;ShowStatus@1240520009 : Boolean);
    VAR
      ESSecuritySetup@1240520010 : Record 14123521;
      ESCompanyGroup@1240520001 : Record 14123530;
      ESRoleRecordingMgt@1240520011 : Codeunit 14123651;
    BEGIN
      ESSecuritySetup.GET;
      ESSecuritySetup.TestPublishCompany;
      ESSecuritySetup.TestNoPublishInOtherCompanies;

      ESSecuritySetup.Comment(1,Text060 + Text065);
      Live2ES(ShowStatus,NewDescription,TRUE,TRUE,FALSE,FALSE,TRUE,TRUE,TRUE);
      IF NOT ISSERVICETIER THEN
        COMMIT;

      ESCompanyGroup.CreateCompanyGroupPerCompany(TRUE,ShowStatus);

      IF UpdateLogins THEN BEGIN
        ESSecuritySetup.Comment(1,Text060 + Text063);
        CreateNewLogins(ShowStatus,TRUE,FALSE,TRUE);
        IF NOT ISSERVICETIER THEN
          COMMIT;
      END;

      IF UpdateAllFreeAndLimitedRole THEN BEGIN
        ESSecuritySetup.Comment(1,Text060 + Text055);
        ESSecuritySetup.UpdateFREEAndLIMITEDRoles(ShowStatus);
        IF NOT ISSERVICETIER THEN
          COMMIT;

        IF ESSecuritySetup."Data Role ID (Quick Security)" <> '' THEN BEGIN
          ESSecuritySetup.Comment(1,Text060 + ESSecuritySetup.FIELDNAME("Data Role ID (Quick Security)"));
          ESSecuritySetup.UpdateQuickSecurityRoles(ShowStatus);
          IF NOT ISSERVICETIER THEN
            COMMIT;
        END;
      END;

      IF UpdateRolesFromRoleDetails AND ESSecuritySetup."Permission Recorder Licensed" THEN BEGIN
        ESSecuritySetup.Comment(1,Text060 + Text062);
        ESRoleRecordingMgt.UpdateAllRolesFromRoleDetails(ShowStatus);
        IF NOT ISSERVICETIER THEN
          COMMIT;
      END;

      ESSecuritySetup.Comment(1,Text061 + Text065);
      IF NOT ISSERVICETIER THEN
        COMMIT;

      MESSAGE(Text050);
    END;

    PROCEDURE ES2Live@1240520008(ShowStatus@1240520011 : Boolean;NewDescription@1240520019 : Text[250];CreateWindowsLogins@1240520014 : Boolean;CreateWindowsAccCtrls@1240520015 : Boolean;CreateRoles@1240520016 : Boolean;CreatePermissions@1240520017 : Boolean);
    VAR
      ESRestorePoint1@1240520009 : Record 14123523;
      ESRestorePoint2@1240520010 : Record 14123523;
      ESSecuritySetup@1240520001 : Record 14123521;
      Window@1240520008 : Dialog;
      TabelListText@1240520018 : Text[1000];
    BEGIN
      ESSecuritySetup.GET;
      ESSecuritySetup.TestPublishCompany;

      CLEAR(ESRestorePoint1);
      ESRestorePoint1.Description := NewDescription;
      ESRestorePoint1.INSERT(TRUE);
      ESRestorePoint1.CreateRestPntFromES(FALSE);

      CLEAR(ESRestorePoint2);
      ESRestorePoint2.Description := NewDescription;
      ESRestorePoint2.INSERT(TRUE);
      ESRestorePoint2.CreateRestPntFromLive(FALSE);

      ESRestorePoint1."Create Windows Logins" := CreateWindowsLogins;
      ESRestorePoint1."Create Windows Acc. Ctrls." := CreateWindowsAccCtrls;
      ESRestorePoint1."Create Roles" := CreateRoles;
      ESRestorePoint1."Create Role Permissions" := CreatePermissions;
      ESRestorePoint1.WriteRestPnttoLive(FALSE);

      TabelListText :=
        CreateTableList(
          CreateWindowsLogins,CreateWindowsAccCtrls,
          CreateRoles,CreatePermissions,FALSE,FALSE,FALSE);

      IF ShowStatus THEN
        MESSAGE(Text001,ESRestorePoint1.Code,ESRestorePoint2.Code,TabelListText);
      ESSecuritySetup.Comment(
        1,STRSUBSTNO(Text001,ESRestorePoint1.Code,ESRestorePoint2.Code,COPYSTR(TabelListText,1,250)));
    END;

    PROCEDURE Live2ES@1240520010(ShowStatus@1240520011 : Boolean;NewDescription@1240520022 : Text[250];CreateWindowsLogins@1240520014 : Boolean;CreateWindowsAccCtrls@1240520015 : Boolean;CreateRoles@1240520016 : Boolean;CreatePermissions@1240520017 : Boolean;CreateCompanies@1240520018 : Boolean;CreateObjects@1240520019 : Boolean;CreateObjectInfos@1240520020 : Boolean);
    VAR
      ESRestorePoint1@1240520009 : Record 14123523;
      ESRestorePoint2@1240520010 : Record 14123523;
      ESSecuritySetup@1240520001 : Record 14123521;
      Window@1240520008 : Dialog;
      TabelListText@1240520021 : Text[1000];
    BEGIN
      ESSecuritySetup.GET;
      ESSecuritySetup.TestPublishCompany;

      CLEAR(ESRestorePoint1);
      ESRestorePoint1.Description := NewDescription;
      ESRestorePoint1.INSERT(TRUE);
      ESRestorePoint1.CreateRestPntFromES(FALSE);

      CLEAR(ESRestorePoint2);
      ESRestorePoint2.Description := NewDescription;
      ESRestorePoint2.INSERT(TRUE);
      ESRestorePoint2.CreateRestPntFromLive(FALSE);

      ESRestorePoint2."Create Windows Logins" := CreateWindowsLogins;
      ESRestorePoint2."Create Windows Acc. Ctrls." := CreateWindowsAccCtrls;
      ESRestorePoint2."Create Roles" := CreateRoles;
      ESRestorePoint2."Create Role Permissions" := CreatePermissions;
      ESRestorePoint2."Create Companies" := CreateCompanies;
      ESRestorePoint2."Create Objects" := CreateObjects;
      ESRestorePoint2."Create Object Informations" := CreateObjectInfos;
      ESRestorePoint2.WriteRestPntToES(FALSE,FALSE);

      TabelListText :=
        CreateTableList(
          CreateWindowsLogins,CreateWindowsAccCtrls,
          CreateRoles,CreatePermissions,CreateCompanies,CreateObjects,CreateObjectInfos);

      IF ShowStatus THEN
        MESSAGE(Text002,ESRestorePoint1.Code,ESRestorePoint2.Code,TabelListText);
      ESSecuritySetup.Comment(
        1,STRSUBSTNO(Text002,ESRestorePoint1.Code,ESRestorePoint2.Code,COPYSTR(TabelListText,1,250)));
    END;

    PROCEDURE UpdateRolePermissionsES2Live@1240520035(VAR CurrentESRole@1240520008 : Record 14123505;ShowStatus@1240520015 : Boolean);
    VAR
      ESSecuritySetup@1240520019 : Record 14123521;
      ESRestorePoint1@1240520012 : Record 14123523;
      ESRestorePoint2@1240520011 : Record 14123523;
      UserRole@1240520017 : Record 2000000004;
      ESRestorePointRole@1240520014 : Record 14123515;
      RolePerm@1240520018 : Record 2000000005;
      RolePerm2@1240520001 : Record 2000000005;
      ESRestPointRolePerm@1240520009 : Record 14123516;
      Window@1240520010 : Dialog;
      RoleListText@1240520013 : Text[1000];
      RolesUpdated@1240520020 : Integer;
      ListNotComplete@1240520021 : Boolean;
      UpdateRoles@1240520016 : Boolean;
      EOFLive@1240520002 : Boolean;
      EOFRestorePoint@1240520003 : Boolean;
    BEGIN
      ESSecuritySetup.GET;
      ESSecuritySetup.TestPublishCompany;
      ESSecuritySetup.TestNoPublishInOtherCompanies;

      IF NOT CONFIRM(Text081,FALSE) THEN
        ERROR(Text082);

      IF GUIALLOWED THEN
        UpdateRoles := CONFIRM(Text059,TRUE)
      ELSE
        UpdateRoles := TRUE;

      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text037) + Text005);

      IF UpdateRoles THEN BEGIN
        CurrentESRole.FIND('-');
        REPEAT
          CurrentESRole.CALCFIELDS("Role Detail Exists");
          IF CurrentESRole."Role Detail Exists" THEN
            CurrentESRole.UpdateFromRoleDetail(FALSE);
        UNTIL CurrentESRole.NEXT = 0;
      END;

      TestESMatchLive(FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,FALSE,FALSE,FALSE,FALSE);

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text038);
      CurrentESRole.FIND('-');
      REPEAT
        UserRole.GET(CurrentESRole."Role ID");

        IF STRLEN(RoleListText) < MAXSTRLEN(RoleListText) - 50 THEN BEGIN
          IF RoleListText <> '' THEN
            RoleListText := RoleListText + ', ';

          RoleListText := RoleListText + CurrentESRole."Role ID";
        END ELSE
          IF NOT ListNotComplete THEN BEGIN
            ListNotComplete := TRUE;
            RoleListText := RoleListText + Text039;
          END;

        RolesUpdated := RolesUpdated + 1;
      UNTIL CurrentESRole.NEXT = 0;

      CLEAR(ESRestorePoint1);
      ESRestorePoint1.Description :=
        COPYSTR(
          STRSUBSTNO(Text040,RolesUpdated,COPYSTR(RoleListText,1,250)),
          1,MAXSTRLEN(ESRestorePoint1.Description));
      ESRestorePoint1.INSERT(TRUE);
      ESRestorePoint1.CreateRestPntFromES(FALSE);

      CLEAR(ESRestorePoint2);
      ESRestorePoint2.Description :=
        COPYSTR(
          STRSUBSTNO(Text040,RolesUpdated,COPYSTR(RoleListText,1,250)),
          1,MAXSTRLEN(ESRestorePoint2.Description));
      ESRestorePoint2.INSERT(TRUE);
      ESRestorePoint2.CreateRestPntFromLive(FALSE);

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text041);
      CurrentESRole.FIND('-');
      REPEAT
        ESRestorePointRole.GET(ESRestorePoint1.Code,CurrentESRole."Role ID");
        UserRole.GET(CurrentESRole."Role ID");
        UserRole.Name := ESRestorePointRole."Role Name";
        UserRole.MODIFY(TRUE);

        IF ESSecuritySetup."Optimized Publishing" THEN BEGIN
          RolePerm.RESET;
          RolePerm.SETRANGE("Role ID",CurrentESRole."Role ID");
          EOFLive := NOT RolePerm.FIND('-');

          ESRestPointRolePerm.RESET;
          ESRestPointRolePerm.SETRANGE("Version Code",ESRestorePoint1.Code);
          ESRestPointRolePerm.SETRANGE("Role ID",CurrentESRole."Role ID");
          EOFRestorePoint := NOT ESRestPointRolePerm.FIND('-');

          WHILE NOT EOFLive AND NOT EOFRestorePoint DO BEGIN
            IF (RolePerm."Object Type" <> ESRestPointRolePerm."Object Type") OR
               (RolePerm."Object ID" <> ESRestPointRolePerm."Object ID") OR
               (RolePerm."Read Permission" <> ESRestPointRolePerm."Read Permission") OR
               (RolePerm."Insert Permission" <> ESRestPointRolePerm."Insert Permission") OR
               (RolePerm."Modify Permission" <> ESRestPointRolePerm."Modify Permission") OR
               (RolePerm."Delete Permission" <> ESRestPointRolePerm."Delete Permission") OR
               (RolePerm."Execute Permission" <> ESRestPointRolePerm."Execute Permission") OR
               (FORMAT(RolePerm."Security Filter") <> FORMAT(ESRestPointRolePerm."Security Filter"))
            THEN BEGIN
              IF (RolePerm."Object Type" < ESRestPointRolePerm."Object Type") OR
                 ((RolePerm."Object Type" = ESRestPointRolePerm."Object Type") AND
                  (RolePerm."Object ID" < ESRestPointRolePerm."Object ID"))
              THEN BEGIN
                RolePerm2 := RolePerm;
                RolePerm2.DELETE;
                EOFLive := RolePerm.NEXT = 0;
              END ELSE BEGIN
                IF (RolePerm."Object Type" > ESRestPointRolePerm."Object Type") OR
                   ((RolePerm."Object Type" = ESRestPointRolePerm."Object Type") AND
                    (RolePerm."Object ID" > ESRestPointRolePerm."Object ID"))
                THEN BEGIN
                  RolePerm2.TRANSFERFIELDS(ESRestPointRolePerm,TRUE);
                  RolePerm2.INSERT;
                  EOFRestorePoint := ESRestPointRolePerm.NEXT = 0;
                END ELSE BEGIN
                  RolePerm2 := RolePerm;
                  RolePerm2."Read Permission" := ESRestPointRolePerm."Read Permission";
                  RolePerm2."Insert Permission" := ESRestPointRolePerm."Insert Permission";
                  RolePerm2."Modify Permission" := ESRestPointRolePerm."Modify Permission";
                  RolePerm2."Delete Permission" := ESRestPointRolePerm."Delete Permission";
                  RolePerm2."Execute Permission" := ESRestPointRolePerm."Execute Permission";
                  RolePerm2."Security Filter" := ESRestPointRolePerm."Security Filter";
                  RolePerm2.MODIFY;
                  EOFLive := RolePerm.NEXT = 0;
                  EOFRestorePoint := ESRestPointRolePerm.NEXT = 0;
                END;
              END;
            END ELSE BEGIN
              EOFLive := RolePerm.NEXT = 0;
              EOFRestorePoint := ESRestPointRolePerm.NEXT = 0;
            END;
          END;

          WHILE NOT EOFLive DO BEGIN
            RolePerm2 := RolePerm;
            RolePerm2.DELETE;
            EOFLive := RolePerm.NEXT = 0;
          END;

          WHILE NOT EOFRestorePoint DO BEGIN
            RolePerm2.TRANSFERFIELDS(ESRestPointRolePerm,TRUE);
            RolePerm2.INSERT;
            EOFRestorePoint := ESRestPointRolePerm.NEXT = 0;
          END;
        END ELSE BEGIN
          RolePerm.RESET;
          RolePerm.SETRANGE("Role ID",CurrentESRole."Role ID");
          RolePerm.DELETEALL;

          ESRestPointRolePerm.RESET;
          ESRestPointRolePerm.SETRANGE("Version Code",ESRestorePoint1.Code);
          ESRestPointRolePerm.SETRANGE("Role ID",CurrentESRole."Role ID");
          IF ESRestPointRolePerm.FIND('-') THEN
            REPEAT
              RolePerm.TRANSFERFIELDS(ESRestPointRolePerm,TRUE);
              RolePerm.INSERT;
            UNTIL ESRestPointRolePerm.NEXT = 0;
        END;
      UNTIL CurrentESRole.NEXT = 0;

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text042 + '\' + Text043,RolesUpdated,RoleListText);
      ESSecuritySetup.Comment(
        1,STRSUBSTNO(Text042 + ' ' + Text043,RolesUpdated,COPYSTR(RoleListText,1,250)));
    END;

    PROCEDURE UpdateAccessControlsES2Live@1240520004(VAR CurrentESLogin@1240520008 : Record 14123527;ShowStatus@1240520015 : Boolean);
    VAR
      ESSecuritySetup@1240520019 : Record 14123521;
      ESRestorePoint1@1240520012 : Record 14123523;
      ESRestorePoint2@1240520011 : Record 14123523;
      WindowsLogin@1240520002 : Record 2000000120;
      WindowsAccessControl@1240520009 : Record 2000000053;
      WindowsAccessControl2@1240520026 : Record 2000000053;
      ESRestorePointWindowsLogin@1240520004 : Record 14123513;
      ESRestPointWindowsAccCtrl@1240520006 : Record 14123514;
      Role@1240520014 : Record 2000000004;
      RoleTmp@1240520017 : TEMPORARY Record 2000000004;
      Company@1240520018 : Record 2000000006;
      CompanyTmp@1240520022 : TEMPORARY Record 2000000006;
      Window@1240520010 : Dialog;
      LoginListText@1240520013 : Text[1000];
      LoginsUpdated@1240520020 : Integer;
      ListNotComplete@1240520021 : Boolean;
      UpdateLogins@1240520016 : Boolean;
      EOFLive@1240520023 : Boolean;
      EOFRestorePoint@1240520024 : Boolean;
    BEGIN
      ESSecuritySetup.GET;
      ESSecuritySetup.TestPublishCompany;
      ESSecuritySetup.TestNoPublishInOtherCompanies;

      IF NOT CONFIRM(Text081,FALSE) THEN
        ERROR(Text082);

      IF GUIALLOWED THEN
        UpdateLogins := CONFIRM(Text074,TRUE)
      ELSE
        UpdateLogins := TRUE;

      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text075) + Text005);

      IF UpdateLogins THEN BEGIN
        CurrentESLogin.FIND('-');
        REPEAT
          UpdateESLogin(CurrentESLogin,TRUE,TRUE,FALSE,FALSE,TRUE);
        UNTIL CurrentESLogin.NEXT = 0;
      END;

      TestESMatchLive(FALSE,FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,FALSE,FALSE,FALSE,FALSE);

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text076);
      CurrentESLogin.FIND('-');
      REPEAT
        CASE CurrentESLogin.Type OF
          CurrentESLogin.Type::Windows:
            WindowsLogin.GET(CurrentESLogin."Login SID");
        END;

        IF STRLEN(LoginListText) < MAXSTRLEN(LoginListText) - 50 THEN BEGIN
          IF LoginListText <> '' THEN
            LoginListText := LoginListText + ', ';

          LoginListText := LoginListText + CurrentESLogin."User ID";
        END ELSE
          IF NOT ListNotComplete THEN BEGIN
            ListNotComplete := TRUE;
            LoginListText := LoginListText + Text039;
          END;

        LoginsUpdated := LoginsUpdated + 1;
      UNTIL CurrentESLogin.NEXT = 0;

      CLEAR(ESRestorePoint1);
      ESRestorePoint1.Description :=
        COPYSTR(
          STRSUBSTNO(Text077,LoginsUpdated,COPYSTR(LoginListText,1,250)),
          1,MAXSTRLEN(ESRestorePoint1.Description));
      ESRestorePoint1.INSERT(TRUE);
      ESRestorePoint1.CreateRestPntFromES(FALSE);

      CLEAR(ESRestorePoint2);
      ESRestorePoint2.Description :=
        COPYSTR(
          STRSUBSTNO(Text077,LoginsUpdated,COPYSTR(LoginListText,1,250)),
          1,MAXSTRLEN(ESRestorePoint2.Description));
      ESRestorePoint2.INSERT(TRUE);
      ESRestorePoint2.CreateRestPntFromLive(FALSE);

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text078);
      CurrentESLogin.FIND('-');
      REPEAT
        CASE CurrentESLogin.Type OF
          CurrentESLogin.Type::Windows:
            BEGIN
              ESRestorePointWindowsLogin.GET(ESRestorePoint1.Code,CurrentESLogin."Login SID");
              WindowsLogin.GET(CurrentESLogin."Login SID");

              IF ESSecuritySetup."Optimized Publishing" THEN BEGIN
                WindowsAccessControl.RESET;
                WindowsAccessControl.SETRANGE("User Security ID",CurrentESLogin."Login SID");
                EOFLive := NOT WindowsAccessControl.FIND('-');

                ESRestPointWindowsAccCtrl.RESET;
                ESRestPointWindowsAccCtrl.SETRANGE("Version Code",ESRestorePoint1.Code);
                ESRestPointWindowsAccCtrl.SETRANGE("Login SID",CurrentESLogin."Login SID");
                EOFRestorePoint := NOT ESRestPointWindowsAccCtrl.FIND('-');

                WHILE NOT EOFLive AND NOT EOFRestorePoint DO BEGIN
                  IF (WindowsAccessControl."Role ID" <> ESRestPointWindowsAccCtrl."Role ID") OR
                     (WindowsAccessControl."Company Name" <> ESRestPointWindowsAccCtrl."Company Name")
                  THEN BEGIN
                    IF (WindowsAccessControl."Role ID" < ESRestPointWindowsAccCtrl."Role ID") OR
                       ((WindowsAccessControl."Role ID" = ESRestPointWindowsAccCtrl."Role ID") AND
                        (WindowsAccessControl."Company Name" < ESRestPointWindowsAccCtrl."Company Name"))
                    THEN BEGIN
                      WindowsAccessControl2 := WindowsAccessControl;
                      WindowsAccessControl2.DELETE;
                      EOFLive := WindowsAccessControl.NEXT = 0;
                    END ELSE BEGIN
                      WindowsAccessControl2."User Security ID" := WindowsLogin."User Security ID";
                      WindowsAccessControl2."Role ID" := ESRestPointWindowsAccCtrl."Role ID";
                      WindowsAccessControl2."Company Name" := ESRestPointWindowsAccCtrl."Company Name";

                      IF NOT RoleTmp.GET(WindowsAccessControl2."Role ID") THEN BEGIN
                        Role.GET(WindowsAccessControl2."Role ID");
                        RoleTmp := Role;
                        RoleTmp.INSERT;
                      END;
                      IF WindowsAccessControl2."Company Name" <> '' THEN
                        IF NOT CompanyTmp.GET(WindowsAccessControl2."Company Name") THEN BEGIN
                          Company.GET(WindowsAccessControl2."Company Name");
                          CompanyTmp := Company;
                          CompanyTmp.INSERT;
                        END;

                      WindowsAccessControl2.INSERT;
                      EOFRestorePoint := ESRestPointWindowsAccCtrl.NEXT = 0;
                    END;
                  END ELSE BEGIN
                    EOFLive := WindowsAccessControl.NEXT = 0;
                    EOFRestorePoint := ESRestPointWindowsAccCtrl.NEXT = 0;
                  END;
                END;

                WHILE NOT EOFLive DO BEGIN
                  WindowsAccessControl2 := WindowsAccessControl;
                  WindowsAccessControl2.DELETE;
                  EOFLive := WindowsAccessControl.NEXT = 0;
                END;

                WHILE NOT EOFRestorePoint DO BEGIN
                  WindowsAccessControl2."User Security ID" := WindowsLogin."User Security ID";
                  WindowsAccessControl2."Role ID" := ESRestPointWindowsAccCtrl."Role ID";
                  WindowsAccessControl2."Company Name" := ESRestPointWindowsAccCtrl."Company Name";

                  IF NOT RoleTmp.GET(WindowsAccessControl2."Role ID") THEN BEGIN
                    Role.GET(WindowsAccessControl2."Role ID");
                    RoleTmp := Role;
                    RoleTmp.INSERT;
                  END;
                  IF WindowsAccessControl2."Company Name" <> '' THEN
                    IF NOT CompanyTmp.GET(WindowsAccessControl2."Company Name") THEN BEGIN
                      Company.GET(WindowsAccessControl2."Company Name");
                      CompanyTmp := Company;
                      CompanyTmp.INSERT;
                    END;

                  WindowsAccessControl2.INSERT;
                  EOFRestorePoint := ESRestPointWindowsAccCtrl.NEXT = 0;
                END;
              END ELSE BEGIN
                WindowsAccessControl.RESET;
                WindowsAccessControl.SETRANGE("User Security ID",CurrentESLogin."Login SID");
                WindowsAccessControl.DELETEALL;

                ESRestPointWindowsAccCtrl.RESET;
                ESRestPointWindowsAccCtrl.SETRANGE("Version Code",ESRestorePoint1.Code);
                ESRestPointWindowsAccCtrl.SETRANGE("Login SID",CurrentESLogin."Login SID");
                IF ESRestPointWindowsAccCtrl.FIND('-') THEN
                  REPEAT
                    WindowsAccessControl.TRANSFERFIELDS(ESRestPointWindowsAccCtrl,TRUE);

                    IF NOT RoleTmp.GET(WindowsAccessControl."Role ID") THEN BEGIN
                      Role.GET(WindowsAccessControl."Role ID");
                      RoleTmp := Role;
                      RoleTmp.INSERT;
                    END;
                    IF WindowsAccessControl."Company Name" <> '' THEN
                      IF NOT CompanyTmp.GET(WindowsAccessControl."Company Name") THEN BEGIN
                        Company.GET(WindowsAccessControl."Company Name");
                        CompanyTmp := Company;
                        CompanyTmp.INSERT;
                      END;

                    WindowsAccessControl.INSERT;
                  UNTIL ESRestPointWindowsAccCtrl.NEXT = 0;
              END;
            END;
        END;
      UNTIL CurrentESLogin.NEXT = 0;

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text079 + '\' + Text080,LoginsUpdated,LoginListText);
      ESSecuritySetup.Comment(
        1,STRSUBSTNO(Text079 + ' ' + Text080,LoginsUpdated,COPYSTR(LoginListText,1,250)));
    END;

    LOCAL PROCEDURE CreateTableList@1240520012(CreateWindowsLogins@1240520015 : Boolean;CreateWindowsAccCtrls@1240520014 : Boolean;CreateRoles@1240520013 : Boolean;CreatePermissions@1240520012 : Boolean;CreateCompanies@1240520011 : Boolean;CreateObjects@1240520010 : Boolean;CreateObjectInfos@1240520009 : Boolean) : Text[1000];
    VAR
      ESWindowsLogin@1240520020 : Record 14123503;
      ESWindowsAccessControl@1240520021 : Record 14123504;
      ESRole@1240520022 : Record 14123505;
      ESRolePerm@1240520023 : Record 14123506;
      ESCompany@1240520024 : Record 14123507;
      ESObject@1240520025 : Record 14123508;
      ESObjectInfo@1240520026 : Record 14123509;
      ESSecuritySetup@1240520030 : Record 14123521;
      TextPart@1240520008 : ARRAY [10] OF Text[100];
      TableListText@1240520029 : Text[1000];
      LastPart@1240520027 : Integer;
      i@1240520028 : Integer;
    BEGIN
      CLEAR(TextPart);

      ESSecuritySetup.GET;

      IF CreateWindowsLogins THEN
        TextPart[3] := ESWindowsLogin.TABLECAPTION;
      IF CreateWindowsAccCtrls THEN
        TextPart[4] := ESWindowsAccessControl.TABLECAPTION;
      IF CreateRoles THEN
        TextPart[5] := ESRole.TABLECAPTION;
      IF CreatePermissions THEN
        TextPart[6] := ESRolePerm.TABLECAPTION;
      IF CreateCompanies THEN
        TextPart[7] := ESCompany.TABLECAPTION;
      IF ESSecuritySetup."Include Objs. in Restore Point" AND CreateObjects THEN
        TextPart[8] := ESObject.TABLECAPTION;
      IF CreateObjectInfos THEN
        TextPart[9] := ESObjectInfo.TABLECAPTION;

      COMPRESSARRAY(TextPart);

      FOR i := 1 TO ARRAYLEN(TextPart) DO
        IF TextPart[i] <> '' THEN
          LastPart := i;

      FOR i := 1 TO LastPart DO
        IF i = 1 THEN
          TableListText := TextPart[i]
        ELSE
          IF i = LastPart THEN
            TableListText := TableListText + Text003 + TextPart[i]
          ELSE
            TableListText := TableListText + ', ' + TextPart[i];

      EXIT(TableListText);
    END;

    PROCEDURE CreateNewLogins@1240520009(ShowStatus@1240520014 : Boolean;AddNewLogins@1240520011 : Boolean;DeleteRemovedLogins@1240520012 : Boolean;IncludeAccessControl@1240520018 : Boolean);
    VAR
      ESLogin@1240520010 : Record 14123527;
      ESLoginAccessControl@1240520021 : Record 14123528;
      ESWindowsLogin@1240520009 : Record 14123503;
      ESWindowsLoginMapping@1240520017 : Record 14123529;
      ESWindowsAccessControl@1240520020 : Record 14123504;
      ESSecuritySetup@1240520001 : Record 14123521;
      Window@1240520013 : Dialog;
      AddedLogins@1240520015 : Integer;
      DeletedLogins@1240520016 : Integer;
      AddedRoles@1240520022 : Integer;
    BEGIN
      ESSecuritySetup.GET;
      ESSecuritySetup.TestPublishCompany;

      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text004) + Text005);

      IF AddNewLogins THEN BEGIN
        IF GUIALLOWED THEN
          Window.UPDATE(1,Text007);
        ESWindowsLogin.RESET;
        IF ESWindowsLogin.FIND('-') THEN
          REPEAT
            IF NOT ESSecuritySetup."Use Complete User ID" THEN BEGIN
              IF ESWindowsLoginMapping.GET(ESWindowsLogin.SID) THEN BEGIN
                ESWindowsLoginMapping.TESTFIELD("User ID");
                ESWindowsLogin."User ID" := ESWindowsLoginMapping."User ID";
              END ELSE
                ESWindowsLogin.TESTFIELD("User ID");
              ESLogin."User ID" := ESWindowsLogin."User ID";
            END ELSE BEGIN
              ESWindowsLogin.TESTFIELD(ID);
              ESLogin."User ID" := ESWindowsLogin.ID;
            END;

            IF NOT ESLogin.GET(ESLogin.Type::Windows,ESLogin."User ID") THEN BEGIN
              ESLogin.INIT;
              ESLogin.Type := ESLogin.Type::Windows;
              IF ESSecuritySetup."Use Complete User ID" THEN
                ESLogin.VALIDATE("User ID",ESWindowsLogin.ID)
              ELSE
                ESLogin.VALIDATE("User ID",ESWindowsLogin."User ID");
              ESLogin."Full Name" := ESWindowsLogin."Full Name";
              ESLogin.State := ESWindowsLogin.State;
              ESLogin."License Type" := ESWindowsLogin."License Type";
              ESLogin.INSERT(TRUE);

              AddedLogins := AddedLogins + 1;

              IF IncludeAccessControl THEN BEGIN
                ESWindowsAccessControl.RESET;
                ESWindowsAccessControl.SETRANGE("Login SID",ESWindowsLogin.SID);
                IF ESWindowsAccessControl.FIND('-') THEN
                  REPEAT
                    ESLoginAccessControl.INIT;
                    ESLoginAccessControl.SetAllowBlankNoQuestion(TRUE,FALSE);
                    ESLoginAccessControl."Login Type" := ESLogin.Type;
                    ESLoginAccessControl."Login User ID" := ESLogin."User ID";
                    ESLoginAccessControl."Role Type" := ESLoginAccessControl."Role Type"::Role;
                    ESLoginAccessControl.VALIDATE("Role ID",ESWindowsAccessControl."Role ID");
                    IF ESWindowsAccessControl."Company Name" <> '' THEN
                      ESLoginAccessControl."Company Group ID" :=
                        FindCompanyGroup(ESWindowsAccessControl."Company Name")
                    ELSE
                      ESLoginAccessControl."Company Group ID" := '';
                    ESLoginAccessControl.INSERT(TRUE);

                    AddedRoles := AddedRoles + 1;
                  UNTIL ESWindowsAccessControl.NEXT = 0;
              END;
            END ELSE BEGIN
              ESLogin."Full Name" := ESWindowsLogin."Full Name";
              ESLogin.State := ESWindowsLogin.State;
              ESLogin."License Type" := ESWindowsLogin."License Type";
              ESLogin.MODIFY(TRUE);
            END;
          UNTIL ESWindowsLogin.NEXT = 0;
      END;

      IF DeleteRemovedLogins THEN BEGIN
        IF GUIALLOWED THEN
          Window.UPDATE(1,Text008);
        ESLogin.RESET;
        IF ESLogin.FIND('-') THEN
          REPEAT
            ESWindowsLogin.RESET;
            ESWindowsLogin.SETRANGE("User ID",ESLogin."User ID");
            IF ESWindowsLogin.FIND('-') THEN BEGIN
              IF ESWindowsLogin.NEXT <> 0 THEN
                ERROR(Text009,ESWindowsLogin."User ID");

              ESLogin.TESTFIELD("Login SID",ESWindowsLogin.SID);
            END ELSE BEGIN
              ESLogin.DELETE(TRUE);

              DeletedLogins := DeletedLogins + 1;
            END;
          UNTIL ESLogin.NEXT = 0;
      END;

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        IF IncludeAccessControl THEN
          MESSAGE(Text010,AddedLogins,DeletedLogins,AddedRoles)
        ELSE
          MESSAGE(Text011,AddedLogins,DeletedLogins);
      IF IncludeAccessControl THEN
        ESSecuritySetup.Comment(1,STRSUBSTNO(Text010,AddedLogins,DeletedLogins,AddedRoles))
      ELSE
        ESSecuritySetup.Comment(1,STRSUBSTNO(Text011,AddedLogins,DeletedLogins));
    END;

    PROCEDURE CreateNewRoles@1240520038(ShowStatus@1240520009 : Boolean) : Integer;
    VAR
      ESRestorePoint1@1240520010 : Record 14123523;
      ESRestorePoint2@1240520019 : Record 14123523;
      ESSecuritySetup@1240520013 : Record 14123521;
      ESRestorePointRole@1240520011 : Record 14123515;
      ESRole@1240520012 : Record 14123505;
      ESRestPntRolePerm@1240520014 : Record 14123516;
      ESRolePerm@1240520015 : Record 14123506;
      Window@1240520016 : Dialog;
      RolesCreated@1240520017 : Integer;
      RoleList@1240520018 : Text[250];
    BEGIN
      ESSecuritySetup.GET;
      ESSecuritySetup.TestPublishCompany;

      CLEAR(ESRestorePoint1);
      ESRestorePoint1.Description := Text051;
      ESRestorePoint1.INSERT(TRUE);
      ESRestorePoint1.CreateRestPntFromES(FALSE);

      CLEAR(ESRestorePoint2);
      ESRestorePoint2.Description := Text051;
      ESRestorePoint2.INSERT(TRUE);
      ESRestorePoint2.CreateRestPntFromLive(FALSE);

      IF GUIALLOWED THEN
        Window.OPEN(Text052);

      ESRestorePointRole.RESET;
      ESRestorePointRole.SETRANGE("Version Code",ESRestorePoint2.Code);
      IF ESRestorePointRole.FIND('-') THEN
        REPEAT
          IF GUIALLOWED THEN
            Window.UPDATE(1,ESRestorePointRole."Role ID");

          IF NOT ESRole.GET(ESRestorePointRole."Role ID") THEN BEGIN
            ESRole.INIT;
            ESRole.SetAllowZeroNoQuestion(TRUE);
            ESRole.TRANSFERFIELDS(ESRestorePointRole,TRUE);
            ESRole.INSERT(TRUE);

            ESRestPntRolePerm.RESET;
            ESRestPntRolePerm.SETRANGE("Version Code",ESRestorePointRole."Version Code");
            ESRestPntRolePerm.SETRANGE("Role ID",ESRestorePointRole."Role ID");
            IF ESRestPntRolePerm.FIND('-') THEN
              REPEAT
                ESRolePerm.INIT;
                ESRolePerm.SetAllowZeroNoQuestion(TRUE,TRUE);
                ESRolePerm.TRANSFERFIELDS(ESRestPntRolePerm,TRUE);
                ESRolePerm.INSERT(TRUE);
              UNTIL ESRestPntRolePerm.NEXT = 0;

            IF ESSecuritySetup."Permission Recorder Licensed" THEN
              IF NOT ESSecuritySetup.TestRestrictedRoleID(ESRole."Role ID",FALSE) THEN
                ESRole.CreateRoleDetail(FALSE);

            RolesCreated := RolesCreated + 1;
            IF STRLEN(RoleList) + STRLEN(ESRole."Role ID") + 2 < MAXSTRLEN(RoleList) THEN
              IF RoleList <> '' THEN
                RoleList := RoleList + ', ' + ESRole."Role ID"
              ELSE
                RoleList := ESRole."Role ID";
          END;
        UNTIL ESRestorePointRole.NEXT = 0;

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        IF RolesCreated = 0 THEN
          MESSAGE(Text053)
        ELSE
          MESSAGE(Text054,RolesCreated,RoleList);
      IF RolesCreated = 0 THEN
        ESSecuritySetup.Comment(1,Text053)
      ELSE
        ESSecuritySetup.Comment(1,STRSUBSTNO(Text054,RolesCreated,RoleList));

      EXIT(RolesCreated);
    END;

    PROCEDURE FindCompanyGroup@1240520019(CompanyName@1240520008 : Text[30]) : Code[30];
    VAR
      ESCompanyGroup@1240520009 : Record 14123530;
      ESCompanyGroup2@1240520011 : Record 14123530;
      ESCompanyGroupLine@1240520010 : Record 14123531;
      SequenceNo@1240520012 : Code[10];
    BEGIN
      ESCompanyGroupLine.RESET;
      ESCompanyGroupLine.SETCURRENTKEY("Company Name");
      ESCompanyGroupLine.SETRANGE("Company Name",CompanyName);
      IF ESCompanyGroupLine.FIND('-') THEN
        REPEAT
          ESCompanyGroup.GET(ESCompanyGroupLine."Company Group ID");
          ESCompanyGroup.CALCFIELDS(Companies);
          IF ESCompanyGroup.Companies = 1 THEN
            EXIT(ESCompanyGroup."Group ID");
        UNTIL ESCompanyGroupLine.NEXT = 0;

      ESCompanyGroup.INIT;
      ESCompanyGroup."Group ID" := COPYSTR(CompanyName,1,MAXSTRLEN(ESCompanyGroup."Group ID"));
      IF ESCompanyGroup2.GET(ESCompanyGroup."Group ID") THEN BEGIN
        ESCompanyGroup."Group ID" :=
           COPYSTR(ESCompanyGroup."Group ID",1,MAXSTRLEN(ESCompanyGroup."Group ID") - 3);
        SequenceNo := '001';

        WHILE ESCompanyGroup2.GET(ESCompanyGroup."Group ID" + SequenceNo) DO
          SequenceNo := INCSTR(SequenceNo);

        ESCompanyGroup."Group ID" := ESCompanyGroup."Group ID" + SequenceNo;
      END;
      ESCompanyGroup.Name := CompanyName;
      ESCompanyGroup.INSERT(TRUE);

      ESCompanyGroupLine.INIT;
      ESCompanyGroupLine."Company Group ID" := ESCompanyGroup."Group ID";
      ESCompanyGroupLine."Company Name" := CompanyName;
      ESCompanyGroupLine.INSERT;

      EXIT(ESCompanyGroup."Group ID");
    END;

    PROCEDURE UpdateAllLogins@1240520014(UpdateLogin@1240520014 : Boolean;UpdateSummaryPermissions@1240520013 : Boolean;UpdateWindowsGroupSummaryPerms@1240520015 : Boolean;ShowStatus@1240520012 : Boolean);
    VAR
      ESSecuritySetup@1240520010 : Record 14123521;
      ESLogin@1240520008 : Record 14123527;
      Window@1240520009 : Dialog;
      UpdatedRecords@1240520011 : Integer;
    BEGIN
      IF UpdateWindowsGroupSummaryPerms AND (UpdateLogin OR UpdateSummaryPermissions) THEN
        ERROR(
          Text034);

      ESSecuritySetup.GET;
      ESSecuritySetup.CRONUSCompanyComment;

      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text012) + Text005);

      ESLogin.RESET;
      IF ESLogin.FIND('-') THEN
        REPEAT
          IF GUIALLOWED THEN
            Window.UPDATE(1,STRSUBSTNO('%1 %2',ESLogin.Type,ESLogin."User ID"));

          UpdateESLogin(
            ESLogin,UpdateLogin,UpdateSummaryPermissions,UpdateWindowsGroupSummaryPerms,
            FALSE,FALSE);

          UpdatedRecords := UpdatedRecords + 1;
        UNTIL ESLogin.NEXT = 0;

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text013,UpdatedRecords);
      ESSecuritySetup.Comment(1,STRSUBSTNO(Text013,UpdatedRecords));
    END;

    PROCEDURE UpdateESLogin@1240520011(ESLogin@1240520008 : Record 14123527;UpdateLogin@1240520027 : Boolean;UpdateSummaryPermissions@1240520026 : Boolean;UpdateWindowsGroupSummaryPerms@1240520029 : Boolean;ShowStatus@1240520024 : Boolean;ShowProgress@1240520028 : Boolean);
    VAR
      ESSecuritySetup@1240520025 : Record 14123521;
      ESWindowsLogin@1240520018 : Record 14123503;
      PermissionESLogin@1240520009 : Record 14123527;
      ESAccessControlTmp@1240520014 : TEMPORARY Record 14123504;
      ESAccessControlTmp2@1240520021 : TEMPORARY Record 14123504;
      ESWindowsAccessControl@1240520020 : Record 14123504;
      ESWindowsAccessControl2@1240520003 : Record 14123504;
      ESWindowsAccessControlTmp@1240520006 : TEMPORARY Record 14123504;
      ESWindowsGroupMember@1240520030 : Record 14123538;
      Window@1240520016 : Dialog;
      InsertedRecords@1240520023 : Integer;
      TotalRecords@1240520005 : Integer;
      InsertedPermissionRecords@1240520031 : Integer;
      EOFTmp@1240520001 : Boolean;
      EOFDatabase@1240520002 : Boolean;
    BEGIN
      IF UpdateWindowsGroupSummaryPerms AND (UpdateLogin OR UpdateSummaryPermissions) THEN
        ERROR(
          Text034);

      ESSecuritySetup.GET;
      ESSecuritySetup.TESTFIELD("SUPER Role ID");

      ESLogin.TESTFIELD("Login SID");
      IF NOT ESWindowsLogin.GET(ESLogin."Login SID") THEN BEGIN
        IF UpdateLogin THEN BEGIN
          ESLogin."Deleted Live Login" := TRUE;
          ESLogin."Login Updated Date Time" := CURRENTDATETIME;
          ESLogin.SetNoComment(NOT ESSecuritySetup."Detailed Comments");
          ESLogin.MODIFY(TRUE);
        END;

        EXIT;
      END;

      IF ESLogin."Permissions as User ID" <> '' THEN
        PermissionESLogin.GET(ESLogin."Permissions as Type",ESLogin."Permissions as User ID")
      ELSE
        PermissionESLogin := ESLogin;

      IF ShowProgress AND GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text014) + Text005);

      ESAccessControlTmp.DELETEALL;

      UpdateNoPermsFromExpiryDate(ESLogin.Type,ESLogin."User ID",TODAY,FALSE,FALSE);
      ESLogin.FIND;

      IF NOT ESLogin."No Permissions" THEN BEGIN
        IF ShowProgress AND GUIALLOWED THEN
          Window.UPDATE(1,Text015);

        UpdateESLoginAccessCtrl(PermissionESLogin,ESAccessControlTmp);
      END;

      IF UpdateWindowsGroupSummaryPerms THEN BEGIN
        ESLogin.TESTFIELD(Type,ESLogin.Type::Windows);
        ESLogin.TESTFIELD("Login SID");

        ESWindowsGroupMember.RESET;
        ESWindowsGroupMember.SETCURRENTKEY("Member SID");
        ESWindowsGroupMember.SETRANGE("Member SID",ESLogin."Login SID");
        IF ESWindowsGroupMember.FIND('-') THEN
          REPEAT
            IF ISNULLGUID(ESWindowsGroupMember."Group SID") THEN BEGIN
              PermissionESLogin.RESET;
              PermissionESLogin.SETRANGE(Type,PermissionESLogin.Type::Windows);
              PermissionESLogin.SETRANGE("Login SID",ESWindowsGroupMember."Group SID");
              IF PermissionESLogin.FIND('-') THEN
                IF NOT PermissionESLogin."No Permissions" THEN
                  UpdateESLoginAccessCtrl(PermissionESLogin,ESAccessControlTmp);
            END;
          UNTIL ESWindowsGroupMember.NEXT = 0;
      END;

      IF ShowProgress AND GUIALLOWED THEN
        Window.UPDATE(1,Text016);
      ESAccessControlTmp.RESET;
      ESAccessControlTmp.SETRANGE("Company Name",'');
      IF ESAccessControlTmp.FIND('-') THEN BEGIN
        ESAccessControlTmp2.RESET;
        ESAccessControlTmp2.DELETEALL;

        REPEAT
          ESAccessControlTmp2 := ESAccessControlTmp;
          ESAccessControlTmp2.INSERT;
        UNTIL ESAccessControlTmp.NEXT = 0;

        IF ESAccessControlTmp2.FIND('-') THEN
          REPEAT
            ESAccessControlTmp.RESET;
            ESAccessControlTmp.SETRANGE("Role ID",ESAccessControlTmp2."Role ID");
            ESAccessControlTmp.SETFILTER("Company Name",'<>%1','');
            ESAccessControlTmp.DELETEALL;
          UNTIL ESAccessControlTmp2.NEXT = 0;
      END;

      IF NOT ESSecuritySetup."Do Not Compress if SUPER" THEN BEGIN
        IF ShowProgress AND GUIALLOWED THEN
          Window.UPDATE(1,Text020);
        ESAccessControlTmp.RESET;
        ESAccessControlTmp.SETRANGE("Role ID",ESSecuritySetup."SUPER Role ID");
        IF ESAccessControlTmp.FIND('-') THEN BEGIN
          ESAccessControlTmp2.RESET;
          ESAccessControlTmp2.DELETEALL;

          REPEAT
            ESAccessControlTmp2 := ESAccessControlTmp;
            ESAccessControlTmp2.INSERT;
          UNTIL ESAccessControlTmp.NEXT = 0;

          IF ESAccessControlTmp2.FIND('-') THEN
            REPEAT
              ESAccessControlTmp.RESET;
              ESAccessControlTmp.SETFILTER("Role ID",'<>%1',ESSecuritySetup."SUPER Role ID");
              IF ESAccessControlTmp2."Company Name" <> '' THEN
                ESAccessControlTmp.SETRANGE("Company Name",ESAccessControlTmp2."Company Name");
              ESAccessControlTmp.DELETEALL;
            UNTIL ESAccessControlTmp2.NEXT = 0;
        END;
      END;

      IF UpdateLogin THEN BEGIN
        ESLogin."Deleted Live Login" := FALSE;
        ESLogin."Login Updated Date Time" := CURRENTDATETIME;
        ESLogin.SetNoComment(NOT ESSecuritySetup."Detailed Comments");
        ESLogin.MODIFY(TRUE);

        IF TRUE THEN BEGIN
          IF ShowProgress AND GUIALLOWED THEN
            Window.UPDATE(1,Text017);

          IF ESSecuritySetup."Optimized Publishing" THEN BEGIN
            ESWindowsAccessControlTmp.RESET;
            ESWindowsAccessControlTmp.DELETEALL;

            ESWindowsAccessControl.RESET;
            ESWindowsAccessControl.SETRANGE("Login SID",ESWindowsLogin.SID);
            IF ESWindowsAccessControl.FIND('-') THEN
              REPEAT
                ESWindowsAccessControlTmp := ESWindowsAccessControl;
                ESWindowsAccessControlTmp.INSERT;
              UNTIL ESWindowsAccessControl.NEXT = 0;
            EOFDatabase := NOT ESWindowsAccessControlTmp.FIND('-');

            ESAccessControlTmp.RESET;
            EOFTmp := NOT ESAccessControlTmp.FIND('-');
            WHILE NOT EOFTmp AND NOT EOFDatabase DO BEGIN
              IF (ESAccessControlTmp."Role ID" = ESWindowsAccessControlTmp."Role ID") AND
                 (ESAccessControlTmp."Company Name" = ESWindowsAccessControlTmp."Company Name")
              THEN BEGIN
                EOFTmp := ESAccessControlTmp.NEXT = 0;
                EOFDatabase := ESWindowsAccessControlTmp.NEXT = 0;
                TotalRecords := TotalRecords + 1;
              END ELSE BEGIN
                IF (ESAccessControlTmp."Role ID" < ESWindowsAccessControlTmp."Role ID") OR
                   ((ESAccessControlTmp."Role ID" = ESWindowsAccessControlTmp."Role ID") AND
                    (ESAccessControlTmp."Company Name" < ESWindowsAccessControlTmp."Company Name"))
                THEN BEGIN
                  ESWindowsAccessControl2.INIT;
                  ESWindowsAccessControl2."Login SID" := ESWindowsLogin.SID;
                  ESWindowsAccessControl2."Role ID" := ESAccessControlTmp."Role ID";
                  ESWindowsAccessControl2."Company Name" := ESAccessControlTmp."Company Name";
                  ESWindowsAccessControl2.INSERT;

                  EOFTmp := ESAccessControlTmp.NEXT = 0;
                  TotalRecords := TotalRecords + 1;
                  InsertedRecords := InsertedRecords + 1;
                END ELSE BEGIN
                  ESWindowsAccessControl2 := ESWindowsAccessControlTmp;
                  ESWindowsAccessControl2.DELETE;

                  EOFDatabase := ESWindowsAccessControlTmp.NEXT = 0;
                  InsertedRecords := InsertedRecords + 1;
                END;
              END;
            END;

            WHILE NOT EOFTmp DO BEGIN
              ESWindowsAccessControl2.INIT;
              ESWindowsAccessControl2."Login SID" := ESWindowsLogin.SID;
              ESWindowsAccessControl2."Role ID" := ESAccessControlTmp."Role ID";
              ESWindowsAccessControl2."Company Name" := ESAccessControlTmp."Company Name";
              ESWindowsAccessControl2.INSERT;

              EOFTmp := ESAccessControlTmp.NEXT = 0;
              TotalRecords := TotalRecords + 1;
              InsertedRecords := InsertedRecords + 1;
            END;

            WHILE NOT EOFDatabase DO BEGIN
              ESWindowsAccessControl2 := ESWindowsAccessControlTmp;
              ESWindowsAccessControl2.DELETE;

              EOFDatabase := ESWindowsAccessControlTmp.NEXT = 0;
              InsertedRecords := InsertedRecords + 1;
            END;
          END ELSE BEGIN
            ESWindowsAccessControl.RESET;
            ESWindowsAccessControl.SETRANGE("Login SID",ESWindowsLogin.SID);
            ESWindowsAccessControl.DELETEALL(TRUE);

            ESAccessControlTmp.RESET;
            IF ESAccessControlTmp.FIND('-') THEN
              REPEAT
                ESWindowsAccessControl.INIT;
                ESWindowsAccessControl."Login SID" := ESWindowsLogin.SID;
                ESWindowsAccessControl."Role ID" := ESAccessControlTmp."Role ID";
                ESWindowsAccessControl."Company Name" := ESAccessControlTmp."Company Name";
                ESWindowsAccessControl.INSERT(TRUE);

                InsertedRecords := InsertedRecords + 1;
              UNTIL ESAccessControlTmp.NEXT = 0;
          END;
        END;
      END;

      IF UpdateSummaryPermissions THEN BEGIN
        IF ShowProgress AND GUIALLOWED THEN
          Window.UPDATE(1,Text021);

        UpdateSummaryPermData(
          ESLogin.Type,ESLogin."User ID",ESAccessControlTmp,InsertedPermissionRecords,
          ESSecuritySetup."Include All Summary Perms.",
          ESSecuritySetup."No Sec. Filter in Summary Perm");

        UpdateSummaryResults(
          ESLogin.Type,ESLogin."User ID",ESSecuritySetup."Summary Result Company Filter");
      END;

      IF UpdateWindowsGroupSummaryPerms THEN BEGIN
        IF ShowProgress AND GUIALLOWED THEN
          Window.UPDATE(1,Text033);

        UpdateSummaryPermData(
          5,ESLogin."User ID",ESAccessControlTmp,InsertedPermissionRecords,
          ESSecuritySetup."Include All Summary Perms.",
          ESSecuritySetup."No Sec. Filter in Summary Perm");
      END;

      IF ShowProgress AND GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN BEGIN
        IF TotalRecords > InsertedRecords THEN
          InsertedRecords := TotalRecords;

        MESSAGE(Text019,InsertedRecords,ESLogin.Type,ESLogin."User ID",InsertedPermissionRecords);
      END;
    END;

    PROCEDURE UpdateESLoginAccessCtrl@1240520032(ESLogin@1240520008 : Record 14123527;VAR ESAccessControlTmp@1240520009 : TEMPORARY Record 14123504);
    VAR
      ESLoginAccessControl@1240520011 : Record 14123528;
      ESCompanyGroup@1240520012 : Record 14123530;
      ESCompanyGroupLine@1240520013 : Record 14123531;
      ESRoleGroup@1240520019 : Record 14123525;
      ESRole@1240520015 : Record 14123505;
      ESCompanyTmp@1240520010 : TEMPORARY Record 14123507;
    BEGIN
      ESLoginAccessControl.RESET;
      ESLoginAccessControl.SETRANGE("Login Type",ESLogin.Type);
      ESLoginAccessControl.SETRANGE("Login User ID",ESLogin."User ID");
      ESLoginAccessControl.SETRANGE("No Permissions",FALSE);
      IF ESLoginAccessControl.FIND('-') THEN
        REPEAT
          ESLoginAccessControl.TESTFIELD("Role ID");

          ESCompanyTmp.RESET;
          ESCompanyTmp.DELETEALL;
          IF ESLoginAccessControl."Company Group ID" <> '' THEN BEGIN
            ESCompanyGroup.GET(ESLoginAccessControl."Company Group ID");
            ESCompanyGroupLine.RESET;
            ESCompanyGroupLine.SETRANGE("Company Group ID",ESCompanyGroup."Group ID");
            IF ESCompanyGroupLine.FIND('-') THEN
              REPEAT
                ESCompanyTmp.Name := ESCompanyGroupLine."Company Name";
                ESCompanyTmp.INSERT;
              UNTIL ESCompanyGroupLine.NEXT = 0;
          END ELSE BEGIN
            ESCompanyTmp.Name := '';
            ESCompanyTmp.INSERT;
          END;

          IF ESCompanyTmp.FIND('-') THEN
            REPEAT
              IF ESLoginAccessControl."Role Type" = ESLoginAccessControl."Role Type"::Group
              THEN BEGIN
                ESRoleGroup.GET(ESLoginAccessControl."Role ID");
                UpdateESLoginRecursive(ESRoleGroup,ESAccessControlTmp,ESCompanyTmp.Name);
              END ELSE BEGIN
                ESRole.GET(ESLoginAccessControl."Role ID");
                InsertRoleLogin(
                  ESAccessControlTmp,ESLoginAccessControl."Role ID",ESCompanyTmp.Name);
              END;
            UNTIL ESCompanyTmp.NEXT = 0;
        UNTIL ESLoginAccessControl.NEXT = 0;
    END;

    LOCAL PROCEDURE UpdateESLoginRecursive@1240520015(ESRoleGroup@1240520011 : Record 14123525;VAR ESAccessControlTmp@1240520008 : Record 14123504;NewCompanyName@1240520009 : Text[30]);
    VAR
      ESRoleGroupLine@1240520010 : Record 14123526;
      ESRole@1240520013 : Record 14123505;
    BEGIN
      ESRoleGroupLine.RESET;
      ESRoleGroupLine.SETRANGE("Role Group ID",ESRoleGroup."Group ID");
      IF ESRoleGroupLine.FIND('-') THEN
        REPEAT
          IF ESRoleGroupLine."Role Type" = ESRoleGroupLine."Role Type"::Group THEN BEGIN
            ESRoleGroup.GET(ESRoleGroupLine."Role ID");
            UpdateESLoginRecursive(ESRoleGroup,ESAccessControlTmp,NewCompanyName);
          END ELSE BEGIN
            ESRole.GET(ESRoleGroupLine."Role ID");
            InsertRoleLogin(ESAccessControlTmp,ESRoleGroupLine."Role ID",NewCompanyName);
          END;
        UNTIL ESRoleGroupLine.NEXT = 0;
    END;

    LOCAL PROCEDURE InsertRoleLogin@1240520013(VAR ESAccessControl@1240520008 : TEMPORARY Record 14123504;NewRoleID@1240520009 : Code[20];NewCompanyName@1240520010 : Text[30]);
    BEGIN
      CLEAR(ESAccessControl."Login SID");
      ESAccessControl."Role ID" := NewRoleID;
      ESAccessControl."Company Name" := NewCompanyName;
      IF NOT ESAccessControl.INSERT THEN
        ;
    END;

    PROCEDURE MergePermission@1240520021(Permission1@1240520008 : ' ,Yes,Indirect';Permission2@1240520009 : ' ,Yes,Indirect') : Integer;
    BEGIN
      IF (Permission1 = Permission1::Yes) OR (Permission2 = Permission2::Yes) THEN
        EXIT(Permission1::Yes);
      IF (Permission1 = Permission1::Indirect) OR (Permission2 = Permission2::Indirect) THEN
        EXIT(Permission1::Indirect);
      EXIT(Permission1::" ");
    END;

    PROCEDURE CalculateRoleGroupRoles@1240520040(VAR ESRoleTmp@1240520008 : Record 14123505;RoleGroupID@1240520009 : Code[20];VerifyRoles@1240520013 : Boolean);
    VAR
      ESRole@1240520012 : Record 14123505;
      ESRoleGroup@1240520010 : Record 14123525;
      ESRoleGroupLine@1240520011 : Record 14123526;
    BEGIN
      IF VerifyRoles THEN
        ESRoleGroup.GET(RoleGroupID);

      ESRoleGroupLine.RESET;
      ESRoleGroupLine.SETRANGE("Role Group ID",RoleGroupID);
      ESRoleGroupLine.SETFILTER("Role ID",'<>%1','');
      IF ESRoleGroupLine.FIND('-') THEN
        REPEAT
          CASE ESRoleGroupLine."Role Type" OF
            ESRoleGroupLine."Role Type"::Group:
              CalculateRoleGroupRoles(ESRoleTmp,ESRoleGroupLine."Role ID",VerifyRoles);
            ELSE BEGIN
              IF VerifyRoles THEN
                ESRole.GET(ESRoleGroupLine."Role ID");
              ESRoleTmp."Role ID" := ESRoleGroupLine."Role ID";
              IF NOT ESRoleTmp.INSERT THEN
                ;
            END;
          END;
        UNTIL ESRoleGroupLine.NEXT = 0;
    END;

    PROCEDURE UpdateAllRoleGroupSummaryPerm@1240520029(UpdateSummaryPermissions@1240520017 : Boolean;ShowStatus@1240520018 : Boolean);
    VAR
      ESSecuritySetup@1240520015 : Record 14123521;
      ESRoleGroup@1240520010 : Record 14123525;
      Window@1240520016 : Dialog;
      UpdatedRecords@1240520009 : Integer;
    BEGIN
      ESSecuritySetup.GET;
      ESSecuritySetup.CRONUSCompanyComment;

      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text028) + Text005);

      ESRoleGroup.RESET;
      IF ESRoleGroup.FIND('-') THEN
        REPEAT
          IF GUIALLOWED THEN
            Window.UPDATE(1,STRSUBSTNO('%1 %2',ESRoleGroup."Group ID",ESRoleGroup.Name));

          UpdateRoleGroupSummaryPerm(ESRoleGroup,UpdateSummaryPermissions,FALSE,FALSE);

          UpdatedRecords := UpdatedRecords + 1;
        UNTIL ESRoleGroup.NEXT = 0;

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text030,UpdatedRecords);
    END;

    PROCEDURE UpdateRoleGroupSummaryPerm@1240520028(ESRoleGroup@1240520008 : Record 14123525;UpdateSummaryPermissions@1240520017 : Boolean;ShowStatus@1240520018 : Boolean;ShowProgress@1240520019 : Boolean);
    VAR
      ESSecuritySetup@1240520015 : Record 14123521;
      ESSummaryPerm@1240520013 : Record 14123537;
      ESRoleGroupLine@1240520010 : Record 14123526;
      ESRoleGroup2@1240520012 : Record 14123525;
      ESRole@1240520014 : Record 14123505;
      ESAccessControlTmp@1240520011 : TEMPORARY Record 14123504;
      Window@1240520016 : Dialog;
      InsertedPermissionRecords@1240520009 : Integer;
    BEGIN
      IF ShowProgress AND GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text028) + Text005);

      ESSecuritySetup.GET;

      IF ShowProgress AND GUIALLOWED THEN
        Window.UPDATE(1,Text029);
      ESSummaryPerm.RESET;
      ESSummaryPerm.SETRANGE(Type,ESSummaryPerm.Type::"Role Group");
      ESSummaryPerm.SETRANGE(Code,ESRoleGroup."Group ID");
      ESSummaryPerm.DELETEALL;

      IF ShowProgress AND GUIALLOWED THEN
        Window.UPDATE(1,Text015);
      ESRoleGroupLine.RESET;
      ESRoleGroupLine.SETRANGE("Role Group ID",ESRoleGroup."Group ID");
      IF ESRoleGroupLine.FIND('-') THEN
        REPEAT
          IF ESRoleGroupLine."Role Type" = ESRoleGroupLine."Role Type"::Group THEN BEGIN
            ESRoleGroup2.GET(ESRoleGroupLine."Role ID");
            UpdateESLoginRecursive(ESRoleGroup2,ESAccessControlTmp,'');
          END ELSE BEGIN
            ESRole.GET(ESRoleGroupLine."Role ID");
            InsertRoleLogin(ESAccessControlTmp,ESRoleGroupLine."Role ID",'');
          END;
        UNTIL ESRoleGroupLine.NEXT = 0;

      IF UpdateSummaryPermissions THEN BEGIN
        IF ShowProgress AND GUIALLOWED THEN
          Window.UPDATE(1,Text021);

        UpdateSummaryPermData(
          ESSummaryPerm.Type::"Role Group",ESRoleGroup."Group ID",ESAccessControlTmp,
          InsertedPermissionRecords,ESSecuritySetup."Include All Summary Perms.",
          ESSecuritySetup."No Sec. Filter in Summary Perm");

        UpdateSummaryResults(
          ESSummaryPerm.Type::"Role Group",ESRoleGroup."Group ID",
          ESSecuritySetup."Summary Result Company Filter");
      END;

      IF ShowProgress AND GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text027,ESRoleGroup."Group ID",ESRoleGroup.TABLECAPTION,InsertedPermissionRecords);
    END;

    PROCEDURE UpdateAllRoleSummaryPerm@1240520031(UpdateSummaryPermissions@1240520017 : Boolean;ShowStatus@1240520018 : Boolean);
    VAR
      ESSecuritySetup@1240520015 : Record 14123521;
      ESRole@1240520010 : Record 14123505;
      Window@1240520016 : Dialog;
      UpdatedRecords@1240520009 : Integer;
    BEGIN
      ESSecuritySetup.GET;
      ESSecuritySetup.CRONUSCompanyComment;

      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text031) + Text005);

      ESRole.RESET;
      IF ESRole.FIND('-') THEN
        REPEAT
          IF GUIALLOWED THEN
            Window.UPDATE(1,STRSUBSTNO('%1 %2',ESRole."Role ID",ESRole.Name));

          UpdateRoleSummaryPerm(ESRole,UpdateSummaryPermissions,FALSE,FALSE);

          UpdatedRecords := UpdatedRecords + 1;
        UNTIL ESRole.NEXT = 0;

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text032,UpdatedRecords);
    END;

    PROCEDURE UpdateRoleSummaryPerm@1240520030(ESRole@1240520008 : Record 14123505;UpdateSummaryPermissions@1240520017 : Boolean;ShowStatus@1240520018 : Boolean;ShowProgress@1240520010 : Boolean);
    VAR
      ESSecuritySetup@1240520015 : Record 14123521;
      ESSummaryPerm@1240520013 : Record 14123537;
      ESAccessControlTmp@1240520011 : TEMPORARY Record 14123504;
      Window@1240520016 : Dialog;
      InsertedPermissionRecords@1240520009 : Integer;
    BEGIN
      IF ShowProgress AND GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text031) + Text005);

      ESSecuritySetup.GET;

      IF ShowProgress AND GUIALLOWED THEN
        Window.UPDATE(1,Text029);
      ESSummaryPerm.RESET;
      ESSummaryPerm.SETRANGE(Type,ESSummaryPerm.Type::Role);
      ESSummaryPerm.SETRANGE(Code,ESRole."Role ID");
      ESSummaryPerm.DELETEALL;

      IF ShowProgress AND GUIALLOWED THEN
        Window.UPDATE(1,Text015);
      InsertRoleLogin(ESAccessControlTmp,ESRole."Role ID",'');

      IF UpdateSummaryPermissions THEN BEGIN
        IF ShowProgress AND GUIALLOWED THEN
          Window.UPDATE(1,Text021);

        UpdateSummaryPermData(
          ESSummaryPerm.Type::Role,ESRole."Role ID",ESAccessControlTmp,
          InsertedPermissionRecords,ESSecuritySetup."Include All Summary Perms.",
          ESSecuritySetup."No Sec. Filter in Summary Perm");

        UpdateSummaryResults(
          ESSummaryPerm.Type::Role,ESRole."Role ID",ESSecuritySetup."Summary Result Company Filter");
      END;

      IF ShowProgress AND GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text027,ESRole."Role ID",ESRole.TABLECAPTION,InsertedPermissionRecords);
    END;

    PROCEDURE UpdateSummaryPermData@1240520023(SummaryType@1240520019 : Integer;SummaryCode@1240520020 : Code[50];VAR ESAccessControlTmp@1240520010 : TEMPORARY Record 14123504;VAR InsertedPermissionRecords@1240520009 : Integer;IncludeAllSummaryPermissions@1240520017 : Boolean;DoNotCalculateSecurityFilters@1240520002 : Boolean);
    VAR
      ESSummaryPerm@1240520014 : Record 14123537;
      ESSummaryPermTmp@1240520013 : TEMPORARY Record 14123537;
      ESSummaryPermTmp2@1240520012 : TEMPORARY Record 14123537;
      ESRolePerm@1240520011 : Record 14123506;
      ESObjectProperty@1240520015 : Record 14123522;
      ESObjectPropertyTmp@1240520016 : TEMPORARY Record 14123522;
      InsertSummaryPerm@1240520018 : Boolean;
      RolePerm@1240520001 : Record 2000000005;
    BEGIN
      ESSummaryPerm.RESET;
      ESSummaryPerm.SETRANGE(Type,SummaryType);
      ESSummaryPerm.SETRANGE(Code,SummaryCode);
      ESSummaryPerm.DELETEALL;

      IF NOT IncludeAllSummaryPermissions THEN BEGIN
        ESObjectProperty.RESET;
        IF ESObjectProperty.FIND('-') THEN
          REPEAT
            ESObjectPropertyTmp := ESObjectProperty;
            ESObjectPropertyTmp.INSERT;
          UNTIL ESObjectProperty.NEXT = 0;
      END;

      ESSummaryPermTmp.RESET;
      ESSummaryPermTmp.DELETEALL;

      ESAccessControlTmp.RESET;
      IF ESAccessControlTmp.FIND('-') THEN
        REPEAT
          IF SummaryType IN
             [ESSummaryPerm.Type::"Live Database Login",
              ESSummaryPerm.Type::"Live Windows Login",
              ESSummaryPerm.Type::"Live Role"]
          THEN BEGIN
            RolePerm.RESET;
            RolePerm.SETRANGE("Role ID",ESAccessControlTmp."Role ID");
            IF RolePerm.FIND('-') THEN
              REPEAT
                IF IncludeAllSummaryPermissions OR (RolePerm."Object ID" = 0) THEN
                  InsertSummaryPerm := TRUE
                ELSE BEGIN
                  InsertSummaryPerm :=
                    ESObjectPropertyTmp.GET(RolePerm."Object Type",RolePerm."Object ID");
                  IF InsertSummaryPerm THEN
                    InsertSummaryPerm :=
                      ESObjectPropertyTmp."Limited License Object" OR
                      ESObjectPropertyTmp."Object Level Permissions" OR
                      ESObjectPropertyTmp."Segregation of Duties" OR
                      (ESObjectPropertyTmp."Quick Security Type" =
                       ESObjectPropertyTmp."Quick Security Type"::"No Access");
                END;

                IF InsertSummaryPerm THEN
                  IF ESSummaryPermTmp.GET(
                       SummaryType,SummaryCode,RolePerm."Object Type",
                       RolePerm."Object ID",ESAccessControlTmp."Company Name")
                  THEN BEGIN
                    ESSummaryPermTmp."Read Permission" :=
                      MergePermission(
                        ESSummaryPermTmp."Read Permission",RolePerm."Read Permission");
                    ESSummaryPermTmp."Insert Permission" :=
                      MergePermission(
                        ESSummaryPermTmp."Insert Permission",RolePerm."Insert Permission");
                    ESSummaryPermTmp."Modify Permission" :=
                      MergePermission(
                        ESSummaryPermTmp."Modify Permission",RolePerm."Modify Permission");
                    ESSummaryPermTmp."Delete Permission" :=
                      MergePermission(
                        ESSummaryPermTmp."Delete Permission",RolePerm."Delete Permission");
                    ESSummaryPermTmp."Execute Permission" :=
                      MergePermission(
                        ESSummaryPermTmp."Execute Permission",RolePerm."Execute Permission");
                    IF NOT DoNotCalculateSecurityFilters THEN
                      IF FORMAT(RolePerm."Security Filter") <> '' THEN BEGIN
                        IF (FORMAT(ESSummaryPermTmp."Security Filter") <> '') AND
                           (FORMAT(ESSummaryPermTmp."Security Filter") <>
                            FORMAT(RolePerm."Security Filter"))
                        THEN
                          ERROR(
                            Text022,
                            RolePerm."Object Type",RolePerm."Object ID");
                        ESSummaryPermTmp."Security Filter" := RolePerm."Security Filter";
                      END;
                    ESSummaryPermTmp.MODIFY;
                  END ELSE BEGIN
                    ESSummaryPermTmp.INIT;
                    ESSummaryPermTmp.Type := SummaryType;
                    ESSummaryPermTmp.Code := SummaryCode;
                    ESSummaryPermTmp."Company Name" := ESAccessControlTmp."Company Name";
                    ESSummaryPermTmp."Object Type" := RolePerm."Object Type";
                    ESSummaryPermTmp."Object ID" := RolePerm."Object ID";
                    ESSummaryPermTmp."Read Permission" := RolePerm."Read Permission";
                    ESSummaryPermTmp."Insert Permission" := RolePerm."Insert Permission";
                    ESSummaryPermTmp."Modify Permission" := RolePerm."Modify Permission";
                    ESSummaryPermTmp."Delete Permission" := RolePerm."Delete Permission";
                    ESSummaryPermTmp."Execute Permission" := RolePerm."Execute Permission";
                    ESSummaryPermTmp."Security Filter" := RolePerm."Security Filter";
                    ESSummaryPermTmp.INSERT;

                    InsertedPermissionRecords := InsertedPermissionRecords + 1;
                  END;
              UNTIL RolePerm.NEXT = 0;
          END ELSE BEGIN
            ESRolePerm.RESET;
            ESRolePerm.SETRANGE("Role ID",ESAccessControlTmp."Role ID");
            IF ESRolePerm.FIND('-') THEN
              REPEAT
                IF IncludeAllSummaryPermissions OR (ESRolePerm."Object ID" = 0) THEN
                  InsertSummaryPerm := TRUE
                ELSE BEGIN
                  InsertSummaryPerm :=
                    ESObjectPropertyTmp.GET(ESRolePerm."Object Type",ESRolePerm."Object ID");
                  IF InsertSummaryPerm THEN
                    InsertSummaryPerm :=
                      ESObjectPropertyTmp."Limited License Object" OR
                      ESObjectPropertyTmp."Object Level Permissions" OR
                      ESObjectPropertyTmp."Segregation of Duties"OR
                      (ESObjectPropertyTmp."Quick Security Type" =
                       ESObjectPropertyTmp."Quick Security Type"::"No Access");
                END;

                IF InsertSummaryPerm THEN
                  IF ESSummaryPermTmp.GET(
                       SummaryType,SummaryCode,ESRolePerm."Object Type",
                       ESRolePerm."Object ID",ESAccessControlTmp."Company Name")
                  THEN BEGIN
                    ESSummaryPermTmp."Read Permission" :=
                      MergePermission(
                        ESSummaryPermTmp."Read Permission",ESRolePerm."Read Permission");
                    ESSummaryPermTmp."Insert Permission" :=
                      MergePermission(
                        ESSummaryPermTmp."Insert Permission",ESRolePerm."Insert Permission");
                    ESSummaryPermTmp."Modify Permission" :=
                      MergePermission(
                        ESSummaryPermTmp."Modify Permission",ESRolePerm."Modify Permission");
                    ESSummaryPermTmp."Delete Permission" :=
                      MergePermission(
                        ESSummaryPermTmp."Delete Permission",ESRolePerm."Delete Permission");
                    ESSummaryPermTmp."Execute Permission" :=
                      MergePermission(
                        ESSummaryPermTmp."Execute Permission",ESRolePerm."Execute Permission");
                    IF NOT DoNotCalculateSecurityFilters THEN
                      IF FORMAT(ESRolePerm."Security Filter") <> '' THEN BEGIN
                        IF (FORMAT(ESSummaryPermTmp."Security Filter") <> '') AND
                           (FORMAT(ESSummaryPermTmp."Security Filter") <>
                            FORMAT(ESRolePerm."Security Filter"))
                        THEN
                          ERROR(
                            Text022,
                            ESRolePerm."Object Type",ESRolePerm."Object ID");
                        ESSummaryPermTmp."Security Filter" := ESRolePerm."Security Filter";
                      END;
                    ESSummaryPermTmp.MODIFY;
                  END ELSE BEGIN
                    ESSummaryPermTmp.INIT;
                    ESSummaryPermTmp.Type := SummaryType;
                    ESSummaryPermTmp.Code := SummaryCode;
                    ESSummaryPermTmp."Company Name" := ESAccessControlTmp."Company Name";
                    ESSummaryPermTmp."Object Type" := ESRolePerm."Object Type";
                    ESSummaryPermTmp."Object ID" := ESRolePerm."Object ID";
                    ESSummaryPermTmp."Read Permission" := ESRolePerm."Read Permission";
                    ESSummaryPermTmp."Insert Permission" := ESRolePerm."Insert Permission";
                    ESSummaryPermTmp."Modify Permission" := ESRolePerm."Modify Permission";
                    ESSummaryPermTmp."Delete Permission" := ESRolePerm."Delete Permission";
                    ESSummaryPermTmp."Execute Permission" := ESRolePerm."Execute Permission";
                    ESSummaryPermTmp."Security Filter" := ESRolePerm."Security Filter";
                    ESSummaryPermTmp.INSERT;

                    InsertedPermissionRecords := InsertedPermissionRecords + 1;
                  END;
              UNTIL ESRolePerm.NEXT = 0;
          END;
        UNTIL ESAccessControlTmp.NEXT = 0;

      ESSummaryPermTmp.RESET;
      ESSummaryPermTmp.SETRANGE("Company Name",'');
      IF ESSummaryPermTmp.FIND('-') THEN BEGIN
        ESSummaryPermTmp2.RESET;
        ESSummaryPermTmp2.DELETEALL;

        REPEAT
          ESSummaryPermTmp2 := ESSummaryPermTmp;
          ESSummaryPermTmp2.INSERT;
        UNTIL ESSummaryPermTmp.NEXT = 0;

        ESSummaryPermTmp2.RESET;
        ESSummaryPermTmp2.FIND('-');
        REPEAT
          ESSummaryPermTmp.RESET;
          ESSummaryPermTmp.SETRANGE(Type,ESSummaryPermTmp2.Type);
          ESSummaryPermTmp.SETRANGE(Code,ESSummaryPermTmp2.Code);
          ESSummaryPermTmp.SETRANGE("Object Type",ESSummaryPermTmp2."Object Type");
          ESSummaryPermTmp.SETRANGE("Object ID",ESSummaryPermTmp2."Object ID");
          ESSummaryPermTmp.SETFILTER("Company Name",'<>%1','');
          IF ESSummaryPermTmp.FIND('-') THEN
            REPEAT
              IF LessOrEqualPermissions(ESSummaryPermTmp,ESSummaryPermTmp2) THEN BEGIN
                ESSummaryPermTmp.DELETE;

                InsertedPermissionRecords := InsertedPermissionRecords - 1;
              END;
            UNTIL ESSummaryPermTmp.NEXT = 0;
        UNTIL ESSummaryPermTmp2.NEXT = 0;
      END;

      IF NOT IncludeAllSummaryPermissions THEN BEGIN
        ESSummaryPermTmp.RESET;
        ESSummaryPermTmp.SETRANGE("Object ID",0);
        IF ESSummaryPermTmp.FIND('-') THEN BEGIN
          ESSummaryPermTmp2.RESET;
          ESSummaryPermTmp2.DELETEALL;

          REPEAT
            ESSummaryPermTmp2 := ESSummaryPermTmp;
            ESSummaryPermTmp2.INSERT;
          UNTIL ESSummaryPermTmp.NEXT = 0;

          ESSummaryPermTmp2.RESET;
          ESSummaryPermTmp2.FIND('-');
          REPEAT
            ESSummaryPermTmp.RESET;
            ESSummaryPermTmp.SETRANGE(Type,ESSummaryPermTmp2.Type);
            ESSummaryPermTmp.SETRANGE(Code,ESSummaryPermTmp2.Code);
            ESSummaryPermTmp.SETRANGE("Object Type",ESSummaryPermTmp2."Object Type");
            ESSummaryPermTmp.SETFILTER("Object ID",'<>0');
            IF ESSummaryPermTmp2."Company Name" <> '' THEN
              ESSummaryPermTmp.SETRANGE("Company Name",ESSummaryPermTmp2."Company Name");
            IF ESSummaryPermTmp.FIND('-') THEN
              REPEAT
                IF LessOrEqualPermissions(ESSummaryPermTmp,ESSummaryPermTmp2) THEN BEGIN
                  ESSummaryPermTmp.DELETE;

                  InsertedPermissionRecords := InsertedPermissionRecords - 1;
                END;
              UNTIL ESSummaryPermTmp.NEXT = 0;
          UNTIL ESSummaryPermTmp2.NEXT = 0;
        END;
      END;

      ESSummaryPermTmp.RESET;
      IF ESSummaryPermTmp.FIND('-') THEN
        REPEAT
          ESSummaryPerm := ESSummaryPermTmp;
          ESSummaryPerm.UpdateObjectAccess;
          ESSummaryPerm.INSERT;
        UNTIL ESSummaryPermTmp.NEXT = 0;
    END;

    PROCEDURE UpdateAllLiveDatabLoginSummary@1240520002(UpdateSummaryPermissions@1240520002 : Boolean;ShowStatus@1240520001 : Boolean);
    BEGIN
    END;

    PROCEDURE UpdateAllLiveWindLoginSummary@1240520003(UpdateSummaryPermissions@1240520002 : Boolean;ShowStatus@1240520001 : Boolean);
    VAR
      ESSecuritySetup@1240520010 : Record 14123521;
      WindowsLogin@1240520007 : Record 2000000120;
      UpdatedRecords@1240520005 : Integer;
      InsertedPermissionRecords@1240520004 : Integer;
      Window@1240520003 : Dialog;
    BEGIN
      ESSecuritySetup.GET;
      ESSecuritySetup.CRONUSCompanyComment;

      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text070) + Text005);

      WindowsLogin.RESET;
      IF WindowsLogin.FIND('-') THEN
        REPEAT
          IF GUIALLOWED THEN
            Window.UPDATE(1,STRSUBSTNO('%1 %2',WindowsLogin."User Name",WindowsLogin."Full Name"));

          UpdateLiveWindLoginSummary(
            WindowsLogin,InsertedPermissionRecords,UpdateSummaryPermissions,FALSE);

          UpdatedRecords := UpdatedRecords + 1;
        UNTIL WindowsLogin.NEXT = 0;

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text071,UpdatedRecords);
    END;

    PROCEDURE UpdateLiveWindLoginSummary@1240520042(WindowsLogin@1240520007 : Record 2000000120;VAR InsertedPermissionRecords@1240520004 : Integer;UpdateSummaryPermissions@1240520002 : Boolean;ShowStatus@1240520001 : Boolean);
    VAR
      ESSecuritySetup@1240520010 : Record 14123521;
      ESSummaryPerm@1240520009 : Record 14123537;
      ESAccessControlTmp@1240520008 : TEMPORARY Record 14123504;
      WindowsAccessControl@1240520006 : Record 2000000053;
    BEGIN
      ESSecuritySetup.GET;
      ESSecuritySetup.CRONUSCompanyComment;

      ESSummaryPerm.RESET;
      ESSummaryPerm.SETRANGE(Type,ESSummaryPerm.Type::"Live Windows Login");
      ESSummaryPerm.SETRANGE(Code,WindowsLogin."User Security ID");
      ESSummaryPerm.DELETEALL;

      ESAccessControlTmp.RESET;
      ESAccessControlTmp.DELETEALL;

      WindowsAccessControl.RESET;
      WindowsAccessControl.SETRANGE("User Security ID",WindowsLogin."User Security ID");
      IF WindowsAccessControl.FIND('-') THEN
        REPEAT
          ESAccessControlTmp."Role ID" := WindowsAccessControl."Role ID";
          ESAccessControlTmp."Company Name" := WindowsAccessControl."Company Name";
          ESAccessControlTmp.INSERT;
        UNTIL WindowsAccessControl.NEXT = 0;

      UpdateSummaryPermData(
        ESSummaryPerm.Type::"Live Windows Login",WindowsLogin."User Security ID",ESAccessControlTmp,
        InsertedPermissionRecords,ESSecuritySetup."Include All Summary Perms.",
        ESSecuritySetup."No Sec. Filter in Summary Perm");

      UpdateSummaryResults(
        ESSummaryPerm.Type::"Live Windows Login",WindowsLogin."User Security ID",
        ESSecuritySetup."Summary Result Company Filter");

      IF ShowStatus THEN
         MESSAGE(
           Text027,WindowsLogin.TABLECAPTION,WindowsLogin."User Name",InsertedPermissionRecords);
    END;

    PROCEDURE UpdateAllLiveRoleSummary@1240520005(UpdateSummaryPermissions@1240520002 : Boolean;ShowStatus@1240520001 : Boolean);
    VAR
      ESSecuritySetup@1240520004 : Record 14123521;
      Role@1240520003 : Record 2000000004;
      InsertedPermissionRecords@1240520013 : Integer;
      UpdatedRecords@1240520006 : Integer;
      Window@1240520005 : Dialog;
    BEGIN
      ESSecuritySetup.GET;
      ESSecuritySetup.CRONUSCompanyComment;

      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text072) + Text005);

      Role.RESET;
      IF Role.FIND('-') THEN
        REPEAT
          IF GUIALLOWED THEN
            Window.UPDATE(1,STRSUBSTNO('%1 %2',Role."Role ID",Role.Name));

          UpdateLiveRoleSummary(Role,InsertedPermissionRecords,UpdateSummaryPermissions,FALSE);

          UpdatedRecords := UpdatedRecords + 1;
        UNTIL Role.NEXT = 0;

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text073,UpdatedRecords);
    END;

    PROCEDURE UpdateLiveRoleSummary@1240520043(Role@1240520003 : Record 2000000004;VAR InsertedPermissionRecords@1240520009 : Integer;UpdateSummaryPermissions@1240520002 : Boolean;ShowStatus@1240520001 : Boolean);
    VAR
      ESSecuritySetup@1240520004 : Record 14123521;
      ESSummaryPerm@1240520007 : Record 14123537;
      ESAccessControlTmp@1240520008 : TEMPORARY Record 14123504;
    BEGIN
      ESSecuritySetup.GET;
      ESSecuritySetup.CRONUSCompanyComment;

      ESSummaryPerm.RESET;
      ESSummaryPerm.SETRANGE(Type,ESSummaryPerm.Type::"Live Role");
      ESSummaryPerm.SETRANGE(Code,Role."Role ID");
      ESSummaryPerm.DELETEALL;

      ESAccessControlTmp.RESET;
      ESAccessControlTmp.DELETEALL;

      InsertRoleLogin(ESAccessControlTmp,Role."Role ID",'');

      UpdateSummaryPermData(
        ESSummaryPerm.Type::"Live Role",Role."Role ID",ESAccessControlTmp,
        InsertedPermissionRecords,ESSecuritySetup."Include All Summary Perms.",
        ESSecuritySetup."No Sec. Filter in Summary Perm");

      UpdateSummaryResults(
        ESSummaryPerm.Type::"Live Role",Role."Role ID",ESSecuritySetup."Summary Result Company Filter");

      IF ShowStatus THEN
         MESSAGE(Text027,Role.TABLECAPTION,Role."Role ID",InsertedPermissionRecords);
    END;

    PROCEDURE UpdateSummaryResults@1240520007(SummaryResultType@1240520001 : Integer;SummaryResultCode@1240520002 : Code[50];CompanyFilter@1240520008 : Text[80]);
    VAR
      ESSummaryResult@1240520005 : Record 14123544;
      ESSummaryResultLine@1240520004 : Record 14123545;
      ESSummaryCalculation@1240520003 : Record 14123542;
      ESCompany@1240520007 : Record 14123507;
      Company@1240520006 : Record 2000000006;
    BEGIN
      ESSummaryResult.RESET;
      ESSummaryResult.SETRANGE(Type,SummaryResultType);
      ESSummaryResult.SETRANGE(Code,SummaryResultCode);
      ESSummaryResult.DELETEALL;

      ESSummaryResultLine.RESET;
      ESSummaryResultLine.SETRANGE(Type,SummaryResultType);
      ESSummaryResultLine.SETRANGE(Code,SummaryResultCode);
      ESSummaryResultLine.DELETEALL;

      ESSummaryCalculation.RESET;
      ESSummaryCalculation.SETRANGE(Calculate,TRUE);
      IF ESSummaryCalculation.FIND('-') THEN
        REPEAT
          ESSummaryResult.INIT;
          ESSummaryResult.Type := SummaryResultType;
          ESSummaryResult.Code := SummaryResultCode;
          ESSummaryResult."Company Name" := '';
          ESSummaryResult."Summary Calculation Type" := ESSummaryCalculation.Type;
          ESSummaryResult."Summary Calculation Code" := ESSummaryCalculation.Code;
          ESSummaryResult.INSERT(TRUE);
        UNTIL ESSummaryCalculation.NEXT = 0;

      CASE SummaryResultType OF
        ESSummaryResult.Type::"Database Login",ESSummaryResult.Type::"Windows Login":
          BEGIN
            ESSummaryCalculation.RESET;
            ESSummaryCalculation.SETRANGE(Calculate,TRUE);
            IF ESSummaryCalculation.FIND('-') THEN BEGIN
              REPEAT
                ESCompany.RESET;
                IF CompanyFilter <> '' THEN
                  ESCompany.SETFILTER(Name,CompanyFilter);
                IF ESCompany.FIND('-') THEN BEGIN
                  REPEAT
                    ESSummaryResult.INIT;
                    ESSummaryResult.Type := SummaryResultType;
                    ESSummaryResult.Code := SummaryResultCode;
                    ESSummaryResult."Company Name" := ESCompany.Name;
                    ESSummaryResult."Summary Calculation Type" := ESSummaryCalculation.Type;
                    ESSummaryResult."Summary Calculation Code" := ESSummaryCalculation.Code;
                    ESSummaryResult.INSERT(TRUE);
                  UNTIL ESCompany.NEXT = 0;
                END;
              UNTIL ESSummaryCalculation.NEXT = 0;
            END;
          END;
        ESSummaryResult.Type::"Live Database Login",ESSummaryResult.Type::"Live Windows Login":
          BEGIN
            ESSummaryCalculation.RESET;
            ESSummaryCalculation.SETRANGE(Calculate,TRUE);
            IF ESSummaryCalculation.FIND('-') THEN
              REPEAT
                Company.RESET;
                Company.FIND('-');
                REPEAT
                  ESSummaryResult.INIT;
                  ESSummaryResult.Type := SummaryResultType;
                  ESSummaryResult.Code := SummaryResultCode;
                  ESSummaryResult."Company Name" := Company.Name;
                  ESSummaryResult."Summary Calculation Type" := ESSummaryCalculation.Type;
                  ESSummaryResult."Summary Calculation Code" := ESSummaryCalculation.Code;
                  ESSummaryResult.INSERT(TRUE);
                UNTIL Company.NEXT = 0;
            UNTIL ESSummaryCalculation.NEXT = 0;
          END;
      END;
    END;

    LOCAL PROCEDURE LessOrEqualPermissions@1240520022(ESSummaryPermission1@1240520008 : Record 14123537;ESSummaryPermission2@1240520010 : Record 14123537) : Boolean;
    BEGIN
      IF GreaterPermission(
               ESSummaryPermission1."Read Permission",ESSummaryPermission2."Read Permission")
      THEN
        EXIT(FALSE);

      IF GreaterPermission(
               ESSummaryPermission1."Insert Permission",ESSummaryPermission2."Insert Permission")
      THEN
        EXIT(FALSE);

      IF GreaterPermission(
               ESSummaryPermission1."Modify Permission",ESSummaryPermission2."Modify Permission")
      THEN
        EXIT(FALSE);

      IF GreaterPermission(
               ESSummaryPermission1."Delete Permission",ESSummaryPermission2."Delete Permission")
      THEN
        EXIT(FALSE);

      IF GreaterPermission(
               ESSummaryPermission1."Execute Permission",ESSummaryPermission2."Execute Permission")
      THEN
        EXIT(FALSE);

      IF FORMAT(ESSummaryPermission1."Security Filter") <>
         FORMAT(ESSummaryPermission2."Security Filter")
      THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE GreaterPermission@1240520024(Permission1@1240520011 : ' ,Yes,Indirect';Permission2@1240520009 : ' ,Yes,Indirect') : Boolean;
    BEGIN
      IF Permission1 = Permission2 THEN
        EXIT(FALSE);

      IF (Permission1 = Permission1::Yes) AND
         ((Permission2 = Permission2::" ") OR (Permission2 = Permission2::Indirect))
      THEN
        EXIT(TRUE);

      IF (Permission1 = Permission1::Indirect) AND (Permission2 = Permission2::" ") THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE TestSUPERUser@1240520016(RestPntCode@1240520011 : Code[20]);
    VAR
      ESSecuritySetup@1240520013 : Record 14123521;
      UserRole@1240520014 : Record 2000000004;
      ESRestPntRole@1240520015 : Record 14123515;
      WindowsLogin@1240520016 : Record 2000000120;
      WindowsAccessControl@1240520009 : Record 2000000053;
      ESRestPntWindowsAccCtrl@1240520010 : Record 14123514;
    BEGIN
      ESSecuritySetup.GET;
      ESSecuritySetup.TESTFIELD("SUPER Role ID");
      UserRole.GET(ESSecuritySetup."SUPER Role ID");
      IF RestPntCode <> '' THEN
        ESRestPntRole.GET(RestPntCode,ESSecuritySetup."SUPER Role ID");

      WindowsLogin.GET(USERSECURITYID);
      IF NOT WindowsAccessControl.GET(WindowsLogin."User Security ID",ESSecuritySetup."SUPER Role ID",'') THEN
        ERROR(Text057,WindowsLogin."User Name");
      IF RestPntCode <> '' THEN
        IF NOT ESRestPntWindowsAccCtrl.GET(
                 RestPntCode,WindowsLogin."User Security ID",ESSecuritySetup."SUPER Role ID",'')
        THEN
          ERROR(Text057 + ' ' + Text058,WindowsLogin."User Name");
    END;

    PROCEDURE PermissionFormatPermission@1240520017(Permission@1240520008 : Record 2000000005) : Text[30];
    VAR
      ESFormatPermssion@1240520009 : Codeunit 14123506;
    BEGIN
      EXIT(
        ESFormatPermssion.FormatPermissionString(
          Permission."Read Permission",Permission."Insert Permission",
          Permission."Modify Permission",Permission."Delete Permission",
          Permission."Execute Permission"));
    END;

    PROCEDURE LicensePermFormatPermission@1240520018(LicensePermission@1240520008 : Record 2000000043) : Text[30];
    VAR
      ESFormatPermssion@1240520009 : Codeunit 14123506;
    BEGIN
      EXIT(
        ESFormatPermssion.FormatPermissionString(
          LicensePermission."Read Permission",LicensePermission."Insert Permission",
          LicensePermission."Modify Permission",LicensePermission."Delete Permission",
          LicensePermission."Execute Permission"));
    END;

    PROCEDURE CorrectSession@1240520025();
    BEGIN
    END;

    PROCEDURE TestESMatchLive@1240520026(Logins@1240520013 : Boolean;LoginAccessControls@1240520027 : Boolean;WindowsLogins@1240520016 : Boolean;WindowsLoginAccCtrl@1240520028 : Boolean;Companies@1240520014 : Boolean;Objects@1240520015 : Boolean;RolePermissions@1240520021 : Boolean;RoleBuilderPermissions@1240520023 : Boolean;RecordingPermissions@1240520025 : Boolean;RoleGroups@1240520035 : Boolean;CompanyGroups@1240520036 : Boolean);
    VAR
      ESSecuritySetup@1240520001 : Record 14123521;
      WindowsLogin@1240520009 : Record 2000000120;
      ESLogin@1240520010 : Record 14123527;
      ESWindowsLogin@1240520012 : Record 14123503;
      ESLoginAccessControl@1240520029 : Record 14123528;
      ESRole@1240520031 : Record 14123505;
      ESRoleGroup@1240520030 : Record 14123525;
      ESCompanyGroup@1240520032 : Record 14123530;
      Company@1240520017 : Record 2000000006;
      ESCompany@1240520018 : Record 14123507;
      AllObjWithCaption@1240520019 : Record 2000000058;
      ESObjectInfo@1240520020 : Record 14123509;
      ESRolePerm@1240520022 : Record 14123506;
      ESRoleBuilderPerm@1240520024 : Record 14123655;
      ESRecordingPerm@1240520026 : Record 14123652;
      ESRoleGroupLine@1240520037 : Record 14123526;
      ESCompanyGroupLine@1240520038 : Record 14123531;
      Window@1240520039 : Dialog;
    BEGIN
      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text023) + Text005);

      IF Logins OR WindowsLogins THEN BEGIN
        IF GUIALLOWED THEN
          Window.UPDATE(1,WindowsLogin.TABLECAPTION);

        WindowsLogin.RESET;
        IF WindowsLogin.FIND('-') THEN BEGIN
          REPEAT
            IF Logins THEN BEGIN
              ESLogin.RESET;
              ESLogin.SETRANGE(Type,ESLogin.Type::Windows);
              ESLogin.SETRANGE("Login SID",WindowsLogin."User Security ID");
              IF NOT ESLogin.FIND('-') THEN BEGIN
                MESSAGE(Text035);
                ESLogin.FIND('-');
              END;
            END;

            IF WindowsLogins THEN
              IF NOT ESWindowsLogin.GET(WindowsLogin."User Security ID") THEN BEGIN
                MESSAGE(Text035);
                ESWindowsLogin.GET(WindowsLogin."User Security ID");
              END;
          UNTIL WindowsLogin.NEXT = 0;

          IF WindowsLogins THEN BEGIN
            WindowsLogin.FIND('-');
            ESWindowsLogin.FIND('-');
            REPEAT
              IF WindowsLogin."User Security ID" <> ESWindowsLogin.SID THEN
                ERROR(
                  Text035 + '\' + Text024,ESWindowsLogin.TABLECAPTION,
                  FORMAT(WindowsLogin."User Security ID") + ' ' + WindowsLogin."User Name",
                  FORMAT(ESWindowsLogin.SID) + ' ' + ESWindowsLogin.ID);
            UNTIL (WindowsLogin.NEXT = 0) OR (ESWindowsLogin.NEXT = 0);

            IF WindowsLogin."User Security ID" <> ESWindowsLogin.SID THEN
              ERROR(
                Text035 + '\' + Text024,ESWindowsLogin.TABLECAPTION,
                  FORMAT(WindowsLogin."User Security ID") + ' ' + FORMAT(WindowsLogin."User Security ID"),
                  FORMAT(ESWindowsLogin.SID) + ' ' + ESWindowsLogin.ID);
          END;
        END;
      END;

      IF LoginAccessControls THEN BEGIN
        IF GUIALLOWED THEN
          Window.UPDATE(1,ESLoginAccessControl.TABLECAPTION);

        ESLoginAccessControl.RESET;
        IF ESLoginAccessControl.FIND('-') THEN
          REPEAT
            IF ESLoginAccessControl."Role Type" = ESLoginAccessControl."Role Type"::Role THEN BEGIN
              IF NOT ESRole.GET(ESLoginAccessControl."Role ID") THEN
                ESLoginAccessControl.TESTFIELD("Role ID",'');
            END ELSE
              IF NOT ESRoleGroup.GET(ESLoginAccessControl."Role ID") THEN
                ESLoginAccessControl.TESTFIELD("Role ID",'');

            IF ESLoginAccessControl."Company Group ID" <> '' THEN
              IF NOT ESCompanyGroup.GET(ESLoginAccessControl."Company Group ID") THEN
                ESLoginAccessControl.TESTFIELD("Company Group ID",'');
          UNTIL ESLoginAccessControl.NEXT = 0;
      END;

      IF Companies THEN BEGIN
        IF GUIALLOWED THEN
          Window.UPDATE(1,ESCompany.TABLECAPTION);

        Company.RESET;
        Company.FIND('-');
        ESCompany.RESET;
        ESCompany.FIND('-');
        REPEAT
          IF Company.Name <> ESCompany.Name THEN
            ERROR(
              Text035 + '\' + Text024,ESCompany.TABLECAPTION,
              Company.Name,ESCompany.Name);
          UNTIL (Company.NEXT = 0) OR (ESCompany.NEXT = 0);

        IF Company.Name <> ESCompany.Name THEN
            ERROR(
            Text035 + '\' + Text024,ESCompany.TABLECAPTION,
            Company.Name,ESCompany.Name);
      END;

      IF Objects THEN BEGIN
        IF GUIALLOWED THEN
          Window.UPDATE(1,ESObjectInfo.TABLECAPTION);

        AllObjWithCaption.RESET;
        AllObjWithCaption.SETRANGE(
          "Object Type",AllObjWithCaption."Object Type"::Table,AllObjWithCaption."Object Type"::Query);
        AllObjWithCaption.SETRANGE("Object ID",1,2000000000);
        AllObjWithCaption.FIND('-');
        ESObjectInfo.RESET;
        ESObjectInfo.SETRANGE(
          "Object Type",ESObjectInfo."Object Type"::Table,ESObjectInfo."Object Type"::Query);
        ESObjectInfo.SETRANGE("Object ID",1,2000000000);
        ESObjectInfo.FIND('-');
        REPEAT
          IF (AllObjWithCaption."Object Type" <> ESObjectInfo."Object Type") OR
             (AllObjWithCaption."Object ID" <> ESObjectInfo."Object ID")
          THEN
            ERROR(
              Text035 + '\' + Text025,ESObjectInfo.TABLECAPTION,
              AllObjWithCaption."Object Type",AllObjWithCaption."Object ID",
              ESObjectInfo."Object Type",ESObjectInfo."Object ID");
        UNTIL (AllObjWithCaption.NEXT = 0) OR (ESObjectInfo.NEXT = 0);

        IF (AllObjWithCaption."Object Type" <> ESObjectInfo."Object Type") OR
           (AllObjWithCaption."Object ID" <> ESObjectInfo."Object ID")
        THEN
          ERROR(
            Text035 + '\' + Text025,ESObjectInfo.TABLECAPTION,
            AllObjWithCaption."Object Type",AllObjWithCaption."Object ID",
            ESObjectInfo."Object Type",ESObjectInfo."Object ID");
      END;

      IF RolePermissions THEN BEGIN
        IF GUIALLOWED THEN
          Window.UPDATE(1,ESRolePerm.TABLECAPTION);

        ESRolePerm.RESET;
        ESRolePerm.SETRANGE(
          "Object Type",ESRolePerm."Object Type"::Table,ESRolePerm."Object Type"::Query);
        ESRolePerm.SETRANGE("Object ID",1,2000000000);
        ESRolePerm.SETFILTER("Object Caption",'%1','');
        IF ESRolePerm.FIND('-') THEN
          REPEAT
            IF NOT ESObjectInfo.GET(ESRolePerm."Object Type",ESRolePerm."Object ID") THEN
              ESRolePerm.FIELDERROR("Object ID",Text026);
          UNTIL ESRolePerm.NEXT = 0;
      END;

      IF RoleBuilderPermissions THEN BEGIN
        IF GUIALLOWED THEN
          Window.UPDATE(1,ESRoleBuilderPerm.TABLECAPTION);

        // No testing Required
      END;

      IF RecordingPermissions THEN BEGIN
        IF GUIALLOWED THEN
          Window.UPDATE(1,ESRecordingPerm.TABLECAPTION);

        // No testing Required
      END;

      IF RoleGroups THEN BEGIN
        IF GUIALLOWED THEN
          Window.UPDATE(1,ESRoleGroupLine.TABLECAPTION);

        ESRoleGroupLine.RESET;
        IF ESRoleGroupLine.FIND('-') THEN
          REPEAT
            IF ESRoleGroupLine."Role Type" = ESRoleGroupLine."Role Type"::Role THEN BEGIN
              IF NOT ESRole.GET(ESRoleGroupLine."Role ID") THEN
                ESRoleGroupLine.TESTFIELD("Role ID",'');
            END ELSE
              IF NOT ESRoleGroup.GET(ESRoleGroupLine."Role ID") THEN
                ESRoleGroupLine.TESTFIELD("Role ID",'');
          UNTIL ESRoleGroupLine.NEXT = 0;
      END;

      IF CompanyGroups THEN BEGIN
        IF GUIALLOWED THEN
          Window.UPDATE(1,ESCompanyGroup.TABLECAPTION);

        ESCompanyGroup.RESET;
        IF ESCompanyGroup.FIND('-') THEN
          REPEAT
            ESCompanyGroupLine.RESET;
            ESCompanyGroupLine.SETRANGE("Company Group ID",ESCompanyGroup."Group ID");
            ESCompanyGroupLine.FIND('-');
          UNTIL ESCompanyGroup.NEXT = 0;

        IF GUIALLOWED THEN
          Window.UPDATE(1,ESCompanyGroupLine.TABLECAPTION);

        ESCompanyGroupLine.RESET;
        IF ESCompanyGroupLine.FIND('-') THEN
          REPEAT
            IF NOT ESCompany.GET(ESCompanyGroupLine."Company Name") THEN
              ESCompanyGroupLine.TESTFIELD("Company Name",'');
          UNTIL ESCompanyGroupLine.NEXT = 0;
      END;

      IF GUIALLOWED THEN
        Window.CLOSE;
    END;

    PROCEDURE DeleteAdditionalRestorePoints@1240520001(NoOfRestorePointsToKeep@1240520002 : Integer;ShowStatus@1240520001 : Boolean);
    VAR
      ESSecuritySetup@1240520006 : Record 14123521;
      ESRestorePoint@1240520003 : Record 14123523;
      ESRestorePoint2@1240520004 : Record 14123523;
      DetetedRestorePoints@1240520005 : Integer;
      Window@1240520007 : Dialog;
    BEGIN
      ESSecuritySetup.GET;
      ESSecuritySetup.TestPublishCompany;

      IF NoOfRestorePointsToKeep <= 0 THEN
        EXIT;

      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text066) + '\' + Text005);

      ESRestorePoint.RESET;
      ESRestorePoint.SETCURRENTKEY("Created Date Time");
      ESRestorePoint.SETRANGE(Locked,FALSE);
      IF ESRestorePoint.FIND('+') THEN
        IF ESRestorePoint.NEXT(-NoOfRestorePointsToKeep) = -NoOfRestorePointsToKeep THEN BEGIN
          REPEAT
            DetetedRestorePoints := DetetedRestorePoints + 1;

            IF GUIALLOWED THEN
              Window.UPDATE(1,STRSUBSTNO('%1 %2',ESRestorePoint.TABLECAPTION,ESRestorePoint.Code));

            ESRestorePoint2 := ESRestorePoint;
            ESRestorePoint2.DELETE(TRUE);
          UNTIL (ESRestorePoint.NEXT(-1) = 0) OR (DetetedRestorePoints >= 10);
        END;

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text067,DetetedRestorePoints);
      ESSecuritySetup.Comment(1,STRSUBSTNO(Text067,DetetedRestorePoints));
    END;

    PROCEDURE UpdateSummaryPermissions@1240520033(LoginSummary@1240520011 : Boolean;WindowsGroupSummary@1240520010 : Boolean;RoleSummary@1240520009 : Boolean;RoleGroupSummary@1240520008 : Boolean;RecordingSummary@1240520013 : Boolean;LiveDatabaseLoginSummary@1240520001 : Boolean;LiveWindowsLoginSummary@1240520002 : Boolean;LiveRoleSummary@1240520003 : Boolean;ShowStatus@1240520012 : Boolean);
    VAR
      ESRoleBuilderMgt@1240520014 : Codeunit 14123651;
    BEGIN
      IF LoginSummary THEN
        UpdateAllLogins(FALSE,TRUE,FALSE,ShowStatus);

      IF WindowsGroupSummary THEN
        UpdateAllLogins(FALSE,FALSE,TRUE,ShowStatus);

      IF RoleSummary THEN
        UpdateAllRoleSummaryPerm(TRUE,ShowStatus);

      IF RoleGroupSummary THEN
        UpdateAllRoleGroupSummaryPerm(TRUE,ShowStatus);

      IF RecordingSummary THEN
        ESRoleBuilderMgt.UpdateAllRecordingSummaryPerm(TRUE,ShowStatus);

      IF LiveDatabaseLoginSummary THEN
        UpdateAllLiveDatabLoginSummary(TRUE,ShowStatus);

      IF LiveWindowsLoginSummary THEN
        UpdateAllLiveWindLoginSummary(TRUE,ShowStatus);

      IF LiveRoleSummary THEN
        UpdateAllLiveRoleSummary(TRUE,ShowStatus);
    END;

    PROCEDURE UpdateNoPermsFromExpiryDate@1240520036(LoginType@1240520002 : Integer;LoginUserID@1240520003 : Code[50];CalculationDate@1240520011 : Date;AddComment@1240520004 : Boolean;ShowStatus@1240520008 : Boolean) : Integer;
    VAR
      ESLogin@1240520009 : Record 14123527;
      ESLogin2@1240520013 : Record 14123527;
      ESLoginAccessControl@1240520010 : Record 14123528;
      ESLoginAccessControl2@1240520014 : Record 14123528;
      ESSecuritySetup@1240520001 : Record 14123521;
      LoginModifiedRecords@1240520012 : Integer;
      LoginAccessContModifiedRecords@1240520015 : Integer;
      Window@1240520016 : Dialog;
    BEGIN
      ESSecuritySetup.GET;
      ESSecuritySetup.TestPublishCompany;

      IF GUIALLOWED AND (LoginUserID = '') THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text044) + Text005);

      IF GUIALLOWED AND (LoginUserID = '') THEN
        Window.UPDATE(1,ESLogin.TABLECAPTION);
      ESLogin.RESET;
      ESLogin.SETCURRENTKEY("Expiry Date");
      IF LoginUserID <> '' THEN BEGIN
        ESLogin.SETRANGE(Type,LoginType);
        ESLogin.SETRANGE("User ID",LoginUserID);
      END;
      ESLogin.SETRANGE("No Permissions",FALSE);
      ESLogin.SETRANGE("Expiry Date",010101D,CALCDATE('<-1D>',CalculationDate));
      IF ESLogin.FIND('-') THEN
        REPEAT
          ESLogin2 := ESLogin;
          ESLogin2.VALIDATE("No Permissions",TRUE);
          ESLogin2.MODIFY(TRUE);

          LoginModifiedRecords := LoginModifiedRecords + 1;
        UNTIL ESLogin.NEXT = 0;

      IF GUIALLOWED AND (LoginUserID = '') THEN
        Window.UPDATE(1,ESLoginAccessControl.TABLECAPTION);
      ESLoginAccessControl.RESET;
      ESLoginAccessControl.SETCURRENTKEY("Expiry Date");
      IF LoginUserID <> '' THEN BEGIN
        ESLoginAccessControl.SETRANGE("Login Type",LoginType);
        ESLoginAccessControl.SETRANGE("Login User ID",LoginUserID);
      END;
      ESLoginAccessControl.SETRANGE("No Permissions",FALSE);
      ESLoginAccessControl.SETRANGE("Expiry Date",010101D,CALCDATE('<-1D>',CalculationDate));
      IF ESLoginAccessControl.FIND('-') THEN
        REPEAT
          ESLoginAccessControl2 := ESLoginAccessControl;
          ESLoginAccessControl2.VALIDATE("No Permissions",TRUE);
          ESLoginAccessControl2.MODIFY(TRUE);

          LoginAccessContModifiedRecords := LoginAccessContModifiedRecords + 1;
        UNTIL ESLoginAccessControl.NEXT = 0;

      IF ShowStatus THEN
        IF (LoginModifiedRecords = 0) AND (LoginAccessContModifiedRecords = 0) THEN
          MESSAGE(Text045,CalculationDate)
        ELSE
          MESSAGE(Text046,LoginModifiedRecords,LoginAccessContModifiedRecords,CalculationDate);
      IF AddComment THEN
        IF (LoginModifiedRecords = 0) AND (LoginAccessContModifiedRecords = 0) THEN
          ESSecuritySetup.Comment(1,STRSUBSTNO(Text045,CalculationDate))
        ELSE
          ESSecuritySetup.Comment(
            1,STRSUBSTNO(Text046,LoginModifiedRecords,LoginAccessContModifiedRecords,CalculationDate));

      IF GUIALLOWED AND (LoginUserID = '') THEN
        Window.CLOSE;

      EXIT(LoginModifiedRecords + LoginAccessContModifiedRecords);
    END;

    PROCEDURE ExportLicenseObjectToText@1240520037(FileName@1240520009 : Text[250];SkipSecuritySetup@1240520001 : Boolean;SetDBMTableNo@1240520004 : Boolean;OnlyLicensedObjects@1240520005 : Boolean;ShowStatus@1240520012 : Boolean);
    VAR
      LicensePerm@1240520003 : Record 2000000043;
      ESObjectExplorer@1240520002 : Record 14123901;
    BEGIN
      LicensePerm.GET(LicensePerm."Object Type"::System,1340);
      LicensePerm.TESTFIELD("Execute Permission",LicensePerm."Execute Permission"::Yes);

      ESObjectExplorer.ExportNeededObjects(
        FileName,SkipSecuritySetup,TRUE,FALSE,FALSE,FALSE,FALSE,
        ShowStatus,SetDBMTableNo,OnlyLicensedObjects,0);
    END;

    BEGIN
    END.
  }
}

