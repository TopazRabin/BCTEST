OBJECT Codeunit 50004 Run Month End Rep. via Job Q.
{
  OBJECT-PROPERTIES
  {
    Date=11/04/20;
    Time=[ 5:02:12 AM];
    Modified=Yes;
    Version List=TPZ000.00.00;
  }
  PROPERTIES
  {
    TableNo=472;
    OnRun=BEGIN
            CASE "Parameter String" OF
              'Reconcile AP to GL':
                ReconcileAPtoGL;
              'Aged Accounts Payable':
                AgedAccountsReceivable;
              'Aged Accounts Receivable':
                AgedAccountsReceivable;
              'Inventory Valuation':
                InventoryValuation
            END;
          END;

  }
  CODE
  {
    VAR
      Text50000@1000000004 : TextConst 'ENU=ReconcileAPtoGL%1%2.pdf';
      Text50001@1000000005 : TextConst 'ENU=AgedAccountsReceivableDueDate%1%2.pdf';
      Text50002@1000000006 : TextConst 'ENU=AgedAccountsPayableDueDate%1%2.pdf';
      Text50003@1000000007 : TextConst 'ENU=DBTradeData%1%2.pdf';
      Text50004@1000000008 : TextConst 'ENU=InventoryValuation%1.pdf';
      Text50005@1000000000 : TextConst 'ENU=AgedAccountsReceivableDocDate%1%2.pdf';
      Text50006@1000000001 : TextConst 'ENU=AgedAccountsPayableDocDate65%1%2.pdf';
      Text50007@1000000002 : TextConst 'ENU=%1%2%3.pdf';

    PROCEDURE ReconcileAPtoGL@1000000000();
    VAR
      ReconcileAPtoGL@1000000002 : Report 10101;
      PostingMethod@1000000001 : 'per Posting Group,per Entry';
      FileName@1000000000 : Text[250];
    BEGIN
      FileName := GetFileName(Text50000);

      CLEAR(ReconcileAPtoGL);
      ReconcileAPtoGL.SAVEASPDF(FileName);
    END;

    PROCEDURE AgedAccountsReceivable@1000000001();
    VAR
      AgedAR@1000000001 : Report 10040;
      FileName@1000000000 : Text[250];
      AgingMethod@1000000003 : 'Trans Date,Due Date,Document Date';
      PeriodCalculation@1000000002 : DateFormula;
    BEGIN
      // <TPZ1074>
      EVALUATE(PeriodCalculation,'30D');

      FileName := GetFileName(Text50001);
      AgingMethod := AgingMethod::"Due Date";
      CLEAR(AgedAR);
      //AgedAR.InitializeRequest(FindMonthEndDate,AgingMethod,PeriodCalculation,FALSE);
      AgedAR.SAVEASPDF(FileName);

      FileName := GetFileName(Text50005);
      AgingMethod := AgingMethod::"Document Date";
      CLEAR(AgedAR);
      //AgedAR.InitializeRequest(FindMonthEndDate,AgingMethod,PeriodCalculation,FALSE);
      AgedAR.SAVEASPDF(FileName);
      // </TPZ1074>
    END;

    PROCEDURE AgedAccountsPayable@1000000002();
    VAR
      AgedAP@1000000004 : Report 10085;
      FileName@1000000003 : Text[250];
      AgingMethod@1000000002 : 'Trans Date,Due Date,Document Date';
      PeriodCalculation@1000000001 : DateFormula;
    BEGIN
      // <TPZ1075>
      EVALUATE(PeriodCalculation,'30D');

      FileName := GetFileName(Text50002);
      AgingMethod := AgingMethod::"Due Date";
      CLEAR(AgedAP);
      AgedAP.InitializeRequest(FindMonthEndDate,AgingMethod,PeriodCalculation,FALSE);
      AgedAP.SAVEASPDF(FileName);

      FileName := GetFileName(Text50006);
      AgingMethod := AgingMethod::"Document Date";
      CLEAR(AgedAP);
      AgedAP.InitializeRequest(FindMonthEndDate,AgingMethod,PeriodCalculation,FALSE);
      AgedAP.SAVEASPDF(FileName);
      // </TPZ1075>
    END;

    PROCEDURE InventoryValuation@1000000004();
    VAR
      Division@1000000001 : Record 51001;
      InvValuation@1000000002 : Report 10139;
      FileName@1000000000 : Text[250];
    BEGIN
      // <TPZ1072>
      Division.RESET;
      REPEAT
        FileName := GetFileName(STRSUBSTNO(Text50007,STRSUBSTNO(Text50004,Division.Code)));

        CLEAR(InvValuation);
        InvValuation.InitializeRequest(FindMonthEndDate,TRUE,Division.Code);
        InvValuation.SAVEASPDF(FileName);
      UNTIL Division.NEXT = 0;
      // </TPZ1072>
    END;

    PROCEDURE GetFileName@1000000006(TextConstant@1000000000 : Text[50]) : Text[250];
    VAR
      GLSetup@1000000002 : Record 98;
      FileName@1000000001 : Text[250];
    BEGIN
      GLSetup.GET;
      GLSetup.TESTFIELD("Post Inv. Cost to G/L Dir.");

      IF NOT(COPYSTR(GLSetup."Post Inv. Cost to G/L Dir.",STRLEN(GLSetup."Post Inv. Cost to G/L Dir."),1) = '/') THEN
        GLSetup."Post Inv. Cost to G/L Dir." := GLSetup."Post Inv. Cost to G/L Dir." + '/';

      FileName :=
        GLSetup."Post Inv. Cost to G/L Dir." +
        '/' +
        STRSUBSTNO(TextConstant,DELCHR(FORMAT(TODAY),'=','/'),DELCHR(DELCHR(FORMAT(TIME)),'=',':'),'<');

      EXIT(FileName);
    END;

    PROCEDURE FindMonthEndDate@1000000005() : Date;
    BEGIN
      // <TPZ1074>
      EXIT(CALCDATE('<CM+1D-1M-1D>',TODAY));
      // <TPZ1074>
    END;

    BEGIN
    {
      2015-10-15 TPZ1076 TAKHMETO
        Codeunit has been created
      2015-10-16 TPZ1074 TAKHMETO
        Handling of Aged Accounts Receivable report has been added
      2015-10-16 TPZ1075 TAKHMETO
        Handling of Aged Accounts Payable report has been added
      2015-10-16 TPZ1072 TAKHMETO
        Handling of Inventory Valuation report has been added
    }
    END.
  }
}

