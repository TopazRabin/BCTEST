OBJECT Codeunit 2129 O365 Export Invoices + Email
{
  OBJECT-PROPERTIES
  {
    Date=11/22/17;
    Time=12:00:00 PM;
    Version List=NAVW111.00,NAVNA11.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      SalesInvoiceHeader@1022 : Record 112;
      SalesInvoiceLine@1021 : Record 113;
      TempExcelBuffer@1001 : TEMPORARY Record 370;
      NoInvoicesExportedErr@1005 : TextConst 'ENU=There were no invoices to export.;ESM=No hay facturas para exportar.;FRC=Il n''y a pas de factures … exporter.;ENC=There were no invoices to export.';
      InvoicesExportedMsg@1004 : TextConst 'ENU=Your exported invoices have been sent.;ESM=Se han enviado sus facturas exportadas.;FRC=Vos factures export‚es ont ‚t‚ envoy‚es.;ENC=Your exported invoices have been sent.';
      AttachmentNameTxt@1002 : TextConst 'ENU=Invoices.xlsx;ESM=Facturas.xlsx;FRC=Factures.xlsx;ENC=Invoices.xlsx';
      ExportInvoicesEmailSubjectTxt@1007 : TextConst '@@@="%1 = Start Date, %2 =End Date";ENU=Please find the invoices summary and price details from %1 date until %2 date in the attached Excel book.;ESM=Busque el resumen de facturas y los detalles del precio desde la fecha %1 hasta la fecha %2 en el libro de Excel adjunto.;FRC=Recherchez le r‚capitulatif des factures et le d‚tail des prix du %1 au %2 dans le classeur Excel joint.;ENC=Please find the invoices summary and price details from %1 date until %2 date in the attached Excel book.';
      InvoiceNoFieldTxt@1003 : TextConst 'ENU=Invoice No.;ESM=N§ de factura;FRC=Nø facture;ENC=Invoice No.';
      CustomerNameFieldTxt@1006 : TextConst 'ENU=Customer Name;ESM=Nombre del cliente;FRC=Nom du client;ENC=Customer Name';
      AddressFieldTxt@1008 : TextConst 'ENU=Address;ESM=Direcci¢n;FRC=Adresse;ENC=Address';
      CityFieldTxt@1009 : TextConst 'ENU=City;ESM=Municipio/Ciudad;FRC=Ville;ENC=City';
      CountyFieldTxt@1010 : TextConst 'ENU=State;ESM=Provincia;FRC=Comt‚;ENC=Province/State';
      CountryRegionCodeFieldTxt@1011 : TextConst 'ENU=Country/Region Code;ESM=C¢digo de pa¡s/regi¢n;FRC=Code pays/r‚gion;ENC=Country/Region Code';
      InvoiceDateFieldTxt@1012 : TextConst 'ENU=Invoice Date;ESM=Fecha de la factura;FRC=Date facture;ENC=Invoice Date';
      NetTotalFieldTxt@1013 : TextConst 'ENU=Net Total;ESM=Neto total;FRC=Total net;ENC=Net Total';
      TotalIncludingVatFieldTxt@1014 : TextConst 'ENU=Total Including Tax;ESM=Total con IVA;FRC=Total TTC;ENC=Total Including Tax';
      VatPercentFieldTxt@1015 : TextConst '@@@=The heading used when exporting the invoice lines;ENU=Tax %;ESM=Porcentaje IVA;FRC=% TVA;ENC=Tax %';
      InvoicesSummaryHeaderTxt@1016 : TextConst 'ENU=Invoices Summary;ESM=Resumen de las facturas;FRC=R‚capitulatif des factures;ENC=Invoices Summary';
      ItemsHeaderTxt@1017 : TextConst 'ENU=Prices;ESM=Precios;FRC=Prix;ENC=Prices';
      InvoicesSheetNameTxt@1018 : TextConst 'ENU=Invoices;ESM=Facturas;FRC=Factures;ENC=Invoices';
      CompanyInformation@1020003 : Record 79;
      CellBold@1000 : Boolean;
      RowNo@1019 : Integer;
      LineRowNo@1020 : Integer;
      GSTAmountTxt@1020000 : TextConst 'ENU=GST Amount;ESM=Importe GST;FRC=Montant GST;ENC=GST Amount';
      PSTAmountTxt@1020001 : TextConst 'ENU=PST Amount;ESM=Importe PST;FRC=Montant PST;ENC=PST Amount';
      HSTAmountTxt@1020002 : TextConst 'ENU=HST Amount;ESM=Importe HST;FRC=Montant HST;ENC=HST Amount';

    [Internal]
    PROCEDURE ExportInvoicesToExcelandEmail@2(StartDate@1000 : Date;EndDate@1002 : Date;Email@1012 : Text[80]);
    VAR
      TempEmailItem@1011 : TEMPORARY Record 9500;
      EmailSuccess@1001 : Boolean;
      ServerFileName@1005 : Text;
    BEGIN
      TempExcelBuffer.RESET;
      TempExcelBuffer.DELETEALL;
      ServerFileName := ExportInvoicesToExcel(StartDate,EndDate);

      TempExcelBuffer.CreateBook(ServerFileName,InvoicesSheetNameTxt);
      TempExcelBuffer.WriteSheet(InvoicesSheetNameTxt,COMPANYNAME,USERID);
      TempExcelBuffer.CloseBook;

      CODEUNIT.RUN(CODEUNIT::"O365 Setup Email");

      WITH TempEmailItem DO BEGIN
        VALIDATE("Send to",Email);
        VALIDATE(Subject,STRSUBSTNO(ExportInvoicesEmailSubjectTxt,StartDate,EndDate));
        "Attachment File Path" := COPYSTR(ServerFileName,1,250);
        VALIDATE("Attachment Name",AttachmentNameTxt);
        EmailSuccess := Send(TRUE);
      END;

      IF EmailSuccess THEN
        MESSAGE(InvoicesExportedMsg);
    END;

    PROCEDURE ExportInvoicesToExcel@1030001(StartDate@1030001 : Date;EndDate@1030000 : Date) ServerFileName : Text;
    VAR
      FileManagement@1030002 : Codeunit 419;
    BEGIN
      TempExcelBuffer.RESET;
      TempExcelBuffer.DELETEALL;
      SalesInvoiceHeader.SETRANGE("Document Date",StartDate,EndDate);

      IF NOT SalesInvoiceHeader.FINDSET THEN
        ERROR(NoInvoicesExportedErr);

      TempExcelBuffer.RESET;
      InsertHeaderTextForSalesInvoices;
      InsertHeaderTextForSalesLines;
      InsertSalesInvoices;

      ServerFileName := FileManagement.ServerTempFileName('xlsx');
      TempExcelBuffer.CreateBook(ServerFileName,InvoicesSheetNameTxt);
      TempExcelBuffer.WriteSheet(InvoicesSheetNameTxt,COMPANYNAME,USERID);
      TempExcelBuffer.CloseBook;
    END;

    LOCAL PROCEDURE EnterCell@3(RowNo@1000 : Integer;ColumnNo@1001 : Integer;CellValue@1002 : Variant);
    BEGIN
      TempExcelBuffer.INIT;
      TempExcelBuffer.VALIDATE("Row No.",RowNo);
      TempExcelBuffer.VALIDATE("Column No.",ColumnNo);

      IF CellValue.ISDECIMAL OR CellValue.ISINTEGER THEN
        TempExcelBuffer.VALIDATE("Cell Type",TempExcelBuffer."Cell Type"::Number)
      ELSE
        IF CellValue.ISDATE THEN
          TempExcelBuffer.VALIDATE("Cell Type",TempExcelBuffer."Cell Type"::Date)
        ELSE
          TempExcelBuffer."Cell Value as Text" := COPYSTR(FORMAT(CellValue),1,MAXSTRLEN(TempExcelBuffer."Cell Value as Text" ));

      TempExcelBuffer."Cell Value as Text" := FORMAT(CellValue);
      TempExcelBuffer.Bold := CellBold;
      TempExcelBuffer.INSERT(TRUE);
    END;

    LOCAL PROCEDURE InsertSalesInvoiceSummary@8();
    VAR
      TempSalesTaxAmountLine@1020000 : TEMPORARY Record 10011;
    BEGIN
      EnterCell(RowNo,1,SalesInvoiceHeader."No.");
      EnterCell(RowNo,2,SalesInvoiceHeader."Sell-to Customer Name");
      EnterCell(RowNo,3,SalesInvoiceHeader."Sell-to Address");
      EnterCell(RowNo,4,SalesInvoiceHeader."Sell-to City");
      EnterCell(RowNo,5,SalesInvoiceHeader."Sell-to County");
      EnterCell(RowNo,6,SalesInvoiceHeader."Sell-to Country/Region Code");
      EnterCell(RowNo,7,SalesInvoiceHeader."Document Date");
      EnterCell(RowNo,8,SalesInvoiceHeader."Due Date");
      EnterCell(RowNo,9,SalesInvoiceHeader."Tax Liable");
      EnterCell(RowNo,10,SalesInvoiceHeader.GetWorkDescription);
      EnterCell(RowNo,11,SalesInvoiceHeader.Amount);
      EnterCell(RowNo,12,SalesInvoiceHeader."Amount Including VAT");
      EnterCell(RowNo,13,SalesInvoiceHeader."Invoice Discount Amount");

      IF CompanyInformation.IsCanada THEN BEGIN
        GetTaxSummarizedLines(TempSalesTaxAmountLine);
        IF TempSalesTaxAmountLine.FINDSET THEN
          REPEAT
            CASE TempSalesTaxAmountLine."Print Description" OF
              'GST':
                EnterCell(RowNo,14,TempSalesTaxAmountLine."Tax Amount");
              'PST','QST':
                EnterCell(RowNo,15,TempSalesTaxAmountLine."Tax Amount");
              'HST':
                EnterCell(RowNo,16,TempSalesTaxAmountLine."Tax Amount");
            END;
          UNTIL TempSalesTaxAmountLine.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE InsertSalesLineItem@9();
    BEGIN
      EnterCell(LineRowNo,1,SalesInvoiceLine."Document No.");
      EnterCell(LineRowNo,2,SalesInvoiceHeader."Sell-to Customer Name");
      EnterCell(LineRowNo,3,SalesInvoiceLine.Description);
      EnterCell(LineRowNo,4,SalesInvoiceLine.Quantity);
      EnterCell(LineRowNo,5,SalesInvoiceLine."Unit of Measure");
      EnterCell(LineRowNo,6,SalesInvoiceLine."Unit Price");
      EnterCell(LineRowNo,7,SalesInvoiceLine."Tax Group Code");
      EnterCell(LineRowNo,8,SalesInvoiceLine."VAT %");
      EnterCell(LineRowNo,9,SalesInvoiceLine.Amount);
      EnterCell(LineRowNo,10,SalesInvoiceLine."Amount Including VAT");
      EnterCell(LineRowNo,11,SalesInvoiceLine."Line Discount Amount");
    END;

    LOCAL PROCEDURE InsertHeaderTextForSalesInvoices@11();
    BEGIN
      CellBold := TRUE;
      RowNo := 1;
      EnterCell(RowNo,1,InvoicesSummaryHeaderTxt);

      RowNo := RowNo + 1;
      EnterCell(RowNo,1,InvoiceNoFieldTxt);
      EnterCell(RowNo,2,CustomerNameFieldTxt);
      EnterCell(RowNo,3,AddressFieldTxt);
      EnterCell(RowNo,4,CityFieldTxt);
      EnterCell(RowNo,5,CountyFieldTxt);
      EnterCell(RowNo,6,CountryRegionCodeFieldTxt);
      EnterCell(RowNo,7,InvoiceDateFieldTxt);
      EnterCell(RowNo,8,SalesInvoiceHeader.FIELDCAPTION("Due Date"));
      EnterCell(RowNo,9,SalesInvoiceHeader.FIELDCAPTION("Tax Liable"));
      EnterCell(RowNo,10,SalesInvoiceHeader.FIELDCAPTION("Work Description"));
      EnterCell(RowNo,11,NetTotalFieldTxt);
      EnterCell(RowNo,12,TotalIncludingVatFieldTxt);
      EnterCell(RowNo,13,SalesInvoiceHeader.FIELDCAPTION("Invoice Discount Amount"));
      IF CompanyInformation.IsCanada THEN BEGIN
        EnterCell(RowNo,14,GSTAmountTxt);
        EnterCell(RowNo,15,PSTAmountTxt);
        EnterCell(RowNo,16,HSTAmountTxt);
      END;
      CellBold := FALSE;
    END;

    LOCAL PROCEDURE InsertHeaderTextForSalesLines@12();
    VAR
      NumberOfEmptyLines@1000 : Integer;
    BEGIN
      CellBold := TRUE;
      NumberOfEmptyLines := 5;
      LineRowNo := SalesInvoiceHeader.COUNT + NumberOfEmptyLines;
      EnterCell(LineRowNo,1,ItemsHeaderTxt);

      LineRowNo := LineRowNo + 1;
      EnterCell(LineRowNo,1,InvoiceNoFieldTxt);
      EnterCell(LineRowNo,2,CustomerNameFieldTxt);
      EnterCell(LineRowNo,3,SalesInvoiceLine.FIELDCAPTION(Description));
      EnterCell(LineRowNo,4,SalesInvoiceLine.FIELDCAPTION(Quantity));
      EnterCell(LineRowNo,5,SalesInvoiceLine.FIELDCAPTION("Unit of Measure"));
      EnterCell(LineRowNo,6,SalesInvoiceLine.FIELDCAPTION("Unit Price"));
      EnterCell(LineRowNo,7,SalesInvoiceLine.FIELDCAPTION("Tax Group Code"));
      EnterCell(LineRowNo,8,VatPercentFieldTxt);
      EnterCell(LineRowNo,9,SalesInvoiceLine.FIELDCAPTION(Amount));
      EnterCell(LineRowNo,10,SalesInvoiceLine.FIELDCAPTION("Amount Including VAT"));
      EnterCell(LineRowNo,11,SalesInvoiceLine.FIELDCAPTION("Line Discount Amount"));
      CellBold := FALSE;
    END;

    LOCAL PROCEDURE InsertSalesInvoices@16();
    BEGIN
      IF SalesInvoiceHeader.FINDSET THEN BEGIN
        REPEAT
          RowNo := RowNo + 1;
          SalesInvoiceHeader.CALCFIELDS(Amount,"Amount Including VAT","Work Description","Invoice Discount Amount");
          InsertSalesInvoiceSummary;
          SalesInvoiceLine.SETRANGE("Document No.",SalesInvoiceHeader."No.");
          IF SalesInvoiceLine.FINDSET THEN BEGIN
            REPEAT
              LineRowNo := LineRowNo + 1;
              InsertSalesLineItem;
            UNTIL SalesInvoiceLine.NEXT = 0;
          END;
        UNTIL SalesInvoiceHeader.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE GetTaxSummarizedLines@1030000(VAR TempSalesTaxAmountLine@1030001 : TEMPORARY Record 10011);
    VAR
      TaxArea@1030003 : Record 318;
      SalesTaxCalculate@1030000 : Codeunit 398;
    BEGIN
      IF NOT TaxArea.GET(SalesInvoiceHeader."Tax Area Code") THEN
        EXIT;
      SalesTaxCalculate.StartSalesTaxCalculation;
      IF TaxArea."Use External Tax Engine" THEN
        SalesTaxCalculate.CallExternalTaxEngineForDoc(DATABASE::"Sales Invoice Header",0,SalesInvoiceHeader."No.")
      ELSE BEGIN
        SalesTaxCalculate.AddSalesInvoiceLines(SalesInvoiceHeader."No.");
        SalesTaxCalculate.EndSalesTaxCalculation(SalesInvoiceHeader."Posting Date");
      END;
      TempSalesTaxAmountLine.DELETEALL;
      SalesTaxCalculate.GetSalesTaxAmountLineTable(TempSalesTaxAmountLine);
      SalesTaxCalculate.GetSummarizedSalesTaxTable(TempSalesTaxAmountLine);
    END;

    BEGIN
    END.
  }
}

