OBJECT Codeunit 11123323 SC - Cache Management
{
  OBJECT-PROPERTIES
  {
    Date=04/18/17;
    Time=[ 1:00:00 PM];
    Version List=SCW19.2.0;
  }
  PROPERTIES
  {
    SingleInstance=Yes;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Context@11123304 : Codeunit 11123305;
      TempGlobalRecRefArray@11123302 : ARRAY [50] OF RecordRef;
      GlobalRecRefArray@11123303 : ARRAY [100] OF RecordRef;
      SetupRead@11123305 : Boolean;
      NoCachedRecords@11123306 : Integer;

    PROCEDURE ClearCache@11123302();
    VAR
      I@11123302 : Integer;
    BEGIN
      FOR I := 1 TO ARRAYLEN(TempGlobalRecRefArray) DO
        TempGlobalRecRefArray[I].CLOSE;

      FOR I := 1 TO ARRAYLEN(GlobalRecRefArray) DO
        GlobalRecRefArray[I].CLOSE;
    END;

    PROCEDURE GetRec@11123303(VAR RecRef@11123303 : RecordRef;CauseError@11123306 : Boolean) : Boolean;
    VAR
      RecRef2@11123304 : RecordRef;
      Index@11123302 : Integer;
      Exists@11123305 : Boolean;
    BEGIN
      Exists := FindTempRecRef(RecRef,Index);
      IF Exists THEN
        Exists := TempGlobalRecRefArray[Index].GET(RecRef.RECORDID)
      ELSE
        OpenTempRecRef(RecRef,Index);

      IF Exists THEN
        CopyByFields(TempGlobalRecRefArray[Index],RecRef)
      ELSE BEGIN
        RecRef2.OPEN(GetRecNo(RecRef));
        IF CauseError THEN BEGIN
          RecRef2.GET(RecRef.RECORDID);
          Exists := TRUE;
        END ELSE
          Exists := RecRef2.GET(RecRef.RECORDID);

        IF Exists THEN BEGIN
          CopyByFields(RecRef2,RecRef);

          IF InsertAllowed THEN BEGIN
            CheckCountOfRecord(Index);
            TempGlobalRecRefArray[Index].INIT;
            CopyByFields(RecRef2,TempGlobalRecRefArray[Index]);
            IF TempGlobalRecRefArray[Index].INSERT THEN;
          END;
        END;
        RecRef2.CLOSE;
      END;

      EXIT(Exists);
    END;

    PROCEDURE SetRec@11123304(RecRef@11123302 : RecordRef);
    VAR
      Index@11123303 : Integer;
      Exists@11123304 : Boolean;
    BEGIN
      IF InsertAllowed THEN BEGIN
        Exists := FindTempRecRef(RecRef,Index);
        IF NOT Exists THEN
          OpenTempRecRef(RecRef,Index);

        IF Exists THEN
          Exists := TempGlobalRecRefArray[Index].GET(RecRef.RECORDID);

        IF NOT Exists THEN BEGIN
          CheckCountOfRecord(Index);
          TempGlobalRecRefArray[Index].INIT;
        END;
        CopyByFields(RecRef,TempGlobalRecRefArray[Index]);
        IF Exists THEN
          TempGlobalRecRefArray[Index].MODIFY
        ELSE
          TempGlobalRecRefArray[Index].INSERT;
      END;
    END;

    PROCEDURE RemoveRec@11123305(RecRef@11123302 : RecordRef);
    VAR
      Index@11123303 : Integer;
    BEGIN
      IF InsertAllowed THEN BEGIN
        IF FindTempRecRef(RecRef,Index) THEN
          IF TempGlobalRecRefArray[Index].GET(RecRef.RECORDID) THEN
            TempGlobalRecRefArray[Index].DELETE;
      END ELSE
        RemoveAll(RecRef);
    END;

    PROCEDURE RemoveAll@11123306(RecRef@11123302 : RecordRef);
    VAR
      Index@11123303 : Integer;
    BEGIN
      IF FindTempRecRef(RecRef,Index) THEN
        TempGlobalRecRefArray[Index].CLOSE;
    END;

    LOCAL PROCEDURE FindTempRecRef@11123307(RecRef@11123302 : RecordRef;VAR Index@11123308 : Integer) : Boolean;
    VAR
      I@11123305 : Integer;
      FirstZeroIndex@11123304 : Integer;
      TempRecRefArrayInitialized@11123303 : Boolean;
    BEGIN
      FOR I := 1 TO ARRAYLEN(TempGlobalRecRefArray) DO BEGIN
        Index := I;

        IF Context.GetVersionNav > 5 THEN
          TempRecRefArrayInitialized := TempGlobalRecRefArray[I].NUMBER <> 0
        ELSE
          TempRecRefArrayInitialized := FORMAT(TempGlobalRecRefArray[I]) <> '';

        IF (NOT TempRecRefArrayInitialized) AND (FirstZeroIndex = 0) THEN
          FirstZeroIndex := I;

        IF GetRecNo(TempGlobalRecRefArray[I]) = GetRecNo(RecRef) THEN
          EXIT(TRUE);
      END;
      Index := FirstZeroIndex;
    END;

    LOCAL PROCEDURE OpenTempRecRef@11123317(RecRef@11123302 : RecordRef;Index@11123303 : Integer);
    BEGIN
      TempGlobalRecRefArray[Index].CLOSE;
      TempGlobalRecRefArray[Index].OPEN(GetRecNo(RecRef),TRUE);
    END;

    LOCAL PROCEDURE GetRecNo@11123318(RecRef@11123302 : RecordRef) : Integer;
    VAR
      CommonFunc@11123303 : Codeunit 11123309;
    BEGIN
      EXIT(CommonFunc.GetCorrectTableNoFromRecRef(RecRef));
    END;

    PROCEDURE FindSet@11123321(VAR RecRef@11123302 : RecordRef;CauseError@11123306 : Boolean) : Boolean;
    VAR
      RecRef2@11123305 : RecordRef;
      Index@11123303 : Integer;
      Exists@11123304 : Boolean;
    BEGIN
      Exists := FindTempRecRef(RecRef,Index);
      IF Exists THEN BEGIN
        TempGlobalRecRefArray[Index].RESET;
        TempGlobalRecRefArray[Index].SETVIEW(RecRef.GETVIEW(FALSE));
        Exists := TempGlobalRecRefArray[Index].FINDSET;
      END ELSE
        OpenTempRecRef(RecRef,Index);

      IF Exists THEN BEGIN
        REPEAT
          RecRef.INIT;
          CopyByFields(TempGlobalRecRefArray[Index],RecRef);
          RecRef.INSERT;
        UNTIL TempGlobalRecRefArray[Index].NEXT = 0;
      END ELSE BEGIN
        RecRef2.OPEN(GetRecNo(RecRef));
        RecRef2.RESET;
        RecRef2.SETVIEW(RecRef.GETVIEW(FALSE));
        IF CauseError THEN BEGIN
          RecRef2.FINDSET;
          Exists := TRUE;
        END ELSE
          Exists := RecRef2.FINDSET;

        IF Exists THEN BEGIN
          REPEAT
            RecRef.INIT;
            CopyByFields(RecRef2,RecRef);
            RecRef.INSERT;

            IF InsertAllowed THEN BEGIN
              CheckCountOfRecord(Index);
              TempGlobalRecRefArray[Index].INIT;
              CopyByFields(RecRef2,TempGlobalRecRefArray[Index]);
              TempGlobalRecRefArray[Index].INSERT;
            END;
          UNTIL RecRef2.NEXT = 0;
        END;
      END;
      EXIT(Exists);
    END;

    LOCAL PROCEDURE CopyByFields@11123308(VAR FromRecRef@11123302 : RecordRef;VAR ToRecRef@11123303 : RecordRef);
    VAR
      CommonFunc@11123304 : Codeunit 11123309;
    BEGIN
      CommonFunc.CopyRecRefByFields(FromRecRef,ToRecRef);
    END;

    LOCAL PROCEDURE CheckCountOfRecord@11123309(Index@11123303 : Integer);
    BEGIN
      IF TempGlobalRecRefArray[Index].COUNT > NoCachedRecords THEN BEGIN
        TempGlobalRecRefArray[Index].RESET;
        TempGlobalRecRefArray[Index].DELETEALL;
      END;
    END;

    PROCEDURE SetSingleRecByReference@11123311(VAR RecRef@11123302 : RecordRef);
    VAR
      I@11123303 : Integer;
      FromRecNo@11123304 : Integer;
      ToRecNo@11123305 : Integer;
    BEGIN
      FromRecNo := GetRecNo(RecRef);
      FOR I := 1 TO ARRAYLEN(GlobalRecRefArray) DO BEGIN
        ToRecNo := GetRecNo(GlobalRecRefArray[I]);
        IF (ToRecNo = 0) OR (FromRecNo = ToRecNo) THEN BEGIN
          GlobalRecRefArray[I] := RecRef;
          EXIT;
        END;
      END;
    END;

    PROCEDURE GetSingleRecByReference@11123312(VAR RecRef@11123302 : RecordRef) : Boolean;
    VAR
      I@11123305 : Integer;
      FromRecNo@11123304 : Integer;
      ToRecNo@11123303 : Integer;
    BEGIN
      ToRecNo := GetRecNo(RecRef);
      FOR I := 1 TO ARRAYLEN(GlobalRecRefArray) DO BEGIN
        FromRecNo := GetRecNo(GlobalRecRefArray[I]);
        IF (FromRecNo <> 0) AND (FromRecNo = ToRecNo) THEN BEGIN
          RecRef := GlobalRecRefArray[I];
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE SetNoCachedRecords@11123310(NewNoRecordsCached@11123302 : Integer);
    BEGIN
      NoCachedRecords := NewNoRecordsCached;
    END;

    LOCAL PROCEDURE ReadSetupValues@11123313();
    VAR
      SanaSetup@11123302 : Record 11123305;
    BEGIN
      IF NOT SetupRead THEN BEGIN
        SetupRead := TRUE;
        IF SanaSetup.GET THEN
          NoCachedRecords := SanaSetup."No. of Cached Records";
      END;
    END;

    LOCAL PROCEDURE InsertAllowed@11123315() : Boolean;
    BEGIN
      ReadSetupValues;

      IF (Context.GetVersionNav > 5) AND
         (NoCachedRecords > 0)
      THEN
        EXIT(TRUE);
    END;

    BEGIN
    END.
  }
}

