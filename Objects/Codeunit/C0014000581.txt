OBJECT Codeunit 14000581 Update Proc. Unit Loc. Filters
{
  OBJECT-PROPERTIES
  {
    Date=11/01/17;
    Time=12:00:00 PM;
    Version List=UBP2.96.01;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            ByLocation('','');
          END;

  }
  CODE
  {
    VAR
      Location@1240020000 : Record 14;
      ProcUnit@1240020001 : Record 14000555;
      InvMgtSetup@1240020011 : Record 14000551;
      LocationInventoryPeriod@1240020012 : Record 14000553;
      UBP@1240020002 : Codeunit 14000564;
      InvMgmt@1240020015 : Codeunit 14000553;
      ProgWindow@1240020003 : Dialog;
      Text001@1240020004 : TextConst 'ENU=Updating Proc. Unit Location Filters';
      CurrentCount@1240020006 : Integer;
      TotalCount@1240020005 : Integer;
      Text002@1240020007 : TextConst 'ENU=Location';
      UpdateProcUnit@1240020008 : Boolean;
      LocationFilterString@1240020009 : Text[250];
      UsageLocationFilterString@1240020010 : Text[250];
      PrevLocationFilterString@1240020013 : Text[250];
      PrevUsageLocationFilterString@1240020014 : Text[250];
      LogEntryNo@1240020017 : Integer;

    PROCEDURE ByLocation@1240020000(CurrLocationCode@1240020000 : Code[10];CurrItemNo@1240020001 : Code[50]);
    BEGIN
      IF GUIALLOWED THEN
        ProgWindow.OPEN(
          Text001 + '\' +
          PADSTR(Text002,10) +
          '#1########' +'\' +
          '@2@@@@@@@@@@@@@@@@@@@@@@@@@@@@');

      Location.RESET;
      IF CurrLocationCode <> '' THEN
        Location.SETRANGE(Code,CurrLocationCode);
      Location.SETRANGE("Enable Adv. Forecasting",TRUE);
      IF Location.FIND('-') THEN
        REPEAT
          IF CurrItemNo = '' THEN BEGIN
          InvMgmt.CreateLogEntry(Location.Code,Text001,LogEntryNo);
          COMMIT;
          END;
          IF GUIALLOWED THEN BEGIN
            ProgWindow.UPDATE(1,Location.Code);
            ProgWindow.UPDATE(2,0);
          END;
          LocationInventoryPeriod.RESET;
          LocationInventoryPeriod.SETRANGE("Location Code",Location.Code);
          LocationInventoryPeriod.SETRANGE("Period End Closed",TRUE);
          IF NOT LocationInventoryPeriod.FIND('+') THEN
            LocationInventoryPeriod."Period End Closed" := FALSE;

          ProcUnit.SETRANGE("Location Code",Location.Code);
          IF CurrItemNo <> '' THEN
            ProcUnit.SETRANGE("Item No.",CurrItemNo);
          TotalCount := ProcUnit.COUNT;
          CurrentCount := 0;
          IF ProcUnit.FIND('-') THEN
            REPEAT
              UpdateProcUnit := FALSE;
              CurrentCount := CurrentCount + 1;

              PrevLocationFilterString := ProcUnit."Location Filter String";
              PrevUsageLocationFilterString := ProcUnit."Usage Location Filter String";
              ProcUnit."Location Filter String" := '';
              ProcUnit."Usage Location Filter String" := '';
              ProcUnit.MODIFY;

              UsageLocationFilterString :=
                UBP.GetUsageLocationFilter(
                  ProcUnit."Location Code",ProcUnit."Item No.",ProcUnit."Variant Code",FALSE);
              IF UsageLocationFilterString <> PrevUsageLocationFilterString THEN
                UpdateProcUnit := TRUE;
              LocationFilterString :=
                UBP.GetLocationFilter(ProcUnit,FALSE);
              IF LocationFilterString <> PrevLocationFilterString THEN
                UpdateProcUnit := TRUE;

              IF UpdateProcUnit THEN BEGIN
                IF LocationInventoryPeriod."Period End Closed" THEN
                  ProcUnit."Change Reforecast Required" := TRUE;
              END;

              UBP.SetReplenishmentHierarchy(ProcUnit);
              UBP.SetFinalReplenishmentSource(ProcUnit);

              ProcUnit."Location Filter String" := LocationFilterString;
              ProcUnit."Usage Location Filter String" := UsageLocationFilterString;
              ProcUnit.MODIFY;

              IF GUIALLOWED THEN
                IF CurrentCount MOD 10 = 0 THEN
                  ProgWindow.UPDATE(2,ROUND(10000 * (CurrentCount / TotalCount),1));
            UNTIL ProcUnit.NEXT = 0;
          IF CurrItemNo = '' THEN BEGIN
          InvMgmt.CloseLogEntry(LogEntryNo,'');
          COMMIT;
          END;
        UNTIL Location.NEXT = 0;

      IF GUIALLOWED THEN
        ProgWindow.CLOSE;
    END;

    BEGIN
    END.
  }
}

