OBJECT Codeunit 14050008 UPSlink dot NET Management
{
  OBJECT-PROPERTIES
  {
    Date=06/28/17;
    Time=12:00:00 PM;
    Version List=SE0.60.09;
  }
  PROPERTIES
  {
    Permissions=TableData 14000707=rm,
                TableData 14000769=rimd,
                TableData 14050001=rm,
                TableData 14050002=rimd,
                TableData 14050003=rimd,
                TableData 14050004=rimd,
                TableData 14050005=rm,
                TableData 14050006=rimd,
                TableData 14050010=rimd,
                TableData 14050011=rimd,
                TableData 14050012=rimd;
    OnRun=BEGIN
            CASE FunctionID OF
              1: UPSlinkDebug(TRUE);
              2: UPSlinkDebug(FALSE);
              3: UPSlinkLogDirectory;
            END;
          END;

  }
  CODE
  {
    VAR
      ShippingAgent@1240030000 : Record 291;
      PackingStation@1240030001 : Record 14000709;
      ShippingSetup@1240030002 : Record 14000707;
      UPSlinkSetup@1240030010 : Record 14050001;
      Shipping@1240030007 : Codeunit 14000701;
      UPSlink@1240030009 : Automation "{2F47B491-6E93-4FC8-AECB-6A3628D92518} 1.0:{4C06561E-DD21-48C3-0002-9C0E9F9A2682}:Unknown Automation Server.Unknown Class";
      Unzip@1240030039 : Automation "{2F47B491-6E93-4FC8-AECB-6A3628D92518} 1.0:{4C06561E-DD21-48C3-0003-9C0E9F9A2682}:Unknown Automation Server.Unknown Class";
      UPSlinkServer@1240030003 : Automation "{2F47B491-6E93-4FC8-AECB-6A3628D92518} 1.0:{4C06561E-DD21-48C3-0002-9C0E9F9A2682}:Unknown Automation Server.Unknown Class";
      UPSlinkICC@1240020005 : Automation "{D77F2A14-BAB4-11D2-ABC4-40006401C717} 5.0:{D77F2A3C-BAB4-11D2-ABC4-40006401C717}:Unknown Automation Server.Unknown Class";
      UPSlinkHTTP@1240020004 : Automation "{CCA7BBC7-D2A0-11D1-81BB-4000641C258A} 6.0:{CCA7BBD5-D2A0-11D1-81BB-4000641C258A}:Unknown Automation Server.Unknown Class";
      UPSlinkIO@1240030006 : Codeunit 14050009;
      UPSlinkCreated@1240030004 : Boolean;
      UPSlinkCreatedServer@1240030005 : Boolean;
      Text001@1240020000 : TextConst 'ENU=Install the "UPSlink Components .NET Automation" external component on this computer. Or contact your Lanham Partner.';
      FunctionID@1240020001 : Integer;
      Text002@1240020002 : TextConst 'ENU=Make sure Users have FULL permissions to the UPS directory in Program Files. Or contact your Lanham Partner.';
      Text003@1240020003 : TextConst 'ENU=Re-Install the "UPSlink Components .NET Automation" external component on this computer. Or contact your Lanham Partner.';
      Text004@1240020006 : TextConst 'ENU=UPSlink components have not been setup properly on this workstation. Run "Setup Additional Workstation" in UPSlink Setup.';
      Text005@1240020007 : TextConst 'ENU=Install the "UPSlink Components .NET Automation" external component on the NAV Server. Or contact your Lanham Partner.';

    PROCEDURE GetUPSlinkInfo@1240030023(InfoText@1240030004 : Text[30];VAR TextValue1@1240030003 : Text[30];VAR TextValue2@1240030002 : Text[30];VAR IntValue1@1240030001 : Integer;VAR IntValue2@1240030000 : Integer) : Boolean;
    BEGIN
      TestUPSlinkCreated;
      IF UPSlink.GetUPSLinkInfo(InfoText,TextValue1,TextValue2,IntValue1,IntValue2) THEN
        EXIT(TRUE);
    END;

    PROCEDURE UploadPld@9(ManifestUploadDirectory@1240030000 : Text[250];UploadFileNamePath@1240030003 : Text[250];PickupDateText@1240030020 : Text[8];PldSeqNumber@1240030007 : Text[15];URCFileName@1240030006 : Text[30];WVFileName@1240030005 : Text[30];VAR MailCount@1240030018 : Integer;VAR MailRefList@1240030012 : Text[250];VAR MailFileList@1240030011 : Text[250];VAR UPSlinkAppMsgID@1240030027 : Integer;VAR ServiceTierSuffix@1240030001 : Text[4];VAR LargeMailFile@1240030008 : ARRAY [25] OF Boolean) : Boolean;
    VAR
      URCFileNamePath@1240030002 : Text[250];
      WVFileNamePath@1240030004 : Text[250];
    BEGIN
      TestUPSlinkCreated;

      IF ISSERVICETIER THEN BEGIN
        UPSlinkIO.ServerToClient2(UploadFileNamePath);
        URCFileNamePath := ManifestUploadDirectory + URCFileName;
        UPSlinkIO.ServerToClient2(URCFileNamePath);
        WVFileNamePath := ManifestUploadDirectory + WVFileName;
        UPSlinkIO.ServerToClient2(WVFileNamePath);
      END;

      IF UPSlink.UploadPld(
           ManifestUploadDirectory,UploadFileNamePath,PickupDateText,PldSeqNumber,URCFileName,
           WVFileName,MailCount,MailRefList,MailFileList,UPSlinkAppMsgID)
      THEN BEGIN
        IF MailCount > 0 THEN BEGIN
          UPSlinkIO.ProcessMailFiles(ManifestUploadDirectory,MailRefList,MailFileList,LargeMailFile);
        END;
        EXIT(TRUE);
      END;
    END;

    PROCEDURE CommSetup@58() : Boolean;
    BEGIN
      TestUPSlinkCreated;
      IF UPSlink.CommunicationSetup() THEN
        EXIT(TRUE);
    END;

    PROCEDURE Commission@55(ReqFileNamePath@1240030000 : Text[250];VAR RspFileName@1240030002 : Text[250];UPSlinkTempFilesDirectory@1240030007 : Text[250];VAR ServiceTierSuffix@1240030005 : Text[4]) : Boolean;
    VAR
      ServerFileNamePath@1240030001 : Text[250];
      ClientFileNamePath@1240030003 : Text[250];
    BEGIN
      TestUPSlinkCreated;

      IF ISSERVICETIER THEN
        UPSlinkIO.ServerToClient2(ReqFileNamePath);

      IF UPSlink.Commission(ReqFileNamePath,RspFileName,UPSlinkTempFilesDirectory) THEN BEGIN
        IF ISSERVICETIER THEN BEGIN
          ClientFileNamePath := UPSlinkTempFilesDirectory + '\' + RspFileName;
          UPSlinkIO.ClientToServer2(ClientFileNamePath);
        END;
        EXIT(TRUE);
      END;
    END;

    PROCEDURE AddShipperRequest@3(ReqFileNamePath@1240030000 : Text[250];UPSMailboxID@1240030001 : Text[30]) : Boolean;
    VAR
      ServerFileName@1240030002 : Text[250];
    BEGIN
      TestUPSlinkCreated;

      IF ISSERVICETIER THEN
        UPSlinkIO.ServerToClient2(ReqFileNamePath);

      IF UPSlink.AddShipperRequest(ReqFileNamePath,UPSMailboxID) THEN
        EXIT(TRUE);
    END;

    PROCEDURE GetUPSMail@7(ManifestUploadDirectory@1240030003 : Text[250];VAR MailRefList@1240030002 : Text[250];VAR MailFileList@1240030001 : Text[250];VAR UPSlinkAppMsgID@1240030000 : Integer;VAR ServiceTierSuffix@1240030004 : Text[4];VAR LargeMailFile@1240030005 : ARRAY [25] OF Boolean) MailCount : Integer;
    BEGIN
      TestUPSlinkCreated;
      MailCount := UPSlink.GetUPSMail(ManifestUploadDirectory,MailRefList,MailFileList,UPSlinkAppMsgID);

      IF MailCount > 0 THEN BEGIN
        UPSlinkIO.ProcessMailFiles(ManifestUploadDirectory,MailRefList,MailFileList,LargeMailFile);
      END;
    END;

    PROCEDURE PhoneListUpdate@1240030028(MailFileFolder@1240030004 : Text[250];DistFileNamePath@1240030003 : Text[250];DistributionID@1240030002 : Text[30];VAR PhoneListVersion@1240030001 : Text[30];RcvDateTime@1240030000 : Text[14]) : Boolean;
    BEGIN
      TestUPSlinkCreated;

      IF ISSERVICETIER THEN
        UPSlinkIO.ServerToClient2(DistFileNamePath);

      IF UPSlink.PhoneListUpdate(
           MailFileFolder,DistFileNamePath,DistributionID,PhoneListVersion,RcvDateTime)
      THEN
        EXIT(TRUE);
    END;

    PROCEDURE UnZipFile@1240030029(UnzipFolder@1240030002 : Text[250];UnzipFileNamePath@1240030001 : Text[250];VAR UnzippedFileNames@1240030000 : Text[600]) : Boolean;
    VAR
      FileMgmt@1240040000 : Codeunit 419;
      Override@1240030003 : Boolean;
      ClientFile@1240040001 : Text[1024];
      ServerTempFilename@1240040002 : Text[1024];
      index@1240040003 : Integer;
    BEGIN
      CREATE(Unzip,FALSE,TRUE);

      Override := TRUE;
      UnzippedFileNames := '';

      IF NOT(FileMgmt.ClientFileExists(UnzipFileNamePath)) THEN
        FileMgmt.DownloadToFile(UnzipFileNamePath,UnzipFileNamePath); //Server to Client

      IF Unzip.LanhamUnzipFiles(UnzipFolder, UnzipFileNamePath, Override, UnzippedFileNames) THEN BEGIN
          IF STRPOS(UnzippedFileNames,',') > 0 THEN
            FOR index := 1 TO STRLEN(DELCHR(UnzippedFileNames,'<=>',DELCHR(UnzippedFileNames,'<=>',
              ','))) + 1 DO BEGIN
              ClientFile := UnzipFolder + SELECTSTR(index,UnzippedFileNames);
              ServerTempFilename := FileMgmt.UploadFileSilent(ClientFile); //Client to Server temp dir.
              COPY(ServerTempFilename, ClientFile);
              ClientFile := '';
            END
          ELSE BEGIN
            ClientFile := UnzipFolder + UnzippedFileNames;
            ServerTempFilename := FileMgmt.UploadFileSilent(ClientFile);
            COPY(ServerTempFilename, ClientFile);
            ClientFile := '';
          END;
        CLEAR(Unzip);
        EXIT(TRUE);
      END ELSE
        CLEAR(Unzip);
    END;

    PROCEDURE DeleteAllMail@1240030007(MailRefList@1240030008 : Text[150];VAR MailCount@1240030007 : Integer;MailFileDirectory@1240020000 : Text[250]) DeletedCount : Integer;
    BEGIN
      TestUPSlinkCreated;
      //DeletedCount := UPSlink.DeleteAllMail(MailRefList,MailCount,MailFileDirectory);
    END;

    PROCEDURE SendUPSMail@1240030003(Subject@1240030004 : Text[30];Recipient@1240030001 : Text[30];MailFileNamePath@1240030000 : Text[250]) : Boolean;
    VAR
      ServerFileName@1240030002 : Text[250];
    BEGIN
      TestUPSlinkCreated;

      IF ISSERVICETIER THEN
        UPSlinkIO.ServerToClient2(MailFileNamePath);

      IF UPSlink.SendUPSMail(Subject,Recipient,MailFileNamePath) THEN
        EXIT(TRUE);
    END;

    PROCEDURE Reset@2() : Boolean;
    BEGIN
      TestUPSlinkCreated;
      IF UPSlink.ResetUPSlink THEN
        EXIT(TRUE);
    END;

    PROCEDURE BuildMaxiStr@6(VAR CodeOut@1240030014 : Text[250];UPSlinkTempFilesDirectory@1240030003 : Text[250];Zip@1240030019 : Text[30];OrigCarrier@1240030017 : Text[10];ShipmentID@1240030006 : Text[30];ShipmentNoOfX@1240030000 : Text[10];Weight@1240030001 : Text[10];ShiptoName@1240030002 : Text[35];ShiptoAddress@1240030009 : Text[35];ShiptoAddress2@1240030005 : Text[35];ShiptoName2@1240030010 : Text[35];ShiptoCity@1240030007 : Text[30];ShiptoState@1240030008 : Text[30];ShiptoContact@1240030013 : Text[35];ParmText@1240030012 : Text[46];CompCityState@1240030011 : Boolean) : Integer;
    BEGIN
      TestUPSlinkCreatedServer;

      EXIT(
        UPSlink.BuildMaxiStr(
          CodeOut,UPSlinkTempFilesDirectory,Zip,OrigCarrier,ShipmentID,ShipmentNoOfX,Weight,ShiptoName,
          ShiptoAddress,ShiptoAddress2,ShiptoName2,ShiptoCity,ShiptoState,ShiptoContact,ParmText,
          CompCityState));
    END;

    PROCEDURE SetRegistryCommissioningValues@1240030014(MailboxID@1240030000 : Text[30];UPSlinkPassword@1240030001 : Text[30]) : Boolean;
    BEGIN
      TestUPSlinkCreated;
      IF UPSlink.SetRegistryCommissioningValues(MailboxID,UPSlinkPassword) THEN
        EXIT(TRUE);
    END;

    LOCAL PROCEDURE TestUPSlinkCreated@1240030000();
    BEGIN
      IF UPSlinkCreated THEN
        EXIT;

      UPSlinkCreated := TRUE;
      IF NOT(CREATE(UPSlink,FALSE,TRUE)) THEN
        ERROR(Text001);
    END;

    LOCAL PROCEDURE TestUPSlinkCreatedServer@1240030001();
    BEGIN
      IF UPSlinkCreatedServer THEN
        EXIT;

      UPSlinkCreatedServer := TRUE;
      IF NOT CREATE(UPSlink,FALSE,TRUE) THEN
        ERROR(Text001)
    END;

    PROCEDURE LargeDistributedFile@1240030002(VAR UPSlinkMail@1240030000 : Record 14050006;MailFileFolder@1240030001 : Text[250]);
    VAR
      ClientFileMgmt@1240040004 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.File" RUNONCLIENT;
      FileMgmt@1240040005 : Codeunit 419;
      DistFileNamePath@1240040006 : Text[250];
      NewDistFileNamePath@1240040007 : Text[250];
    BEGIN
        DistFileNamePath :=
          MailFileFolder + UPSlinkMail."File Name" + UPSlinkMail."Reference No." + '.001';
        NewDistFileNamePath := MailFileFolder + UPSlinkMail."File Name" +
          UPSlinkMail."Reference No." + UPSlinkMail."Distributed Object File Name";

      IF FileMgmt.ClientFileExists(DistFileNamePath) THEN BEGIN
        ClientFileMgmt.Move(DistFileNamePath,NewDistFileNamePath);
        IF FileMgmt.ClientFileExists(MailFileFolder + UPSlinkMail."File Name" + UPSlinkMail."Reference No." + '.000') THEN
          FileMgmt.DeleteClientFile(MailFileFolder + UPSlinkMail."File Name" + UPSlinkMail."Reference No." + '.000');
        UPSlinkIO.ClientToServer2(NewDistFileNamePath);
        UPSlinkMail.ImportDistributedObject(NewDistFileNamePath,FALSE);
        UPSlinkMail.MODIFY;
      END;
    END;

    PROCEDURE DeleteMailFile@1240030004(FileNamePath@1240030000 : Text[250]);
    BEGIN
      IF ISSERVICETIER THEN BEGIN
        FileNamePath :=
          COPYSTR(FileNamePath,1,STRLEN(FileNamePath)-8) + COPYSTR(FileNamePath,STRLEN(FileNamePath)-3);
        IF UPSlinkIO.DeleteClientFile(FileNamePath) THEN ;
      END;
    END;

    PROCEDURE SetFunctionID@1240020000(ID@1240020000 : Integer);
    BEGIN
      FunctionID := ID;
    END;

    PROCEDURE UPSlinkDebug@1240020003(TurnOn@1240020000 : Boolean);
    VAR
      UPSlinkHttp@1240020001 : Automation "{CCA7BBC7-D2A0-11D1-81BB-4000641C258A} 6.0:{CCA7BBD5-D2A0-11D1-81BB-4000641C258A}:Unknown Automation Server.Unknown Class";
    BEGIN
      CLEAR(UPSlinkHttp);
      IF NOT CREATE(UPSlinkHttp,FALSE,TRUE) THEN
        ERROR(Text001)
      ELSE BEGIN
        IF TurnOn THEN
          UPSlinkHttp.SetConfig('LogLevel','99')
        ELSE
          UPSlinkHttp.SetConfig('LogLevel','0');
      END;
    END;

    PROCEDURE UPSlinkLogDirectory@1240020002();
    VAR
      UPSlinkHttp@1240020001 : Automation "{CCA7BBC7-D2A0-11D1-81BB-4000641C258A} 6.0:{CCA7BBD5-D2A0-11D1-81BB-4000641C258A}:Unknown Automation Server.Unknown Class";
      FileSystemObject@1240020002 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      LogDirectory@1240020000 : Text[1024];
    BEGIN
      CLEAR(UPSlinkHttp);
      IF NOT CREATE(UPSlinkHttp,FALSE,TRUE) THEN
        ERROR(Text001)
      ELSE
        UPSlinkHttp.GetLogDirectory(LogDirectory);

      IF LogDirectory <> '' THEN BEGIN
        CLEAR(FileSystemObject);
        IF CREATE(FileSystemObject,FALSE,TRUE) THEN
          IF NOT FileSystemObject.FolderExists(LogDirectory) THEN
            ERROR(Text003);
      END;
    END;

    PROCEDURE CheckUPSlinkCommConfig@1240020001() : Boolean;
    VAR
      ConfigEntry@1240020004 : Text[30];
      ConfigValue@1240020003 : Text[30];
      SetAdditionalWorkstation@1240020002 : Boolean;
    BEGIN
      TestUPSlinkICCCreated;
      TestUPSlinkHttpCreated;

      ConfigEntry := 'DAEnabled';
      UPSlinkICC.GetConfig(ConfigEntry,ConfigValue);
      IF ConfigValue <> 'y' THEN
        SetAdditionalWorkstation := TRUE;

      ConfigEntry := 'CommissionStatus';
      UPSlinkHTTP.GetConfig(ConfigEntry,ConfigValue);
      IF ConfigValue <> '0' THEN
          SetAdditionalWorkstation := TRUE;

      IF SetAdditionalWorkstation THEN
        ERROR(Text004);
    END;

    PROCEDURE TestUPSlinkHttpCreated@1240020004();
    BEGIN
      CLEAR(UPSlinkHTTP);

      IF NOT CREATE(UPSlinkHTTP,FALSE,TRUE) THEN
        ERROR(Text001)
    END;

    PROCEDURE TestUPSlinkICCCreated@1240020005();
    BEGIN
      CLEAR(UPSlinkICC);

      IF NOT CREATE(UPSlinkICC,FALSE,TRUE) THEN
        ERROR(Text001)
    END;

    PROCEDURE TestUPSlinkCreatedNoError@1240020007() : Boolean;
    BEGIN
      CLEAR(UPSlink);

      IF NOT CREATE(UPSlink,FALSE,TRUE) THEN
        EXIT(FALSE)
      ELSE
        EXIT(TRUE);
    END;

    PROCEDURE TestUPSlinkCreatedSvrNoError@1240020006() : Boolean;
    BEGIN
    END;

    EVENT UPSlinkHTTP@1240020004::UPSlinkNotify@1(strNotificationText@1240020003 : Text[1024];nCode@1240020002 : Integer;lBytes@1240020001 : Integer;lTotal@1240020000 : Integer);
    BEGIN
    END;

    EVENT UPSlinkHTTP@1240020004::ICCNotify@2(nCode@1240020002 : Integer;strNotificationText@1240020001 : Text[1024];VAR pbAbort@1240020000 : Boolean);
    BEGIN
    END;

    EVENT UPSlinkICC@1240020005::ICCNotify@1(nCode@1240020002 : Integer;strNotificationText@1240020001 : Text[1024];VAR pbAbort@1240020000 : Boolean);
    BEGIN
    END;

    BEGIN
    END.
  }
}

