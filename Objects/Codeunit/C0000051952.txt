OBJECT Codeunit 51952 Codeunit7171EventSubscriber
{
  OBJECT-PROPERTIES
  {
    Date=09/16/20;
    Time=10:20:27 AM;
    Modified=Yes;
    Version List=NAVEVENT,TPZ2829;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Item@1170000000 : Record 27;

    PROCEDURE CU7171_CalcInventory@1000000020(SalesLine@1000000000 : Record 37) : Decimal;
    BEGIN
      // <TPZ1023>
      IF CU7171_GetItem(SalesLine) THEN BEGIN
        Item.SETRANGE("Variant Filter",SalesLine."Variant Code");
        Item.SETRANGE("Location Filter",SalesLine."Location Code");
        Item.CALCFIELDS(Inventory);
        EXIT(Item.Inventory);
      END;
      // </TPZ1023>
    END;

    PROCEDURE CU7171_CalcQtyOnPurchOrder@1000000019(SalesLine@1000000000 : Record 37) : Decimal;
    BEGIN
      // <TPZ1023>
      IF CU7171_GetItem(SalesLine) THEN BEGIN
        Item.SETRANGE("Variant Filter",SalesLine."Variant Code");
        Item.SETRANGE("Location Filter",SalesLine."Location Code");
        Item.CALCFIELDS("Qty. on Purch. Order");
        EXIT(Item."Qty. on Purch. Order");
      END;
      // </TPZ1023>
    END;

    PROCEDURE CU7171_CalcQtyOnSalesOrder@1000000018(SalesLine@1000000000 : Record 37) : Decimal;
    BEGIN
      // <TPZ1023>
      IF CU7171_GetItem(SalesLine) THEN BEGIN
        Item.SETRANGE("Variant Filter",SalesLine."Variant Code");
        Item.SETRANGE("Location Filter",SalesLine."Location Code");
        Item.CALCFIELDS("Qty. on Sales Order");
        EXIT(Item."Qty. on Sales Order");
      END;
      // </TPZ1023>
    END;

    PROCEDURE CU7171_CalcQtyInTransit@1000000017(SalesLine@1000000000 : Record 37) : Decimal;
    BEGIN
      // <TPZ1023>
      IF CU7171_GetItem(SalesLine) THEN BEGIN
        Item.SETRANGE("Variant Filter",SalesLine."Variant Code");
        Item.SETRANGE("Location Filter",SalesLine."Location Code");
        Item.CALCFIELDS("Qty. in Transit");
        EXIT(Item."Qty. in Transit");
      END;
      // </TPZ1023>
    END;

    PROCEDURE CU7171_CalcQtyOnAssemblyOrder@1000000016(SalesLine@1000000000 : Record 37) : Decimal;
    BEGIN
      // <TPZ1023>
      IF CU7171_GetItem(SalesLine) THEN BEGIN
        Item.SETRANGE("Variant Filter",SalesLine."Variant Code");
        Item.SETRANGE("Location Filter",SalesLine."Location Code");
        Item.CALCFIELDS("Qty. on Assembly Order");
        EXIT(Item."Qty. on Assembly Order");
      END;
      // </TPZ1023>
    END;

    PROCEDURE CU7171_CalcQtyOnAsmComponent@1000000015(SalesLine@1000000000 : Record 37) : Decimal;
    BEGIN
      // <TPZ1023>
      IF CU7171_GetItem(SalesLine) THEN BEGIN
        Item.SETRANGE("Variant Filter",SalesLine."Variant Code");
        Item.SETRANGE("Location Filter",SalesLine."Location Code");
        Item.CALCFIELDS("Qty. on Asm. Component");
        EXIT(Item."Qty. on Asm. Component");
      END;
      // </TPZ1023>
    END;

    PROCEDURE CU7171_CalcQtyAvailable@1000000014(SalesLine@1000000000 : Record 37) : Decimal;
    VAR
      ItemMgt@1000000002 : Codeunit 50020;
    BEGIN
      // <TPZ1023>
      IF CU7171_GetItem(SalesLine) THEN BEGIN
        Item.SETRANGE("Variant Filter",SalesLine."Variant Code");
        Item.SETRANGE("Location Filter",SalesLine."Location Code");
        Item.CALCFIELDS(Inventory,"Qty. on Sales Order");
        //<TPZ1675>
        //EXIT(Item.Inventory - Item."Qty. on Sales Order");
        EXIT(ItemMgt.CalcQtyAvailable(Item));
        //</TPZ1675>
      END;
      // </TPZ1023>
    END;

    PROCEDURE CU7171_CalcQtyOnPick@1000000012(SalesLine@1000000000 : Record 37) : Decimal;
    BEGIN
      // <TPZ1023>
      IF CU7171_GetItem(SalesLine) THEN BEGIN
        Item.SETRANGE("Variant Filter",SalesLine."Variant Code");
        Item.SETRANGE("Location Filter",SalesLine."Location Code");
        Item.CALCFIELDS("Qty. on Pick");
        EXIT(Item."Qty. on Pick");
      END;
      // </TPZ1023>
    END;

    PROCEDURE CU7171_CalcQtyAvailableToPick@1000000011(SalesLine@1000000000 : Record 37) : Decimal;
    VAR
      WhseCreatePick@1000000001 : Codeunit 5778;
    BEGIN
      // <TPZ1023>
      IF CU7171_GetItem(SalesLine) THEN BEGIN
        EXIT(WhseCreatePick.QtyAvailtoPick(SalesLine."No.",SalesLine."Location Code"));
      END;
      // </TPZ1023>
    END;

    PROCEDURE CU7171_CalcEnterPriseInventory@1000000010(SalesLine@1000000000 : Record 37) : Decimal;
    VAR
      Location1@1000000001 : Record 14;
      EntPInventory@1000000002 : Decimal;
      WhseCreatePick@1000000003 : Codeunit 5778;
    BEGIN
      // <TPZ2590>
      EntPInventory :=0;
      IF CU7171_GetItem(SalesLine) THEN BEGIN
        Location1.RESET;
        Location1.SETRANGE("Shipping Location",TRUE);
        IF Location1.FINDSET THEN BEGIN
          REPEAT
            //Item.SETRANGE("Location Filter",Location1.Code);
            //Item.CALCFIELDS(Inventory);
            //EntPInventory := EntPInventory + Item.Inventory;
            EntPInventory := EntPInventory + WhseCreatePick.QtyAvailtoPick(SalesLine."No.",Location1.Code);
          UNTIL Location1.NEXT=0;
        END;
        EXIT(EntPInventory);
      END;
      // </TPZ2590>
    END;

    PROCEDURE CU7171_CalcMonthOfStock@1000000013(SalesLine@1000000000 : Record 37) : Decimal;
    VAR
      Location1@1000000001 : Record 14;
      EntPInventory@1000000002 : Decimal;
      WhseCreatePick@1000000003 : Codeunit 5778;
    BEGIN
      // <TPZ2590>
      EntPInventory :=0;
      IF CU7171_GetItem(SalesLine) THEN BEGIN
        Location1.RESET;
        Location1.SETRANGE("Shipping Location",TRUE);
        IF Location1.FINDSET THEN BEGIN
          REPEAT
           // Item.SETRANGE("Location Filter",Location1.Code);
            //Item.CALCFIELDS(Inventory);
            //EntPInventory := EntPInventory + Item.Inventory;
            EntPInventory := EntPInventory + WhseCreatePick.QtyAvailtoPick(SalesLine."No.",Location1.Code);
          UNTIL Location1.NEXT=0;
        END;
        IF Item."Monthly Demand" <> 0 THEN
          EXIT(EntPInventory/Item."Monthly Demand")
        ELSE
          EXIT(0);
      END;
      // </TPZ2590>
    END;

    LOCAL PROCEDURE CU7171_GetItem@24(VAR SalesLine@1000 : Record 37) : Boolean;
    BEGIN
      WITH Item DO BEGIN
        IF (SalesLine.Type <> SalesLine.Type::Item) OR (SalesLine."No." = '') THEN
          EXIT(FALSE);

        IF SalesLine."No." <> "No." THEN
          GET(SalesLine."No.");
        EXIT(TRUE);
      END;
    END;

    BEGIN
    END.
  }
}

