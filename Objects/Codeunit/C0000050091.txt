OBJECT Codeunit 50091 Table5717EventSubcribers
{
  OBJECT-PROPERTIES
  {
    Date=07/01/20;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=TPZ000.00.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ExclDocType@1000000002 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order';
      ExclDocNo@1000000001 : Code[20];
      ExclDocLineNo@1000000000 : Integer;
      ExclWkshTemplateName@1000000005 : Code[10];
      ExclWkshBatchName@1000000004 : Code[10];
      ExclWkshLineNo@1000000003 : Integer;
      ExclItemNo@1000000012 : Code[20];
      ExclVendorNo@1000000011 : Code[20];
      ExclStartingDate@1000000010 : Date;
      ExclCurrencyCode@1000000009 : Code[10];
      ExclVariantCode@1000000008 : Code[10];
      ExclUOMCode@1000000007 : Code[10];
      ExclMinQty@1000000006 : Decimal;

    [EventSubscriber(Table,5717,OnAfterValidateEvent,Description)]
    LOCAL PROCEDURE Tb5717_Description_OnValidate@1000000000(VAR Rec@1000000000 : Record 5717;VAR xRec@1000000001 : Record 5717;CurrFieldNo@1000000002 : Integer);
    VAR
      PurchLine@1000000018 : Record 39;
      ReqLine@1000000014 : Record 246;
      PurchPrice@1000000010 : Record 7012;
    BEGIN
       // <TPZ135>
       //MESSAGE('Description validation through evnts');//RT
      WITH Rec DO BEGIN
        IF "Cross-Reference Type" = "Cross-Reference Type"::Vendor THEN BEGIN
        PurchLine.RESET;
        PurchLine.SETRANGE(Type,PurchLine.Type::Item);
        PurchLine.SETRANGE("No.","Item No.");
        PurchLine.SETRANGE("Variant Code","Variant Code");
        PurchLine.SETRANGE("Buy-from Vendor No.","Cross-Reference Type No.");
        IF PurchLine.FIND('-') THEN
          REPEAT
            IF NOT
                  ((PurchLine."Document Type" = ExclDocType) AND
                  (PurchLine."Document No." = ExclDocNo) AND
                  (PurchLine."Line No." = ExclDocLineNo))
            THEN BEGIN
              PurchLine."Vendor Item Description" := Description;
              PurchLine.MODIFY;
            END;
          UNTIL PurchLine.NEXT = 0;

        ReqLine.RESET;
        ReqLine.SETRANGE(Type,ReqLine.Type::Item);
        ReqLine.SETRANGE("No.","Item No.");
        ReqLine.SETRANGE("Variant Code","Variant Code");
        ReqLine.SETRANGE("Vendor No.","Cross-Reference Type No.");
        IF ReqLine.FIND('-') THEN
          REPEAT
            IF NOT
                  ((ReqLine."Worksheet Template Name" = ExclWkshTemplateName) AND
                  (ReqLine."Journal Batch Name" = ExclWkshBatchName) AND
                  (ReqLine."Line No." = ExclWkshLineNo))
            THEN BEGIN
              ReqLine."Vendor Item Description" := Description;
              ReqLine.MODIFY;
            END;
          UNTIL ReqLine.NEXT = 0;

        PurchPrice.RESET;
        PurchPrice.SETRANGE("Item No.","Item No.");
        PurchPrice.SETRANGE("Vendor No.","Cross-Reference Type No.");
        PurchPrice.SETRANGE("Variant Code","Variant Code");
        IF PurchPrice.FIND('-') THEN
          REPEAT
            IF NOT
                  ((PurchPrice."Item No." = ExclItemNo) AND
                  (PurchPrice."Vendor No." = ExclVendorNo) AND
                  (PurchPrice."Starting Date" = ExclStartingDate) AND
                  (PurchPrice."Currency Code" = ExclCurrencyCode) AND
                  (PurchPrice."Variant Code" = ExclVariantCode) AND
                  (PurchPrice."Unit of Measure Code" = ExclUOMCode) AND
                  (PurchPrice."Minimum Quantity" = ExclMinQty))
            THEN BEGIN
              PurchPrice."Vendor Item Description" := Description;
              PurchPrice.MODIFY;
            END;
          UNTIL PurchPrice.NEXT = 0;
        END;
        // </TPZ135>
      END;
    END;

    [EventSubscriber(Codeunit,50092,Tb5717_OnSetPurchLineException)]
    PROCEDURE Tb5717_SetPurchLineException@1000000004(VAR Sender@1000000000 : Codeunit 50092;NewExclDocType@1000000001 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order';NewExclDocNo@1000000002 : Code[20];NewExclDocLineNo@1000000003 : Integer);
    BEGIN
      // <TPZ135>
      ExclDocType := NewExclDocType;
      ExclDocNo := NewExclDocNo;
      ExclDocLineNo := NewExclDocLineNo;
      // </TPZ135>
    END;

    [EventSubscriber(Codeunit,50092,Tb5717_OnSetReqWkshLineException)]
    PROCEDURE Tb5717_SetReqWkshLineException@1000000002(VAR Sender@1000000000 : Codeunit 50092;NewExclWkshTemplateName@1000000001 : Code[10];NewExclWkshBatchName@1000000002 : Code[10];NewExclWkshLineNo@1000000003 : Integer);
    BEGIN
      // <TPZ135>
      ExclWkshTemplateName := NewExclWkshTemplateName;
      ExclWkshBatchName := NewExclWkshBatchName;
      ExclWkshLineNo := NewExclWkshLineNo;
      // </TPZ135>
    END;

    [EventSubscriber(Codeunit,50092,Tb5717_OnSetPurchPriceException)]
    PROCEDURE Tb5717_SetPurchPriceException@1000000001(VAR Sender@1000000000 : Codeunit 50092;NewExclItemNo@1000000001 : Code[20];NewExclVendorNo@1000000002 : Code[20];NewExclStartingDate@1000000003 : Date;NewExclCurrencyCode@1000000004 : Code[10];NewExclVariantCode@1000000005 : Code[10];NewExclUOMCode@1000000006 : Code[10];NewExclMinQty@1000000007 : Decimal);
    BEGIN
      // <TPZ135>
      ExclItemNo := NewExclItemNo;
      ExclVendorNo := NewExclVendorNo;
      ExclStartingDate := NewExclStartingDate;
      ExclCurrencyCode := NewExclCurrencyCode;
      ExclVariantCode := NewExclVariantCode;
      ExclUOMCode := NewExclUOMCode;
      ExclMinQty := NewExclMinQty;
      // </TPZ135>
    END;

    [EventSubscriber(Codeunit,50092,Tb5717_OnCreateUPC)]
    PROCEDURE Tb5717_CreateUPC@1000000003("ItemNo."@1000000000 : Code[20]);
    VAR
      BarcodeBuffer@1000000001 : Record 50028;
      ItemCrossRef@1000000002 : Record 5717;
      NewItemCrossRef@1000000008 : Record 5717;
      InventorySetup@1000000003 : Record 313;
      BaseCode@1000000004 : Code[20];
      TEXT1@1000000005 : TextConst 'ENU=Item %1 already have a Barcode setup - Please Delete the records for Auto Generation';
      TEXT2@1000000006 : TextConst 'ENU=UPC Codes Created  - Please Check The Item Cross Reference table';
      Item@1000000007 : Record 27;
      Rec@1000000009 : Record 5717;
    BEGIN
      //<TPZ1759>     //Changed Tables from Barcode Conversion to Item Cross Reference 12/16/2016 EB
      //<TPZ82>
      WITH Rec DO BEGIN
        ItemCrossRef.SETRANGE("Cross-Reference Type","Cross-Reference Type"::"Bar Code");
        ItemCrossRef.SETRANGE("Item No.","ItemNo.");
        IF ItemCrossRef.FINDFIRST THEN
          ERROR(TEXT1,"ItemNo.");

        InventorySetup.GET(' ');

        ItemCrossRef.RESET();
        ItemCrossRef.SETFILTER("Item No.",'%1','');

        ItemCrossRef.SETRANGE("Cross-Reference Type","Cross-Reference Type"::"Bar Code");
        ItemCrossRef.SETRANGE("Unit of Measure",InventorySetup."Base UOM");
        IF ItemCrossRef.FINDFIRST THEN BEGIN

            NewItemCrossRef.INIT();
            NewItemCrossRef.TRANSFERFIELDS(ItemCrossRef);
            NewItemCrossRef."Item No.":="ItemNo.";
            NewItemCrossRef.INSERT;
            ItemCrossRef.DELETE();
            BaseCode:=COPYSTR(NewItemCrossRef."Cross-Reference No.",1,11);
            Item.GET("ItemNo.");
            Item."Item UPC/EAN Number":=NewItemCrossRef."Cross-Reference No.";
            Item.MODIFY();
        END;

        ItemCrossRef.RESET();
        ItemCrossRef.SETFILTER("Item No.",'%1','');
        ItemCrossRef.SETRANGE("Cross-Reference Type","Cross-Reference Type"::"Bar Code");
        ItemCrossRef.SETRANGE("Unit of Measure",InventorySetup."Master on Carton Code");
        ItemCrossRef.SETFILTER("Cross-Reference No.",'%1','*'+BaseCode+'*');
        IF ItemCrossRef.FINDFIRST THEN
            BEGIN
              NewItemCrossRef.INIT();
              NewItemCrossRef.TRANSFERFIELDS(ItemCrossRef);
              NewItemCrossRef."Item No.":="ItemNo.";
              NewItemCrossRef.INSERT;
              ItemCrossRef.DELETE();

            END ELSE BEGIN
                ItemCrossRef.RESET();
                ItemCrossRef.SETFILTER("Item No.",'%1','');
                ItemCrossRef.SETRANGE("Cross-Reference Type","Cross-Reference Type"::"Bar Code");
                ItemCrossRef.SETRANGE("Unit of Measure",InventorySetup."Master on Carton Code");
                IF ItemCrossRef.FINDFIRST THEN BEGIN
                  NewItemCrossRef.INIT();
                  NewItemCrossRef.TRANSFERFIELDS(ItemCrossRef);
                  NewItemCrossRef."Item No.":="ItemNo.";
                  NewItemCrossRef.INSERT;
                  ItemCrossRef.DELETE();

                END;
              END;

        ItemCrossRef.RESET();
        ItemCrossRef.SETFILTER("Item No.",'%1','');
        ItemCrossRef.SETRANGE("Cross-Reference Type","Cross-Reference Type"::"Bar Code");
        ItemCrossRef.SETRANGE("Unit of Measure",InventorySetup."Inner on Carton Code");
        ItemCrossRef.SETFILTER("Cross-Reference No.",'%1','*'+BaseCode+'*');
        IF ItemCrossRef.FINDFIRST THEN BEGIN

              NewItemCrossRef.INIT();
              NewItemCrossRef.TRANSFERFIELDS(ItemCrossRef);
              NewItemCrossRef."Item No.":="ItemNo.";
              NewItemCrossRef.INSERT;
              ItemCrossRef.DELETE();

        END ELSE BEGIN
            ItemCrossRef.RESET();
            ItemCrossRef.SETFILTER("Item No.",'%1','');
            ItemCrossRef.SETRANGE("Cross-Reference Type","Cross-Reference Type"::"Bar Code");
            ItemCrossRef.SETRANGE("Unit of Measure",InventorySetup."Inner on Carton Code");
            IF ItemCrossRef.FINDFIRST THEN BEGIN
              NewItemCrossRef.INIT();
              NewItemCrossRef.TRANSFERFIELDS(ItemCrossRef);
              NewItemCrossRef."Item No.":="ItemNo.";
              NewItemCrossRef.INSERT;
              ItemCrossRef.DELETE();


            END;
          END;
        MESSAGE(TEXT2);
      END;
      //<TPZ82>
      //</TPZ1759>
    END;

    BEGIN
    {
      TPZ2830  PSHUKLA
    }
    END.
  }
}

