OBJECT Codeunit 50015 Merge Item
{
  OBJECT-PROPERTIES
  {
    Date=07/09/20;
    Time=11:56:21 AM;
    Modified=Yes;
    Version List=TPZ000.00.00;
  }
  PROPERTIES
  {
    OnRun=VAR
            WSL@1000000000 : Record 7321;
          BEGIN
            WSL.GET('WS1158065', 70000);
            WSL."Qty. Picked" := 300;
            WSL."Qty. Picked (Base)" := 300;
            WSL."Qty. to Ship" := 300;
            WSL."Qty. to Ship (Base)" := 300;
            WSL.MODIFY;
            MESSAGE('DONE');
          END;

  }
  CODE
  {

    PROCEDURE MergeItem@1000000001(OldItemNo@1000000000 : Code[20];NewItemNo@1000000001 : Code[20]);
    VAR
      NewItem@1000000002 : Record 27;
      OldItem@1000000003 : Record 27;
      NewItemBackup@1000000004 : TEMPORARY Record 27;
      ItemUOM@1000000005 : Record 5404;
      DefaultDimension@1000000006 : Record 352;
      SKU@1000000007 : Record 5700;
      AvgCostAdjmtEntryPoint@1000000008 : Record 5804;
      NewAvgCostAdEntryPoint@1000000009 : Record 5804;
      SSWLike@1000000010 : Record 50000;
    BEGIN
      IF OldItemNo = '' THEN
        ERROR('Old Item No. must not be blank');

      IF NewItemNo = '' THEN
        ERROR('New Item No. must no be blank');

      //delete all item records that might caused record already exist error.
      IF NewItem.GET(NewItemNo) THEN BEGIN
        NewItemBackup.INIT;
        NewItemBackup.TRANSFERFIELDS(NewItem);
        NewItemBackup."No." := NewItem."No." + '-backup';
        NewItemBackup.INSERT;
        NewItem.DELETE;
      END;

      MergeInventoryHistory(OldItemNo, NewItemNo);
      MergeItemComment(OldItemNo, NewItemNo);
      MergeBinContent(OldItemNo, NewItemNo);

      SKU.SETRANGE("Item No.", OldItemNo);
      SKU.DELETEALL;

      ItemUOM.SETRANGE("Item No.", OldItemNo);
      ItemUOM.DELETEALL;

      IF SSWLike.GET(OldItemNo) THEN
        SSWLike.DELETE;

      AvgCostAdjmtEntryPoint.SETRANGE("Item No.", OldItemNo);
      IF AvgCostAdjmtEntryPoint.FINDSET THEN
      REPEAT
        NewAvgCostAdEntryPoint.SETRANGE("Item No.", NewItemNo);
        NewAvgCostAdEntryPoint.SETRANGE("Location Code", AvgCostAdjmtEntryPoint."Location Code");
        NewAvgCostAdEntryPoint.SETRANGE("Valuation Date", AvgCostAdjmtEntryPoint."Valuation Date");
        IF NewAvgCostAdEntryPoint.ISEMPTY = FALSE THEN
          AvgCostAdjmtEntryPoint.DELETE;
      UNTIL AvgCostAdjmtEntryPoint.NEXT = 0;

      DefaultDimension.SETRANGE("No.", OldItemNo);
      DefaultDimension.SETRANGE("Table ID", DATABASE::Item);
      DefaultDimension.DELETEALL;

      //renaming
      OldItem.GET(OldItemNo);
      OldItem.RENAME(NewItemNo);

      //restore item
      OldItem.DELETE;
      NewItem.TRANSFERFIELDS(NewItemBackup);
      NewItem."No." := NewItemNo;
      NewItem.INSERT;
    END;

    PROCEDURE MergeBinContent@1000000003(OldItemNo@1000000001 : Code[20];NewItemNo@1000000000 : Code[20]);
    VAR
      NewItemBinContent@1000000002 : Record 7302;
      OldItemBinContent@1000000003 : Record 7302;
    BEGIN
      OldItemBinContent.SETRANGE("Item No.", OldItemNo);
      IF OldItemBinContent.FINDSET THEN
      REPEAT
        IF NewItemBinContent.GET(OldItemBinContent."Location Code", OldItemBinContent."Bin Code", NewItemNo,
                                 OldItemBinContent."Variant Code", OldItemBinContent."Unit of Measure Code") THEN
         OldItemBinContent.DELETE;
      UNTIL OldItemBinContent.NEXT = 0;
    END;

    PROCEDURE MergeInventoryHistory@1000000000(OldItemNo@1000000001 : Code[20];NewItemNo@1000000000 : Code[20]);
    VAR
      NewItemInvHistory@1000000002 : Record 50044;
      OldItemInvHistory@1000000003 : Record 50044;
      NewItemInvHistDetail@1000000004 : Record 50045;
      OldItemInvHistDetail@1000000005 : Record 50045;
    BEGIN
      OldItemInvHistory.SETRANGE("Item No.", OldItemNo);
      IF OldItemInvHistory.FINDSET THEN
      REPEAT
        IF NewItemInvHistory.GET(NewItemNo, OldItemInvHistory."Location Code", OldItemInvHistory."Starting Date") THEN BEGIN
          NewItemInvHistory."Sales Qty." += OldItemInvHistory."Sales Qty.";
          NewItemInvHistory."Purch. Rcpt. Qty." += OldItemInvHistory."Purch. Rcpt. Qty.";
          NewItemInvHistory."Usage Adjmt. Qty." += OldItemInvHistory."Usage Adjmt. Qty.";
          NewItemInvHistory."Whse. Adjmt. Qty." += OldItemInvHistory."Whse. Adjmt. Qty.";
          NewItemInvHistory."Transfer Qty." += OldItemInvHistory."Transfer Qty.";
          NewItemInvHistory."Lost Opp. Qty." += OldItemInvHistory."Lost Opp. Qty.";
          NewItemInvHistory.Inventory += OldItemInvHistory.Inventory;
          NewItemInvHistory.MODIFY;

          OldItemInvHistory.DELETE;
        END;
      UNTIL OldItemInvHistory.NEXT = 0;

      OldItemInvHistDetail.SETRANGE("Item No.", OldItemNo);
      IF OldItemInvHistDetail.FINDSET THEN
      REPEAT
        IF NewItemInvHistDetail.GET(NewItemNo,OldItemInvHistDetail."Location Code", OldItemInvHistDetail."Posting Date") THEN BEGIN
          NewItemInvHistDetail."Sales Qty." += OldItemInvHistDetail."Sales Qty.";
          NewItemInvHistDetail.MODIFY;

          OldItemInvHistDetail.DELETE;
        END;
      UNTIL OldItemInvHistDetail.NEXT = 0;
    END;

    PROCEDURE MergeItemComment@1000000002(OldItemNo@1000000001 : Code[20];NewItemNo@1000000000 : Code[20]);
    VAR
      NewItemCommentLine@1000000002 : Record 97;
      OldItemCommentLine@1000000003 : Record 97;
      NewLineNo@1000000004 : Integer;
    BEGIN
      OldItemCommentLine.SETRANGE("Table Name", OldItemCommentLine."Table Name"::Item);
      OldItemCommentLine.SETRANGE("No.", OldItemNo);
      IF OldItemCommentLine.FINDSET THEN BEGIN
        NewLineNo := 10000;
        NewItemCommentLine.SETRANGE("Table Name", NewItemCommentLine."Table Name"::Item);
        NewItemCommentLine.SETRANGE("No.", NewItemNo);
        IF NewItemCommentLine.FINDLAST THEN
          NewLineNo := NewItemCommentLine."Line No." + 10000;
        NewItemCommentLine.RESET;
        REPEAT
          NewItemCommentLine.INIT;
          NewItemCommentLine.TRANSFERFIELDS(OldItemCommentLine);
          NewItemCommentLine."No." := NewItemNo;
          NewItemCommentLine."Line No." := NewLineNo;
          NewItemCommentLine.INSERT;
          NewLineNo += 10000;
          OldItemCommentLine.DELETE;
        UNTIL OldItemCommentLine.NEXT = 0
      END;
    END;

    BEGIN
    END.
  }
}

