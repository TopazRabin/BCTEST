OBJECT Codeunit 50016 Fill Rate Calculation
{
  OBJECT-PROPERTIES
  {
    Date=07/01/20;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=TPZ000.00.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            //CalcSalesShipmentFillRate(0D);
            //PopulateSalesShptLineOrderQty;
            UpdateBackOrderShipmentNo;
          END;

  }
  CODE
  {
    VAR
      HideShowProgressWindow@1000000000 : Boolean;

    PROCEDURE UpdateBackOrderShipmentNo@1000000013();
    VAR
      Window@1000000001 : Dialog;
      Counter@1000000000 : Integer;
      FillRateHeader@1000000002 : Record 50013;
      BackOrderShptNo@1000000003 : Integer;
    BEGIN
      FillRateHeader.SETRANGE("Perfect Order", FALSE);
      FillRateHeader.FINDSET;
      Window.OPEN('Updating Fill Rate Header: #1###### of #2######');
      Window.UPDATE(2, FillRateHeader.COUNT);

      REPEAT
        Counter += 1;
        Window.UPDATE(1, Counter);

        BackOrderShptNo := CalcSalesBackOrderShipmentNo(FillRateHeader."Order No.", FillRateHeader."Source No.", FillRateHeader."Posting Date");
        IF FillRateHeader."Back Order Shipment No." <> BackOrderShptNo THEN BEGIN
          FillRateHeader."Back Order Shipment No." := BackOrderShptNo;
          FillRateHeader.MODIFY;
        END;
      UNTIL FillRateHeader.NEXT = 0;
    END;

    PROCEDURE PopulateSalesShptLineOrderQty@1000000000();
    VAR
      SalesShptHeader@1000000002 : Record 110;
      Window@1000000001 : Dialog;
      Counter@1000000000 : Integer;
      SalesShptLine@1000000003 : Record 111;
      SalesLine@1000000004 : Record 37;
      OrderQtyFound@1000000005 : Boolean;
      SalesLineArchive@1000000006 : Record 5108;
    BEGIN
      IF SalesShptHeader.FINDSET = FALSE THEN
        EXIT;

      IF HideShowProgressWindow = FALSE THEN BEGIN
        Window.OPEN('Populating shipment Order Qty. #1###### of #2######');
        Window.UPDATE(2, SalesShptHeader.COUNT);
      END;

      REPEAT

        IF HideShowProgressWindow = FALSE THEN BEGIN
          Counter += 1;
          Window.UPDATE(1, Counter);
        END;

        SalesShptLine.SETRANGE("Document No.", SalesShptHeader."No.");
        IF SalesShptLine.FINDSET THEN
          REPEAT
            OrderQtyFound := FALSE;
            IF SalesShptLine."Order Quantity" <> 0 THEN
              OrderQtyFound := TRUE;

            IF OrderQtyFound = FALSE THEN
              IF SalesLine.GET(SalesLine."Document Type"::Order, SalesShptLine."Order No.", SalesShptLine."Order Line No.") THEN BEGIN
                SalesShptLine."Order Quantity" := SalesLine.Quantity;
                SalesShptLine."Order Quantity (Base)" := SalesLine."Quantity (Base)";
                SalesShptLine.MODIFY;
                OrderQtyFound := TRUE;
              END;

            IF OrderQtyFound = FALSE THEN BEGIN
              //Check sales line archive.
              SalesLineArchive.RESET;
              SalesLineArchive.SETRANGE("Document Type", SalesLineArchive."Document Type"::Order);
              SalesLineArchive.SETRANGE("Document No.", SalesShptLine."Order No.");
              SalesLineArchive.SETRANGE("Line No.", SalesShptLine."Order Line No.");
              SalesLineArchive.SETRANGE("No.", SalesShptLine."No.");
              IF SalesLineArchive.FINDLAST THEN BEGIN
                IF SalesLineArchive.Quantity >= SalesShptLine.Quantity THEN BEGIN
                  SalesShptLine."Order Quantity" := SalesLineArchive.Quantity;
                  SalesShptLine."Order Quantity (Base)" := SalesLineArchive."Quantity (Base)";
                  SalesShptLine.MODIFY;
                  OrderQtyFound := TRUE;
                END;
              END;
            END;

            IF OrderQtyFound = FALSE THEN BEGIN
              //Assume it was shipped in full
              SalesShptLine."Order Quantity" := SalesShptLine.Quantity;
              SalesShptLine."Order Quantity (Base)" := SalesShptLine."Quantity (Base)";
              SalesShptLine.MODIFY;
            END;
          UNTIL SalesShptLine.NEXT = 0;

      UNTIL SalesShptHeader.NEXT = 0;

      IF HideShowProgressWindow = FALSE THEN
        Window.CLOSE;
    END;

    PROCEDURE CalcSalesShipmentFillRate@1000000001(StartingDate@1000000003 : Date);
    VAR
      SalesShptHeader@1000000000 : Record 110;
      Window@1000000001 : Dialog;
      Counter@1000000002 : Integer;
    BEGIN
      IF StartingDate <> 0D THEN
        SalesShptHeader.SETFILTER("Posting Date", '>=%1', StartingDate);

      IF SalesShptHeader.FINDSET = FALSE THEN
        EXIT;

      IF HideShowProgressWindow = FALSE THEN BEGIN
        Window.OPEN('Calcualting Fill Rate, checking sales shipment records #1###### of #2######');
        Window.UPDATE(2, SalesShptHeader.COUNT);
      END;

      REPEAT

        IF HideShowProgressWindow = FALSE THEN BEGIN
          Counter += 1;
          Window.UPDATE(1, Counter);
        END;

        CreateSalesShptFillRateRec(SalesShptHeader);
      UNTIL SalesShptHeader.NEXT = 0;

      IF HideShowProgressWindow = FALSE THEN
        Window.CLOSE;
    END;

    PROCEDURE CreateSalesShptFillRateRec@1000000002(VAR SalesShptHeader@1000000000 : Record 110);
    VAR
      FillRateHeader@1000000001 : Record 50013;
      SalesShptLine@1000000002 : Record 111;
      PerfectOrder@1000000003 : Boolean;
    BEGIN
      IF FillRateHeader.GET(DATABASE::"Sales Shipment Header", 0, SalesShptHeader."No.") THEN
        EXIT;

      SalesShptLine.SETRANGE("Document No.", SalesShptHeader."No.");
      SalesShptLine.SETRANGE(Type, SalesShptLine.Type::Item);
      SalesShptLine.SETFILTER("No.", '<>%1', '');
      IF SalesShptLine.ISEMPTY THEN
        EXIT;

      //Calculate Perfect Order Fill Rate
      PerfectOrder := TRUE;

      IF SalesShptHeader."Shipment Date" <> SalesShptHeader."Posting Date" THEN
        PerfectOrder := FALSE;

      IF PerfectOrder = TRUE THEN BEGIN
        SalesShptLine.SETRANGE(Quantity, 0);
        IF SalesShptLine.ISEMPTY = FALSE THEN BEGIN
          PerfectOrder := FALSE;
        END ELSE BEGIN
          SalesShptLine.SETRANGE(Quantity);
          SalesShptLine.FINDSET;
          REPEAT
            IF SalesShptLine.Quantity <> SalesShptLine."Order Quantity" THEN
              PerfectOrder := FALSE;
          UNTIL (SalesShptLine.NEXT = 0) OR (PerfectOrder = FALSE)
        END;
      END;

      FillRateHeader.INIT;
      FillRateHeader."Source type" := DATABASE::"Sales Shipment Header";
      FillRateHeader."Source Subtype" := 0;
      FillRateHeader."Source No." := SalesShptHeader."No.";
      FillRateHeader."Order No." := SalesShptHeader."Order No.";

      IF SalesShptHeader."Shipment Date" = 0D THEN
        SalesShptHeader."Shipment Date" := SalesShptHeader."Posting Date";

      FillRateHeader."Shipment Date" := SalesShptHeader."Shipment Date";
      FillRateHeader."Shipment Year" := DATE2DMY(SalesShptHeader."Shipment Date", 3);
      FillRateHeader."Shipment Month" := DATE2DMY(SalesShptHeader."Shipment Date", 2);

      FillRateHeader."Posting Date" := SalesShptHeader."Posting Date";
      FillRateHeader."Posting Year" := DATE2DMY(SalesShptHeader."Posting Date", 3);
      FillRateHeader."Posting Month" := DATE2DMY(SalesShptHeader."Posting Date", 2);

      FillRateHeader."Perfect Order" := PerfectOrder;
      IF FillRateHeader."Perfect Order" = FALSE THEN
        FillRateHeader."Back Order Shipment No." := CalcSalesBackOrderShipmentNo(SalesShptHeader."Order No.", SalesShptHeader."No.", SalesShptHeader."Posting Date");

      FillRateHeader."Sell-to Customer No." := SalesShptHeader."Sell-to Customer No.";
      FillRateHeader."Sell-to Customer Name" := SalesShptHeader."Sell-to Customer Name";
      FillRateHeader."Sell-to Customer Name 2" := SalesShptHeader."Sell-to Customer Name 2";
      FillRateHeader."Sell-to Address" := SalesShptHeader."Sell-to Address";
      FillRateHeader."Sell-to Address 2" := SalesShptHeader."Sell-to Address 2";
      FillRateHeader."Sell-to City" := SalesShptHeader."Sell-to City";
      FillRateHeader."Sell-to Post Code" := SalesShptHeader."Sell-to Post Code";
      FillRateHeader."Sell-to County" := SalesShptHeader."Sell-to County";
      FillRateHeader."Sell-to Country/Region Code" := SalesShptHeader."Sell-to Country/Region Code";
      FillRateHeader."Location Code" := SalesShptHeader."Location Code";
      FillRateHeader."Shortcut Dimension 1 Code" := SalesShptHeader."Shortcut Dimension 1 Code";
      FillRateHeader."Shortcut Dimension 2 Code" := SalesShptHeader."Shortcut Dimension 2 Code";
      FillRateHeader."Shortcut Dimension 5 Code" := SalesShptHeader."Shortcut Dimension 5 Code";

      FillRateHeader.INSERT;
    END;

    PROCEDURE SetHideShowProgressWindow@1000000003(HideShowProgressWindow2@1000000000 : Boolean);
    BEGIN
      HideShowProgressWindow := HideShowProgressWindow2;
    END;

    PROCEDURE CalcSalesBackOrderShipmentNo@1000000004(SalesOrderNo@1000000000 : Code[20];SalesShipmentNo@1000000001 : Code[20];ShipmentPostingDate@1000000003 : Date) : Integer;
    VAR
      SalesShptHeader@1000000002 : Record 110;
    BEGIN
      SalesShptHeader.SETCURRENTKEY("Order No.");
      SalesShptHeader.SETRANGE("Order No.", SalesOrderNo);
      SalesShptHeader.SETFILTER("No.", '<>%1', SalesShipmentNo);
      SalesShptHeader.SETFILTER("Posting Date", '<=%1', ShipmentPostingDate);
      EXIT(SalesShptHeader.COUNT);
    END;

    BEGIN
    END.
  }
}

