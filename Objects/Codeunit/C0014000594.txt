OBJECT Codeunit 14000594 Calc. Cust. Dominated Items
{
  OBJECT-PROPERTIES
  {
    Date=07/01/18;
    Time=12:00:00 PM;
    Version List=UBP2.99;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            InvMgt.CreateLogEntry('',Text001,LogEntryNo);
            COMMIT;
            CustDominatedItems.RESET;
            CustDominatedItems.DELETEALL;
            COMMIT;

            Location.SETRANGE("Enable Adv. Forecasting",TRUE);
            IF Location.FINDSET THEN
              REPEAT
                ByLocation(Location.Code);
              UNTIL Location.NEXT = 0;

            InvMgt.CloseLogEntry(LogEntryNo,'');
          END;

  }
  CODE
  {
    VAR
      CustDominatedItems@1240020000 : Record 14097462;
      ForCustItem@1240020020 : Record 14002602;
      InvMgtSetup@1240020001 : Record 14000551;
      Item@1240020016 : Record 27;
      Location@1240020005 : Record 14;
      ProcUnit@1240020019 : Record 14000555;
      StockkeepingUnit@1240020018 : Record 5700;
      UsageLedgerEntry@1240020002 : Record 14000556;
      UsageLedgerEntry2@1240020003 : Record 14000556;
      InvMgt@1240020024 : Codeunit 14000553;
      ProgWindow@1240020004 : Dialog;
      Text001@1240020006 : TextConst 'ENU=Calculating Customer Dominated Items';
      Text002@1240020007 : TextConst 'ENU=Location';
      Text003@1240020008 : TextConst 'ENU=Item';
      LastEntryNo@1240020014 : Integer;
      LastItemNo@1240020010 : Code[50];
      LastVariantCode@1240020015 : Code[10];
      LastSourceNo@1240020011 : Code[20];
      StartDate@1240020009 : Date;
      CustQty@1240020012 : Decimal;
      TotalQty@1240020013 : Decimal;
      ItemCost@1240020017 : Decimal;
      TotalCount@1240020021 : Integer;
      CustSalesHits@1240020022 : Decimal;
      TotalSalesHits@1240020023 : Decimal;
      LogEntryNo@1240020025 : Integer;
      UBP@1240020026 : Codeunit 14000564;

    PROCEDURE ByLocation@1240020000(CurrLocationCode@1240020000 : Code[10]);
    BEGIN
      IF GUIALLOWED THEN BEGIN
        ProgWindow.OPEN(
          Text001 + '\' +
          PADSTR(Text002,12) + '#1#########\' +
          PADSTR(Text003,12) + '#2###################');
        ProgWindow.UPDATE(1,CurrLocationCode);
      END;

      IF CurrLocationCode <> Location.Code THEN
        Location.GET(CurrLocationCode);

      CustDominatedItems.RESET;
      IF CustDominatedItems.FIND('+') THEN
        LastEntryNo := CustDominatedItems."Entry No.";

      InvMgtSetup.GET;

      IF Location."Last Closed Period Date" = 0D THEN
        EXIT;

      StartDate :=
        CALCDATE(STRSUBSTNO('<+1D-%1M>',InvMgtSetup."Customer Dominant Periods"),
        Location."Last Closed Period Date");
      LastItemNo := '';
      LastSourceNo := '';
      UsageLedgerEntry.RESET;
      UsageLedgerEntry.SETCURRENTKEY(
        "Item No.","Location Code","Variant Code","Entry Type","Source No.","Usage Date","Exclude from Usage");
      UsageLedgerEntry.SETRANGE("Location Code",Location.Code);
      UsageLedgerEntry.SETRANGE("Entry Type",UsageLedgerEntry."Entry Type"::Sale);
      UsageLedgerEntry.SETFILTER("Source No.",'<>%1','');
      UsageLedgerEntry.SETFILTER("Usage Date",'%1..%2',StartDate,Location."Last Closed Period Date");
      IF UsageLedgerEntry.FINDSET THEN BEGIN
        REPEAT
          IF LastItemNo = '' THEN
            LastItemNo := UsageLedgerEntry."Item No.";
          IF LastSourceNo <> UsageLedgerEntry."Source No." THEN BEGIN
            CheckSourceNo;
          END;

          IF LastItemNo <> UsageLedgerEntry."Item No." THEN BEGIN
            CheckSourceNo;
            LastItemNo := UsageLedgerEntry."Item No.";
            LastVariantCode := UsageLedgerEntry."Variant Code";
            IF GUIALLOWED THEN
              ProgWindow.UPDATE(2,UsageLedgerEntry."Item No.");
            UsageLedgerEntry2.RESET;
            UsageLedgerEntry2.SETCURRENTKEY(
              "Item No.","Location Code","Variant Code","Entry Type","Source No.","Usage Date","Exclude from Usage");
            UsageLedgerEntry2.SETRANGE("Item No.",UsageLedgerEntry."Item No.");
            UsageLedgerEntry2.SETRANGE("Location Code",Location.Code);
            UsageLedgerEntry2.SETRANGE("Entry Type",UsageLedgerEntry2."Entry Type"::Sale);
            UsageLedgerEntry2.SETFILTER("Source No.",'<>%1','');
            UsageLedgerEntry2.SETFILTER("Usage Date",'%1..%2',StartDate,Location."Last Closed Period Date");
            UsageLedgerEntry2.CALCSUMS("Usage Hit",Quantity);
            TotalQty := - UsageLedgerEntry2.Quantity;
            TotalSalesHits := UsageLedgerEntry2."Usage Hit";
          END;
          CustQty := CustQty - UsageLedgerEntry.Quantity;
          IF UsageLedgerEntry.Quantity < 0 THEN
            CustSalesHits := CustSalesHits + 1;
        UNTIL UsageLedgerEntry.NEXT = 0;
        CheckSourceNo;
      END;

      IF GUIALLOWED THEN
        ProgWindow.CLOSE;
    END;

    PROCEDURE CheckSourceNo@1240020001();
    BEGIN
      IF TotalQty <> 0 THEN BEGIN
        IF CustQty >= TotalQty * (InvMgtSetup."Customer Dominant %" / 100) THEN BEGIN
          CustDominatedItems.INIT;
          CustDominatedItems."Customer No." := LastSourceNo;
          CustDominatedItems."Location Code" := Location.Code;
          CustDominatedItems."Item No." := LastItemNo;
          CustDominatedItems."Variant Code" := LastVariantCode;
          CustDominatedItems."Dominant Percent" := ROUND(((CustQty / TotalQty) * 100),0.1);
          IF CustDominatedItems."Dominant Percent" > 100 THEN
            CustDominatedItems."Dominant Percent" := 100;
          CustDominatedItems."Customer Units" := CustQty;

          ItemCost := UBP.GetUnitCost(CustDominatedItems."Location Code", CustDominatedItems."Item No.", CustDominatedItems."Variant Code");

          CustDominatedItems."Unit Cost" := ItemCost;
          CustDominatedItems."Customer COGS" := ROUND(ItemCost * CustQty,0.01);
          CustDominatedItems."Cust Sales Hits" := CustSalesHits;
          CustDominatedItems."Total Sales Hits" := TotalSalesHits;

          IF ForCustItem.GET(LastSourceNo,Location.Code,LastItemNo,LastVariantCode) THEN
            CustDominatedItems."Collaborative Cust. Item" := TRUE;

          IF (CustDominatedItems."Customer Units" > 0) AND
             (CustDominatedItems."Dominant Percent" > 0)
          THEN BEGIN
            LastEntryNo := LastEntryNo + 1;
            CustDominatedItems."Entry No." := LastEntryNo;
            CustDominatedItems.INSERT;
            TotalCount := TotalCount + 1;
            IF TotalCount MOD 500 = 0 THEN
              COMMIT;
          END;
        END;
      END;

      CustQty := 0;
      CustSalesHits := 0;
      LastSourceNo := UsageLedgerEntry."Source No.";
    END;

    BEGIN
    END.
  }
}

