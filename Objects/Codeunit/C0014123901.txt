OBJECT Codeunit 14123901 ES Common Dialog Management
{
  OBJECT-PROPERTIES
  {
    Date=05/25/12;
    Time=12:00:00 PM;
    Version List=ES1.30.09;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text003@1003 : TextConst 'ENU=Text Files (*.txt)|*.txt|All Files (*.*)|*.*';
      Text004@1004 : TextConst 'ENU=Microsoft Excel Files (*.xl*)|*.xl*|All Files (*.*)|*.*';
      Text005@1005 : TextConst 'ENU=Word Documents (*.doc)|*.doc|All Files (*.*)|*.*';
      Text006@1006 : TextConst 'ENU=XML files (*.xml)|*.xml|All Files (*.*)|*.*';
      Text007@1007 : TextConst 'ENU=HTM files (*.htm)|*.htm|All Files (*.*)|*.*';
      Text008@1008 : TextConst 'ENU=XML Schema Files (*.xsd)|*.xsd|All Files (*.*)|*.*';
      Text009@1009 : TextConst 'ENU=XSL Transform Files(*.xslt)|*.xslt|All Files (*.*)|*.*';

    PROCEDURE OpenFile@1(WindowTitle@1000 : Text[50];DefaultFileName@1001 : Text;DefaultFileType@1002 : ' ,Text,Excel,Word,Custom,Xml,Htm,Xsd,Xslt';FilterString@1003 : Text[250];Action@1004 : 'Open,Save') : Text;
    VAR
      FileDialog@1005 : DotNet "'System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Windows.Forms.FileDialog" RUNONCLIENT;
      OpenFileDialog@1006 : DotNet "'System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Windows.Forms.OpenFileDialog" RUNONCLIENT;
      SaveFileDialog@1008 : DotNet "'System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Windows.Forms.SaveFileDialog" RUNONCLIENT;
      Filter@1007 : Text[255];
      DefaultFolder@1009 : Text;
    BEGIN
      IF DefaultFileType = DefaultFileType::Custom THEN BEGIN
        GetDefaultFileType(DefaultFileName,DefaultFileType);
        Filter := FilterString;
      END ELSE
        Filter := GetFilterString(DefaultFileType);

      IF Action = Action::Open THEN BEGIN
        OpenFileDialog := OpenFileDialog.OpenFileDialog;
        OpenFileDialog.ShowReadOnly := FALSE;
        FileDialog := OpenFileDialog;
      END ELSE BEGIN
        SaveFileDialog := SaveFileDialog.SaveFileDialog;
        SaveFileDialog.CheckPathExists := TRUE;
        SaveFileDialog.OverwritePrompt := TRUE;
        FileDialog := SaveFileDialog;
      END;

      SplitFileName(DefaultFolder,DefaultFileName);
      FileDialog.FileName := DefaultFileName;
      FileDialog.Title := WindowTitle;
      FileDialog.Filter := Filter;
      FileDialog.InitialDirectory := DefaultFolder;

      FileDialog.ShowDialog;

      EXIT(FileDialog.FileName);
    END;

    LOCAL PROCEDURE GetDefaultFileType@3(DefaultFileName@1001 : Text;VAR DefaultFileType@1002 : ' ,Text,Excel,Word,Custom,Xml,Htm,Xsd,Xslt');
    BEGIN
      CASE TRUE OF
        CheckFileNameForFileType(DefaultFileName,'.DOC'):
          DefaultFileType := DefaultFileType::Word;
        CheckFileNameForFileType(DefaultFileName,'.XLS'):
          DefaultFileType := DefaultFileType::Excel;
        CheckFileNameForFileType(DefaultFileName,'.TXT'):
          DefaultFileType := DefaultFileType::Custom;
        CheckFileNameForFileType(DefaultFileName,'.XML'):
          DefaultFileType := DefaultFileType::Xml;
        CheckFileNameForFileType(DefaultFileName,'.HTM'):
          DefaultFileType := DefaultFileType::Htm;
        CheckFileNameForFileType(DefaultFileName,'.XSD'):
          DefaultFileType := DefaultFileType::Xsd;
        CheckFileNameForFileType(DefaultFileName,'.XSLT'):
          DefaultFileType := DefaultFileType::Xslt;
        ELSE
          DefaultFileType := DefaultFileType::Custom;
      END;
    END;

    LOCAL PROCEDURE CheckFileNameForFileType@4(DefaultFileName@1001 : Text;FileExtension@1002 : Text[5]) : Boolean;
    VAR
      Position@1003 : Integer;
    BEGIN
      Position := STRPOS(UPPERCASE(DefaultFileName),FileExtension);
      EXIT((Position > 0) AND (Position - 1 = STRLEN(DefaultFileName) - STRLEN(FileExtension)));
    END;

    PROCEDURE GetFilterString@5(FileType@1000 : ' ,Text,Excel,Word,Custom,Xml,Htm,Xsd,Xslt') : Text[255];
    BEGIN
      CASE FileType OF
        FileType::Text:
          EXIT(Text003);
        FileType::Excel:
          EXIT(Text004);
        FileType::Word:
          EXIT(Text005);
        FileType::Xml:
          EXIT(Text006);
        FileType::Htm:
          EXIT(Text007);
        FileType::Xsd:
          EXIT(Text008);
        FileType::Xslt:
          EXIT(Text009);
        FileType::Custom:
          EXIT('');
      END;
    END;

    PROCEDURE FlagFileMustExist@8() : Integer;
    BEGIN
      EXIT(4096);
    END;

    PROCEDURE FlagHideReadOnly@9() : Integer;
    BEGIN
      EXIT(4);
    END;

    PROCEDURE FlagPathMustExist@10() : Integer;
    BEGIN
      EXIT(2048);
    END;

    PROCEDURE FlagOverwritePrompt@11() : Integer;
    BEGIN
      EXIT(2);
    END;

    LOCAL PROCEDURE SplitFileName@12(VAR Path@1000 : Text;VAR FileName@1001 : Text);
    VAR
      i@1002 : Integer;
    BEGIN
      FOR i := STRLEN(FileName) DOWNTO 1 DO
        IF FileName[i] = '\' THEN BEGIN
          Path := COPYSTR(FileName,1,i);
          FileName := COPYSTR(FileName,i + 1);
          EXIT
        END
    END;

    BEGIN
    END.
  }
}

