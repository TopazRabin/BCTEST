OBJECT Codeunit 23044527 WHI Session Helper
{
  OBJECT-PROPERTIES
  {
    Date=11/26/19;
    Time=11:37:57 AM;
    Version List=WHI2.4.7684.0;
  }
  PROPERTIES
  {
    SingleInstance=Yes;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      trecEventParams@1000000000 : TEMPORARY Record 23044511;
      cuCommonFuncs@1000000001 : Codeunit 23044501;

    PROCEDURE CacheEventParameters@1000000003(VAR ptrecEventParameters@1000000000 : Record 23044511);
    BEGIN

      //
      // loop through all input, copy to
      // trecEventParams
      IF ptrecEventParameters.FINDSET(FALSE) THEN BEGIN
        REPEAT
          IF ( NOT trecEventParams.GET(ptrecEventParameters.Key)  ) THEN BEGIN
            trecEventParams := ptrecEventParameters;
            IF ( trecEventParams.INSERT ) THEN; // then nothing
          END;
        UNTIL (ptrecEventParameters.NEXT() = 0);
      END;
    END;

    PROCEDURE updateCachedValue@1000000004(psKey@1000000000 : Text;psValue@1000000001 : Text);
    BEGIN
      //<FUNC>
      //  Description: Will modify the key value pair or create one if not already existing
      //  Called From:
      //  Side Effect: None
      //</FUNC>

      IF ( trecEventParams.GET(psKey)  ) THEN BEGIN
        trecEventParams.Value := psValue;
        IF ( trecEventParams.MODIFY ) THEN;
      END ELSE BEGIN
        trecEventParams.INIT;
        trecEventParams.Key := psKey;
        trecEventParams.Value := psValue;
        IF ( trecEventParams.INSERT ) THEN;
      END;
    END;

    PROCEDURE GetDeviceConfig@1000000009(VAR precOutPDAConfig@1000000000 : Record 23044504);
    VAR
      lsValue@1000000001 : Text[250];
      lsUserName@1000000002 : Text[250];
    BEGIN
      // Returns the device Configuration, either cached from any previous calls with
      // this record, or it will attempt to fetch anew.
      cuCommonFuncs.getDeviceConfig(precOutPDAConfig,trecEventParams);
    END;

    PROCEDURE GetEvent@1000000012() liEvent : Integer;
    BEGIN
      //
      // Added to allow passing the event ID into a StartSession for
      // background printing in NAV 2013
      //
      EXIT( trecEventParams.getEvent() );
    END;

    PROCEDURE GetValue@1000000000(psKey@1000000000 : Text[50]) : Text[250];
    BEGIN
      EXIT(trecEventParams.getValue( psKey ));
    END;

    PROCEDURE GetValueAsBool@1000000001(psKey@1000000000 : Text[50]) lbResult : Boolean;
    VAR
      lsValue@1000000001 : Text[250];
    BEGIN
      EXIT( trecEventParams.getValueAsBool( psKey ) );
    END;

    PROCEDURE GetValueAsDecimal@1000000002(psKey@1000000000 : Text[50]) ldResult : Decimal;
    VAR
      lsValue@1000000001 : Text[250];
    BEGIN
      EXIT( trecEventParams.getValueAsDecimal( psKey ) );
    END;

    PROCEDURE GetValueAsInt@1000000011(psKey@1000000000 : Text[50]) liResult : Integer;
    VAR
      lsValue@1000000001 : Text[250];
    BEGIN
      EXIT( trecEventParams.getValueAsInt( psKey ) );
    END;

    PROCEDURE GetValueAsDate@1000000010(psKey@1000000000 : Text[50]) ldtResult : Date;
    VAR
      lsValue@1000000001 : Text[250];
    BEGIN
      EXIT( cuCommonFuncs.getValueAsDate( psKey,trecEventParams ) );
    END;

    PROCEDURE GetHasKey@1000000021(psKey@1000000000 : Text[50]) lbResult : Boolean;
    VAR
      lsValue@1000000001 : Text[250];
    BEGIN
      // True, if the key is supplied, false if they key is not available.
      EXIT( trecEventParams.getHasKey( psKey ) ) ;
    END;

    PROCEDURE GetValueAsDateTime@1000000032(psKey@1000000000 : Text[50]) ldtResult : DateTime;
    VAR
      lsValue@1000000001 : Text[250];
    BEGIN
      // return datetime
      EXIT( cuCommonFuncs.getValueAsDateTime( psKey,trecEventParams ) );
    END;

    PROCEDURE GetValueAsTime@1000000033(psKey@1000000000 : Text[50]) ldtResult : Time;
    VAR
      lsValue@1000000001 : Text[250];
    BEGIN
      // return time
      EXIT( trecEventParams.getValueAsTime( psKey ) );
    END;

    BEGIN
    {
      ************************
      Copyright Notice
      This objects content is copyright of Insight Works 2011.  All rights reserved.
      Any redistribution or reproduction of part or all of the contents in any form is prohibited.
      ************************

       **** This is a single instance codeunit ****

            This codeunit should be used when you need to retrieve a Device sent value for an event
            when the eventParameters are no longer accessible.
            The information is cached in the event broker.

            However, you must be in the same session for this to work.
    }
    END.
  }
}

