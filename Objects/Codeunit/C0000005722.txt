OBJECT Codeunit 5722 Item Category Management
{
  OBJECT-PROPERTIES
  {
    Date=04/24/20;
    Time=12:00:00 PM;
    Version List=NAVW111.00.00.42633;
  }
  PROPERTIES
  {
    EventSubscriberInstance=Manual;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      TempItemCategory@1000 : TEMPORARY Record 5722;

    [External]
    PROCEDURE UpdatePresentationOrder@3();
    VAR
      ItemCategory@1002 : Record 5722;
    BEGIN
      TempItemCategory.RESET;
      TempItemCategory.DELETEALL;
      IF ItemCategory.FINDSET(FALSE,FALSE) THEN
        REPEAT
          TempItemCategory.TRANSFERFIELDS(ItemCategory);
          TempItemCategory.INSERT;
        UNTIL ItemCategory.NEXT = 0;
      UpdatePresentationOrderIterative;
    END;

    LOCAL PROCEDURE UpdatePresentationOrderIterative@2();
    VAR
      ItemCategory@1000 : Record 5722;
      TempStack@1005 : TEMPORARY Record 9160;
      TempCurItemCategory@1004 : TEMPORARY Record 5722;
      CurItemCategoryID@1003 : RecordID;
      PresentationOrder@1001 : Integer;
      Indentation@1002 : Integer;
      HasChildren@1006 : Boolean;
    BEGIN
      PresentationOrder := 0;

      TempCurItemCategory.COPY(TempItemCategory,TRUE);

      TempItemCategory.SETCURRENTKEY("Parent Category");
      TempItemCategory.ASCENDING(FALSE);
      TempItemCategory.SETRANGE("Parent Category",'');
      IF TempItemCategory.FINDSET(FALSE,FALSE) THEN
        REPEAT
          TempStack.Push(TempItemCategory.RECORDID);
        UNTIL TempItemCategory.NEXT = 0;

      WHILE TempStack.Pop(CurItemCategoryID) DO BEGIN
        TempCurItemCategory.GET(CurItemCategoryID);
        HasChildren := FALSE;

        TempItemCategory.SETRANGE("Parent Category",TempCurItemCategory.Code);
        IF TempItemCategory.FINDSET(FALSE,FALSE) THEN
          REPEAT
            TempStack.Push(TempItemCategory.RECORDID);
            HasChildren := TRUE;
          UNTIL TempItemCategory.NEXT = 0;

        IF TempCurItemCategory."Parent Category" <> '' THEN BEGIN
          TempItemCategory.GET(TempCurItemCategory."Parent Category");
          Indentation := TempItemCategory.Indentation + 1;
        END ELSE
          Indentation := 0;
        PresentationOrder := PresentationOrder + 10000;

        IF (TempCurItemCategory."Presentation Order" <> PresentationOrder) OR
           (TempCurItemCategory.Indentation <> Indentation) OR (TempCurItemCategory."Has Children" <> HasChildren)
        THEN BEGIN
          ItemCategory.GET(TempCurItemCategory.Code);
          ItemCategory.VALIDATE("Presentation Order",PresentationOrder);
          ItemCategory.VALIDATE(Indentation,Indentation);
          ItemCategory.VALIDATE("Has Children",HasChildren);
          ItemCategory.MODIFY;
          TempItemCategory.GET(TempCurItemCategory.Code);
          TempItemCategory.VALIDATE("Presentation Order",PresentationOrder);
          TempItemCategory.VALIDATE(Indentation,Indentation);
          TempItemCategory.VALIDATE("Has Children",HasChildren);
          TempItemCategory.MODIFY;
        END;
      END;
    END;

    [External]
    PROCEDURE DoesValueExistInItemCategories@5(Text@1000 : Code[20];VAR ItemCategory@1001 : Record 5722) : Boolean;
    BEGIN
      ItemCategory.RESET;
      ItemCategory.SETFILTER(Code,'@' + Text);
      EXIT(ItemCategory.FINDSET);
    END;

    PROCEDURE CalcPresentationOrder@8(VAR ItemCategory@1000 : Record 5722);
    VAR
      ItemCategorySearch@1001 : Record 5722;
      ItemCategoryPrev@1002 : Record 5722;
      ItemCategoryNext@1003 : Record 5722;
      ItemCategoryPrevExists@1004 : Boolean;
      ItemCategoryNextExists@1005 : Boolean;
    BEGIN
      WITH ItemCategory DO BEGIN
        IF HasChildren THEN BEGIN
          "Presentation Order" := 0;
          EXIT;
        END;

        ItemCategoryPrev.SETRANGE("Parent Category","Parent Category");
        ItemCategoryPrev.SETFILTER(Code,'<%1',Code);
        ItemCategoryPrevExists := ItemCategoryPrev.FINDLAST;
        IF NOT ItemCategoryPrevExists THEN
          ItemCategoryPrevExists := ItemCategoryPrev.GET("Parent Category")
        ELSE
          ItemCategoryPrev.GET(GetLastChildCode(ItemCategoryPrev.Code));

        ItemCategoryNext.SETRANGE("Parent Category","Parent Category");
        ItemCategoryNext.SETFILTER(Code,'>%1',Code);
        ItemCategoryNextExists := ItemCategoryNext.FINDFIRST;
        IF NOT ItemCategoryNextExists AND ItemCategoryPrevExists THEN BEGIN
          ItemCategoryNext.RESET;
          ItemCategoryNext.SETCURRENTKEY("Presentation Order");
          ItemCategoryNext.SETFILTER(Code,'<>%1',Code);
          ItemCategoryNext.SETFILTER("Presentation Order",'>%1',ItemCategoryPrev."Presentation Order");
          ItemCategoryNextExists := ItemCategoryNext.FINDFIRST;
        END;

        CASE TRUE OF
          NOT ItemCategoryPrevExists AND NOT ItemCategoryNextExists:
            "Presentation Order" := 10000;
          NOT ItemCategoryPrevExists AND ItemCategoryNextExists:
            "Presentation Order" := ItemCategoryNext."Presentation Order" DIV 2;
          ItemCategoryPrevExists AND NOT ItemCategoryNextExists:
            "Presentation Order" := ItemCategoryPrev."Presentation Order" + 10000;
          ItemCategoryPrevExists AND ItemCategoryNextExists:
            "Presentation Order" := (ItemCategoryPrev."Presentation Order" + ItemCategoryNext."Presentation Order") DIV 2;
        END;

        ItemCategorySearch.SETRANGE("Presentation Order","Presentation Order");
        ItemCategorySearch.SETFILTER(Code,'<>%1',Code);
        IF NOT ItemCategorySearch.ISEMPTY THEN
          "Presentation Order" := 0;
      END;
    END;

    PROCEDURE CheckPresentationOrder@1();
    VAR
      ItemCategory@1000 : Record 5722;
    BEGIN
      ItemCategory.SETRANGE("Presentation Order",0);
      IF NOT ItemCategory.ISEMPTY THEN
        UpdatePresentationOrder;
    END;

    LOCAL PROCEDURE GetLastChildCode@7(ParentCode@1000 : Code[20]) ChildCode : Code[20];
    VAR
      TempStack@1001 : TEMPORARY Record 9160;
      ItemCategory@1002 : Record 5722;
      RecId@1003 : RecordID;
    BEGIN
      ChildCode := ParentCode;

      ItemCategory.ASCENDING(FALSE);
      ItemCategory.SETRANGE("Parent Category",ParentCode);
      IF ItemCategory.FINDSET THEN
        REPEAT
          TempStack.Push(ItemCategory.RECORDID);
        UNTIL ItemCategory.NEXT = 0;

      WHILE TempStack.Pop(RecId) DO BEGIN
        ItemCategory.GET(RecId);
        ChildCode := ItemCategory.Code;

        ItemCategory.SETRANGE("Parent Category",ItemCategory.Code);
        IF ItemCategory.FINDSET THEN
          REPEAT
            TempStack.Push(ItemCategory.RECORDID);
          UNTIL ItemCategory.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

