OBJECT Codeunit 14000903 E-Mail Management
{
  OBJECT-PROPERTIES
  {
    Date=07/07/21;
    Time=[ 2:12:17 PM];
    Modified=Yes;
    Version List=SE0.60.03,001;
  }
  PROPERTIES
  {
    Permissions=TableData 297=rm,
                TableData 304=rm;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      EMailSetup@1240030000 : Record 14000905;
      EMailSetupRetrieved@1240030001 : Boolean;
      Text001@1001 : TextConst 'ENU=No Email Rule has been setup.';
      Text002@1002 : TextConst 'ENU=No E-Mail Receivers';
      Text003@1003 : TextConst 'ENU=Unknown Field %1.';

    PROCEDURE SendSalesShipmentNotice@1(SalesShipmentHeader@1240030000 : Record 110;ManualSending@1240030001 : Boolean;BatchSending@1240030002 : Boolean);
    VAR
      EMailListEntryTmp@1240030003 : TEMPORARY Record 14000908;
      SalesShipmentEMail@1240030004 : Report 14000902;
    BEGIN
      IF SalesShipmentHeader."No." = '' THEN
        EXIT;

      IF NOT BatchSending THEN BEGIN
        GetEMailSetup;
        IF ManualSending THEN BEGIN
          IF EMailSetup."Show Error on Manual Sending" THEN BEGIN
            CLEAR(SalesShipmentEMail);
            SalesShipmentEMail.InitializeRequest(SalesShipmentHeader."No.",BatchSending);
            SalesShipmentEMail.GetReceiverList(EMailListEntryTmp);

            IF NOT TestShowManualSending(
                     EMailListEntryTmp,
                     0,SalesShipmentHeader."Sell-to Customer No.",SalesShipmentHeader."Ship-to Code",
                     EMailListEntryTmp.FIELDNO("Sales Shipment E-Mail"),
                     DATABASE::"Sales Shipment Header",0,SalesShipmentHeader."No.",'')
            THEN
              EXIT;
          END;
        END ELSE
          IF NOT EMailSetup."Automatic Sales Shpmt. E-Mail" THEN
            EXIT;
      END;

      CLEAR(SalesShipmentEMail);
      SalesShipmentEMail.InitializeRequest(SalesShipmentHeader."No.",BatchSending);
      SalesShipmentEMail.USEREQUESTPAGE(FALSE);
      SalesShipmentEMail.RUNMODAL;
    END;

    PROCEDURE SendSalesInvoiceNotice@2(SalesInvoiceHeader@1240030000 : Record 112;ManualSending@1240030001 : Boolean;BatchSending@1240030002 : Boolean);
    VAR
      EMailListEntryTmp@1240030003 : TEMPORARY Record 14000908;
      SalesInvoiceEMail@1240030004 : Report 14000903;
    BEGIN
      IF SalesInvoiceHeader."No." = '' THEN
        EXIT;

      IF NOT BatchSending THEN BEGIN
        GetEMailSetup;
        IF ManualSending THEN BEGIN
          IF EMailSetup."Show Error on Manual Sending" THEN BEGIN
            CLEAR(SalesInvoiceEMail);
            SalesInvoiceEMail.InitializeRequest(SalesInvoiceHeader."No.",BatchSending);
            SalesInvoiceEMail.GetReceiverList(EMailListEntryTmp);

            IF NOT TestShowManualSending(
                     EMailListEntryTmp,
                     0,SalesInvoiceHeader."Sell-to Customer No.",SalesInvoiceHeader."Ship-to Code",
                     EMailListEntryTmp.FIELDNO("Sales Invoice E-Mail"),
                     DATABASE::"Sales Invoice Header",0,SalesInvoiceHeader."No.",'')
            THEN
              EXIT;
          END;
        END ELSE
          IF NOT EMailSetup."Automatic Sales Invoice E-Mail" THEN
            EXIT;
      END;

      CLEAR(SalesInvoiceEMail);
      SalesInvoiceEMail.InitializeRequest(SalesInvoiceHeader."No.",BatchSending);
      SalesInvoiceEMail.USEREQUESTPAGE(FALSE);
      SalesInvoiceEMail.SetSMTP365(TRUE); //TPZ1788
      SalesInvoiceEMail.RUNMODAL;
    END;

    PROCEDURE SendSalesCrMemoNotice@1000000006(SalesCrMemoHeader@1240030000 : Record 114;ManualSending@1240030001 : Boolean;BatchSending@1240030002 : Boolean);
    VAR
      EMailListEntryTmp@1240030003 : TEMPORARY Record 14000908;
      SalesCrMemoEMail@1240030004 : Report 51020;
    BEGIN
      // <TPZ143>
      IF SalesCrMemoHeader."No." = '' THEN
        EXIT;

      IF NOT BatchSending THEN BEGIN
        GetEMailSetup;
        IF ManualSending THEN BEGIN
          IF EMailSetup."Show Error on Manual Sending" THEN BEGIN
            CLEAR(SalesCrMemoEMail);
            SalesCrMemoEMail.InitializeRequest(SalesCrMemoHeader."No.",BatchSending);
            SalesCrMemoEMail.GetReceiverList(EMailListEntryTmp);

            IF NOT TestShowManualSending(
                     EMailListEntryTmp,
                     0,SalesCrMemoHeader."Sell-to Customer No.",'',
                     EMailListEntryTmp.FIELDNO("Sales Credit Memo E-Mail"),
                     DATABASE::"Sales Cr.Memo Header",0,SalesCrMemoHeader."No.",'')
            THEN
              EXIT;
          END;
        END ELSE
          IF NOT EMailSetup."Automatic Sales Cr. M. E-Mail" THEN
            EXIT;
      END;

      CLEAR(SalesCrMemoEMail);
      SalesCrMemoEMail.InitializeRequest(SalesCrMemoHeader."No.",BatchSending);
      SalesCrMemoEMail.USEREQUESTPAGE(FALSE);
      //>>001 TPZ3222
      //SalesCrMemoEMail.SetSMTP365(TRUE); //<TPZ2430>
      //<<001 TPZ3222
      SalesCrMemoEMail.RUNMODAL;
      // </TPZ143>
    END;

    PROCEDURE SendSalesConfirmation@3(SalesHeader@1240030000 : Record 36;ManualSending@1240030001 : Boolean;BatchSending@1240030002 : Boolean);
    VAR
      EMailListEntryTmp@1240030003 : TEMPORARY Record 14000908;
      SalesOrderEMail@1240030004 : Report 14000901;
    BEGIN
      //<TPZ2430>
      IF SalesHeader."No." = '' THEN
        EXIT;
      //</TPZ2430>

      IF NOT BatchSending THEN BEGIN
        GetEMailSetup;
        IF ManualSending THEN BEGIN
          IF EMailSetup."Show Error on Manual Sending" THEN BEGIN
            CLEAR(SalesOrderEMail);
            SalesOrderEMail.InitializeRequest(SalesHeader."Document Type",SalesHeader."No.",BatchSending);
            SalesOrderEMail.GetReceiverList(EMailListEntryTmp);

            CASE SalesHeader."Document Type" OF
              SalesHeader."Document Type"::Quote:
                IF NOT TestShowManualSending(
                         EMailListEntryTmp,
                         0,SalesHeader."Sell-to Customer No.",SalesHeader."Ship-to Code",
                         EMailListEntryTmp.FIELDNO("Sales Quote Conf. E-Mail"),
                         DATABASE::"Sales Header",SalesHeader."Document Type",SalesHeader."No.",'')
                THEN
                  EXIT;
              SalesHeader."Document Type"::Order:
                IF NOT TestShowManualSending(
                         EMailListEntryTmp,
                         0,SalesHeader."Sell-to Customer No.",SalesHeader."Ship-to Code",
                         EMailListEntryTmp.FIELDNO("Sales Order Conf. E-Mail"),
                         DATABASE::"Sales Header",SalesHeader."Document Type",SalesHeader."No.",'')
                THEN
                  EXIT;
              SalesHeader."Document Type"::Invoice:
                IF NOT TestShowManualSending(
                         EMailListEntryTmp,
                         0,SalesHeader."Sell-to Customer No.",SalesHeader."Ship-to Code",
                         EMailListEntryTmp.FIELDNO("Sales Invoice Conf. E-Mail"),
                         DATABASE::"Sales Header",SalesHeader."Document Type",SalesHeader."No.",'')
                THEN
                  EXIT;
              SalesHeader."Document Type"::"Credit Memo":
                IF NOT TestShowManualSending(
                         EMailListEntryTmp,
                         0,SalesHeader."Sell-to Customer No.",SalesHeader."Ship-to Code",
                         EMailListEntryTmp.FIELDNO("Sales Credit Memo Conf. E-Mail"),
                         DATABASE::"Sales Header",SalesHeader."Document Type",SalesHeader."No.",'')
                THEN
                  EXIT;
              SalesHeader."Document Type"::"Blanket Order":
                IF NOT TestShowManualSending(
                         EMailListEntryTmp,
                         0,SalesHeader."Sell-to Customer No.",SalesHeader."Ship-to Code",
                         EMailListEntryTmp.FIELDNO("Sales Bl. Order Conf. E-Mail"),
                         DATABASE::"Sales Header",SalesHeader."Document Type",SalesHeader."No.",'')
                THEN
                  EXIT;
              SalesHeader."Document Type"::"Return Order":
                IF NOT TestShowManualSending(
                         EMailListEntryTmp,
                         0,SalesHeader."Sell-to Customer No.",SalesHeader."Ship-to Code",
                         EMailListEntryTmp.FIELDNO("Sales Ret. Order Conf. E-Mail"),
                         DATABASE::"Sales Header",SalesHeader."Document Type",SalesHeader."No.",'')
                THEN
                  EXIT;
            END;
          END;
        END ELSE
          IF NOT EMailSetup."Automatic Sales Confirm E-Mail" THEN
            EXIT;
      END;

      CLEAR(SalesOrderEMail);
      SalesOrderEMail.InitializeRequest(SalesHeader."Document Type",SalesHeader."No.",BatchSending);
      SalesOrderEMail.USEREQUESTPAGE(FALSE);
      //>>001 TPZ3222
      //SalesOrderEMail.SetSMTP365(TRUE); //<TPZ2430>
      //<<001 TPZ3222
      SalesOrderEMail.RUNMODAL;
    END;

    PROCEDURE SendBillOfLadingNotification@5(BillOfLading@1240030000 : Record 14000822;ManualSending@1240030001 : Boolean;BatchSending@1240030002 : Boolean);
    VAR
      EMailListEntryTmp@1240030003 : TEMPORARY Record 14000908;
      BillOfLadingEMail@1240030004 : Report 14000908;
    BEGIN
      //<TPZ2430>
      IF BillOfLading."No." = '' THEN
        EXIT;
      //</TPZ2430>

      IF NOT BatchSending THEN BEGIN
        GetEMailSetup;
        IF ManualSending THEN BEGIN
          IF EMailSetup."Show Error on Manual Sending" THEN BEGIN
            CLEAR(BillOfLadingEMail);
            BillOfLadingEMail.InitializeRequest(BillOfLading."No.",TRUE);
            BillOfLadingEMail.GetReceiverList(EMailListEntryTmp);

            IF NOT TestShowManualSending(
                     EMailListEntryTmp,
                     BillOfLading."Ship-to Type",BillOfLading."Ship-to No.",BillOfLading."Ship-to Code",
                     EMailListEntryTmp.FIELDNO("Bill of Lading E-Mail"),
                     DATABASE::"Bill of Lading",0,BillOfLading."No.",'')
            THEN
              EXIT;
          END;
        END ELSE
          IF NOT EMailSetup."Automatic Bill of Lad. E-Mail" THEN
            EXIT;
      END;

      CLEAR(BillOfLadingEMail);
      BillOfLadingEMail.InitializeRequest(BillOfLading."No.",TRUE);
      BillOfLadingEMail.USEREQUESTPAGE(FALSE);
      //>>001 TPZ3222
      //BillOfLadingEMail.SetSMTP365(TRUE); //<TPZ2430>
      //<<001 TPZ3222
      BillOfLadingEMail.RUNMODAL;
    END;

    PROCEDURE SendCustomerStatement@6(Customer@1240030000 : Record 18;ManualSending@1240030001 : Boolean;BatchSending@1240030002 : Boolean);
    VAR
      EMailListEntryTmp@1240030003 : TEMPORARY Record 14000908;
      CustomerStatementEMail@1240030004 : Report 14000910;
    BEGIN
      IF NOT BatchSending THEN BEGIN
        GetEMailSetup;
        IF ManualSending THEN BEGIN
          IF EMailSetup."Show Error on Manual Sending" THEN BEGIN
            CLEAR(CustomerStatementEMail);
            CustomerStatementEMail.InitializeRequest(Customer."No.",BatchSending);
            CustomerStatementEMail.GetReceiverList(EMailListEntryTmp);

            IF NOT TestShowManualSending(
                     EMailListEntryTmp,
                     0,Customer."No.",'',EMailListEntryTmp.FIELDNO("Customer Statement E-Mail"),
                     DATABASE::Customer,0,Customer."No.",'')
            THEN
              EXIT;
          END;
        END ELSE
          IF NOT EMailSetup."Automatic Sales Confirm E-Mail" THEN
            EXIT;
      END;

      CLEAR(CustomerStatementEMail);
      CustomerStatementEMail.InitializeRequest(Customer."No.",BatchSending);
      CustomerStatementEMail.USEREQUESTPAGE(FALSE);
      //>>001 TPZ3222
      //CustomerStatementEMail.SetSMTP365(TRUE); //<TPZ2430>
      //<<001 TPZ3222
      CustomerStatementEMail.RUNMODAL;
    END;

    PROCEDURE SendPurchaseConfirmation@8(PurchaseHeader@1240030000 : Record 38;ManualSending@1240030001 : Boolean;BatchSending@1240030002 : Boolean);
    VAR
      EMailListEntryTmp@1240030003 : TEMPORARY Record 14000908;
      PurchaseEMail@1240030004 : Report 14000914;
    BEGIN
      IF NOT BatchSending THEN BEGIN
        GetEMailSetup;
        IF ManualSending THEN BEGIN
          IF EMailSetup."Show Error on Manual Sending" THEN BEGIN
            CLEAR(PurchaseEMail);
            PurchaseEMail.InitializeRequest(PurchaseHeader."Document Type",PurchaseHeader."No.",BatchSending);
            PurchaseEMail.GetReceiverList(EMailListEntryTmp);

            CASE PurchaseHeader."Document Type" OF
              PurchaseHeader."Document Type"::Quote:
                IF NOT TestShowManualSending(
                         EMailListEntryTmp,
                         1,PurchaseHeader."Buy-from Vendor No.",PurchaseHeader."Order Address Code",
                         EMailListEntryTmp.FIELDNO("Purchase Quote Conf. E-Mail"),
                         DATABASE::"Purchase Header",PurchaseHeader."Document Type",PurchaseHeader."No.",'')
                THEN
                  EXIT;
              PurchaseHeader."Document Type"::Order:
                IF NOT TestShowManualSending(
                         EMailListEntryTmp,
                         1,PurchaseHeader."Buy-from Vendor No.",PurchaseHeader."Order Address Code",
                         EMailListEntryTmp.FIELDNO("Purchase Order Conf. E-Mail"),
                         DATABASE::"Purchase Header",PurchaseHeader."Document Type",PurchaseHeader."No.",'')
                THEN
                  EXIT;
              PurchaseHeader."Document Type"::Invoice:
                IF NOT TestShowManualSending(
                         EMailListEntryTmp,
                         1,PurchaseHeader."Buy-from Vendor No.",PurchaseHeader."Order Address Code",
                         EMailListEntryTmp.FIELDNO("Purchase Invoice Conf. E-Mail"),
                         DATABASE::"Purchase Header",PurchaseHeader."Document Type",PurchaseHeader."No.",'')
                THEN
                  EXIT;
              PurchaseHeader."Document Type"::"Credit Memo":
                IF NOT TestShowManualSending(
                         EMailListEntryTmp,
                         1,PurchaseHeader."Buy-from Vendor No.",PurchaseHeader."Order Address Code",
                         EMailListEntryTmp.FIELDNO("Purchase Cr. Memo Conf. E-Mail"),
                         DATABASE::"Purchase Header",PurchaseHeader."Document Type",PurchaseHeader."No.",'')
                THEN
                  EXIT;
              PurchaseHeader."Document Type"::"Blanket Order":
                IF NOT TestShowManualSending(
                         EMailListEntryTmp,
                         1,PurchaseHeader."Buy-from Vendor No.",PurchaseHeader."Order Address Code",
                         EMailListEntryTmp.FIELDNO("Purch. Bl. Order Conf. E-Mail"),
                         DATABASE::"Purchase Header",PurchaseHeader."Document Type",PurchaseHeader."No.",'')
                THEN
                  EXIT;
              PurchaseHeader."Document Type"::"Return Order":
                IF NOT TestShowManualSending(
                         EMailListEntryTmp,
                         1,PurchaseHeader."Buy-from Vendor No.",PurchaseHeader."Order Address Code",
                         EMailListEntryTmp.FIELDNO("Purch. Ret. Order Conf. E-Mail"),
                         DATABASE::"Purchase Header",PurchaseHeader."Document Type",PurchaseHeader."No.",'')
                THEN
                  EXIT;
            END;
          END;
        END ELSE
          IF NOT EMailSetup."Automatic Purch. Conf. E-Mail" THEN
            EXIT;
      END;

      CLEAR(PurchaseEMail);
      PurchaseEMail.InitializeRequest(PurchaseHeader."Document Type",PurchaseHeader."No.",BatchSending);
      PurchaseEMail.USEREQUESTPAGE(FALSE);
      PurchaseEMail.RUNMODAL;
    END;

    PROCEDURE SendPurchaseReceiptNotice@14(PurchReceiptHeader@1240030000 : Record 120;ManualSending@1240030001 : Boolean;BatchSending@1240030002 : Boolean);
    VAR
      EMailListEntryTmp@1240030003 : TEMPORARY Record 14000908;
      PurchReceiptEMail@1240030004 : Report 14000920;
    BEGIN
      IF PurchReceiptHeader."No." = '' THEN
        EXIT;

      IF NOT BatchSending THEN BEGIN
        GetEMailSetup;
        IF ManualSending THEN BEGIN
          IF EMailSetup."Show Error on Manual Sending" THEN BEGIN
            CLEAR(PurchReceiptEMail);
            PurchReceiptEMail.InitializeRequest(PurchReceiptHeader."No.",BatchSending);
            PurchReceiptEMail.GetReceiverList(EMailListEntryTmp);

            IF NOT TestShowManualSending(
                     EMailListEntryTmp,
                     1,PurchReceiptHeader."Buy-from Vendor No.",PurchReceiptHeader."Order Address Code",
                     EMailListEntryTmp.FIELDNO("Purchase Receipt E-Mail"),
                     DATABASE::"Purch. Rcpt. Header",0,PurchReceiptHeader."No.",'')
            THEN
              EXIT;
          END;
        END ELSE
          IF NOT EMailSetup."Automatic Purch. Rcpt. E-Mail" THEN
            EXIT;
      END;

      CLEAR(PurchReceiptEMail);
      PurchReceiptEMail.InitializeRequest(PurchReceiptHeader."No.",BatchSending);
      PurchReceiptEMail.USEREQUESTPAGE(FALSE);
      PurchReceiptEMail.RUNMODAL;
    END;

    PROCEDURE SendPurchaseInvoiceNotice@13(PurchInvoiceHeader@1240030000 : Record 122;ManualSending@1240030001 : Boolean;BatchSending@1240030002 : Boolean);
    VAR
      EMailListEntryTmp@1240030003 : TEMPORARY Record 14000908;
      PurchInvoiceEMail@1240030004 : Report 14000921;
    BEGIN
      IF PurchInvoiceHeader."No." = '' THEN
        EXIT;

      IF NOT BatchSending THEN BEGIN
        GetEMailSetup;
        IF ManualSending THEN BEGIN
          IF EMailSetup."Show Error on Manual Sending" THEN BEGIN
            CLEAR(PurchInvoiceEMail);
            PurchInvoiceEMail.InitializeRequest(PurchInvoiceHeader."No.",BatchSending);
            PurchInvoiceEMail.GetReceiverList(EMailListEntryTmp);

            IF NOT TestShowManualSending(
                     EMailListEntryTmp,
                     1,PurchInvoiceHeader."Buy-from Vendor No.",PurchInvoiceHeader."Order Address Code",
                     EMailListEntryTmp.FIELDNO("Purchase Invoice E-Mail"),
                     DATABASE::"Purch. Inv. Header",0,PurchInvoiceHeader."No.",'')
            THEN
              EXIT;
          END;
        END ELSE
          IF NOT EMailSetup."Automatic Purch. Inv. E-Mail" THEN
            EXIT;
      END;

      CLEAR(PurchInvoiceEMail);
      PurchInvoiceEMail.InitializeRequest(PurchInvoiceHeader."No.",BatchSending);
      PurchInvoiceEMail.USEREQUESTPAGE(FALSE);
      PurchInvoiceEMail.RUNMODAL;
    END;

    PROCEDURE SendIssuedReminderConfirmation@9(IssuedReminderHeader@1240030000 : Record 297;ManualSending@1240030001 : Boolean;BatchSending@1240030002 : Boolean);
    VAR
      EMailListEntryTmp@1240030003 : TEMPORARY Record 14000908;
      IssuedReminderEMail@1240030004 : Report 14000916;
    BEGIN
      IF NOT BatchSending THEN BEGIN
        GetEMailSetup;
        IF ManualSending THEN BEGIN
          IF EMailSetup."Show Error on Manual Sending" THEN BEGIN
            CLEAR(IssuedReminderEMail);
            IssuedReminderEMail.InitializeRequest(IssuedReminderHeader."No.",BatchSending);
            IssuedReminderEMail.GetReceiverList(EMailListEntryTmp);

            IF NOT TestShowManualSending(
                     EMailListEntryTmp,
                     0,IssuedReminderHeader."Customer No.",'',
                     EMailListEntryTmp.FIELDNO("Issued Reminder E-Mail"),
                     DATABASE::"Issued Reminder Header",0,IssuedReminderHeader."No.",'')
            THEN
              EXIT;
          END;
        END ELSE
          IF NOT EMailSetup."Automatic Issued Rem. E-Mail" THEN
            EXIT;
      END;

      CLEAR(IssuedReminderEMail);
      IssuedReminderEMail.InitializeRequest(IssuedReminderHeader."No.",BatchSending);
      IssuedReminderEMail.USEREQUESTPAGE(FALSE);
      IssuedReminderEMail.RUNMODAL;
    END;

    PROCEDURE AllowResendIssuedReminder@11(IssuedReminderHeader@1000000000 : Record 297);
    BEGIN
      IF IssuedReminderHeader."E-Mail Confirmation Handled" THEN BEGIN
        IssuedReminderHeader."E-Mail Confirmation Handled" := FALSE;
        IssuedReminderHeader.MODIFY;
      END;
    END;

    PROCEDURE SendIssuedFinChargeMemoConf@10(IssuedFinChargeMemoHeader@1240030000 : Record 304;ManualSending@1240030001 : Boolean;BatchSending@1240030002 : Boolean);
    VAR
      EMailListEntryTmp@1240030003 : TEMPORARY Record 14000908;
      IssuedFinChargeMemoEMail@1240030004 : Report 14000918;
    BEGIN
      IF NOT BatchSending THEN BEGIN
        GetEMailSetup;
        IF ManualSending THEN BEGIN
          IF EMailSetup."Show Error on Manual Sending" THEN BEGIN
            CLEAR(IssuedFinChargeMemoEMail);
            IssuedFinChargeMemoEMail.InitializeRequest(IssuedFinChargeMemoHeader."No.",BatchSending);
            IssuedFinChargeMemoEMail.GetReceiverList(EMailListEntryTmp);

            IF NOT TestShowManualSending(
                     EMailListEntryTmp,
                     0,IssuedFinChargeMemoHeader."Customer No.",'',
                     EMailListEntryTmp.FIELDNO("Issued Fin. Charge Memo E-Mail"),
                     DATABASE::"Issued Fin. Charge Memo Header",0,IssuedFinChargeMemoHeader."No.",'')
            THEN
              EXIT;
          END;
        END ELSE
          IF NOT EMailSetup."Automatic Issued Rem. E-Mail" THEN
            EXIT;
      END;

      CLEAR(IssuedFinChargeMemoEMail);
      IssuedFinChargeMemoEMail.InitializeRequest(IssuedFinChargeMemoHeader."No.",BatchSending);
      IssuedFinChargeMemoEMail.USEREQUESTPAGE(FALSE);
      IssuedFinChargeMemoEMail.RUNMODAL;
    END;

    PROCEDURE AllowReendIssuedFinChargeMemo@12(IssuedFinChargeMemoHeader@1000000000 : Record 304);
    BEGIN
      IF IssuedFinChargeMemoHeader."E-Mail Confirmation Handled" THEN BEGIN
        IssuedFinChargeMemoHeader."E-Mail Confirmation Handled" := FALSE;
        IssuedFinChargeMemoHeader.MODIFY;
      END;
    END;

    LOCAL PROCEDURE GetEMailSetup@4();
    BEGIN
      IF NOT EMailSetupRetrieved THEN BEGIN
        EMailSetup.GET;
        EMailSetupRetrieved := TRUE;
      END;
    END;

    PROCEDURE GetVirtualField@7(EMailElement@1000000000 : Record 14000903) : Text[250];
    VAR
      FormatValue@1000000001 : Codeunit 14000906;
    BEGIN
      CASE EMailElement."Virtual Field" OF
        EMailElement."Virtual Field"::WorkDate:
          EXIT(
            FormatValue.FormatDate(
              WORKDATE,EMailElement."Format Length",
              EMailElement."Format Number",EMailElement."Format String"));
        EMailElement."Virtual Field"::Today:
          EXIT(
            FormatValue.FormatDate(
              TODAY,EMailElement."Format Length",
              EMailElement."Format Number",EMailElement."Format String"));
        EMailElement."Virtual Field"::Time:
          EXIT(
            FormatValue.FormatTime(
              TIME,EMailElement."Format Length",
              EMailElement."Format Number",EMailElement."Format String"));
        ELSE
          EXIT(FORMAT(EMailElement."Virtual Field"));
      END;
    END;

    LOCAL PROCEDURE TestShowManualSending@16(VAR EMailListEntry@1240030000 : Record 14000908;Type@1240030001 : Option;No@1240030002 : Code[20];ShipToCode@1240030003 : Code[20];FilterFieldNo@1240030004 : Integer;NewTableID@1240030005 : Integer;NewType@1240030006 : Integer;NewCode@1240030007 : Code[20];NewCode2@1240030008 : Code[20]) : Boolean;
    VAR
      EMailRule@1240030009 : Record 14000907;
      EMailListEntriesEdit@1240030010 : Page 14000920;
    BEGIN
      IF NOT EMailRule.GetEMailRule(Type,No,ShipToCode) THEN
        ERROR(Text001);
      TestEMailRuleFieldNo(EMailRule,FilterFieldNo);

      EMailListEntry.RESET;

      CASE EMailSetup."Manual Send E-Mail Action" OF
        EMailSetup."Manual Send E-Mail Action"::"Enter If none Exist":
          BEGIN
            FilterOnFieldNo(EMailListEntry,FilterFieldNo,TRUE);
            IF NOT EMailListEntry.FIND('-') THEN BEGIN
              EMailListEntry.RESET;
              // FilterOnFieldNo(EMailListEntry,FilterFieldNo,FALSE);
              CLEAR(EMailListEntriesEdit);
              EMailListEntriesEdit.ShowColumn(FilterFieldNo);
              EMailListEntriesEdit.LoadEMailListEntries(
                EMailListEntry,NewTableID,NewType,NewCode,NewCode2,FilterFieldNo);
              EMailListEntriesEdit.LOOKUPMODE(TRUE);
              IF EMailListEntriesEdit.RUNMODAL <> ACTION::LookupOK THEN
                EXIT(FALSE);
              EMailListEntry.DELETEALL;
              EMailListEntriesEdit.GetEMailListEntries(EMailListEntry);
            END;
          END;
        EMailSetup."Manual Send E-Mail Action"::"Always Show E-Mail List":
          BEGIN
            EMailListEntry.RESET;
            // FilterOnFieldNo(EMailListEntry,FilterFieldNo,FALSE);
            CLEAR(EMailListEntriesEdit);
            EMailListEntriesEdit.ShowColumn(FilterFieldNo);
            EMailListEntriesEdit.LoadEMailListEntries(
              EMailListEntry,NewTableID,NewType,NewCode,NewCode2,FilterFieldNo);
            EMailListEntriesEdit.LOOKUPMODE(TRUE);
            IF EMailListEntriesEdit.RUNMODAL <> ACTION::LookupOK THEN
              EXIT(FALSE);
            EMailListEntry.DELETEALL;
            EMailListEntriesEdit.GetEMailListEntries(EMailListEntry);
          END;
      END;

      FilterOnFieldNo(EMailListEntry,FilterFieldNo,TRUE);
      IF NOT EMailListEntry.FIND('-') THEN
        IF ShipToCode <> '' THEN BEGIN
          EMailListEntry.SETRANGE("Table ID",DATABASE::Customer);
        EMailListEntry.SETRANGE("Code 2",'');
          EMailListEntry.SETRANGE("Use for Ship-to/Order Address",TRUE);
          IF NOT EMailListEntry.FIND('-') THEN
            ERROR(Text002);
        END ELSE
          ERROR(Text002);

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE TestEMailRuleFieldNo@17(EMailRule@1240030000 : Record 14000907;FilterFieldNo@1240030001 : Integer);
    VAR
      EMailListEntry@1240030002 : Record 14000908;
    BEGIN
      CASE FilterFieldNo OF
        EMailListEntry.FIELDNO("Sales Shipment E-Mail"):
          EMailRule.TESTFIELD("Sales Shipment E-Mail Code");
        EMailListEntry.FIELDNO("Sales Invoice E-Mail"):
          EMailRule.TESTFIELD("Sales Invoice E-Mail Code");
        EMailListEntry.FIELDNO("Sales Order Conf. E-Mail"):
          EMailRule.TESTFIELD("Sales Order Conf. E-Mail Code");
        EMailListEntry.FIELDNO("Bill of Lading E-Mail"):
          EMailRule.TESTFIELD("Bill of Lading E-Mail Code");
        EMailListEntry.FIELDNO("Customer Statement E-Mail"):
          EMailRule.TESTFIELD("Customer Statement E-Mail Code");
        EMailListEntry.FIELDNO("Sales Quote Conf. E-Mail"):
          EMailRule.TESTFIELD("Sales Quote Conf. E-Mail Code");
        EMailListEntry.FIELDNO("Sales Invoice Conf. E-Mail"):
          EMailRule.TESTFIELD("Sales Invoice Conf E-Mail Code");
        EMailListEntry.FIELDNO("Sales Credit Memo Conf. E-Mail"):
          EMailRule.TESTFIELD("Sales Cr Memo Conf E-Mail Code");
        EMailListEntry.FIELDNO("Sales Bl. Order Conf. E-Mail"):
          EMailRule.TESTFIELD("Sales Bl. Ord Conf E-Mail Code");
        EMailListEntry.FIELDNO("Sales Ret. Order Conf. E-Mail"):
          EMailRule.TESTFIELD("Sales Ret Ord Conf E-Mail Code");
        EMailListEntry.FIELDNO("Purchase Quote Conf. E-Mail"):
          EMailRule.TESTFIELD("Purch. Quote Conf. E-Mail Code");
        EMailListEntry.FIELDNO("Purch. Bl. Order Conf. E-Mail"):
          EMailRule.TESTFIELD("Purch Bl. Ord Conf E-Mail Code");
        EMailListEntry.FIELDNO("Purchase Order Conf. E-Mail"):
          EMailRule.TESTFIELD("Purch. Order Conf. E-Mail Code");
        EMailListEntry.FIELDNO("Purchase Invoice Conf. E-Mail"):
          EMailRule.TESTFIELD("Purch Invoice Conf E-Mail Code");
        EMailListEntry.FIELDNO("Purchase Cr. Memo Conf. E-Mail"):
          EMailRule.TESTFIELD("Purch Cr Memo Conf E-Mail Code");
        EMailListEntry.FIELDNO("Purch. Ret. Order Conf. E-Mail"):
          EMailRule.TESTFIELD("Purch Ret Ord Conf E-Mail Code");
        EMailListEntry.FIELDNO("Issued Reminder E-Mail"):
          EMailRule.TESTFIELD("Issued Reminder E-Mail Code");
        EMailListEntry.FIELDNO("Issued Fin. Charge Memo E-Mail"):
          EMailRule.TESTFIELD("Issued Fin Ch Memo E-Mail Code");
        EMailListEntry.FIELDNO("Purchase Receipt E-Mail"):
          EMailRule.TESTFIELD("Purchase Receipt E-Mail Code");
        EMailListEntry.FIELDNO("Purchase Invoice E-Mail"):
          EMailRule.TESTFIELD("Purchase Invoice E-Mail Code");
        // <TPZ92, TPZ143>
        EMailListEntry.FIELDNO("Mfr. Rep. Statement E-Mail"):
          EMailRule.TESTFIELD("Mfr. Rep. Stm. E-Mail Code");
        EMailListEntry.FIELDNO("Loc. Hdlg. Statement E-Mail"):
          EMailRule.TESTFIELD("Loc. Hdlg. Stm. E-Mail Code");
        EMailListEntry.FIELDNO("Sales Credit Memo E-Mail"):
          EMailRule.TESTFIELD("Sales Credit Memo E-Mail Code");
        // </TPZ92, TPZ143>
        //TPZ1956>>>
        EMailListEntry.FIELDNO("ProForma Invoice E-Mail"): ;
          //EMailRule.TESTFIELD("ProForma Invoice E-Mail");
        //TPZ1956<<<

        // </TPZ92>
        ELSE
          ERROR(Text003,FilterFieldNo);
      END;
    END;

    LOCAL PROCEDURE FilterOnFieldNo@33(VAR EMailListEntry@1240030000 : Record 14000908;FilterFieldNo@1240030001 : Integer;SetFilter@1240030002 : Boolean);
    BEGIN
      CASE FilterFieldNo OF
        EMailListEntry.FIELDNO("Sales Shipment E-Mail"):
          IF SetFilter THEN
            EMailListEntry.SETRANGE("Sales Shipment E-Mail",1,3)
          ELSE
            EMailListEntry.SETRANGE("Sales Shipment E-Mail");
        EMailListEntry.FIELDNO("Sales Invoice E-Mail"):
          IF SetFilter THEN
            EMailListEntry.SETRANGE("Sales Invoice E-Mail",1,3)
          ELSE
            EMailListEntry.SETRANGE("Sales Invoice E-Mail");
        EMailListEntry.FIELDNO("Sales Order Conf. E-Mail"):
          IF SetFilter THEN
            EMailListEntry.SETRANGE("Sales Order Conf. E-Mail",1,3)
          ELSE
            EMailListEntry.SETRANGE("Sales Order Conf. E-Mail");
        EMailListEntry.FIELDNO("Bill of Lading E-Mail"):
          IF SetFilter THEN
            EMailListEntry.SETRANGE("Bill of Lading E-Mail",1,3)
          ELSE
            EMailListEntry.SETRANGE("Bill of Lading E-Mail");
        EMailListEntry.FIELDNO("Customer Statement E-Mail"):
          IF SetFilter THEN
            EMailListEntry.SETRANGE("Customer Statement E-Mail",1,3)
          ELSE
            EMailListEntry.SETRANGE("Customer Statement E-Mail");
        EMailListEntry.FIELDNO("Sales Quote Conf. E-Mail"):
          IF SetFilter THEN
            EMailListEntry.SETRANGE("Sales Quote Conf. E-Mail",1,3)
          ELSE
            EMailListEntry.SETRANGE("Sales Quote Conf. E-Mail");
        EMailListEntry.FIELDNO("Sales Invoice Conf. E-Mail"):
          IF SetFilter THEN
            EMailListEntry.SETRANGE("Sales Invoice Conf. E-Mail",1,3)
          ELSE
            EMailListEntry.SETRANGE("Sales Invoice Conf. E-Mail");
        EMailListEntry.FIELDNO("Sales Credit Memo Conf. E-Mail"):
          IF SetFilter THEN
            EMailListEntry.SETRANGE("Sales Credit Memo Conf. E-Mail",1,3)
          ELSE
            EMailListEntry.SETRANGE("Sales Credit Memo Conf. E-Mail");
        EMailListEntry.FIELDNO("Sales Bl. Order Conf. E-Mail"):
          IF SetFilter THEN
            EMailListEntry.SETRANGE("Sales Bl. Order Conf. E-Mail",1,3)
          ELSE
            EMailListEntry.SETRANGE("Sales Bl. Order Conf. E-Mail");
        EMailListEntry.FIELDNO("Sales Ret. Order Conf. E-Mail"):
          IF SetFilter THEN
            EMailListEntry.SETRANGE("Sales Ret. Order Conf. E-Mail",1,3)
          ELSE
            EMailListEntry.SETRANGE("Sales Ret. Order Conf. E-Mail");
        EMailListEntry.FIELDNO("Purchase Quote Conf. E-Mail"):
          IF SetFilter THEN
            EMailListEntry.SETRANGE("Purchase Quote Conf. E-Mail",1,3)
          ELSE
            EMailListEntry.SETRANGE("Purchase Quote Conf. E-Mail");
        EMailListEntry.FIELDNO("Purch. Bl. Order Conf. E-Mail"):
          IF SetFilter THEN
            EMailListEntry.SETRANGE("Purch. Bl. Order Conf. E-Mail",1,3)
          ELSE
            EMailListEntry.SETRANGE("Purch. Bl. Order Conf. E-Mail");
        EMailListEntry.FIELDNO("Purchase Order Conf. E-Mail"):
          IF SetFilter THEN
            EMailListEntry.SETRANGE("Purchase Order Conf. E-Mail",1,3)
          ELSE
            EMailListEntry.SETRANGE("Purchase Order Conf. E-Mail");
        EMailListEntry.FIELDNO("Purchase Invoice Conf. E-Mail"):
          IF SetFilter THEN
            EMailListEntry.SETRANGE("Purchase Invoice Conf. E-Mail",1,3)
          ELSE
            EMailListEntry.SETRANGE("Purchase Invoice Conf. E-Mail");
        EMailListEntry.FIELDNO("Purchase Cr. Memo Conf. E-Mail"):
          IF SetFilter THEN
            EMailListEntry.SETRANGE("Purchase Cr. Memo Conf. E-Mail",1,3)
          ELSE
            EMailListEntry.SETRANGE("Purchase Cr. Memo Conf. E-Mail");
        EMailListEntry.FIELDNO("Purch. Ret. Order Conf. E-Mail"):
          IF SetFilter THEN
            EMailListEntry.SETRANGE("Purch. Ret. Order Conf. E-Mail",1,3)
          ELSE
            EMailListEntry.SETRANGE("Purch. Ret. Order Conf. E-Mail");
        EMailListEntry.FIELDNO("Issued Reminder E-Mail"):
          IF SetFilter THEN
            EMailListEntry.SETRANGE("Issued Reminder E-Mail",1,3)
          ELSE
            EMailListEntry.SETRANGE("Issued Reminder E-Mail");
        EMailListEntry.FIELDNO("Issued Fin. Charge Memo E-Mail"):
          IF SetFilter THEN
            EMailListEntry.SETRANGE("Issued Fin. Charge Memo E-Mail",1,3)
          ELSE
            EMailListEntry.SETRANGE("Issued Fin. Charge Memo E-Mail");
        EMailListEntry.FIELDNO("Purchase Receipt E-Mail"):
          IF SetFilter THEN
            EMailListEntry.SETRANGE("Purchase Receipt E-Mail",1,3)
          ELSE
            EMailListEntry.SETRANGE("Purchase Receipt E-Mail");
        EMailListEntry.FIELDNO("Purchase Invoice E-Mail"):
          IF SetFilter THEN
            EMailListEntry.SETRANGE("Purchase Invoice E-Mail",1,3)
          ELSE
            EMailListEntry.SETRANGE("Purchase Invoice E-Mail");
        // <TPZ92, TPZ143>
        EMailListEntry.FIELDNO("Mfr. Rep. Statement E-Mail"):
          IF SetFilter THEN
            EMailListEntry.SETRANGE("Mfr. Rep. Statement E-Mail",1,3)
          ELSE
            EMailListEntry.SETRANGE("Mfr. Rep. Statement E-Mail");
        EMailListEntry.FIELDNO("Loc. Hdlg. Statement E-Mail"):
          IF SetFilter THEN
            EMailListEntry.SETRANGE("Loc. Hdlg. Statement E-Mail",1,3)
          ELSE
            EMailListEntry.SETRANGE("Loc. Hdlg. Statement E-Mail");
        EMailListEntry.FIELDNO("Sales Credit Memo E-Mail"):
          IF SetFilter THEN
            EMailListEntry.SETRANGE("Sales Credit Memo E-Mail",1,3)
          ELSE
            EMailListEntry.SETRANGE("Sales Credit Memo E-Mail");
        // </TPZ92, TPZ143>
        //TPZ1956>>>
        EMailListEntry.FIELDNO("ProForma Invoice E-Mail"):
          IF SetFilter THEN
            EMailListEntry.SETRANGE("ProForma Invoice E-Mail",1,3)
          ELSE
            EMailListEntry.SETRANGE("ProForma Invoice E-Mail");
        //TPZ1956<<<

        ELSE
          ERROR(Text003,FilterFieldNo);
      END;
    END;

    PROCEDURE MoveEMailListSalesHeader@15(FromSalesHeader@1240030000 : Record 36;ToSalesHeader@1240030001 : Record 36);
    VAR
      EMailListEntry@1240030002 : Record 14000908;
      EMailCommentLine@1240030003 : Record 14000910;
    BEGIN
      EMailListEntry.RESET;
      EMailListEntry.SETRANGE("Table ID",DATABASE::"Sales Header");
      EMailListEntry.SETRANGE(Type,FromSalesHeader."Document Type");
      EMailListEntry.SETRANGE(Code,FromSalesHeader."No.");
      WHILE EMailListEntry.FIND('-') DO BEGIN
        EMailCommentLine.RESET;
        EMailCommentLine.SETRANGE("Table ID",DATABASE::"E-Mail List Entry");
        EMailCommentLine.SETRANGE(Code,EMailListEntry.Code);
        EMailCommentLine.SETRANGE("Code 2",EMailListEntry."Code 2");
        EMailCommentLine.SETRANGE("Integer 1",EMailListEntry."Table ID");
        EMailCommentLine.SETRANGE("Integer 2",EMailListEntry.Type);
        EMailCommentLine.SETRANGE("Integer 3",EMailListEntry."Entry No.");
        WHILE EMailCommentLine.FIND('-') DO BEGIN
          EMailCommentLine.DELETE;
          EMailCommentLine."Integer 2" := ToSalesHeader."Document Type";
          EMailCommentLine.Code := ToSalesHeader."No.";
          EMailCommentLine.INSERT;
        END;

        EMailListEntry.DELETE;
        EMailListEntry.Type := ToSalesHeader."Document Type";
        EMailListEntry.Code := ToSalesHeader."No.";
        EMailListEntry.INSERT;
      END;
    END;

    PROCEDURE MoveEMailListPurchaseHeader@18(FromPurchHeader@1240030000 : Record 38;ToPurchHeader@1240030001 : Record 38);
    VAR
      EMailListEntry@1240030002 : Record 14000908;
      EMailCommentLine@1240030003 : Record 14000910;
    BEGIN
      EMailListEntry.RESET;
      EMailListEntry.SETRANGE("Table ID",DATABASE::"Purchase Header");
      EMailListEntry.SETRANGE(Type,FromPurchHeader."Document Type");
      EMailListEntry.SETRANGE(Code,FromPurchHeader."No.");
      WHILE EMailListEntry.FIND('-') DO BEGIN
        EMailCommentLine.RESET;
        EMailCommentLine.SETRANGE("Table ID",DATABASE::"E-Mail List Entry");
        EMailCommentLine.SETRANGE(Code,EMailListEntry.Code);
        EMailCommentLine.SETRANGE("Code 2",EMailListEntry."Code 2");
        EMailCommentLine.SETRANGE("Integer 1",EMailListEntry."Table ID");
        EMailCommentLine.SETRANGE("Integer 2",EMailListEntry.Type);
        EMailCommentLine.SETRANGE("Integer 3",EMailListEntry."Entry No.");
        WHILE EMailCommentLine.FIND('-') DO BEGIN
          EMailCommentLine.DELETE;
          EMailCommentLine."Integer 2" := ToPurchHeader."Document Type";
          EMailCommentLine.Code := ToPurchHeader."No.";
          EMailCommentLine.INSERT;
        END;

        EMailListEntry.DELETE;
        EMailListEntry.Type := ToPurchHeader."Document Type";
        EMailListEntry.Code := ToPurchHeader."No.";
        EMailListEntry.INSERT;
      END;
    END;

    PROCEDURE SendMfrRepStatement@1000000000(MfrRep@1240030000 : Record 50027;CommJnlLine@1000000000 : Record 51705;ManualSending@1240030001 : Boolean;BatchSending@1240030002 : Boolean);
    VAR
      EMailListEntryTmp@1240030003 : TEMPORARY Record 14000908;
      MfrRepStatementEMail@1240030004 : Report 51706;
    BEGIN
      // <TPZ92>
      IF NOT BatchSending THEN BEGIN
        GetEMailSetup;
        IF ManualSending THEN BEGIN
          IF EMailSetup."Show Error on Manual Sending" THEN BEGIN
            CLEAR(MfrRepStatementEMail);
            MfrRepStatementEMail.InitializeRequest(MfrRep.Code,CommJnlLine,BatchSending);
            MfrRepStatementEMail.GetReceiverList(EMailListEntryTmp);

            IF NOT TestShowManualSending(
                     EMailListEntryTmp,
                     0,MfrRep.Code,'',EMailListEntryTmp.FIELDNO("Mfr. Rep. Statement E-Mail"),
                     DATABASE::"Mfr. Rep.",0,MfrRep.Code,'')
            THEN
              EXIT;
          END;
        END ELSE
          IF NOT EMailSetup."Automatic Sales Shpmt. E-Mail" THEN
            EXIT;
      END;

      CLEAR(MfrRepStatementEMail);
      MfrRepStatementEMail.InitializeRequest(MfrRep.Code,CommJnlLine,BatchSending);
      MfrRepStatementEMail.USEREQUESTPAGE(FALSE);
      MfrRepStatementEMail.RUNMODAL;
      // </TPZ92>
    END;

    PROCEDURE SendLocHdlgStatement@1000000001(Location@1240030000 : Record 14;CommJnlLine@1000000000 : Record 51705;ManualSending@1240030001 : Boolean;BatchSending@1240030002 : Boolean);
    VAR
      EMailListEntryTmp@1240030003 : TEMPORARY Record 14000908;
      LocHdlgStatementEMail@1240030004 : Report 51707;
    BEGIN
      // <TPZ92>
      IF NOT BatchSending THEN BEGIN
        GetEMailSetup;
        IF ManualSending THEN BEGIN
          IF EMailSetup."Show Error on Manual Sending" THEN BEGIN
            CLEAR(LocHdlgStatementEMail);
            LocHdlgStatementEMail.InitializeRequest(Location.Code,CommJnlLine,BatchSending);
            LocHdlgStatementEMail.GetReceiverList(EMailListEntryTmp);

            IF NOT TestShowManualSending(
                     EMailListEntryTmp,
                     0,Location.Code,'',EMailListEntryTmp.FIELDNO("Loc. Hdlg. Statement E-Mail"),
                     DATABASE::Location,0,Location.Code,'')
            THEN
              EXIT;
          END;
        END ELSE
          IF NOT EMailSetup."Automatic Sales Shpmt. E-Mail" THEN
            EXIT;
      END;

      CLEAR(LocHdlgStatementEMail);
      LocHdlgStatementEMail.InitializeRequest(Location.Code,CommJnlLine,BatchSending);
      LocHdlgStatementEMail.USEREQUESTPAGE(FALSE);
      LocHdlgStatementEMail.RUNMODAL;
      // </TPZ92>
    END;

    PROCEDURE SendSalesASNEmail@1000000002(SalesHeader@1240030000 : Record 36;ManualSending@1240030001 : Boolean;BatchSending@1240030002 : Boolean);
    VAR
      EMailListEntryTmp@1240030003 : TEMPORARY Record 14000908;
      SalesOrderASNEmail@1240030004 : Report 50015;
    BEGIN
      //TM BEG 070715 TPZ813
      IF NOT BatchSending THEN BEGIN
        GetEMailSetup;
        IF ManualSending THEN BEGIN
          IF EMailSetup."Show Error on Manual Sending" THEN BEGIN
            CLEAR(SalesOrderASNEmail);
            SalesOrderASNEmail.InitializeRequest(SalesHeader."Document Type",SalesHeader."No.",BatchSending);
            SalesOrderASNEmail.GetReceiverList(EMailListEntryTmp);
            SalesHeader.TESTFIELD("Document Type", SalesHeader."Document Type"::Order);
          END;
        END;
      END;

      CLEAR(SalesOrderASNEmail);
      SalesOrderASNEmail.InitializeRequest(SalesHeader."Document Type",SalesHeader."No.",BatchSending);
      SalesOrderASNEmail.USEREQUESTPAGE(FALSE);
      SalesOrderASNEmail.RUNMODAL;
      //TM END 070715 TPZ813
    END;

    PROCEDURE SendSalesShipmentASNEmail@1000000003(SalesShipmentHeader@1240030000 : Record 110;ManualSending@1240030001 : Boolean;BatchSending@1240030002 : Boolean);
    VAR
      EMailListEntryTmp@1240030003 : TEMPORARY Record 14000908;
      SalesShipmentASNEmail@1240030004 : Report 50016;
    BEGIN
      //<TPZ2430>
      IF SalesShipmentHeader."No." = '' THEN
        EXIT;
      //</TPZ2430>

      //TM BEG 070715 TPZ813
      IF NOT BatchSending THEN BEGIN
        GetEMailSetup;
        IF ManualSending THEN BEGIN
          IF EMailSetup."Show Error on Manual Sending" THEN BEGIN
            CLEAR(SalesShipmentASNEmail);
            SalesShipmentASNEmail.InitializeRequest(SalesShipmentHeader."No.",BatchSending);
            SalesShipmentASNEmail.GetReceiverList(EMailListEntryTmp);
          END;
        END;
      END;

      CLEAR(SalesShipmentASNEmail);
      SalesShipmentASNEmail.InitializeRequest(SalesShipmentHeader."No.",BatchSending);
      SalesShipmentASNEmail.USEREQUESTPAGE(FALSE);
      //>>001 TPZ3222
      //SalesShipmentASNEmail.SetSMTP365(TRUE); //<TPZ2430>//EB
      //<<001 TPZ3222
      SalesShipmentASNEmail.RUNMODAL;
      //TM END 070715 TPZ813
    END;

    PROCEDURE "---TPZ fnc---"@1000000004();
    BEGIN
    END;

    PROCEDURE SendSalesInvoiceProforma@1000000007(SalesInvoiceHeader@1240030000 : Record 36;ManualSending@1240030001 : Boolean;BatchSending@1240030002 : Boolean);
    VAR
      EMailListEntryTmp@1240030003 : TEMPORARY Record 14000908;
      SalesInvoiceEMail@1240030004 : Report 50074;
    BEGIN
      //TPZ1956>>>
      IF SalesInvoiceHeader."Posting No." = '' THEN
        ERROR('To E-Mail Pro-Forma invoice, you must first schedule the order to be posted by clicking the Schedule to Post button.');

      IF NOT BatchSending THEN BEGIN
        GetEMailSetup;
        IF ManualSending THEN BEGIN
          IF EMailSetup."Show Error on Manual Sending" THEN BEGIN
            CLEAR(SalesInvoiceEMail);
            SalesInvoiceEMail.InitializeRequest(SalesInvoiceHeader."Posting No.",BatchSending);
            SalesInvoiceEMail.GetReceiverList(EMailListEntryTmp);

            IF NOT TestShowManualSending(
                     EMailListEntryTmp,
                     1,SalesInvoiceHeader."Sell-to Customer No.",SalesInvoiceHeader."Ship-to Code",
                     EMailListEntryTmp.FIELDNO("ProForma Invoice E-Mail"),
                     DATABASE::"Sales Header",1,SalesInvoiceHeader."Posting No.",'')
            THEN
              EXIT;
          END;
        END ELSE
          IF NOT EMailSetup."Automatic Sales Invoice E-Mail" THEN
            EXIT;
      END;

      CLEAR(SalesInvoiceEMail);
      SalesInvoiceEMail.InitializeRequest(SalesInvoiceHeader."Posting No.",BatchSending);
      SalesInvoiceEMail.USEREQUESTPAGE(FALSE);
      SalesInvoiceEMail.SetSMTP365(TRUE);
      //SalesInvoiceEMail.SetPostingNo(SalesInvoiceHeader."Posting No."); //TPZ1956
      SalesInvoiceEMail.RUNMODAL;
    END;

    BEGIN
    {
      2015-06-11 TPZ92 TAKHMETO
        SendMfrRepCommStatement, SendLocHdlgStatement functions have been created
        TestEMailRuleFieldNo, FilterOnFieldNo have been modified
      2015-08-25 TPZ143 TAKHMETO
        SendSalesCrMemoNotice functions has been created
        TestEMailRuleFieldNo, FilterOnFieldNo have been modified
      2017-03-05 TPZ1788 SDESAI - Added code for Office 365 SMTP
      20170824 TPZ1956 CJOSIC - Schedule International Orders for Overnight Posting (20170717)
      2018-10-26 TPZ2430 SNAGPAL -  Move outbound emails to O365 smtp server.
      001 TPZ3222 RPS 07072021 - Change 365 to SMTP  task for NAV
    }
    END.
  }
}

