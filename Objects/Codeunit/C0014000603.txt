OBJECT Codeunit 14000603 Multi Document Receive Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=06/28/17;
    Time=12:00:00 PM;
    Version List=SE0.53.21;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ReceiveSetup@1240030000 : Record 14000607;
      ShippingAgent@1240030001 : Record 291;
      ReceiveSetupRetrieved@1240030002 : Boolean;
      Text001@1001 : TextConst 'ENU=Quantity not matching. Check documents or receive again.';
      Text002@1002 : TextConst 'ENU=Wrong splitting of Receive.';
      Text003@1003 : TextConst 'ENU=Part of the Multi Document Receive has been posted.';
      Text004@1004 : TextConst 'ENU=Same Document exist in both Multi Documents.';
      Text005@1005 : TextConst 'ENU=Too many orders being added together.';
      Text006@1006 : TextConst 'ENU=Same Document cannot be combined.';
      Text007@1007 : TextConst 'ENU=is unknown type.';

    LOCAL PROCEDURE GetReceiveSetup@1();
    BEGIN
      IF NOT ReceiveSetupRetrieved THEN BEGIN
        ReceiveSetup.GET;
        ReceiveSetupRetrieved := TRUE;
      END;
    END;

    LOCAL PROCEDURE GetShippingAgent@10(ShippingAgentCode@1240030000 : Code[10]);
    BEGIN
      IF (ShippingAgent.Code <> ShippingAgentCode) OR (ShippingAgentCode = '') THEN BEGIN
        GetReceiveSetup;
        IF (ShippingAgentCode <> '') OR ReceiveSetup."Shipping Agent Required" THEN
          ShippingAgent.GET(ShippingAgentCode)
        ELSE
          CLEAR(ShippingAgent);
      END;
    END;

    PROCEDURE SplitMultiDocReceive@2(VAR CurrentReceive@1240030000 : Record 14000601;VAR MultiDocReceiveTmp@1240030001 : Record 14000601;ReceiveStation@1240030002 : Record 14000608;ReceiveSetup@1240030003 : Record 14000607);
    VAR
      Receive@1240030004 : Record 14000601;
      TotalChargesReceive@1240030005 : Record 14000601;
      CurrentReceiveLine@1240030006 : Record 14000602;
      OrgCurrentReceiveLine@1240030007 : Record 14000602;
      MultiDocReceiveLineTmp@1240030008 : TEMPORARY Record 14000602;
      TotalChargeReceiveLineTmp@1240030009 : TEMPORARY Record 14000602;
      TotalChargeReceiveLine2Tmp@1240030010 : TEMPORARY Record 14000602;
      ReceiveLine@1240030011 : Record 14000602;
      SalesLine@1240030012 : Record 37;
      SalesLineTmp@1240030013 : TEMPORARY Record 37;
      SalesHeader@1240030014 : Record 36;
      PurchLine@1240030015 : Record 39;
      PurchLineTmp@1240030016 : TEMPORARY Record 39;
      PurchHeader@1240030017 : Record 38;
      TransferLine@1240030025 : Record 5741;
      TransferLineTmp@1240030026 : TEMPORARY Record 5741;
      TransferHeader@1240030027 : Record 5740;
      ReceiveControl@1240030018 : Record 14000611;
      TempMultiDocNo@1240030019 : Code[250];
      TempOrderNo@1240030020 : Code[20];
      NoOfOrders@1240030021 : Integer;
      CurrentOrders@1240030022 : Integer;
      CostFactor@1240030023 : Decimal;
      TotalCostFactor@1240030024 : Decimal;
    BEGIN
      CurrentReceive.TESTFIELD(Closed);
      CurrentReceive.TESTFIELD("Multi Document Receive");
      CurrentReceive.TESTFIELD("Multi Document Receive Split",FALSE);
      CurrentReceive.TESTFIELD("Original Receive No.",'');

      GetReceiveSetup;

      CASE CurrentReceive."Source Type" OF
        DATABASE::"Sales Header":
          BEGIN
            // reset temporary tables
            SalesLineTmp.RESET;
            SalesLineTmp.DELETEALL;

            // Calculate quantity to receive
            SalesLine.RESET;
            SalesLine.SETRANGE("Document Type",CurrentReceive."Source Subtype");
            SalesLine.SETFILTER("Document No.",CurrentReceive."Multi Document No.");
            SalesLine.SETRANGE(Type,SalesLine.Type::Item);
            SalesLine.SETRANGE(SalesLine."Drop Shipment",FALSE);
            SalesLine.SETFILTER("Outstanding Quantity",'<>0');
            IF ReceiveSetup."Location Receiving" THEN
              SalesLine.SETRANGE("Location Code",ReceiveStation."Location Code");
            IF SalesLine.FIND('-') THEN
              REPEAT
                SalesLineTmp := SalesLine;

                // Additional code required in Attain
                IF ReceiveSetup."Qty. to Receive as" = ReceiveSetup."Qty. to Receive as"::"Outstanding Quantity"
                THEN BEGIN
                  SalesLineTmp."Qty. to Ship" := SalesLineTmp."Outstanding Quantity";
                  SalesLineTmp."Qty. to Ship (Base)" := SalesLineTmp."Outstanding Qty. (Base)";
                END;

                IF SalesLineTmp."Qty. to Ship (Base)" <> 0 THEN
                  SalesLineTmp.INSERT;
              UNTIL SalesLine.NEXT = 0;

            // remove already received
            ReceiveLine.RESET;
            ReceiveLine.SETCURRENTKEY("Source Type","Source Subtype","Source ID");
            ReceiveLine.SETRANGE("Source Type",CurrentReceive."Source Type");
            ReceiveLine.SETRANGE("Source Subtype",CurrentReceive."Source Subtype");
            ReceiveLine.SETFILTER("Source ID",CurrentReceive."Multi Document No.");
            ReceiveLine.SETFILTER("Receive No.",'<>%1',CurrentReceive."No.");
            ReceiveLine.SETRANGE(Type,ReceiveLine.Type::"Account (G/L)",ReceiveLine.Type::"3");
            ReceiveLine.SETFILTER("Quantity (Base)",'<>0');
            IF ReceiveSetup."Location Receiving" THEN
              ReceiveLine.SETRANGE("Location Code",ReceiveStation."Location Code");
            IF ReceiveLine.FIND('-') THEN
              REPEAT
                SalesLineTmp.RESET;
                SalesLineTmp.SETCURRENTKEY("Document Type",Type,"No.","Variant Code");
                SalesLineTmp.SETRANGE("Document Type",ReceiveLine."Source Subtype");
                SalesLineTmp.SETRANGE("Document No.",ReceiveLine."Source ID");
                SalesLineTmp.SETRANGE(Type,ReceiveLine.Type);
                SalesLineTmp.SETRANGE("No.",ReceiveLine."No.");
                SalesLineTmp.SETRANGE("Variant Code",ReceiveLine."Variant Code");
                SalesLineTmp.SETRANGE("Unit of Measure Code",ReceiveLine."Unit of Measure Code");
                IF SalesLineTmp.FIND('-') THEN
                  REPEAT
                    IF ReceiveLine."Quantity (Base)" >= SalesLineTmp."Qty. to Ship (Base)" THEN BEGIN
                      ReceiveLine."Quantity (Base)" :=
                        ReceiveLine."Quantity (Base)" - SalesLineTmp."Qty. to Ship (Base)";
                      SalesLineTmp.DELETE;
                    END ELSE BEGIN
                      SalesLineTmp."Qty. to Ship (Base)" :=
                        SalesLineTmp."Qty. to Ship (Base)" - ReceiveLine."Quantity (Base)";
                      SalesLineTmp.MODIFY;
                      ReceiveLine."Quantity (Base)" := 0;
                    END;
                  UNTIL (SalesLineTmp.NEXT = 0) OR (ReceiveLine."Quantity (Base)" = 0);

                IF ReceiveLine."Quantity (Base)" <> 0 THEN BEGIN
                  SalesLineTmp.SETRANGE("Unit of Measure Code");
                  IF SalesLineTmp.FIND('-') THEN
                    REPEAT
                      IF ReceiveLine."Quantity (Base)" >= SalesLineTmp."Qty. to Ship (Base)" THEN BEGIN
                        ReceiveLine."Quantity (Base)" :=
                          ReceiveLine."Quantity (Base)" - SalesLineTmp."Qty. to Ship (Base)";
                        SalesLineTmp.DELETE;
                      END ELSE BEGIN
                        SalesLineTmp."Qty. to Ship (Base)" :=
                          SalesLineTmp."Qty. to Ship (Base)" - ReceiveLine."Quantity (Base)";
                        SalesLineTmp.MODIFY;
                        ReceiveLine."Quantity (Base)" := 0;
                      END;
                    UNTIL (SalesLineTmp.NEXT = 0) OR (ReceiveLine."Quantity (Base)" = 0);

                  IF ReceiveLine."Quantity (Base)" <> 0 THEN
                    ERROR(Text001);
                END;
              UNTIL ReceiveLine.NEXT = 0;

            // Calculate lines by Documents
            MultiDocReceiveTmp.RESET;
            MultiDocReceiveTmp.DELETEALL;
            MultiDocReceiveLineTmp.RESET;
            MultiDocReceiveLineTmp.DELETEALL;

            CurrentReceiveLine.RESET;
            CurrentReceiveLine.SETRANGE("Receive No.",CurrentReceive."No.");
            CurrentReceiveLine.SETFILTER("No.",'<>%1','');
            CurrentReceiveLine.SETFILTER(Quantity,'<>0');
            IF CurrentReceiveLine.FIND('-') THEN BEGIN
              REPEAT
                OrgCurrentReceiveLine := CurrentReceiveLine;

                CASE CurrentReceiveLine.Type OF
                  CurrentReceiveLine.Type::"Account (G/L)",CurrentReceiveLine.Type::Item,
                  CurrentReceiveLine.Type::"3":
                    BEGIN
                      SalesLineTmp.RESET;
                      SalesLineTmp.SETCURRENTKEY("Document Type",Type,"No.","Variant Code");
                      SalesLineTmp.SETRANGE("Document Type",CurrentReceiveLine."Source Subtype");
                      IF CurrentReceiveLine."Selected Source ID" <> '' THEN
                        SalesLineTmp.SETRANGE("Document No.",CurrentReceiveLine."Selected Source ID");
                      SalesLineTmp.SETRANGE(Type,CurrentReceiveLine.Type);
                      SalesLineTmp.SETRANGE("No.",CurrentReceiveLine."No.");
                      SalesLineTmp.SETRANGE("Variant Code",CurrentReceiveLine."Variant Code");
                      SalesLineTmp.SETRANGE(
                        "Unit of Measure Code",CurrentReceiveLine."Unit of Measure Code");
                      IF SalesLineTmp.FIND('-') THEN
                        REPEAT
                          IF CurrentReceiveLine."Quantity (Base)" >= SalesLineTmp."Qty. to Ship (Base)"
                          THEN BEGIN
                            UpdateTmpTables(
                              MultiDocReceiveTmp,MultiDocReceiveLineTmp,CurrentReceive,
                              OrgCurrentReceiveLine,SalesLineTmp."Document No.",
                              SalesLineTmp."Qty. to Ship (Base)");

                            CurrentReceiveLine."Quantity (Base)" :=
                              CurrentReceiveLine."Quantity (Base)" - SalesLineTmp."Qty. to Ship (Base)";
                            SalesLineTmp.DELETE;
                          END ELSE BEGIN
                            UpdateTmpTables(
                              MultiDocReceiveTmp,MultiDocReceiveLineTmp,CurrentReceive,
                              OrgCurrentReceiveLine,SalesLineTmp."Document No.",
                              CurrentReceiveLine."Quantity (Base)");

                            SalesLineTmp."Qty. to Ship (Base)" :=
                              SalesLineTmp."Qty. to Ship (Base)" - CurrentReceiveLine."Quantity (Base)";
                            SalesLineTmp.MODIFY;
                            CurrentReceiveLine."Quantity (Base)" := 0;
                          END;
                        UNTIL (SalesLineTmp.NEXT = 0) OR (CurrentReceiveLine."Quantity (Base)" = 0);

                      IF CurrentReceiveLine."Quantity (Base)" <> 0 THEN BEGIN
                        SalesLineTmp.SETRANGE("Unit of Measure Code");
                        IF SalesLineTmp.FIND('-') THEN
                          REPEAT
                            IF CurrentReceiveLine."Quantity (Base)" >= SalesLineTmp."Qty. to Ship (Base)"
                            THEN BEGIN
                              UpdateTmpTables(
                                MultiDocReceiveTmp,MultiDocReceiveLineTmp,CurrentReceive,
                                OrgCurrentReceiveLine,SalesLineTmp."Document No.",
                                SalesLineTmp."Qty. to Ship (Base)");

                              CurrentReceiveLine."Quantity (Base)" :=
                                CurrentReceiveLine."Quantity (Base)" - SalesLineTmp."Qty. to Ship (Base)";
                              SalesLineTmp.DELETE;
                            END ELSE BEGIN
                              UpdateTmpTables(
                                MultiDocReceiveTmp,MultiDocReceiveLineTmp,CurrentReceive,
                                OrgCurrentReceiveLine,SalesLineTmp."Document No.",
                                CurrentReceiveLine."Quantity (Base)");

                              SalesLineTmp."Qty. to Ship (Base)" :=
                                SalesLineTmp."Qty. to Ship (Base)" - CurrentReceiveLine."Quantity (Base)";
                              SalesLineTmp.MODIFY;
                              CurrentReceiveLine."Quantity (Base)" := 0;
                            END;
                          UNTIL (SalesLineTmp.NEXT = 0) OR (CurrentReceiveLine."Quantity (Base)" = 0);

                        IF CurrentReceiveLine."Quantity (Base)" <> 0 THEN
                          ERROR(Text001);
                      END;
                    END;
                  CurrentReceiveLine.Type::Receive:
                    BEGIN
                      Receive.RESET;
                      Receive.SETCURRENTKEY("Original Receive No.");
                      Receive.SETRANGE("Original Receive No.",CurrentReceiveLine."No.");
                      IF Receive.FIND('-') THEN
                        REPEAT
                          UpdateTmpTables(
                            MultiDocReceiveTmp,MultiDocReceiveLineTmp,CurrentReceive,
                            OrgCurrentReceiveLine,Receive."Source ID",
                            Receive."Distribution Factor");

                          CurrentReceiveLine."Quantity (Base)" :=
                            CurrentReceiveLine."Quantity (Base)" - Receive."Distribution Factor";
                        UNTIL Receive.NEXT = 0;

                      IF CurrentReceiveLine."Quantity (Base)" <> 0 THEN
                        ERROR(Text001);
                    END;
                END;
              UNTIL CurrentReceiveLine.NEXT = 0;
            END ELSE BEGIN
              // Extra Receive
              TempMultiDocNo := CurrentReceive."Multi Document No.";
              WHILE TempMultiDocNo <> '' DO BEGIN
                IF STRPOS(TempMultiDocNo,'|') = 0 THEN
                  TempOrderNo := TempMultiDocNo
                ELSE
                  TempOrderNo := COPYSTR(TempMultiDocNo,1,STRPOS(TempMultiDocNo,'|') - 1);

                NoOfOrders := NoOfOrders + 1;
                MultiDocReceiveTmp := CurrentReceive;
                MultiDocReceiveTmp."No." := CurrentReceive."No." + '-' + TempOrderNo;
                MultiDocReceiveTmp."Source ID" := TempOrderNo;
                MultiDocReceiveTmp."Shipping Charge" := 1;
                MultiDocReceiveTmp.INSERT;

                CurrentReceiveLine.RESET;
                CurrentReceiveLine.SETRANGE("Receive No.",CurrentReceive."No.");
                IF CurrentReceiveLine.FIND('-') THEN
                  REPEAT
                    MultiDocReceiveLineTmp := CurrentReceiveLine;
                    MultiDocReceiveLineTmp."Receive No." := MultiDocReceiveTmp."No.";
                    MultiDocReceiveLineTmp.INSERT;
                  UNTIL CurrentReceiveLine.NEXT = 0;

                IF STRPOS(TempMultiDocNo,'|') = 0 THEN
                  TempMultiDocNo := ''
                ELSE
                  TempMultiDocNo := COPYSTR(TempMultiDocNo,STRPOS(TempMultiDocNo,'|') + 1);
              END;
            END;
          END;
        DATABASE::"Purchase Header":
          BEGIN
            // reset temporary tables
            PurchLineTmp.RESET;
            PurchLineTmp.DELETEALL;

            // Calculate quantity to receive
            PurchLine.RESET;
            PurchLine.SETRANGE("Document Type",CurrentReceive."Source Subtype");
            PurchLine.SETFILTER("Document No.",CurrentReceive."Multi Document No.");
            PurchLine.SETRANGE(Type,PurchLine.Type::Item);
            PurchLine.SETRANGE(PurchLine."Drop Shipment",FALSE);
            PurchLine.SETFILTER("Outstanding Quantity",'<>0');
            IF ReceiveSetup."Location Receiving" THEN
              PurchLine.SETRANGE("Location Code",ReceiveStation."Location Code");
            IF PurchLine.FIND('-') THEN
              REPEAT
                PurchLineTmp := PurchLine;

                // Additional code required in Attain
                IF ReceiveSetup."Qty. to Receive as" = ReceiveSetup."Qty. to Receive as"::"Outstanding Quantity"
                THEN BEGIN
                  PurchLineTmp."Qty. to Receive" := PurchLineTmp."Outstanding Quantity";
                  PurchLineTmp."Qty. to Receive (Base)" := PurchLineTmp."Outstanding Qty. (Base)";
                END;

                IF PurchLineTmp."Qty. to Receive (Base)" <> 0 THEN
                  PurchLineTmp.INSERT;
              UNTIL PurchLine.NEXT = 0;

            // remove already received
            ReceiveLine.RESET;
            ReceiveLine.SETCURRENTKEY("Source Type","Source Subtype","Source ID");
            ReceiveLine.SETRANGE("Source Type",CurrentReceive."Source Type");
            ReceiveLine.SETRANGE("Source Subtype",CurrentReceive."Source Subtype");
            ReceiveLine.SETFILTER("Source ID",CurrentReceive."Multi Document No.");
            ReceiveLine.SETFILTER("Receive No.",'<>%1',CurrentReceive."No.");
            ReceiveLine.SETRANGE(Type,ReceiveLine.Type::"Account (G/L)",ReceiveLine.Type::"3");
            ReceiveLine.SETFILTER("Quantity (Base)",'<>0');
            IF ReceiveSetup."Location Receiving" THEN
              ReceiveLine.SETRANGE("Location Code",ReceiveStation."Location Code");
            IF ReceiveLine.FIND('-') THEN
              REPEAT
                PurchLineTmp.RESET;
                PurchLineTmp.SETCURRENTKEY("Document Type",Type,"No.","Variant Code");
                PurchLineTmp.SETRANGE("Document Type",ReceiveLine."Source Subtype");
                PurchLineTmp.SETRANGE("Document No.",ReceiveLine."Source ID");
                PurchLineTmp.SETRANGE(Type,ReceiveLine.Type);
                PurchLineTmp.SETRANGE("No.",ReceiveLine."No.");
                PurchLineTmp.SETRANGE("Variant Code",ReceiveLine."Variant Code");
                PurchLineTmp.SETRANGE("Unit of Measure Code",ReceiveLine."Unit of Measure Code");
                IF PurchLineTmp.FIND('-') THEN
                  REPEAT
                    IF ReceiveLine."Quantity (Base)" >= PurchLineTmp."Qty. to Receive (Base)" THEN BEGIN
                      ReceiveLine."Quantity (Base)" :=
                        ReceiveLine."Quantity (Base)" - PurchLineTmp."Qty. to Receive (Base)";
                      PurchLineTmp.DELETE;
                    END ELSE BEGIN
                      PurchLineTmp."Qty. to Receive (Base)" :=
                        PurchLineTmp."Qty. to Receive (Base)" - ReceiveLine."Quantity (Base)";
                      PurchLineTmp.MODIFY;
                      ReceiveLine."Quantity (Base)" := 0;
                    END;
                  UNTIL (PurchLineTmp.NEXT = 0) OR (ReceiveLine."Quantity (Base)" = 0);

                IF ReceiveLine."Quantity (Base)" <> 0 THEN BEGIN
                  PurchLineTmp.SETRANGE("Unit of Measure Code");
                  IF PurchLineTmp.FIND('-') THEN
                    REPEAT
                      IF ReceiveLine."Quantity (Base)" >= PurchLineTmp."Qty. to Receive (Base)" THEN BEGIN
                        ReceiveLine."Quantity (Base)" :=
                          ReceiveLine."Quantity (Base)" - PurchLineTmp."Qty. to Receive (Base)";
                        PurchLineTmp.DELETE;
                      END ELSE BEGIN
                        PurchLineTmp."Qty. to Receive (Base)" :=
                          PurchLineTmp."Qty. to Receive (Base)" - ReceiveLine."Quantity (Base)";
                        PurchLineTmp.MODIFY;
                        ReceiveLine."Quantity (Base)" := 0;
                      END;
                    UNTIL (PurchLineTmp.NEXT = 0) OR (ReceiveLine."Quantity (Base)" = 0);

                  IF ReceiveLine."Quantity (Base)" <> 0 THEN
                    ERROR(Text001);
                END;
              UNTIL ReceiveLine.NEXT = 0;

            // Calculate lines by documents
            MultiDocReceiveTmp.RESET;
            MultiDocReceiveTmp.DELETEALL;
            MultiDocReceiveLineTmp.RESET;
            MultiDocReceiveLineTmp.DELETEALL;

            CurrentReceiveLine.RESET;
            CurrentReceiveLine.SETRANGE("Receive No.",CurrentReceive."No.");
            CurrentReceiveLine.SETFILTER("No.",'<>%1','');
            CurrentReceiveLine.SETFILTER(Quantity,'<>0');
            IF CurrentReceiveLine.FIND('-') THEN BEGIN
              REPEAT
                OrgCurrentReceiveLine := CurrentReceiveLine;

                CASE CurrentReceiveLine.Type OF
                  CurrentReceiveLine.Type::"Account (G/L)",CurrentReceiveLine.Type::Item,
                  CurrentReceiveLine.Type::"3":
                    BEGIN
                      PurchLineTmp.RESET;
                      PurchLineTmp.SETCURRENTKEY("Document Type",Type,"No.","Variant Code");
                      PurchLineTmp.SETRANGE("Document Type",CurrentReceiveLine."Source Subtype");
                      IF CurrentReceiveLine."Selected Source ID" <> '' THEN
                        PurchLineTmp.SETRANGE("Document No.",CurrentReceiveLine."Selected Source ID");
                      PurchLineTmp.SETRANGE(Type,CurrentReceiveLine.Type);
                      PurchLineTmp.SETRANGE("No.",CurrentReceiveLine."No.");
                      PurchLineTmp.SETRANGE("Variant Code",CurrentReceiveLine."Variant Code");
                      PurchLineTmp.SETRANGE(
                        "Unit of Measure Code",CurrentReceiveLine."Unit of Measure Code");
                      IF PurchLineTmp.FIND('-') THEN
                        REPEAT
                          IF CurrentReceiveLine."Quantity (Base)" >=
                             PurchLineTmp."Qty. to Receive (Base)"
                          THEN BEGIN
                            UpdateTmpTables(
                              MultiDocReceiveTmp,MultiDocReceiveLineTmp,CurrentReceive,
                              OrgCurrentReceiveLine,PurchLineTmp."Document No.",
                              PurchLineTmp."Qty. to Receive (Base)");

                            CurrentReceiveLine."Quantity (Base)" :=
                              CurrentReceiveLine."Quantity (Base)" -
                              PurchLineTmp."Qty. to Receive (Base)";
                            PurchLineTmp.DELETE;
                          END ELSE BEGIN
                            UpdateTmpTables(
                              MultiDocReceiveTmp,MultiDocReceiveLineTmp,CurrentReceive,
                              OrgCurrentReceiveLine,PurchLineTmp."Document No.",
                              CurrentReceiveLine."Quantity (Base)");

                            PurchLineTmp."Qty. to Receive (Base)" :=
                              PurchLineTmp."Qty. to Receive (Base)" -
                              CurrentReceiveLine."Quantity (Base)";
                            PurchLineTmp.MODIFY;
                            CurrentReceiveLine."Quantity (Base)" := 0;
                          END;
                        UNTIL (PurchLineTmp.NEXT = 0) OR (CurrentReceiveLine."Quantity (Base)" = 0);

                      IF CurrentReceiveLine."Quantity (Base)" <> 0 THEN BEGIN
                        PurchLineTmp.SETRANGE("Unit of Measure Code");
                        IF PurchLineTmp.FIND('-') THEN
                          REPEAT
                            IF CurrentReceiveLine."Quantity (Base)" >=
                               PurchLineTmp."Qty. to Receive (Base)"
                            THEN BEGIN
                              UpdateTmpTables(
                                MultiDocReceiveTmp,MultiDocReceiveLineTmp,CurrentReceive,
                                OrgCurrentReceiveLine,PurchLineTmp."Document No.",
                                PurchLineTmp."Qty. to Receive (Base)");

                              CurrentReceiveLine."Quantity (Base)" :=
                                CurrentReceiveLine."Quantity (Base)" -
                                PurchLineTmp."Qty. to Receive (Base)";
                              PurchLineTmp.DELETE;
                            END ELSE BEGIN
                              UpdateTmpTables(
                                MultiDocReceiveTmp,MultiDocReceiveLineTmp,CurrentReceive,
                                OrgCurrentReceiveLine,PurchLineTmp."Document No.",
                                CurrentReceiveLine."Quantity (Base)");

                              PurchLineTmp."Qty. to Receive (Base)" :=
                                PurchLineTmp."Qty. to Receive (Base)" -
                                CurrentReceiveLine."Quantity (Base)";
                              PurchLineTmp.MODIFY;
                              CurrentReceiveLine."Quantity (Base)" := 0;
                            END;
                          UNTIL (PurchLineTmp.NEXT = 0) OR (CurrentReceiveLine."Quantity (Base)" = 0);

                        IF CurrentReceiveLine."Quantity (Base)" <> 0 THEN
                          ERROR(Text001);
                      END;
                    END;
                  CurrentReceiveLine.Type::Receive:
                    BEGIN
                      Receive.RESET;
                      Receive.SETCURRENTKEY("Original Receive No.");
                      Receive.SETRANGE("Original Receive No.",CurrentReceiveLine."No.");
                      IF Receive.FIND('-') THEN
                        REPEAT
                          UpdateTmpTables(
                            MultiDocReceiveTmp,MultiDocReceiveLineTmp,CurrentReceive,
                            OrgCurrentReceiveLine,Receive."Source ID",
                            Receive."Distribution Factor");

                          CurrentReceiveLine."Quantity (Base)" :=
                            CurrentReceiveLine."Quantity (Base)" - Receive."Distribution Factor";
                        UNTIL Receive.NEXT = 0;

                      IF CurrentReceiveLine."Quantity (Base)" <> 0 THEN
                        ERROR(Text001);
                    END;
                END;
              UNTIL CurrentReceiveLine.NEXT = 0;
            END ELSE BEGIN
              // Extra Receive
              TempMultiDocNo := CurrentReceive."Multi Document No.";
              WHILE TempMultiDocNo <> '' DO BEGIN
                IF STRPOS(TempMultiDocNo,'|') = 0 THEN
                  TempOrderNo := TempMultiDocNo
                ELSE
                  TempOrderNo := COPYSTR(TempMultiDocNo,1,STRPOS(TempMultiDocNo,'|') - 1);

                NoOfOrders := NoOfOrders + 1;
                MultiDocReceiveTmp := CurrentReceive;
                MultiDocReceiveTmp."No." := CurrentReceive."No." + '-' + TempOrderNo;
                MultiDocReceiveTmp."Source ID" := TempOrderNo;
                MultiDocReceiveTmp."Shipping Charge" := 1;
                MultiDocReceiveTmp.INSERT;

                CurrentReceiveLine.RESET;
                CurrentReceiveLine.SETRANGE("Receive No.",CurrentReceive."No.");
                IF CurrentReceiveLine.FIND('-') THEN
                  REPEAT
                    MultiDocReceiveLineTmp := CurrentReceiveLine;
                    MultiDocReceiveLineTmp."Receive No." := MultiDocReceiveTmp."No.";
                    MultiDocReceiveLineTmp.INSERT;
                  UNTIL CurrentReceiveLine.NEXT = 0;

                IF STRPOS(TempMultiDocNo,'|') = 0 THEN
                  TempMultiDocNo := ''
                ELSE
                  TempMultiDocNo := COPYSTR(TempMultiDocNo,STRPOS(TempMultiDocNo,'|') + 1);
              END;
            END;
          END;
        DATABASE::"Transfer Header":
          BEGIN
            // reset temporary tables
            TransferLineTmp.RESET;
            TransferLineTmp.DELETEALL;

            // Calculate quantity to receive
            TransferLine.RESET;
            TransferLine.SETFILTER("Document No.",CurrentReceive."Multi Document No.");
            TransferLine.SETFILTER("Qty. in Transit",'<>0');
            IF ReceiveSetup."Location Receiving" THEN
              TransferLine.SETRANGE("Transfer-to Code",ReceiveStation."Location Code");
            TransferLine.SETRANGE("Derived From Line No.",0);
            IF TransferLine.FIND('-') THEN
              REPEAT
                TransferLineTmp := TransferLine;

                // Additional code required in Attain
                IF ReceiveSetup."Qty. to Receive as" = ReceiveSetup."Qty. to Receive as"::"Outstanding Quantity"
                THEN BEGIN
                  TransferLineTmp."Qty. to Receive" := TransferLineTmp."Qty. in Transit";
                  TransferLineTmp."Qty. to Receive (Base)" := TransferLineTmp."Qty. in Transit (Base)";
                END;

                IF TransferLineTmp."Qty. to Receive (Base)" <> 0 THEN
                  TransferLineTmp.INSERT;
              UNTIL TransferLine.NEXT = 0;

            // remove already received
            ReceiveLine.RESET;
            ReceiveLine.SETCURRENTKEY("Source Type","Source Subtype","Source ID");
            ReceiveLine.SETRANGE("Source Type",CurrentReceive."Source Type");
            ReceiveLine.SETRANGE("Source Subtype",CurrentReceive."Source Subtype");
            ReceiveLine.SETFILTER("Source ID",CurrentReceive."Multi Document No.");
            ReceiveLine.SETFILTER("Receive No.",'<>%1',CurrentReceive."No.");
            ReceiveLine.SETRANGE(Type,ReceiveLine.Type::"Account (G/L)",ReceiveLine.Type::"3");
            ReceiveLine.SETFILTER("Quantity (Base)",'<>0');
            IF ReceiveSetup."Location Receiving" THEN
              ReceiveLine.SETRANGE("Location Code",ReceiveStation."Location Code");
            IF ReceiveLine.FIND('-') THEN
              REPEAT
                TransferLineTmp.RESET;
                TransferLineTmp.SETCURRENTKEY("Item No.");
                TransferLineTmp.SETRANGE("Document No.",ReceiveLine."Source ID");
                TransferLineTmp.SETRANGE("Item No.",ReceiveLine."No.");
                TransferLineTmp.SETRANGE("Variant Code",ReceiveLine."Variant Code");
                TransferLineTmp.SETRANGE("Unit of Measure Code",ReceiveLine."Unit of Measure Code");
                IF TransferLineTmp.FIND('-') THEN
                  REPEAT
                    IF ReceiveLine."Quantity (Base)" >= TransferLineTmp."Qty. to Receive (Base)" THEN BEGIN
                      ReceiveLine."Quantity (Base)" :=
                        ReceiveLine."Quantity (Base)" - TransferLineTmp."Qty. to Receive (Base)";
                      TransferLineTmp.DELETE;
                    END ELSE BEGIN
                      TransferLineTmp."Qty. to Receive (Base)" :=
                        TransferLineTmp."Qty. to Receive (Base)" - ReceiveLine."Quantity (Base)";
                      TransferLineTmp.MODIFY;
                      ReceiveLine."Quantity (Base)" := 0;
                    END;
                  UNTIL (TransferLineTmp.NEXT = 0) OR (ReceiveLine."Quantity (Base)" = 0);

                IF ReceiveLine."Quantity (Base)" <> 0 THEN BEGIN
                  TransferLineTmp.SETRANGE("Unit of Measure Code");
                  IF TransferLineTmp.FIND('-') THEN
                    REPEAT
                      IF ReceiveLine."Quantity (Base)" >= TransferLineTmp."Qty. to Receive (Base)" THEN BEGIN
                        ReceiveLine."Quantity (Base)" :=
                          ReceiveLine."Quantity (Base)" - TransferLineTmp."Qty. to Receive (Base)";
                        TransferLineTmp.DELETE;
                      END ELSE BEGIN
                        TransferLineTmp."Qty. to Receive (Base)" :=
                          TransferLineTmp."Qty. to Receive (Base)" - ReceiveLine."Quantity (Base)";
                        TransferLineTmp.MODIFY;
                        ReceiveLine."Quantity (Base)" := 0;
                      END;
                    UNTIL (TransferLineTmp.NEXT = 0) OR (ReceiveLine."Quantity (Base)" = 0);

                  IF ReceiveLine."Quantity (Base)" <> 0 THEN
                    ERROR(Text001);
                END;
              UNTIL ReceiveLine.NEXT = 0;

            // Calculate lines by documents
            MultiDocReceiveTmp.RESET;
            MultiDocReceiveTmp.DELETEALL;
            MultiDocReceiveLineTmp.RESET;
            MultiDocReceiveLineTmp.DELETEALL;

            CurrentReceiveLine.RESET;
            CurrentReceiveLine.SETRANGE("Receive No.",CurrentReceive."No.");
            CurrentReceiveLine.SETFILTER("No.",'<>%1','');
            CurrentReceiveLine.SETFILTER(Quantity,'<>0');
            IF CurrentReceiveLine.FIND('-') THEN BEGIN
              REPEAT
                OrgCurrentReceiveLine := CurrentReceiveLine;

                CASE CurrentReceiveLine.Type OF
                  CurrentReceiveLine.Type::"Account (G/L)",CurrentReceiveLine.Type::Item,
                  CurrentReceiveLine.Type::"3":
                    BEGIN
                      TransferLineTmp.RESET;
                      TransferLineTmp.SETCURRENTKEY("Item No.");
                      IF CurrentReceiveLine."Selected Source ID" <> '' THEN
                        TransferLineTmp.SETRANGE("Document No.",CurrentReceiveLine."Selected Source ID");
                      TransferLineTmp.SETRANGE("Item No.",CurrentReceiveLine."No.");
                      TransferLineTmp.SETRANGE("Variant Code",CurrentReceiveLine."Variant Code");
                      TransferLineTmp.SETRANGE(
                        "Unit of Measure Code",CurrentReceiveLine."Unit of Measure Code");
                      IF TransferLineTmp.FIND('-') THEN
                        REPEAT
                          IF CurrentReceiveLine."Quantity (Base)" >=
                             TransferLineTmp."Qty. to Receive (Base)"
                          THEN BEGIN
                            UpdateTmpTables(
                              MultiDocReceiveTmp,MultiDocReceiveLineTmp,CurrentReceive,
                              OrgCurrentReceiveLine,TransferLineTmp."Document No.",
                              TransferLineTmp."Qty. to Receive (Base)");

                            CurrentReceiveLine."Quantity (Base)" :=
                              CurrentReceiveLine."Quantity (Base)" -
                              TransferLineTmp."Qty. to Receive (Base)";
                            TransferLineTmp.DELETE;
                          END ELSE BEGIN
                            UpdateTmpTables(
                              MultiDocReceiveTmp,MultiDocReceiveLineTmp,CurrentReceive,
                              OrgCurrentReceiveLine,TransferLineTmp."Document No.",
                              CurrentReceiveLine."Quantity (Base)");

                            TransferLineTmp."Qty. to Receive (Base)" :=
                              TransferLineTmp."Qty. to Receive (Base)" -
                              CurrentReceiveLine."Quantity (Base)";
                            TransferLineTmp.MODIFY;
                            CurrentReceiveLine."Quantity (Base)" := 0;
                          END;
                        UNTIL (TransferLineTmp.NEXT = 0) OR (CurrentReceiveLine."Quantity (Base)" = 0);

                      IF CurrentReceiveLine."Quantity (Base)" <> 0 THEN BEGIN
                        TransferLineTmp.SETRANGE("Unit of Measure Code");
                        IF TransferLineTmp.FIND('-') THEN
                          REPEAT
                            IF CurrentReceiveLine."Quantity (Base)" >=
                               TransferLineTmp."Qty. to Receive (Base)"
                            THEN BEGIN
                              UpdateTmpTables(
                                MultiDocReceiveTmp,MultiDocReceiveLineTmp,CurrentReceive,
                                OrgCurrentReceiveLine,TransferLineTmp."Document No.",
                                TransferLineTmp."Qty. to Receive (Base)");

                              CurrentReceiveLine."Quantity (Base)" :=
                                CurrentReceiveLine."Quantity (Base)" -
                                TransferLineTmp."Qty. to Receive (Base)";
                              TransferLineTmp.DELETE;
                            END ELSE BEGIN
                              UpdateTmpTables(
                                MultiDocReceiveTmp,MultiDocReceiveLineTmp,CurrentReceive,
                                OrgCurrentReceiveLine,TransferLineTmp."Document No.",
                                CurrentReceiveLine."Quantity (Base)");

                              TransferLineTmp."Qty. to Receive (Base)" :=
                                TransferLineTmp."Qty. to Receive (Base)" -
                                CurrentReceiveLine."Quantity (Base)";
                              TransferLineTmp.MODIFY;
                              CurrentReceiveLine."Quantity (Base)" := 0;
                            END;
                          UNTIL (TransferLineTmp.NEXT = 0) OR (CurrentReceiveLine."Quantity (Base)" = 0);

                        IF CurrentReceiveLine."Quantity (Base)" <> 0 THEN
                          ERROR(Text001);
                      END;
                    END;
                  CurrentReceiveLine.Type::Receive:
                    BEGIN
                      Receive.RESET;
                      Receive.SETCURRENTKEY("Original Receive No.");
                      Receive.SETRANGE("Original Receive No.",CurrentReceiveLine."No.");
                      IF Receive.FIND('-') THEN
                        REPEAT
                          UpdateTmpTables(
                            MultiDocReceiveTmp,MultiDocReceiveLineTmp,CurrentReceive,
                            OrgCurrentReceiveLine,Receive."Source ID",
                            Receive."Distribution Factor");

                          CurrentReceiveLine."Quantity (Base)" :=
                            CurrentReceiveLine."Quantity (Base)" - Receive."Distribution Factor";
                        UNTIL Receive.NEXT = 0;

                      IF CurrentReceiveLine."Quantity (Base)" <> 0 THEN
                        ERROR(Text001);
                    END;
                END;
              UNTIL CurrentReceiveLine.NEXT = 0;
            END ELSE BEGIN
              // Extra Receive
              TempMultiDocNo := CurrentReceive."Multi Document No.";
              WHILE TempMultiDocNo <> '' DO BEGIN
                IF STRPOS(TempMultiDocNo,'|') = 0 THEN
                  TempOrderNo := TempMultiDocNo
                ELSE
                  TempOrderNo := COPYSTR(TempMultiDocNo,1,STRPOS(TempMultiDocNo,'|') - 1);

                NoOfOrders := NoOfOrders + 1;
                MultiDocReceiveTmp := CurrentReceive;
                MultiDocReceiveTmp."No." := CurrentReceive."No." + '-' + TempOrderNo;
                MultiDocReceiveTmp."Source ID" := TempOrderNo;
                MultiDocReceiveTmp."Shipping Charge" := 1;
                MultiDocReceiveTmp.INSERT;

                CurrentReceiveLine.RESET;
                CurrentReceiveLine.SETRANGE("Receive No.",CurrentReceive."No.");
                IF CurrentReceiveLine.FIND('-') THEN
                  REPEAT
                    MultiDocReceiveLineTmp := CurrentReceiveLine;
                    MultiDocReceiveLineTmp."Receive No." := MultiDocReceiveTmp."No.";
                    MultiDocReceiveLineTmp.INSERT;
                  UNTIL CurrentReceiveLine.NEXT = 0;

                IF STRPOS(TempMultiDocNo,'|') = 0 THEN
                  TempMultiDocNo := ''
                ELSE
                  TempMultiDocNo := COPYSTR(TempMultiDocNo,STRPOS(TempMultiDocNo,'|') + 1);
              END;
            END;
          END;
        ELSE
          ReceiveControl.ErrorUnknownSourceType(
            CurrentReceive."Source Type",CurrentReceive."Source Subtype",CurrentReceive."Source ID");
      END;

      // Calculate Total Cost Factor
      NoOfOrders := 0;
      TotalCostFactor := 0;
      IF MultiDocReceiveTmp.FIND('-') THEN
        REPEAT
          NoOfOrders := NoOfOrders + 1;
          TotalCostFactor := TotalCostFactor + MultiDocReceiveTmp."Shipping Charge";
        UNTIL MultiDocReceiveTmp.NEXT = 0;

      // Calculate Total Cost Factor Lines
      CurrentReceiveLine.RESET;
      CurrentReceiveLine.SETRANGE("Receive No.",CurrentReceive."No.");
      IF CurrentReceiveLine.FIND('-') THEN
        REPEAT
          TotalChargeReceiveLineTmp := CurrentReceiveLine;
          TotalChargeReceiveLineTmp.INIT;

          MultiDocReceiveLineTmp.RESET;
          MultiDocReceiveLineTmp.SETRANGE("Receive No.",CurrentReceiveLine."Receive No.");
          MultiDocReceiveLineTmp.SETRANGE("Line No.",CurrentReceiveLine."Line No.");
          IF MultiDocReceiveLineTmp.FIND('-') THEN BEGIN
            REPEAT
              TotalChargeReceiveLineTmp.Quantity := TotalChargeReceiveLineTmp.Quantity + 1;
              TotalChargeReceiveLineTmp."Quantity (Base)" :=
                TotalChargeReceiveLineTmp."Quantity (Base)" + MultiDocReceiveLineTmp."Quantity (Base)";
            UNTIL MultiDocReceiveLineTmp.NEXT = 0;
          END ELSE BEGIN
            TotalChargeReceiveLineTmp.Quantity := NoOfOrders;
            TotalChargeReceiveLineTmp."Quantity (Base)" := NoOfOrders;
          END;

          TotalChargeReceiveLineTmp.INSERT;

          TotalChargeReceiveLine2Tmp := CurrentReceiveLine;
          TotalChargeReceiveLine2Tmp.INIT;
          TotalChargeReceiveLine2Tmp.INSERT;
        UNTIL CurrentReceiveLine.NEXT = 0;

      // Create New Receives
      CLEAR(TotalChargesReceive);
      CurrentOrders := 0;
      IF MultiDocReceiveTmp.FIND('-') THEN BEGIN
        REPEAT
          CurrentOrders := CurrentOrders + 1;
          Receive := CurrentReceive;
          Receive."No." := MultiDocReceiveTmp."No.";
          Receive."Source ID" := MultiDocReceiveTmp."Source ID";
          Receive."Original Receive No." := CurrentReceive."No.";
          Receive."Original Shipping Charge" := Receive."Shipping Charge";

          CASE CurrentReceive."Source Type" OF
            DATABASE::"Sales Header":
              BEGIN
                IF SalesHeader.GET(CurrentReceive."Source Subtype",MultiDocReceiveTmp."Source ID")
                THEN BEGIN
                  Receive."External Document No." := SalesHeader."External Document No.";
                END;
              END;
            DATABASE::"Purchase Header":
              BEGIN
                IF PurchHeader.GET(CurrentReceive."Source Subtype",MultiDocReceiveTmp."Source ID")
                THEN BEGIN
                  Receive."External Document No." := PurchHeader."Vendor Cr. Memo No.";
                END;
              END;
            DATABASE::"Transfer Header":
              BEGIN
                IF TransferHeader.GET(MultiDocReceiveTmp."Source ID")
                THEN BEGIN
                  Receive."External Document No." := '';
                END;
              END;
            ELSE
              ReceiveControl.ErrorUnknownSourceType(
                CurrentReceive."Source Type",CurrentReceive."Source Subtype",CurrentReceive."Source ID");
          END;

          IF TotalCostFactor = 0 THEN
            CostFactor := 1 / NoOfOrders
          ELSE
            CostFactor := MultiDocReceiveTmp."Shipping Charge" / TotalCostFactor;
          Receive."Distribution Factor" := CostFactor;
          Receive.DivideQuantityAndValueFields(
            CurrentReceive,TotalChargesReceive,CostFactor,CurrentOrders = NoOfOrders);

          Receive.INSERT;

          CurrentReceiveLine.RESET;
          CurrentReceiveLine.SETRANGE("Receive No.",CurrentReceive."No.");
          IF CurrentReceiveLine.FIND('-') THEN
            REPEAT
              ReceiveLine := CurrentReceiveLine;
              ReceiveLine."Receive No." := Receive."No.";
              ReceiveLine."Source ID" := Receive."Source ID";
              ReceiveLine."Multi Document Quantity" := ReceiveLine.Quantity;
              ReceiveLine."Multi Document Qty. (Base)" := ReceiveLine."Quantity (Base)";

              TotalChargeReceiveLineTmp.GET(
                CurrentReceiveLine."Receive No.",CurrentReceiveLine."Line No.");
              TotalChargeReceiveLineTmp.Quantity := TotalChargeReceiveLineTmp.Quantity - 1;
              TotalChargeReceiveLine2Tmp.GET(
                CurrentReceiveLine."Receive No.",CurrentReceiveLine."Line No.");

              MultiDocReceiveLineTmp.RESET;
              MultiDocReceiveLineTmp.SETRANGE("Line No.",CurrentReceiveLine."Line No.");
              IF MultiDocReceiveLineTmp.FIND('-') THEN BEGIN
                IF MultiDocReceiveLineTmp.GET(Receive."No.",CurrentReceiveLine."Line No.") THEN BEGIN
                  ReceiveLine.DivideQuantityAndValueFields(
                    CurrentReceiveLine,TotalChargeReceiveLine2Tmp,
                    MultiDocReceiveLineTmp."Quantity (Base)" / ReceiveLine."Quantity (Base)",
                    TotalChargeReceiveLineTmp.Quantity = 0);
                END ELSE BEGIN
                  ReceiveLine.DivideQuantityAndValueFields(
                    CurrentReceiveLine,TotalChargeReceiveLine2Tmp,0,
                    TotalChargeReceiveLineTmp.Quantity = 0);
                END;
              END ELSE BEGIN
                ReceiveLine.DivideQuantityAndValueFields(
                  CurrentReceiveLine,TotalChargeReceiveLine2Tmp,CostFactor,
                  TotalChargeReceiveLineTmp.Quantity = 0);
              END;
              TotalChargeReceiveLineTmp.MODIFY;
              TotalChargeReceiveLine2Tmp.MODIFY;

              ReceiveLine.INSERT;
            UNTIL CurrentReceiveLine.NEXT = 0;
        UNTIL MultiDocReceiveTmp.NEXT = 0;
      END ELSE
        ERROR(Text002);

      // Modify Current Receive to have no Source ID
      CurrentReceive."Source ID" := '';
      CurrentReceive."Multi Document Receive Split" := TRUE;
      CurrentReceive.MODIFY;

      CurrentReceiveLine.RESET;
      CurrentReceiveLine.SETRANGE("Receive No.",CurrentReceive."No.");
      IF CurrentReceiveLine.FIND('-') THEN
        REPEAT
          CurrentReceiveLine."Source ID" := '';
          CurrentReceiveLine.MODIFY;
        UNTIL CurrentReceiveLine.NEXT = 0;
    END;

    PROCEDURE CombineMultiDocReceive@3(VAR CurrentReceive@1240030000 : Record 14000601;VAR MultiDocReceiveTmp@1240030001 : Record 14000601);
    VAR
      Receive@1240030002 : Record 14000601;
      ReceiveLine@1240030003 : Record 14000602;
      PostedReceive@1240030004 : Record 14000603;
    BEGIN
      CurrentReceive.TESTFIELD(Closed);
      CurrentReceive.TESTFIELD("Source ID");
      CurrentReceive.TESTFIELD("Multi Document Receive");
      CurrentReceive.TESTFIELD("Multi Document Receive Split",FALSE);
      IF CurrentReceive."Original Receive No." = '' THEN BEGIN
        MultiDocReceiveTmp := CurrentReceive;
        MultiDocReceiveTmp.INSERT;

        EXIT;
      END;

      GetReceiveSetup;

      PostedReceive.RESET;
      PostedReceive.SETCURRENTKEY("Original Receive No.");
      PostedReceive.SETRANGE("Original Receive No.",CurrentReceive."Original Receive No.");
      IF PostedReceive.FIND('-') THEN
        ERROR(Text003);

      // delete order Receives
      MultiDocReceiveTmp.RESET;
      MultiDocReceiveTmp.DELETEALL;
      Receive.RESET;
      Receive.SETCURRENTKEY("Original Receive No.");
      Receive.SETRANGE("Original Receive No.",CurrentReceive."Original Receive No.");
      IF Receive.FIND('-') THEN
        REPEAT
          MultiDocReceiveTmp := Receive;
          MultiDocReceiveTmp.INSERT;

          DeleteMultiDocReceive(Receive);
        UNTIL Receive.NEXT = 0;

      // Modify Current Receive to have Source ID.
      Receive.GET(CurrentReceive."Original Receive No.");
      Receive."Source ID" := CurrentReceive."Source ID";
      Receive."Multi Document Receive Split" := FALSE;
      Receive.MODIFY;

      ReceiveLine.RESET;
      ReceiveLine.SETRANGE("Receive No.",Receive."No.");
      IF ReceiveLine.FIND('-') THEN
        REPEAT
          IF ReceiveSetup."Select Multi Document Source" THEN
            ReceiveLine."Selected Source ID" := ReceiveLine."Source ID";
          ReceiveLine."Source ID" := CurrentReceive."Source ID";
          ReceiveLine.MODIFY;
        UNTIL ReceiveLine.NEXT = 0;

      CurrentReceive := Receive;
    END;

    PROCEDURE DeleteMultiDocReceive@4(VAR CurrentReceive@1240030000 : Record 14000601);
    VAR
      CurrentReceiveLine@1240030001 : Record 14000602;
    BEGIN
      WITH CurrentReceive DO BEGIN
        TESTFIELD(Closed);
        TESTFIELD("Multi Document Receive");
        TESTFIELD("Multi Document Receive Split",FALSE);
        TESTFIELD("Source ID");

        DELETE;

        CurrentReceiveLine.RESET;
        CurrentReceiveLine.SETRANGE("Receive No.","No.");
        CurrentReceiveLine.DELETEALL;
      END;
    END;

    PROCEDURE CombineMultiPurchOrders@5(ReceiveStation@1240030000 : Record 14000608;ReceiveSetup@1240030001 : Record 14000607;SourceType@1240030002 : Integer;SourceSubtype@1240030003 : Integer;SourceID@1240030004 : Code[20];NewSourceID@1240030005 : Code[20];VAR MultiDocNo@1240030006 : Code[250];VAR MultiDoc@1240030007 : Boolean);
    VAR
      Receive@1240030008 : Record 14000601;
      ReceiveTmp@1240030009 : TEMPORARY Record 14000601;
      OrgMultiDocNo@1240030010 : Code[250];
      OrgMultiDoc@1240030011 : Boolean;
      NewMultiDoc@1240030012 : Boolean;
      NewMultiDocNo@1240030013 : Text[250];
    BEGIN
      Receive.RESET;
      Receive.SETCURRENTKEY("Source Type","Source Subtype","Source ID");
      Receive.SETRANGE("Source Type",SourceType);
      Receive.SETRANGE("Source Subtype",SourceSubtype);
      Receive.SETRANGE("Source ID",SourceID);
      IF ReceiveSetup."Location Receiving" THEN
        Receive.SETRANGE("Location Code",ReceiveStation."Location Code");
      IF Receive.FIND('-') THEN BEGIN
        MultiDoc := Receive."Multi Document Receive";
        IF Receive."Multi Document Receive" THEN
          MultiDocNo := Receive."Multi Document No."
        ELSE
          MultiDocNo := Receive."Source ID";
      END ELSE BEGIN
        Receive.RESET;
        Receive.SETRANGE("Source Type",SourceType);
        Receive.SETRANGE("Source Subtype",SourceSubtype);
        Receive.SETRANGE("Multi Document Receive",TRUE);
        Receive.SETFILTER("Multi Document No.",'*%1*',SourceID);
        IF ReceiveSetup."Location Receiving" THEN
          Receive.SETRANGE("Location Code",ReceiveStation."Location Code");
        IF Receive.FIND('-') THEN
          REPEAT
            IF ((Receive."Multi Document No." = SourceID) OR
                (STRPOS(Receive."Multi Document No.",'|' + SourceID) <> 0) OR
                (STRPOS(Receive."Multi Document No.",SourceID + '|') <> 0))
            THEN BEGIN
              MultiDoc := Receive."Multi Document Receive";
              MultiDocNo := Receive."Multi Document No.";
            END;
          UNTIL (Receive.NEXT = 0) OR MultiDoc;
      END;

      Receive.RESET;
      Receive.SETCURRENTKEY("Source Type","Source Subtype","Source ID");
      Receive.SETRANGE("Source Type",SourceType);
      Receive.SETRANGE("Source Subtype",SourceSubtype);
      Receive.SETRANGE("Source ID",NewSourceID);
      IF ReceiveSetup."Location Receiving" THEN
        Receive.SETRANGE("Location Code",ReceiveStation."Location Code");
      IF Receive.FIND('-') THEN BEGIN
        NewMultiDoc := Receive."Multi Document Receive";
        IF Receive."Multi Document Receive" THEN
          NewMultiDocNo := Receive."Multi Document No."
        ELSE
          NewMultiDocNo := Receive."Source ID";
      END ELSE BEGIN
        Receive.RESET;
        Receive.SETRANGE("Source Type",SourceType);
        Receive.SETRANGE("Source Subtype",SourceSubtype);
        Receive.SETRANGE("Multi Document Receive",TRUE);
        Receive.SETFILTER("Multi Document No.",'*%1*',NewSourceID);
        IF ReceiveSetup."Location Receiving" THEN
          Receive.SETRANGE("Location Code",ReceiveStation."Location Code");
        IF Receive.FIND('-') THEN
          REPEAT
            IF ((Receive."Multi Document No." = NewSourceID) OR
                (STRPOS(Receive."Multi Document No.",'|' + NewSourceID) <> 0) OR
                (STRPOS(Receive."Multi Document No.",NewSourceID + '|') <> 0))
            THEN BEGIN
              NewMultiDoc := Receive."Multi Document Receive";
              NewMultiDocNo := Receive."Multi Document No.";
            END;
          UNTIL (Receive.NEXT = 0) OR NewMultiDoc;
      END;

      OrgMultiDocNo := MultiDocNo;
      OrgMultiDoc := MultiDoc;
      CASE TRUE OF
        MultiDoc AND NewMultiDoc:
          BEGIN
            IF MultiDocNo = NewMultiDocNo THEN
              ERROR(Text004);

            IF STRLEN(MultiDocNo) + STRLEN(NewMultiDocNo) + 1 >
               MAXSTRLEN(Receive."Multi Document No.")
            THEN
              ERROR(Text005);

            MultiDoc := TRUE;
            MultiDocNo := MultiDocNo + '|' + NewMultiDocNo;
          END;
        MultiDoc:
          BEGIN
            IF STRPOS(MultiDocNo,NewSourceID) <> 0 THEN
              ERROR(Text004);

            IF STRLEN(MultiDocNo) + STRLEN(NewSourceID) + 1 >
               MAXSTRLEN(Receive."Multi Document No.")
            THEN
              ERROR(Text005);

            MultiDoc := TRUE;
            MultiDocNo := MultiDocNo + '|' + NewSourceID;
          END;
        NewMultiDoc:
          BEGIN
            IF SourceID = NewSourceID THEN
              ERROR(Text006);

            MultiDoc := TRUE;
            MultiDocNo := NewMultiDocNo + '|' + SourceID;
          END;
        ELSE BEGIN
          MultiDoc := TRUE;
          MultiDocNo := SourceID + '|' + NewSourceID;
        END;
      END;

      ReceiveTmp.DELETEALL;
      Receive.RESET;
      Receive.SETCURRENTKEY("Source Type","Source Subtype","Source ID");
      Receive.SETRANGE("Source Type",SourceType);
      Receive.SETRANGE("Source Subtype",SourceSubtype);
      IF OrgMultiDoc THEN
        Receive.SETFILTER("Source ID",OrgMultiDocNo)
      ELSE
        Receive.SETRANGE("Source ID",SourceID);
      IF ReceiveSetup."Location Receiving" THEN
        Receive.SETRANGE("Location Code",ReceiveStation."Location Code");
      IF Receive.FIND('-') THEN
        REPEAT
          Receive.TESTFIELD(Closed);
          Receive.TESTFIELD("Total Receives",1);

          ReceiveTmp := Receive;
          ReceiveTmp.INSERT;
        UNTIL Receive.NEXT = 0;

      Receive.RESET;
      Receive.SETCURRENTKEY("Source Type","Source Subtype","Source ID");
      Receive.SETRANGE("Source Type",SourceType);
      Receive.SETRANGE("Source Subtype",SourceSubtype);
      IF NewMultiDoc THEN
        Receive.SETFILTER("Source ID",NewMultiDocNo)
      ELSE
        Receive.SETRANGE("Source ID",NewSourceID);
      IF ReceiveSetup."Location Receiving" THEN
        Receive.SETRANGE("Location Code",ReceiveStation."Location Code");
      IF Receive.FIND('-') THEN
        REPEAT
          Receive.TESTFIELD(Closed);
          Receive.TESTFIELD("Total Receives",1);

          ReceiveTmp := Receive;
          ReceiveTmp.INSERT;
        UNTIL Receive.NEXT = 0;

      IF ReceiveTmp.FIND('-') THEN
        REPEAT
          Receive.GET(ReceiveTmp."No.");
          ModifySplitOldReceive(Receive,MultiDocNo);
        UNTIL ReceiveTmp.NEXT = 0;
    END;

    PROCEDURE ModifySplitOldReceive@8(CurrentReceive@1240030000 : Record 14000601;MultiDocNo@1240030001 : Code[250]);
    VAR
      Receive2@1240030002 : Record 14000601;
      ReceiveLine@1240030003 : Record 14000602;
      ReceiveLine2@1240030004 : Record 14000602;
    BEGIN
      IF CurrentReceive."Multi Document Receive" THEN BEGIN
        CurrentReceive."Multi Document No." := MultiDocNo;
        CurrentReceive.MODIFY;

        Receive2.RESET;
        Receive2.GET(CurrentReceive."Original Receive No.");
        Receive2."Multi Document No." := MultiDocNo;
        Receive2.MODIFY;
      END ELSE BEGIN
        CurrentReceive.TESTFIELD("Multi Document Receive Split",FALSE);

        Receive2 := CurrentReceive;
        Receive2."No." := Receive2."No." + '-' + CurrentReceive."Source ID";
        Receive2."Multi Document Receive" := TRUE;
        Receive2."Multi Document No." := MultiDocNo;
        Receive2."Original Receive No.":= CurrentReceive."No.";
        Receive2."Original Shipping Charge" := CurrentReceive."Shipping Charge";
        Receive2."Distribution Factor" := 1;
        Receive2.INSERT;

        ReceiveLine.RESET;
        ReceiveLine.SETRANGE("Receive No.",CurrentReceive."No.");
        IF ReceiveLine.FIND('-') THEN
          REPEAT
            ReceiveLine2 := ReceiveLine;
            ReceiveLine2."Receive No." := Receive2."No.";
            ReceiveLine2."Multi Document Quantity" := ReceiveLine.Quantity;
            ReceiveLine2."Multi Document Qty. (Base)" := ReceiveLine."Quantity (Base)";
            ReceiveLine2."Distribution Factor" := 1;
            ReceiveLine2.INSERT;
          UNTIL ReceiveLine.NEXT = 0;

        CurrentReceive."Source ID" := '';
        CurrentReceive."Multi Document Receive" := TRUE;
        CurrentReceive."Multi Document No." := MultiDocNo;
        CurrentReceive."Multi Document Receive Split" := TRUE;
        CurrentReceive.MODIFY;

        ReceiveLine.RESET;
        ReceiveLine.SETRANGE("Receive No.",CurrentReceive."No.");
        IF ReceiveLine.FIND('-') THEN
          REPEAT
            ReceiveLine."Source ID" := '';
            ReceiveLine.MODIFY;
          UNTIL ReceiveLine.NEXT = 0;
      END;
    END;

    PROCEDURE UpdateTmpTables@11(VAR MultiDocReceiveTmp@1240030000 : Record 14000601;VAR MultiDocReceiveLineTmp@1240030001 : Record 14000602;CurrentReceive@1240030002 : Record 14000601;CurrentReceiveLine@1240030003 : Record 14000602;SourceID@1240030004 : Code[20];QuantityBase@1240030005 : Decimal);
    VAR
      CostFactorValue@1240030006 : Decimal;
      NewReceive@1240030007 : Boolean;
    BEGIN
      NewReceive := NOT MultiDocReceiveTmp.GET(CurrentReceiveLine."Receive No." + '-' + SourceID);

      IF NewReceive THEN BEGIN
        MultiDocReceiveTmp := CurrentReceive;
        MultiDocReceiveTmp."No." := CurrentReceiveLine."Receive No." + '-' + SourceID;
        MultiDocReceiveTmp."Source ID" := SourceID;
        MultiDocReceiveTmp."Shipping Charge" := 0;
        MultiDocReceiveTmp.INSERT;
      END;

      CostFactorValue := 0;
      GetReceiveSetup;
      CASE ReceiveSetup."Distribute Cost on Purch.Order" OF
        ReceiveSetup."Distribute Cost on Purch.Order"::" ":
          ReceiveSetup.TESTFIELD("Distribute Cost on Purch.Order");
        ReceiveSetup."Distribute Cost on Purch.Order"::Equal:
          IF NewReceive THEN
            CostFactorValue := 1;
        ReceiveSetup."Distribute Cost on Purch.Order"::"by Weight":
          CASE ReceiveSetup."Actual Weight as" OF
            ReceiveSetup."Actual Weight as"::" ":
              ReceiveSetup.TESTFIELD("Actual Weight as");
            ReceiveSetup."Actual Weight as"::"Net Weight":
              CostFactorValue :=
                QuantityBase *
                (CurrentReceiveLine."Net Weight" / CurrentReceiveLine."Quantity (Base)");
            ReceiveSetup."Actual Weight as"::"Gross Weight":
              CostFactorValue :=
                QuantityBase *
                (CurrentReceiveLine."Gross Weight" / CurrentReceiveLine."Quantity (Base)");
            ReceiveSetup."Actual Weight as"::"Dimmed Weight":
              CostFactorValue :=
                QuantityBase *
                (CurrentReceiveLine."Dimmed Weight" / CurrentReceiveLine."Quantity (Base)");
            ELSE
              ReceiveSetup.FIELDERROR("Actual Weight as",Text007);
          END;
        ReceiveSetup."Distribute Cost on Purch.Order"::"by Volume":
          CostFactorValue :=
            QuantityBase * (CurrentReceiveLine.Volume / CurrentReceiveLine."Quantity (Base)");
        ELSE
          ReceiveSetup.FIELDERROR("Distribute Cost on Purch.Order",Text007);
      END;

      MultiDocReceiveTmp."Shipping Charge" := MultiDocReceiveTmp."Shipping Charge" + CostFactorValue;
      MultiDocReceiveTmp.MODIFY;

      IF MultiDocReceiveLineTmp.GET(MultiDocReceiveTmp."No.",CurrentReceiveLine."Line No.") THEN BEGIN
        MultiDocReceiveLineTmp."Quantity (Base)" :=
          MultiDocReceiveLineTmp."Quantity (Base)" + QuantityBase;
        MultiDocReceiveLineTmp.MODIFY;
      END ELSE BEGIN
        MultiDocReceiveLineTmp := CurrentReceiveLine;
        MultiDocReceiveLineTmp."Receive No." := MultiDocReceiveTmp."No.";
        MultiDocReceiveLineTmp."Quantity (Base)" := QuantityBase;
        MultiDocReceiveLineTmp.INSERT;
      END;
    END;

    BEGIN
    END.
  }
}

