OBJECT Codeunit 51987 Create TradeTech Order
{
  OBJECT-PROPERTIES
  {
    Date=06/18/21;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=003;
  }
  PROPERTIES
  {
    TableNo=50060;
    OnRun=BEGIN
            TTSOrderHeader := Rec;
            CreateSalesOrder;
            Rec := TTSOrderHeader;
          END;

  }
  CODE
  {
    VAR
      TTSOrderHeader@1000000003 : Record 50060;
      Text021@1000000000 : TextConst 'ENU=Navision Unit of Measure %1 can not be found for item %2.';
      Text022@1000000001 : TextConst 'ENU=Order Unit of Measure %1 can not be found for item %2.';
      OrderBaseQty@1000000002 : Integer;
      Text042@1000000004 : TextConst 'ENU=EDI Trade Partner UOM cross reference not found for Item No. %1, EDI Unit of Measure %2.';
      EDITradePartner@1000000005 : Record 14002360;
      Text034@1170000000 : TextConst 'ENU=Shipping Agent Code %1 not found for Trade Partner %2';

    LOCAL PROCEDURE CreateSalesOrder@1000000000();
    VAR
      SalesHeader@1000000002 : Record 36;
      TTSOrderLines@1000000000 : Record 50061;
      Customer@1000000003 : Record 18;
      CustDivRec@1000000004 : Record 50007;
      ItemDiv@1000000005 : Record 27;
      EDIGeneralCrossReference@1000000001 : Record 14000377;
    BEGIN
      //ERROR('test');
      EDITradePartner.RESET;
      EDITradePartner.SETRANGE("To Identifier",TTSOrderHeader.RepCode);
      EDITradePartner.FINDFIRST;
      SalesHeader.INIT;
      SalesHeader.SetHideValidationDialog(TRUE);
      SalesHeader."Document Type" := SalesHeader."Document Type"::Order;
      SalesHeader.INSERT(TRUE);
      TTSOrderHeader."Nav Order No." := SalesHeader."No.";
      SalesHeader.VALIDATE("Sell-to Customer No.", TTSOrderHeader.SellToCustomerVendorNumber);
      TTSOrderLines.RESET;
      TTSOrderLines.SETRANGE("Entry No.",TTSOrderHeader."Entry No.");
      {
      TTSOrderLines.SETRANGE(ttsOrderNumber,TTSOrderHeader.ttsOrderNumber);
      TTSOrderLines.SETRANGE(ttsOrderId,TTSOrderHeader.ttsOrderId);
      TTSOrderLines.SETRANGE(ttsReleaseId,TTSOrderHeader.ttsReleaseId);
      TTSOrderLines.SETRANGE(ReleaseNumber,TTSOrderHeader.ReleaseNumber);
      }
      IF TTSOrderLines.FINDLAST THEN BEGIN
        IF ItemDiv.GET(TTSOrderLines.CatalogNumber) THEN
          IF ItemDiv."Shortcut Dimension 5 Code" <>'' THEN
            SalesHeader.VALIDATE("Shortcut Dimension 5 Code", ItemDiv."Shortcut Dimension 5 Code");
      END;
      IF Customer.GET(SalesHeader."Sell-to Customer No.") THEN BEGIN
        CustDivRec.GET(Customer."No.",SalesHeader."Shortcut Dimension 5 Code");
        SalesHeader.VALIDATE("Mfr. Rep. Code",CustDivRec."Mfr. Rep. Code");
        CustDivRec.CALCFIELDS("RSM Code");
        SalesHeader.VALIDATE("RSM Code",CustDivRec."RSM Code");
        SalesHeader.VALIDATE("CSR Code",CustDivRec."CSR Code");
      END;
      SalesHeader.VALIDATE(SalesHeader."Order Date",WORKDATE);
      //IF NOT TTSOrderHeader.IsFactoryRelease THEN
      //SalesHeader.VALIDATE("Location Code",EDITradePartner."From Identifier");
      IF TTSOrderHeader.RepCode = '6019' THEN BEGIN
        IF TTSOrderHeader.ShipToWarehouseId = '50' THEN
          SalesHeader.VALIDATE("Location Code",'28');
        IF TTSOrderHeader.ShipToWarehouseId = '51' THEN
          SalesHeader.VALIDATE("Location Code",'27');
      END ELSE
        SalesHeader.VALIDATE("Location Code",EDITradePartner."From Identifier");

      SalesHeader."Ship-to Name" := TTSOrderHeader."ShipTo Name";
      //SalesHeader."Ship-to Name 2" := TTSOrderHeader.ship-to
      SalesHeader."Ship-to Address" := TTSOrderHeader."ShipTo AddressLine1";
      SalesHeader."Ship-to Address 2" := TTSOrderHeader."ShipTo AddressLine2";
      SalesHeader."Ship-to City" := TTSOrderHeader."ShipTo City";
      SalesHeader."Ship-to County" := TTSOrderHeader."ShipTo State";
      //SalesHeader."Ship-to County" := TTSOrderHeader."ShipTo Country";
      SalesHeader."Ship-to Post Code" := TTSOrderHeader."ShipTo PostalCode";
      SalesHeader."Ship-to Phone No." := TTSOrderHeader.ShipToPhone;
      //SalesHeader.VALIDATE("Shipping Agent Code",TTSOrderHeader."Ship Via");
      EDIGeneralCrossReference.RESET;
      EDIGeneralCrossReference.SETRANGE("Trade Partner",EDITradePartner."No.");
      EDIGeneralCrossReference.SETRANGE("NAV Table No. (Cross Ref.)",291);
      EDIGeneralCrossReference.SETRANGE("NAV Field No.",105);
      EDIGeneralCrossReference.SETRANGE("EDI Value",TTSOrderHeader."Ship Via");
      IF EDIGeneralCrossReference.FINDFIRST THEN BEGIN
        SalesHeader.VALIDATE("Shipping Agent Code",EDIGeneralCrossReference."NAV Value");
        SalesHeader.VALIDATE("E-Ship Agent Service",EDIGeneralCrossReference."NAV Value 2");
      END
      ELSE ERROR(Text034,TTSOrderHeader."Ship Via",EDITradePartner."No.");
      //<TPZ3217>
      IF EDITradePartner."No." = 'GA' THEN
        SalesHeader."Warehouse Release No." := '0' + FORMAT(TTSOrderHeader.ttsOrderNumber) + '0'
      ELSE
      //</TPZ3217>
        SalesHeader."Warehouse Release No." := FORMAT(TTSOrderHeader.ttsOrderNumber);
      SalesHeader."External Document No." := FORMAT(TTSOrderHeader.PONumber);
      EDIGeneralCrossReference.RESET;
      EDIGeneralCrossReference.SETRANGE("Trade Partner",EDITradePartner."No.");
      EDIGeneralCrossReference.SETRANGE("NAV Table No.",36);
      EDIGeneralCrossReference.SETRANGE("NAV Field No.",14000716);
      EDIGeneralCrossReference.SETRANGE("EDI Value",TTSOrderHeader.FreightTerms);
      IF EDIGeneralCrossReference.FINDFIRST THEN BEGIN
        EVALUATE(SalesHeader."Shipping Payment Type",EDIGeneralCrossReference."NAV Value");
        SalesHeader.VALIDATE("Shipping Payment Type");
      END;
      SalesHeader."XML Order" := TRUE;
      CreateCommentLines(SalesHeader);
      SalesHeader.MODIFY(TRUE);
      CreateSalesLine(SalesHeader);
      TTSOrderHeader."CSR Code" := SalesHeader."CSR Code";
      TTSOrderHeader."ISR Code" := SalesHeader."ISR Code";
      TTSOrderHeader."Division Code" := SalesHeader."Shortcut Dimension 5 Code";
    END;

    LOCAL PROCEDURE CreateSalesLine@1000000001(SalesHeader@1000000000 : Record 36);
    VAR
      TTSOrderLines@1000000001 : Record 50061;
      SalesLineNo@1000000002 : Integer;
      SalesLine@1000000003 : Record 37;
      TradePartnerUnitofMeasure@1000000004 : Record 14002365;
      ItemUnitOfMeasure@1000000005 : Record 5404;
      NavBaseQty@1000000006 : Decimal;
      OrderBaseQty@1000000007 : Decimal;
      MultiplierQty@1000000008 : Decimal;
      LastQty@1000000009 : Decimal;
    BEGIN
      TTSOrderLines.RESET;
      TTSOrderLines.SETRANGE("Entry No.",TTSOrderHeader."Entry No.");
      {
      TTSOrderLines.SETRANGE(ttsOrderNumber,TTSOrderHeader.ttsOrderNumber);
      TTSOrderLines.SETRANGE(ttsOrderId,TTSOrderHeader.ttsOrderId);
      TTSOrderLines.SETRANGE(ttsReleaseId,TTSOrderHeader.ttsReleaseId);
      TTSOrderLines.SETRANGE(ReleaseNumber,TTSOrderHeader.ReleaseNumber);
      }
      IF TTSOrderLines.FINDFIRST THEN REPEAT
        SalesLine.SETRANGE(SalesLine."Document Type",SalesHeader."Document Type");
        SalesLine.SETRANGE(SalesLine."Document No.",SalesHeader."No.");
        IF SalesLine.FIND('+') THEN
          SalesLineNo := SalesLine."Line No." + 10000
        ELSE
          SalesLineNo := 10000;
        SalesLine.INIT;
        SalesLine."Document Type" := SalesHeader."Document Type";
        SalesLine."Document No." := SalesHeader."No.";
        SalesLine."Line No." := SalesLineNo;
        SalesLine."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
        SalesLine.INSERT(TRUE);
        IF SalesHeader."Bill-to Customer No." <> '' THEN
          SalesLine."Bill-to Customer No." := SalesHeader."Bill-to Customer No."
        ELSE
          SalesLine."Bill-to Customer No." := SalesLine."Sell-to Customer No.";
        SalesLine.Type := SalesLine.Type::Item;
        SalesLine.VALIDATE("No.",TTSOrderLines.CatalogNumber);

        NavBaseQty := 0;
        OrderBaseQty := 0;
        MultiplierQty  := 0;
        LastQty := TTSOrderLines.Quantity;
        TradePartnerUnitofMeasure.RESET;
        TradePartnerUnitofMeasure.SETCURRENTKEY("Trade Partner No.","EDI Unit of Measure");
        TradePartnerUnitofMeasure.SETRANGE("Trade Partner No.",EDITradePartner."No.");
        TradePartnerUnitofMeasure.SETRANGE("EDI Unit of Measure",TTSOrderLines.WeightPer);
        IF TradePartnerUnitofMeasure.FIND('-') THEN BEGIN
          IF NOT ItemUnitOfMeasure.GET(SalesLine."No.",TradePartnerUnitofMeasure."Navision Unit of Measure") THEN
            ERROR(Text021,TradePartnerUnitofMeasure."Navision Unit of Measure",SalesLine."No.")
          ELSE
            NavBaseQty := ItemUnitOfMeasure."Qty. per Unit of Measure";
          IF NOT ItemUnitOfMeasure.GET(SalesLine."No.",TradePartnerUnitofMeasure."Order Unit of Measure") THEN
            ERROR(Text022,TradePartnerUnitofMeasure."Order Unit of Measure",SalesLine."No.")
          ELSE
            OrderBaseQty := ItemUnitOfMeasure."Qty. per Unit of Measure";
          MultiplierQty := OrderBaseQty / NavBaseQty;
          LastQty := LastQty / MultiplierQty;
          SalesLine.VALIDATE(SalesLine."Unit of Measure Code",TradePartnerUnitofMeasure."Order Unit of Measure");
        END ELSE
          ERROR(Text042,SalesLine."No.",TTSOrderLines.WeightPer);
        SalesLine.VALIDATE(SalesLine.Quantity,LastQty);
        IF TTSOrderHeader.IsFactoryRelease THEN BEGIN
          IF SalesLine."Qty. to Ship" > 0 THEN
            SalesLine.VALIDATE("Qty. to Ship",0);
        END;
        IF (SalesLine."Shortcut Dimension 5 Code" = 'E') OR (SalesLine."Shortcut Dimension 5 Code" = 'P') THEN
          SalesLine.VALIDATE("Actual Unit Price", (TTSOrderLines.UnitPrice/100))
        ELSE
          SalesLine.VALIDATE("Actual Unit Price", (TTSOrderLines.UnitPrice));
        SalesLine.MODIFY(TRUE);
      UNTIL TTSOrderLines.NEXT = 0;
      IF TTSOrderHeader.FreightCharge > 0 THEN BEGIN
        SalesLine.INIT;
        SalesLine."Document Type" := SalesHeader."Document Type";
        SalesLine."Document No." := SalesHeader."No.";
        SalesLine."Line No." := SalesLineNo + 10000;
        SalesLine."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
        SalesLine.INSERT(TRUE);
        IF SalesHeader."Bill-to Customer No." <> '' THEN
          SalesLine."Bill-to Customer No." := SalesHeader."Bill-to Customer No."
        ELSE
          SalesLine."Bill-to Customer No." := SalesLine."Sell-to Customer No.";
        SalesLine.Type := SalesLine.Type::"G/L Account";
        SalesLine.VALIDATE("No.",'411000');
        SalesLine.VALIDATE(Quantity,1);
        SalesLine.VALIDATE("Unit Price",TTSOrderHeader.FreightCharge);
        SalesLine.MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE CreateCommentLines@1000000002(VAR SalesHeader@1000000001 : Record 36);
    VAR
      SalesCommentLine@1000000000 : Record 44;
      TTSOrderCommentLines@1000000003 : Record 50062;
      LineNo@1000000002 : Integer;
    BEGIN
      TTSOrderCommentLines.RESET;
      TTSOrderCommentLines.SETRANGE("Entry No.",TTSOrderHeader."Entry No.");
      {
      TTSOrderCommentLines.SETRANGE(ttsOrderNumber,TTSOrderHeader.ttsOrderNumber);
      TTSOrderCommentLines.SETRANGE(ttsOrderId,TTSOrderHeader.ttsOrderId);
      TTSOrderCommentLines.SETRANGE(ttsReleaseId,TTSOrderHeader.ttsReleaseId);
      TTSOrderCommentLines.SETRANGE(ReleaseNumber,TTSOrderHeader.ReleaseNumber);
      }
      IF TTSOrderCommentLines.FINDFIRST THEN REPEAT
        SalesCommentLine.RESET;
        SalesCommentLine.SETRANGE("Document Type",SalesHeader."Document Type");
        SalesCommentLine.SETRANGE("No.",SalesHeader."No.");
        SalesCommentLine.SETRANGE("Document Line No.",0);
        IF SalesCommentLine.FIND('+') THEN
          LineNo := SalesCommentLine."Line No." + 10000
        ELSE
          LineNo := 10000;
        IF TTSOrderCommentLines.TrackingNumber <> '' THEN BEGIN //TPZ3226
          SalesCommentLine.INIT;
          SalesCommentLine."Document Type" := SalesHeader."Document Type";
          SalesCommentLine."No." := SalesHeader."No.";
          SalesCommentLine."Document Line No." := 0;
          SalesCommentLine."Line No." := LineNo;
          SalesCommentLine.Date := TODAY;
          SalesCommentLine.Comment := TTSOrderCommentLines.TrackingNumber;
          SalesHeader."Package Tracking No." := TTSOrderCommentLines.TrackingNumber;
          //SalesCommentLine.Code := COPYSTR(LastCode,1,10);
          SalesCommentLine.INSERT;
        END; //TPZ3226
        IF TTSOrderCommentLines.Remarks <> '' THEN BEGIN
          SalesCommentLine.INIT;
          SalesCommentLine."Document Type" := SalesHeader."Document Type";
          SalesCommentLine."No." := SalesHeader."No.";
          SalesCommentLine."Document Line No." := 0;
          SalesCommentLine."Line No." := LineNo + 10000;
          SalesCommentLine.Date := TODAY;
          SalesCommentLine.Comment := TTSOrderCommentLines.Remarks;
          //SalesCommentLine.Code := COPYSTR(LastCode,1,10);
          SalesCommentLine.INSERT;

        END;
      UNTIL TTSOrderCommentLines.NEXT = 0;
    END;

    BEGIN
    {
      001 TPZ2986 GKG 04162021 create new object for tradetech integration
      002 TPZ3226 GKG 06172021 Flow trailing note
      003 TPZ3217 GKG 06152021 Glen associates - Modifications to the release number
    }
    END.
  }
}

