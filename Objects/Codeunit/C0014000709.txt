OBJECT Codeunit 14000709 Name and Address Management
{
  OBJECT-PROPERTIES
  {
    Date=12/28/17;
    Time=12:00:00 PM;
    Version List=SE0.60.18;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1240030001 : TextConst 'ENU=%1 exceed the maximum length of %2 (Value truncated).';
      Text002@1240030000 : TextConst 'ENU=%1 exceed the maximum length of %2.';
      ShippingAgent@1240030002 : Record 291;
      ShippingSetup@1240030022 : Record 14000707;
      UPSTransaction@1240030008 : Codeunit 14000764;
      FedExTransaction@1240030007 : Codeunit 14000783;
      LTLTransaction@1240030006 : Codeunit 14000801;
      GenericTransaction@1240030005 : Codeunit 14000861;
      USPSTransaction@1240030004 : Codeunit 14000881;
      ExportDocumentMgt@1240030010 : Codeunit 14000981;
      ShippingSetupRetrieved@1240030009 : Boolean;

    PROCEDURE CheckCorrectTextLen@1240030024(VAR TextValue@1240030000 : Text[250];LongTextType@1240030001 : 'Error,Warning (Truncate),Auto Truncate,Only Warning,No Check';MaxTextLen@1240030003 : Integer;FieldCaption@1240030002 : Text[250]);
    BEGIN
      CASE LongTextType OF
        LongTextType::Error:
          IF STRLEN(TextValue) > MaxTextLen THEN
            ERROR(Text002,FieldCaption,MaxTextLen);
        LongTextType::"Warning (Truncate)":
          IF STRLEN(TextValue) > MaxTextLen THEN BEGIN
            TextValue := DELCHR(COPYSTR(TextValue,1,MaxTextLen),'>',' ');
            MESSAGE(Text001,FieldCaption,MaxTextLen);
          END;
        LongTextType::"Auto Truncate":
          IF STRLEN(TextValue) > MaxTextLen THEN
            TextValue := DELCHR(COPYSTR(TextValue,1,MaxTextLen),'>',' ');
        LongTextType::"Only Warning":
          IF STRLEN(TextValue) > MaxTextLen THEN
            MESSAGE(Text002,FieldCaption,MaxTextLen);
        LongTextType::"No Check":
          ;
      END;
    END;

    PROCEDURE GetLongNameType@1240030027(CurrentShippingAgent@1240030001 : Record 291;FromType@1240030000 : 'Package,Document,Master Data') : Integer;
    BEGIN
      CASE FromType OF
        FromType::Package:
          EXIT(CurrentShippingAgent."Package Long Name Type");
        FromType::Document:
          EXIT(CurrentShippingAgent."Document Long Name Type");
        FromType::"Master Data":
          EXIT(CurrentShippingAgent."Master Data Long Name Type");
       END;
    END;

    PROCEDURE GetLongAddressType@1240030028(CurrentShippingAgent@1240030001 : Record 291;FromType@1240030000 : 'Package,Document,Master Data') : Integer;
    BEGIN
      CASE FromType OF
        FromType::Package:
          EXIT(CurrentShippingAgent."Package Long Address Type");
        FromType::Document:
          EXIT(CurrentShippingAgent."Document Long Address Type");
        FromType::"Master Data":
          EXIT(CurrentShippingAgent."Master Data Long Address Type");
       END;
    END;

    PROCEDURE CheckName@1240030019(ShippingAgentCode@1240030000 : Code[10];FromType@1240030004 : 'Package,Document,Master Data';VAR Name@1240030001 : Text[100];VAR Name2@1240030002 : Text[100];VAR Contact@1240030005 : Text[100];NameCaption@1240030010 : Text[100];Name2Caption@1240030009 : Text[100];ContactCaption@1240030006 : Text[100]);
    BEGIN
      GetShippingAgent(ShippingAgentCode);
      CheckName2(
        ShippingAgent,FromType,
        Name,Name2,Contact,
        NameCaption,Name2Caption,ContactCaption);
    END;

    PROCEDURE CheckName2@1240030026(CurrentShippingAgent@1240030000 : Record 291;FromType@1240030004 : 'Package,Document,Master Data';VAR Name@1240030001 : Text[100];VAR Name2@1240030002 : Text[100];VAR Contact@1240030005 : Text[100];NameCaption@1240030010 : Text[100];Name2Caption@1240030009 : Text[100];ContactCaption@1240030006 : Text[100]);
    BEGIN
      CASE CurrentShippingAgent."Shipper Type" OF
        CurrentShippingAgent."Shipper Type"::UPS:
          UPSTransaction.CheckName(
            CurrentShippingAgent,FromType,Name,Name2,Contact,
            NameCaption,Name2Caption,ContactCaption);
        CurrentShippingAgent."Shipper Type"::FEDEX:
          FedExTransaction.CheckName(
            CurrentShippingAgent,FromType,Name,Name2,Contact,
            NameCaption,Name2Caption,ContactCaption);
        CurrentShippingAgent."Shipper Type"::LTL:
          LTLTransaction.CheckName(
            CurrentShippingAgent,FromType,Name,Name2,Contact,
            NameCaption,Name2Caption,ContactCaption);
        CurrentShippingAgent."Shipper Type"::"4":
          USPSTransaction.CheckName(
            CurrentShippingAgent,FromType,Name,Name2,Contact,
            NameCaption,Name2Caption,ContactCaption);
        CurrentShippingAgent."Shipper Type"::Generic:
          GenericTransaction.CheckName(
            CurrentShippingAgent,FromType,Name,Name2,Contact,
            NameCaption,Name2Caption,ContactCaption);
      END;
    END;

    PROCEDURE CheckAddress@1240030021(ShippingAgentCode@1240030000 : Code[10];FromType@1240030002 : 'Package,Document,Master Data';VAR Address@1240030003 : Text[100];VAR Address2@1240030004 : Text[100];VAR City@1240030014 : Text[100];VAR PostCode@1240030013 : Code[100];VAR State@1240030012 : Text[100];VAR Country@1240030011 : Code[100];AddressCaption@1240030008 : Text[100];Address2Caption@1240030007 : Text[100];CityCaption@1240030018 : Text[100];PostCodeCaption@1240030017 : Text[100];StateCaption@1240030016 : Text[100];CountryCaption@1240030015 : Text[100]);
    BEGIN
      GetShippingAgent(ShippingAgentCode);
      CheckAddress2(
        ShippingAgent,FromType,
        Address,Address2,City,PostCode,State,Country,
        AddressCaption,Address2Caption,CityCaption,PostCodeCaption,StateCaption,CountryCaption);
    END;

    PROCEDURE CheckAddress2@1240030025(CurrentShippingAgent@1240030000 : Record 291;FromType@1240030002 : 'Package,Document,Master Data';VAR Address@1240030003 : Text[100];VAR Address2@1240030004 : Text[100];VAR City@1240030014 : Text[100];VAR PostCode@1240030013 : Code[100];VAR State@1240030012 : Text[100];VAR Country@1240030011 : Code[100];AddressCaption@1240030008 : Text[100];Address2Caption@1240030007 : Text[100];CityCaption@1240030018 : Text[100];PostCodeCaption@1240030017 : Text[100];StateCaption@1240030016 : Text[100];CountryCaption@1240030015 : Text[100]);
    BEGIN
      CASE CurrentShippingAgent."Shipper Type" OF
        CurrentShippingAgent."Shipper Type"::UPS:
          UPSTransaction.CheckAddress(
            CurrentShippingAgent,FromType,Address,Address2,City,PostCode,State,Country,
            AddressCaption,Address2Caption,CityCaption,PostCodeCaption,StateCaption,CountryCaption);
        CurrentShippingAgent."Shipper Type"::FEDEX:
          FedExTransaction.CheckAddress(
            CurrentShippingAgent,FromType,Address,Address2,City,PostCode,State,Country,
            AddressCaption,Address2Caption,CityCaption,PostCodeCaption,StateCaption,CountryCaption);
        CurrentShippingAgent."Shipper Type"::LTL:
          LTLTransaction.CheckAddress(
            CurrentShippingAgent,FromType,Address,Address2,City,PostCode,State,Country,
            AddressCaption,Address2Caption,CityCaption,PostCodeCaption,StateCaption,CountryCaption);
        CurrentShippingAgent."Shipper Type"::"4":
          USPSTransaction.CheckAddress(
            CurrentShippingAgent,FromType,Address,Address2,City,PostCode,State,Country,
            AddressCaption,Address2Caption,CityCaption,PostCodeCaption,StateCaption,CountryCaption);
        CurrentShippingAgent."Shipper Type"::Generic:
          GenericTransaction.CheckAddress(
            CurrentShippingAgent,FromType,Address,Address2,City,PostCode,State,Country,
            AddressCaption,Address2Caption,CityCaption,PostCodeCaption,StateCaption,CountryCaption);
      END;
    END;

    PROCEDURE CheckNameAddressPackage@1240030005(CurrentShippingAgent@1240030000 : Record 291;VAR Package@1240030001 : Record 14000701);
    BEGIN
      WITH Package DO BEGIN
        CheckName2(
          CurrentShippingAgent,0,
          "Ship-to Name","Ship-to Name 2",
          "Ship-to Contact",
          FIELDCAPTION("Ship-to Name"),FIELDCAPTION("Ship-to Name 2"),
          FIELDCAPTION("Ship-to Contact"));
        CheckAddress2(
          CurrentShippingAgent,0,
          "Ship-to Address","Ship-to Address 2",
          "Ship-to City","Ship-to ZIP Code",
          "Ship-to State","Ship-to Country Code",
          FIELDCAPTION("Ship-to Address"),FIELDCAPTION("Ship-to Address 2"),
          FIELDCAPTION("Ship-to City"),FIELDCAPTION("Ship-to ZIP Code"),
          FIELDCAPTION("Ship-to State"),FIELDCAPTION("Ship-to Country Code"));

        IF "Blind Shipment" OR "Double Blind Shipment" THEN BEGIN
          CheckName2(
            CurrentShippingAgent,0,
              "Blind Ship-from Name","Blind Ship-from Name 2",
              "Blind Ship-from Contact",
            FIELDCAPTION("Blind Ship-from Name"),FIELDCAPTION("Blind Ship-from Name 2"),
            FIELDCAPTION("Blind Ship-from Contact"));
          CheckAddress2(
            CurrentShippingAgent,0,
            "Blind Ship-from Address","Blind Ship-from Address 2",
            "Blind Ship-from City","Blind Ship-from ZIP Code",
            "Blind Ship-from State","Blind Ship-from Country Code",
            FIELDCAPTION("Blind Ship-from Address"),FIELDCAPTION("Blind Ship-from Address 2"),
            FIELDCAPTION("Blind Ship-from City"),FIELDCAPTION("Blind Ship-from ZIP Code"),
            FIELDCAPTION("Blind Ship-from State"),FIELDCAPTION("Blind Ship-from Country Code"));
        END;
      END;
    END;

    PROCEDURE CheckNameAddressSalesHeader@1240030020(VAR CurrentSalesHeader@1240030000 : Record 36;ShippingAgentCode@1240030001 : Code[10]);
    BEGIN
      WITH CurrentSalesHeader DO BEGIN
        IF NOT ("Document Type" IN ["Document Type"::Order,"Document Type"::Invoice]) THEN
          EXIT;

        GetShippingSetup;
        IF ShippingSetup."Check Name/Address Type" <>
           ShippingSetup."Check Name/Address Type"::Document
        THEN
          EXIT;

        CheckName(
          ShippingAgentCode,1,
          "Ship-to Name","Ship-to Name 2",
          "Ship-to Contact",
          FIELDCAPTION("Ship-to Name"),FIELDCAPTION("Ship-to Name 2"),
          FIELDCAPTION("Ship-to Contact"));
        CheckAddress(
          ShippingAgentCode,1,
          "Ship-to Address","Ship-to Address 2",
          "Ship-to City","Ship-to Post Code",
          "Ship-to County","Ship-to Country/Region Code",
          FIELDCAPTION("Ship-to Address"),FIELDCAPTION("Ship-to Address 2"),
          FIELDCAPTION("Ship-to City"),FIELDCAPTION("Ship-to Post Code"),
          FIELDCAPTION("Ship-to County"),FIELDCAPTION("Ship-to Country/Region Code"));

        IF "Blind Shipment" THEN BEGIN
          CheckName(
            ShippingAgentCode,1,
            "Bill-to Name","Bill-to Name 2",
            "Bill-to Contact",
            FIELDCAPTION("Bill-to Name"),FIELDCAPTION("Bill-to Name 2"),
            FIELDCAPTION("Bill-to Contact"));
          CheckAddress(
            ShippingAgentCode,1,
            "Bill-to Address","Bill-to Address 2",
            "Bill-to City","Bill-to Post Code",
            "Bill-to County","Bill-to Country/Region Code",
            FIELDCAPTION("Bill-to Address"),FIELDCAPTION("Bill-to Address 2"),
            FIELDCAPTION("Bill-to City"),FIELDCAPTION("Bill-to Post Code"),
            FIELDCAPTION("Bill-to County"),FIELDCAPTION("Bill-to Country/Region Code"));
        END;
      END;
    END;

    PROCEDURE CheckNameAddressPurchaseHeader@1240030022(VAR CurrentPurchHeader@1240030000 : Record 38;ShippingAgentCode@1240030001 : Code[10]);
    BEGIN
      WITH CurrentPurchHeader DO BEGIN
        IF NOT ("Document Type" IN ["Document Type"::"Credit Memo","Document Type"::"Return Order"])
        THEN
          EXIT;

        GetShippingSetup;
        IF ShippingSetup."Check Name/Address Type" <>
           ShippingSetup."Check Name/Address Type"::Document
        THEN
          EXIT;

        CheckName(
          ShippingAgentCode,1,
          "Ship-to Name","Ship-to Name 2","Ship-to Contact",
          FIELDCAPTION("Ship-to Name"),FIELDCAPTION("Ship-to Name 2"),
          FIELDCAPTION("Ship-to Contact"));
        CheckAddress(
          ShippingAgentCode,1,
          "Ship-to Address","Ship-to Address 2",
          "Ship-to City","Ship-to Post Code",
          "Ship-to County","Ship-to Country/Region Code",
          FIELDCAPTION("Ship-to Address"),FIELDCAPTION("Ship-to Address 2"),
          FIELDCAPTION("Ship-to City"),FIELDCAPTION("Ship-to Post Code"),
          FIELDCAPTION("Ship-to County"),FIELDCAPTION("Ship-to Country/Region Code"));
      END;
    END;

    PROCEDURE CheckNameAddressTransferHeader@1240030023(VAR CurrentTransHeader@1240030000 : Record 5740;ShippingAgentCode@1240030001 : Code[10]);
    BEGIN
      WITH CurrentTransHeader DO BEGIN
        GetShippingSetup;
        IF ShippingSetup."Check Name/Address Type" <>
           ShippingSetup."Check Name/Address Type"::Document
        THEN
          EXIT;

        CheckName(
          ShippingAgentCode,1,
          "Transfer-to Name","Transfer-to Name 2",
          "Transfer-to Contact",
          FIELDCAPTION("Transfer-to Name"),FIELDCAPTION("Transfer-to Name 2"),
          FIELDCAPTION("Transfer-to Contact"));
        CheckAddress(
          ShippingAgentCode,1,
          "Transfer-to Address","Transfer-to Address 2",
          "Transfer-to City","Transfer-to Post Code",
          "Transfer-to County","Trsf.-to Country/Region Code",
          FIELDCAPTION("Transfer-to Address"),FIELDCAPTION("Transfer-to Address 2"),
          FIELDCAPTION("Transfer-to City"),FIELDCAPTION("Transfer-to Post Code"),
          FIELDCAPTION("Transfer-to County"),FIELDCAPTION("Trsf.-to Country/Region Code"));
      END;
    END;

    PROCEDURE CheckNameAddressCustomer@1240030000(CurrentShippingAgent@1240030000 : Record 291;VAR Customer@1240030001 : Record 18);
    BEGIN
      WITH Customer DO BEGIN
        CheckName2(
          CurrentShippingAgent,2,
          Name,"Name 2",
          Contact,
          FIELDCAPTION(Name),FIELDCAPTION("Name 2"),
          FIELDCAPTION(Contact));
        CheckAddress2(
          CurrentShippingAgent,2,
          Address,"Address 2",
          City,"Post Code",
          County,"Country/Region Code",
          FIELDCAPTION(Address),FIELDCAPTION("Address 2"),
          FIELDCAPTION(City),FIELDCAPTION("Post Code"),
          FIELDCAPTION(County),FIELDCAPTION("Country/Region Code"));
      END;
    END;

    PROCEDURE CheckNameAddressShipToAddress@1240030001(CurrentShippingAgent@1240030001 : Record 291;VAR ShipToAddress@1240030000 : Record 222);
    BEGIN
      WITH ShipToAddress DO BEGIN
        CheckName2(
          CurrentShippingAgent,2,
          Name,"Name 2",
          Contact,
          FIELDCAPTION(Name),FIELDCAPTION("Name 2"),
          FIELDCAPTION(Contact));
        CheckAddress2(
          CurrentShippingAgent,2,
          Address,"Address 2",
          City,"Post Code",
          County,"Country/Region Code",
          FIELDCAPTION(Address),FIELDCAPTION("Address 2"),
          FIELDCAPTION(City),FIELDCAPTION("Post Code"),
          FIELDCAPTION(County),FIELDCAPTION("Country/Region Code"));
      END;
    END;

    PROCEDURE CheckNameAddressVendor@1240030002(CurrentShippingAgent@1240030001 : Record 291;VAR Vendor@1240030000 : Record 23);
    BEGIN
      WITH Vendor DO BEGIN
        CheckName2(
          CurrentShippingAgent,2,
          Name,"Name 2",
          Contact,
          FIELDCAPTION(Name),FIELDCAPTION("Name 2"),
          FIELDCAPTION(Contact));
        CheckAddress2(
          CurrentShippingAgent,2,
          Address,"Address 2",
          City,"Post Code",
          County,"Country/Region Code",
          FIELDCAPTION(Address),FIELDCAPTION("Address 2"),
          FIELDCAPTION(City),FIELDCAPTION("Post Code"),
          FIELDCAPTION(County),FIELDCAPTION("Country/Region Code"));
      END;
    END;

    PROCEDURE CheckNameAddressOrderAddress@1240030003(CurrentShippingAgent@1240030001 : Record 291;VAR OrderAddress@1240030000 : Record 224);
    BEGIN
      WITH OrderAddress DO BEGIN
        CheckName2(
          CurrentShippingAgent,2,
          Name,"Name 2",
          Contact,
          FIELDCAPTION(Name),FIELDCAPTION("Name 2"),
          FIELDCAPTION(Contact));
        CheckAddress2(
          CurrentShippingAgent,2,
          Address,"Address 2",
          City,"Post Code",
          County,"Country/Region Code",
          FIELDCAPTION(Address),FIELDCAPTION("Address 2"),
          FIELDCAPTION(City),FIELDCAPTION("Post Code"),
          FIELDCAPTION(County),FIELDCAPTION("Country/Region Code"));
      END;
    END;

    PROCEDURE CheckNameAddressLocation@1240030004(CurrentShippingAgent@1240030001 : Record 291;VAR Location@1240030000 : Record 14);
    BEGIN
      WITH Location DO BEGIN
        CheckName2(
          CurrentShippingAgent,2,
          Name,"Name 2",
          Contact,
          FIELDCAPTION(Name),FIELDCAPTION("Name 2"),
          FIELDCAPTION(Contact));
        CheckAddress2(
          CurrentShippingAgent,2,
          Address,"Address 2",
          City,"Post Code",
          County,"Country/Region Code",
          FIELDCAPTION(Address),FIELDCAPTION("Address 2"),
          FIELDCAPTION(City),FIELDCAPTION("Post Code"),
          FIELDCAPTION(County),FIELDCAPTION("Country/Region Code"));
      END;
    END;

    LOCAL PROCEDURE GetShippingSetup@50();
    VAR
      SalesSetup@1000000000 : Record 311;
    BEGIN
      IF NOT ShippingSetupRetrieved THEN BEGIN
        ShippingSetup.GET;
        ShippingSetupRetrieved := TRUE;

        SalesSetup.GET;
        SalesSetup.TESTFIELD("Enable Shipping");
      END;
    END;

    LOCAL PROCEDURE GetShippingAgent@10(ShippingAgentCode@1000000000 : Code[10]);
    BEGIN
      IF (ShippingAgent.Code <> ShippingAgentCode) OR (ShippingAgentCode = '') THEN BEGIN
        GetShippingSetup;
        IF (ShippingAgentCode <> '') OR ShippingSetup."Shipping Agent Required" THEN
          ShippingAgent.GET(ShippingAgentCode)
        ELSE
          CLEAR(ShippingAgent);
      END;
    END;

    BEGIN
    END.
  }
}

