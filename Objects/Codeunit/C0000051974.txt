OBJECT Codeunit 51974 Page5740EventSubscriber
{
  OBJECT-PROPERTIES
  {
    Date=06/30/21;
    Time=[ 7:33:51 AM];
    Modified=Yes;
    Version List=TPZ000.00.00,3248;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [EventSubscriber(Page,5740,OnBeforeActionEvent,"Archive Document")]
    LOCAL PROCEDURE Pg5740_ArchiveDocument_OnAction@1000000000(VAR Rec@1000000000 : Record 5740);
    VAR
      Codeunit5063EventSubscriber@1000000001 : Codeunit 51951;
    BEGIN
      Codeunit5063EventSubscriber.CU5063_ArchiveTransferDocument(Rec);
    END;

    [EventSubscriber(Page,5740,OnAfterActionEvent,"Change Log Entry")]
    LOCAL PROCEDURE Pg5740_ChangeLogEntry_OnAction@1000000001(VAR Rec@1000000000 : Record 5740);
    VAR
      Codeunit423EventSubscriber@1000000001 : Codeunit 51876;
    BEGIN
      //TPZ2916
      Codeunit423EventSubscriber.CU423_OpenSSRSReport(DATABASE::"Transfer Header", Rec."No.", '','');
    END;

    [EventSubscriber(Page,5740,OnAfterActionEvent,"DSHIP License Plate")]
    PROCEDURE ShowDSHIPLpList@1000000036(VAR Rec@1000000000 : Record 5740);
    VAR
      IWXLicensePlateHeader@1000000004 : Record 23044505;
      WarehouseShipmentLine@1000000003 : Record 7321;
      PostedWhseShipLine@1000000002 : Record 7323;
      TempIWXLicensePlateHeader@1000000001 : TEMPORARY Record 23044505;
      DSHIPLPList@1000000006 : Page 23044646;
      RegisteredWhseActivityLine@1000000007 : Record 5773;
      RegisteredWhseActivityHdr@1000000008 : Record 5772;
      PWarehouseShipmentLine@1000000005 : Record 7323;
    BEGIN
      //TPZ3248

      TempIWXLicensePlateHeader.DELETEALL;
      CLEAR(TempIWXLicensePlateHeader);
        WarehouseShipmentLine.RESET;
        WarehouseShipmentLine.SETCURRENTKEY("Source Type","Source No.","Source Line No.");
        WarehouseShipmentLine.SETRANGE("Source No.",Rec."No.");
        IF WarehouseShipmentLine.FINDSET THEN BEGIN
          REPEAT
            IWXLicensePlateHeader.RESET;
            IWXLicensePlateHeader.SETAUTOCALCFIELDS("Source No.");
            IWXLicensePlateHeader.SETRANGE("Source No.",WarehouseShipmentLine."No.");
            IF IWXLicensePlateHeader.FINDFIRST THEN BEGIN
              REPEAT
                IF NOT TempIWXLicensePlateHeader.GET(IWXLicensePlateHeader."No.") THEN BEGIN
                  TempIWXLicensePlateHeader.INIT;
                  TempIWXLicensePlateHeader.TRANSFERFIELDS(IWXLicensePlateHeader);
                  TempIWXLicensePlateHeader.INSERT;
                END;
              UNTIL IWXLicensePlateHeader.NEXT=0;
            END;
          UNTIL WarehouseShipmentLine.NEXT = 0;
        END;
        IWXLicensePlateHeader.RESET;
        IWXLicensePlateHeader.SETRANGE("Source No.",Rec."No.");
        IF IWXLicensePlateHeader.FINDFIRST THEN BEGIN
          REPEAT
            IF NOT TempIWXLicensePlateHeader.GET(IWXLicensePlateHeader."No.") THEN BEGIN
              TempIWXLicensePlateHeader.INIT;
              TempIWXLicensePlateHeader.TRANSFERFIELDS(IWXLicensePlateHeader);
              TempIWXLicensePlateHeader.INSERT;
            END;
          UNTIL IWXLicensePlateHeader.NEXT = 0;
        END;
      //<<
      //Check WPI No.
        RegisteredWhseActivityLine.RESET;
        RegisteredWhseActivityLine.SETCURRENTKEY("Action Type","Source No.","Source Document");
        RegisteredWhseActivityLine.SETRANGE("Activity Type",RegisteredWhseActivityLine."Activity Type"::Pick);
        RegisteredWhseActivityLine.SETRANGE("Source No.",Rec."No.");
        IF RegisteredWhseActivityLine.FINDFIRST THEN
          REPEAT
            RegisteredWhseActivityHdr.GET(RegisteredWhseActivityLine."Activity Type",RegisteredWhseActivityLine."No.");
            IWXLicensePlateHeader.RESET;
            IWXLicensePlateHeader.SETAUTOCALCFIELDS("Source No.");
            IWXLicensePlateHeader.SETRANGE("Source No.",RegisteredWhseActivityHdr."Whse. Activity No.");
            IF IWXLicensePlateHeader.FINDFIRST THEN BEGIN
              REPEAT
                IF NOT TempIWXLicensePlateHeader.GET(IWXLicensePlateHeader."No.") THEN BEGIN
                  TempIWXLicensePlateHeader.INIT;
                  TempIWXLicensePlateHeader.TRANSFERFIELDS(IWXLicensePlateHeader);
                  TempIWXLicensePlateHeader.INSERT;
                END;
              UNTIL IWXLicensePlateHeader.NEXT = 0;
            END;
          UNTIL RegisteredWhseActivityLine.NEXT = 0;
      //<<
      PWarehouseShipmentLine.RESET;
      PWarehouseShipmentLine.SETCURRENTKEY("Source Type","Source No.","Source Line No.");
      PWarehouseShipmentLine.SETRANGE("Source No.",Rec."No.");
      IF PWarehouseShipmentLine.FINDSET THEN BEGIN
        REPEAT
          IWXLicensePlateHeader.RESET;
          IWXLicensePlateHeader.SETAUTOCALCFIELDS("Source No.");
          IWXLicensePlateHeader.SETRANGE("Shipped Source No.",PWarehouseShipmentLine."Whse. Shipment No.");
          IF IWXLicensePlateHeader.FINDFIRST THEN BEGIN
            REPEAT
              IF NOT TempIWXLicensePlateHeader.GET(IWXLicensePlateHeader."No.") THEN BEGIN
                TempIWXLicensePlateHeader.INIT;
                TempIWXLicensePlateHeader.TRANSFERFIELDS(IWXLicensePlateHeader);
                TempIWXLicensePlateHeader.INSERT;
              END;
            UNTIL IWXLicensePlateHeader.NEXT=0;
          END;
        UNTIL PWarehouseShipmentLine.NEXT = 0;
      END;
      //TempIWXLicensePlateHeader.FINDSET;
      PAGE.RUN(PAGE::"DSHIP License Plate List",TempIWXLicensePlateHeader);
    END;

    BEGIN
    {
      001 TPZ2916 PKS 08042020 Added new function for change log entry
      002 TPZ3248 PKS 06242021 Added subscriber to open LP list
    }
    END.
  }
}

