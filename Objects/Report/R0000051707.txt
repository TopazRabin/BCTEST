OBJECT Report 51707 Location Hdlg.Statement E-Mail
{
  OBJECT-PROPERTIES
  {
    Date=07/01/20;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=TPZ000.00.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Customer Statement E-Mail;
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 5444;    ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               MaxIteration=1;
               OnPreDataItem=VAR
                               UserSetup@1000000000 : Record 91;
                             BEGIN
                               ShowStatus := FALSE;

                               IF ShowStatus THEN
                                 Window.OPEN(
                                   Text001 +
                                   Text002);

                               //<TPZ1542>
                               //IF USERID <> 'TOPAZ\SGERFEN' THEN
                               //  MailInt.SetException(TRUE);
                               UserSetup.GET(USERID);
                               IF UserSetup."User SMTP Override" THEN
                                  MailInt.SetException(FALSE)
                                   ELSE
                                  MailInt.SetException(TRUE);
                               //</TPZ1542>
                             END;

               OnAfterGetRecord=VAR
                                  UserSetup@1000000000 : Record 91;
                                BEGIN
                                  CLEAR(FieldValue);

                                  EMailSetup.GET;
                                  EMailSetup.TESTFIELD("Loc. Hdlg. Statement E-Mail");

                                  Location.GET(LocationCode);

                                  IF NOT GetInitialRecords THEN BEGIN
                                    ModifyRecords;
                                    EXIT;
                                  END;

                                  IF EMailHeader."Line Break Character" <> '' THEN
                                    MailInt.LineFeedChar := EMailHeader."Line Break Character";

                                  // Create Subject Line
                                  IF ShowStatus THEN
                                    Window.UPDATE(1,Text003);


                                    //<TPZ1415>
                                   CASE CommJnlLine."Shortcut Dimension 5 Code" OF
                                    'E': MailInt.InitializeMail(FieldValue.SubstituteHeader(EMailHeader)+'- Electric');
                                    'L': MailInt.InitializeMail(FieldValue.SubstituteHeader(EMailHeader)+'- Lighting');
                                    'I': MailInt.InitializeMail(FieldValue.SubstituteHeader(EMailHeader)+'- International');
                                    'C': MailInt.InitializeMail(FieldValue.SubstituteHeader(EMailHeader)+'- Corporate');
                                    ELSE
                                      MailInt.InitializeMail(FieldValue.SubstituteHeader(EMailHeader));
                                   END;
                                   //</TPZ1415>

                                  // Address the mail
                                  IF ShowStatus THEN
                                    Window.UPDATE(1,Text004);

                                  ReceiverTo := '';
                                  ReceiverCC := '';
                                  ReceiverBCC := '';
                                  EMailListEntryTmp.RemoveEntriesWithSameEMail(EMailListEntryTmp);
                                  REPEAT
                                    CASE EMailListEntryTmp."Loc. Hdlg. Statement E-Mail" OF
                                      EMailListEntryTmp."Loc. Hdlg. Statement E-Mail"::"To":
                                        CreateEmailAddressStr(EMailListEntryTmp."E-Mail",'TO');
                                      EMailListEntryTmp."Loc. Hdlg. Statement E-Mail"::CC:
                                        CreateEmailAddressStr(EMailListEntryTmp."E-Mail",'CC');
                                      EMailListEntryTmp."Loc. Hdlg. Statement E-Mail"::BCC:
                                        CreateEmailAddressStr(EMailListEntryTmp."E-Mail",'BCC');
                                    END;
                                  UNTIL EMailListEntryTmp.NEXT = 0;

                                  IF ReceiverTo <> '' THEN
                                    MailInt.AddReceiverTo(ReceiverTo);

                                  IF ReceiverCC <> '' THEN
                                    MailInt.AddReceiverCC(ReceiverCC);

                                  IF ReceiverBCC <> '' THEN
                                    MailInt.AddReceiverBCC(ReceiverBCC);

                                  // Create the body of the E-Mail
                                  RecordFound[1] := TRUE;
                                  LastLevel := 1;
                                  LastType := 0;
                                  EMailLine.RESET;
                                  EMailLine.SETRANGE("E-Mail Code",EMailHeader.Code);
                                  IF EMailLine.FIND('-') THEN
                                    REPEAT
                                      IF ShowStatus THEN
                                        Window.UPDATE(1,EMailLine.Text);
                                      EMailLine.TESTFIELD(Level);

                                      // Handle Higher Level
                                      IF LastLevel < EMailLine.Level THEN BEGIN
                                        GetFirstRecordInLoop(EMailLine.Level);
                                        FirstOnLevel[EMailLine.Level] := TRUE;
                                        EMailLineFirstOnLevel[EMailLine.Level] := EMailLine;
                                      END;

                                      // Handle Skip Level if no records
                                      IF FirstOnLevel[EMailLine.Level] AND
                                         NOT RecordFound[EMailLine.Level] AND
                                         EMailLine."Include only level if details"
                                      THEN BEGIN
                                        EMailLine.SETFILTER(Level,'<%1',EMailLine.Level);
                                        Finished := EMailLine.NEXT = 0;
                                        EMailLine.SETRANGE(Level);
                                      END ELSE BEGIN
                                        // Substitute Values in Line and add to E-Mail
                                        IF (EMailLine.Type <> EMailLine.Type::Loop) OR
                                           RecordFound[EMailLine.Level]
                                        THEN
                                          MailInt.AddtoBody(FieldValue.SubstituteLine(EMailLine));

                                        // Get Next E-Mail Line
                                        LastType := EMailLine.Type;
                                        LastLevel := EMailLine.Level;
                                        Finished := EMailLine.NEXT = 0;

                                        // Handle Loop End or Return to Lower Level
                                        IF (LastType = EMailLine.Type::Loop) AND
                                           (((EMailLine.Type <> EMailLine.Type::Loop) AND
                                             (LastLevel = EMailLine.Level)) OR
                                            (LastLevel > EMailLine.Level)) AND
                                           RecordFound[LastLevel]
                                        THEN BEGIN
                                          GetNextRecordInLoop(LastLevel);

                                          // Repeat Loop if Record found
                                          IF RecordFound[LastLevel] THEN BEGIN
                                            EMailLine := EMailLineFirstOnLevel[LastLevel];
                                            EMailLine.SETRANGE(Type,EMailLine.Type::Loop);
                                            EMailLine.NEXT;
                                            EMailLine.SETRANGE(Type);
                                          END;
                                        END;
                                      END;

                                      FirstOnLevel[EMailLine.Level] := FALSE;
                                    UNTIL Finished;
                                    //<TPZ1542>
                                    UserSetup.GET(USERID);
                                    MailInt.AddtoBody(UserSetup."User signature");//EB
                                    //</TPZ1542>

                                  // Create and add attachment
                                  IF ShowStatus THEN
                                    Window.UPDATE(1,Text005);
                                  EMailAttachmentTmp.DELETEALL;
                                  EMailAttachment.RESET;
                                  EMailAttachment.SETRANGE("E-Mail Code",EMailHeader.Code);
                                  IF EMailAttachment.FIND('-') THEN BEGIN
                                    EMailSetup.TESTFIELD("E-Mail Buffer Directory");

                                    REPEAT
                                      CASE EMailAttachment.Type OF
                                        EMailAttachment.Type::Report:
                                          BEGIN
                                            EMailAttachment.TESTFIELD("Attachment Name");
                                            EMailAttachment.TESTFIELD("Attachment Report ID");

                                            TempFilename := EMailSetup."E-Mail Buffer Directory";
                                            IF COPYSTR(TempFilename,STRLEN(TempFilename),1) <> '\' THEN
                                              TempFilename := TempFilename + '\';
                                            TempFilename := TempFilename + FieldValue.SubstituteAttachment(EMailAttachment);

                                            CommJnlSendSourceDoc.SetCommJnlLine(CommJnlLine);
                                            IF EMailAttachment."File Format" <> EMailAttachment."File Format"::Excel THEN
                                              SaveReport(EMailAttachment."Attachment Report ID",TempFilename)
                                            ELSE
                                              SaveReportExcel(EMailAttachment."Attachment Report ID",TempFilename);

                                            MailInt.AddAttachment(TempFilename);

                                            EMailAttachmentTmp := EMailAttachment;
                                            EMailAttachmentTmp."Use Attachment File Name" := TempFilename;
                                            EMailAttachmentTmp.INSERT;
                                          END;
                                        EMailAttachment.Type::"Fixed File":
                                          BEGIN
                                            IF NOT EXISTS(EMailAttachment."Fixed File Name") THEN
                                              ERROR(Text006,EMailAttachment."Fixed File Name");

                                            MailInt.AddAttachment(EMailAttachment."Fixed File Name");
                                          END;
                                        EMailAttachment.Type::"Processing Report":
                                          BEGIN
                                            IF Location."Send Source Documents" THEN BEGIN
                                              EMailAttachment.TESTFIELD("Attachment Name");
                                              EMailAttachment.TESTFIELD("Attachment Report ID");
                                              EMailAttachment.TESTFIELD("Processing Report ID");

                                              TempFilename := EMailSetup."E-Mail Buffer Directory";
                                              IF COPYSTR(TempFilename,STRLEN(TempFilename),1) <> '\' THEN
                                                TempFilename := TempFilename + '\';
                                              TempFilename := TempFilename + FieldValue.SubstituteAttachment(EMailAttachment);
                                              EMailSetup.ChangeFilenameToPDF(TempFilename);

                                              CommJnlSendSourceDoc.SendLocation(
                                                Location,
                                                CommJnlLine,
                                                EMailAttachment."Attachment Report ID",
                                                EMailAttachment."Processing Report ID",
                                                TempFilename);

                                              IF EXISTS(TempFilename) THEN BEGIN
                                                MailInt.AddAttachment(TempFilename);

                                                EMailAttachmentTmp := EMailAttachment;
                                                EMailAttachmentTmp."Use Attachment File Name" := TempFilename;
                                                EMailAttachmentTmp.INSERT;
                                              END;
                                            END;
                                          END;
                                      END;
                                    UNTIL EMailAttachment.NEXT = 0;
                                  END;

                                  // Send e-mail
                                  IF ShowStatus THEN
                                    Window.UPDATE(1,Text007);
                                  MailInt.Send(EMailHeader."Confirm E-Mail manually");

                                  CLEAR(MailInt);

                                  IF EMailAttachmentTmp.FIND('-') THEN
                                    REPEAT
                                      MailInt.DeleteAttachment(EMailAttachmentTmp."Use Attachment File Name");
                                    UNTIL EMailAttachmentTmp.NEXT = 0;

                                  // Update the Records
                                  ModifyRecords;
                                END;

               OnPostDataItem=BEGIN
                                IF ShowStatus THEN
                                  Window.CLOSE;
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  CaptionML=ENU=Location Code;
                  SourceExpr=LocationCode;
                  TableRelation=Customer }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Location@1000000000 : Record 14;
      CommJnlLine@1000000001 : Record 51705;
      CommJnlLine2@1000000027 : Record 51705;
      CommLedgEntry@1000000023 : Record 51709;
      CompanyInformation@1000000002 : Record 79;
      PaymentTerms@1000000004 : Record 3;
      EMailSetup@1000000003 : Record 14000905;
      EMailRule@1000000019 : Record 14000907;
      EMailHeader@1000000005 : Record 14000901;
      EMailLine@1000000006 : Record 14000902;
      EMailLineFirstOnLevel@1000000007 : ARRAY [10] OF Record 14000902;
      EMailListEntryTmp@1000000008 : TEMPORARY Record 14000908;
      EMailAttachment@1000000020 : Record 14000909;
      EMailAttachmentTmp@1000000021 : TEMPORARY Record 14000909;
      FieldValue@1000000009 : Codeunit 14000901;
      MailInt@1000000010 : Codeunit 14000905;
      CommJnlSendSourceDoc@1000000026 : Codeunit 51705;
      Window@1000000011 : Dialog;
      RecordFound@1000000012 : ARRAY [10] OF Boolean;
      FirstOnLevel@1000000013 : ARRAY [10] OF Boolean;
      Finished@1000000014 : Boolean;
      ShowStatus@1000000015 : Boolean;
      Posted@1000000025 : Boolean;
      LastLevel@1000000016 : Integer;
      LastType@1000000017 : Integer;
      LocationCode@1000000018 : Code[20];
      DocNo@1000000024 : Code[20];
      TempFilename@1000000022 : Text[250];
      Text001@1001 : TextConst 'ENU=Creating E-Mail\';
      Text002@1002 : TextConst 'ENU=Current Line #1##################';
      Text003@1003 : TextConst 'ENU=Subject';
      Text004@1004 : TextConst 'ENU=Addressing';
      Text005@1005 : TextConst 'ENU=Attachments';
      Text006@1006 : TextConst 'ENU=Attachment file %1 do not exists.';
      Text007@1007 : TextConst 'ENU=Sending';
      Text008@1008 : TextConst 'ENU=Level   Table\';
      Text009@1009 : TextConst 'ENU="  1     Customer (18)\"';
      Text010@1010 : TextConst 'ENU="  2       Customer Ledger Entry (21)\\"';
      Text011@1011 : TextConst 'ENU=Other tables\';
      Text012@1012 : TextConst 'ENU=Payment Terms (3), Company Information (79)';
      Text013@1013 : TextConst 'ENU=%1 is not a supported level.';
      Text014@1014 : TextConst 'ENU=Get E-Mail List must be empty.';
      ReceiverTo@1240020002 : Text[250];
      ReceiverCC@1240020001 : Text[250];
      ReceiverBCC@1240020000 : Text[250];
      DivisionCode@1000000028 : Code[20];

    PROCEDURE CreateEmailAddressStr@1240020000(EmailAddressStr@1240020000 : Text[250];Type@1240020001 : Text[10]);
    BEGIN
      CASE Type OF
        'TO':
          IF ReceiverTo = '' THEN
            ReceiverTo := EmailAddressStr
          ELSE
            ReceiverTo := ReceiverTo + ';' + EmailAddressStr;
        'CC':
          IF ReceiverCC = '' THEN
            ReceiverCC := EmailAddressStr
          ELSE
            ReceiverCC := ReceiverCC + ';' + EmailAddressStr;
        'BCC':
          IF ReceiverBCC = '' THEN
            ReceiverBCC := EmailAddressStr
          ELSE
            ReceiverBCC := ReceiverTo + ';' + EmailAddressStr;
      END;
    END;

    PROCEDURE InitializeRequest@1(NewLocationCode@1000000000 : Code[20];NewCommJnlLine@1000000002 : Record 51705;BatchSending@1000000001 : Boolean);
    BEGIN
      LocationCode := NewLocationCode;
      CommJnlLine := NewCommJnlLine;
      //<TPZ1542>
      DivisionCode:=CommJnlLine."Shortcut Dimension 5 Code";
      //<TPZ1542>

      IF NewLocationCode = 'SHOWHELP' THEN
        MESSAGE(
          Text008 +
          Text009 +
          Text010 +
          Text011 +
          Text012);
    END;

    PROCEDURE GetLevelName@5(LevelNo@1000000000 : Integer) : Text[30];
    BEGIN
      CASE LevelNo OF
        1:
          EXIT(Location.TABLENAME)
        ELSE
          EXIT('');
      END;
    END;

    PROCEDURE GetTableFilter@6() : Text[250];
    BEGIN
      EXIT('14|51705|14000901|14000907');
    END;

    PROCEDURE GetRecordNoStrMenu@9(CurrentTableNo@1000000000 : Integer) : Text[250];
    BEGIN
      CASE CurrentTableNo OF
        ELSE
          EXIT('');
      END;
    END;

    LOCAL PROCEDURE GetInitialRecords@2() : Boolean;
    VAR
      EMailListEntry@1240030000 : Record 14000908;
      SendMail@1000000000 : Boolean;
    BEGIN
      // Get and Load Header values
      Location.GET(LocationCode);
      FieldValue.Location_14(Location,0);
      CompanyInformation.GET;
      FieldValue.CompanyInformation_79(CompanyInformation,0);

      // Find E-Mail receivers
      EMailListEntryTmp.RESET;
      EMailListEntryTmp.DELETEALL;

      EMailListEntry.RESET;
      EMailListEntry.SETRANGE("Table ID",DATABASE::Location);
      EMailListEntry.SETRANGE(Code,Location.Code);
      //<TPZ1542>
      EMailListEntry.SETRANGE("Shortcut Dimension 5 Code",DivisionCode);//EB
      //<TPZ1542>

      IF EMailListEntry.FIND('-') THEN
        REPEAT
          EMailListEntryTmp := EMailListEntry;
          EMailListEntryTmp.INSERT;
        UNTIL EMailListEntry.NEXT = 0;

      EMailListEntryTmp.SETRANGE("Loc. Hdlg. Statement E-Mail",1,3);
      EMailListEntryTmp.SETFILTER("E-Mail",'<>%1','');

      // Test That a Mail should be sent
      SendMail := EMailRule.GetEMailRule(0,Location.Code,'');

      IF NOT SendMail THEN
        EXIT(FALSE);

      SendMail := EMailHeader.GET(EMailRule."Loc. Hdlg. Stm. E-Mail Code");

      IF NOT SendMail THEN
        EXIT(FALSE);

      FieldValue.EMailHeader_14000901(EMailHeader,0);
      FieldValue.EMailRule_14000907(EMailRule,0);

      EXIT(EMailListEntryTmp.FIND('-'));
    END;

    LOCAL PROCEDURE ModifyRecords@7();
    BEGIN
      CommJnlLine2.RESET;
      CommJnlLine2.SETRANGE("Journal Template Name",CommJnlLine."Journal Template Name");
      CommJnlLine2.SETRANGE("Journal Batch Name",CommJnlLine."Journal Batch Name");
      CommJnlLine2.SETRANGE("Account Type",CommJnlLine."Account Type"::Location);
      CommJnlLine2.SETRANGE("Account No.",CommJnlLine."Account No.");
      CommJnlLine2.MODIFYALL("E-Mail Notification Handled",TRUE);
      COMMIT;
    END;

    LOCAL PROCEDURE GetFirstRecordInLoop@3(CurrentLevel@1000000000 : Integer);
    BEGIN
      CASE CurrentLevel OF
        2:
          BEGIN
            CommJnlLine.RESET;
      //      CommJnlLine.SETRANGE("MfrRep No.",MfrRep."No.");
            IF EMailHeader."Line Type Filter" <> '' THEN
              CommJnlLine.SETFILTER("Document Type",EMailHeader."Line Type Filter");
            IF EMailHeader."Only Lines with Content" THEN
      //        CommJnlLine.SETFILTER("Remaining Amount",'<>%1',0);
            RecordFound[CurrentLevel] := CommJnlLine.FIND('-');
      //      FieldValue.CustLedgerEntry_21(CommJnlLine,0);
          END;
        ELSE
          ERROR(Text013,CurrentLevel);
      END;
    END;

    LOCAL PROCEDURE GetNextRecordInLoop@4(CurrentLevel@1000000000 : Integer);
    BEGIN
      CASE CurrentLevel OF
        2:
          BEGIN
            RecordFound[CurrentLevel] := CommJnlLine.NEXT <> 0;
           // FieldValue.CustLedgerEntry_21(CustLedgEntry,0);
          END;
        ELSE
          ERROR(Text013,CurrentLevel);
      END;
    END;

    PROCEDURE SaveReport@1240020001(ReportNo@1000000000 : Integer;VAR SaveFileName@1000000001 : Text[250]);
    BEGIN
      Location.SETRECFILTER;
      IF ISSERVICETIER THEN BEGIN
        EMailSetup.ChangeFilenameToPDF(SaveFileName);
        REPORT.SAVEASPDF(ReportNo,SaveFileName,Location);
      END ELSE
        REPORT.SAVEASHTML(ReportNo,SaveFileName,Location);
    END;

    PROCEDURE SaveReportExcel@1000000000(ReportNo@1000000000 : Integer;VAR SaveFileName@1000000001 : Text[250]);
    BEGIN
      REPORT.SAVEASEXCEL(ReportNo,SaveFileName);
    END;

    PROCEDURE GetReceiverList@10(VAR GetEMailListEntryTmp@1240030000 : Record 14000908);
    BEGIN
      GetInitialRecords;

      GetEMailListEntryTmp.RESET;
      IF GetEMailListEntryTmp.FIND('-') THEN
        ERROR(Text014);

      EMailListEntryTmp.RESET;
      IF EMailListEntryTmp.FIND('-') THEN
        REPEAT
          GetEMailListEntryTmp := EMailListEntryTmp;
          GetEMailListEntryTmp.INSERT;
        UNTIL EMailListEntryTmp.NEXT = 0;
    END;

    BEGIN
    {
      2015-05-11 TPZ92 TAKHMETO
        Report has been created
      2016-05-06 TPZ1542 EBAGIM
        SMTP Override Created
      2016-07-26 TPZ1415 EBAGIM
        Add Division to commission email subject
    }
    END.
  }
  RDLDATA
  {
  }
}

