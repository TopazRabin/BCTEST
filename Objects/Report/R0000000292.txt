OBJECT Report 292 Copy Sales Document
{
  OBJECT-PROPERTIES
  {
    Date=09/21/19;
    Time=12:00:00 PM;
    Version List=NAVW111.00.00.36462;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Copy Sales Document;
               ESM=Copiar doc. venta;
               FRC=Copier doc. ventes;
               ENC=Copy Sales Document];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  SalesSetup.GET;
                  CopyDocMgt.SetProperties(
                    IncludeHeader,RecalculateLines,FALSE,FALSE,FALSE,SalesSetup."Exact Cost Reversing Mandatory",FALSE);
                  // <TPZ67>
                  CopyDocMgt.SetExtProperties(CopyItemPrices);
                  // </TPZ67>
                  CopyDocMgt.CopySalesDoc(DocType,DocNo,SalesHeader)
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF DocNo <> '' THEN BEGIN
                     CASE DocType OF
                       DocType::Quote:
                         IF FromSalesHeader.GET(FromSalesHeader."Document Type"::Quote,DocNo) THEN;
                       DocType::"Blanket Order":
                         IF FromSalesHeader.GET(FromSalesHeader."Document Type"::"Blanket Order",DocNo) THEN;
                       DocType::Order:
                         IF FromSalesHeader.GET(FromSalesHeader."Document Type"::Order,DocNo) THEN;
                       DocType::Invoice:
                         IF FromSalesHeader.GET(FromSalesHeader."Document Type"::Invoice,DocNo) THEN;
                       DocType::"Return Order":
                         IF FromSalesHeader.GET(FromSalesHeader."Document Type"::"Return Order",DocNo) THEN;
                       DocType::"Credit Memo":
                         IF FromSalesHeader.GET(FromSalesHeader."Document Type"::"Credit Memo",DocNo) THEN;
                       DocType::"Posted Shipment":
                         IF FromSalesShptHeader.GET(DocNo) THEN
                           FromSalesHeader.TRANSFERFIELDS(FromSalesShptHeader);
                       DocType::"Posted Invoice":
                         IF FromSalesInvHeader.GET(DocNo) THEN
                           FromSalesHeader.TRANSFERFIELDS(FromSalesInvHeader);
                       DocType::"Posted Return Receipt":
                         IF FromReturnRcptHeader.GET(DocNo) THEN
                           FromSalesHeader.TRANSFERFIELDS(FromReturnRcptHeader);
                       DocType::"Posted Credit Memo":
                         IF FromSalesCrMemoHeader.GET(DocNo) THEN
                           FromSalesHeader.TRANSFERFIELDS(FromSalesCrMemoHeader);
                     END;
                     IF FromSalesHeader."No." = '' THEN
                       DocNo := '';
                   END;
                   ValidateDocNo;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESM=Opciones;
                             FRC=Options;
                             ENC=Options] }

      { 3   ;2   ;Field     ;
                  Name=DocumentType;
                  CaptionML=[ENU=Document Type;
                             ESM=Tipo documento;
                             FRC=Type document;
                             ENC=Document Type];
                  ToolTipML=[ENU=Specifies the type of document that is processed by the report or batch job.;
                             ESM=Especifica el tipo del documento procesado por el informe o el trabajo por lotes.;
                             FRC=Sp‚cifie le type de documents trait‚s par l'‚tat ou le traitement par lots.;
                             ENC=Specifies the type of document that is processed by the report or batch job.];
                  OptionCaptionML=[ENU=Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Shipment,Posted Invoice,Posted Return Receipt,Posted Credit Memo;
                                   ESM=Oferta,Pedido abierto,Pedido,Factura,Devoluci¢n,Abono,Albar n venta regis.,Factura regis.,Recep. dev. regis.,Abono regis.;
                                   FRC=Devis,Commande permanente,Commande,Facture,Retour,Note de cr‚dit,Livraison report‚e,Facture report‚e,R‚ception de retour report‚e,Note de cr‚dit report‚e;
                                   ENC=Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Shipment,Posted Invoice,Posted Return Receipt,Posted Credit Memo];
                  ApplicationArea=#Suite;
                  SourceExpr=DocType;
                  OnValidate=BEGIN
                               DocNo := '';
                               ValidateDocNo;
                             END;
                              }

      { 8   ;2   ;Field     ;
                  Name=DocumentNo;
                  CaptionML=[ENU=Document No.;
                             ESM=N§ documento;
                             FRC=Nø document;
                             ENC=Document No.];
                  ToolTipML=[ENU=Specifies the number of the document that is processed by the report or batch job.;
                             ESM=Especifica el n£mero del documento procesado por el informe o el trabajo por lotes.;
                             FRC=Sp‚cifie le nombre de documents trait‚s par l'‚tat ou le traitement par lots.;
                             ENC=Specifies the number of the document that is processed by the report or batch job.];
                  ApplicationArea=#Suite;
                  SourceExpr=DocNo;
                  OnValidate=BEGIN
                               ValidateDocNo;
                             END;

                  OnLookup=BEGIN
                             LookupDocNo;
                           END;
                            }

      { 5   ;2   ;Field     ;
                  Name=SellToCustNo;
                  CaptionML=[ENU=Sell-to Customer No.;
                             ESM=Venta a-N§ cliente;
                             FRC=Nø donneur d'ordre;
                             ENC=Sell-to Customer No.];
                  ToolTipML=[ENU=Specifies the sell-to customer number that will appear on the new sales document.;
                             ESM=Especifica el n£mero de cliente de venta que aparecer  en el nuevo documento de venta.;
                             FRC=Sp‚cifie le num‚ro de donneur d'ordre qui figure sur le nouveau document vente.;
                             ENC=Specifies the sell-to customer number that will appear on the new sales document.];
                  ApplicationArea=#Suite;
                  SourceExpr=FromSalesHeader."Sell-to Customer No.";
                  Editable=FALSE }

      { 7   ;2   ;Field     ;
                  Name=SellToCustName;
                  CaptionML=[ENU=Sell-to Customer Name;
                             ESM=Venta a-Nombre;
                             FRC=Nom du donneur d'ordre;
                             ENC=Sell-to Customer Name];
                  ToolTipML=[ENU=Specifies the sell-to customer name that will appear on the new sales document.;
                             ESM=Especifica el nombre del cliente de venta que aparecer  en el nuevo documento de venta.;
                             FRC=Sp‚cifie le nom de donneur d'ordre qui figure sur le nouveau document vente.;
                             ENC=Specifies the sell-to customer name that will appear on the new sales document.];
                  ApplicationArea=#Suite;
                  SourceExpr=FromSalesHeader."Sell-to Customer Name";
                  Editable=FALSE }

      { 1   ;2   ;Field     ;
                  Name=IncludeHeader_Options;
                  CaptionML=[ENU=Include Header;
                             ESM=Incluir cabecera;
                             FRC=Inclure en-tˆte;
                             ENC=Include Header];
                  ToolTipML=[ENU=Specifies if you also want to copy the information from the document header. When you copy quotes, if the posting date field of the new document is empty, the work date is used as the posting date of the new document.;
                             ESM=Especifica si tambi‚n desea copiar la informaci¢n de la cabecera del documento. Al copiar ofertas, si el campo Fecha registro del nuevo documento est  vac¡o, la fecha de trabajo se usa como la fecha de registro del nuevo documento.;
                             FRC=Indique si vous souhaitez ‚galement copier les informations … partir de l'en-tˆte du document. Lorsque vous copiez des devis, si le champ de la date comptabilisation du nouveau document est vide, la date de travail est utilis‚e comme date comptabilisation du nouveau document.;
                             ENC=Specifies if you also want to copy the information from the document header. When you copy quotes, if the posting date field of the new document is empty, the work date is used as the posting date of the new document.];
                  ApplicationArea=#Suite;
                  SourceExpr=IncludeHeader;
                  OnValidate=BEGIN
                               ValidateIncludeHeader;
                             END;
                              }

      { 4   ;2   ;Field     ;
                  Name=RecalculateLines;
                  CaptionML=[ENU=Recalculate Lines;
                             ESM=Recalcular l¡neas;
                             FRC=Recalculer lignes;
                             ENC=Recalculate Lines];
                  ToolTipML=[ENU=Specifies that lines are recalculate and inserted on the sales document you are creating. The batch job retains the item numbers and item quantities but recalculates the amounts on the lines based on the customer information on the new document header. In this way, the batch job accounts for item prices and discounts that are specifically linked to the customer on the new header.;
                             ESM=Especifica que las l¡neas se recalculan e insertan en el documento de venta que est  creando. El proceso conserva los n£meros y las cantidades de producto, pero vuelve a calcular los importes de las l¡neas seg£n los datos de cliente que figuran en la cabecera del documento nuevo. De esta manera, el proceso incluye los precios y los descuentos de producto espec¡ficamente vinculados al cliente en la cabecera nueva.;
                             FRC=Sp‚cifie que les lignes sont recalcul‚es et ins‚r‚es dans le document vente que vous cr‚ez. Le traitement par lots insŠre les lignes du document que vous copiez dans le nouveau document. Le traitement par lots conserve les num‚ros et les quantit‚s d'article et recalcule les montants en fonction des informations client du nouvel en-tˆte. Ainsi, le traitement par lots tient compte des prix et des remises propres au client mentionn‚ dans l'en-tˆte.;
                             ENC=Specifies that lines are recalculate and inserted on the sales document you are creating. The batch job retains the item numbers and item quantities but recalculates the amounts on the lines based on the customer information on the new document header. In this way, the batch job accounts for item prices and discounts that are specifically linked to the customer on the new header.];
                  ApplicationArea=#Suite;
                  SourceExpr=RecalculateLines;
                  OnValidate=BEGIN
                               IF (DocType = DocType::"Posted Shipment") OR (DocType = DocType::"Posted Return Receipt") THEN
                                 RecalculateLines := TRUE;
                             END;
                              }

      { 1000000000;2;Field  ;
                  Name=CopyItemPrices;
                  CaptionML=ENU=Copy Item Prices;
                  SourceExpr=CopyItemPrices }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      SalesHeader@1007 : Record 36;
      FromSalesHeader@1010 : Record 36;
      FromSalesShptHeader@1012 : Record 110;
      FromSalesInvHeader@1014 : Record 112;
      FromReturnRcptHeader@1016 : Record 6660;
      FromSalesCrMemoHeader@1018 : Record 114;
      SalesSetup@1003 : Record 311;
      CopyDocMgt@1008 : Codeunit 6620;
      DocType@1026 : 'Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Shipment,Posted Invoice,Posted Return Receipt,Posted Credit Memo';
      DocNo@1027 : Code[20];
      IncludeHeader@1028 : Boolean;
      RecalculateLines@1029 : Boolean;
      Text000@1000 : TextConst 'ENU=The price information may not be reversed correctly, if you copy a %1. If possible copy a %2 instead or use %3 functionality.;ESM=Es posible que la informaci¢n sobre el precio no se revierta correctamente si copia un documento de %1. Si es posible, copie un documento de %2 en su lugar o utilice la funcionalidad %3.;FRC=Les informations de prix risquent de ne pas ˆtre annul‚es correctement si vous copiez un(e) %1. Si possible, copiez plut“t un(e) %2 ou utilisez la fonctionnalit‚ %3.;ENC=The price information may not be reversed correctly, if you copy a %1. If possible copy a %2 instead or use %3 functionality.';
      Text001@1001 : TextConst 'ENU=Undo Shipment;ESM=Deshacer env¡o;FRC=Annuler exp‚dition;ENC=Undo Shipment';
      Text002@1002 : TextConst 'ENU=Undo Return Receipt;ESM=Deshacer recep. devoluc.;FRC=Annuler r‚ception retour;ENC=Undo Return Receipt';
      Text003@1004 : TextConst 'ENU=Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Shipment,Posted Invoice,Posted Return Receipt,Posted Credit Memo;ESM=Oferta,Pedido abierto,Pedido,Factura,Devoluci¢n,Abono,Albar n venta regis.,Factura regis.,Recep. dev. regis.,Abono regis.;FRC=Devis,Commande ouverte,Commande,Facture,Retour,Avoir,Exp‚dition enregistr‚e,Facture enregistr‚e,R‚ception retour enreg.,Avoir enregistr‚;ENC=Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Shipment,Posted Invoice,Posted Return Receipt,Posted Credit Memo';
      CopyItemPrices@1000000000 : Boolean;

    PROCEDURE SetSalesHeader@2(VAR NewSalesHeader@1000 : Record 36);
    BEGIN
      NewSalesHeader.TESTFIELD("No.");
      SalesHeader := NewSalesHeader;
    END;

    LOCAL PROCEDURE ValidateDocNo@10();
    VAR
      DocType2@1000 : 'Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Shipment,Posted Invoice,Posted Return Receipt,Posted Credit Memo';
    BEGIN
      IF DocNo = '' THEN
        FromSalesHeader.INIT
      ELSE
        IF FromSalesHeader."No." = '' THEN BEGIN
          FromSalesHeader.INIT;
          CASE DocType OF
            DocType::Quote,
            DocType::"Blanket Order",
            DocType::Order,
            DocType::Invoice,
            DocType::"Return Order",
            DocType::"Credit Memo":
              FromSalesHeader.GET(CopyDocMgt.SalesHeaderDocType(DocType),DocNo);
            DocType::"Posted Shipment":
              BEGIN
                FromSalesShptHeader.GET(DocNo);
                FromSalesHeader.TRANSFERFIELDS(FromSalesShptHeader);
                IF SalesHeader."Document Type" IN
                   [SalesHeader."Document Type"::"Return Order",SalesHeader."Document Type"::"Credit Memo"]
                THEN BEGIN
                  DocType2 := DocType2::"Posted Invoice";
                  MESSAGE(Text000,SELECTSTR(1 + DocType,Text003),SELECTSTR(1 + DocType2,Text003),Text001);
                END;
              END;
            DocType::"Posted Invoice":
              BEGIN
                FromSalesInvHeader.GET(DocNo);
                FromSalesHeader.TRANSFERFIELDS(FromSalesInvHeader);
              END;
            DocType::"Posted Return Receipt":
              BEGIN
                FromReturnRcptHeader.GET(DocNo);
                FromSalesHeader.TRANSFERFIELDS(FromReturnRcptHeader);
                IF SalesHeader."Document Type" IN
                   [SalesHeader."Document Type"::Order,SalesHeader."Document Type"::Invoice]
                THEN BEGIN
                  DocType2 := DocType2::"Posted Credit Memo";
                  MESSAGE(Text000,SELECTSTR(1 + DocType,Text003),SELECTSTR(1 + DocType2,Text003),Text002);
                END;
              END;
            DocType::"Posted Credit Memo":
              BEGIN
                FromSalesCrMemoHeader.GET(DocNo);
                FromSalesHeader.TRANSFERFIELDS(FromSalesCrMemoHeader);
              END;
          END;
        END;
      FromSalesHeader."No." := '';

      IncludeHeader :=
        (DocType IN [DocType::"Posted Invoice",DocType::"Posted Credit Memo"]) AND
        ((DocType = DocType::"Posted Credit Memo") <>
         (SalesHeader."Document Type" IN
          [SalesHeader."Document Type"::"Return Order",SalesHeader."Document Type"::"Credit Memo"])) AND
        (SalesHeader."Bill-to Customer No." IN [FromSalesHeader."Bill-to Customer No.",'']);

      OnBeforeValidateIncludeHeader(IncludeHeader);
      ValidateIncludeHeader;
    END;

    LOCAL PROCEDURE LookupDocNo@3();
    BEGIN
      CASE DocType OF
        DocType::Quote,
        DocType::"Blanket Order",
        DocType::Order,
        DocType::Invoice,
        DocType::"Return Order",
        DocType::"Credit Memo":
          BEGIN
            FromSalesHeader.FILTERGROUP := 0;
            FromSalesHeader.SETRANGE("Document Type",CopyDocMgt.SalesHeaderDocType(DocType));
            IF SalesHeader."Document Type" = CopyDocMgt.SalesHeaderDocType(DocType) THEN
              FromSalesHeader.SETFILTER("No.",'<>%1',SalesHeader."No.");
            FromSalesHeader.FILTERGROUP := 2;
            FromSalesHeader."Document Type" := CopyDocMgt.SalesHeaderDocType(DocType);
            FromSalesHeader."No." := DocNo;
            IF (DocNo = '') AND (SalesHeader."Sell-to Customer No." <> '') THEN
              IF FromSalesHeader.SETCURRENTKEY("Document Type","Sell-to Customer No.") THEN BEGIN
                FromSalesHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                IF FromSalesHeader.FIND('=><') THEN;
              END;
            IF PAGE.RUNMODAL(0,FromSalesHeader) = ACTION::LookupOK THEN
              DocNo := FromSalesHeader."No.";
          END;
        DocType::"Posted Shipment":
          BEGIN
            FromSalesShptHeader."No." := DocNo;
            IF (DocNo = '') AND (SalesHeader."Sell-to Customer No." <> '') THEN
              IF FromSalesShptHeader.SETCURRENTKEY("Sell-to Customer No.") THEN BEGIN
                FromSalesShptHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                IF FromSalesShptHeader.FIND('=><') THEN;
              END;
            IF PAGE.RUNMODAL(0,FromSalesShptHeader) = ACTION::LookupOK THEN
              DocNo := FromSalesShptHeader."No.";
          END;
        DocType::"Posted Invoice":
          BEGIN
            FromSalesInvHeader."No." := DocNo;
            IF (DocNo = '') AND (SalesHeader."Sell-to Customer No." <> '') THEN
              IF FromSalesInvHeader.SETCURRENTKEY("Sell-to Customer No.") THEN BEGIN
                FromSalesInvHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                IF FromSalesInvHeader.FIND('=><') THEN;
              END;
            FromSalesInvHeader.FILTERGROUP(2);
            FromSalesInvHeader.SETRANGE("Prepayment Invoice",FALSE);
            FromSalesInvHeader.FILTERGROUP(0);
            IF PAGE.RUNMODAL(0,FromSalesInvHeader) = ACTION::LookupOK THEN
              DocNo := FromSalesInvHeader."No.";
          END;
        DocType::"Posted Return Receipt":
          BEGIN
            FromReturnRcptHeader."No." := DocNo;
            IF (DocNo = '') AND (SalesHeader."Sell-to Customer No." <> '') THEN
              IF FromReturnRcptHeader.SETCURRENTKEY("Sell-to Customer No.") THEN BEGIN
                FromReturnRcptHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                IF FromReturnRcptHeader.FIND('=><') THEN;
              END;
            IF PAGE.RUNMODAL(0,FromReturnRcptHeader) = ACTION::LookupOK THEN
              DocNo := FromReturnRcptHeader."No.";
          END;
        DocType::"Posted Credit Memo":
          BEGIN
            FromSalesCrMemoHeader."No." := DocNo;
            IF (DocNo = '') AND (SalesHeader."Sell-to Customer No." <> '') THEN
              IF FromSalesCrMemoHeader.SETCURRENTKEY("Sell-to Customer No.") THEN BEGIN
                FromSalesCrMemoHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                IF FromSalesCrMemoHeader.FIND('=><') THEN;
              END;
            FromSalesCrMemoHeader.FILTERGROUP(2);
            FromSalesCrMemoHeader.SETRANGE("Prepayment Credit Memo",FALSE);
            FromSalesCrMemoHeader.FILTERGROUP(0);
            IF PAGE.RUNMODAL(0,FromSalesCrMemoHeader) = ACTION::LookupOK THEN
              DocNo := FromSalesCrMemoHeader."No.";
          END;
      END;
      ValidateDocNo;
    END;

    LOCAL PROCEDURE ValidateIncludeHeader@4();
    BEGIN
      RecalculateLines :=
        (DocType IN [DocType::"Posted Shipment",DocType::"Posted Return Receipt"]) OR NOT IncludeHeader;
    END;

    PROCEDURE InitializeRequest@1(NewDocType@1001 : Option;NewDocNo@1000 : Code[20];NewIncludeHeader@1002 : Boolean;NewRecalcLines@1003 : Boolean);
    BEGIN
      DocType := NewDocType;
      DocNo := NewDocNo;
      IncludeHeader := NewIncludeHeader;
      RecalculateLines := NewRecalcLines;
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeValidateIncludeHeader@1016(VAR DoIncludeHeader@1000 : Boolean);
    BEGIN
    END;

    BEGIN
    {
      2015-06-19 TPZ67 VCHERNYA
        Copy Item Prices checkbox has been added to request page Options field group
    }
    END.
  }
  RDLDATA
  {
  }
}

