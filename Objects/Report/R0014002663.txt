OBJECT Report 14002663 Export Vendor Spend to Excel
{
  OBJECT-PROPERTIES
  {
    Date=03/01/20;
    Time=12:00:00 PM;
    Version List=UBP3.02;
  }
  PROPERTIES
  {
    CaptionML=ENU=Export Vendor Spend to Excel;
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  First := TRUE;

                  CLEAR(AFPExcelCreate);
                  AFPExcelCreate.CreateBook;
                  AFPExcelCreate.AddNewSheet(Text001);
                  AFPExcelCreate.EnterIntoNextColumn(Text002,TRUE,TRUE,TRUE,10);
                  AFPExcelCreate.EnterIntoNextColumn(Text003,FALSE,FALSE,TRUE,10);
                  AFPExcelCreate.EnterIntoNextColumn(Text004,FALSE,FALSE,TRUE,30);
                  AFPExcelCreate.EnterIntoNextColumn(Text006,FALSE,FALSE,TRUE,10);

                  ProgWindow.OPEN(
                    Text005 + '\' +
                    PADSTR(Text002,15) + '#1#################\' +
                    PADSTR(Text003,15) + '#2########');
                END;

    OnPostReport=BEGIN
                   i := 0;
                   REPEAT
                     i := i + 1;
                     IF i = 1 THEN BEGIN
                       AFPExcelCreate.EnterIntoNextRow('',TRUE,FALSE,FALSE,0);
                       AFPExcelCreate.EnterIntoNextColumn('',FALSE,FALSE,FALSE,0);
                       AFPExcelCreate.EnterIntoNextColumn('',FALSE,FALSE,FALSE,0);
                       AFPExcelCreate.EnterIntoNextColumn('',FALSE,FALSE,FALSE,0);
                     END;
                     AFPExcelCreate.EnterIntoNextColumn(FORMAT(VendorSpendTotalArray[i]),FALSE,FALSE,FALSE,0);
                   UNTIL i = 15;

                   AFPExcelCreate.Complete(Text001);
                   ProgWindow.CLOSE;
                 END;

  }
  DATASET
  {
    { 3182;    ;DataItem;                    ;
               DataItemTable=Table23;
               PrintOnlyIfDetail=Yes;
               OnAfterGetRecord=BEGIN
                                  CLEAR(VendorSpendArray);
                                END;

               ReqFilterFields=No. }

    { 5730;1   ;DataItem;                    ;
               DataItemTable=Table14000563;
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               FoundBuyingCalendar := FALSE;
                             END;

               OnAfterGetRecord=BEGIN
                                  ProgWindow.UPDATE(1,"Vendor Buying Calendar"."Vendor No.");
                                  ProgWindow.UPDATE(2,"Vendor Buying Calendar"."Location Code");

                                  FoundBuyingCalendar := TRUE;

                                  IF First THEN BEGIN
                                    ForInvPer.RESET;
                                    ForInvPer.SETRANGE(Type,ForInvPer.Type::" ");
                                    ForInvPer.SETFILTER("Starting Date",'%1..',"Vendor Buying Calendar"."Vendor Spend Start Date");
                                    IF ForInvPer.FIND('-') THEN BEGIN
                                      i := 0;
                                      REPEAT
                                        i := i + 1;
                                        AFPExcelCreate.EnterIntoNextColumn(FORMAT(ForInvPer."Starting Date"),FALSE,FALSE,TRUE,10);
                                        StartingDateArray[i] := ForInvPer."Starting Date";
                                      UNTIL (ForInvPer.NEXT = 0) OR
                                            (i = 15);
                                    END;
                                    First := FALSE;
                                  END;
                                  "Vendor Buying Calendar".CALCFIELDS("Vendor Name");
                                  i := 0;
                                  REPEAT
                                    i := i + 1;
                                    IF i = 1 THEN BEGIN
                                      AFPExcelCreate.EnterIntoNextRow("Vendor Buying Calendar"."Vendor No.",TRUE,FALSE,FALSE,0);
                                      AFPExcelCreate.EnterIntoNextColumn("Vendor Buying Calendar"."Location Code",FALSE,FALSE,FALSE,0);
                                      AFPExcelCreate.EnterIntoNextColumn("Vendor Buying Calendar"."Vendor Name",FALSE,FALSE,FALSE,0);
                                      AFPExcelCreate.EnterIntoNextColumn("Vendor Buying Calendar"."Division Code",FALSE,FALSE,FALSE,0);
                                    END;
                                    "Vendor Buying Calendar".SETFILTER("Date Filter",FORMAT(StartingDateArray[i]));
                                    "Vendor Buying Calendar".CALCFIELDS("Period Spend");
                                    AFPExcelCreate.EnterIntoNextColumn(FORMAT("Vendor Buying Calendar"."Period Spend"),FALSE,FALSE,FALSE,0);
                                    VendorSpendArray[i] := VendorSpendArray[i] + "Vendor Buying Calendar"."Period Spend";
                                    VendorSpendTotalArray[i] := VendorSpendTotalArray[i] + "Vendor Buying Calendar"."Period Spend";
                                  UNTIL i = 15;
                                END;

               OnPostDataItem=BEGIN
                                IF FoundBuyingCalendar THEN BEGIN
                                  i := 0;
                                  REPEAT
                                    i := i + 1;
                                    IF i = 1 THEN BEGIN
                                      AFPExcelCreate.EnterIntoNextRow("Vendor Buying Calendar"."Vendor No.",TRUE,FALSE,FALSE,0);
                                      AFPExcelCreate.EnterIntoNextColumn('',FALSE,FALSE,FALSE,0);
                                      AFPExcelCreate.EnterIntoNextColumn("Vendor Buying Calendar"."Vendor Name",FALSE,FALSE,FALSE,0);
                                      AFPExcelCreate.EnterIntoNextColumn('',FALSE,FALSE,FALSE,0);
                                    END;
                                    AFPExcelCreate.EnterIntoNextColumn(FORMAT(VendorSpendArray[i]),FALSE,FALSE,FALSE,0);
                                  UNTIL i = 15;

                                  AFPExcelCreate.EnterIntoNextRow('',TRUE,FALSE,FALSE,0);
                                END;
                              END;

               ReqFilterFields=Location Code;
               DataItemLink=Vendor No.=FIELD(No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ForInvPer@1240030003 : Record 14000552;
      AFPExcelCreate@1240030000 : Codeunit 14000587;
      ProgWindow@1240030011 : Dialog;
      First@1240030001 : Boolean;
      FoundBuyingCalendar@1240030014 : Boolean;
      i@1240030004 : Integer;
      StartingDateArray@1240030005 : ARRAY [24] OF Date;
      Text001@1240030006 : TextConst 'ENU=Vendor Spend';
      Text002@1240030007 : TextConst 'ENU=Vendor';
      Text003@1240030008 : TextConst 'ENU=Location';
      Text004@1240030009 : TextConst 'ENU=Vendor Name';
      Text005@1240030010 : TextConst 'ENU=Export Vendor Spend';
      VendorSpendArray@1240030013 : ARRAY [24] OF Decimal;
      VendorSpendTotalArray@1240030012 : ARRAY [24] OF Decimal;
      Text006@1240020000 : TextConst 'ENU=Division';

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

