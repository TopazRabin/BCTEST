OBJECT Report 14050312 Send Sales Order Status Job
{
  OBJECT-PROPERTIES
  {
    Date=10/20/14;
    Time=12:00:00 PM;
    Version List=SE0.60.03;
  }
  PROPERTIES
  {
    CaptionML=ENU=Send Sales Order Status Job;
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   CompanyInformation.GET;
                 END;

    UseRequestPage=No;
  }
  DATASET
  {
    { 2284;    ;DataItem;                    ;
               DataItemTable=Table14050305 }

    { 1676;    ;DataItem;                    ;
               DataItemTable=Table14002358;
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               SETFILTER("Trade Partner No.","E.D.I. Job Routine"."Trade Partner Filter");
                               SETFILTER("Navision Document","E.D.I. Job Routine"."EDI Document No. Filter");
                               SETFILTER("Company Name","E.D.I. Job Routine"."Company Filter");
                             END;

               ReqFilterFields=Trade Partner No.,Internal Doc. No.,Date Received }

    { 6640;1   ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(EDI Order,EDI Trade Partner,EDI Internal Doc. No.)
                                 ORDER(Ascending)
                                 WHERE(EDI Order=CONST(Yes));
               PrintOnlyIfDetail=Yes;
               DataItemLink=EDI Internal Doc. No.=FIELD(Internal Doc. No.) }

    { 2844;2   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.)
                                 ORDER(Ascending)
                                 WHERE(EDI Status Pending=CONST(Yes));
               OnAfterGetRecord=BEGIN
                                  EDISalesOrderStatus.CreateOrderStatusLine(
                                    "Sales Line","Sales Header",Quantity,"Qty. to Ship");

                                  "EDI Status Pending" := FALSE;
                                  MODIFY;
                                END;

               DataItemLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.) }

    { 4545;1   ;DataItem;                    ;
               DataItemTable=Table14002400;
               DataItemTableView=SORTING(Trade Partner Code,Internal Doc. No.,Export Version,Source Doc. Type,Source Doc. No.)
                                 ORDER(Ascending)
                                 WHERE(Document Type=FILTER(' '),
                                       Exported=CONST(No));
               DataItemLink=Trade Partner Code=FIELD(Trade Partner No.),
                            Internal Doc. No.=FIELD(Internal Doc. No.) }

    { 4819;2   ;DataItem;                    ;
               DataItemTable=Table14002401;
               DataItemTableView=SORTING(Internal Doc. No.,Export Version,Source Doc. Type,Source Doc. No.,Line No.)
                                 ORDER(Ascending);
               DataItemLink=Internal Doc. No.=FIELD(Internal Doc. No.),
                            Export Version=FIELD(Export Version),
                            Source Doc. Type=FIELD(Source Doc. Type),
                            Source Doc. No.=FIELD(Source Doc. No.) }

    { 5444;1   ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnAfterGetRecord=BEGIN
                                  NavisionDocument := 'E_SLSSTA';
                                  EDIDocument.SETRANGE("Trade Partner No.","E.D.I. Receive Document Hdr."."Trade Partner No.");
                                  EDIDocument.SETRANGE("Navision Document",'E_SLSSTA');
                                  EDIDocument.SETFILTER(Status,'<>%1',EDIDocument.Status::Inactive);
                                  IF EDIDocument.FIND('-') THEN BEGIN
                                    NavisionDocument := EDIDocument."Navision Document";
                                    EDIManagement.CreateOutboundLogEntry(
                                      Text001,LogEntryNo,'SALES ORDER STATUS',"Order Status Header"."Internal Doc. No.",
                                      EDIDocument."Trade Partner No.",EDIDocument."Navision Document",EDIDocument."EDI Document No.");
                                    COMMIT;

                                    CLEARLASTERROR;
                                    CLEAR(EDISalesOrderStatus);
                                    IF EDISalesOrderStatus.RUN("Order Status Header") THEN
                                      DeleteLog := TRUE
                                    ELSE
                                      DeleteLog := FALSE;
                                    COMMIT;

                                    IF DeleteLog THEN
                                      EDIManagement.DeleteOutboundLogEntry(LogEntryNo)
                                    ELSE BEGIN
                                      ErrorText := '';
                                      ErrorText := COPYSTR(GETLASTERRORTEXT,1,250);
                                      EDIManagement.CloseOutboundLogEntry(LogEntryNo,ErrorText);
                                    END;
                                    COMMIT;
                                  END;

                                  EDISetup.GET;
                                  IF EDISetup."Auto Export Send Doc." THEN BEGIN
                                    EDIDocument.RESET;
                                    EDIDocument.SETRANGE("Trade Partner No.","E.D.I. Receive Document Hdr."."Trade Partner No.");
                                    EDIDocument.SETRANGE("Navision Document",'E_SLSSTA');
                                    EDIDocument.SETFILTER(Status,'<>%1',EDIDocument.Status::Inactive);
                                    IF EDIDocument.FIND('-') THEN BEGIN
                                      EDIManagement.CreateOutboundLogEntry(Text002,LogEntryNo,'SEND DOCUMENT','',
                                      EDIDocument."Trade Partner No.", EDIDocument."Navision Document",
                                      EDIDocument."EDI Document No.");
                                      COMMIT;

                                      CLEARLASTERROR;
                                      IF EDISend.RUN(EDIDocument) THEN
                                        DeleteLog := TRUE
                                      ELSE
                                       DeleteLog := FALSE;
                                      COMMIT;

                                      IF DeleteLog THEN
                                        EDIManagement.DeleteOutboundLogEntry(LogEntryNo)
                                      ELSE BEGIN
                                        ErrorText := '';
                                        ErrorText := COPYSTR(GETLASTERRORTEXT,1,250);
                                        EDIManagement.CloseOutboundLogEntry(LogEntryNo,ErrorText);
                                      END;
                                      COMMIT;
                                    END;
                                  END;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CompanyInformation@1240030000 : Record 79;
      EDIDocument@1240030001 : Record 14002353;
      EDISetup@1240030004 : Record 14002367;
      EDISalesOrderStatus@1240030005 : Codeunit 14002400;
      EDIManagement@1240020000 : Codeunit 14002379;
      EDISend@1240030006 : Codeunit 14002356;
      DeleteLog@1240030010 : Boolean;
      LogEntryNo@1240030011 : Integer;
      NavisionDocument@1240030012 : Code[10];
      ErrorText@1240030015 : Text[250];
      Text001@1001 : TextConst 'ENU=EDI Order Status (870)';
      Text002@1002 : TextConst 'ENU=EDI Document %1 not found for Trading partner %2';

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

