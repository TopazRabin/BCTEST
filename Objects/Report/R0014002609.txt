OBJECT Report 14002609 Import Worksheet Tran. 2013
{
  OBJECT-PROPERTIES
  {
    Date=03/27/19;
    Time=12:00:00 PM;
    Version List=UBP3.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Import Worksheet Tran.;
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF FileName = '' THEN
                    ERROR(Text001);
                  ExcelBuf.OpenBook(ServerFileName,SheetName);
                  ExcelBuf.ReadSheet;

                  GetData;
                END;

  }
  DATASET
  {
    { 5444;    ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 ORDER(Ascending)
                                 WHERE(Number=CONST(1)) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   ColFCSetup.GET;
                   FileName := '';
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1240030002;2;Field  ;
                  CaptionML=ENU=Workbook File Name;
                  SourceExpr=FileName;
                  OnAssistEdit=BEGIN
                                 RequestFile;
                                 SheetName := ExcelBuf.SelectSheetsName(ServerFileName);
                               END;
                                }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ColFCSetup@1240020000 : Record 14002607;
      ExcelBuf@1000000000 : TEMPORARY Record 370;
      FCCustItem@1010 : Record 14002602;
      FileMgt@1000 : Codeunit 419;
      ProgWindow@1240020001 : Dialog;
      FileName@1240030000 : Text[250];
      Text000@1240030001 : TextConst 'ENU=Import Excel File';
      ServerFileName@1001 : Text;
      SheetName@1012 : Text[250];
      DefFileName@1240030004 : Text[250];
      Text001@1002 : TextConst 'ENU=You must enter a file name.';
      DateArray@1004 : ARRAY [100] OF Date;
      i@1005 : Integer;
      CustNo@1011 : Code[20];
      LocationCode@1006 : Code[10];
      ItemNo@1007 : Code[50];
      VariantCode@1008 : Code[10];
      RowNo@1009 : Integer;
      NewLineType@1013 : Text[30];
      Text002@1003 : TextConst 'ENU=Could not create the starting period.';

    PROCEDURE RequestFile@1();
    BEGIN
      IF FileName <> '' THEN
        ServerFileName := FileMgt.UploadFile(Text000,FileName)
      ELSE
        ServerFileName := FileMgt.UploadFile(Text000,'.xlsx');

      ValidateServerFileName;
      FileName := FileMgt.GetFileName(ServerFileName);
    END;

    PROCEDURE ValidateServerFileName@2();
    BEGIN
      IF ServerFileName = '' THEN BEGIN
        FileName := '';
        SheetName := '';
        ERROR(Text001);
      END;
    END;

    PROCEDURE GetData@1240020001();
    VAR
      ColFCLine@1000 : Record 14002605;
    BEGIN
      ColFCSetup.GET;
      IF ExcelBuf.FINDSET THEN
        REPEAT
          IF (ExcelBuf."Row No." = 1) AND
             (ExcelBuf."Column No." = 2)
          THEN BEGIN
            CustNo := COPYSTR(ExcelBuf."Cell Value as Text",1,20);
            ColFCLine.SETRANGE("Customer No.",CustNo);
            ColFCLine.SETRANGE(Type,ColFCLine.Type::"New Forecast");
            ColFCLine.DELETEALL;
            ColFCLine.SETRANGE(Type,ColFCLine.Type::Title);
            ColFCLine.DELETEALL;
          END;
          // Get Period Dates
          IF (ExcelBuf."Row No." = 3) AND
             (ExcelBuf."Column No." >= 6)
          THEN BEGIN
            IF ExcelBuf."Column No." = 6 THEN BEGIN
              CLEAR(DateArray);
              i := 0;
            END;
            ColFCLine.INIT;
            ColFCLine."Customer No." := CustNo;
            ColFCLine.Type := ColFCLine.Type::Title;
            REPEAT
              i := i + 1;
              IF EVALUATE(DateArray[i],ExcelBuf."Cell Value as Text") THEN
                UpdateColFCLine(i, ColFCLine);
              ExcelBuf.NEXT;
            UNTIL ExcelBuf."Row No." <> 3;
            IF NOT ColFCLine.INSERT THEN
              ERROR(Text002);
          END;
          // Get New Forecast
          IF (ExcelBuf."Cell Value as Text" = 'New Forecast') OR
             (NewLineType = 'New Forecast')
          THEN BEGIN
            IF NewLineType <> 'New Forecast' THEN BEGIN
              ExcelBuf.NEXT;
              NewLineType := '';
            END;
            LocationCode := ExcelBuf."Cell Value as Text";
            ExcelBuf.NEXT;
            ItemNo := ExcelBuf."Cell Value as Text";
            ExcelBuf.NEXT;
            IF ExcelBuf."Column No." = 4 THEN
              VariantCode := ExcelBuf."Cell Value as Text"
            ELSE
              VariantCode := '';
            FCCustItem.RESET;
            FCCustItem.SETRANGE("Customer No.",CustNo);
            FCCustItem.SETRANGE("Location Code",LocationCode);
            FCCustItem.SETRANGE("Item No.",ItemNo);
            FCCustItem.SETRANGE("Variant Code",VariantCode);
            IF NOT FCCustItem.FINDFIRST THEN BEGIN
              FCCustItem.INIT;
              FCCustItem.VALIDATE("Customer No.",CustNo);
              FCCustItem.VALIDATE("Location Code",LocationCode);
              FCCustItem.VALIDATE("Item No.",ItemNo);
              FCCustItem.VALIDATE("Variant Code",VariantCode);
              FCCustItem."Forecast Type" := FCCustItem."Forecast Type"::Total;
              FCCustItem.INSERT(TRUE);
            END;
            IF ExcelBuf."Column No." <> 6 THEN
              REPEAT
                ExcelBuf.NEXT;
              UNTIL ExcelBuf."Column No." = 6;

            RowNo := ExcelBuf."Row No.";
            ColFCLine.INIT;
            ColFCLine."Customer No." := CustNo;
            ColFCLine."Location Code" := LocationCode;
            ColFCLine."Item No." := ItemNo;
            ColFCLine.Variant := VariantCode;
            ColFCLine.Type := ColFCLine.Type::"New Forecast";
            ColFCLine."Starting Date" := DateArray[1];
            i := 0;
            REPEAT
              i := i + 1;
              UpdateColFCLine(i, ColFCLine);
            UNTIL (ExcelBuf.NEXT = 0) OR
                  (ExcelBuf."Row No." <> RowNo);
            ColFCLine.CheckReview(0);
            ColFCLine.INSERT;
            IF ExcelBuf."Cell Value as Text" = 'New Forecast' THEN
              NewLineType := 'New Forecast';
          END;
        UNTIL ExcelBuf.NEXT = 0;
    END;

    LOCAL PROCEDURE UpdateColFCLine@3(VAR CurrPeriod@1000 : Integer;VAR CurrColFCLine@1002 : Record 14002605);
    BEGIN
      CASE CurrPeriod OF
        1:   CurrColFCLine."Period 1" := ExcelBuf."Cell Value as Text";
        2:   CurrColFCLine."Period 2" := ExcelBuf."Cell Value as Text";
        3:   CurrColFCLine."Period 3" := ExcelBuf."Cell Value as Text";
        4:   CurrColFCLine."Period 4" := ExcelBuf."Cell Value as Text";
        5:   CurrColFCLine."Period 5" := ExcelBuf."Cell Value as Text";
        6:   CurrColFCLine."Period 6" := ExcelBuf."Cell Value as Text";
        7:   CurrColFCLine."Period 7" := ExcelBuf."Cell Value as Text";
        8:   CurrColFCLine."Period 8" := ExcelBuf."Cell Value as Text";
        9:   CurrColFCLine."Period 9" := ExcelBuf."Cell Value as Text";
        10:  CurrColFCLine."Period 10" := ExcelBuf."Cell Value as Text";
        11:  CurrColFCLine."Period 11" := ExcelBuf."Cell Value as Text";
        12:  CurrColFCLine."Period 12" := ExcelBuf."Cell Value as Text";
        13:  CurrColFCLine."Period 13" := ExcelBuf."Cell Value as Text";
        14:  CurrColFCLine."Period 14" := ExcelBuf."Cell Value as Text";
        15:  CurrColFCLine."Period 15" := ExcelBuf."Cell Value as Text";
        16:  CurrColFCLine."Period 16" := ExcelBuf."Cell Value as Text";
        17:  CurrColFCLine."Period 17" := ExcelBuf."Cell Value as Text";
        18:  CurrColFCLine."Period 18" := ExcelBuf."Cell Value as Text";
        19:  CurrColFCLine."Period 19" := ExcelBuf."Cell Value as Text";
        20:  CurrColFCLine."Period 20" := ExcelBuf."Cell Value as Text";
        21:  CurrColFCLine."Period 21" := ExcelBuf."Cell Value as Text";
        22:  CurrColFCLine."Period 22" := ExcelBuf."Cell Value as Text";
        23:  CurrColFCLine."Period 23" := ExcelBuf."Cell Value as Text";
        24:  CurrColFCLine."Period 24" := ExcelBuf."Cell Value as Text";
        25:  CurrColFCLine."Period 25" := ExcelBuf."Cell Value as Text";
        26:  CurrColFCLine."Period 26" := ExcelBuf."Cell Value as Text";
        27:  CurrColFCLine."Period 27" := ExcelBuf."Cell Value as Text";
        28:  CurrColFCLine."Period 28" := ExcelBuf."Cell Value as Text";
        29:  CurrColFCLine."Period 29" := ExcelBuf."Cell Value as Text";
        30:  CurrColFCLine."Period 30" := ExcelBuf."Cell Value as Text";
        31:  CurrColFCLine."Period 31" := ExcelBuf."Cell Value as Text";
        32:  CurrColFCLine."Period 32" := ExcelBuf."Cell Value as Text";
        33:  CurrColFCLine."Period 33" := ExcelBuf."Cell Value as Text";
        34:  CurrColFCLine."Period 34" := ExcelBuf."Cell Value as Text";
        35:  CurrColFCLine."Period 35" := ExcelBuf."Cell Value as Text";
        36:  CurrColFCLine."Period 36" := ExcelBuf."Cell Value as Text";
        37:  CurrColFCLine."Period 37" := ExcelBuf."Cell Value as Text";
        38:  CurrColFCLine."Period 38" := ExcelBuf."Cell Value as Text";
        39:  CurrColFCLine."Period 39" := ExcelBuf."Cell Value as Text";
        40:  CurrColFCLine."Period 40" := ExcelBuf."Cell Value as Text";
        41:  CurrColFCLine."Period 41" := ExcelBuf."Cell Value as Text";
        42:  CurrColFCLine."Period 42" := ExcelBuf."Cell Value as Text";
        43:  CurrColFCLine."Period 43" := ExcelBuf."Cell Value as Text";
        44:  CurrColFCLine."Period 44" := ExcelBuf."Cell Value as Text";
        45:  CurrColFCLine."Period 45" := ExcelBuf."Cell Value as Text";
        46:  CurrColFCLine."Period 46" := ExcelBuf."Cell Value as Text";
        47:  CurrColFCLine."Period 47" := ExcelBuf."Cell Value as Text";
        48:  CurrColFCLine."Period 48" := ExcelBuf."Cell Value as Text";
        49:  CurrColFCLine."Period 49" := ExcelBuf."Cell Value as Text";
        50:  CurrColFCLine."Period 50" := ExcelBuf."Cell Value as Text";
        51:  CurrColFCLine."Period 51" := ExcelBuf."Cell Value as Text";
        52:  CurrColFCLine."Period 52" := ExcelBuf."Cell Value as Text";
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

