OBJECT Report 14050324 Create E.D.I. Invt. Advice Job
{
  OBJECT-PROPERTIES
  {
    Date=11/11/13;
    Time=12:00:00 PM;
    Version List=SE0.60;
  }
  PROPERTIES
  {
    CaptionML=ENU=Create E.D.I. Invt. Advice Job;
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  CompanyInformation.GET;
                END;

    OnPostReport=BEGIN
                   TmpItem.RESET;
                   TmpItem.DELETEALL;
                 END;

    UseRequestPage=No;
  }
  DATASET
  {
    { 2284;    ;DataItem;                    ;
               DataItemTable=Table14050305 }

    { 1529;    ;DataItem;                    ;
               DataItemTable=Table14002360;
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               "E.D.I. Trade Partner".SETFILTER("No.","E.D.I. Job Routine"."Trade Partner Filter");
                               "E.D.I. Trade Partner".SETFILTER("Company Name","E.D.I. Job Routine"."Company Filter");
                             END;

               OnAfterGetRecord=BEGIN
                                  IF "Customer No." = '' THEN BEGIN
                                    EDICustCrossRef.INIT;
                                    EDICustCrossRef.RESET;
                                    EDICustCrossRef.SETRANGE("Trade Partner No.","No.");
                                    EDICustCrossRef.SETFILTER("Navision Sell To Code",'<>%1','');
                                    IF NOT EDICustCrossRef.FIND('-') THEN
                                      CurrReport.SKIP
                                    ELSE BEGIN
                                      IF NOT Customer.GET(EDICustCrossRef."Navision Sell To Code") THEN
                                        CurrReport.SKIP
                                      ELSE
                                        EDITradePartner.GET(EDICustCrossRef."Trade Partner No.");
                                    END;
                                  END ELSE BEGIN
                                    IF NOT Customer.GET("Customer No.") THEN
                                      CurrReport.SKIP
                                    ELSE
                                      EDITradePartner.GET("No.");
                                  END;

                                  EDIDocument.RESET;
                                  EDIDocument.SETRANGE("Trade Partner No.","No.");
                                  EDIDocument.SETFILTER(
                                    Status,'%1|%2',EDIDocument.Status::Test,EDIDocument.Status::Production);
                                  EDIDocument.SETRANGE("Navision Document",'E_INVADV');
                                  EDIDocument.SETRANGE(Type,EDIDocument.Type::Export);
                                  IF NOT EDIDocument.FIND('-') THEN
                                    CurrReport.SKIP;

                                  IF NOT EDITemplate.GET(EDIDocument."EDI Template Code") THEN
                                    CurrReport.SKIP;

                                  IF FORMAT(ExpectedDate) = '' THEN
                                    ExpectedDate := CALCDATE(EDIDocument."Expected Receipt Date Formula",TODAY)
                                  ELSE
                                    ExpectedDate := CALCDATE(ExpectedDateFormula,TODAY);
                                  IF TODAY = ExpectedDate THEN
                                    ExpectedDate := 0D;
                                END;

               ReqFilterFields=No. }

    { 8129;1   ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemTableView=WHERE(Blocked=CONST(No));
               OnPreDataItem=BEGIN
                               CLEAR(CreateInventoryAdvice);
                               InventoryAdviceHdr.INIT;
                               AdviceCreated := FALSE;
                               DocNo := '';
                             END;

               OnAfterGetRecord=BEGIN
                                  IF EDIDocument."Auto. Create Item Filter" =
                                     EDIDocument."Auto. Create Item Filter"::"EDI Item Cross Reference"
                                  THEN BEGIN
                                    EDITradePtnrItem.RESET;
                                    EDITradePtnrItem.SETRANGE("Trade Partner No.",EDITradePartner."No.");
                                    EDITradePtnrItem.SETFILTER("Partner Item No.",'<>%1','');
                                    EDITradePtnrItem.SETRANGE(Discontinue,FALSE);
                                    IF NOT EDITradePtnrItem.FIND('-') THEN
                                      CurrReport.SKIP;
                                  END;

                                  IF AdviceCreated = FALSE THEN
                                    DocNo :=
                                      CreateInventoryAdvice.CreateInvtAdvice(Customer,EDITradePartner,EDIDocument);
                                  IF InventoryAdviceHdr.GET(DocNo,InventoryAdviceHdr.Type::"  ") THEN BEGIN
                                    AdviceCreated := TRUE;
                                    CreateInventoryAdvice.GetValuesInventoryAdvice(
                                      Item,EDIDocument,Customer,InventoryAdviceHdr,ExpectedDate,AvailableQty,ExpectedReceiptQty);
                                    CreateInventoryAdvice.RUN(Item);
                                    IF EDIDocument."Auto. Create Item Filter" <> EDIDocument."Auto. Create Item Filter"::" " THEN
                                      CurrReport.BREAK;
                                  END ELSE
                                    CurrReport.SKIP;

                                  COMMIT;
                                END;

               OnPostDataItem=VAR
                                EDISetup@1240020000 : Record 14002367;
                                EDISend@1240020001 : Codeunit 14002356;
                              BEGIN
                                EDISetup.GET;
                                EDIManagement.CreateOutboundLogEntry(Text001,LogEntryNo,'SEND DOCUMENT',DocNo,EDITradePartner."No.",
                                EDIDocument."Navision Document",EDIDocument."EDI Document No.");
                                COMMIT;

                                CLEARLASTERROR;
                                IF SendEDIInventoryDocument.RUN(InventoryAdviceHdr) THEN
                                  DeleteLog := TRUE
                                ELSE
                                  DeleteLog := FALSE;
                                COMMIT;

                                IF DeleteLog THEN
                                  EDIManagement.DeleteOutboundLogEntry(LogEntryNo)
                                ELSE BEGIN
                                  ErrorText := '';
                                  ErrorText := COPYSTR(GETLASTERRORTEXT,1,250);
                                  EDIManagement.CloseOutboundLogEntry(LogEntryNo,ErrorText);
                                END;
                                COMMIT;
                              END;

               ReqFilterFields=No. }

    { 5444;1   ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               EDISetup.GET;
                               EDIDocument.SETFILTER("EDI Document No.","E.D.I. Job Routine"."EDI Document No. Filter");
                             END;

               OnAfterGetRecord=BEGIN
                                  IF EDISetup."Auto Export Send Doc." THEN BEGIN
                                    EDIManagement.CreateOutboundLogEntry(Text002,LogEntryNo,'SEND DOCUMENT',DocNo,EDITradePartner."No.",
                                    EDIDocument."Navision Document",EDIDocument."EDI Document No.");
                                    COMMIT;

                                    CLEARLASTERROR;
                                    IF EDISend.RUN(EDIDocument) THEN
                                      DeleteLog := TRUE
                                    ELSE
                                      DeleteLog := FALSE;
                                    COMMIT;

                                    IF DeleteLog THEN
                                      EDIManagement.DeleteOutboundLogEntry(LogEntryNo)
                                    ELSE BEGIN
                                      ErrorText := '';
                                      ErrorText := COPYSTR(GETLASTERRORTEXT,1,250);
                                      EDIManagement.CloseOutboundLogEntry(LogEntryNo,ErrorText);
                                    END;
                                    COMMIT;
                                  END;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      EDIDocument@1240030000 : Record 14002353;
      Customer@1240020019 : Record 18;
      InventoryAdviceHdr@1240030010 : Record 14002413;
      EDITradePtnrItem@1240030003 : Record 14002364;
      ItemCrossReference@1240030012 : Record 5717;
      EDITradePartner@1240020007 : Record 14002360;
      EDICustCrossRef@1240020008 : Record 14002362;
      EDISetup@1240020009 : Record 14002367;
      EDITemplate@1240020020 : Record 14002350;
      CompanyInformation@1240020021 : Record 79;
      Item2@1240020024 : Record 27;
      TmpItem@1240020031 : TEMPORARY Record 27;
      EDIManagement@1240020002 : Codeunit 14002379;
      CreateInventoryAdvice@1240030002 : Codeunit 14002416;
      SendEDIInventoryDocument@1240020001 : Codeunit 14002413;
      EDISend@1240020017 : Codeunit 14002356;
      TradePartner@1240030004 : Code[20];
      Text001@1240020023 : TextConst 'ENU=Create Inventory Advice';
      AvailableQty@1240030005 : Decimal;
      ExpectedReceiptQty@1240030006 : Decimal;
      ExpectedDate@1240030007 : Date;
      ExpectedDateFormula@1240030008 : DateFormula;
      Release@1240030009 : Boolean;
      AutoFilterICRTypeNo@1240030013 : ' ,Customer,Blank';
      IncludeCrossRefTypeNo@1240030015 : ' ,Customer,Blank';
      DocNo@1240020010 : Code[10];
      Text002@1240020016 : TextConst 'ENU=Send Inventory Advice';
      LogEntryNo@1240020027 : Integer;
      DeleteLog@1240020029 : Boolean;
      AdviceCreated@1240020030 : Boolean;
      ErrorText@1240020000 : Text[250];

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

