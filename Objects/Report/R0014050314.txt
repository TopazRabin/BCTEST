OBJECT Report 14050314 Send Routing Request Job
{
  OBJECT-PROPERTIES
  {
    Date=11/11/13;
    Time=12:00:00 PM;
    Version List=SE0.60;
  }
  PROPERTIES
  {
    Permissions=TableData 112=rimd;
    CaptionML=ENU=Send Routing Request Job;
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  CompanyInformation.GET;
                END;

    UseRequestPage=No;
  }
  DATASET
  {
    { 2284;    ;DataItem;                    ;
               DataItemTable=Table14050305 }

    { 2527;    ;DataItem;EDITradePartner     ;
               DataItemTable=Table14002360;
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               EDITradePartner.SETFILTER("No.","E.D.I. Job Routine"."Trade Partner Filter");
                               EDITradePartner.SETFILTER("Company Name","E.D.I. Job Routine"."Company Filter");
                             END;

               ReqFilterFields=No. }

    { 3226;1   ;DataItem;                    ;
               DataItemTable=Table14002402;
               DataItemTableView=SORTING(No.)
                                 ORDER(Ascending)
                                 WHERE(EDI Request Generated=CONST(No));
               OnAfterGetRecord=BEGIN
                                  NavisionDocument := '';
                                  EDIDocument.SETRANGE("Trade Partner No.",EDITradePartner."No.");
                                  EDIDocument.SETFILTER(
                                    Status,'%1|%2',EDIDocument.Status::Test,EDIDocument.Status::Production);
                                  EDIDocument.SETRANGE("Navision Document",'E_ROUTEREQ');
                                  EDIDocument.SETRANGE(Type,EDIDocument.Type::Export);
                                  IF EDIDocument.FIND('-') THEN
                                    NavisionDocument := EDIDocument."Navision Document"
                                  ELSE BEGIN
                                    EDIDocument.INIT;
                                    NavisionDocument := 'E_ROUTEREQ';
                                  END;

                                  EDIManagement.CreateOutboundLogEntry(
                                    Text001,LogEntryNo,'ROUTING REQUEST',"Routing Request Header"."No.",EDITradePartner."No.",
                                    NavisionDocument,EDIDocument."EDI Document No.");
                                  COMMIT;

                                  CLEARLASTERROR;
                                  CLEAR(EDIRoutingRequestSend);
                                  IF EDIRoutingRequestSend.RUN("Routing Request Header") THEN
                                    DeleteLog := TRUE
                                  ELSE
                                    DeleteLog := FALSE;
                                  COMMIT;

                                  IF DeleteLog THEN
                                    EDIManagement.DeleteOutboundLogEntry(LogEntryNo)
                                  ELSE BEGIN
                                    ErrorText := '';
                                    ErrorText := COPYSTR(GETLASTERRORTEXT,1,250);
                                    EDIManagement.CloseOutboundLogEntry(LogEntryNo,ErrorText);
                                  END;
                                  COMMIT;
                                END;

               ReqFilterFields=No.,Trade Partner No.;
               DataItemLink=Trade Partner No.=FIELD(No.) }

    { 1534;1   ;DataItem;                    ;
               DataItemTable=Table14002353;
               DataItemTableView=SORTING(Trade Partner No.,Navision Document,EDI Document No.,Version,Type)
                                 ORDER(Ascending)
                                 WHERE(Navision Document=CONST(E_ROUTEREQ),
                                       Type=CONST(Export),
                                       Status=FILTER(Test|Production));
               OnPreDataItem=BEGIN
                               EDISetup.GET;
                               "E.D.I. Document".SETFILTER("EDI Document No.","E.D.I. Job Routine"."EDI Document No. Filter");
                             END;

               OnAfterGetRecord=BEGIN
                                  IF EDISetup."Auto Export Send Doc." THEN BEGIN
                                    EDIManagement.CreateOutboundLogEntry(Text002,LogEntryNo,'SEND DOCUMENT','',EDITradePartner."No.",
                                    "E.D.I. Document"."Navision Document","E.D.I. Document"."EDI Document No.");
                                    COMMIT;

                                    CLEARLASTERROR;
                                    IF EDISend.RUN("E.D.I. Document") THEN
                                      DeleteLog := TRUE
                                    ELSE
                                      DeleteLog := FALSE;
                                    COMMIT;

                                    IF DeleteLog THEN
                                      EDIManagement.DeleteOutboundLogEntry(LogEntryNo)
                                    ELSE BEGIN
                                      ErrorText := '';
                                      ErrorText := COPYSTR(GETLASTERRORTEXT,1,250);
                                      EDIManagement.CloseOutboundLogEntry(LogEntryNo,ErrorText);
                                    END;
                                    COMMIT;
                                  END;
                                END;

               DataItemLink=Trade Partner No.=FIELD(No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CompanyInformation@1240030000 : Record 79;
      EDISetup@1240030001 : Record 14002367;
      EDIDocument@1240020000 : Record 14002353;
      EDIRoutingRequestSend@1240030002 : Codeunit 14002403;
      EDIManagement@1240020001 : Codeunit 14002379;
      EDISend@1240030003 : Codeunit 14002356;
      Text001@1001 : TextConst 'ENU=Create EDI Routing Request';
      Text002@1002 : TextConst 'ENU=Send EDI Routing Request';
      DeleteLog@1240020002 : Boolean;
      ErrorText@1240020003 : Text[250];
      NavisionDocument@1240020004 : Code[10];
      LogEntryNo@1240020005 : Integer;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

