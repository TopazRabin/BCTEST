OBJECT Report 51078 Upd NAV Cont from Cont Feeder
{
  OBJECT-PROPERTIES
  {
    Date=07/09/21;
    Time=[ 3:23:09 AM];
    Modified=Yes;
    Version List=TPZ000.00.00,003;
  }
  PROPERTIES
  {
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 1000000000;;DataItem;                  ;
               DataItemTable=Table50019;
               DataItemTableView=SORTING(Entry No.,Line No.)
                                 WHERE(Job Responsibility=FILTER(<>''));
               OnPreDataItem=BEGIN
                               SETFILTER(Synched,'FALSE');
                               //MESSAGE(FORMAT(COUNT));
                             END;

               OnAfterGetRecord=BEGIN
                                  //<TPZ2347>
                                  EmailFoundinCust := FALSE;
                                  EmailFoundinPros := FALSE;
                                  EmailFound := FALSE;

                                  //<TPZ2364>
                                  //IF "Contact Feeder Entry".Type = "Contact Feeder Entry".Type :: Customer THEN BEGIN //<TPZ3170>
                                    IF "Contact Feeder Entry"."Shortcut Dimension 5 Code" = '' THEN
                                      CurrReport.SKIP;
                                  //END; //<TPZ3170>
                                  //</TPZ2364>

                                  //<TPZ3170>
                                  Pos := 0;
                                  IF "Contact Feeder Entry".Type = "Contact Feeder Entry".Type :: Prospect THEN BEGIN
                                      Pos := STRPOS("Contact Feeder Entry"."Job Responsibility",'Prospect');
                                      IF Pos = 0 THEN
                                        CurrReport.SKIP;
                                  END;
                                  //</TPZ3170>

                                  IF "Contact Feeder Entry"."E-Mail Address" <> '' THEN
                                    EmailCheck;

                                  IF EmailFound = FALSE THEN BEGIN //</TPZ2347>
                                    RMSetup.GET;
                                    RMSetup.TESTFIELD(RMSetup."Contact Nos.");
                                    IF ("Contact Feeder Entry".Type = "Contact Feeder Entry".Type :: Customer) THEN BEGIN
                                      ContactBusinessRelation.RESET;
                                      ContactBusinessRelation.SETRANGE(ContactBusinessRelation."Link to Table",ContactBusinessRelation."Link to Table" :: Customer);
                                      ContactBusinessRelation.SETRANGE(ContactBusinessRelation."No.","Contact Feeder Entry"."Customer No.");
                                      IF NOT ContactBusinessRelation.FINDFIRST THEN BEGIN
                                        IF Customer.GET("Contact Feeder Entry"."Customer No.") THEN;
                                        ContactCompany.INIT;
                                        ContactCompany."No." := NoSeriesMgmt.GetNextNo(RMSetup."Contact Nos.",TODAY,TRUE);
                                        ContactCompany.INSERT(TRUE);
                                        ContactCompany.VALIDATE(ContactCompany.Name,Customer.Name);
                                        ContactCompany.Address     := Customer.Address;
                                        ContactCompany."Address 2" := Customer."Address 2";
                                        ContactCompany.VALIDATE(ContactCompany.City,Customer.City);
                                        ContactCompany."Phone No." := Customer."Phone No.";
                                        ContactCompany.VALIDATE(ContactCompany."Country/Region Code",Customer."Country/Region Code");
                                        ContactCompany.VALIDATE(ContactCompany."Post Code",Customer."Post Code");
                                        ContactCompany.VALIDATE(ContactCompany.County,Customer.County);
                                        ContactCompany.VALIDATE(ContactCompany."E-Mail",Customer."E-Mail");
                                        ContactCompany."Home Page"   := Customer."Home Page";
                                        ContactCompany."No. Series" := RMSetup."Contact Nos.";
                                        ContactCompany.VALIDATE(ContactCompany.Type,ContactCompany.Type::Company);
                                        ContactCompany.VALIDATE(ContactCompany."Company No.",ContactCompany."No.");
                                        ContactCompany."Company Name" := Customer.Name;
                                        ContactCompany."Shortcut Dimension 5 Code" := "Contact Feeder Entry"."Shortcut Dimension 5 Code"; //<TPZ2351>
                                        ContactCompany."Ship-to Code" := "Contact Feeder Entry"."Ship-to Code";//<TPZ2358>
                                        ContactCompany.Marketing := "Contact Feeder Entry".Marketing;//<TPZ3221>
                                        ContactCompany.Pricing := "Contact Feeder Entry".Pricing;//<TPZ3221>
                                        ContactCompany.MODIFY(TRUE);

                                        ContactBusinessRelation.INIT;
                                        ContactBusinessRelation."Contact No." := ContactCompany."No.";
                                        ContactBusinessRelation.VALIDATE(ContactBusinessRelation."Business Relation Code" ,'1');
                                        ContactBusinessRelation."Link to Table" := ContactBusinessRelation."Link to Table" :: Customer;
                                        ContactBusinessRelation."No."  := "Contact Feeder Entry"."Customer No.";
                                        ContactBusinessRelation.INSERT(TRUE);

                                        CompanyNo   := ContactCompany."No.";
                                      END ELSE BEGIN
                                        CompanyNo   := ContactBusinessRelation."Contact No.";
                                      END;
                                    END;


                                    Contact.INIT;
                                    Contact."No." := NoSeriesMgmt.GetNextNo(RMSetup."Contact Nos.",TODAY,TRUE);
                                    Contact.INSERT(TRUE);
                                    Contact.VALIDATE(Contact.Name,"Contact Feeder Entry"."First Name"+' '+"Contact Feeder Entry"."Last Name");
                                    Contact.Address     := "Contact Feeder Entry".Address;
                                    Contact."Address 2" := "Contact Feeder Entry".Address2;
                                    Contact.VALIDATE(Contact.City,"Contact Feeder Entry".City);
                                    Contact."Phone No." := "Contact Feeder Entry"."Phone Number";
                                    Contact.VALIDATE(Contact."Country/Region Code","Contact Feeder Entry"."Country/Region Code");
                                    Contact.VALIDATE(Contact."Post Code","Contact Feeder Entry"."Post Code");
                                    Contact.VALIDATE(Contact.County,"Contact Feeder Entry".County);
                                    Contact.VALIDATE(Contact."E-Mail","Contact Feeder Entry"."E-Mail Address");
                                    Contact."No. Series" := RMSetup."Contact Nos.";
                                    Contact."First Name" := "Contact Feeder Entry"."First Name";
                                    Contact.Surname := "Contact Feeder Entry"."Last Name";
                                    Contact."Job Title" := "Contact Feeder Entry"."Job Title";
                                    Contact."Mobile Phone No." := "Contact Feeder Entry"."Mobile Phone Number";
                                    Contact."Ship-to Code" := "Contact Feeder Entry"."Ship-to Code";//<TPZ2358>
                                    Contact.Marketing := "Contact Feeder Entry".Marketing;//<TPZ3221>
                                    Contact.Pricing := "Contact Feeder Entry".Pricing;//<TPZ3221>

                                    JobResponsibility.RESET;
                                    JobResponsibility.SETRANGE(JobResponsibility.Description,"Contact Feeder Entry"."Job Responsibility");
                                    IF JobResponsibility.FINDFIRST THEN;

                                    //<TPZ2351>
                                   // IF ("Contact Feeder Entry".Type = "Contact Feeder Entry".Type :: Customer) THEN
                                      Contact."Shortcut Dimension 5 Code" := "Contact Feeder Entry"."Shortcut Dimension 5 Code"; //<TPZ3170>
                                   // ELSE
                                     // Contact."Shortcut Dimension 5 Code" := JobResponsibility."Shortcut Dimension 5 Code"; //<\TPZ2351>

                                    ContactJobResponsibility.RESET;
                                    ContactJobResponsibility.INIT;
                                    ContactJobResponsibility."Contact No." := Contact."No.";
                                    ContactJobResponsibility."Job Responsibility Code" := JobResponsibility.Code;
                                    ContactJobResponsibility."Job Responsibility Description" := JobResponsibility.Description;
                                    ContactJobResponsibility.INSERT(TRUE);


                                    Contact.VALIDATE(Contact.Type,Contact.Type::Person);

                                    IF ("Contact Feeder Entry".Type = "Contact Feeder Entry".Type :: Customer) THEN BEGIN
                                      Contact.VALIDATE(Contact."Company No.",CompanyNo);
                                      Contact."Company Name" := "Contact Feeder Entry"."Customer Name";
                                      Contact."Lookup Contact No." := Contact."No.";
                                    END ELSE BEGIN
                                      Contact."Company No."  := '';
                                      Contact."Company Name" := '';//<TPZ3170>
                                      //Contact."Company Name" := "Contact Feeder Entry"."Prospect Company Name";//<TPZ3170>
                                      Contact."Prospect Company Name" := "Contact Feeder Entry"."Prospect Company Name";//<TPZ3226>
                                      Contact."Lookup Contact No." := '';
                                    END;

                                    Contact.MODIFY(TRUE);

                                    "Contact Feeder Entry".Synched := TRUE;
                                    "Contact Feeder Entry"."Contact No." := Contact."No.";
                                    "Contact Feeder Entry".MODIFY;
                                  END ELSE BEGIN //<TPZ2347>
                                    IF EmailFoundinCust THEN
                                      "Contact Feeder Entry"."Email Exist as Customer" := TRUE;
                                    IF EmailFoundinPros THEN
                                      "Contact Feeder Entry"."Email Exist as Prospect" := TRUE;
                                    "Contact Feeder Entry".MODIFY;
                                  END;
                                  //</TPZ2347>
                                END;

               ReqFilterFields=Entry No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Contact@1000000000 : Record 5050;
      ContactBusinessRelation@1000000001 : Record 5054;
      ContactCompany@1000000006 : Record 5050;
      NoSeriesMgmt@1000000002 : Codeunit 396;
      RMSetup@1000000003 : Record 5079;
      ContactJobResponsibility@1000000004 : Record 5067;
      JobResponsibility@1000000005 : Record 5066;
      Customer@1000000007 : Record 18;
      CompanyNo@1000000008 : Code[30];
      SmtpMail@1000000009 : Record 409;
      Smtp@1000000010 : Codeunit 400;
      SyncReport@1000000011 : Report 51079;
      SyncPath@1000000012 : Text;
      filemgmt@1000000013 : Codeunit 419;
      Recipients@1000000014 : Text[1024];
      WHReports@1000000015 : Codeunit 51007;
      EmailFoundinCust@1000000020 : Boolean;
      EmailFoundinPros@1000000019 : Boolean;
      EmailFound@1000000018 : Boolean;
      JObRes@1000000017 : Text;
      JobResponsibility1@1000000016 : Record 5066;
      Pos@1000000021 : Integer;

    LOCAL PROCEDURE EmailCheck@1000000000();
    VAR
      ContactEmaiCheck@1000000004 : Record 5050;
    BEGIN
      //<TPZ2347>
      IF "Contact Feeder Entry".Type = "Contact Feeder Entry".Type :: Customer THEN BEGIN
        ContactEmaiCheck.RESET;
        //ContactEmaiCheck.SETRANGE(Type,ContactEmaiCheck.Type ::Company);
        ContactEmaiCheck.SETRANGE(ContactEmaiCheck."Shortcut Dimension 5 Code","Contact Feeder Entry"."Shortcut Dimension 5 Code");
        ContactEmaiCheck.SETRANGE("E-Mail","Contact Feeder Entry"."E-Mail Address");
        IF ContactEmaiCheck.FINDFIRST THEN BEGIN
            EmailFound := TRUE;
            EmailFoundinCust := TRUE
        END;
      END ELSE BEGIN
       // JobResponsibility1.RESET;<TPZ3170>
       // JobResponsibility1.SETRANGE(Description,"Contact Feeder Entry"."Job Responsibility");<TPZ3170>
       // IF JobResponsibility1.FINDFIRST THEN BEGIN <TPZ3170>
          ContactEmaiCheck.RESET;
          ContactEmaiCheck.SETRANGE(Type,ContactEmaiCheck.Type ::Person);
          ContactEmaiCheck.SETRANGE(ContactEmaiCheck."Shortcut Dimension 5 Code","Contact Feeder Entry"."Shortcut Dimension 5 Code");//<TPZ3170>
         // ContactEmaiCheck.SETRANGE("Shortcut Dimension 5 Code",JobResponsibility1."Shortcut Dimension 5 Code");<TPZ3170>
          ContactEmaiCheck.SETRANGE("E-Mail","Contact Feeder Entry"."E-Mail Address");
          IF ContactEmaiCheck.FINDFIRST THEN BEGIN
              EmailFound := TRUE;
              EmailFoundinPros := TRUE;
          END;
        //END; <TPZ3170>
      END;
      //</TPZ2347>
    END;

    BEGIN
    {
      03-29-2018 UCHOUHAN TPZ2255
        Developed to Update data from Contact feeder to NAV Contact.

      04-04-2018 UCHOUHAN TPZ2271
        -Added Job Responsibility filter in Dataitem property to skip blank job Responsibility records.

      04-19-2018 UCHOUHAN TPZ2289
        Remove first name filter from Dataitem property.

      06-21-2018 UCHOUHAN TPZ2347
        code for Email exist in contact Table.
      06-21-2018 UCHOUHAN TPZ2351
        Added code to update Division code in contact Mgmt.
      06-28-2018 UCHOUHAN TPZ2358
        Added code to update Ship-to Code code in contact Mgmt.
      07-05-2018 UCHOUHAN TPZ2364
       Code to check division code in customer Type Contact.
      001 TPZ3170 UTK 05212002 -Modification for  Prospect Company Name.
      002 TPZ3221 UTK 06302021 - Added code to modify in fields Marketing and Pricing.
      003 TPZ3226 UTK 07092021 - Modify code to update Prospect Company Name.
    }
    END.
  }
  RDLDATA
  {
  }
}

