OBJECT Report 51006 DC Performance
{
  OBJECT-PROPERTIES
  {
    Date=07/20/20;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=TPZ000.00.00,001;
  }
  PROPERTIES
  {
    ProcessingOnly=Yes;
    OnPreReport=BEGIN

                  //ELocation.CHANGECOMPANY('Lighting Electric');
                  //ELocInvPeriod.CHANGECOMPANY('Lighting Electric');
                  IF PeriodLength = '' THEN
                    PeriodLength := '1M';
                  PeriodStartingDate[1] := 0D;
                  FOR i := 2 TO 13 DO
                    PeriodStartingDate[i + 1] := CALCDATE(PeriodLength,PeriodStartingDate[i]);
                  PeriodStartingDate[15] := 12319999D;

                  FOR i := 1 TO 30 DO BEGIN
                    EPORcvAmt[i] := 0;
                    EPORcvLine[i] := 0;
                    EWhTrOAmt[i] := 0;
                    EWhTrOLine[i] := 0;
                    EWhTrIAmt[i] := 0;
                    EWhTrILine[i] := 0;
                    ERGAAmt[i] := 0;
                    ERGALine[i] := 0;
                    ESOSptAmt[i] := 0;
                    ESOSptLine[i] := 0;
                    ESOGPSptAmt[i] := 0;
                    EEmp[i] := 0;
                    EManHour[i] := 0;
                    EPayroll[i] := 0;
                    ESqft[i] := 0;
                    ETCSqft[i] := 0;
                    EInsure[i] := 0;
                    ERent[i] := 0;
                    EStFee[i] := 0;
                    EUtil[i] := 0;
                    EInventory[i] := 0;
                    EWC[i] := 0;
                    ETWC[i] := 0;
                    ENOC[i]:=0;
                    EMTU[i]:=0;
                    EHOU[i]:=0;
                    EPORcvAmt[i] := 0;
                    EPORcvLine[i] := 0;
                    EWhTrOAmt[i] := 0;
                    EWhTrOLine[i] := 0;
                    //EWhTrIAmt[i] := 0;
                    EWhTrILine[i] := 0;
                    ERGALine[i] := 0;
                    ESOSptAmt[i] := 0;
                    ESOSptLine[i] := 0;
                    ESOGPSptAmt[i] := 0;
                    EEmp[i] := 0;
                    EManHour[i] := 0;
                    EPayroll[i] := 0;
                    ESqft[i] := 0;
                    ETCSqft[i] := 0;
                    EInsure[i] := 0;
                    ERent[i] := 0;
                    EStFee[i] := 0;
                    EUtil[i] := 0;
                    EInventory[i] := 0;
                    EWC[i] := 0;
                    ETWC[i] := 0;
                    ENOC[i]:=0;
                    EMTU[i]:=0;
                    EHOU[i]:=0;
                    EBenefit[i] := 0;

                    ERHour[i] := 0;
                    EOHour[i] := 0;
                    ERPayroll[i] := 0;
                    EOPayroll[i] := 0;


                    LPORcvAmt[i] := 0;
                    LPORcvLine[i] := 0;
                    LWhTrOAmt[i] := 0;
                    LWhTrOLine[i] := 0;
                    LWhTrIAmt[i] := 0;
                    LWhTrILine[i] := 0;
                    LRGAAmt[i] := 0;
                    LRGALine[i] := 0;
                    LSOSptAmt[i] := 0;
                    LSOSptLine[i] := 0;
                    LSOGPSptAmt[i] := 0;
                    LEmp[i] := 0;
                    LManHour[i] := 0;
                    LPayroll[i] := 0;
                    LSqft[i] := 0;
                    LTCSqft[i] := 0;
                    LInsure[i] := 0;
                    LRent[i] := 0;
                    LStFee[i] := 0;
                    LUtil[i] := 0;
                    LInventory[i] := 0;
                    LWC[i] := 0;
                    LTWC[i] := 0;
                    LNOC[i]:=0;
                    LHOU[i]:=0;
                    LMTU[i]:=0;
                    LPORcvAmt[i] := 0;
                    LPORcvLine[i] := 0;
                    LWhTrOAmt[i] := 0;
                    LWhTrOLine[i] := 0;
                    LWhTrIAmt[i] := 0;
                    LWhTrILine[i] := 0;
                    LRGALine[i] := 0;
                    LSOSptAmt[i] := 0;
                    LSOSptLine[i] := 0;
                    LSOGPSptAmt[i] := 0;
                    LEmp[i] := 0;
                    LManHour[i] := 0;
                    LPayroll[i] := 0;
                    LSqft[i] := 0;
                    LTCSqft[i] := 0;
                    LInsure[i] := 0;
                    LRent[i] := 0;
                    LStFee[i] := 0;
                    LUtil[i] := 0;
                    LInventory[i] := 0;
                    LWC[i] := 0;
                    LTWC[i] := 0;
                    LNOC[i]:=0;
                    LHOU[i]:=0;
                    LMTU[i]:=0;
                    LBenefit[i] := 0;

                    LRHour[i] := 0;
                    LOHour[i] := 0;
                    LRPayroll[i] := 0;
                    LOPayroll[i] := 0;



                  END;
                  FOR i := 1 TO 30 DO BEGIN  //eb
                    EPORcvAmt[i] := 0;
                    EPORcvLine[i] := 0;
                    EWhTrOAmt[i] := 0;
                    EWhTrOLine[i] := 0;
                   // EWhTrIAmt[i] := 0;
                    EWhTrILine[i] := 0;
                    ERGAAmt[i] := 0;
                    ERGALine[i] := 0;
                    ESOSptAmt[i] := 0;
                    ESOSptLine[i] := 0;
                    ESOGPSptAmt[i] := 0;
                    EEmp[i] := 0;
                    EManHour[i] := 0;
                    EPayroll[i] := 0;
                    ERHour[i] := 0;
                    EOHour[i] := 0;
                    ERPayroll[i] := 0;
                    EOPayroll[i] := 0;
                    ESqft[i] := 0;
                    ETCSqft[i] := 0;
                    EInsure[i] := 0;
                    ERent[i] := 0;
                    EStFee[i] := 0;
                    EUtil[i] := 0;
                    EInventory[i] := 0;
                    EWC[i] := 0;
                    ETWC[i] := 0;
                    ENOC[i]:=0;
                    EMTU[i]:=0;
                    EHOU[i]:=0;
                    EBenefit[i] := 0;
                    LPORcvAmt[i] := 0;
                    LPORcvLine[i] := 0;
                    LWhTrOAmt[i] := 0;
                    LWhTrOLine[i] := 0;
                    LWhTrIAmt[i] := 0;
                    LWhTrILine[i] := 0;
                    LRGAAmt[i] := 0;
                    LRGALine[i] := 0;
                    LSOSptAmt[i] := 0;
                    LSOSptLine[i] := 0;
                    LSOGPSptAmt[i] := 0;
                    LEmp[i] := 0;
                    LManHour[i] := 0;
                    LPayroll[i] := 0;
                    LRHour[i] := 0;
                    LOHour[i] := 0;
                    LRPayroll[i] := 0;
                    LOPayroll[i] := 0;
                    LSqft[i] := 0;
                    LTCSqft[i] := 0;
                    LInsure[i] := 0;
                    LRent[i] := 0;
                    LStFee[i] := 0;
                    LUtil[i] := 0;
                    LInventory[i] := 0;
                    LWC[i] := 0;
                    LTWC[i] := 0;
                    LNOC[i]:=0;
                    LHOU[i]:=0;
                    LMTU[i]:=0;
                    LBenefit[i] := 0;

                  END;
                  TempExcelBuffer.DELETEALL;
                  CLEAR(TempExcelBuffer);
                  Row := 3;
                  FOR i := 2 TO NoMonth+1 DO
                    EnterCell(Row,i,GetMonName(PeriodStartingDate[i]),TRUE,FALSE,FALSE);
                  EnterCell(Row,NoMonth+2,'Total',TRUE,FALSE,FALSE);
                  Row += 1;
                END;

  }
  DATASET
  {
    { 1000000000;;DataItem;                  ;
               DataItemTable=Table14;
               DataItemTableView=SORTING(Distribution Center Code)
                                 WHERE(Distribution Center=CONST(Yes),
                                       Distribution Center Code=FILTER(1|25|30|50|76|80));
               OnAfterGetRecord=BEGIN

                                  IF (Location."Distribution Center Code" = '1') AND (NOT ShowNY) THEN CurrReport.SKIP
                                  ELSE IF (Location."Distribution Center Code" = '25') AND (NOT ShowJX) THEN CurrReport.SKIP
                                  ELSE IF (Location."Distribution Center Code" = '30') AND (NOT ShowCA) THEN CurrReport.SKIP
                                  ELSE IF (Location."Distribution Center Code" = '50') AND (NOT ShowEX) THEN CurrReport.SKIP
                                  ELSE IF (Location."Distribution Center Code" = '76') AND (NOT ShowPA) THEN CurrReport.SKIP
                                  //>>001 TPZ2904
                                  ELSE IF (Location."Distribution Center Code" = '80') AND (NOT ShowNJ) THEN CurrReport.SKIP;
                                  //<<001 TPZ2904

                                  IF (Location."Distribution Center Code" = '1') THEN BEGIN
                                    lindex := 13;
                                    eindex := 17;
                                    aindex := 21;
                                    LName := 'Lighting Holtsville, NY';
                                    EName := 'Electric Holtsville, NY';
                                  END ELSE IF (Location."Distribution Center Code" = '25') THEN BEGIN
                                    lindex := 14;
                                    eindex := 18;
                                    aindex := 22;
                                    LName := 'Lighting Jacksonville, FL';
                                    EName := 'Electric Jacksonville, FL';
                                  END ELSE IF (Location."Distribution Center Code" = '30') THEN BEGIN
                                    lindex := 15;
                                    eindex := 19;
                                    aindex := 23;
                                    LName := 'Lighting San Fernando, CA';
                                    EName := 'Electric San Fernando, CA';
                                  END ELSE IF (Location."Distribution Center Code" = '50') THEN BEGIN
                                    lindex := 16;
                                    eindex := 20;
                                    aindex := 24;
                                    LName := 'Lighting Miami, FL';
                                    EName := 'Electric Miami, FL';
                                  END ELSE IF (Location."Distribution Center Code" = '76') THEN BEGIN
                                    lindex := 25;
                                    eindex := 26;
                                    aindex := 27;
                                    LName := 'Lighting Langhorne, PA';
                                    EName := 'Electric Langhorne, PA';
                                  //>>001 TPZ2904
                                  END ELSE IF (Location."Distribution Center Code" = '80') THEN BEGIN
                                    lindex := 28;
                                    eindex := 29;
                                    aindex := 30;
                                    LName := 'Lighting South Brunswick, NJ';
                                    EName := 'Electric  South Brunswick, NJ';
                                  //<<001 TPZ2904
                                  END;
                                  //>>001 TPZ2904
                                  //Comment Out older code starting tag
                                  //IF Location."Distribution Center Code" IN ['1','25','30','50','76'] THEN BEGIN
                                  //Comment Out older code End tag
                                  IF Location."Distribution Center Code" IN ['1','25','30','50','76','80'] THEN BEGIN
                                  //<<001 TPZ2904
                                    FOR i := 2 TO NoMonth+1 DO BEGIN
                                      LLocInvPeriod.RESET;
                                      LLocInvPeriod.SETRANGE("Location Code",Location.Code);
                                      LLocInvPeriod.SETRANGE("Starting Date",PeriodStartingDate[i]);
                                      IF LLocInvPeriod.FIND('-') THEN BEGIN
                                        LGatherData(LLocInvPeriod,i);
                                      END ELSE BEGIN
                                        LPORcvAmt[i-1] := 0;
                                        LPORcvLine[i-1] := 0;
                                        LWhTrOAmt[i-1] := 0;
                                        LWhTrOLine[i-1] := 0;
                                        LWhTrIAmt[i-1] := 0;
                                        LWhTrILine[i-1] := 0;
                                        LRGALine[i-1] := 0;
                                        LSOSptAmt[i-1] := 0;
                                        LSOSptLine[i-1] := 0;
                                        LSOGPSptAmt[i-1] := 0;
                                        LEmp[i-1] := 0;
                                        LManHour[i-1] := 0;
                                        LPayroll[i-1] := 0;
                                        LRHour[i-1] := 0;
                                        LOHour[i-1] := 0;
                                        LRPayroll[i-1] := 0;
                                        LOPayroll[i-1] := 0;
                                        LSqft[i-1] := 0;
                                        LTCSqft[i-1] := 0;
                                        LInsure[i-1] := 0;
                                        LRent[i-1] := 0;
                                        LStFee[i-1] := 0;
                                        LUtil[i-1] := 0;
                                        LInventory[i-1] := 0;
                                        LWC[i-1] := 0;
                                        LTWC[i-1] := 0;
                                        LNOC[i-1]:=0;
                                        LHOU[i-1]:=0;
                                        LMTU[i-1]:=0;
                                      END;
                                    END;

                                    LCategoryName(Row,LName);
                                    FOR i := 1 TO NoMonth DO BEGIN
                                      LCategoryData(Row,i,i,1,FALSE);
                                    END;
                                    LCategoryData(Row,NoMonth+1,lindex,1,FALSE);
                                    Row += 77;
                                  END;

                                  ELocation.SETRANGE("Distribution Center Code",Location."Distribution Center Code");
                                  IF ELocation.FIND('-') THEN
                                  FOR i := 2 TO NoMonth+1 DO BEGIN
                                    ELocInvPeriod.RESET;
                                    ELocInvPeriod.SETRANGE("Location Code",ELocation.Code);
                                    ELocInvPeriod.SETRANGE("Starting Date",PeriodStartingDate[i]);
                                    IF ELocInvPeriod.FIND('-') THEN BEGIN
                                      EGatherData(ELocInvPeriod,i);
                                    END ELSE BEGIN
                                      EPORcvAmt[i-1] := 0;
                                      EPORcvLine[i-1] := 0;
                                      EWhTrOAmt[i-1] := 0;
                                      EWhTrOLine[i-1] := 0;
                                      EWhTrIAmt[i-1] := 0;
                                      EWhTrILine[i-1] := 0;
                                      ERGALine[i-1] := 0;
                                      ESOSptAmt[i-1] := 0;
                                      ESOSptLine[i-1] := 0;
                                      ESOGPSptAmt[i-1] := 0;
                                      EEmp[i-1] := 0;
                                      EManHour[i-1] := 0;
                                      ERHour[i-1] := 0;
                                      EOHour[i-1] := 0;
                                      ERPayroll[i-1] := 0;
                                      EOPayroll[i-1] := 0;
                                      EPayroll[i-1] := 0;
                                      ESqft[i-1] := 0;
                                      ETCSqft[i-1] := 0;
                                      EInsure[i-1] := 0;
                                      ERent[i-1] := 0;
                                      EStFee[i-1] := 0;
                                      EUtil[i-1] := 0;
                                      EInventory[i-1] := 0;
                                      EWC[i-1] := 0;
                                      ETWC[i-1] := 0;
                                      ENOC[i-1]:=0;
                                      EMTU[i-1]:=0;
                                      EHOU[i-1]:=0;
                                    END;
                                  END;
                                  ECategoryName(Row,EName);
                                  FOR i := 1 TO NoMonth DO BEGIN
                                    ECategoryData(Row,i,i,1,FALSE);
                                  END;
                                  ECategoryData(Row,NoMonth+1,eindex,1,FALSE);

                                  Row += 77;
                                END;

               OnPostDataItem=BEGIN

                                LCategoryName(Row,'Topaz Lighting');
                                EnterCell(Row,2,'Holtsville,NY',TRUE,FALSE,FALSE);
                                EnterCell(Row,3,'Jacksonville, FL',TRUE,FALSE,FALSE);
                                EnterCell(Row,4,'San Fernando, CA',TRUE,FALSE,FALSE);
                                EnterCell(Row,5,'Miami, FL',TRUE,FALSE,FALSE);
                                EnterCell(Row,6,'Langhorne, PA',TRUE,FALSE,FALSE);
                                //>>001 TPZ2904
                                EnterCell(Row,7,'South Brunswick, NJ',TRUE,FALSE,FALSE);
                                //<<001 TPZ2904
                                LLCategoryData(Row,1,13,NoMonth,FALSE);
                                LLCategoryData(Row,2,14,NoMonth,FALSE);
                                LLCategoryData(Row,3,15,NoMonth,FALSE);
                                LLCategoryData(Row,4,16,NoMonth,FALSE);
                                LLCategoryData(Row,5,25,NoMonth,FALSE);
                                //CategoryData(Row,4,16);
                                //>>001 TPZ2904
                                LLCategoryData(Row,6,27,NoMonth,FALSE);
                                //<<001 TPZ2904

                                Row += 77;
                                ECategoryName(Row,'Topaz Electric');
                                EnterCell(Row,2,'Holtsville,NY',TRUE,FALSE,FALSE);
                                EnterCell(Row,3,'Jacksonville, FL',TRUE,FALSE,FALSE);
                                EnterCell(Row,4,'San Fernando, CA',TRUE,FALSE,FALSE);
                                EnterCell(Row,5,'Miami, FL',TRUE,FALSE,FALSE);
                                EnterCell(Row,6,'Langhorne, PA',TRUE,FALSE,FALSE);
                                //>>001 TPZ2904
                                EnterCell(Row,7,'South Brunswick, NJ',TRUE,FALSE,FALSE);
                                //<<001 TPZ2904
                                EECategoryData(Row,1,17,NoMonth,FALSE);
                                EECategoryData(Row,2,18,NoMonth,FALSE);
                                EECategoryData(Row,3,19,NoMonth,FALSE);
                                EECategoryData(Row,4,20,NoMonth,FALSE);
                                EECategoryData(Row,5,26,NoMonth,FALSE);
                                //EECategoryData(Row,5,21,NoMonth,FALSE);
                                //>>001 TPZ2904
                                EECategoryData(Row,6,28,NoMonth,FALSE);
                                //<<001 TPZ2904
                                Row += 77;



                                ECategoryName(Row,'Topaz Inc. (Total)');
                                EnterCell(Row,2,'Holtsville,NY',TRUE,FALSE,FALSE);
                                EnterCell(Row,3,'Jacksonville, FL',TRUE,FALSE,FALSE);
                                EnterCell(Row,4,'San Fernando, CA',TRUE,FALSE,FALSE);
                                EnterCell(Row,5,'Miami, FL',TRUE,FALSE,FALSE);
                                EnterCell(Row,6,'Langhorne',TRUE,FALSE,FALSE);
                                //>>001 TPZ2904
                                EnterCell(Row,7,'South Brunswick, NJ',TRUE,FALSE,FALSE);
                                //<<001 TPZ2904
                                IF ShowNY THEN
                                TotalCategoryData(Row,1,13,17,NoMonth,TRUE);
                                IF ShowJX THEN
                                TotalCategoryData(Row,2,14,18,NoMonth,TRUE);
                                IF ShowCA THEN
                                TotalCategoryData(Row,3,15,19,NoMonth,TRUE);
                                IF ShowEX THEN
                                TotalCategoryData(Row,4,16,20,NoMonth,TRUE);
                                IF ShowPA THEN
                                TotalCategoryData(Row,5,25,26,NoMonth,TRUE);
                                //>>001 TPZ2904
                                IF ShowNJ THEN
                                TotalCategoryData(Row,6,27,28,NoMonth,TRUE);
                                //<<001 TPZ2904
                                Row += 77;

                                //EnterCell(1,1,FORMAT(Row),FALSE,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                TempExcelBuffer.CreateBook('',Text000);
                                TempExcelBuffer.WriteSheet(Text000,'Topaz',USERID);
                                TempExcelBuffer.CloseBook;
                                TempExcelBuffer.OpenExcel;

                                TempExcelBuffer.GiveUserControl;
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnInit=BEGIN

               PeriodLength := '1M';
               NoMonth := 12;
             END;

    }
    CONTROLS
    {
      { 1000000000;;Container;
                  Name=DC Performance;
                  ContainerType=ContentArea }

      { 1000000001;1;Field  ;
                  CaptionML=ENU=Start Date;
                  SourceExpr=PeriodStartingDate[2] }

      { 1000000002;1;Field  ;
                  CaptionML=ENU=Length of Period;
                  SourceExpr=PeriodLength }

      { 1000000003;1;Field  ;
                  CaptionML=ENU=No. of Month to Print;
                  SourceExpr=NoMonth }

      { 1000000004;1;Field  ;
                  CaptionML=ENU=Show All DC;
                  SourceExpr=ShowALL;
                  OnValidate=BEGIN
                                   ShowNY:=ShowALL;
                                   ShowJX:=ShowALL;
                                   ShowCA:=ShowALL;
                                   ShowEX:=ShowALL;
                                   ShowPA:=ShowALL;
                                   //>>001 TPZ2904
                                   ShowNJ:=ShowALL;
                                   //<<001 TPZ2904
                             END;
                              }

      { 1000000005;1;Field  ;
                  CaptionML=ENU=Show Holtsville, NY;
                  SourceExpr=ShowNY }

      { 1000000006;1;Field  ;
                  CaptionML=ENU=Show Jacksonville, FL;
                  SourceExpr=ShowJX }

      { 1000000007;1;Field  ;
                  CaptionML=ENU=Show San Fernando, CA;
                  SourceExpr=ShowCA }

      { 1000000008;1;Field  ;
                  CaptionML=ENU=Show Miami, FL;
                  SourceExpr=ShowEX }

      { 1000000009;1;Field  ;
                  CaptionML=ENU=Show Langhorne, PA;
                  SourceExpr=ShowPA }

      { 1000000010;1;Field  ;
                  CaptionML=ENU=Show South Brunswick, NJ;
                  SourceExpr=ShowNJ }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      UserSetup@1000000079 : Record 91;
      ELocation@1000000078 : Record 14;
      LLocInvPeriod@1000000077 : Record 14000553;
      ELocInvPeriod@1000000076 : Record 14000553;
      TempExcelBuffer@1000000075 : TEMPORARY Record 370;
      FilterString@1000000074 : Text[126];
      PeriodStartingDate@1000000073 : ARRAY [27] OF Date;
      PeriodLength@1000000072 : Code[20];
      LPORcvAmt@1000000071 : ARRAY [30] OF Decimal;
      EPORcvAmt@1000000070 : ARRAY [30] OF Decimal;
      LPORcvLine@1000000069 : ARRAY [30] OF Decimal;
      EPORcvLine@1000000068 : ARRAY [30] OF Decimal;
      LWhTrOAmt@1000000067 : ARRAY [30] OF Decimal;
      EWhTrOAmt@1000000066 : ARRAY [30] OF Decimal;
      LWhTrOLine@1000000065 : ARRAY [30] OF Decimal;
      EWhTrOLine@1000000064 : ARRAY [30] OF Decimal;
      LWhTrIAmt@1000000063 : ARRAY [30] OF Decimal;
      EWhTrIAmt@1000000062 : ARRAY [30] OF Decimal;
      LWhTrILine@1000000061 : ARRAY [30] OF Decimal;
      EWhTrILine@1000000060 : ARRAY [30] OF Decimal;
      LRGAAmt@1000000059 : ARRAY [30] OF Decimal;
      ERGAAmt@1000000058 : ARRAY [30] OF Decimal;
      LRGALine@1000000057 : ARRAY [30] OF Decimal;
      ERGALine@1000000056 : ARRAY [30] OF Decimal;
      LSOSptAmt@1000000055 : ARRAY [30] OF Decimal;
      ESOSptAmt@1000000054 : ARRAY [30] OF Decimal;
      LSOSptLine@1000000053 : ARRAY [30] OF Decimal;
      ESOSptLine@1000000052 : ARRAY [30] OF Decimal;
      LSOGPSptAmt@1000000051 : ARRAY [30] OF Decimal;
      ESOGPSptAmt@1000000050 : ARRAY [30] OF Decimal;
      LEmp@1000000049 : ARRAY [30] OF Decimal;
      EEmp@1000000048 : ARRAY [30] OF Decimal;
      LManHour@1000000047 : ARRAY [30] OF Decimal;
      EManHour@1000000046 : ARRAY [30] OF Decimal;
      LRHour@1000000045 : ARRAY [30] OF Decimal;
      LOHour@1000000044 : ARRAY [30] OF Decimal;
      ERHour@1000000043 : ARRAY [30] OF Decimal;
      EOHour@1000000042 : ARRAY [30] OF Decimal;
      LPayroll@1000000041 : ARRAY [30] OF Decimal;
      LRPayroll@1000000040 : ARRAY [30] OF Decimal;
      LOPayroll@1000000039 : ARRAY [30] OF Decimal;
      EPayroll@1000000038 : ARRAY [30] OF Decimal;
      ERPayroll@1000000037 : ARRAY [30] OF Decimal;
      EOPayroll@1000000036 : ARRAY [30] OF Decimal;
      LBenefit@1000000035 : ARRAY [30] OF Decimal;
      EBenefit@1000000034 : ARRAY [30] OF Decimal;
      Sqft@1000000092 : Decimal;
      LSqft@1000000033 : ARRAY [30] OF Decimal;
      ESqft@1000000032 : ARRAY [30] OF Decimal;
      LTCSqft@1000000031 : ARRAY [30] OF Decimal;
      ETCSqft@1000000030 : ARRAY [30] OF Decimal;
      LInsure@1000000029 : ARRAY [30] OF Decimal;
      EInsure@1000000028 : ARRAY [30] OF Decimal;
      LStFee@1000000027 : ARRAY [30] OF Decimal;
      EStFee@1000000026 : ARRAY [30] OF Decimal;
      LRent@1000000025 : ARRAY [30] OF Decimal;
      ERent@1000000024 : ARRAY [30] OF Decimal;
      LUtil@1000000023 : ARRAY [30] OF Decimal;
      EUtil@1000000022 : ARRAY [30] OF Decimal;
      LInventory@1000000021 : ARRAY [30] OF Decimal;
      EInventory@1000000020 : ARRAY [30] OF Decimal;
      LWC@1000000019 : ARRAY [30] OF Decimal;
      EWC@1000000018 : ARRAY [30] OF Decimal;
      LTWC@1000000017 : ARRAY [30] OF Decimal;
      ETWC@1000000016 : ARRAY [30] OF Decimal;
      i@1000000015 : Integer;
      Row@1000000014 : Integer;
      Window@1000000013 : Dialog;
      TotalRecNo@1000000012 : Integer;
      RecNo@1000000011 : Integer;
      ShowNY@1000000010 : Boolean;
      ShowJX@1000000009 : Boolean;
      ShowCA@1000000008 : Boolean;
      ShowEX@1000000007 : Boolean;
      ShowPA@1000000081 : Boolean;
      ShowNJ@1000000082 : Boolean;
      ShowALL@1000000006 : Boolean;
      lindex@1000000005 : Integer;
      eindex@1000000004 : Integer;
      aindex@1000000003 : Integer;
      LName@1000000002 : Text[30];
      EName@1000000001 : Text[30];
      NoMonth@1000000000 : Integer;
      Text000@1000000080 : TextConst 'ENU=DC Performance';
      ESOSpt@1000000087 : ARRAY [31] OF Decimal;
      LSOSpt@1000000085 : ARRAY [31] OF Decimal;
      LNOC@1000000103 : ARRAY [30] OF Decimal;
      ENOC@1000000102 : ARRAY [30] OF Decimal;
      LMTU@1000000101 : ARRAY [30] OF Decimal;
      EMTU@1000000100 : ARRAY [30] OF Decimal;
      LHOU@1000000089 : ARRAY [30] OF Decimal;
      EHOU@1000000088 : ARRAY [30] OF Decimal;

    LOCAL PROCEDURE EnterCell@2(RowNo@1000 : Integer;ColumnNo@1001 : Integer;CellValue@1002 : Text[250];Bold@1003 : Boolean;Italic@1004 : Boolean;UnderLine@1005 : Boolean);
    BEGIN
      TempExcelBuffer.INIT;
      TempExcelBuffer.VALIDATE("Row No.",RowNo);
      TempExcelBuffer.VALIDATE("Column No.",ColumnNo);
      TempExcelBuffer."Cell Value as Text" := CellValue;
      TempExcelBuffer.Formula := '';
      TempExcelBuffer.Bold := Bold;
      TempExcelBuffer.Italic := Italic;
      TempExcelBuffer.Underline := UnderLine;
      TempExcelBuffer.INSERT;
    END;

    PROCEDURE GetMonName@1000000000("Starting Date"@1000000000 : Date) MonName : Text[30];
    BEGIN
      CASE DATE2DMY("Starting Date",2) OF
        1: MonName := 'Jan, ' + FORMAT(DATE2DMY("Starting Date",3));
        2: MonName := 'Feb, ' + FORMAT(DATE2DMY("Starting Date",3));
        3: MonName := 'Mar, ' + FORMAT(DATE2DMY("Starting Date",3));
        4: MonName := 'Apr, ' + FORMAT(DATE2DMY("Starting Date",3));
        5: MonName := 'May, ' + FORMAT(DATE2DMY("Starting Date",3));
        6: MonName := 'June, ' + FORMAT(DATE2DMY("Starting Date",3));
        7: MonName := 'July, ' + FORMAT(DATE2DMY("Starting Date",3));
        8: MonName := 'Aug, ' + FORMAT(DATE2DMY("Starting Date",3));
        9: MonName := 'Sept, ' + FORMAT(DATE2DMY("Starting Date",3));
        10: MonName := 'Oct, ' + FORMAT(DATE2DMY("Starting Date",3));
        11: MonName := 'Nov, ' + FORMAT(DATE2DMY("Starting Date",3));
        12: MonName := 'Dec, ' + FORMAT(DATE2DMY("Starting Date",3));
      END;
    END;

    PROCEDURE LGatherData@1000000002(VAR LocInvPeriod@1000000000 : Record 14000553;i@1000000001 : Integer);
    BEGIN
      LPORcvAmt[i-1] := LocInvPeriod."LPurch. Rcv. Value";
      LPORcvLine[i-1] := LocInvPeriod."LPurch. Rcv. Lines";
      LWhTrOAmt[i-1] := LocInvPeriod."LValue Transfer Out";
      LWhTrOLine[i-1] := LocInvPeriod."LTransfer Out Lines";
      LWhTrIAmt[i-1] := LocInvPeriod."LValue Transfer In";
      LWhTrILine[i-1] := LocInvPeriod."LTransfer In Lines";
      LRGALine[i-1] := LocInvPeriod."LWhse. Rtn. Lines (Ext.)" + LocInvPeriod."LWhse. Rtn. Lines (Int.)";
      LRGAAmt[i-1] := LocInvPeriod."LWhse. Rtn. Sales (Ext.)" + LocInvPeriod."LWhse. Rtn. Sales (Int.)";
      LSOSptAmt[i-1] := LocInvPeriod."LWhse. Shpt. Sales (Ext.)" + LocInvPeriod."LWhse. Shpt. Sales (Int.)";
      LSOSptLine[i-1] := LocInvPeriod."LWhse. Shpt. Lines (Ext.)" + LocInvPeriod."LWhse. Shpt. Lines (Int.)";
      LSOSpt[i-1] := LLocInvPeriod."LSales Shipments (Int.)" + LLocInvPeriod."LSales Shipments (Ext.)";
      LSOGPSptAmt[i-1] := LSOSptAmt[i-1] - LocInvPeriod."LWhse. Shpt. Cost (Ext.)" - LocInvPeriod."LWhse. Shpt. Cost (Int.)";
      LEmp[i-1] := LocInvPeriod."LNo. of Employees";
      LManHour[i-1] := LocInvPeriod."LPeriod Total Payroll Hours" + LocInvPeriod."LPeriod Overtime Hours";
      LPayroll[i-1] := LocInvPeriod."LPeriod Total Payoll" + LocInvPeriod."LPeriod Overtime Payroll";
      LRHour[i-1] := LocInvPeriod."LPeriod Total Payroll Hours";
      LOHour[i-1] := LocInvPeriod."LPeriod Overtime Hours";
      LRPayroll[i-1] := LocInvPeriod."LPeriod Total Payoll";
      LOPayroll[i-1] := LocInvPeriod."LPeriod Overtime Payroll";
      LSqft[i-1] := LocInvPeriod."LAvailable Space";
      LTCSqft[i-1] := LocInvPeriod."LTotal Cost / Sqft";
      LInsure[i-1] := LocInvPeriod.LInsurance;
      LRent[i-1] := LocInvPeriod."LRent Plus Tax";
      LUtil[i-1] := LocInvPeriod.LUtilities;
      LStFee[i-1] := LocInvPeriod."LStorage Fee";
      LInventory[i-1] := LocInvPeriod."LEnd Inventory Value";
      LWC[i-1] := LocInvPeriod."LWarehouse Cost";
      LTWC[i-1] := LocInvPeriod."LTotal Warehouse Cost";
      LNOC[i-1]:=LocInvPeriod."LNumber of Containers";
      LHOU[i-1]:=LocInvPeriod."LHours to Unload Containers";
      LMTU[i-1]:=LocInvPeriod."LManpower to Unload";
      LBenefit[i-1] := LocInvPeriod."LHealth Ben Payroll Taxes";
      LPORcvAmt[lindex] := LPORcvAmt[lindex] + LPORcvAmt[i-1];
      LPORcvLine[lindex] := LPORcvLine[lindex] + LPORcvLine[i-1];
      LWhTrOAmt[lindex] := LWhTrOAmt[lindex] + LWhTrOAmt[i-1];
      LWhTrOLine[lindex] := LWhTrOLine[lindex] + LWhTrOLine[i-1];
      LWhTrIAmt[lindex] := LWhTrIAmt[lindex] + LWhTrIAmt[i-1];
      LWhTrILine[lindex] := LWhTrILine[lindex] + LWhTrILine[i-1];
      LRGALine[lindex] := LRGALine[lindex] +LRGALine[i-1];
      LRGAAmt[lindex] := LRGAAmt[lindex] + LRGAAmt[i-1];
      LSOSptAmt[lindex] := LSOSptAmt[lindex] + LSOSptAmt[i-1];
      LSOSptLine[lindex] := LSOSptLine[lindex] + LSOSptLine[i-1];
      LSOSpt[lindex] := LSOSpt[lindex] + LSOSpt[i-1];
      LSOGPSptAmt[lindex] := LSOGPSptAmt[lindex] + LSOGPSptAmt[i-1];
      LEmp[lindex] := LEmp[lindex] + LEmp[i-1];
      LManHour[lindex] := LManHour[lindex] + LManHour[i-1];
      LPayroll[lindex] := LPayroll[lindex] + LPayroll[i-1];
      LRHour[lindex] := LRHour[lindex] + LRHour[i-1];
      LOHour[lindex] := LOHour[lindex] + LOHour[i-1];
      LRPayroll[lindex] := LRPayroll[lindex] + LRPayroll[i-1];
      LOPayroll[lindex] := LOPayroll[lindex] + LOPayroll[i-1];
      LSqft[lindex] := LSqft[lindex] + LSqft[i-1];
      LTCSqft[lindex] := LTCSqft[lindex] + LTCSqft[i-1];
      LInsure[lindex] := LInsure[lindex] + LInsure[i-1];
      LStFee[lindex] := LStFee[lindex] + LStFee[i-1];
      LRent[lindex] := LRent[lindex] + LRent[i-1];
      LUtil[lindex] := LUtil[lindex] + LUtil[i-1];
      LInventory[lindex] := LInventory[lindex] + LInventory[i-1];
      LWC[lindex] := LWC[lindex] + LWC[i-1];
      LTWC[lindex] := LTWC[lindex] + LTWC[i-1];
      LNOC[lindex]:=LNOC[lindex]+LNOC[i-1];
      LHOU[lindex]:=LHOU[lindex]+LHOU[i-1];
      LMTU[lindex]:=LMTU[lindex]+LMTU[i-1];
      LBenefit[lindex] := LBenefit[lindex] + LBenefit[i-1];
      LPORcvAmt[aindex] := LPORcvAmt[aindex] + LPORcvAmt[i-1];
      LPORcvLine[aindex] := LPORcvLine[aindex] + LPORcvLine[i-1];
      LWhTrOAmt[aindex] := LWhTrOAmt[aindex] + LWhTrOAmt[i-1];
      LWhTrOLine[aindex] := LWhTrOLine[aindex] + LWhTrOLine[i-1];
      LWhTrIAmt[aindex] := LWhTrIAmt[aindex] + LWhTrIAmt[i-1];
      LWhTrILine[aindex] := LWhTrILine[aindex] + LWhTrILine[i-1];
      LRGALine[aindex] := LRGALine[aindex] + LRGALine[i-1];
      LRGAAmt[aindex] := LRGAAmt[aindex] + LRGAAmt[i-1];
      LSOSptAmt[aindex] := LSOSptAmt[aindex] + LSOSptAmt[i-1];
      LSOSptLine[aindex] := LSOSptLine[aindex] + LSOSptLine[i-1];
      LSOGPSptAmt[aindex] := LSOGPSptAmt[aindex] + LSOGPSptAmt[i-1];
      LEmp[aindex] := LEmp[aindex] + LEmp[i-1];
      LManHour[aindex] := LManHour[aindex] + LManHour[i-1];
      LPayroll[aindex] := LPayroll[aindex] + LPayroll[i-1];
      LRHour[aindex] := LRHour[aindex] + LRHour[i-1];
      LOHour[aindex] := LOHour[aindex] + LOHour[i-1];
      LRPayroll[aindex] := LRPayroll[aindex] + LRPayroll[i-1];
      LOPayroll[aindex] := LOPayroll[aindex] + LOPayroll[i-1];
      LSqft[aindex] := LSqft[aindex] + LSqft[i-1];
      LTCSqft[aindex] := LTCSqft[aindex] + LTCSqft[i-1];
      LInsure[aindex] := LInsure[aindex] + LInsure[i-1];
      LStFee[aindex] := LStFee[aindex] + LStFee[i-1];
      LRent[aindex] := LRent[aindex] + LRent[i-1];
      LUtil[aindex] := LUtil[aindex] + LUtil[i-1];
      LInventory[aindex] := LInventory[aindex] + LInventory[i-1];
      LWC[aindex] := LWC[aindex] + LWC[i-1];
      LTWC[aindex] := LTWC[aindex] + LTWC[i-1];
      LNOC[aindex]:= LNOC[aindex]+LNOC[i-1];
      LHOU[aindex]:=LHOU[aindex]+LHOU[i-1];
      LMTU[aindex]:=LMTU[aindex]+LMTU[i-1];
      LBenefit[aindex] := LBenefit[aindex] + LBenefit[i-1];
    END;

    PROCEDURE EGatherData@1000000003(VAR ELocInvPeriod@1000000000 : Record 14000553;i@1000000001 : Integer);
    BEGIN

      EPORcvAmt[i-1] := ELocInvPeriod."EPurch. Rcv. Value";
      EPORcvLine[i-1] := ELocInvPeriod."EPurch. Rcv. Lines";
      EWhTrOAmt[i-1] := ELocInvPeriod."EValue Transfer Out";
      EWhTrOLine[i-1] := ELocInvPeriod."ETransfer Out Lines";
      EWhTrIAmt[i-1] := ELocInvPeriod."EValue Transfer In";
      EWhTrILine[i-1] := ELocInvPeriod."ETransfer In Lines";
      ERGALine[i-1] := ELocInvPeriod."EWhse. Rtn. Lines (Ext.)" + ELocInvPeriod."EWhse. Rtn. Lines (Int.)";
      ERGAAmt[i-1] := ELocInvPeriod."EWhse. Rtn. Sales (Ext.)" + ELocInvPeriod."EWhse. Rtn. Sales (Int.)";
      ESOSptAmt[i-1] := ELocInvPeriod."EWhse. Shpt. Sales (Ext.)" + ELocInvPeriod."EWhse. Shpt. Sales (Int.)";
      ESOSptLine[i-1] := ELocInvPeriod."EWhse. Shpt. Lines (Ext.)" + ELocInvPeriod."EWhse. Shpt. Lines (Int.)";
      ESOSpt[i-1] := ELocInvPeriod."ESales Shipments (Int.)" + ELocInvPeriod."ESales Shipments (Ext.)";
      ESOGPSptAmt[i-1] := ESOSptAmt[i-1] - ELocInvPeriod."EWhse. Shpt. Cost (Ext.)" - ELocInvPeriod."EWhse. Shpt. Cost (Int.)";
      EEmp[i-1] := ELocInvPeriod."ENo. of Employees";
      EManHour[i-1] := ELocInvPeriod."EPeriod Total Payroll Hours" + ELocInvPeriod."EPeriod Overtime Hours";
      EPayroll[i-1] := ELocInvPeriod."EPeriod Total Payoll" + ELocInvPeriod."EPeriod Overtime Payroll";
      ERHour[i-1] := ELocInvPeriod."EPeriod Total Payroll Hours";
      EOHour[i-1] := ELocInvPeriod."EPeriod Overtime Hours";
      ERPayroll[i-1] := ELocInvPeriod."EPeriod Total Payoll";
      EOPayroll[i-1] := ELocInvPeriod."EPeriod Overtime Payroll";
      ESqft[i-1] := ELocInvPeriod."EAvailable Space";
      ETCSqft[i-1] := ELocInvPeriod."ETotal Cost / Sqft";
      EInsure[i-1] := ELocInvPeriod.EInsurance;
      ERent[i-1] := ELocInvPeriod."ERent Plus Tax";
      EUtil[i-1] := ELocInvPeriod.EUtilities;
      EStFee[i-1] := ELocInvPeriod."EStorage Fee";
      EInventory[i-1] := ELocInvPeriod."EEnd Inventory Value";
      EWC[i-1] := ELocInvPeriod."EWarehouse Cost";
      ETWC[i-1] := ELocInvPeriod."ETotal Warehouse Cost";
      EMTU[i-1]:=ELocInvPeriod."EManpower to Unload";
      EHOU[i-1]:=ELocInvPeriod."EHours to Unload Containers";
      ENOC[i-1]:=ELocInvPeriod."ENumber of Containers";
      EBenefit[i-1] := ELocInvPeriod."EHealth Ben Payroll Taxes";
      EPORcvAmt[eindex] := EPORcvAmt[eindex] + EPORcvAmt[i-1];
      EPORcvLine[eindex] := EPORcvLine[eindex] + EPORcvLine[i-1];
      EWhTrOAmt[eindex] := EWhTrOAmt[eindex] + EWhTrOAmt[i-1];
      EWhTrOLine[eindex] := EWhTrOLine[eindex] + EWhTrOLine[i-1];
      EWhTrIAmt[eindex] := EWhTrIAmt[eindex] + EWhTrIAmt[i-1];   //EB
      EWhTrILine[eindex] := EWhTrILine[eindex] + EWhTrILine[i-1];
      ERGALine[eindex] := ERGALine[eindex] + ERGALine[i-1];
      ERGAAmt[eindex] := ERGAAmt[eindex] + ERGAAmt[i-1];
      ESOSptAmt[eindex] := ESOSptAmt[eindex] + ESOSptAmt[i-1];
      ESOSptLine[eindex] := ESOSptLine[eindex] + ESOSptLine[i-1];
      ESOSpt[eindex] := ESOSpt[eindex] + ESOSpt[i-1];
      ESOGPSptAmt[eindex] := ESOGPSptAmt[eindex] + ESOGPSptAmt[i-1];
      EEmp[eindex] := EEmp[eindex] + EEmp[i-1];
      EManHour[eindex] := EManHour[eindex] + EManHour[i-1];
      EPayroll[eindex] := EPayroll[eindex] + EPayroll[i-1];
      ERHour[eindex] := ERHour[eindex] + ERHour[i-1];
      EOHour[eindex] := EOHour[eindex] + EOHour[i-1];
      ERPayroll[eindex] := ERPayroll[eindex] + ERPayroll[i-1];
      EOPayroll[eindex] := EOPayroll[eindex] + EOPayroll[i-1];
      ESqft[eindex] := ESqft[eindex] + ESqft[i-1];
      ETCSqft[eindex] := ETCSqft[eindex] + ETCSqft[i-1];
      EInsure[eindex] := EInsure[eindex] + EInsure[i-1];
      EStFee[eindex] :=EStFee[eindex] + EStFee[i-1];
      ERent[eindex] := ERent[eindex] + ERent[i-1];
      EUtil[eindex] := EUtil[eindex] + EUtil[i-1];
      EInventory[eindex] := EInventory[eindex] + EInventory[i-1];
      EWC[eindex] := EWC[eindex] + EWC[i-1];
      ETWC[eindex] := ETWC[eindex] + ETWC[i-1];
      ENOC[eindex]:=ENOC[eindex]+ENOC[i-1];
      EMTU[aindex]:=EMTU[aindex]+EMTU[i-1];
      EHOU[aindex]:=EHOU[aindex]+EHOU[i-1];
      EBenefit[eindex] := EBenefit[eindex] + EBenefit[i-1];

      EPORcvAmt[aindex] := EPORcvAmt[aindex] + EPORcvAmt[i-1];
      EPORcvLine[aindex] := EPORcvLine[aindex] + EPORcvLine[i-1];
      EWhTrOAmt[aindex] := EWhTrOAmt[aindex] + EWhTrOAmt[i-1];
      EWhTrOLine[aindex] := EWhTrOLine[aindex] + EWhTrOLine[i-1];
      EWhTrIAmt[aindex] := EWhTrIAmt[aindex] + EWhTrIAmt[i-1];  //EB
      EWhTrILine[aindex] := EWhTrILine[aindex] + EWhTrILine[i-1];
      ERGALine[aindex] := ERGALine[aindex] + ERGALine[i-1];
      ERGAAmt[aindex] := ERGAAmt[aindex] + ERGAAmt[i-1];
      ESOSptAmt[aindex] := ESOSptAmt[aindex] + ESOSptAmt[i-1];
      ESOSptLine[aindex] := ESOSptLine[aindex] + ESOSptLine[i-1];
      ESOGPSptAmt[aindex] := ESOGPSptAmt[aindex] + ESOGPSptAmt[i-1];
      EEmp[aindex] := EEmp[aindex] + EEmp[i-1];
      EManHour[aindex] := EManHour[aindex] + EManHour[i-1];
      EPayroll[aindex] := EPayroll[aindex] + EPayroll[i-1];
      ERHour[aindex] := ERHour[aindex] + ERHour[i-1];
      EOHour[aindex] := EOHour[aindex] + EOHour[i-1];
      ERPayroll[aindex] := ERPayroll[aindex] + ERPayroll[i-1];
      EOPayroll[aindex] := EOPayroll[aindex] + EOPayroll[i-1];
      ESqft[aindex] := ESqft[aindex] + ESqft[i-1];
      ETCSqft[aindex] := ETCSqft[aindex] + ETCSqft[i-1];
      EInsure[aindex] := EInsure[aindex] + EInsure[i-1];
      EStFee[aindex] := EStFee[aindex] + EStFee[i-1];
      ERent[aindex] := ERent[aindex] + ERent[i-1];
      EUtil[aindex] := EUtil[aindex] + EUtil[i-1];
      EInventory[aindex] := EInventory[aindex] + EInventory[i-1];
      EWC[aindex] := EWC[aindex] + EWC[i-1];
      ETWC[aindex] := ETWC[aindex] + ETWC[i-1];
      ENOC[aindex] :=ENOC[aindex]+ENOC[i-1];
      EMTU[aindex]:=EMTU[aindex]+EMTU[i-1];
      EHOU[aindex]:=EHOU[aindex]+EHOU[i-1];
      EBenefit[aindex] := EBenefit[aindex] + EBenefit[i-1];
    END;

    PROCEDURE LCategoryName@1000000001(Row@1000000000 : Integer;Name@1000000001 : Text[30]);
    BEGIN

      EnterCell(Row,1,Name,TRUE,FALSE,FALSE);
      EnterCell(Row+1,1,'Production:',TRUE,FALSE,TRUE);
      EnterCell(Row+2,1,'$Value Receipts - PO',FALSE,FALSE,FALSE);
      EnterCell(Row+3,1,'$Value Receipts - Transfer',FALSE,FALSE,FALSE);
      EnterCell(Row+4,1,'Line Item Received - PO',FALSE,FALSE,FALSE);
      EnterCell(Row+5,1,'Line Item Received - Transfer',FALSE,FALSE,FALSE);
      EnterCell(Row+6,1,'Line Item Received - RGA',FALSE,FALSE,FALSE);
      EnterCell(Row+7,1,'$Sales Shipped',FALSE,FALSE,FALSE);
      EnterCell(Row+8,1,'$Cost Shipped - Transfer',FALSE,FALSE,FALSE);
      EnterCell(Row+9,1,'$GP Sales Shipped',FALSE,FALSE,FALSE);
      EnterCell(Row+10,1,'$RGA Returned',FALSE,FALSE,FALSE);
      EnterCell(Row+11,1,'Line Item Shipped',FALSE,FALSE,FALSE);
      EnterCell(Row+12,1,'Line Item Shipped - Transfer',FALSE,FALSE,FALSE);
      EnterCell(Row+13,1,'Total Transactions',FALSE,FALSE,FALSE);
      EnterCell(Row+14,1,'Number of Sales Order Shipped',FALSE,FALSE,FALSE);
      EnterCell(Row+15,1,'Labor:',TRUE,FALSE,TRUE);
      EnterCell(Row+16,1,'# Warehouse Employees',FALSE,FALSE,FALSE);
      EnterCell(Row+17,1,'Regular Hours',FALSE,FALSE,FALSE);
      EnterCell(Row+18,1,'OT Hours',FALSE,FALSE,FALSE);
      EnterCell(Row+19,1,'Total Man Hours (Reg & OT)',FALSE,FALSE,FALSE);
      EnterCell(Row+20,1,'Regular Gross Payroll',FALSE,FALSE,FALSE);
      EnterCell(Row+21,1,'OT Gross Payroll',FALSE,FALSE,FALSE);
      EnterCell(Row+22,1,'Total Gross Payroll (Reg & OT)',FALSE,FALSE,FALSE);
      EnterCell(Row+23,1,'Expenses and Misc:',TRUE,FALSE,TRUE);
      EnterCell(Row+24,1,'Sqft',FALSE,FALSE,FALSE);
      EnterCell(Row+25,1,'Price/Sqft (Base, Taxes, CAM)',FALSE,FALSE,FALSE);
      EnterCell(Row+26,1,'Health, Benefits, Payroll Taxes',FALSE,FALSE,FALSE);
      EnterCell(Row+27,1,'Insurances (Property and Workers Comp)',FALSE,FALSE,FALSE);
      EnterCell(Row+28,1,'Monthly Rent plus Tax',FALSE,FALSE,FALSE);
      EnterCell(Row+29,1,'Monthly Utilities',FALSE,FALSE,FALSE);
      EnterCell(Row+30,1,'Storage Fees (ie. Containers)',FALSE,FALSE,FALSE);
      EnterCell(Row+31,1,'Month End Inventory Value',FALSE,FALSE,FALSE);
      EnterCell(Row+32,1,'Warehouse Cost (Rent, Insurances, Storage, Util)',FALSE,FALSE,FALSE);
      EnterCell(Row+33,1,'Total Warehouse Cost (WC + Total Payroll)',FALSE,FALSE,FALSE);
      //>>TOP4988
      EnterCell(Row+34,1,'Number of Containers (Monthly accumulation)',FALSE,FALSE,FALSE);
      EnterCell(Row+35,1,'Manpower to Unload(Number of EE)',FALSE,FALSE,FALSE);
      EnterCell(Row+36,1,'Hours to Unload Containers',FALSE,FALSE,FALSE);
      //<<TOP4988
      EnterCell(Row+37,1,'Metrics',TRUE,FALSE,FALSE);
      EnterCell(Row+38,1,'Total Line Rcvd/# Employees',FALSE,FALSE,FALSE);
      EnterCell(Row+39,1,'Total Line Rcvd/Total Man Hours',FALSE,FALSE,FALSE);
      EnterCell(Row+40,1,'Total Payroll/Total Line Rcvd',FALSE,FALSE,FALSE);
      EnterCell(Row+41,1,'Total Line Rcvd/Sq. Ft',FALSE,FALSE,FALSE);
      EnterCell(Row+42,1,'Total Line Ship/# Employee',FALSE,FALSE,FALSE);
      EnterCell(Row+43,1,'Total Line Ship/Total Man Hours',FALSE,FALSE,FALSE);
      EnterCell(Row+44,1,'Total Payroll/Total Line Ship',FALSE,FALSE,FALSE);
      EnterCell(Row+45,1,'Total Orders/# Employees',FALSE,FALSE,FALSE);
      EnterCell(Row+46,1,'Total Transactions/# Employees',FALSE,FALSE,FALSE);
      EnterCell(Row+47,1,'Total Transcations/Total Man Hours',FALSE,FALSE,FALSE);
      EnterCell(Row+48,1,'Total Line Ship/Sq. Ft',FALSE,FALSE,FALSE);
      EnterCell(Row+49,1,'Total $Sales/# Employee',FALSE,FALSE,FALSE);
      EnterCell(Row+50,1,'Total $Sales/Total Man Hours',FALSE,FALSE,FALSE);
      EnterCell(Row+51,1,'Total Payroll/Total $Sales',FALSE,FALSE,FALSE);
      EnterCell(Row+52,1,'Total Payroll/Total $Transaction Value',FALSE,FALSE,FALSE);
      EnterCell(Row+53,1,'Total Payroll/Total Transactions',FALSE,FALSE,FALSE);
      EnterCell(Row+54,1,'KPIs:',TRUE,FALSE,FALSE);
      EnterCell(Row+55,1,'Total Warehouse Cost/Order',FALSE,FALSE,FALSE);
      EnterCell(Row+56,1,'Warehouse cost/Line Ship',FALSE,FALSE,FALSE);
      EnterCell(Row+57,1,'Total Warehouse cost/Line Ship',FALSE,FALSE,FALSE);
      EnterCell(Row+58,1,'Warehouse cost/Total Transactions',FALSE,FALSE,FALSE);
      EnterCell(Row+59,1,'Total Warehouse cost/Total Transactions',FALSE,FALSE,FALSE);
      EnterCell(Row+60,1,'Total $GP Shipped less Total Warehouse Cost',FALSE,FALSE,FALSE);
      EnterCell(Row+61,1,'$Inventory/sq ft',FALSE,FALSE,FALSE);
      EnterCell(Row+62,1,'Total Warehouse Cost/Total $Sales',FALSE,FALSE,FALSE);
      EnterCell(Row+63,1,'Total Warehouse Cost/Total $Shippings (w/Transfer)',FALSE,FALSE,FALSE);
      EnterCell(Row+64,1,'Total Warehouse Cost/Total $Transactions (Ship & Receive)',FALSE,FALSE,FALSE);
      EnterCell(Row+65,1,'Warehouse Cost/Sqft',FALSE,FALSE,FALSE);
      EnterCell(Row+66,1,'Total Warehouse Cost/Sqft',FALSE,FALSE,FALSE);
      EnterCell(Row+67,1,'Total Orders/Sqft',FALSE,FALSE,FALSE);
      EnterCell(Row+68,1,'Total Transactions/Sqft',FALSE,FALSE,FALSE);
      EnterCell(Row+69,1,'Total $Sales/Sq. Ft',FALSE,FALSE,FALSE);
      EnterCell(Row+70,1,'$AvgValue/Line Item Shipped',FALSE,FALSE,FALSE);
      EnterCell(Row+71,1,'$AvgPayroll/Employee',FALSE,FALSE,FALSE);
      EnterCell(Row+72,1,'$RGA/$Sales Shipped',FALSE,FALSE,FALSE);
      EnterCell(Row+73,1,'RGA Lines/Line Item Shipped',FALSE,FALSE,FALSE);
    END;

    PROCEDURE LCategoryData@1000000004(Row@1000000000 : Integer;i@1000000001 : Integer;j@1000000002 : Integer;divd@1000000003 : Integer;Half@1000000004 : Boolean);
    BEGIN

      EnterCell(Row+2,i+1,FORMAT(ROUND(LPORcvAmt[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+3,i+1,FORMAT(ROUND(LWhTrIAmt[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+4,i+1,FORMAT(ROUND(LPORcvLine[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+5,i+1,FORMAT(ROUND(LWhTrILine[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+6,i+1,FORMAT(ROUND(LRGALine[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+7,i+1,FORMAT(ROUND(LSOSptAmt[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+8,i+1,FORMAT(ROUND(LWhTrOAmt[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+9,i+1,FORMAT(ROUND(LSOGPSptAmt[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+10,i+1,FORMAT(ROUND(LRGAAmt[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+11,i+1,FORMAT(ROUND(LSOSptLine[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+12,i+1,FORMAT(ROUND(LWhTrOLine[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+13,i+1,FORMAT(ROUND((LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]+
                                        LSOSptLine[j]+LWhTrOLine[j])/divd,0.01)),FALSE,FALSE,FALSE);

      EnterCell(Row+14,i+1,FORMAT(ROUND(LSOSpt[j],1)),FALSE,FALSE,FALSE);

      EnterCell(Row+16,i+1,FORMAT(ROUND(LEmp[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+17,i+1,FORMAT(ROUND(LRHour[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+18,i+1,FORMAT(ROUND(LOHour[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+19,i+1,FORMAT(ROUND(LManHour[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+20,i+1,FORMAT(ROUND(LRPayroll[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+21,i+1,FORMAT(ROUND(LOPayroll[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+22,i+1,FORMAT(ROUND(LPayroll[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+24,i+1,FORMAT(ROUND(LSqft[j]/divd,0.01)),FALSE,FALSE,FALSE);
      IF Half THEN EnterCell(Row+25,i+1,FORMAT(ROUND(LTCSqft[j]/divd/2,0.01)),FALSE,FALSE,FALSE)
      ELSE EnterCell(Row+25,i+1,FORMAT(ROUND(LTCSqft[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+26,i+1,FORMAT(ROUND(LBenefit[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+27,i+1,FORMAT(ROUND(LInsure[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+28,i+1,FORMAT(ROUND(LRent[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+29,i+1,FORMAT(ROUND(LUtil[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+30,i+1,FORMAT(ROUND(LStFee[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+31,i+1,FORMAT(ROUND(LInventory[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+32,i+1,FORMAT(ROUND(LWC[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+33,i+1,FORMAT(ROUND(LTWC[j]/divd,0.01)),FALSE,FALSE,FALSE);


      //>>TOP4988
      EnterCell(Row+34,i+1,FORMAT(ROUND(LNOC[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+35,i+1,FORMAT(ROUND(LMTU[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+36,i+1,FORMAT(ROUND(LHOU[j]/divd,0.01)),FALSE,FALSE,FALSE);
      //>>TOP4988 + 3

      IF LEmp[j] <> 0 THEN BEGIN

        EnterCell(Row+38,i+1,FORMAT(ROUND((LPORcvLine[j]+LWhTrILine[j]+LRGALine[j])/LEmp[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+42,i+1,FORMAT(ROUND((LSOSptLine[j]+LWhTrOLine[j])/LEmp[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+45,i+1,FORMAT(ROUND(LSOSpt[j]/LEmp[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+46,i+1,FORMAT(ROUND((LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]+
                                           LSOSptLine[j]+LWhTrOLine[j])/LEmp[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+47,i+1,FORMAT(ROUND((LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]+
                                           LSOSptLine[j]+LWhTrOLine[j])/LManHour[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+49,i+1,FORMAT(ROUND((LSOSptAmt[j]+LWhTrOAmt[j])/LEmp[j],0.01)),FALSE,FALSE,FALSE);

      END;
      IF LManHour[j] <> 0 THEN BEGIN

        EnterCell(Row+39,i+1,FORMAT(ROUND((LPORcvLine[j]+LWhTrILine[j]+LRGALine[j])/LManHour[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+43,i+1,FORMAT(ROUND((LSOSptLine[j]+LWhTrOLine[j])/LManHour[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+50,i+1,FORMAT(ROUND((LSOSptAmt[j]+LWhTrOAmt[j])/LManHour[j],0.01)),FALSE,FALSE,FALSE);

      END;
      IF (LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]) <> 0 THEN
        EnterCell(Row+40,i+1,FORMAT(ROUND(LPayroll[j]/(LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]),0.01)),FALSE,FALSE,FALSE);
      IF (LSOSptLine[j]+LWhTrOLine[j]) <> 0 THEN
        EnterCell(Row+44,i+1,FORMAT(ROUND(LPayroll[j]/(LSOSptLine[j]+LWhTrOLine[j]),0.01)),FALSE,FALSE,FALSE);
      IF (LSOSptAmt[j]+LWhTrOAmt[j]) <> 0 THEN BEGIN
        EnterCell(Row+51,i+1,FORMAT(ROUND((100*LPayroll[j])/(LSOSptAmt[j]+LWhTrOAmt[j]),0.01))+'%',FALSE,FALSE,FALSE);
        EnterCell(Row+52,i+1,FORMAT(ROUND((100*LPayroll[j])/(LPORcvAmt[j]+LWhTrIAmt[j]+LRGAAmt[j]+
                                           LSOSptAmt[j]+LWhTrOAmt[j]),0.01))+'%',FALSE,FALSE,FALSE);
        EnterCell(Row+53,i+1,FORMAT(ROUND(LPayroll[j]/(LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]+
                                          LSOSptLine[j]+LWhTrOLine[j]),0.01)),FALSE,FALSE,FALSE);
      END;
      IF LSqft[j] <> 0 THEN BEGIN

        EnterCell(Row+41,i+1,FORMAT(ROUND((LPORcvLine[j]+LWhTrILine[j]+LRGALine[j])/LSqft[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+48,i+1,FORMAT(ROUND((LSOSptLine[j]+LWhTrOLine[j])/LSqft[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+67,i+1,FORMAT(ROUND(LSOSpt[j]/LSqft[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+68,i+1,FORMAT(ROUND((LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]+
                                           LSOSptLine[j]+LWhTrOLine[j])/LSqft[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+69,i+1,FORMAT(ROUND((LSOSptAmt[j]+LWhTrOAmt[j])/LSqft[j],0.01)),FALSE,FALSE,FALSE);

      END;

      IF LSOSpt[j] <> 0 THEN
        EnterCell(Row+55,i+1,FORMAT(ROUND(LTWC[j]/LSOSpt[j],0.01)),FALSE,FALSE,FALSE);

      IF LSOSptLine[j] <> 0 THEN BEGIN
        EnterCell(Row+56,i+1,FORMAT(ROUND(LWC[j]/LSOSptLine[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+57,i+1,FORMAT(ROUND(LTWC[j]/LSOSptLine[j],0.01)),FALSE,FALSE,FALSE);
      END;
      IF (LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]+LSOSptLine[j]+LWhTrOLine[j]) <> 0 THEN BEGIN
        EnterCell(Row+58,i+1,FORMAT(ROUND(LWC[j]/(LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]+
                                                 LSOSptLine[j]+LWhTrOLine[j]),0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+59,i+1,FORMAT(ROUND(LTWC[j]/(LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]+
                                                 LSOSptLine[j]+LWhTrOLine[j]),0.01)),FALSE,FALSE,FALSE);
      END;
      EnterCell(Row+60,i+1,FORMAT(ROUND((LSOGPSptAmt[j]-LTWC[j])/divd,0.01)),FALSE,FALSE,FALSE);
      IF LSqft[j] <> 0 THEN BEGIN
        EnterCell(Row+61,i+1,FORMAT(ROUND(LInventory[j]/LSqft[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+65,i+1,'$'+FORMAT(ROUND((12*LWC[j])/LSqft[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+66,i+1,'$'+FORMAT(ROUND((12*LTWC[j])/LSqft[j],0.01)),FALSE,FALSE,FALSE);
      END;
      IF LSOSptAmt[j] <> 0 THEN BEGIN
        EnterCell(Row+62,i+1,FORMAT(ROUND((100*LTWC[j])/LSOSptAmt[j],0.01))+'%',FALSE,FALSE,FALSE);
        EnterCell(Row+63,i+1,FORMAT(ROUND((100*LTWC[j])/(LSOSptAmt[j]+LWhTrOAmt[j]),0.01))+'%',FALSE,FALSE,FALSE);
        EnterCell(Row+64,i+1,FORMAT(ROUND((100*LTWC[j])/(LPORcvAmt[j]+LWhTrIAmt[j]+LRGAAmt[j]+
                                           LSOSptAmt[j]+LWhTrOAmt[j]),0.01))+'%',FALSE,FALSE,FALSE);
        EnterCell(Row+72,i+1,FORMAT(ROUND(LRGAAmt[j]/LSOSptAmt[j],0.01)),FALSE,FALSE,FALSE);
      END;
      IF LSOSptLine[j] <> 0 THEN BEGIN
        EnterCell(Row+70,i+1,FORMAT(ROUND(LSOSptAmt[j]/LSOSptLine[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+73,i+1,FORMAT(ROUND(LRGALine[j]/LSOSptLine[j],0.01)),FALSE,FALSE,FALSE);
      END;
      IF LEmp[j] <> 0 THEN
        EnterCell(Row+71,i+1,FORMAT(ROUND(LPayroll[j]/LEmp[j],0.01)),FALSE,FALSE,FALSE);
    END;

    PROCEDURE ECategoryData@1000000005(Row@1000000000 : Integer;i@1000000001 : Integer;j@1000000002 : Integer;divd@1000000004 : Integer;Half@1000000003 : Boolean);
    BEGIN
      EnterCell(Row+2,i+1,FORMAT(ROUND(EPORcvAmt[j],1)),FALSE,FALSE,FALSE);
      EnterCell(Row+3,i+1,FORMAT(ROUND(EWhTrIAmt[j],1)),FALSE,FALSE,FALSE);
      EnterCell(Row+4,i+1,FORMAT(ROUND(EPORcvLine[j],1)),FALSE,FALSE,FALSE);
      EnterCell(Row+5,i+1,FORMAT(ROUND(EWhTrILine[j],1)),FALSE,FALSE,FALSE);
      EnterCell(Row+6,i+1,FORMAT(ROUND(ERGALine[j],1)),FALSE,FALSE,FALSE);
      EnterCell(Row+7,i+1,FORMAT(ROUND(ESOSptAmt[j],1)),FALSE,FALSE,FALSE);
      EnterCell(Row+8,i+1,FORMAT(ROUND(EWhTrOAmt[j],1)),FALSE,FALSE,FALSE);
      EnterCell(Row+9,i+1,FORMAT(ROUND(ESOGPSptAmt[j],1)),FALSE,FALSE,FALSE);
      EnterCell(Row+10,i+1,FORMAT(ROUND(ERGAAmt[j],1)),FALSE,FALSE,FALSE);
      EnterCell(Row+11,i+1,FORMAT(ROUND(ESOSptLine[j],1)),FALSE,FALSE,FALSE);
      EnterCell(Row+12,i+1,FORMAT(ROUND(EWhTrOLine[j],1)),FALSE,FALSE,FALSE);
      EnterCell(Row+13,i+1,FORMAT(ROUND((EPORcvLine[j]+EWhTrILine[j]+ERGALine[j]+
                                        ESOSptLine[j]+EWhTrOLine[j]),0.01)),FALSE,FALSE,FALSE);

      EnterCell(Row+14,i+1,FORMAT(ROUND(ESOSpt[j],1)),FALSE,FALSE,FALSE);

      EnterCell(Row+16,i+1,FORMAT(ROUND(EEmp[j],0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+17,i+1,FORMAT(ROUND(ERHour[j],0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+18,i+1,FORMAT(ROUND(EOHour[j],0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+19,i+1,FORMAT(ROUND(EManHour[j],0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+20,i+1,FORMAT(ROUND(ERPayroll[j],0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+21,i+1,FORMAT(ROUND(EOPayroll[j],0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+22,i+1,FORMAT(ROUND(EPayroll[j],0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+24,i+1,FORMAT(ROUND(ESqft[j],0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+25,i+1,FORMAT(ROUND(ETCSqft[j],0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+26,i+1,FORMAT(ROUND(EBenefit[j],0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+27,i+1,FORMAT(ROUND(EInsure[j],0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+28,i+1,FORMAT(ROUND(ERent[j],0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+29,i+1,FORMAT(ROUND(EUtil[j],0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+30,i+1,FORMAT(ROUND(EStFee[j],0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+31,i+1,FORMAT(ROUND(EInventory[j],1)),FALSE,FALSE,FALSE);
      EnterCell(Row+32,i+1,FORMAT(ROUND(EWC[j],0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+33,i+1,FORMAT(ROUND(ETWC[j],0.01)),FALSE,FALSE,FALSE);

       //Addon

      //>>TOP4988
      EnterCell(Row+34,i+1,FORMAT(ROUND(ENOC[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+35,i+1,FORMAT(ROUND(EMTU[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+36,i+1,FORMAT(ROUND(EHOU[j]/divd,0.01)),FALSE,FALSE,FALSE);
      //>>TOP4988 + 3

      IF EEmp[j] <> 0 THEN BEGIN

        EnterCell(Row+38,i+1,FORMAT(ROUND((EPORcvLine[j]+EWhTrILine[j]+ERGALine[j])/EEmp[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+42,i+1,FORMAT(ROUND((ESOSptLine[j]+EWhTrOLine[j])/EEmp[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+45,i+1,FORMAT(ROUND(ESOSpt[j]/EEmp[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+46,i+1,FORMAT(ROUND((EPORcvLine[j]+EWhTrILine[j]+ERGALine[j]+
                                           ESOSptLine[j]+EWhTrOLine[j])/EEmp[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+47,i+1,FORMAT(ROUND((EPORcvLine[j]+EWhTrILine[j]+ERGALine[j]+
                                           ESOSptLine[j]+EWhTrOLine[j])/EManHour[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+49,i+1,FORMAT(ROUND((ESOSptAmt[j]+EWhTrOAmt[j])/EEmp[j],0.01)),FALSE,FALSE,FALSE);

      END;
      IF EManHour[j] <> 0 THEN BEGIN

        EnterCell(Row+39,i+1,FORMAT(ROUND((EPORcvLine[j]+EWhTrILine[j]+ERGALine[j])/EManHour[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+43,i+1,FORMAT(ROUND((ESOSptLine[j]+EWhTrOLine[j])/EManHour[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+50,i+1,FORMAT(ROUND((ESOSptAmt[j]+EWhTrOAmt[j])/EManHour[j],0.01)),FALSE,FALSE,FALSE);

      END;
      IF (EPORcvLine[j]+EWhTrILine[j]+ERGALine[j]) <> 0 THEN
        EnterCell(Row+40,i+1,FORMAT(ROUND(EPayroll[j]/(EPORcvLine[j]+EWhTrILine[j]+ERGALine[j]),0.01)),FALSE,FALSE,FALSE);
      IF (ESOSptLine[j]+EWhTrOLine[j]) <> 0 THEN
        EnterCell(Row+44,i+1,FORMAT(ROUND(EPayroll[j]/(ESOSptLine[j]+EWhTrOLine[j]),0.01)),FALSE,FALSE,FALSE);
      IF (ESOSptAmt[j]+EWhTrOAmt[j]) <> 0 THEN BEGIN
        EnterCell(Row+51,i+1,FORMAT(ROUND((100*EPayroll[j])/(ESOSptAmt[j]+EWhTrOAmt[j]),0.01))+'%',FALSE,FALSE,FALSE);
        EnterCell(Row+52,i+1,FORMAT(ROUND((100*EPayroll[j])/(EPORcvAmt[j]+EWhTrIAmt[j]+ERGAAmt[j]+
                                           ESOSptAmt[j]+EWhTrOAmt[j]),0.01))+'%',FALSE,FALSE,FALSE);
        EnterCell(Row+53,i+1,FORMAT(ROUND(EPayroll[j]/(EPORcvLine[j]+EWhTrILine[j]+ERGALine[j]+
                                          ESOSptLine[j]+EWhTrOLine[j]),0.01)),FALSE,FALSE,FALSE);
      END;
      IF ESqft[j] <> 0 THEN BEGIN

        EnterCell(Row+41,i+1,FORMAT(ROUND((EPORcvLine[j]+EWhTrILine[j]+ERGALine[j])/ESqft[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+48,i+1,FORMAT(ROUND((ESOSptLine[j]+EWhTrOLine[j])/ESqft[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+67,i+1,FORMAT(ROUND(ESOSpt[j]/ESqft[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+68,i+1,FORMAT(ROUND((EPORcvLine[j]+EWhTrILine[j]+ERGALine[j]+
                                           ESOSptLine[j]+EWhTrOLine[j])/ESqft[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+69,i+1,FORMAT(ROUND((ESOSptAmt[j]+EWhTrOAmt[j])/ESqft[j],0.01)),FALSE,FALSE,FALSE);

      END;

      IF ESOSpt[j] <> 0 THEN
        EnterCell(Row+55,i+1,FORMAT(ROUND(ETWC[j]/ESOSpt[j],0.01)),FALSE,FALSE,FALSE);

      IF ESOSptLine[j] <> 0 THEN BEGIN
        EnterCell(Row+56,i+1,FORMAT(ROUND(EWC[j]/ESOSptLine[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+57,i+1,FORMAT(ROUND(ETWC[j]/ESOSptLine[j],0.01)),FALSE,FALSE,FALSE);
      END;
      IF (EPORcvLine[j]+EWhTrILine[j]+ERGALine[j]+ESOSptLine[j]+EWhTrOLine[j]) <> 0 THEN BEGIN
        EnterCell(Row+58,i+1,FORMAT(ROUND(EWC[j]/(EPORcvLine[j]+EWhTrILine[j]+ERGALine[j]+
                                                 ESOSptLine[j]+EWhTrOLine[j]),0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+59,i+1,FORMAT(ROUND(ETWC[j]/(EPORcvLine[j]+EWhTrILine[j]+ERGALine[j]+
                                                 ESOSptLine[j]+EWhTrOLine[j]),0.01)),FALSE,FALSE,FALSE);
      END;
      EnterCell(Row+60,i+1,FORMAT(ROUND((ESOGPSptAmt[j]-ETWC[j])/divd,0.01)),FALSE,FALSE,FALSE);
      IF ESqft[j] <> 0 THEN BEGIN
        EnterCell(Row+61,i+1,FORMAT(ROUND(EInventory[j]/ESqft[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+65,i+1,'$'+FORMAT(ROUND((12*EWC[j])/ESqft[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+66,i+1,'$'+FORMAT(ROUND((12*ETWC[j])/ESqft[j],0.01)),FALSE,FALSE,FALSE);
      END;
      IF LSOSptAmt[j] <> 0 THEN BEGIN
        EnterCell(Row+62,i+1,FORMAT(ROUND((100*ETWC[j])/ESOSptAmt[j],0.01))+'%',FALSE,FALSE,FALSE);
        EnterCell(Row+63,i+1,FORMAT(ROUND((100*ETWC[j])/(ESOSptAmt[j]+EWhTrOAmt[j]),0.01))+'%',FALSE,FALSE,FALSE);
        EnterCell(Row+64,i+1,FORMAT(ROUND((100*ETWC[j])/(EPORcvAmt[j]+EWhTrIAmt[j]+ERGAAmt[j]+
                                           ESOSptAmt[j]+EWhTrOAmt[j]),0.01))+'%',FALSE,FALSE,FALSE);
        EnterCell(Row+72,i+1,FORMAT(ROUND(ERGAAmt[j]/ESOSptAmt[j],0.01)),FALSE,FALSE,FALSE);
      END;
      IF ESOSptLine[j] <> 0 THEN BEGIN
        EnterCell(Row+70,i+1,FORMAT(ROUND(ESOSptAmt[j]/ESOSptLine[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+73,i+1,FORMAT(ROUND(ERGALine[j]/ESOSptLine[j],0.01)),FALSE,FALSE,FALSE);
      END;
      IF EEmp[j] <> 0 THEN
        EnterCell(Row+71,i+1,FORMAT(ROUND(EPayroll[j]/EEmp[j],0.01)),FALSE,FALSE,FALSE);
    END;

    PROCEDURE LLCategoryData@1000000006(Row@1000000000 : Integer;i@1000000001 : Integer;j@1000000002 : Integer;divd@1000000003 : Integer;Half@1000000004 : Boolean);
    BEGIN
      EnterCell(Row+2,i+1,FORMAT(ROUND(LPORcvAmt[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+3,i+1,FORMAT(ROUND(LWhTrIAmt[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+4,i+1,FORMAT(ROUND(LPORcvLine[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+5,i+1,FORMAT(ROUND(LWhTrILine[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+6,i+1,FORMAT(ROUND(LRGALine[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+7,i+1,FORMAT(ROUND(LSOSptAmt[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+8,i+1,FORMAT(ROUND(LWhTrOAmt[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+9,i+1,FORMAT(ROUND(LSOGPSptAmt[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+10,i+1,FORMAT(ROUND(LRGAAmt[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+11,i+1,FORMAT(ROUND(LSOSptLine[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+12,i+1,FORMAT(ROUND(LWhTrOLine[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+13,i+1,FORMAT(ROUND((LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]+
                                        LSOSptLine[j]+LWhTrOLine[j])/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+14,i+1,FORMAT(ROUND(LSOSpt[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+16,i+1,FORMAT(ROUND(LEmp[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+17,i+1,FORMAT(ROUND(LRHour[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+18,i+1,FORMAT(ROUND(LOHour[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+19,i+1,FORMAT(ROUND(LManHour[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+20,i+1,FORMAT(ROUND(LRPayroll[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+21,i+1,FORMAT(ROUND(LOPayroll[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+22,i+1,FORMAT(ROUND(LPayroll[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+24,i+1,FORMAT(ROUND(LSqft[j]/divd,0.01)),FALSE,FALSE,FALSE);
      IF Half THEN EnterCell(Row+25,i+1,FORMAT(ROUND(LTCSqft[j]/divd/2,0.01)),FALSE,FALSE,FALSE)
      ELSE EnterCell(Row+25,i+1,FORMAT(ROUND(LTCSqft[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+26,i+1,FORMAT(ROUND(LBenefit[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+27,i+1,FORMAT(ROUND(LInsure[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+28,i+1,FORMAT(ROUND(LRent[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+29,i+1,FORMAT(ROUND(LUtil[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+30,i+1,FORMAT(ROUND(LStFee[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+31,i+1,FORMAT(ROUND(LInventory[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+32,i+1,FORMAT(ROUND(LWC[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+33,i+1,FORMAT(ROUND(LTWC[j]/divd,0.01)),FALSE,FALSE,FALSE);
      //>>TOP4988
      EnterCell(Row+34,i+1,FORMAT(ROUND(LNOC[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+35,i+1,FORMAT(ROUND(LMTU[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+36,i+1,FORMAT(ROUND(LHOU[j]/divd,0.01)),FALSE,FALSE,FALSE);
      //>>TOP4988 + 3
      IF LEmp[j] <> 0 THEN BEGIN
        EnterCell(Row+38,i+1,FORMAT(ROUND((LPORcvLine[j]+LWhTrILine[j]+LRGALine[j])/LEmp[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+42,i+1,FORMAT(ROUND((LSOSptLine[j]+LWhTrOLine[j])/LEmp[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+45,i+1,FORMAT(ROUND(LSOSpt[j]/LEmp[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+46,i+1,FORMAT(ROUND((LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]+
                                           LSOSptLine[j]+LWhTrOLine[j])/LEmp[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+47,i+1,FORMAT(ROUND((LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]+
                                           LSOSptLine[j]+LWhTrOLine[j])/LManHour[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+49,i+1,FORMAT(ROUND((LSOSptAmt[j]+LWhTrOAmt[j])/LEmp[j],0.01)),FALSE,FALSE,FALSE);
      END;
      IF LManHour[j] <> 0 THEN BEGIN
        EnterCell(Row+39,i+1,FORMAT(ROUND((LPORcvLine[j]+LWhTrILine[j]+LRGALine[j])/LManHour[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+43,i+1,FORMAT(ROUND((LSOSptLine[j]+LWhTrOLine[j])/LManHour[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+50,i+1,FORMAT(ROUND((LSOSptAmt[j]+LWhTrOAmt[j])/LManHour[j],0.01)),FALSE,FALSE,FALSE);
      END;
      IF (LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]) <> 0 THEN
        EnterCell(Row+40,i+1,FORMAT(ROUND(LPayroll[j]/(LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]),0.01)),FALSE,FALSE,FALSE);
      IF (LSOSptLine[j]+LWhTrOLine[j]) <> 0 THEN
        EnterCell(Row+44,i+1,FORMAT(ROUND(LPayroll[j]/(LSOSptLine[j]+LWhTrOLine[j]),0.01)),FALSE,FALSE,FALSE);
      IF (LSOSptAmt[j]+LWhTrOAmt[j]) <> 0 THEN BEGIN
        EnterCell(Row+51,i+1,FORMAT(ROUND((100*LPayroll[j])/(LSOSptAmt[j]+LWhTrOAmt[j]),0.01))+'%',FALSE,FALSE,FALSE);
        EnterCell(Row+52,i+1,FORMAT(ROUND((100*LPayroll[j])/(LPORcvAmt[j]+LWhTrIAmt[j]+LRGAAmt[j]+
                                           LSOSptAmt[j]+LWhTrOAmt[j]),0.01))+'%',FALSE,FALSE,FALSE);
        EnterCell(Row+53,i+1,FORMAT(ROUND(LPayroll[j]/(LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]+
                                          LSOSptLine[j]+LWhTrOLine[j]),0.01)),FALSE,FALSE,FALSE);
      END;
      IF LSqft[j] <> 0 THEN BEGIN
        EnterCell(Row+41,i+1,FORMAT(ROUND((LPORcvLine[j]+LWhTrILine[j]+LRGALine[j])/LSqft[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+48,i+1,FORMAT(ROUND((LSOSptLine[j]+LWhTrOLine[j])/LSqft[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+67,i+1,FORMAT(ROUND(LSOSpt[j]/LSqft[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+68,i+1,FORMAT(ROUND((LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]+
                                           LSOSptLine[j]+LWhTrOLine[j])/LSqft[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+69,i+1,FORMAT(ROUND((LSOSptAmt[j]+LWhTrOAmt[j])/LSqft[j],0.01)),FALSE,FALSE,FALSE);
      END;
      IF LSOSpt[j] <> 0 THEN
        EnterCell(Row+55,i+1,FORMAT(ROUND(LTWC[j]/LSOSpt[j],0.01)),FALSE,FALSE,FALSE);
      IF LSOSptLine[j] <> 0 THEN BEGIN
        EnterCell(Row+56,i+1,FORMAT(ROUND(LWC[j]/LSOSptLine[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+57,i+1,FORMAT(ROUND(LTWC[j]/LSOSptLine[j],0.01)),FALSE,FALSE,FALSE);
      END;
      IF (LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]+LSOSptLine[j]+LWhTrOLine[j]) <> 0 THEN BEGIN
        EnterCell(Row+58,i+1,FORMAT(ROUND(LWC[j]/(LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]+
                                                 LSOSptLine[j]+LWhTrOLine[j]),0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+59,i+1,FORMAT(ROUND(LTWC[j]/(LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]+
                                                 LSOSptLine[j]+LWhTrOLine[j]),0.01)),FALSE,FALSE,FALSE);
      END;
      EnterCell(Row+60,i+1,FORMAT(ROUND((LSOGPSptAmt[j]-LTWC[j])/divd,0.01)),FALSE,FALSE,FALSE);
      IF LSqft[j] <> 0 THEN BEGIN
        EnterCell(Row+61,i+1,FORMAT(ROUND(LInventory[j]/LSqft[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+65,i+1,'$'+FORMAT(ROUND((12*LWC[j])/LSqft[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+66,i+1,'$'+FORMAT(ROUND((12*LTWC[j])/LSqft[j],0.01)),FALSE,FALSE,FALSE);
      END;
      IF LSOSptAmt[j] <> 0 THEN BEGIN
        EnterCell(Row+62,i+1,FORMAT(ROUND((100*LTWC[j])/LSOSptAmt[j],0.01))+'%',FALSE,FALSE,FALSE);
        EnterCell(Row+63,i+1,FORMAT(ROUND((100*LTWC[j])/(LSOSptAmt[j]+LWhTrOAmt[j]),0.01))+'%',FALSE,FALSE,FALSE);
        EnterCell(Row+64,i+1,FORMAT(ROUND((100*LTWC[j])/(LPORcvAmt[j]+LWhTrIAmt[j]+LRGAAmt[j]+
                                           LSOSptAmt[j]+LWhTrOAmt[j]),0.01))+'%',FALSE,FALSE,FALSE);
        EnterCell(Row+72,i+1,FORMAT(ROUND(LRGAAmt[j]/LSOSptAmt[j],0.01)),FALSE,FALSE,FALSE);
      END;
      IF LSOSptLine[j] <> 0 THEN BEGIN
        EnterCell(Row+70,i+1,FORMAT(ROUND(LSOSptAmt[j]/LSOSptLine[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+73,i+1,FORMAT(ROUND(LRGALine[j]/LSOSptLine[j],0.01)),FALSE,FALSE,FALSE);
      END;
      IF LEmp[j] <> 0 THEN
        EnterCell(Row+71,i+1,FORMAT(ROUND(LPayroll[j]/LEmp[j],0.01)),FALSE,FALSE,FALSE);
    END;

    PROCEDURE EECategoryData@1000000007(Row@1000000000 : Integer;i@1000000001 : Integer;j@1000000002 : Integer;divd@1000000003 : Integer;Half@1000000004 : Boolean);
    BEGIN
      EnterCell(Row+2,i+1,FORMAT(ROUND(EPORcvAmt[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+3,i+1,FORMAT(ROUND(EWhTrIAmt[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+4,i+1,FORMAT(ROUND(EPORcvLine[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+5,i+1,FORMAT(ROUND(EWhTrILine[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+6,i+1,FORMAT(ROUND(ERGALine[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+7,i+1,FORMAT(ROUND(ESOSptAmt[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+8,i+1,FORMAT(ROUND(EWhTrOAmt[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+9,i+1,FORMAT(ROUND(ESOGPSptAmt[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+10,i+1,FORMAT(ROUND(ERGAAmt[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+11,i+1,FORMAT(ROUND(ESOSptLine[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+12,i+1,FORMAT(ROUND(EWhTrOLine[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+13,i+1,FORMAT(ROUND((EPORcvLine[j]+EWhTrILine[j]+ERGALine[j]+
                                        ESOSptLine[j]+EWhTrOLine[j])/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+14,i+1,FORMAT(ROUND(ESOSpt[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+16,i+1,FORMAT(ROUND(EEmp[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+17,i+1,FORMAT(ROUND(ERHour[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+18,i+1,FORMAT(ROUND(EOHour[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+19,i+1,FORMAT(ROUND(EManHour[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+20,i+1,FORMAT(ROUND(ERPayroll[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+21,i+1,FORMAT(ROUND(EOPayroll[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+22,i+1,FORMAT(ROUND(EPayroll[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+24,i+1,FORMAT(ROUND(ESqft[j]/divd,0.01)),FALSE,FALSE,FALSE);
      IF Half THEN EnterCell(Row+25,i+1,FORMAT(ROUND(ETCSqft[j]/divd/2,0.01)),FALSE,FALSE,FALSE)
      ELSE EnterCell(Row+25,i+1,FORMAT(ROUND(ETCSqft[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+26,i+1,FORMAT(ROUND(EBenefit[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+27,i+1,FORMAT(ROUND(EInsure[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+28,i+1,FORMAT(ROUND(ERent[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+29,i+1,FORMAT(ROUND(EUtil[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+30,i+1,FORMAT(ROUND(EStFee[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+31,i+1,FORMAT(ROUND(EInventory[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+32,i+1,FORMAT(ROUND(EWC[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+33,i+1,FORMAT(ROUND(ETWC[j]/divd,0.01)),FALSE,FALSE,FALSE);



      //addon
      //>>TOP4988
      EnterCell(Row+34,i+1,FORMAT(ROUND(ENOC[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+35,i+1,FORMAT(ROUND(EMTU[j]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+36,i+1,FORMAT(ROUND(EHOU[j]/divd,0.01)),FALSE,FALSE,FALSE);
      //>>TOP4988 + 3
      IF EEmp[j] <> 0 THEN BEGIN
        EnterCell(Row+38,i+1,FORMAT(ROUND((EPORcvLine[j]+EWhTrILine[j]+ERGALine[j])/EEmp[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+42,i+1,FORMAT(ROUND((ESOSptLine[j]+EWhTrOLine[j])/EEmp[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+45,i+1,FORMAT(ROUND(ESOSpt[j]/EEmp[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+46,i+1,FORMAT(ROUND((EPORcvLine[j]+EWhTrILine[j]+ERGALine[j]+
                                           ESOSptLine[j]+EWhTrOLine[j])/EEmp[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+47,i+1,FORMAT(ROUND((EPORcvLine[j]+EWhTrILine[j]+ERGALine[j]+
                                           ESOSptLine[j]+EWhTrOLine[j])/EManHour[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+49,i+1,FORMAT(ROUND((ESOSptAmt[j]+EWhTrOAmt[j])/EEmp[j],0.01)),FALSE,FALSE,FALSE);
      END;
      IF EManHour[j] <> 0 THEN BEGIN
        EnterCell(Row+39,i+1,FORMAT(ROUND((EPORcvLine[j]+EWhTrILine[j]+ERGALine[j])/EManHour[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+43,i+1,FORMAT(ROUND((ESOSptLine[j]+EWhTrOLine[j])/EManHour[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+50,i+1,FORMAT(ROUND((ESOSptAmt[j]+EWhTrOAmt[j])/EManHour[j],0.01)),FALSE,FALSE,FALSE);
      END;
      IF (EPORcvLine[j]+EWhTrILine[j]+ERGALine[j]) <> 0 THEN
        EnterCell(Row+40,i+1,FORMAT(ROUND(EPayroll[j]/(EPORcvLine[j]+EWhTrILine[j]+ERGALine[j]),0.01)),FALSE,FALSE,FALSE);
      IF (ESOSptLine[j]+EWhTrOLine[j]) <> 0 THEN
        EnterCell(Row+44,i+1,FORMAT(ROUND(EPayroll[j]/(ESOSptLine[j]+EWhTrOLine[j]),0.01)),FALSE,FALSE,FALSE);
      IF (ESOSptAmt[j]+EWhTrOAmt[j]) <> 0 THEN BEGIN
        EnterCell(Row+51,i+1,FORMAT(ROUND((100*EPayroll[j])/(ESOSptAmt[j]+EWhTrOAmt[j]),0.01))+'%',FALSE,FALSE,FALSE);
        EnterCell(Row+52,i+1,FORMAT(ROUND((100*EPayroll[j])/(EPORcvAmt[j]+EWhTrIAmt[j]+ERGAAmt[j]+
                                           ESOSptAmt[j]+EWhTrOAmt[j]),0.01))+'%',FALSE,FALSE,FALSE);
        EnterCell(Row+53,i+1,FORMAT(ROUND(EPayroll[j]/(EPORcvLine[j]+EWhTrILine[j]+ERGALine[j]+
                                          ESOSptLine[j]+EWhTrOLine[j]),0.01)),FALSE,FALSE,FALSE);
      END;
      IF ESqft[j] <> 0 THEN BEGIN
        EnterCell(Row+41,i+1,FORMAT(ROUND((EPORcvLine[j]+EWhTrILine[j]+ERGALine[j])/ESqft[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+48,i+1,FORMAT(ROUND((ESOSptLine[j]+EWhTrOLine[j])/ESqft[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+67,i+1,FORMAT(ROUND(ESOSpt[j]/ESqft[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+68,i+1,FORMAT(ROUND((EPORcvLine[j]+EWhTrILine[j]+ERGALine[j]+
                                           ESOSptLine[j]+EWhTrOLine[j])/ESqft[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+69,i+1,FORMAT(ROUND((ESOSptAmt[j]+EWhTrOAmt[j])/ESqft[j],0.01)),FALSE,FALSE,FALSE);
      END;
      IF ESOSpt[j] <> 0 THEN
        EnterCell(Row+55,i+1,FORMAT(ROUND(ETWC[j]/ESOSpt[j],0.01)),FALSE,FALSE,FALSE);
      IF ESOSptLine[j] <> 0 THEN BEGIN
        EnterCell(Row+56,i+1,FORMAT(ROUND(EWC[j]/ESOSptLine[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+57,i+1,FORMAT(ROUND(ETWC[j]/ESOSptLine[j],0.01)),FALSE,FALSE,FALSE);
      END;
      IF (EPORcvLine[j]+EWhTrILine[j]+ERGALine[j]+ESOSptLine[j]+EWhTrOLine[j]) <> 0 THEN BEGIN
        EnterCell(Row+58,i+1,FORMAT(ROUND(EWC[j]/(EPORcvLine[j]+EWhTrILine[j]+ERGALine[j]+
                                                 ESOSptLine[j]+EWhTrOLine[j]),0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+59,i+1,FORMAT(ROUND(ETWC[j]/(EPORcvLine[j]+EWhTrILine[j]+ERGALine[j]+
                                                 ESOSptLine[j]+EWhTrOLine[j]),0.01)),FALSE,FALSE,FALSE);
      END;
      EnterCell(Row+60,i+1,FORMAT(ROUND((ESOGPSptAmt[j]-ETWC[j])/divd,0.01)),FALSE,FALSE,FALSE);
      IF ESqft[j] <> 0 THEN BEGIN
        EnterCell(Row+61,i+1,FORMAT(ROUND(EInventory[j]/ESqft[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+65,i+1,'$'+FORMAT(ROUND((12*EWC[j])/ESqft[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+66,i+1,'$'+FORMAT(ROUND((12*ETWC[j])/ESqft[j],0.01)),FALSE,FALSE,FALSE);
      END;
      IF ESOSptAmt[j] <> 0 THEN BEGIN
        EnterCell(Row+62,i+1,FORMAT(ROUND((100*ETWC[j])/ESOSptAmt[j],0.01))+'%',FALSE,FALSE,FALSE);
        EnterCell(Row+63,i+1,FORMAT(ROUND((100*ETWC[j])/(ESOSptAmt[j]+EWhTrOAmt[j]),0.01))+'%',FALSE,FALSE,FALSE);
        EnterCell(Row+64,i+1,FORMAT(ROUND((100*ETWC[j])/(EPORcvAmt[j]+EWhTrIAmt[j]+ERGAAmt[j]+
                                           ESOSptAmt[j]+EWhTrOAmt[j]),0.01))+'%',FALSE,FALSE,FALSE);
        EnterCell(Row+72,i+1,FORMAT(ROUND(ERGAAmt[j]/ESOSptAmt[j],0.01)),FALSE,FALSE,FALSE);
      END;
      IF ESOSptLine[j] <> 0 THEN BEGIN
        EnterCell(Row+70,i+1,FORMAT(ROUND(ESOSptAmt[j]/ESOSptLine[j],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+73,i+1,FORMAT(ROUND(ERGALine[j]/ESOSptLine[j],0.01)),FALSE,FALSE,FALSE);
      END;
      IF EEmp[j] <> 0 THEN
        EnterCell(Row+71,i+1,FORMAT(ROUND(EPayroll[j]/EEmp[j],0.01)),FALSE,FALSE,FALSE);
    END;

    PROCEDURE ECategoryName@1000000008(Row@1000000000 : Integer;Name@1000000001 : Text[30]);
    BEGIN


      EnterCell(Row,1,Name,TRUE,FALSE,FALSE);
      EnterCell(Row+1,1,'Production:',TRUE,FALSE,TRUE);
      EnterCell(Row+2,1,'$Value Receipts - PO',FALSE,FALSE,FALSE);
      EnterCell(Row+3,1,'$Value Receipts - Transfer',FALSE,FALSE,FALSE);
      EnterCell(Row+4,1,'Line Item Received - PO',FALSE,FALSE,FALSE);
      EnterCell(Row+5,1,'Line Item Received - Transfer',FALSE,FALSE,FALSE);
      EnterCell(Row+6,1,'Line Item Received - RGA',FALSE,FALSE,FALSE);
      EnterCell(Row+7,1,'$Sales Shipped',FALSE,FALSE,FALSE);
      EnterCell(Row+8,1,'$Cost Shipped - Transfer',FALSE,FALSE,FALSE);
      EnterCell(Row+9,1,'$GP Sales Shipped',FALSE,FALSE,FALSE);
      EnterCell(Row+10,1,'$RGA Returned',FALSE,FALSE,FALSE);
      EnterCell(Row+11,1,'Line Item Shipped',FALSE,FALSE,FALSE);
      EnterCell(Row+12,1,'Line Item Shipped - Transfer',FALSE,FALSE,FALSE);
      EnterCell(Row+13,1,'Total Transactions',FALSE,FALSE,FALSE);
      EnterCell(Row+14,1,'Number of Sales Order Shipped',FALSE,FALSE,FALSE);
      EnterCell(Row+15,1,'Labor:',TRUE,FALSE,TRUE);
      EnterCell(Row+16,1,'# Warehouse Employees',FALSE,FALSE,FALSE);
      EnterCell(Row+17,1,'Regular Hours',FALSE,FALSE,FALSE);
      EnterCell(Row+18,1,'OT Hours',FALSE,FALSE,FALSE);
      EnterCell(Row+19,1,'Total Man Hours (Reg & OT)',FALSE,FALSE,FALSE);
      EnterCell(Row+20,1,'Regular Gross Payroll',FALSE,FALSE,FALSE);
      EnterCell(Row+21,1,'OT Gross Payroll',FALSE,FALSE,FALSE);
      EnterCell(Row+22,1,'Total Gross Payroll (Reg & OT)',FALSE,FALSE,FALSE);
      EnterCell(Row+23,1,'Expenses and Misc:',TRUE,FALSE,TRUE);
      EnterCell(Row+24,1,'Sqft',FALSE,FALSE,FALSE);
      EnterCell(Row+25,1,'Price/Sqft (Base, Taxes, CAM)',FALSE,FALSE,FALSE);
      EnterCell(Row+26,1,'Health, Benefits, Payroll Taxes',FALSE,FALSE,FALSE);
      EnterCell(Row+27,1,'Insurances (Property and Workers Comp)',FALSE,FALSE,FALSE);
      EnterCell(Row+28,1,'Monthly Rent plus Tax',FALSE,FALSE,FALSE);
      EnterCell(Row+29,1,'Monthly Utilities',FALSE,FALSE,FALSE);
      EnterCell(Row+30,1,'Storage Fees (ie. Containers)',FALSE,FALSE,FALSE);
      EnterCell(Row+31,1,'Month End Inventory Value',FALSE,FALSE,FALSE);
      EnterCell(Row+32,1,'Warehouse Cost (Rent, Insurances, Storage, Util)',FALSE,FALSE,FALSE);
      EnterCell(Row+33,1,'Total Warehouse Cost (WC + Total Payroll)',FALSE,FALSE,FALSE);
      //>>TOP4988
      EnterCell(Row+34,1,'Number of Containers (Monthly accumulation)',FALSE,FALSE,FALSE);
      EnterCell(Row+35,1,'Manpower to Unload(Number of EE)',FALSE,FALSE,FALSE);
      EnterCell(Row+36,1,'Hours to Unload Containers',FALSE,FALSE,FALSE);
      //<<TOP4988
      EnterCell(Row+37,1,'Metrics',TRUE,FALSE,FALSE);
      EnterCell(Row+38,1,'Total Line Rcvd/# Employees',FALSE,FALSE,FALSE);
      EnterCell(Row+39,1,'Total Line Rcvd/Total Man Hours',FALSE,FALSE,FALSE);
      EnterCell(Row+40,1,'Total Payroll/Total Line Rcvd',FALSE,FALSE,FALSE);
      EnterCell(Row+41,1,'Total Line Rcvd/Sq. Ft',FALSE,FALSE,FALSE);
      EnterCell(Row+42,1,'Total Line Ship/# Employee',FALSE,FALSE,FALSE);
      EnterCell(Row+43,1,'Total Line Ship/Total Man Hours',FALSE,FALSE,FALSE);
      EnterCell(Row+44,1,'Total Payroll/Total Line Ship',FALSE,FALSE,FALSE);
      EnterCell(Row+45,1,'Total Orders/# Employees',FALSE,FALSE,FALSE);
      EnterCell(Row+46,1,'Total Transactions/# Employees',FALSE,FALSE,FALSE);
      EnterCell(Row+47,1,'Total Transcations/Total Man Hours',FALSE,FALSE,FALSE);
      EnterCell(Row+48,1,'Total Line Ship/Sq. Ft',FALSE,FALSE,FALSE);
      EnterCell(Row+49,1,'Total $Sales/# Employee',FALSE,FALSE,FALSE);
      EnterCell(Row+50,1,'Total $Sales/Total Man Hours',FALSE,FALSE,FALSE);
      EnterCell(Row+51,1,'Total Payroll/Total $Sales',FALSE,FALSE,FALSE);
      EnterCell(Row+52,1,'Total Payroll/Total $Transaction Value',FALSE,FALSE,FALSE);
      EnterCell(Row+53,1,'Total Payroll/Total Transactions',FALSE,FALSE,FALSE);
      EnterCell(Row+54,1,'KPIs:',TRUE,FALSE,FALSE);
      EnterCell(Row+55,1,'Total Warehouse Cost/Order',FALSE,FALSE,FALSE);
      EnterCell(Row+56,1,'Warehouse cost/Line Ship',FALSE,FALSE,FALSE);
      EnterCell(Row+57,1,'Total Warehouse cost/Line Ship',FALSE,FALSE,FALSE);
      EnterCell(Row+58,1,'Warehouse cost/Total Transactions',FALSE,FALSE,FALSE);
      EnterCell(Row+59,1,'Total Warehouse cost/Total Transactions',FALSE,FALSE,FALSE);
      EnterCell(Row+60,1,'Total $GP Shipped less Total Warehouse Cost',FALSE,FALSE,FALSE);
      EnterCell(Row+61,1,'$Inventory/sq ft',FALSE,FALSE,FALSE);
      EnterCell(Row+62,1,'Total Warehouse Cost/Total $Sales',FALSE,FALSE,FALSE);
      EnterCell(Row+63,1,'Total Warehouse Cost/Total $Shippings (w/Transfer)',FALSE,FALSE,FALSE);
      EnterCell(Row+64,1,'Total Warehouse Cost/Total $Transactions (Ship & Receive)',FALSE,FALSE,FALSE);
      EnterCell(Row+65,1,'Warehouse Cost/Sqft',FALSE,FALSE,FALSE);
      EnterCell(Row+66,1,'Total Warehouse Cost/Sqft',FALSE,FALSE,FALSE);
      EnterCell(Row+67,1,'Total Orders/Sqft',FALSE,FALSE,FALSE);
      EnterCell(Row+68,1,'Total Transactions/Sqft',FALSE,FALSE,FALSE);
      EnterCell(Row+69,1,'Total $Sales/Sq. Ft',FALSE,FALSE,FALSE);
      EnterCell(Row+70,1,'$AvgValue/Line Item Shipped',FALSE,FALSE,FALSE);
      EnterCell(Row+71,1,'$AvgPayroll/Employee',FALSE,FALSE,FALSE);
      EnterCell(Row+72,1,'$RGA/$Sales Shipped',FALSE,FALSE,FALSE);
      EnterCell(Row+73,1,'RGA Lines/Line Item Shipped',FALSE,FALSE,FALSE);
    END;

    PROCEDURE TotalCategoryData@1000000009(Row@1000000000 : Integer;i@1000000001 : Integer;j@1000000002 : Integer;K@1000000005 : Integer;divd@1000000003 : Integer;Half@1000000004 : Boolean);
    BEGIN
      EnterCell(Row+2,i+1,FORMAT(ROUND(LPORcvAmt[j]/divd,1)+ROUND(EPORcvAmt[K]/divd,1)),FALSE,FALSE,FALSE);
      //EnterCell(Row+3,i+1,FORMAT(ROUND(EWhTrIAmt[j]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+3,i+1,FORMAT(ROUND(LWhTrIAmt[j]/divd,1)+ROUND(EWhTrIAmt[K]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+4,i+1,FORMAT(ROUND(LPORcvLine[j]/divd,1)+ROUND(EPORcvLine[K]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+5,i+1,FORMAT(ROUND(LWhTrILine[j]/divd,1)+ROUND(EWhTrILine[K]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+6,i+1,FORMAT(ROUND(LRGALine[j]/divd,1)+ROUND(ERGALine[K]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+7,i+1,FORMAT(ROUND(LSOSptAmt[j]/divd,1)+ROUND(ESOSptAmt[K]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+8,i+1,FORMAT(ROUND(LWhTrOAmt[j]/divd,1)+ROUND(EWhTrOAmt[K]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+9,i+1,FORMAT(ROUND(LSOGPSptAmt[j]/divd,1)+ROUND(ESOGPSptAmt[K]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+10,i+1,FORMAT(ROUND(LRGAAmt[j]/divd,1)+ROUND(ERGAAmt[K]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+11,i+1,FORMAT(ROUND(LSOSptLine[j]/divd,1)+ROUND(ESOSptLine[K]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+12,i+1,FORMAT(ROUND(LWhTrOLine[j]/divd,1)+ROUND(EWhTrOLine[K]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+13,i+1,FORMAT(ROUND((LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]+
                                        LSOSptLine[j]+LWhTrOLine[j])/divd,0.01)+ROUND((EPORcvLine[K]+EWhTrILine[K]+ERGALine[K]+
                                        ESOSptLine[K]+EWhTrOLine[K])/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+14,i+1,FORMAT(ROUND(LSOSpt[j]/divd,1)+ROUND(ESOSpt[K]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+16,i+1,FORMAT(ROUND(LEmp[j]/divd,0.01)+ROUND(EEmp[K]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+17,i+1,FORMAT(ROUND(LRHour[j]/divd,0.01)+ROUND(ERHour[K]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+18,i+1,FORMAT(ROUND(LOHour[j]/divd,0.01)+ROUND(EOHour[K]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+19,i+1,FORMAT(ROUND(LManHour[j]/divd,0.01)+ROUND(EManHour[K]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+20,i+1,FORMAT(ROUND(LRPayroll[j]/divd,0.01)+ROUND(ERPayroll[K]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+21,i+1,FORMAT(ROUND(LOPayroll[j]/divd,0.01)+ROUND(EOPayroll[K]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+22,i+1,FORMAT(ROUND(LPayroll[j]/divd,0.01)+ROUND(EPayroll[K]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+24,i+1,FORMAT(ROUND(LSqft[j]/divd,0.01)+ROUND(ESqft[K]/divd,0.01)),FALSE,FALSE,FALSE);
      //IF Half THEN EnterCell(Row+25,i+1,FORMAT(ROUND((LTCSqft[j]/divd/2)+ROUND(ETCSqft[j]/divd/2),0.01)),FALSE,FALSE,FALSE)
      //ELSE
      EnterCell(Row+25,i+1,FORMAT(ROUND(LTCSqft[j]/divd,0.01)+ROUND(ETCSqft[K]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+26,i+1,FORMAT(ROUND(LBenefit[j]/divd,0.01)+ROUND(EBenefit[K]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+27,i+1,FORMAT(ROUND(LInsure[j]/divd,0.01)+ROUND(EInsure[K]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+28,i+1,FORMAT(ROUND(LRent[j]/divd,0.01)+ROUND(ERent[K]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+29,i+1,FORMAT(ROUND(LUtil[j]/divd,0.01)+ROUND(EUtil[K]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+30,i+1,FORMAT(ROUND(LStFee[j]/divd,0.01)+ROUND(EStFee[K]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+31,i+1,FORMAT(ROUND(LInventory[j]/divd,1)+ROUND(EInventory[K]/divd,1)),FALSE,FALSE,FALSE);
      EnterCell(Row+32,i+1,FORMAT(ROUND(LWC[j]/divd,0.01)+ROUND(EWC[K]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+33,i+1,FORMAT(ROUND(LTWC[j]/divd,0.01)+ROUND(ETWC[K]/divd,0.01)),FALSE,FALSE,FALSE);
      //>>TOP4988
      EnterCell(Row+34,i+1,FORMAT(ROUND(LNOC[j]/divd,0.01)+ROUND(ENOC[K]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+35,i+1,FORMAT(ROUND(LMTU[j]/divd,0.01)+ROUND(EMTU[K]/divd,0.01)),FALSE,FALSE,FALSE);
      EnterCell(Row+36,i+1,FORMAT(ROUND(LHOU[j]/divd,0.01)+ROUND(EHOU[K]/divd,0.01)),FALSE,FALSE,FALSE);
      //>>TOP4988 + 3
      IF (LEmp[j] <>0) AND (EEmp[K]<>0) THEN BEGIN
        EnterCell(Row+38,i+1,FORMAT(ROUND((LPORcvLine[j]+LWhTrILine[j]+LRGALine[j])/LEmp[j],0.01)+
        ROUND((EPORcvLine[K]+EWhTrILine[K]+ERGALine[K])/EEmp[K],0.01)),FALSE,FALSE,FALSE);


        EnterCell(Row+42,i+1,FORMAT(ROUND((LSOSptLine[j]+LWhTrOLine[j])/LEmp[j],0.01)+ROUND((ESOSptLine[K]+EWhTrOLine[K])/EEmp[K],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+45,i+1,FORMAT(ROUND(LSOSpt[j]/LEmp[j],0.01)+ROUND(ESOSpt[K]/EEmp[K],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+46,i+1,FORMAT(ROUND((LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]+
                                           LSOSptLine[j]+LWhTrOLine[j])/LEmp[j],0.01)
                                           +ROUND((EPORcvLine[K]+EWhTrILine[K]+ERGALine[K]+
                                           ESOSptLine[K]+EWhTrOLine[K])/EEmp[K],0.01)
                                           ),FALSE,FALSE,FALSE);
        EnterCell(Row+47,i+1,FORMAT(ROUND((LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]+
                                           LSOSptLine[j]+LWhTrOLine[j])/LManHour[j],0.01)+
                                           ROUND((EPORcvLine[K]+EWhTrILine[K]+ERGALine[K]+
                                           ESOSptLine[K]+EWhTrOLine[K])/EManHour[K],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+49,i+1,FORMAT(ROUND((LSOSptAmt[j]+LWhTrOAmt[j])/LEmp[j],0.01)+ROUND((ESOSptAmt[K]+EWhTrOAmt[K])/EEmp[K],0.01)),FALSE,FALSE,FALSE);
      END;
      IF (LManHour[j] <> 0) AND (EManHour[K] <> 0)  THEN BEGIN
        EnterCell(Row+39,i+1,FORMAT(ROUND((LPORcvLine[j]+LWhTrILine[j]+LRGALine[j])/LManHour[j],0.01)+ROUND((EPORcvLine[K]+EWhTrILine[K]+ERGALine[K])/EManHour[K],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+43,i+1,FORMAT(ROUND((LSOSptLine[j]+LWhTrOLine[j])/LManHour[j],0.01)+ROUND((ESOSptLine[K]+EWhTrOLine[K])/EManHour[K],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+50,i+1,FORMAT(ROUND((LSOSptAmt[j]+LWhTrOAmt[j])/LManHour[j],0.01)+ROUND((ESOSptAmt[K]+EWhTrOAmt[K])/EManHour[K],0.01)),FALSE,FALSE,FALSE);
      END;
      IF ((LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]) <> 0) AND ((EPORcvLine[K]+EWhTrILine[K]+ERGALine[K]) <> 0) THEN
        EnterCell(Row+40,i+1,FORMAT(ROUND(LPayroll[j]/(LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]),0.01)+ROUND(EPayroll[K]/(EPORcvLine[K]+EWhTrILine[K]+ERGALine[K]),0.01)),FALSE,FALSE,FALSE);
      IF ((LSOSptLine[j]+LWhTrOLine[j]) <> 0) AND ((ESOSptLine[K]+EWhTrOLine[K]) <> 0) THEN
        EnterCell(Row+44,i+1,FORMAT(ROUND(LPayroll[j]/(LSOSptLine[j]+LWhTrOLine[j]),0.01)+ROUND(EPayroll[K]/(ESOSptLine[K]+EWhTrOLine[K]),0.01)),FALSE,FALSE,FALSE);
      IF ((LSOSptAmt[j]+LWhTrOAmt[j]) <> 0) AND ((ESOSptAmt[K]+EWhTrOAmt[K]) <> 0) THEN BEGIN
        EnterCell(Row+51,i+1,FORMAT(ROUND((100*LPayroll[j])/(LSOSptAmt[j]+LWhTrOAmt[j]),0.01)+ROUND((100*EPayroll[K])/(ESOSptAmt[K]+EWhTrOAmt[K]),0.01))+'%',FALSE,FALSE,FALSE);
        EnterCell(Row+52,i+1,FORMAT(ROUND((100*LPayroll[j])/(LPORcvAmt[j]+LWhTrIAmt[j]+LRGAAmt[j]+
                                           LSOSptAmt[j]+LWhTrOAmt[j]),0.01)+ROUND((100*EPayroll[K])/(EPORcvAmt[K]+EWhTrIAmt[K]+ERGAAmt[K]+ ESOSptAmt[K]+EWhTrOAmt[K]),0.01))+'%',FALSE,FALSE,FALSE);
        EnterCell(Row+53,i+1,FORMAT(ROUND(LPayroll[j]/(LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]+
                                          LSOSptLine[j]+LWhTrOLine[j]),0.01)+
                                          ROUND(EPayroll[K]/(EPORcvLine[K]+EWhTrILine[K]+ERGALine[K]+ ESOSptLine[K]+EWhTrOLine[K]),0.01)),FALSE,FALSE,FALSE);
      END;
      IF (LSqft[j] <> 0) AND (ESqft[K] <> 0) THEN BEGIN
        EnterCell(Row+41,i+1,FORMAT(ROUND((LPORcvLine[j]+LWhTrILine[j]+LRGALine[j])/LSqft[j],0.01)+ROUND((EPORcvLine[K]+EWhTrILine[K]+ERGALine[K])/ESqft[K],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+48,i+1,FORMAT(ROUND((LSOSptLine[j]+LWhTrOLine[j])/LSqft[j],0.01)+ROUND((ESOSptLine[K]+EWhTrOLine[K])/ESqft[K],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+67,i+1,FORMAT(ROUND(LSOSpt[j]/LSqft[j],0.01)+ROUND(ESOSpt[K]/ESqft[K],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+68,i+1,FORMAT(ROUND((LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]+
                                           LSOSptLine[j]+LWhTrOLine[j])/LSqft[j],0.01)+
                                           ROUND((EPORcvLine[K]+EWhTrILine[K]+ERGALine[K]+ESOSptLine[K]+EWhTrOLine[K])/ESqft[K],0.01)

                                           ),FALSE,FALSE,FALSE);
        EnterCell(Row+69,i+1,FORMAT(ROUND((LSOSptAmt[j]+LWhTrOAmt[j])/LSqft[j],0.01)+ROUND((ESOSptAmt[K]+EWhTrOAmt[K])/ESqft[K],0.01)),FALSE,FALSE,FALSE);
      END;
      IF (LSOSpt[j] <> 0) AND (ESOSpt[K] <> 0)  THEN
        EnterCell(Row+55,i+1,FORMAT(ROUND(LTWC[j]/LSOSpt[j],0.01)+ROUND(ETWC[K]/ESOSpt[K],0.01)),FALSE,FALSE,FALSE);
      IF (LSOSptLine[j] <> 0) AND (ESOSptLine[K] <> 0) THEN BEGIN
        EnterCell(Row+56,i+1,FORMAT(ROUND(LWC[j]/LSOSptLine[j],0.01)+ROUND(EWC[K]/ESOSptLine[K],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+57,i+1,FORMAT(ROUND(LTWC[j]/LSOSptLine[j],0.01)+ROUND(ETWC[K]/ESOSptLine[K],0.01)),FALSE,FALSE,FALSE);
      END;
      IF ((LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]+LSOSptLine[j]+LWhTrOLine[j] <> 0) AND (EPORcvLine[K]+EWhTrILine[K]+ERGALine[K]+ESOSptLine[K]+EWhTrOLine[K] <> 0)) THEN BEGIN
          EnterCell(Row+58,i+1,FORMAT(ROUND(LWC[j]/(LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]+
                                                 LSOSptLine[j]+LWhTrOLine[j]),0.01)+
                                                 ROUND(EWC[K]/(EPORcvLine[K]+EWhTrILine[K]+ERGALine[K]+ ESOSptLine[K]+EWhTrOLine[K]),0.01)),FALSE,FALSE,FALSE);

          EnterCell(Row+59,i+1,FORMAT(ROUND(LTWC[j]/(LPORcvLine[j]+LWhTrILine[j]+LRGALine[j]+
                                                 LSOSptLine[j]+LWhTrOLine[j]),0.01)+
                                                 ROUND(ETWC[K]/(EPORcvLine[K]+EWhTrILine[K]+ERGALine[K]+
                                                 ESOSptLine[K]+EWhTrOLine[K]),0.01)),FALSE,FALSE,FALSE);
      END;
      EnterCell(Row+60,i+1,FORMAT(ROUND((LSOGPSptAmt[j]-LTWC[j])/divd,0.01)+ROUND((ESOGPSptAmt[K]-ETWC[K])/divd,0.01)),FALSE,FALSE,FALSE);
      IF (LSqft[j] <> 0) AND (ESqft[K] <> 0) THEN BEGIN
        EnterCell(Row+61,i+1,FORMAT(ROUND(LInventory[j]/LSqft[j],0.01)+ROUND(EInventory[K]/ESqft[K],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+65,i+1,'$'+FORMAT(ROUND((12*LWC[j])/LSqft[j],0.01)+ROUND((12*EWC[K])/ESqft[K],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+66,i+1,'$'+FORMAT(ROUND((12*LTWC[j])/LSqft[j],0.01)+ROUND((12*ETWC[K])/ESqft[K],0.01)),FALSE,FALSE,FALSE);
      END;
      IF (LSOSptAmt[j] <> 0) AND (ESOSptAmt[K] <> 0) THEN BEGIN
        EnterCell(Row+62,i+1,FORMAT(ROUND((100*LTWC[j])/LSOSptAmt[j],0.01)+ROUND((100*ETWC[K])/ESOSptAmt[K],0.01))+'%',FALSE,FALSE,FALSE);
        EnterCell(Row+63,i+1,FORMAT(ROUND((100*LTWC[j])/(LSOSptAmt[j]+LWhTrOAmt[j]),0.01)+ROUND((100*ETWC[K])/(ESOSptAmt[K]+EWhTrOAmt[K]),0.01))+'%',FALSE,FALSE,FALSE);
        EnterCell(Row+64,i+1,FORMAT(ROUND((100*LTWC[j])/(LPORcvAmt[j]+LWhTrIAmt[j]+LRGAAmt[j]+
                                           LSOSptAmt[j]+LWhTrOAmt[j]),0.01)+
                                           ROUND((100*ETWC[K])/(EPORcvAmt[K]+EWhTrIAmt[K]+ERGAAmt[K]+ESOSptAmt[K]+EWhTrOAmt[K]),0.01)
                                           )+'%',FALSE,FALSE,FALSE);
        EnterCell(Row+72,i+1,FORMAT(ROUND(LRGAAmt[j]/LSOSptAmt[j],0.01)+ROUND(ERGAAmt[K]/ESOSptAmt[K],0.01)),FALSE,FALSE,FALSE);
      END;
      IF (LSOSptLine[j] <> 0) AND (ESOSptLine[K] <> 0) THEN BEGIN
        EnterCell(Row+70,i+1,FORMAT(ROUND(LSOSptAmt[j]/LSOSptLine[j],0.01)+ROUND(ESOSptAmt[K]/ESOSptLine[K],0.01)),FALSE,FALSE,FALSE);
        EnterCell(Row+73,i+1,FORMAT(ROUND(LRGALine[j]/LSOSptLine[j],0.01)+ROUND(ERGALine[K]/ESOSptLine[K],0.01)),FALSE,FALSE,FALSE);
      END;
      IF (LEmp[j] <> 0) AND (EEmp[K] <> 0)  THEN
        EnterCell(Row+71,i+1,FORMAT(ROUND(LPayroll[j]/LEmp[j],0.01)+ROUND(EPayroll[K]/EEmp[K],0.01)),FALSE,FALSE,FALSE);
    END;

    BEGIN
    {
      2016-07-14 TPZ622 EBAGIM
        Report has been created  - migrated from the old Nav

      001 TPZ2904 UTK 07202020 - Code added for Location 80.
    }
    END.
  }
  RDLDATA
  {
  }
}

