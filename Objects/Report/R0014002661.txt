OBJECT Report 14002661 Import Forecast Review
{
  OBJECT-PROPERTIES
  {
    Date=02/22/21;
    Time=[ 3:37:25 PM];
    Version List=UBP3.03;
  }
  PROPERTIES
  {
    CaptionML=ENU=Import Worksheet Tran.;
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF FileName = '' THEN
                    ERROR(Text001);

                  ExcelBuf.OpenBook(ServerFileName, SheetName);
                  ExcelBuf.ReadSheet;
                  GetData;
                END;

  }
  DATASET
  {
    { 5444;    ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 ORDER(Ascending)
                                 WHERE(Number=CONST(1)) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   FileName := '';
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1240030002;2;Field  ;
                  CaptionML=ENU=Workbook File Name;
                  ApplicationArea=#All;
                  SourceExpr=FileName;
                  OnAssistEdit=BEGIN
                                 RequestFile;
                                 SheetName := ExcelBuf.SelectSheetsName(ServerFileName);
                               END;
                                }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ExcelBuf@1000000000 : TEMPORARY Record 370;
      FileMgt@1000 : Codeunit 419;
      ProgWindow@1240020001 : Dialog;
      FileName@1240030000 : Text[250];
      Text000@1240030001 : TextConst 'ENU=Import Excel File';
      SheetName@1012 : Text[250];
      Text001@1002 : TextConst 'ENU=You must enter a file name.';
      DateArray@1004 : ARRAY [100] OF Date;
      Text002@1003 : TextConst 'ENU=Could not create the starting period.';
      ExcelStream@1240020002 : InStream;
      BatchType@1240020004 : Code[10];
      BatchName@1240020003 : Code[10];
      StartingDateText@1240020000 : Text[20];
      ItemUsageReviewBatch@1240020005 : Record 14097469;
      StartingDate@1240020006 : Date;
      ServerFileName@1240020007 : Text;

    PROCEDURE RequestFile@1();
    BEGIN
      IF FileName <> '' THEN
        ServerFileName := FileMgt.UploadFile(Text000,FileName)
      ELSE
        ServerFileName := FileMgt.UploadFile(Text000,'.xlsx');

      ValidateServerFileName;
      FileName := FileMgt.GetFileName(ServerFileName);
    END;

    PROCEDURE GetData@1240020010();
    VAR
      LocCode@1240020000 : Code[10];
      ItemNo@1240020001 : Code[50];
      VariantCode@1240020002 : Code[10];
      ItemReviewLine@1240020003 : Record 14097467;
      RowNo@1240020004 : Integer;
      Period@1240020005 : Integer;
      i@1240020006 : Integer;
      ModifyRec@1000000000 : Boolean;
    BEGIN
      // blank column data is not represented as a column
      // If variant is not used then column 3 will not appear
      IF ExcelBuf.FINDSET THEN BEGIN
        ExcelBuf.SETRANGE("Row No.", 1);
        IF ExcelBuf.FINDSET THEN BEGIN
          REPEAT
            ParseRowValues();
          UNTIL ExcelBuf.NEXT = 0;
          CheckRowValues();
        END;

        FOR i := 4 TO GetLastRowNo() DO BEGIN
          ExcelBuf.SETRANGE("Row No.", i);
          ModifyRec := FALSE;
          IF ExcelBuf.FINDSET THEN BEGIN
            REPEAT
              IF ExcelBuf."Column No." = 1 THEN
                LocCode := ExcelBuf."Cell Value as Text";

              IF ExcelBuf."Column No." = 2 THEN
                ItemNo := ExcelBuf."Cell Value as Text";

              IF (ExcelBuf."Column No." = 3) THEN
                VariantCode := ExcelBuf."Cell Value as Text";

              IF (ExcelBuf."Column No." > 5) THEN BEGIN
                // even columns are new foecast and start at 6
                IF ((ExcelBuf."Column No." MOD 2) = 0) THEN BEGIN
                  ItemReviewLine.SETRANGE("Batch Type", BatchType);
                  ItemReviewLine.SETRANGE("Batch Name", BatchName);
                  ItemReviewLine.SETRANGE("Location Code", LocCode);
                  ItemReviewLine.SETRANGE("Item No.", ItemNo);
                  ItemReviewLine.SETRANGE("Variant Code", VariantCode);
                  ItemReviewLine.SETRANGE(Type, ItemReviewLine.Type::"Forecast Adjust");
                  IF ItemReviewLine.FINDFIRST THEN BEGIN
                    Period := 1;
                    REPEAT
                      UpdateItemReviewLine(Period, ItemReviewLine, ModifyRec);
                      ExcelBuf.NEXT;
                      Period := Period + 1;
                    UNTIL ExcelBuf.NEXT = 0;
                    IF ModifyRec THEN
                      ItemReviewLine.MODIFY(TRUE);
                    // look for row number change to reset globals
                    LocCode := '';
                    ItemNo := '';
                    VariantCode := '';
                  END;
                END;
              END;
            UNTIL (ExcelBuf.NEXT = 0);
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE UpdateItemReviewLine@3(VAR CurrPeriod@1000 : Integer;VAR CurrItemReviewLine@1002 : Record 14097467;VAR CurrModifyRec@1000000000 : Boolean);
    VAR
      TextValue@1240020000 : Text;
      DecValue@1240020001 : Decimal;
      OldValue@1000000001 : Decimal;
    BEGIN
      TextValue := ExcelBuf."Cell Value as Text";
      IF NOT EVALUATE(DecValue, TextValue) THEN
        EXIT;

      OldValue := CurrItemReviewLine.GetComparisonField(CurrPeriod);

      IF OldValue <> DecValue THEN BEGIN
        CurrModifyRec := TRUE;
        SetFieldValue(CurrPeriod, CurrItemReviewLine, DecValue);
      END;
    END;

    LOCAL PROCEDURE ParseRowValues@1240020002();
    BEGIN
      IF (ExcelBuf."Row No." = 1) AND
         (ExcelBuf."Column No." = 1)
        THEN BEGIN
          BatchType := COPYSTR(ExcelBuf."Cell Value as Text",1, 10);
        END;

      IF (ExcelBuf."Row No." = 1) AND
          (ExcelBuf."Column No." = 2)
      THEN BEGIN
        BatchName := COPYSTR(ExcelBuf."Cell Value as Text",1, 10);
      END;

      IF (ExcelBuf."Row No." = 1) AND
          (ExcelBuf."Column No." = 3)
      THEN BEGIN
        StartingDateText := COPYSTR(ExcelBuf."Cell Value as Text",1, 20);
      END;
    END;

    LOCAL PROCEDURE CheckRowValues@1240020000();
    VAR
      ItemReviewLine@1240020000 : Record 14097467;
    BEGIN
      IF NOT ItemUsageReviewBatch.GET(BatchType, BatchName) THEN
        ERROR('Batch Not Found! Check Row (1), Column (1) of the worksheet.');

      ItemReviewLine.SETRANGE("Batch Type", ItemUsageReviewBatch."Batch Type");
      ItemReviewLine.SETRANGE("Batch Name", ItemUsageReviewBatch."Batch Name");
      IF NOT ItemReviewLine.FINDSET THEN
        ERROR('Batch Lines Not Found! Check the Batch Type %1 Column (1)\Batch Name %2 Column (2).');

      IF NOT EVALUATE(StartingDate, StartingDateText) THEN
        ERROR('Starting Date could not be set - %1!', StartingDateText);

      IF ItemReviewLine."Starting Date" <> StartingDate THEN
        ERROR('Starting Date on the import %1\Does not match the Starting Date of the batch %2!', StartingDate, ItemReviewLine."Starting Date");
    END;

    LOCAL PROCEDURE GetLastRowNo@1240020004() : Integer;
    BEGIN
      ExcelBuf.RESET;
      ExcelBuf.FINDLAST;
      EXIT(ExcelBuf."Row No.");
    END;

    LOCAL PROCEDURE SetFieldValue@1000000001(VAR CurrPeriod@1000 : Integer;VAR CurrItemReviewLine@1002 : Record 14097467;NewDecValue@1000000000 : Decimal);
    BEGIN
      CASE CurrPeriod OF
        1:   CurrItemReviewLine."Period 1 C" := NewDecValue;
        2:   CurrItemReviewLine."Period 2 C" := NewDecValue;
        3:   CurrItemReviewLine."Period 3 C" := NewDecValue;
        4:   CurrItemReviewLine."Period 4 C" := NewDecValue;
        5:   CurrItemReviewLine."Period 5 C" := NewDecValue;
        6:   CurrItemReviewLine."Period 6 C" := NewDecValue;
        7:   CurrItemReviewLine."Period 7 C" := NewDecValue;
        8:   CurrItemReviewLine."Period 8 C" := NewDecValue;
        9:   CurrItemReviewLine."Period 9 C" := NewDecValue;
        10:  CurrItemReviewLine."Period 10 C" := NewDecValue;
        11:  CurrItemReviewLine."Period 11 C" := NewDecValue;
        12:  CurrItemReviewLine."Period 12 C" := NewDecValue;
        13:  CurrItemReviewLine."Period 13 C" := NewDecValue;
        14:  CurrItemReviewLine."Period 14 C" := NewDecValue;
        15:  CurrItemReviewLine."Period 15 C" := NewDecValue;
        16:  CurrItemReviewLine."Period 16 C" := NewDecValue;
        17:  CurrItemReviewLine."Period 17 C" := NewDecValue;
        18:  CurrItemReviewLine."Period 18 C" := NewDecValue;
        19:  CurrItemReviewLine."Period 19 C" := NewDecValue;
        20:  CurrItemReviewLine."Period 20 C" := NewDecValue;
        21:  CurrItemReviewLine."Period 21 C" := NewDecValue;
        22:  CurrItemReviewLine."Period 22 C" := NewDecValue;
        23:  CurrItemReviewLine."Period 23 C" := NewDecValue;
        24:  CurrItemReviewLine."Period 24 C" := NewDecValue;
        25:  CurrItemReviewLine."Period 25 C" := NewDecValue;
        26:  CurrItemReviewLine."Period 26 C" := NewDecValue;
        27:  CurrItemReviewLine."Period 27 C" := NewDecValue;
        28:  CurrItemReviewLine."Period 28 C" := NewDecValue;
        29:  CurrItemReviewLine."Period 29 C" := NewDecValue;
        30:  CurrItemReviewLine."Period 30 C" := NewDecValue;
        31:  CurrItemReviewLine."Period 31 C" := NewDecValue;
        32:  CurrItemReviewLine."Period 32 C" := NewDecValue;
        33:  CurrItemReviewLine."Period 33 C" := NewDecValue;
        34:  CurrItemReviewLine."Period 34 C" := NewDecValue;
        35:  CurrItemReviewLine."Period 35 C" := NewDecValue;
        36:  CurrItemReviewLine."Period 36 C" := NewDecValue;
        37:  CurrItemReviewLine."Period 37 C" := NewDecValue;
        38:  CurrItemReviewLine."Period 38 C" := NewDecValue;
        39:  CurrItemReviewLine."Period 39 C" := NewDecValue;
        40:  CurrItemReviewLine."Period 40 C" := NewDecValue;
        41:  CurrItemReviewLine."Period 41 C" := NewDecValue;
        42:  CurrItemReviewLine."Period 42 C" := NewDecValue;
        43:  CurrItemReviewLine."Period 43 C" := NewDecValue;
        44:  CurrItemReviewLine."Period 44 C" := NewDecValue;
        45:  CurrItemReviewLine."Period 45 C" := NewDecValue;
        46:  CurrItemReviewLine."Period 46 C" := NewDecValue;
        47:  CurrItemReviewLine."Period 47 C" := NewDecValue;
        48:  CurrItemReviewLine."Period 48 C" := NewDecValue;
        49:  CurrItemReviewLine."Period 49 C" := NewDecValue;
        50:  CurrItemReviewLine."Period 50 C" := NewDecValue;
        51:  CurrItemReviewLine."Period 51 C" := NewDecValue;
        52:  CurrItemReviewLine."Period 52 C" := NewDecValue;
      END;
    END;

    LOCAL PROCEDURE ValidateServerFileName@1240020001();
    BEGIN
      IF ServerFileName = '' THEN BEGIN
        FileName := '';
        SheetName := '';
        ERROR(Text001);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

