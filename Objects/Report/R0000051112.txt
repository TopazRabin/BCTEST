OBJECT Report 51112 Calculate Scaler
{
  OBJECT-PROPERTIES
  {
    Date=08/19/20;
    Time=[ 9:49:54 AM];
    Modified=Yes;
    Version List=TPZ000.00.00;
  }
  PROPERTIES
  {
  }
  DATASET
  {
    { 1000000000;;DataItem;                  ;
               DataItemTable=Table50007;
               DataItemTableView=WHERE(Shortcut Dimension 5 Code=CONST(L));
               OnPreDataItem=BEGIN
                               IF RawSalesData.FINDSET THEN
                                 RawSalesData.DELETEALL;
                             END;

               OnPostDataItem=BEGIN
                                {Scaler.RESET;
                                IF Scaler.FINDSET THEN
                                  REPEAT
                                    RawSalesData.RESET;
                                    RawSalesData.SETCURRENTKEY("Scaler Code");
                                    RawSalesData.SETRANGE("Scaler Code",Scaler."Scaler Code");
                                    RawSalesData.CALCSUMS("Scaler Value");
                                    IF RawSalesData.COUNT <> 0 THEN BEGIN
                                      Scaler."Scaler Value" := RawSalesData."Scaler Value"/RawSalesData.COUNT;
                                      Scaler.MODIFY;
                                    END;
                                  UNTIL Scaler.NEXT=0
                                  }
                              END;

               ReqFilterFields=Customer No. }

    { 1000000001;1;DataItem;                 ;
               DataItemTable=Table27;
               DataItemTableView=WHERE(Item Category Code=FILTER(EXIT EMERG|FXT LED|LED|FXT EXTLED|ACCESSORY),
                                       ABC Code=FILTER(A|B|C|N));
               OnAfterGetRecord=BEGIN

                                  SCItemGrpFilter.RESET;
                                  SCItemGrpFilter.SETRANGE("Product Group Code",Item."Product Group Code");
                                  IF NOT SCItemGrpFilter.FINDFIRST THEN
                                    CurrReport.SKIP;


                                  {LastSalesPrice.RESET;
                                  LastSalesPrice.ASCENDING;
                                  LastSalesPrice.SETCURRENTKEY("Sell-to Customer No.","Item No.","Document Date");
                                  LastSalesPrice.SETRANGE("Sell-to Customer No.","Customer Division"."Customer No.");
                                  LastSalesPrice.SETRANGE("Item No.","No.");
                                  LastSalesPrice.SETRANGE(Scaled,FALSE);
                                  LastSalesPrice.SETFILTER("Document Type",'<>%1&<>%2',LastSalesPrice."Document Type"::"Return Order",LastSalesPrice."Document Type"::"Credit Memo");
                                  IF LastSalesPrice.FINDLAST THEN BEGIN
                                      IF LastSalesPrice."Last Price Date" < 061619D THEN
                                        CurrReport.SKIP;
                                  END
                                  ELSE CurrReport.SKIP;
                                  }
                                  LastSalesPrice.RESET;
                                  LastSalesPrice.ASCENDING;
                                  LastSalesPrice.SETCURRENTKEY("Sell-to Customer No.","Item No.","Document Date");
                                  LastSalesPrice.SETRANGE("Sell-to Customer No.","Customer Division"."Customer No.");
                                  LastSalesPrice.SETRANGE("Item No.","No.");
                                  LastSalesPrice.SETRANGE(Scaled,FALSE);
                                  LastSalesPrice.SETFILTER("Last Price Date",'>%1',061619D);
                                  LastSalesPrice.SETFILTER("Document Type",'<>%1&<>%2',LastSalesPrice."Document Type"::"Return Order",LastSalesPrice."Document Type"::"Credit Memo");
                                  IF NOT LastSalesPrice.FINDLAST THEN
                                    CurrReport.SKIP;

                                  RawSalesData.INIT;
                                  RawSalesData."Customer No." := "Customer Division"."Customer No.";
                                  RawSalesData."Item No." := "No.";
                                  RawSalesData."Unit Price" := LastSalesPrice."Last Unit Price";
                                  RawSalesData."High Unit Price" := "High Unit Price";
                                  RawSalesData."Posting Date" := LastSalesPrice."Last Price Date";
                                  RawSalesData."Item Category Code" := "Item Category Code";
                                  RawSalesData."Product Group Code" := "Product Group Code";
                                  RawSalesData."ABC Code" := "ABC Code";
                                  RawSalesData."Shortcut Dimension 5 Code" := "Customer Division"."Shortcut Dimension 5 Code";
                                  ScalerItemGroups.RESET;
                                  ScalerItemGroups.SETRANGE("Item Category Code","Item Category Code");
                                  ScalerItemGroups.SETRANGE("Product Group Code","Product Group Code");
                                  IF ScalerItemGroups.FINDLAST THEN
                                    RawSalesData."Scaler Code" := ScalerItemGroups."Scaler Code";
                                  IF "High Unit Price" <> 0 THEN
                                      RawSalesData."Scaler Value" := LastSalesPrice."Last Unit Price"/"High Unit Price";
                                  RawSalesData.INSERT;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      RawSalesData@1000000000 : Record 50050;
      LastSalesPrice@1000000001 : Record 50004;
      ScalerItemGroups@1000000002 : Record 50051;
      SCItemGrpFilter@1000000003 : Record 50051;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns:cl="http://schemas.microsoft.com/sqlserver/reporting/2010/01/componentdefinition" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <Code>Public Function BlankZero(ByVal Value As Decimal)
    if Value = 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankPos(ByVal Value As Decimal)
    if Value &gt; 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankZeroAndPos(ByVal Value As Decimal)
    if Value &gt;= 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankNeg(ByVal Value As Decimal)
    if Value &lt; 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankNegAndZero(ByVal Value As Decimal)
    if Value &lt;= 0 then
        Return ""
    end if
    Return Value
End Function
</Code>
  <Language>=User!Language</Language>
  <ConsumeContainerWhitespace>true</ConsumeContainerWhitespace>
  <rd:ReportID>0eeb6585-38ae-40f1-885b-8d50088d51b4</rd:ReportID>
  <rd:ReportUnitType>Inch</rd:ReportUnitType>
</Report>
    END_OF_RDLDATA
  }
}

