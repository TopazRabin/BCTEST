OBJECT Report 51455 Update Customer Campaign
{
  OBJECT-PROPERTIES
  {
    Date=07/01/20;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=TPZ000.00.00;
  }
  PROPERTIES
  {
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF (SalesTypeFilter)  IN [SalesTypeFilter::Customer,SalesTypeFilter::"Customer Price Group"] THEN
                    IF SalesCodeFilter = '' THEN
                      ERROR('Sales Code filter must not be blank in case of Customer and Customer Price Group Sales Filter');

                  IF CampaignFilter = '' THEN
                      ERROR('Campaign Filter must not be blank to update Customer Campaign');
                END;

    OnPostReport=BEGIN

                   MESSAGE('Customers Campaign Successfully Updated');
                 END;

  }
  DATASET
  {
    { 1000000000;;DataItem;                  ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnAfterGetRecord=BEGIN

                                  CASE SalesTypeFilter OF
                                    SalesTypeFilter::Customer:
                                     BEGIN
                                      Campaign.RESET;
                                      Campaign.SETFILTER("No.",CampaignFilter);
                                      IF Campaign.FINDSET THEN
                                       REPEAT
                                        Cust.RESET;
                                        Cust.SETFILTER("No.",SalesCodeFilter);
                                        IF Cust.FINDSET THEN
                                         REPEAT
                                          IF NOT CustomerCampaign.GET (Cust."No.",Campaign."No.") THEN BEGIN
                                              CustomerCampaign.INIT;
                                              CustomerCampaign."Customer No." := Cust."No.";
                                              CustomerCampaign."Campaign No." := Campaign."No.";
                                              CustomerCampaign.INSERT(TRUE);
                                          END;
                                         UNTIL Cust.NEXT = 0;
                                       UNTIL Campaign.NEXT = 0;
                                     END;
                                    SalesTypeFilter::"Customer Price Group":
                                     BEGIN
                                      Campaign.RESET;
                                      Campaign.SETFILTER("No.",CampaignFilter);
                                      IF Campaign.FINDSET THEN
                                       REPEAT
                                        Cust.RESET;
                                        Cust.SETFILTER("Customer Price Group",SalesCodeFilter);
                                        IF Cust.FINDSET THEN
                                         REPEAT
                                          IF NOT CustomerCampaign.GET (Cust."No.",Campaign."No.") THEN BEGIN
                                              CustomerCampaign.INIT;
                                              CustomerCampaign."Customer No." := Cust."No.";
                                              CustomerCampaign."Campaign No." := Campaign."No.";
                                              CustomerCampaign.INSERT(TRUE);
                                          END;
                                         UNTIL Cust.NEXT = 0;
                                       UNTIL Campaign.NEXT = 0;
                                     END;
                                    SalesTypeFilter::"All Customers":
                                     BEGIN
                                      Campaign.RESET;
                                      Campaign.SETFILTER("No.",CampaignFilter);
                                      IF Campaign.FINDSET THEN
                                       REPEAT
                                        Cust.RESET;
                                        IF Cust.FINDSET THEN
                                         REPEAT
                                          IF NOT CustomerCampaign.GET (Cust."No.",Campaign."No.") THEN BEGIN
                                              CustomerCampaign.INIT;
                                              CustomerCampaign."Customer No." := Cust."No.";
                                              CustomerCampaign."Campaign No." := Campaign."No.";
                                              CustomerCampaign.INSERT(TRUE);
                                          END;
                                         UNTIL Cust.NEXT = 0;
                                       UNTIL Campaign.NEXT = 0;
                                     END;
                                  END;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   SalesCodeFilterCtrlEnable := TRUE;
                 END;

    }
    CONTROLS
    {
      { 1000000003;0;Container;
                  ContainerType=ContentArea }

      { 1000000002;1;Group  ;
                  CaptionML=[ENU=Option;
                             ESM=General;
                             FRC=G‚n‚ral;
                             ENC=General];
                  GroupType=Group }

      { 1000000001;2;Field  ;
                  CaptionML=[ENU=Sales Type Filter;
                             ESM=Filtro tipo ventas;
                             FRC=Filtre type vente;
                             ENC=Sales Type Filter];
                  ToolTipML=[ENU=Specifies a filter for which sales prices to display.;
                             ESM=Especifica un filtro para indicar qu‚ precios de venta se deben mostrar.;
                             FRC=Sp‚cifie un filtre pour choisir les prix de vente … afficher.;
                             ENC=Specifies a filter for which sales prices to display.];
                  OptionCaptionML=[ENU=Customer,Customer Price Group,All Customers,Campaign,None;
                                   ESM=Cliente,Grupo precio cliente,Todos los clientes,Campa¤a,Ninguno;
                                   FRC=Client,Groupe prix client,Tous les clients,Campagne,Aucun;
                                   ENC=Customer,Customer Price Group,All Customers,Campaign,None];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=SalesTypeFilter;
                  OnValidate=BEGIN
                               IF SalesTypeFilter IN [SalesTypeFilter::"All Customers"] THEN BEGIN
                                 SalesCodeFilterCtrlEnable := FALSE;
                                 SalesCodeFilter := '';
                               END ELSE
                                 SalesCodeFilterCtrlEnable := TRUE;
                             END;
                              }

      { 1000000000;2;Field  ;
                  Name=SalesCodeFilterCtrl;
                  CaptionML=[ENU=Sales Code Filter;
                             ESM=Filtro c¢d. ventas;
                             FRC=Filtre code vente;
                             ENC=Sales Code Filter];
                  ToolTipML=[ENU=Specifies a filter for which sales prices to display.;
                             ESM=Especifica un filtro para indicar qu‚ precios de venta se deben mostrar.;
                             FRC=Sp‚cifie un filtre pour choisir les prix de vente … afficher.;
                             ENC=Specifies a filter for which sales prices to display.];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=SalesCodeFilter;
                  Enabled=SalesCodeFilterCtrlEnable;
                  OnLookup=VAR
                             CustList@1005 : Page 22;
                             CustPriceGrList@1004 : Page 7;
                             CampaignList@1002 : Page 5087;
                           BEGIN
                             IF SalesTypeFilter = SalesTypeFilter::"All Customers" THEN
                               EXIT;

                             CASE SalesTypeFilter OF
                               SalesTypeFilter::Customer:
                                 BEGIN
                                   CustList.LOOKUPMODE := TRUE;
                                   IF CustList.RUNMODAL = ACTION::LookupOK THEN
                                     Text := CustList.GetSelectionFilter
                                   ELSE
                                     EXIT(FALSE);
                                 END;
                               SalesTypeFilter::"Customer Price Group":
                                 BEGIN
                                   CustPriceGrList.LOOKUPMODE := TRUE;
                                   IF CustPriceGrList.RUNMODAL = ACTION::LookupOK THEN
                                     Text := CustPriceGrList.GetSelectionFilter
                                   ELSE
                                     EXIT(FALSE);
                                 END;
                             END;

                             EXIT(TRUE);
                           END;
                            }

      { 1000000004;2;Field  ;
                  CaptionML=ENU=Campaign Filter;
                  SourceExpr=CampaignFilter;
                  OnLookup=VAR
                             CampaignList@1000000000 : Page 5087;
                           BEGIN
                             CampaignList.LOOKUPMODE := TRUE;
                             IF CampaignList.RUNMODAL = ACTION::LookupOK THEN
                               Text := CampaignList.GetSelectionFilter
                             ELSE
                               EXIT(FALSE);

                             EXIT(TRUE);
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Cust@1000000015 : Record 18;
      CustPriceGr@1000000014 : Record 6;
      Campaign@1000000013 : Record 5071;
      CustomerCampaign1@1000000019 : Record 50053;
      CustomerCampaign@1000000018 : Record 50053;
      SalesTypeFilter@1000000012 : 'Customer,Customer Price Group,All Customers';
      SalesCodeFilter@1000000011 : Text;
      CampaignFilter@1000000006 : Text;
      ItemNoFilter@1000000010 : Text;
      StartingDateFilter@1000000009 : Text[30];
      CurrencyCodeFilter@1000000008 : Text;
      SalesCodeFilterCtrlEnable@1000000007 : Boolean INDATASET;
      IsLookupMode@1000000005 : Boolean;
      SalesTypeControlEditable@1000000004 : Boolean;
      SalesCodeControlEditable@1000000003 : Boolean;
      ItemNoControlEditable@1000000002 : Boolean;
      StartingDateControlEditable@1000000001 : Boolean;
      CurrencyCodeControlEditable@1000000000 : Boolean;
      Text000@1000000017 : TextConst 'ENU=All Customers;ESM=Todos clientes;FRC=Tous les clients;ENC=All Customers';
      Text001@1000000016 : TextConst 'ENU=No %1 within the filter %2.;ESM=El filtro %2 no contiene %1.;FRC=Aucun %1 dans le filtre %2.;ENC=No %1 within the filter %2.';

    BEGIN
    {
      2019-10-30 TPZ2658 UCHOUHAN
        Create bew report to updatw Customer Campaign.
    }
    END.
  }
  RDLDATA
  {
  }
}

