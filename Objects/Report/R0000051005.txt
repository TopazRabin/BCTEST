OBJECT Report 51005 Import Min Max
{
  OBJECT-PROPERTIES
  {
    Date=07/01/20;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=TPZ000.00.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Import Sales Line Multiplier;
    ProcessingOnly=Yes;
    OnPostReport=BEGIN
                   ExcelBuff.LOCKTABLE;
                   ExcelBuff.OpenBook(ServerFileName,SheetName);
                   ExcelBuff.ReadSheet;

                   AnalyzeData;

                   ExcelBuff.DELETEALL;
                 END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnQueryClosePage=VAR
                         FileMgt@1000000000 : Codeunit 419;
                       BEGIN
                         IF CloseAction = ACTION::OK THEN BEGIN
                           ServerFileName := FileMgt.UploadFile(Text51000,ExcelExtensionTok);
                           IF ServerFileName = '' THEN
                             EXIT(FALSE);

                           SheetName := ExcelBuff.SelectSheetsName(ServerFileName);
                           IF SheetName = '' THEN
                             EXIT(FALSE);
                         END;
                       END;

    }
    CONTROLS
    {
      { 1000000001;;Container;
                  ContainerType=ContentArea }

      { 1000000002;1;Group  ;
                  CaptionML=ENU=Options;
                  GroupType=Group }

      { 1000000000;2;Field  ;
                  CaptionML=ENU=Action Type;
                  SourceExpr=ActionType }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Customer@1000000009 : Record 18;
      ItemDiscGroup@1000000008 : Record 341;
      SalesLineDisc@1000000014 : Record 7004;
      SalesLineDisc2@1000000012 : Record 7004;
      ExcelBuff@1000000000 : Record 370;
      ActionType@1000000015 : 'Import,Delete';
      Window@1000000006 : Dialog;
      ServerFileName@1000000002 : Text;
      SheetName@1000000001 : Text[250];
      Text51000@1000000004 : TextConst 'ENU=Import Excel File;ESM=Importar fich. Excel;FRC=Importer fichier Excel;ENC=Import Excel File';
      Text51001@1000000005 : TextConst 'ENU=Importing Data...\\;ESM=Analizar Datos...\\;FRC=Analyse des donn‚es...\\;ENC=Analysing Data...\\';
      ExcelExtensionTok@1000000003 : TextConst '@@@={Locked};ENU=.xlsx;ESM=.xlsx;FRC=.xlsx;ENC=.xlsx';
      RecNo@1000000007 : Integer;
      TotalRecNo@1000000010 : Integer;
      RowNo@1000000011 : Integer;
      Item@1000000013 : Record 27;
      StockKeepingUnit@1000000016 : Record 5700;
      LocationNo@1000000017 : Code[10];
      location@1000000018 : Record 14;

    LOCAL PROCEDURE AnalyzeData@2();
    VAR
      ItemDiscGroupFound@1000000005 : Boolean;
      CustomerFound@1000000008 : Boolean;
      CustomerNo@1000000006 : Code[20];
      ItemDiscGroupCode@1000000000 : Code[20];
      Multiplier@1000000002 : Decimal;
      StartingDate@1000000003 : Date;
      ItemNo@1000000001 : Code[20];
      ItemNoFound@1000000004 : Boolean;
      MinInvQty@1000000007 : Text[10];
      MaxInvQty@1000000009 : Text[10];
      LocationNoFound@1000000011 : Boolean;
      ReplenishmentModel@1000000010 : Text[20];
    BEGIN
      Window.OPEN(Text51000 + '@1@@@@@@@@@@@@@@@@@@@@@@@@@\');
      TotalRecNo := ExcelBuff.COUNT;

      IF ExcelBuff.FIND('-') THEN
        REPEAT
          RecNo := RecNo + 1;
          Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));

          IF ExcelBuff."Row No." <> RowNo THEN BEGIN
            RowNo := ExcelBuff."Row No.";
            ItemNoFound := FALSE;
            LocationNoFound := FALSE;
          END;

          IF ExcelBuff."Row No." <> 1 THEN
            CASE ExcelBuff."Column No." OF
              1:
                BEGIN
                  ItemNo := DELCHR(ExcelBuff."Cell Value as Text",'=',',');
                  ItemNoFound := Item.GET(ItemNo);
                  IF NOT ItemNoFound THEN
                    ERROR('Item %1 Not Found',ItemNoFound);
                 END;
              2:
                BEGIN
                  LocationNo := DELCHR(ExcelBuff."Cell Value as Text",'=',',');
                     LocationNoFound:=location.GET(LocationNo);
                    IF NOT LocationNoFound THEN
                      ERROR('Location %1 Not Found',ItemNoFound);
                END;
               3:
                BEGIN
                  MinInvQty := DELCHR(ExcelBuff."Cell Value as Text",'=',',');
                  IF MinInvQty<>'' THEN
                    IF ItemNoFound AND LocationNoFound THEN BEGIN
                        StockKeepingUnit.GET(LocationNo,ItemNo,'');
                        EVALUATE(StockKeepingUnit."Minimum Inventory",FORMAT(MinInvQty));
                        StockKeepingUnit.MODIFY(TRUE);
                    END;
                 END;
              4:
                BEGIN
                  MaxInvQty := DELCHR(ExcelBuff."Cell Value as Text",'=',',');
                  IF MaxInvQty<>'' THEN
                    IF ItemNoFound AND LocationNoFound THEN BEGIN
                       StockKeepingUnit.GET(LocationNo,ItemNo,'');
                       EVALUATE(StockKeepingUnit."Maximum Inventory",FORMAT(MaxInvQty));
                       StockKeepingUnit.MODIFY(TRUE);
                    END;
                 END;
              5:
                BEGIN
                  ReplenishmentModel := DELCHR(ExcelBuff."Cell Value as Text",'=',',');
                    IF ItemNoFound AND LocationNoFound THEN BEGIN
                       StockKeepingUnit.GET(LocationNo,ItemNo,'');
                       IF ReplenishmentModel='0'THEN
                          ReplenishmentModel:='';
                       EVALUATE(StockKeepingUnit."Replenishment Model",FORMAT(ReplenishmentModel));
                       StockKeepingUnit.MODIFY(TRUE);
                    END;
                 END;

              END;
       UNTIL ExcelBuff.NEXT = 0;
      Window.CLOSE;
    END;

    BEGIN
    {
      2016-04-11 TPZ1336 EBAGIM
        Report has been created
    }
    END.
  }
  RDLDATA
  {
  }
}

