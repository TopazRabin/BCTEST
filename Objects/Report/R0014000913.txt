OBJECT Report 14000913 E-Mail List Entry E-Mail
{
  OBJECT-PROPERTIES
  {
    Date=06/28/17;
    Time=12:00:00 PM;
    Version List=SE0.60.03;
  }
  PROPERTIES
  {
    CaptionML=ENU=E-Mail List Entry E-Mail;
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 9477;    ;DataItem;                    ;
               DataItemTable=Table14000908;
               OnPreDataItem=BEGIN
                               EMailHeader.GET(EMailCode);

                               ShowStatus := FALSE;

                               IF ShowStatus THEN
                                 Window.OPEN(
                                   Text001 +
                                   Text002);
                             END;

               OnAfterGetRecord=BEGIN
                                  CLEAR(FieldValue);

                                  EMailSetup.GET;

                                  IF NOT GetInitialRecords THEN BEGIN
                                    ModifyRecords;
                                    EXIT;
                                  END;

                                  IF EMailHeader."Line Break Character" <> '' THEN
                                    MailInt.LineFeedChar := EMailHeader."Line Break Character";

                                  // Create Subject Line
                                  IF ShowStatus THEN
                                    Window.UPDATE(1,Text003);
                                  MailInt.InitializeMail(FieldValue.SubstituteHeader(EMailHeader));

                                  // Address the mail
                                  IF ShowStatus THEN
                                    Window.UPDATE(1,Text004);
                                  MailInt.AddReceiverTo("E-Mail List Entry"."E-Mail");

                                  // Create the body of the E-Mail
                                  RecordFound[1] := TRUE;
                                  LastLevel := 1;
                                  LastType := 0;
                                  EMailLine.RESET;
                                  EMailLine.SETRANGE("E-Mail Code",EMailHeader.Code);
                                  IF EMailLine.FIND('-') THEN
                                    REPEAT
                                      IF ShowStatus THEN
                                        Window.UPDATE(1,EMailLine.Text);
                                      EMailLine.TESTFIELD(Level);

                                      // Handle Higher Level
                                      IF LastLevel < EMailLine.Level THEN BEGIN
                                        GetFirstRecordInLoop(EMailLine.Level);
                                        FirstOnLevel[EMailLine.Level] := TRUE;
                                        EMailLineFirstOnLevel[EMailLine.Level] := EMailLine;
                                      END;

                                      // Handle Skip Level if no records
                                      IF FirstOnLevel[EMailLine.Level] AND
                                         NOT RecordFound[EMailLine.Level] AND
                                         EMailLine."Include only level if details"
                                      THEN BEGIN
                                        EMailLine.SETFILTER(Level,'<%1',EMailLine.Level);
                                        Finished := EMailLine.NEXT = 0;
                                        EMailLine.SETRANGE(Level);
                                      END ELSE BEGIN
                                        // Substitute Values in Line and add to E-Mail
                                        IF (EMailLine.Type <> EMailLine.Type::Loop) OR
                                           RecordFound[EMailLine.Level]
                                        THEN
                                          MailInt.AddtoBody(FieldValue.SubstituteLine(EMailLine));

                                        // Get Next E-Mail Line
                                        LastType := EMailLine.Type;
                                        LastLevel := EMailLine.Level;
                                        Finished := EMailLine.NEXT = 0;

                                        // Handle Loop End or Return to Lower Level
                                        IF (LastType = EMailLine.Type::Loop) AND
                                           (((EMailLine.Type <> EMailLine.Type::Loop) AND
                                             (LastLevel = EMailLine.Level)) OR
                                            (LastLevel > EMailLine.Level)) AND
                                           RecordFound[LastLevel]
                                        THEN BEGIN
                                          GetNextRecordInLoop(LastLevel);

                                          // Repeat Loop if Record found
                                          IF RecordFound[LastLevel] THEN BEGIN
                                            EMailLine := EMailLineFirstOnLevel[LastLevel];
                                            EMailLine.SETRANGE(Type,EMailLine.Type::Loop);
                                            EMailLine.NEXT;
                                            EMailLine.SETRANGE(Type);
                                          END;
                                        END;
                                      END;

                                      FirstOnLevel[EMailLine.Level] := FALSE;
                                    UNTIL Finished;

                                  // Create and add attachment
                                  IF ShowStatus THEN
                                    Window.UPDATE(1,Text005);
                                  EMailAttachmentTmp.DELETEALL;
                                  EMailAttachment.RESET;
                                  EMailAttachment.SETRANGE("E-Mail Code",EMailHeader.Code);
                                  IF EMailAttachment.FIND('-') THEN BEGIN
                                    EMailSetup.TESTFIELD("E-Mail Buffer Directory");

                                    REPEAT
                                      CASE EMailAttachment.Type OF
                                        EMailAttachment.Type::Report:
                                          BEGIN
                                            EMailAttachment.TESTFIELD("Attachment Name");
                                            EMailAttachment.TESTFIELD("Attachment Report ID");

                                            TempFilename := EMailSetup."E-Mail Buffer Directory";
                                            IF COPYSTR(TempFilename,STRLEN(TempFilename),1) <> '\' THEN
                                              TempFilename := TempFilename + '\';
                                            TempFilename := TempFilename + FieldValue.SubstituteAttachment(EMailAttachment);

                                            SaveReport(EMailAttachment."Attachment Report ID",TempFilename);
                                            MailInt.AddAttachment(TempFilename);

                                            EMailAttachmentTmp := EMailAttachment;
                                            EMailAttachmentTmp."Use Attachment File Name" := TempFilename;
                                            EMailAttachmentTmp.INSERT;
                                          END;
                                        EMailAttachment.Type::"Fixed File":
                                          BEGIN
                                            IF NOT EXISTS(EMailAttachment."Fixed File Name") THEN
                                              ERROR(Text006,EMailAttachment."Fixed File Name");

                                            MailInt.AddAttachment(EMailAttachment."Fixed File Name");
                                          END;
                                      END;
                                    UNTIL EMailAttachment.NEXT = 0;
                                  END;

                                  // Send e-mail
                                  IF ShowStatus THEN
                                    Window.UPDATE(1,Text007);
                                  MailInt.Send(EMailHeader."Confirm E-Mail manually");

                                  CLEAR(MailInt);

                                  IF EMailAttachmentTmp.FIND('-') THEN
                                    REPEAT
                                      MailInt.DeleteAttachment(EMailAttachmentTmp."Use Attachment File Name");
                                    UNTIL EMailAttachmentTmp.NEXT = 0;

                                  // Update the Records
                                  ModifyRecords;
                                END;

               OnPostDataItem=BEGIN
                                IF ShowStatus THEN
                                  Window.CLOSE;
                              END;

               ReqFilterFields=Table ID,Type,Code }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CompanyInformation@1000000000 : Record 79;
      EMailSetup@1000000001 : Record 14000905;
      EMailRule@1000000002 : Record 14000907;
      EMailHeader@1000000003 : Record 14000901;
      EMailLine@1000000004 : Record 14000902;
      EMailLineFirstOnLevel@1000000005 : ARRAY [10] OF Record 14000902;
      EMailAttachment@1000000016 : Record 14000909;
      EMailAttachmentTmp@1000000017 : TEMPORARY Record 14000909;
      FieldValue@1000000006 : Codeunit 14000901;
      MailInt@1000000007 : Codeunit 14000905;
      Window@1000000008 : Dialog;
      RecordFound@1000000009 : ARRAY [10] OF Boolean;
      FirstOnLevel@1000000010 : ARRAY [10] OF Boolean;
      Finished@1000000011 : Boolean;
      ShowStatus@1000000012 : Boolean;
      LastLevel@1000000013 : Integer;
      LastType@1000000014 : Integer;
      EMailCode@1000000015 : Code[10];
      TempFilename@1000000018 : Text[250];
      Text001@1001 : TextConst 'ENU=Creating E-Mail\';
      Text002@1002 : TextConst 'ENU=Current Line #1##################';
      Text003@1003 : TextConst 'ENU=Subject';
      Text004@1004 : TextConst 'ENU=Addressing';
      Text005@1005 : TextConst 'ENU=Attachments';
      Text006@1006 : TextConst 'ENU=Attachment file %1 do not exists.';
      Text007@1007 : TextConst 'ENU=Sending';
      Text008@1008 : TextConst 'ENU=Level   Table\';
      Text009@1009 : TextConst 'ENU=Other tables\';
      Text010@1010 : TextConst 'ENU=Company Information (79), E-Mail List Entry (14000908)';
      Text011@1011 : TextConst 'ENU=%1 is not a supported level.';

    PROCEDURE InitializeRequest@1(NewEMailCode@1000000000 : Code[10]);
    BEGIN
      EMailCode := NewEMailCode;

      IF NewEMailCode = 'SHOWHELP' THEN
        MESSAGE(
          Text008 +
          Text009 +
          Text010);
    END;

    PROCEDURE GetLevelName@5(LevelNo@1000000000 : Integer) : Text[30];
    BEGIN
      CASE LevelNo OF
        ELSE
          EXIT('');
      END;
    END;

    PROCEDURE GetTableFilter@6() : Text[250];
    BEGIN
      EXIT('79|14000901|14000908');
    END;

    PROCEDURE GetRecordNoStrMenu@9(CurrentTableNo@1000000000 : Integer) : Text[250];
    BEGIN
      CASE CurrentTableNo OF
        ELSE
          EXIT('');
      END;
    END;

    LOCAL PROCEDURE GetInitialRecords@2() : Boolean;
    BEGIN
      // Get and Load values
      FieldValue.EMailListEntry_14000908("E-Mail List Entry",0);
      CompanyInformation.GET;
      FieldValue.CompanyInformation_79(CompanyInformation,0);

      FieldValue.EMailHeader_14000901(EMailHeader,0);

      // Test That a Mail should be sent
      EXIT("E-Mail List Entry"."E-Mail" <> '');
    END;

    LOCAL PROCEDURE ModifyRecords@7();
    BEGIN
    END;

    LOCAL PROCEDURE GetFirstRecordInLoop@3(CurrentLevel@1000000000 : Integer);
    BEGIN
      CASE CurrentLevel OF
        ELSE
          ERROR(Text011,CurrentLevel);
      END;
    END;

    LOCAL PROCEDURE GetNextRecordInLoop@4(CurrentLevel@1000000000 : Integer);
    BEGIN
      CASE CurrentLevel OF
        ELSE
          ERROR(Text011,CurrentLevel);
      END;
    END;

    PROCEDURE SaveReport@8(ReportNo@1000000000 : Integer;VAR SaveFileName@1000000001 : Text[250]);
    VAR
      TempEMailListEntry@1000000002 : Record 14000908;
    BEGIN
      TempEMailListEntry := "E-Mail List Entry";
      TempEMailListEntry.SETRECFILTER;
      IF ISSERVICETIER THEN BEGIN
        EMailSetup.ChangeFilenameToPDF(SaveFileName);
        REPORT.SAVEASPDF(ReportNo,SaveFileName,TempEMailListEntry);
      END ELSE
        REPORT.SAVEASHTML(ReportNo,SaveFileName,TempEMailListEntry);
    END;

    BEGIN
    {
      The Code that customize the running of the report should be done in the 4 triggers
      GetInitialRecords
        This is where all the values needed for the general information in the E-Mail are retrived.
        Additional tables could be added in the information was needed.

      ModifyRecords
        This is the final step, where the status of some records are modified. This could be used to
        change a field telling that the E-Mail has been sent.

      GetFirstRecordInLoop
        This will get the first record in each level. This also adjust some variables and contol that the
        flow of multilevel tables are correct. Like the printing of Posted Container/Posted Container Line.

      GetNextRecordInLoop
        This will retrieve the next record for each level.

      SaveReport
        This will run and save a specific report in HTML or PDF(only for NAV 2009 RTC and higher).
    }
    END.
  }
  RDLDATA
  {
  }
}

