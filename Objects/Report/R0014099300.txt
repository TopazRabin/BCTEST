OBJECT Report 14099300 E.D.I. Suggested XML Map
{
  OBJECT-PROPERTIES
  {
    Date=07/07/17;
    Time=12:00:00 PM;
    Version List=SE0.60.14;
  }
  PROPERTIES
  {
    CaptionML=ENU=E.D.I. Suggested XML Map;
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 1534;    ;DataItem;                    ;
               DataItemTable=Table14002353;
               OnAfterGetRecord=BEGIN
                                  EDISegment.RESET;
                                  EDISegment.SETRANGE("Trade Partner No.","E.D.I. Document"."Trade Partner No.");
                                  EDISegment.SETRANGE("Navision Document","E.D.I. Document"."Navision Document");
                                  EDISegment.SETRANGE("EDI Document No.","E.D.I. Document"."EDI Document No.");
                                  EDISegment.SETRANGE(Version,"E.D.I. Document".Version);
                                  IF EDISegment.FIND('-') THEN BEGIN
                                    IF CONFIRM(
                                      Text001 +
                                      Text002)
                                    THEN BEGIN
                                      EDISegment.RESET;
                                      EDISegment.SETRANGE("Trade Partner No.","E.D.I. Document"."Trade Partner No.");
                                      EDISegment.SETRANGE("Navision Document","E.D.I. Document"."Navision Document");
                                      EDISegment.SETRANGE("EDI Document No.","E.D.I. Document"."EDI Document No.");
                                      EDISegment.SETRANGE(Version,"E.D.I. Document".Version);
                                      EDISegment.DELETEALL(TRUE);
                                    END ELSE
                                      ERROR(Text003);
                                  END;
                                  IF FileName = '' THEN
                                    ERROR(Text004)
                                  ELSE BEGIN
                                    IF "E.D.I. Document".Type = "E.D.I. Document".Type::Import THEN
                                      InboundMap := TRUE
                                    ELSE
                                      InboundMap := FALSE;
                                    EDIGetXMLStructure.GenerateStructureFromPath(
                                      FileName,"E.D.I. Document",SetLineBegin,DetailBeginNode,FirstSummaryNode,NodeValueLength);
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                "E.D.I. Document"."Mapping Mode" := "E.D.I. Document"."Mapping Mode"::XML;
                                MODIFY;
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1240020000;2;Field  ;
                  Name=FileName;
                  AssistEdit=Yes;
                  CaptionML=ENU=File Name;
                  SourceExpr=FileName;
                  OnAssistEdit=VAR
                                 FileSystemObject@1240020009 : Automation "{420B2830-E718-11CF-893D-00A0C9054228} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Microsoft Scripting Runtime'.FileSystemObject";
                                 TempFile@1240020006 : Text[250];
                                 IStream@1240020003 : InStream;
                               BEGIN
                                 IF ISCLEAR(FileSystemObject) THEN
                                   CREATE(FileSystemObject,FALSE,ISSERVICETIER);
                                 IF UPLOADINTOSTREAM('Import','','All Files (*.*)|*.*',TempFile,IStream) THEN
                                   FileName := TempFile;
                               END;
                                }

      { 1240020001;2;Field  ;
                  CaptionML=ENU=Detail Node;
                  SourceExpr=DetailBeginNode }

      { 1240020003;2;Field  ;
                  CaptionML=ENU=LINE BEGIN Command;
                  SourceExpr=SetLineBegin }

      { 1240020002;2;Field  ;
                  CaptionML=ENU=Node Value Length;
                  SourceExpr=NodeValueLength }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text001@1240020025 : TextConst 'ENU=XML Node records exist for this document.\';
      Text002@1240020024 : TextConst 'ENU=Do you want to recreate xml node records?';
      Text003@1240020023 : TextConst 'ENU=XML node records not created.';
      Text004@1240020026 : TextConst 'ENU=File name must be entered';
      EDISegment@1240020027 : Record 14002354;
      EDIGetXMLStructure@1240020042 : Codeunit 14099303;
      FileName@1240020022 : Text[250];
      XMLDocIn@1240020020 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      XMLNode@1240020019 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ReaderSettings@1240020033 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlReaderSettings";
      i@1240020015 : Integer;
      DetailBeginNode@1240020030 : Text[250];
      FirstSummaryNode@1240020044 : Text[250];
      SetLineBegin@1240020031 : Boolean;
      TextTesting@1240020038 : TextConst 'ENU=Node name %1 node value %2';
      SegCounter@1240020039 : Integer;
      InboundMap@1240020040 : Boolean;
      NodeValueLength@1240020048 : Integer;

    EVENT XMLDocIn@1240020020::NodeInserting@93(sender@1240020001 : Variant;e@1240020000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT XMLDocIn@1240020020::NodeInserted@94(sender@1240020001 : Variant;e@1240020000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT XMLDocIn@1240020020::NodeRemoving@95(sender@1240020001 : Variant;e@1240020000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT XMLDocIn@1240020020::NodeRemoved@96(sender@1240020001 : Variant;e@1240020000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT XMLDocIn@1240020020::NodeChanging@97(sender@1240020001 : Variant;e@1240020000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT XMLDocIn@1240020020::NodeChanged@98(sender@1240020001 : Variant;e@1240020000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT ReaderSettings@1240020033::ValidationEventHandler@28(sender@1240020001 : Variant;e@1240020000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.Schema.ValidationEventArgs");
    BEGIN
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

