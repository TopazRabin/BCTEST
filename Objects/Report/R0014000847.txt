OBJECT Report 14000847 Receive Line Label
{
  OBJECT-PROPERTIES
  {
    Date=06/28/17;
    Time=12:00:00 PM;
    Version List=SE0.55.12;
  }
  PROPERTIES
  {
    CaptionML=ENU=Receive Line Label;
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 5925;    ;DataItem;                    ;
               DataItemTable=Table14000602;
               OnPreDataItem=BEGIN
                               ReceiveStation.GetReceiveStation;

                               LabelHeader.GET(LabelHeader.Code);

                               IF "Receive Line".GETFILTERS = '' THEN
                                 CurrReport.BREAK;

                               Window.OPEN(
                                 Text001 +
                                 Text002);
                             END;

               OnAfterGetRecord=BEGIN
                                  Window.UPDATE(1,"No.");
                                  Window.UPDATE(2,Description);

                                  Receive.GET("Receive No.");
                                  PrintReceiveLine(FALSE);
                                END;

               OnPostDataItem=BEGIN
                                IF "Receive Line".GETFILTERS <> '' THEN
                                  Window.CLOSE;
                              END;

               ReqFilterFields=Receive No.,Line No. }

    { 1735;    ;DataItem;                    ;
               DataItemTable=Table14000604;
               OnPreDataItem=BEGIN
                               IF "Receive Line".GETFILTERS <> '' THEN
                                 CurrReport.BREAK;

                               Window.OPEN(
                                 Text001 +
                                 Text002);
                             END;

               OnAfterGetRecord=BEGIN
                                  Window.UPDATE(1,"No.");
                                  Window.UPDATE(2,Description);

                                  PostedReceive.GET("Receive No.");
                                  Receive.TRANSFERFIELDS(PostedReceive);
                                  "Receive Line".TRANSFERFIELDS("Posted Receive Line");
                                  PrintReceiveLine(TRUE);
                                END;

               OnPostDataItem=BEGIN
                                IF "Receive Line".GETFILTERS = '' THEN
                                  Window.CLOSE;
                              END;

               ReqFilterFields=Receive No.,Line No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 3   ;2   ;Field     ;
                  CaptionML=ENU=Number of Copies;
                  SourceExpr=NoOfCopies }

      { 5   ;2   ;Field     ;
                  CaptionML=ENU=Label Code;
                  SourceExpr=LabelHeader.Code;
                  TableRelation="Label Header" WHERE (Label Usage=CONST(Receive Line)) }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ReceiveStation@1240030001 : Record 14000608;
      LabelHeader@1240030002 : Record 14000841;
      LabelLine@1240030003 : Record 14000842;
      Receive@1240030004 : Record 14000601;
      PostedReceive@1240030005 : Record 14000603;
      LabelMgt@1240030006 : Codeunit 14000841;
      FieldValue@1240030007 : Codeunit 14000843;
      Window@1240030008 : Dialog;
      NoOfCopies@1240030009 : Integer;
      Text001@1001 : TextConst 'ENU=No.        #1######################\';
      Text002@1002 : TextConst 'ENU=Descrition #2######################';
      Text003@1003 : TextConst 'ENU=%1 %2 Label';
      Text004@1004 : TextConst 'ENU=Item (27) Receive (14000601) Receive Line (14000602)\';
      Text005@1240030010 : TextConst 'ENU=Item Variant (5401), Item Un it of Measure (5404),\';
      Text006@1240030011 : TextConst 'ENU=Serial No. Information (6504) and Lot No. Information (6505)\';
      Text007@1240030012 : TextConst 'ENU=are available, but can be empty depending on information in the line.';

    PROCEDURE PrintReceiveLine@1(Posted@1240030000 : Boolean);
    VAR
      Item@1240030001 : Record 27;
      ItemVariant@1240030005 : Record 5401;
      ItemUnitOfMeasure@1240030006 : Record 5404;
      SerialNoInformation@1240030007 : Record 6504;
      LotNoInformation@1240030008 : Record 6505;
      OutputFile@1240030002 : File;
      Value@1240030004 : Text[1000];
      LabelFileName@1240030003 : Text[250];
    BEGIN
      CLEAR(FieldValue);
      FieldValue.Receive_14000601(Receive,0);
      FieldValue.ReceiveLine_14000602("Receive Line",0);

      CLEAR(Item);
      IF ("Receive Line".Type = "Receive Line".Type::Item) AND ("Receive Line"."No." <> '') THEN
        IF NOT Item.GET("Receive Line"."No.") THEN
          ;
      FieldValue.Item_27(Item,0);
      IF NOT ItemVariant.GET("Receive Line"."No.","Receive Line"."Variant Code") THEN
        ItemVariant.INIT;
      FieldValue.ItemVariant_5401(ItemVariant,0);
      IF NOT ItemUnitOfMeasure.GET("Receive Line"."No.","Receive Line"."Unit of Measure Code") THEN
        ItemUnitOfMeasure.INIT;
      FieldValue.ItemUnitofMeasure_5404(ItemUnitOfMeasure,0);
      IF NOT SerialNoInformation.GET(
               "Receive Line"."No.","Receive Line"."Variant Code","Receive Line"."Serial No.")
      THEN
        SerialNoInformation.INIT;
      FieldValue.SerialNoInformation_6504(SerialNoInformation,0);
      IF NOT LotNoInformation.GET(
               "Receive Line"."No.","Receive Line"."Variant Code","Receive Line"."Lot No.")
      THEN
        LotNoInformation.INIT;
      FieldValue.LotNoInformation_6505(LotNoInformation,0);
      FieldValue.ReceiveStation_14000608(ReceiveStation,0);

      // Additional tables can be loaded here.

      ReceiveStation.TESTFIELD("Label Buffer File");
      LabelFileName := ReceiveStation.CalcLabelFileName(ReceiveStation."Label Buffer File");

      OutputFile.TEXTMODE(TRUE);
      OutputFile.CREATE(LabelFileName);

      FieldValue.LabelHeader_14000841(LabelHeader,0);
      LabelMgt.LabelFileTop(LabelHeader,OutputFile);

      LabelLine.RESET;
      LabelLine.SETRANGE("Label Code",LabelHeader.Code);
      IF LabelLine.FIND('-') THEN
        REPEAT
          FieldValue.LabelLine_14000842(LabelLine,0);
          Value := FieldValue.SubstituteLine(LabelLine);

          LabelMgt.LabelFileLine(LabelHeader,LabelLine,Value,OutputFile);
        UNTIL LabelLine.NEXT = 0;

      LabelMgt.LabelFileBottom(LabelHeader,OutputFile,NoOfCopies);

      OutputFile.CLOSE;

      ReceiveStation.TESTFIELD("Item Label Printer Port");

      IF Posted THEN
        PostedReceive.InsertLabelFile(
          LabelFileName,
          STRSUBSTNO(Text003,"Receive Line".Type,"Receive Line"."No."),2,
          ReceiveStation."Item Label Printer Port",ReceiveStation.Code,
          NOT ReceiveStation."No Label Printer",ReceiveStation."Do Not Import Label File")
      ELSE
        Receive.InsertLabelFile(
          LabelFileName,
          STRSUBSTNO(Text003,"Receive Line".Type,"Receive Line"."No."),2,
          ReceiveStation."Item Label Printer Port",ReceiveStation.Code,
          NOT ReceiveStation."No Label Printer",ReceiveStation."Do Not Import Label File");

      IF NOT ReceiveStation."No Label Printer" THEN
        ReceiveStation.PrintLabel(
          LabelFileName,ReceiveStation."Item Label Printer Port",
          ReceiveStation."No Label Printer",ReceiveStation."Auto Delete Label Buffer File",
          Receive."No.",LabelHeader);
    END;

    PROCEDURE LabelFormattingHelp@2();
    BEGIN
      MESSAGE(Text004 + Text005 + Text006 + Text007);
    END;

    PROCEDURE GetTableFilter@3() : Text[250];
    BEGIN
      EXIT('27|5401|5404|6504|6505|14000601|14000602|14000608|14000841|14000842');
    END;

    PROCEDURE GetRecordNoStrMenu@4(CurrentTableNo@1240030000 : Integer) : Text[250];
    BEGIN
      CASE CurrentTableNo OF
        ELSE
          EXIT('');
      END;
    END;

    PROCEDURE InitializeRequest@6(NewLabelCode@1240030000 : Code[10];NewNoOfCopies@1240030001 : Integer);
    BEGIN
      LabelHeader.Code := NewLabelCode;
      NoOfCopies := NewNoOfCopies;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

