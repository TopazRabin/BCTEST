OBJECT Report 51082 Export Intl. Sales Quote/Order
{
  OBJECT-PROPERTIES
  {
    Date=07/01/20;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=TPZ000.00.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Export Intl. Sales Quote/Order;
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 1000000000;;DataItem;                  ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=FILTER(Quote|Order));
               ReqFilterHeadingML=ENU=Sales Quote/Order;
               OnAfterGetRecord=BEGIN
                                  CurrReport.LANGUAGE := Language.GetLanguageID("Language Code");

                                  SalesLine.RESET;
                                  SalesLine.SETRANGE("Document Type","Document Type");
                                  SalesLine.SETRANGE("Document No.","No.");
                                  TotalRecNo := SalesLine.COUNT;
                                END;

               ReqFilterFields=Document Type,No. }

    { 1000000001;1;DataItem;                 ;
               DataItemTable=Table37;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.)
                                 WHERE(Document Type=FILTER(Quote|Order));
               OnPreDataItem=BEGIN
                               TempExcelBuffer.DELETEALL;
                               CLEAR(TempExcelBuffer);

                               RowNo := 0;

                               Window.OPEN(
                                 Text51000 +
                                 '@1@@@@@@@@@@@@@@@@@@@@@\');

                               RowNo := RowNo + 1;
                               EnterCell(RowNo,1,FIELDCAPTION("No."),TRUE,FALSE,FALSE,'',1);
                               EnterCell(RowNo,2,FIELDCAPTION("Cross-Reference No."),TRUE,FALSE,FALSE,'',1);
                               EnterCell(RowNo,3,FIELDCAPTION(Description),TRUE,FALSE,FALSE,'',1);
                               EnterCell(RowNo,4,FIELDCAPTION(Quantity),TRUE,FALSE,FALSE,'',1);
                               EnterCell(RowNo,5,FIELDCAPTION("Unit of Measure Code"),TRUE,FALSE,FALSE,'',1);
                               EnterCell(RowNo,6,FIELDCAPTION("Actual Unit Price"),TRUE,FALSE,FALSE,'',1);
                               EnterCell(RowNo,7,FIELDCAPTION("Line Amount"),TRUE,FALSE,FALSE,'',1);
                             END;

               OnAfterGetRecord=BEGIN
                                  RowNo := RowNo + 1;
                                  EnterCell(RowNo,1,"No.",FALSE,FALSE,FALSE,'',1);
                                  EnterCell(RowNo,2,"Cross-Reference No.",FALSE,FALSE,FALSE,'',1);
                                  EnterCell(RowNo,3,Description,FALSE,FALSE,FALSE,'',1);
                                  EnterCell(RowNo,4,FORMAT(Quantity),FALSE,FALSE,FALSE,'',0);
                                  EnterCell(RowNo,5,"Unit of Measure Code",FALSE,FALSE,FALSE,'',1);
                                  EnterCell(RowNo,6,FORMAT("Actual Unit Price"),FALSE,FALSE,FALSE,'#,##0.0000',0);
                                  EnterCell(RowNo,7,FORMAT("Line Amount"),FALSE,FALSE,FALSE,'#,##0.00',0);

                                  Window.UPDATE(1,ROUND(RowNo - 1 / TotalRecNo * 10000,1));
                                END;

               OnPostDataItem=BEGIN
                                Window.CLOSE;
                                TempExcelBuffer.SetFriendlyFilename(STRSUBSTNO('%1 %2',"Sales Header"."No.","Sales Header"."Sell-to Customer Name"));
                                //TempExcelBuffer.CreateBook(STRSUBSTNO('%1 %2',"Sales Header"."No.","Sales Header"."Sell-to Customer Name"),STRSUBSTNO('%1 %2',"Sales Header"."No.","Sales Header"."Sell-to Customer Name"));
                                //<TPZ2170>
                                TempExcelBuffer.CreateBook('',STRSUBSTNO('%1 %2',"Sales Header"."No.","Sales Header"."Sell-to Customer Name"));
                                //</TPZ2170>
                                TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
                                TempExcelBuffer.CloseBook;
                                TempExcelBuffer.OpenExcel;

                                TempExcelBuffer.GiveUserControl;
                              END;

               DataItemLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      SalesLine@1000000006 : Record 37;
      TempExcelBuffer@1000000000 : TEMPORARY Record 370;
      Language@1000000002 : Record 8;
      Window@1000000003 : Dialog;
      TotalRecNo@1000000005 : Integer;
      RowNo@1000000001 : Integer;
      Text51000@1000000004 : TextConst 'ENU=Exporting Data...\\;ESM=Analizar Datos...\\;FRC=Analyse des donn‚es...\\;ENC=Analysing Data...\\';

    LOCAL PROCEDURE EnterCell@2(RowNo@1000 : Integer;ColumnNo@1001 : Integer;CellValue@1002 : Text[50];Bold@1003 : Boolean;Italic@1004 : Boolean;UnderLine@1005 : Boolean;NumberFormat@1000000000 : Text[30];CellType@1000000001 : 'Number,Text,Date,Time');
    BEGIN
      TempExcelBuffer.INIT;
      TempExcelBuffer.VALIDATE("Row No.",RowNo);
      TempExcelBuffer.VALIDATE("Column No.",ColumnNo);
      TempExcelBuffer."Cell Value as Text" := CellValue;
      TempExcelBuffer.Formula := '';
      TempExcelBuffer.Bold := Bold;
      TempExcelBuffer.Italic := Italic;
      TempExcelBuffer.Underline := UnderLine;
      TempExcelBuffer.NumberFormat := NumberFormat;
      TempExcelBuffer."Cell Type" := CellType;
      TempExcelBuffer.INSERT;
    END;

    BEGIN
    {
      2015-06-24 TPZ449 VCHERNYA
        Report has been created
      2018-01-15 TPZ2170 DKUMAR
        BUG FIX - Export to Excel (Intl.) Not Working
    }
    END.
  }
  RDLDATA
  {
  }
}

