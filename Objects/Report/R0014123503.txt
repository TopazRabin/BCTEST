OBJECT Report 14123503 ES Compare Login
{
  OBJECT-PROPERTIES
  {
    Date=04/30/18;
    Time=12:00:00 PM;
    Version List=ES1.41.51;
  }
  PROPERTIES
  {
    CaptionML=ENU=Compare Login;
    ProcessingOnly=Yes;
    OnPostReport=BEGIN
                   IF FullPrimaryKey THEN
                     Factor := 0
                   ELSE
                     Factor := 1;

                   ESTextLineTmp.RESET;
                   ESTextLineTmp.DELETEALL;

                   IF Compare THEN BEGIN
                     IF ESLogin.GETFILTERS = '' THEN
                       ERROR(Text003,ESLogin.TABLECAPTION);
                     IF ESLogin.FIND('-') THEN BEGIN
                       IF ESLogin.NEXT <> 0 THEN
                         ERROR(Text004,ESLogin.TABLECAPTION);
                     END ELSE
                       ERROR(Text004,ESLogin.TABLECAPTION);

                     IF ESLoginCompare.GETFILTERS = '' THEN
                       ERROR(Text005,ESLoginCompare.TABLECAPTION);
                     IF ESLoginCompare.FIND('-') THEN BEGIN
                       IF ESLoginCompare.NEXT <> 0 THEN
                         ERROR(Text006,ESLoginCompare.TABLECAPTION);
                     END ELSE
                       ERROR(Text006,ESLoginCompare.TABLECAPTION);

                     ESTextLineOldTmp.RESET;
                     ESTextLineOldTmp.DELETEALL;

                     ESTextLineNewTmp.RESET;
                     ESTextLineNewTmp.DELETEALL;
                   END;

                   CASE ESReportFormat OF
                     ESReportFormat::Basic:
                       IF Compare THEN BEGIN
                         BasicFormat(ESTextLineOldTmp,ESLoginCompare);
                         BasicFormat(ESTextLineNewTmp,ESLogin);
                         ESTextLineMgt.Compare(ESTextLineOldTmp,ESTextLineNewTmp,ESTextLineTmp);
                       END ELSE
                         BasicFormat(ESTextLineTmp,ESLogin);
                     ESReportFormat::"Summary Permissions":
                       IF Compare THEN BEGIN
                         SummaryPermissionsFormat(ESTextLineOldTmp,ESLoginCompare);
                         SummaryPermissionsFormat(ESTextLineNewTmp,ESLogin);
                         ESTextLineMgt.Compare(ESTextLineOldTmp,ESTextLineNewTmp,ESTextLineTmp);
                       END ELSE
                         SummaryPermissionsFormat(ESTextLineTmp,ESLogin);
                     ESReportFormat::Exploded:
                       IF Compare THEN BEGIN
                         DetailedFormat(ESTextLineOldTmp,ESLoginCompare);
                         DetailedFormat(ESTextLineNewTmp,ESLogin);
                         ESTextLineMgt.Compare(ESTextLineOldTmp,ESTextLineNewTmp,ESTextLineTmp);
                       END ELSE
                         DetailedFormat(ESTextLineTmp,ESLogin);
                   END;

                   IF ISSERVICETIER THEN BEGIN
                   CLEAR(ESTextLinesRTC);
                   ESTextLinesRTC.InitVersion(
                     ESTextLineTmp,STRSUBSTNO('%1 %2',ESLogin.TABLECAPTION,FORMAT(ESReportFormat)),Compare);
                   ESTextLinesRTC.RUNMODAL;
                   END ELSE BEGIN
                     CLEAR(ESTextLines);
                     ESTextLines.InitVersion(
                       ESTextLineTmp,STRSUBSTNO('%1 %2',ESLogin.TABLECAPTION,FORMAT(ESReportFormat)),Compare);
                     ESTextLines.RUNMODAL;
                   END;
                 END;

  }
  DATASET
  {
    { 2705;    ;DataItem;ESLogin             ;
               DataItemTable=Table14123527;
               DataItemTableView=SORTING(Type,User ID);
               OnPreDataItem=BEGIN
                               CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  CurrReport.BREAK;
                                END;

               ReqFilterFields=Type,User ID }

    { 7855;    ;DataItem;ESLoginCompare      ;
               DataItemTable=Table14123527;
               DataItemTableView=SORTING(Type,User ID);
               ReqFilterHeadingML=ENU=Compare to Login;
               ReqFilterFields=Type,User ID }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1240520008;2;Field  ;
                  CaptionML=ENU=Report Format;
                  OptionCaptionML=ENU=Basic,Summary Permissions,Exploded;
                  SourceExpr=ESReportFormat }

      { 1240520028;2;Field  ;
                  CaptionML=ENU=Full Primary Key;
                  SourceExpr=FullPrimaryKey }

      { 1240520032;2;Field  ;
                  CaptionML=ENU=Origin Details;
                  SourceExpr=OriginDetails }

      { 1240520026;2;Field  ;
                  CaptionML=ENU=User Date Time Details;
                  SourceExpr=UserDateTimeDetails }

      { 1240520030;2;Field  ;
                  CaptionML=ENU=Compare;
                  SourceExpr=Compare }

      { 1240520022;2;Field  ;
                  CaptionML=ENU=Login Access Controls;
                  SourceExpr=LoginAccessControls }

      { 1240520015;2;Field  ;
                  CaptionML=ENU=Permission Groups;
                  SourceExpr=RoleGroups }

      { 1240520017;2;Field  ;
                  CaptionML=ENU=Company Groups;
                  SourceExpr=CompanyGroups }

      { 1240520021;2;Field  ;
                  CaptionML=ENU=User Access Controls;
                  SourceExpr=WindowsAccessControls }

      { 1240520024;2;Field  ;
                  CaptionML=ENU=Summary Permissions;
                  SourceExpr=SummaryPermissions }

      { 1240520034;2;Field  ;
                  CaptionML=ENU=Windows Group Summary Permissions;
                  SourceExpr=WindowsGroupSummaryPermissions;
                  Visible=FALSE }

      { 1240520010;2;Field  ;
                  CaptionML=ENU=Permission Sets;
                  SourceExpr=Roles }

      { 1240520013;2;Field  ;
                  CaptionML=ENU=Permissions;
                  SourceExpr=RolePermissions }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ESTextLineTmp@1240520011 : TEMPORARY Record 14123520;
      ESTextLineOldTmp@1240520027 : TEMPORARY Record 14123520;
      ESTextLineNewTmp@1240520026 : TEMPORARY Record 14123520;
      ESSecuritySetup@1240520001 : Record 14123521;
      ESTextLines@1240520010 : Page 14123524;
      ESTextLinesRTC@1240520009 : Page 14123555;
      ESTextLineMgt@1240520033 : Codeunit 14123503;
      Window@1240520014 : Dialog;
      ESReportFormat@1240520008 : 'Basic,Summary Permissions,Exploded';
      Text001@1240520013 : TextConst 'ENU=Creating Text Lines\';
      Text002@1240520012 : TextConst 'ENU=Process #1################################################';
      LoginAccessControls@1240520021 : Boolean;
      Roles@1240520015 : Boolean;
      RolePermissions@1240520016 : Boolean;
      RoleGroups@1240520017 : Boolean;
      CompanyGroups@1240520018 : Boolean;
      WindowsAccessControls@1240520019 : Boolean;
      SummaryPermissions@1240520022 : Boolean;
      WindowsGroupSummaryPermissions@1240520035 : Boolean;
      UserDateTimeDetails@1240520023 : Boolean;
      OriginDetails@1240520034 : Boolean;
      FullPrimaryKey@1240520024 : Boolean;
      Compare@1240520028 : Boolean;
      Factor@1240520025 : Integer;
      Text003@1240520032 : TextConst 'ENU=%1 must be filtered.';
      Text004@1240520031 : TextConst 'ENU=Filter on %1 must be a simple filter.';
      Text005@1240520030 : TextConst 'ENU=Compare to %1 must be filtered.';
      Text006@1240520029 : TextConst 'ENU=Filter on Compare to %1 must be a simple filter.';

    PROCEDURE BasicFormat@1240520008(VAR ESTextLine@1240520010 : Record 14123520;VAR CurrentESLogin@1240520011 : Record 14123527);
    VAR
      ESLogin@1240520008 : Record 14123527;
      ESLoginAccessControl@1240520009 : Record 14123528;
    BEGIN
      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text001) + Text002);

      IF GUIALLOWED THEN
        Window.UPDATE(1,ESLogin.TABLECAPTION);
      ESLogin.COPYFILTERS(CurrentESLogin);
      IF ESLogin.FIND('-') THEN
        REPEAT
          ESLogin.FormatAsTextLine(ESTextLine,0,TRUE,UserDateTimeDetails);
          ESTextLine.Level := 0;
          ESTextLine.INSERT;

          IF LoginAccessControls THEN BEGIN
            ESLoginAccessControl.RESET;
            ESLoginAccessControl.SETRANGE("Login Type",ESLogin.Type);
            ESLoginAccessControl.SETRANGE("Login User ID",ESLogin."User ID");
            IF ESLoginAccessControl.FIND('-') THEN
              REPEAT
                ESLoginAccessControl.FormatAsTextLine(ESTextLine,Factor * 2,TRUE,UserDateTimeDetails);
                ESTextLine.Level := 1;
                ESTextLine.INSERT;
              UNTIL ESLoginAccessControl.NEXT = 0;
          END;
        UNTIL ESLogin.NEXT = 0;

      IF GUIALLOWED THEN
        Window.CLOSE;
    END;

    PROCEDURE SummaryPermissionsFormat@1240520010(VAR ESTextLine@1240520010 : Record 14123520;VAR CurrentESLogin@1240520011 : Record 14123527);
    VAR
      ESLogin@1240520008 : Record 14123527;
      ESSummaryPermission@1240520009 : Record 14123537;
    BEGIN
      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text001) + Text002);

      IF GUIALLOWED THEN
        Window.UPDATE(1,ESLogin.TABLECAPTION);
      ESLogin.COPYFILTERS(CurrentESLogin);
      IF ESLogin.FIND('-') THEN
        REPEAT
          ESLogin.FormatAsTextLine(ESTextLine,0,TRUE,UserDateTimeDetails);
          ESTextLine.Level := 0;
          ESTextLine.INSERT;

          IF SummaryPermissions THEN BEGIN
            ESSummaryPermission.RESET;
            ESSummaryPermission.SETRANGE(Type,ESLogin.Type);
            ESSummaryPermission.SETRANGE(Code,ESLogin."User ID");
            IF ESSummaryPermission.FIND('-') THEN
              REPEAT
                ESSummaryPermission.FormatAsTextLine(TRUE,ESTextLine,Factor * 2,TRUE);
                ESTextLine.Level := 1;
                ESTextLine.INSERT;
              UNTIL ESSummaryPermission.NEXT = 0;
          END;

          IF WindowsGroupSummaryPermissions THEN BEGIN
            ESSummaryPermission.RESET;
            ESSummaryPermission.SETRANGE(Type,ESSummaryPermission.Type::"Windows Group");
            ESSummaryPermission.SETRANGE(Code,ESLogin."User ID");
            IF ESSummaryPermission.FIND('-') THEN
              REPEAT
                ESSummaryPermission.FormatAsTextLine(TRUE,ESTextLine,Factor * 2,TRUE);
                ESTextLine.Level := 1;
                ESTextLine.INSERT;
              UNTIL ESSummaryPermission.NEXT = 0;
          END;
        UNTIL ESLogin.NEXT = 0;

      IF GUIALLOWED THEN
        Window.CLOSE;
    END;

    PROCEDURE DetailedFormat@1240520009(VAR ESTextLine@1240520019 : Record 14123520;VAR CurrentESLogin@1240520020 : Record 14123527);
    VAR
      ESLogin@1240520008 : Record 14123527;
      ESLoginAccessControl@1240520009 : Record 14123528;
      ESRoleGroup@1240520010 : Record 14123525;
      ESRole@1240520014 : Record 14123505;
      ESRolePermission@1240520016 : Record 14123506;
      ESCompanyGroup@1240520012 : Record 14123530;
      ESCompanyGroupLine@1240520013 : Record 14123531;
      ESWindowsAccessControl@1240520017 : Record 14123504;
      ESSummaryPermission@1240520018 : Record 14123537;
    BEGIN
      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text001) + Text002);

      IF GUIALLOWED THEN
        Window.UPDATE(1,ESLogin.TABLECAPTION);
      ESLogin.COPYFILTERS(CurrentESLogin);
      IF ESLogin.FIND('-') THEN
        REPEAT
          ESLogin.FormatAsTextLine(ESTextLine,0,TRUE,UserDateTimeDetails);
          ESTextLine.Level := 0;
          ESTextLine.INSERT;

          IF LoginAccessControls THEN BEGIN
            ESLoginAccessControl.RESET;
            ESLoginAccessControl.SETRANGE("Login Type",ESLogin.Type);
            ESLoginAccessControl.SETRANGE("Login User ID",ESLogin."User ID");
            IF ESLoginAccessControl.FIND('-') THEN
              REPEAT
                ESLoginAccessControl.FormatAsTextLine(ESTextLine,Factor * 2,TRUE,UserDateTimeDetails);
                ESTextLine.Level := 1;
                ESTextLine.INSERT;

                IF ESLoginAccessControl."Role Type" = ESLoginAccessControl."Role Type"::Role THEN BEGIN
                  IF Roles THEN BEGIN
                    ESRole.GET(ESLoginAccessControl."Role ID");
                    ESRole.FormatAsTextLine(ESTextLine,0,TRUE,UserDateTimeDetails);
                    ESTextLine.Level := 2;
                    ESTextLine.INSERT;
                    IF RolePermissions THEN BEGIN
                      ESRolePermission.RESET;
                      ESRolePermission.SETRANGE("Role ID",ESRole."Role ID");
                      IF ESRolePermission.FIND('-') THEN
                        REPEAT
                          ESRolePermission.FormatAsTextLine(
                            TRUE,ESTextLine,0,TRUE,UserDateTimeDetails,OriginDetails);
                          ESTextLine.Level := 3;
                          ESTextLine.INSERT;
                        UNTIL ESRolePermission.NEXT = 0;
                    END;
                  END;
                END ELSE BEGIN
                  IF RoleGroups THEN BEGIN
                    ESRoleGroup.GET(ESLoginAccessControl."Role ID");
                    DetailedFormatRecursive(ESTextLine,ESRoleGroup,2);
                  END;
                END;

                IF CompanyGroups AND (ESLoginAccessControl."Company Group ID" <> '') THEN BEGIN
                  ESCompanyGroup.GET(ESLoginAccessControl."Company Group ID");
                  ESCompanyGroup.FormatAsTextLine(ESTextLine,0,TRUE,UserDateTimeDetails);
                  ESTextLine.Level := 2;
                  ESTextLine.INSERT;

                  ESCompanyGroupLine.RESET;
                  ESCompanyGroupLine.SETRANGE("Company Group ID",ESCompanyGroup."Group ID");
                  IF ESCompanyGroupLine.FIND('-') THEN
                    REPEAT
                      ESCompanyGroupLine.FormatAsTextLine(ESTextLine,0,TRUE,UserDateTimeDetails);
                      ESTextLine.Level := 3;
                      ESTextLine.INSERT;
                    UNTIL ESCompanyGroupLine.NEXT = 0;
                END;
              UNTIL ESLoginAccessControl.NEXT = 0;
          END;

          IF WindowsAccessControls AND (ESLogin.Type = ESLogin.Type::Windows) THEN BEGIN
            ESWindowsAccessControl.RESET;
            ESWindowsAccessControl.SETRANGE("Login SID",ESLogin."Login SID");
            IF ESWindowsAccessControl.FIND('-') THEN
              REPEAT
                ESWindowsAccessControl.FormatAsTextLine(ESTextLine,1,TRUE);
                ESTextLine.Level := 1;
                ESTextLine.INSERT;

                IF Roles THEN BEGIN
                  ESRole.GET(ESWindowsAccessControl."Role ID");
                  ESRole.FormatAsTextLine(ESTextLine,0,TRUE,UserDateTimeDetails);
                  ESTextLine.Level := 2;
                  ESTextLine.INSERT;
                  IF RolePermissions THEN BEGIN
                    ESRolePermission.RESET;
                    ESRolePermission.SETRANGE("Role ID",ESRole."Role ID");
                    IF ESRolePermission.FIND('-') THEN
                      REPEAT
                        ESRolePermission.FormatAsTextLine(
                          TRUE,ESTextLine,0,TRUE,UserDateTimeDetails,OriginDetails);
                        ESTextLine.Level := 3;
                        ESTextLine.INSERT;
                      UNTIL ESRolePermission.NEXT = 0;
                  END;
                END;
              UNTIL ESWindowsAccessControl.NEXT = 0;
          END;

          IF SummaryPermissions THEN BEGIN
            ESSummaryPermission.RESET;
            ESSummaryPermission.SETRANGE(Type,ESLogin.Type);
            ESSummaryPermission.SETRANGE(Code,ESLogin."User ID");
            IF ESSummaryPermission.FIND('-') THEN
              REPEAT
                ESSummaryPermission.FormatAsTextLine(TRUE,ESTextLine,Factor * 2,TRUE);
                ESTextLine.Level := 1;
                ESTextLine.INSERT;
              UNTIL ESSummaryPermission.NEXT = 0;
          END;

          IF WindowsGroupSummaryPermissions THEN BEGIN
            ESSummaryPermission.RESET;
            ESSummaryPermission.SETRANGE(Type,ESSummaryPermission.Type::"Windows Group");
            ESSummaryPermission.SETRANGE(Code,ESLogin."User ID");
            IF ESSummaryPermission.FIND('-') THEN
              REPEAT
                ESSummaryPermission.FormatAsTextLine(TRUE,ESTextLine,Factor * 2,TRUE);
                ESTextLine.Level := 1;
                ESTextLine.INSERT;
              UNTIL ESSummaryPermission.NEXT = 0;
          END;
        UNTIL ESLogin.NEXT = 0;

      IF GUIALLOWED THEN
        Window.CLOSE;
    END;

    PROCEDURE DetailedFormatRecursive@1240520011(VAR ESTextLine@1240520014 : Record 14123520;ESRoleGroup@1240520008 : Record 14123525;CurrentLevel@1240520011 : Integer);
    VAR
      ESRoleGroupLine@1240520010 : Record 14123526;
      ESRoleGroup2@1240520009 : Record 14123525;
      ESRole@1240520013 : Record 14123505;
      ESRolePermission@1240520012 : Record 14123506;
    BEGIN
      ESRoleGroup.FormatAsTextLine(ESTextLine,0,TRUE,UserDateTimeDetails);
      ESTextLine.Level := CurrentLevel;
      ESTextLine.INSERT;

      ESRoleGroupLine.RESET;
      ESRoleGroupLine.SETRANGE("Role Group ID",ESRoleGroup."Group ID");
      IF ESRoleGroupLine.FIND('-') THEN
        REPEAT
          IF ESRoleGroupLine."Role Type" = ESRoleGroupLine."Role Type"::Role THEN BEGIN
            IF Roles THEN BEGIN
              ESRole.GET(ESRoleGroupLine."Role ID");
              ESRole.FormatAsTextLine(ESTextLine,0,TRUE,UserDateTimeDetails);
              ESTextLine.Level := CurrentLevel + 1;
              ESTextLine.INSERT;
              IF RolePermissions THEN BEGIN
                ESRolePermission.RESET;
                ESRolePermission.SETRANGE("Role ID",ESRole."Role ID");
                IF ESRolePermission.FIND('-') THEN
                  REPEAT
                    ESRolePermission.FormatAsTextLine(
                      TRUE,ESTextLine,0,TRUE,UserDateTimeDetails,OriginDetails);
                    ESTextLine.Level := CurrentLevel + 2;
                    ESTextLine.INSERT;
                  UNTIL ESRolePermission.NEXT = 0;
              END;
            END;
          END ELSE BEGIN
            ESRoleGroup2.GET(ESRoleGroupLine."Role ID");
            DetailedFormatRecursive(ESTextLine,ESRoleGroup2,CurrentLevel + 1);
          END;
        UNTIL ESRoleGroupLine.NEXT = 0;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

