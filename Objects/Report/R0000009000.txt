OBJECT Report 9000 Add/Subtract Permission Set
{
  OBJECT-PROPERTIES
  {
    Date=11/22/17;
    Time=12:00:00 PM;
    Version List=NAVW111.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Add/Subtract Permission Set;
               ESM=Conjunto de permisos sumar/restar;
               FRC=Ajouter/d‚duire ensemble d'autorisations;
               ENC=Add/Subtract Permission Set];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF DestinationPermissionSet = '' THEN
                    ERROR(NoDestinationErr);
                  IF SourcePermissionSet = '' THEN
                    ERROR(NoSourceErr);
                END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;SourcePermission    ;
               DataItemTable=Table2000000005;
               DataItemTableView=SORTING(Role ID,Object Type,Object ID)
                                 ORDER(Ascending);
               OnPreDataItem=BEGIN
                               SETRANGE("Role ID",SourcePermissionSet);
                             END;

               OnAfterGetRecord=VAR
                                  DestinationPermission@1000 : Record 2000000005;
                                BEGIN
                                  CASE SetOperation OF
                                    SetOperation::Include:
                                      IF DestinationPermission.GET(DestinationPermissionSet,"Object Type","Object ID") THEN BEGIN
                                        IF PermissionValueIsGreaterOrEqual("Read Permission",DestinationPermission."Read Permission") THEN
                                          DestinationPermission."Read Permission" := "Read Permission";
                                        IF PermissionValueIsGreaterOrEqual("Insert Permission",DestinationPermission."Insert Permission") THEN
                                          DestinationPermission."Insert Permission" := "Insert Permission";
                                        IF PermissionValueIsGreaterOrEqual("Modify Permission",DestinationPermission."Modify Permission") THEN
                                          DestinationPermission."Modify Permission" := "Modify Permission";
                                        IF PermissionValueIsGreaterOrEqual("Delete Permission",DestinationPermission."Delete Permission") THEN
                                          DestinationPermission."Delete Permission" := "Delete Permission";
                                        IF PermissionValueIsGreaterOrEqual("Execute Permission",DestinationPermission."Execute Permission") THEN
                                          DestinationPermission."Execute Permission" := "Execute Permission";
                                        DestinationPermission.MODIFY;
                                      END ELSE BEGIN
                                        DestinationPermission := SourcePermission;
                                        DestinationPermission."Role ID" := DestinationPermissionSet;
                                        DestinationPermission.INSERT;
                                      END;
                                    SetOperation::Exclude:
                                      BEGIN
                                        DestinationPermission.SETRANGE("Role ID",DestinationPermissionSet);
                                        DestinationPermission.SETRANGE("Object Type","Object Type");
                                        IF "Object ID" <> 0 THEN
                                          DestinationPermission.SETRANGE("Object ID","Object ID");
                                        IF DestinationPermission.FINDSET THEN
                                          REPEAT
                                            IF PermissionValueIsGreaterOrEqual("Read Permission",DestinationPermission."Read Permission") THEN
                                              DestinationPermission."Read Permission" := "Read Permission"::" ";
                                            IF PermissionValueIsGreaterOrEqual("Insert Permission",DestinationPermission."Insert Permission") THEN
                                              DestinationPermission."Insert Permission" := "Insert Permission"::" ";
                                            IF PermissionValueIsGreaterOrEqual("Modify Permission",DestinationPermission."Modify Permission") THEN
                                              DestinationPermission."Modify Permission" := "Modify Permission"::" ";
                                            IF PermissionValueIsGreaterOrEqual("Delete Permission",DestinationPermission."Delete Permission") THEN
                                              DestinationPermission."Delete Permission" := "Delete Permission"::" ";
                                            IF PermissionValueIsGreaterOrEqual("Execute Permission",DestinationPermission."Execute Permission") THEN
                                              DestinationPermission."Execute Permission" := "Execute Permission"::" ";
                                            DestinationPermission.MODIFY;
                                            IF (DestinationPermission."Read Permission" = "Read Permission"::" ") AND
                                               (DestinationPermission."Insert Permission" = "Read Permission"::" ") AND
                                               (DestinationPermission."Modify Permission" = "Read Permission"::" ") AND
                                               (DestinationPermission."Delete Permission" = "Read Permission"::" ") AND
                                               (DestinationPermission."Execute Permission" = "Read Permission"::" ")
                                            THEN
                                              DestinationPermission.DELETE;
                                          UNTIL DestinationPermission.NEXT = 0;
                                      END;
                                  END;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1   ;    ;Container ;
                  Name=Parameter;
                  ContainerType=ContentArea }

      { 2   ;1   ;Field     ;
                  Name=DestinationPermissionSet;
                  CaptionML=[ENU=Destination;
                             ESM=Destino;
                             FRC=Destination;
                             ENC=Destination];
                  ToolTipML=[ENU=Specifies the permission set for which permission sets are included or excluded.;
                             ESM=Especifica el conjunto de permisos para el que se incluyen o excluyen conjuntos de permisos.;
                             FRC=Sp‚cifie l'ensemble d'autorisations pour lequel les ensembles d'autorisations sont inclus ou exclus.;
                             ENC=Specifies the permission set for which permission sets are included or excluded.];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=DestinationPermissionSet;
                  TableRelation="Permission Set"."Role ID";
                  Editable=FALSE }

      { 4   ;1   ;Field     ;
                  Name=SetOperation;
                  CaptionML=[ENU=Operation;
                             ESM=Operaci¢n;
                             FRC=Activit‚;
                             ENC=Operation];
                  ToolTipML=[ENU=Specifies if the batch job includes or excludes a permission set for the destination permission set.;
                             ESM=Especifica si el proceso incluye o excluye un conjunto de permisos para el conjunto de permisos de destino.;
                             FRC=Indique si le traitement en lot inclut ou exclut un ensemble d'autorisations pour l'ensemble d'autorisations cible.;
                             ENC=Specifies if the batch job includes or excludes a permission set for the destination permission set.];
                  OptionCaptionML=[ENU=Include,Exclude;
                                   ESM=Incluir,Excluir;
                                   FRC=Inclure,Exclure;
                                   ENC=Include,Exclude];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=SetOperation }

      { 3   ;1   ;Field     ;
                  Name=SourcePermissionSet;
                  CaptionML=[ENU=Source;
                             ESM=Origen;
                             FRC=Origine;
                             ENC=Source];
                  ToolTipML=[ENU=Specifies which permission set is included or excluded for the destination permission set.;
                             ESM=Especifica qu‚ conjunto de permisos se incluye o excluye para el conjunto de permisos de destino.;
                             FRC=Sp‚cifie quel ensemble d'autorisations est inclus ou exclu pour l'ensemble d'autorisations cible.;
                             ENC=Specifies which permission set is included or excluded for the destination permission set.];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=SourcePermissionSet;
                  TableRelation="Permission Set"."Role ID" }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      DestinationPermissionSet@1000 : Code[20];
      SourcePermissionSet@1001 : Code[20];
      SetOperation@1002 : 'Include,Exclude';
      NoDestinationErr@1003 : TextConst 'ENU=No destination permission set has been set.;ESM=No se defini¢ ning£n conjunto de permisos de destino.;FRC=Aucun ensemble d''autorisations de destination n''a ‚t‚ d‚fini.;ENC=No destination permission set has been set.';
      NoSourceErr@1004 : TextConst 'ENU=You must select a source permission set.;ESM=Debe seleccionar un conjunto de permisos de origen.;FRC=Vous devez s‚lectionner un ensemble d''autorisations source.;ENC=You must select a source permission set.';

    [External]
    PROCEDURE SetDestination@3(NewDestination@1000 : Code[20]);
    BEGIN
      DestinationPermissionSet := NewDestination;
    END;

    LOCAL PROCEDURE PermissionValueIsGreaterOrEqual@5(Left@1000 : ' ,Yes,Indirect';Right@1001 : ' ,Yes,Indirect') : Boolean;
    BEGIN
      // Returns (Left >= Right)
      CASE Left OF
        Left::" ":
          EXIT(Right = Right::" ");
        Left::Yes:
          EXIT(TRUE);
        Left::Indirect:
          EXIT(Right <> Right::Yes);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

