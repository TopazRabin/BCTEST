OBJECT Report 51459 E.D.I. Cre Inventory Advice_P
{
  OBJECT-PROPERTIES
  {
    Date=07/01/20;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=SE0.60,TPZ2682,TPZ2847,TPZ2785;
  }
  PROPERTIES
  {
    CaptionML=ENU=E.D.I. Cre Inventory Advice_P;
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  CompanyInformation.GET;
                END;

    OnPostReport=BEGIN
                   TmpItem.RESET;
                   TmpItem.DELETEALL;
                 END;

  }
  DATASET
  {
    { 1529;    ;DataItem;                    ;
               DataItemTable=Table14002360;
               PrintOnlyIfDetail=Yes;
               OnAfterGetRecord=BEGIN
                                  IF "Customer No." = '' THEN BEGIN
                                    EDICustCrossRef.INIT;
                                    EDICustCrossRef.RESET;
                                    EDICustCrossRef.SETRANGE("Trade Partner No.","No.");
                                    EDICustCrossRef.SETFILTER("Navision Sell To Code",'<>%1','');
                                    IF NOT EDICustCrossRef.FIND('-') THEN
                                      CurrReport.SKIP
                                    ELSE BEGIN
                                      IF NOT Customer.GET(EDICustCrossRef."Navision Sell To Code") THEN
                                        CurrReport.SKIP
                                      ELSE
                                        EDITradePartner.GET(EDICustCrossRef."Trade Partner No.");
                                    END;
                                  END ELSE BEGIN
                                    IF NOT Customer.GET("Customer No.") THEN
                                      CurrReport.SKIP
                                    ELSE
                                      EDITradePartner.GET("No.");
                                  END;

                                  EDIDocument.RESET;
                                  EDIDocument.SETRANGE("Trade Partner No.","No.");
                                  EDIDocument.SETFILTER(
                                    Status,'%1|%2',EDIDocument.Status::Test,EDIDocument.Status::Production);
                                  EDIDocument.SETRANGE("Navision Document",'E_INVADV');
                                  EDIDocument.SETRANGE(Type,EDIDocument.Type::Export);
                                  IF NOT EDIDocument.FIND('-') THEN
                                    CurrReport.SKIP;

                                  IF NOT EDITemplate.GET(EDIDocument."EDI Template Code") THEN
                                    CurrReport.SKIP;

                                  IF FORMAT(ExpectedDate) = '' THEN
                                    ExpectedDate := CALCDATE(EDIDocument."Expected Receipt Date Formula",TODAY)
                                  ELSE
                                    ExpectedDate := CALCDATE(ExpectedDateFormula,TODAY);
                                  IF TODAY = ExpectedDate THEN
                                    ExpectedDate := 0D;
                                END;

               ReqFilterFields=No. }

    { 1240020000;1;Column;Text001            ;
               SourceExpr=Text001 }

    { 1240020001;1;Column;CompanyInformation_Name;
               SourceExpr=CompanyInformation.Name }

    { 1240020010;1;Column;FORMAT_TODAY_0_4_  ;
               SourceExpr=FORMAT(TODAY,0,4) }

    { 1240020016;1;Column;TIME               ;
               SourceExpr=TIME }

    { 1240020017;1;Column;USERID             ;
               SourceExpr=USERID }

    { 1240020019;1;Column;CurrReport_PAGENO  ;
               SourceExpr=CurrReport.PAGENO }

    { 1240020003;1;Column;E_D_I__Trade_Partner__E_D_I__Trade_Partner___No__;
               SourceExpr="E.D.I. Trade Partner"."No." }

    { 1240020005;1;Column;E_D_I__Trade_Partner__E_D_I__Trade_Partner__Name;
               SourceExpr="E.D.I. Trade Partner".Name }

    { 1240020020;1;Column;Page_No_Caption    ;
               SourceExpr=Page_No_CaptionLbl }

    { 1240020002;1;Column;Trade_Partner_No_Caption;
               SourceExpr=Trade_Partner_No_CaptionLbl }

    { 1240020004;1;Column;NameCaption        ;
               SourceExpr=NameCaptionLbl }

    { 1240020006;1;Column;Send_Doc__CreatedCaption;
               SourceExpr=Send_Doc__CreatedCaptionLbl }

    { 1240020007;1;Column;Advice_No_Caption  ;
               SourceExpr=Advice_No_CaptionLbl }

    { 1240020008;1;Column;Customer_No_Caption;
               SourceExpr=Customer_No_CaptionLbl }

    { 1240020009;1;Column;Customer_NameCaption;
               SourceExpr=Customer_NameCaptionLbl }

    { 1240020012;1;Column;Data_ErrorCaption  ;
               SourceExpr=Data_ErrorCaptionLbl }

    { 1240020022;1;Column;Advice_CreatedCaption;
               SourceExpr=Advice_CreatedCaptionLbl }

    { 8129;1   ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemTableView=WHERE(Blocked=FILTER(No));
               OnPreDataItem=BEGIN
                               //utk
                               SETRANGE("Shortcut Dimension 5 Code",'P');//UTK
                               SETRANGE(Blocked,FALSE);//Item.Blocked::"0");//UTK TPZ2785
                               CLEAR(CreateInventoryAdvice);
                               InventoryAdviceHdr.INIT;
                               AdviceCreated := FALSE;
                               DocNo := '';
                             END;

               OnAfterGetRecord=BEGIN
                                  IF EDIDocument."Auto. Create Item Filter" =
                                     EDIDocument."Auto. Create Item Filter"::"EDI Item Cross Reference"
                                  THEN BEGIN
                                    EDITradePtnrItem.RESET;
                                    EDITradePtnrItem.SETRANGE("Trade Partner No.",EDITradePartner."No.");
                                    EDITradePtnrItem.SETFILTER("Partner Item No.",'<>%1','');
                                    EDITradePtnrItem.SETRANGE(Discontinue,FALSE);
                                    IF NOT EDITradePtnrItem.FIND('-') THEN
                                      CurrReport.SKIP;
                                  END;
                                  //MESSAGE("No.");
                                  IF AdviceCreated = FALSE THEN
                                    DocNo :=
                                      CreateInventoryAdvice.CreateInvtAdvice(Customer,EDITradePartner,EDIDocument);
                                  IF InventoryAdviceHdr.GET(DocNo,InventoryAdviceHdr.Type::"  ") THEN BEGIN
                                    AdviceCreated := TRUE;
                                    AvailableQty := 50;
                                    CreateInventoryAdvice.GetValuesInventoryAdvice(
                                      Item,EDIDocument,Customer,InventoryAdviceHdr,ExpectedDate,AvailableQty,ExpectedReceiptQty);
                                    CreateInventoryAdvice.RUN(Item);
                                    IF EDIDocument."Auto. Create Item Filter" <> EDIDocument."Auto. Create Item Filter"::" " THEN
                                      CurrReport.BREAK;
                                  END ELSE
                                    CurrReport.SKIP;

                                  COMMIT;
                                END;

               OnPostDataItem=VAR
                                EDISetup@1240020000 : Record 14002367;
                                EDISend@1240020001 : Codeunit 14002356;
                              BEGIN
                                //UTK
                                {
                                  IF EDITemplate."Auto. Release Inventory Advice" THEN
                                    CreateInventoryAdvice.ReleaseInventoryAdvice(InventoryAdviceHdr);
                                COMMIT;
                                }//TPZ2847
                                //UTK

                                IF StopOnError THEN
                                  SendEDIInventoryDocument.RUN(InventoryAdviceHdr)
                                ELSE
                                  IF SendEDIInventoryDocument.RUN(InventoryAdviceHdr) THEN
                                     ErrorCode := TRUE
                                   ELSE
                                     ErrorCode := FALSE;

                                COMMIT;

                                DataError := EDISend.CheckSendDocError('E_INVADV',InventoryAdviceHdr."No.");
                              END;

               ReqFilterFields=No. }

    { 5444;1   ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnAfterGetRecord=BEGIN
                                  EDISetup.GET;
                                  IF EDISetup."Auto Export Send Doc." THEN BEGIN
                                    IF StopOnError THEN
                                      EDISend.RUN(EDIDocument)
                                    ELSE
                                      IF NOT EDISend.RUN(EDIDocument) THEN
                                        ExportMessage := Text002
                                      ELSE
                                        ExportMessage := STRSUBSTNO(Text003,EDIDocument."Documents Exported");
                                  END ELSE
                                    ExportMessage := Text004;

                                  COMMIT;
                                END;
                                 }

    { 1240020013;2;Column;InventoryAdviceHdr__No__;
               SourceExpr=InventoryAdviceHdr."No." }

    { 1240020014;2;Column;InventoryAdviceHdr__Sell_to_Customer_No__;
               SourceExpr=InventoryAdviceHdr."Sell-to Customer No." }

    { 1240020015;2;Column;InventoryAdviceHdr__Sell_to_Customer_Name_;
               SourceExpr=InventoryAdviceHdr."Sell-to Customer Name" }

    { 1240020018;2;Column;DataError          ;
               SourceExpr=DataError }

    { 1240020021;2;Column;ErrorCode          ;
               SourceExpr=ErrorCode }

    { 1240020023;2;Column;AdviceCreated      ;
               SourceExpr=AdviceCreated }

    { 1240020011;2;Column;ExportMessage      ;
               SourceExpr=ExportMessage }

    { 7272;2   ;Column  ;Integer_Number      ;
               SourceExpr=Number }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      EDIDocument@1240030000 : Record 14002353;
      Customer@1240020019 : Record 18;
      InventoryAdviceHdr@1240030010 : Record 14002413;
      EDITradePtnrItem@1240030003 : Record 14002364;
      ItemCrossReference@1240030012 : Record 5717;
      EDITradePartner@1240020007 : Record 14002360;
      EDICustCrossRef@1240020008 : Record 14002362;
      EDISetup@1240020009 : Record 14002367;
      EDITemplate@1240020020 : Record 14002350;
      CompanyInformation@1240020021 : Record 79;
      Item2@1240020024 : Record 27;
      TmpItem@1240020031 : TEMPORARY Record 27;
      CreateInventoryAdvice@1240030002 : Codeunit 14002416;
      SendEDIInventoryDocument@1240020001 : Codeunit 14002413;
      EDISend@1240020017 : Codeunit 14002356;
      TradePartner@1240030004 : Code[20];
      Text001@1240020023 : TextConst 'ENU=Create Inventory Advice';
      AvailableQty@1240030005 : Decimal;
      ExpectedReceiptQty@1240030006 : Decimal;
      ExpectedDate@1240030007 : Date;
      ExpectedDateFormula@1240030008 : DateFormula;
      Release@1240030009 : Boolean;
      AutoFilterICRTypeNo@1240030013 : ' ,Customer,Blank';
      IncludeCrossRefTypeNo@1240030015 : ' ,Customer,Blank';
      DocNo@1240020010 : Code[10];
      ErrorMessage@1240020011 : Boolean;
      StopOnError@1240020012 : Boolean;
      Text002@1240020016 : TextConst 'ENU=Error - Send Documents created but not exported.';
      Text003@1240020015 : TextConst 'ENU=%1 Doument(s) exported.';
      Text004@1240020014 : TextConst 'ENU=Send Document(s) created but not exported';
      DataError@1240020027 : Boolean;
      ErrorCode@1240020029 : Boolean;
      AdviceCreated@1240020030 : Boolean;
      ExportMessage@1240020000 : Text[100];
      Page_No_CaptionLbl@9456 : TextConst 'ENU=Page No.';
      Trade_Partner_No_CaptionLbl@6355 : TextConst 'ENU=Trade Partner No.';
      NameCaptionLbl@2745 : TextConst 'ENU=Name';
      Send_Doc__CreatedCaptionLbl@5525 : TextConst 'ENU=Send Doc. Created';
      Advice_No_CaptionLbl@3629 : TextConst 'ENU=Advice No.';
      Customer_No_CaptionLbl@6073 : TextConst 'ENU=Customer No.';
      Customer_NameCaptionLbl@2383 : TextConst 'ENU=Customer Name';
      Data_ErrorCaptionLbl@4853 : TextConst 'ENU=Data Error';
      Advice_CreatedCaptionLbl@7946 : TextConst 'ENU=Advice Created';
      DivisionCodeFilter@1000000000 : Code[10];

    PROCEDURE InitializeRequest@1000000000(DivisionCode@1000000000 : Code[10]);
    BEGIN
      DivisionCodeFilter:=DivisionCode;
    END;

    BEGIN
    {
      2019-11-08  TPZ2682  UCHOUHAN
        Created new report to generate Inventory Advice for Divsion 'P'.
      05-13-2020 TPZ2847 GGUPTA
        change logic as item cross reference
      TPZ2785 05112020 GGUPTA Remove Item blocking Topaz Customization
    }
    END.
  }
  RDLDATA
  {
  }
}

