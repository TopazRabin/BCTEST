OBJECT Page 14002368 E.D.I. Receive Document List
{
  OBJECT-PROPERTIES
  {
    Date=07/13/20;
    Time=12:00:00 PM;
    Version List=SE0.62;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=E.D.I. Receive Document List;
    SourceTable=Table14002358;
    PageType=List;
    CardPageID=E.D.I. Receive Document;
    OnAfterGetRecord=BEGIN
                       SalesOrderStatus := '';
                       GetSalesOrderStatus("Internal Doc. No.");
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1240030003;1 ;ActionGroup;
                      CaptionML=ENU=Document }
      { 1240030005;2 ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=ENU=Status;
                      ToolTipML=ENU=Shows the status of the EDI Receive Document such as created Sales Order(s) and posted documents.;
                      RunObject=Page 14002377;
                      RunPageView=SORTING(Internal Doc. No.)
                                  ORDER(Ascending);
                      RunPageLink=Internal Doc. No.=FIELD(Internal Doc. No.);
                      Promoted=Yes;
                      Image=Status;
                      PromotedCategory=Process }
      { 1240030006;2 ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=List Fiel&ds;
                      ToolTipML=ENU=Based upon the mapping and the received EDI file, the List Fields shows the translated data.;
                      RunObject=Page 14002367;
                      RunPageView=SORTING(Internal Doc. No.,Line No.)
                                  ORDER(Ascending);
                      RunPageLink=Trade Partner No.=FIELD(Trade Partner No.),
                                  Navision Document=FIELD(Navision Document),
                                  EDI Document No.=FIELD(EDI Document No.),
                                  EDI Version=FIELD(EDI Version),
                                  Internal Doc. No.=FIELD(Internal Doc. No.);
                      Promoted=Yes;
                      Image=EntriesList;
                      PromotedCategory=Process }
      { 1240030007;2 ;Separator  }
      { 1240030008;2 ;ActionGroup;
                      CaptionML=ENU=&Trading Partner;
                      Image=ImportExport }
      { 1240030009;3 ;Action    ;
                      CaptionML=ENU=Trading Ptnr. Cust. Cross Reference;
                      ToolTipML=ENU=Lists all Customer Cross References associated to the Trade Partner.;
                      RunObject=Page 14002371;
                      RunPageView=SORTING(Trade Partner No.,Line No.)
                                  ORDER(Ascending);
                      RunPageLink=Trade Partner No.=FIELD(Trade Partner No.) }
      { 1240030010;3 ;Action    ;
                      CaptionML=ENU=Trading Ptnr. Items;
                      ToolTipML=ENU=Lists all Item Cross References associated to the Trade Partner.;
                      RunObject=Page 14002374;
                      RunPageView=SORTING(Trade Partner No.,Partner Item No.)
                                  ORDER(Ascending);
                      RunPageLink=Trade Partner No.=FIELD(Trade Partner No.) }
      { 1240030011;3 ;Action    ;
                      CaptionML=ENU=Trading Ptnr. Units of Measure;
                      ToolTipML=ENU=Lists all Unit of Measure Cross References associated to the Trade Partner.;
                      RunObject=Page 14002375;
                      RunPageView=SORTING(Trade Partner No.,EDI Unit of Measure,Navision Item No.)
                                  ORDER(Ascending);
                      RunPageLink=Trade Partner No.=FIELD(Trade Partner No.) }
      { 1240020000;3 ;Action    ;
                      CaptionML=ENU=General Cross References;
                      ToolTipML=ENU=Lists all General Cross References associated to the Trade Partner.;
                      OnAction=BEGIN
                                 CLEAR(EvaluateCrossReference);
                                 EvaluateCrossReference.ShowGeneralCrossReference("Trade Partner No.");
                               END;
                                }
      { 1240020010;3 ;Action    ;
                      CaptionML=ENU=Status Codes;
                      ToolTipML=ENU=Lists all Status Codes associated to the Trade Partner.;
                      RunObject=Page 14002408;
                      RunPageLink=Trade Partner No.=FIELD(Trade Partner No.) }
      { 1240020006;3 ;Action    ;
                      CaptionML=ENU=Invalid Characters;
                      RunObject=Page 14050353;
                      RunPageView=SORTING(Trade Partner No.,File Format,Line No.)
                                  ORDER(Ascending);
                      RunPageLink=Trade Partner No.=FIELD(Trade Partner No.) }
      { 1240030012;2 ;Separator  }
      { 1240030013;2 ;Action    ;
                      CaptionML=ENU=Order Status Entries;
                      ToolTipML=ENU=List associated Order Status entries (ex. 870) to the EDI Receive Document.;
                      Promoted=Yes;
                      Image=EntriesList;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 OrderStatusHdr.OrderStatusEntries(Rec);
                               END;
                                }
      { 1240030014;2 ;Action    ;
                      CaptionML=ENU=EDI Discount Summaries;
                      ToolTipML=ENU=Displays received EDI discounts for both the header and line level (typically found in the SAC segment).;
                      RunObject=Page 14000396;
                      RunPageLink=Internal Doc. No.=FIELD(Internal Doc. No.);
                      Promoted=Yes;
                      Image=EntriesList;
                      PromotedCategory=Process }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1240030002;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 1240030015;2 ;Action    ;
                      CaptionML=ENU=&Process Receive Document;
                      ToolTipML=ENU=Select to process the EDI Receive Document.;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ElectronicDoc;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 "Manual Process" := TRUE;
                                 "Error Message Text" := '';
                                 MODIFY;
                                 COMMIT;
                                 ProcessReceiveDocument(FALSE);
                               END;
                                }
      { 1240030016;2 ;ActionGroup;
                      CaptionML=ENU=&Sales;
                      Image=NewDocument }
      { 1240030017;3 ;Action    ;
                      CaptionML=ENU=Create &All Sales Documents;
                      ToolTipML=ENU=Select to create Sales Documents for all Receive Documents that have not previously created sales documents. Those with "Data Error" - TRUE are filtered out of the process.;
                      OnAction=BEGIN
                                 CreateSalesOrdersAll("Navision Document");
                               END;
                                }
      { 1240030018;3 ;Action    ;
                      CaptionML=ENU=Create Sales Order &Status;
                      OnAction=BEGIN
                                 EDIRecDocHdr.RESET;
                                 EDIRecDocHdr.SETRANGE("Internal Doc. No.","Internal Doc. No.");
                                 EDIRecDocHdr.SETRANGE("Customer No.","Customer No.");
                                 IF EDIRecDocHdr.FIND('-') THEN
                                   REPORT.RUNMODAL(REPORT::"Send Sales Order Status",TRUE,TRUE,EDIRecDocHdr);
                               END;
                                }
      { 1240020002;3 ;Action    ;
                      CaptionML=ENU=Create Advance Order Status;
                      OnAction=BEGIN
                                 CreateOrderStatusDoc(Rec,'E_SLSSTA');
                               END;
                                }
      { 1240020005;3 ;Action    ;
                      Name=<Action1240020004>;
                      CaptionML=ENU=Create Order Change Status;
                      OnAction=BEGIN
                                 CreateOrderStatusDoc(Rec,'E_SLSPOC');
                               END;
                                }
      { 1240020004;3 ;Action    ;
                      Name=<Action1240020005>;
                      CaptionML=ENU=Create Advance P.O. Acknowledgment;
                      OnAction=BEGIN
                                 CreateOrderStatusDoc(Rec,'E_ADVPOA');
                               END;
                                }
      { 1240020008;3 ;Action    ;
                      CaptionML=ENU=Process P.O. Change;
                      OnAction=VAR
                                 QuoteRequest@1240020000 : Boolean;
                               BEGIN
                                 CASE "EDI Document No." OF
                                   '850','860','875','876','ORDERS','ORDCHG':
                                     CASE "PO Change Purpose Code" OF
                                       '06','07','6','7','22','23','29':
                                         ERROR(Text003,"PO Change Purpose Code");
                                       '01','02','03','04','05','1','2','3','4','5','17','20','21','36','R':
                                         BEGIN
                                           EDIDocument.GET(
                                             "Trade Partner No.","Navision Document","EDI Document No.","EDI Version",
                                             EDIDocument.Type::Import);
                                           IF SalesDocumentChange.EvaluateChange(Rec,EDIDocument) THEN BEGIN
                                             COMMIT;
                                             MESSAGE(Text004);
                                           END;
                                         END;
                                     END;
                                   '840','REQOTE':
                                     CASE "PO Change Purpose Code" OF
                                       '01','1','04','4','05','5':
                                         BEGIN
                                           QuoteRequest := TRUE;
                                           EDIDocument.GET(
                                             "Trade Partner No.","Navision Document","EDI Document No.","EDI Version",
                                             EDIDocument.Type::Import);
                                           SalesDocumentChange.SetProcessType(QuoteRequest);
                                           IF SalesDocumentChange.EvaluateChange(Rec,EDIDocument) THEN BEGIN
                                             COMMIT;
                                             MESSAGE(Text004);
                                           END;
                                         END;
                                       ELSE BEGIN
                                         IF ("PO Change Purpose Code" <> '00') OR ("PO Change Purpose Code" <> '9') THEN
                                           ERROR(Text003,"PO Change Purpose Code");
                                       END;
                                     END;
                                 END;
                               END;
                                }
      { 1240030019;3 ;ActionGroup;
                      CaptionML=ENU=&Bulk Draw Down }
      { 1240030020;4 ;Action    ;
                      CaptionML=ENU=Create Bulk Draw Down &Updates;
                      OnAction=BEGIN
                                 CLEAR(BulkDrawDown);
                                 BulkDrawDown.EvaluateQuotes(Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1240030021;3 ;ActionGroup;
                      CaptionML=ENU=&Forecast and Release }
      { 1240030022;4 ;Action    ;
                      CaptionML=ENU=Process &Document;
                      OnAction=BEGIN
                                 CLEAR(ForecastandRelease);
                                 CASE "EDI Document No." OF
                                   '830','DELFOR':
                                     ForecastandRelease.UpdateForecast(Rec);
                                   '862','DELJIT':
                                     BEGIN
                                       EDIDocument.RESET;
                                       EDIDocument.SETRANGE("Trade Partner No.","Trade Partner No.");
                                       EDIDocument.SETRANGE("Navision Document","Navision Document");
                                       EDIDocument.SETRANGE("EDI Document No.","EDI Document No.");
                                       EDIDocument.SETRANGE(Version,"EDI Version");
                                       EDIDocument.SETRANGE(Type,EDIDocument.Type::Import);
                                       EDIDocument.SETFILTER(Status,'<>%1',EDIDocument.Status::Inactive);
                                       EDIDocument.FIND('-');

                                       ForecastandRelease.EvaluateQuotes(Rec);
                                       IF "Evaluate EDI Time" THEN
                                         ForecastandRelease.EvaluateEDITime(Rec,EDIDocument);
                                     END;
                                 END;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1240030023;2 ;Separator ;
                      CaptionML=ENU="" }
      { 1240030024;2 ;ActionGroup;
                      CaptionML=ENU=F&unctional Ack.;
                      Image=Reconcile }
      { 1240030025;3 ;Action    ;
                      CaptionML=ENU=&Send Functional Ack.;
                      ToolTipML=ENU=Creates the Functional Acknowledgement's (ex. 997) EDI Send Document for the selected EDI Receive Document.;
                      OnAction=BEGIN
                                 CLEAR(EDIFunctAckSend);
                                 EDIFunctAckSend.RUN(Rec);
                                 MESSAGE(
                                   Text001);
                               END;
                                }
      { 1240030026;3 ;Action    ;
                      CaptionML=ENU=&View Sent Functional Ack.;
                      ToolTipML=ENU=View the created Functional Acknowledgement's (ex. 997) EDI Send Document for the selected EDI Receive Document.;
                      OnAction=BEGIN
                                 EDISendDocHdr.RESET;
                                 EDISendDocHdr.SETRANGE("Internal Doc No.","Internal Doc. No.");
                                 EDISendDocHdr.SETRANGE("Navision Document",'E_FUNCTACK');
                                 PAGE.RUNMODAL(PAGE::"E.D.I. Send Document",EDISendDocHdr);
                               END;
                                }
      { 1240030027;3 ;Action    ;
                      CaptionML=ENU=&Update Functional Ack.;
                      ToolTipML=ENU=When run on the Functional Acknowledgment, the system will try to match to the EDI Send Document's control numbers and update the status.;
                      OnAction=BEGIN
                                 ProcessReceiveDocument(FALSE);
                               END;
                                }
      { 1240030028;2 ;Separator ;
                      CaptionML=ENU="" }
      { 1240030029;2 ;ActionGroup;
                      CaptionML=ENU=Fi&lter;
                      Image=FilterLines }
      { 1240030030;3 ;Action    ;
                      CaptionML=ENU=Show All Documents;
                      OnAction=BEGIN
                                 RESET;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1240030031;3 ;Action    ;
                      CaptionML=ENU=Show Documents With Errors;
                      OnAction=BEGIN
                                 SETRANGE("Data Error",TRUE);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 1240030032;3 ;Action    ;
                      CaptionML=ENU=Remove Requirement;
                      ToolTipML=ENU=Select to remove the PO Change (ex. 860) evaluation requirement.;
                      OnAction=BEGIN
                                 IF CONFIRM(Text002,FALSE) THEN BEGIN
                                   "Evaluate PO Change" := FALSE;
                                   CurrPage.UPDATE(TRUE);
                                 END;
                               END;
                                }
      { 1240030033;2 ;Separator ;
                      CaptionML=ENU="" }
      { 1240030034;2 ;Action    ;
                      CaptionML=ENU=&Create Trade Partner Items;
                      ToolTipML=ENU=Lists the EDI Item numbers pending a system Item cross reference.;
                      Promoted=Yes;
                      Image=Action;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CreateTradePtnrItems;
                               END;
                                }
      { 1240030035;2 ;Separator ;
                      CaptionML=ENU="" }
      { 1240030036;2 ;Action    ;
                      CaptionML=ENU=&View Text EDI Document;
                      ToolTipML=ENU=Select to view the raw EDI text file.;
                      Promoted=Yes;
                      Image=View;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ViewTextEDIDocument;
                               END;
                                }
      { 1240030037;2 ;Separator  }
      { 1240030038;2 ;Action    ;
                      CaptionML=ENU=&Trace;
                      ToolTipML=ENU=Lists all system and EDI records containing the same 'EDI Internal Doc No.' or associated records.;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Trace;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CLEAR(EDITrace);
                                 EDITrace.SetDoc("Internal Doc. No.");
                                 EDITrace.RUNMODAL;
                               END;
                                }
      { 1240030039;2 ;Separator  }
      { 1240030040;2 ;Action    ;
                      CaptionML=ENU=Arch&ive Document;
                      ToolTipML=ENU=Select to Archive the EDI Receive Document. Archiving allows for faster sorting and filtering of the data.;
                      Promoted=Yes;
                      Image=History;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 EDIArchiveManagement.ArchiveReceiveDocument(Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 31      ;1   ;ActionGroup;
                      CaptionML=ENU=&Print }
      { 32      ;2   ;Action    ;
                      CaptionML=ENU=EDI Received Doc. (List Fields);
                      ToolTipML=ENU=Based upon the mapping and the received EDI file, the List Fields shows the translated data.;
                      Promoted=Yes;
                      Image=PrintDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 EDIRecDocHdr.SETRANGE("Internal Doc. No.","Internal Doc. No.");
                                 EDIRecDocHdr.SETRANGE("Customer No.","Customer No.");
                                 IF EDIRecDocHdr.FIND('-') THEN
                                   REPORT.RUNMODAL(REPORT::"E.D.I. Received Doc",TRUE,TRUE,EDIRecDocHdr);
                               END;
                                }
      { 33      ;2   ;Action    ;
                      CaptionML=ENU=Formatted Receive Document;
                      ToolTipML=ENU=Select to print the Formatted Receive Document report. Those Elements/Conditionals mapped with Print - TRUE will print on the report.;
                      Promoted=Yes;
                      Image=PrintDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 EDIRecDocHdr.SETRANGE("Internal Doc. No.","Internal Doc. No.");
                                 EDIRecDocHdr.SETRANGE("Customer No.","Customer No.");
                                 IF EDIRecDocHdr.FIND('-') THEN
                                   REPORT.RUNMODAL(REPORT::"Formatted Receive Doc.",TRUE,TRUE,EDIRecDocHdr);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 1000000002;2;Field  ;
                SourceExpr="Shortcut Dimension 5 Code" }

    { 23  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the Trade Partner "No." from the Trade Partner page.;
                SourceExpr="Trade Partner No." }

    { 6   ;2   ;Field     ;
                ToolTipML=ENU=Enabled when errors were encountered upon creation or update of the EDI Document.;
                SourceExpr="Data Error" }

    { 1240020003;2;Field  ;
                ToolTipML=ENU=Description of error that set the Data Error flag.;
                SourceExpr="Error Message Text" }

    { 1240030000;2;Field  ;
                SourceExpr="Sales Doc. Created" }

    { 34  ;2   ;Field     ;
                ToolTipML=ENU=Enabled when the Formatted Receive Document is printed.;
                SourceExpr="Document Printed" }

    { 21  ;2   ;Field     ;
                ToolTipML=ENU=Sell-to Customer number on the Sales Order resulting from the EDI Receive Document. Field will not be populated until the Sales Order is created.;
                SourceExpr="Customer No." }

    { 19  ;2   ;Field     ;
                ToolTipML=ENU=System Customer Name on the Sales Order.;
                SourceExpr="Customer Name" }

    { 1240020001;2;Field  ;
                SourceExpr="Customer Reference No." }

    { 1000000000;2;Field  ;
                SourceExpr="CSR Code" }

    { 1000000003;2;Field  ;
                SourceExpr="ISR Code" }

    { 1000000004;2;Field  ;
                Name=Order Status;
                SourceExpr=SalesOrderStatus }

    { 29  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the EDI Internal Doc No that is a link back to the EDI Receive Document.;
                SourceExpr="Internal Doc. No." }

    { 2   ;2   ;Field     ;
                ToolTipML=ENU=Date the Receive Document was successfully created from an import document.;
                SourceExpr="Date Received" }

    { 1240020007;2;Field  ;
                SourceExpr="Time Received" }

    { 4   ;2   ;Field     ;
                SourceExpr="Sales Order Created Date";
                Visible=FALSE }

    { 1000000001;2;Field  ;
                SourceExpr="Sales Order No." }

    { 17  ;2   ;Field     ;
                ToolTipML=ENU=Represents the system functionality associated to the Document. For Import, a Receive Documents is created and determines the system destination of the data. For Export, a Send Document is created from the applicable system document.;
                SourceExpr="Navision Document" }

    { 25  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the EDI document number identifying the transaction. For Delimited X12 files, it is included as part of the file name for Inbox and Outbox files. It is exported as the ST-01. For Sterling/Gentran, set as position 1 on each line.;
                SourceExpr="EDI Document No." }

    { 27  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the EDI document version of the industry standard being used, typically found in the mapping guides. For Delimited X12 outbound files, it is sent as the GS-08. For Sterling/Gentran, it is sent at position 114 on the "000" heading line.;
                SourceExpr="EDI Version" }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1901137307;1;Part   ;
                SubPageLink=Internal Doc. No.=FIELD(Internal Doc. No.);
                PagePartID=Page14050301;
                Visible=TRUE;
                PartType=Page }

    { 1904055707;1;Part   ;
                SubPageLink=EDI Internal Doc. No.=FIELD(Internal Doc. No.);
                PagePartID=Page14050302;
                Visible=TRUE;
                PartType=Page }

    { 1905472807;1;Part   ;
                SubPageLink=Internal Doc. No.=FIELD(Internal Doc. No.);
                PagePartID=Page14050311;
                Visible=TRUE;
                PartType=Page }

    { 1904331907;1;Part   ;
                SubPageLink=Used on Bill of Lading No.=FIELD(NAV BOL No.);
                PagePartID=Page14050328;
                Visible=FALSE;
                PartType=Page }

    { 1904936207;1;Part   ;
                SubPageLink=EDI Internal Doc. No.=FIELD(Internal Doc. No.);
                PagePartID=Page14050335;
                Visible=FALSE;
                PartType=Page }

  }
  CODE
  {
    VAR
      EDIRecDocHdr@1240030000 : Record 14002358;
      EDISendDocHdr@1240030001 : Record 14002369;
      EDIDocument@1240020002 : Record 14002353;
      EDIFunctAckSend@1240030004 : Codeunit 14002361;
      EDIArchiveManagement@1240030010 : Codeunit 14000378;
      ForecastandRelease@1240030003 : Codeunit 14002407;
      BulkDrawDown@1240030002 : Codeunit 14002406;
      EvaluateCrossReference@1240020000 : Codeunit 14000380;
      SalesDocumentChange@1240020003 : Codeunit 14002408;
      EDITrace@1240030007 : Page 14002386;
      Text001@1001 : TextConst 'ENU=Functional Acknowledgement has been successfully created but not sent.';
      OrderStatusHdr@1240030009 : Record 14002400;
      Text002@1240030005 : TextConst 'ENU=Remove the PO Change evaluation requirement?';
      Text003@1240020001 : TextConst 'ENU=Transaction Set Purpose Code %1 not currently supported.';
      Text004@1240020004 : TextConst 'ENU=Change document processed.';
      SalesOrderStatus@1000000000 : Text;

    LOCAL PROCEDURE GetSalesOrderStatus@1000000002(EDIId@1000000001 : Code[20]);
    VAR
      SalesHeader@1000000000 : Record 36;
    BEGIN
      SalesHeader.RESET;
      SalesHeader.SETRANGE("EDI Internal Doc. No.",EDIId);
      IF SalesHeader.FINDLAST THEN
        SalesOrderStatus:= FORMAT(SalesHeader.Status);
    END;

    BEGIN
    {
      2018-05-14 TPZ2319 DKUMAR
        Added New Field Division Code.
      2019-03-01 TPZ2499 AKUMAR
        Added New Field ISR Code.
    }
    END.
  }
}

