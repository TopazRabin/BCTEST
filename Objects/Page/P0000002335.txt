OBJECT Page 2335 BC O365 Email Account Settings
{
  OBJECT-PROPERTIES
  {
    Date=11/22/17;
    Time=12:00:00 PM;
    Version List=NAVW111.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Email Account;
               ESM=Cuenta de correo electr¢nico;
               FRC=Compte de messagerie;
               ENC=Email Account];
    DeleteAllowed=No;
    SourceTable=Table409;
    PageType=CardPart;
    SourceTableTemporary=Yes;
    RefreshOnActivate=Yes;
    OnOpenPage=VAR
                 SMTPMailSetup@1002 : Record 409;
                 User@1001 : Record 2000000120;
                 SMTPMail@1000 : Codeunit 400;
               BEGIN
                 INIT;
                 IF SMTPMailSetup.GET THEN BEGIN
                   TRANSFERFIELDS(SMTPMailSetup);
                   GetEmailProvider(SMTPMailSetup)
                 END ELSE BEGIN
                   SMTPMail.ApplyOffice365Smtp(Rec);
                   EmailProvider := EmailProvider::"Office 365";
                   IF User.GET(USERSECURITYID) THEN
                     "User ID" := User."Authentication Email";
                   SMTPMailSetup := Rec;
                   IF SMTPMailSetup.INSERT THEN;
                 END;
                 INSERT;

                 IF SMTPMailSetup.HasPassword THEN
                   Password := DummyPasswordTxt;

                 PasswordModified := FALSE;
               END;

    OnModifyRecord=BEGIN
                     IF NOT CurrPage.LOOKUPMODE THEN
                       IF ValidateSettings(TRUE) THEN
                         StoreSMTPSetup;
                   END;

    OnQueryClosePage=BEGIN
                       IF NOT CurrPage.LOOKUPMODE THEN
                         IF ValidateSettings(TRUE) THEN
                           StoreSMTPSetup;
                     END;

    ActionList=ACTIONS
    {
      { 1       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
    }
  }
  CONTROLS
  {
    { 5   ;0   ;Container ;
                ContainerType=ContentArea }

    { 4   ;1   ;Group     ;
                GroupType=Group;
                InstructionalTextML=[ENU=Your invoices will be sent from the following email account.;
                                     ESM=Sus facturas se enviar n desde la siguiente cuenta de correo electr¢nico.;
                                     FRC=Vos factures seront envoy‚es … partir du compte de messagerie suivant.;
                                     ENC=Your invoices will be sent from the following email account.] }

    { 2   ;1   ;Field     ;
                Name=Email Provider;
                CaptionML=[ENU=Email Account Type;
                           ESM=Tipo de cuenta de correo electr¢nico;
                           FRC=Type de compte de messagerie;
                           ENC=Email Account Type];
                ToolTipML=[ENU=Specifies your email provider.;
                           ESM=Especifica el proveedor de correo electr¢nico.;
                           FRC=Sp‚cifie votre fournisseur de messagerie.;
                           ENC=Specifies your email provider.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=EmailProvider;
                OnValidate=BEGIN
                             CASE EmailProvider OF
                               EmailProvider::"Office 365":
                                 SMTPMail.ApplyOffice365Smtp(Rec);
                               EmailProvider::Outlook:
                                 SMTPMail.ApplyOutlookSmtp(Rec);
                               EmailProvider::Gmail:
                                 SMTPMail.ApplyGmailSmtp(Rec);
                               EmailProvider::Yahoo:
                                 SMTPMail.ApplyYahooSmtp(Rec);
                               EmailProvider::"Other Email Provider":
                                 "SMTP Server" := '';
                             END;

                             AdvancedSettingsVisible := EmailProvider = EmailProvider::"Other Email Provider";

                             Password := '';
                             PasswordModified := TRUE;
                           END;
                            }

    { 12  ;1   ;Group     ;
                GroupType=Group }

    { 13  ;2   ;Group     ;
                Visible=AdvancedSettingsVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=Enter the SMTP Server Details.;
                                     ESM=Especifique los detalles del servidor SMTP.;
                                     FRC=Saisissez les d‚tails du serveur SMTP.;
                                     ENC=Enter the SMTP Server Details.] }

    { 8   ;3   ;Field     ;
                Name=Authentication;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=Authentication }

    { 7   ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="SMTP Server";
                ShowMandatory=TRUE }

    { 6   ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="SMTP Server Port" }

    { 3   ;3   ;Field     ;
                Name=Secure Connection;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Secure Connection" }

    { 10  ;1   ;Field     ;
                ExtendedDatatype=E-Mail;
                CaptionML=[ENU=Email;
                           ESM=Correo electr¢nico;
                           FRC=Adresse de messagerie;
                           ENC=Email];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="User ID";
                OnValidate=VAR
                             MailManagement@1000 : Codeunit 9520;
                           BEGIN
                             IF "User ID" <> '' THEN
                               MailManagement.CheckValidEmailAddress("User ID");
                           END;
                            }

    { 9   ;1   ;Field     ;
                Name=Password;
                ExtendedDatatype=Masked;
                CaptionML=[ENU=Password;
                           ESM=Contrase¤a;
                           FRC=Mot de p.;
                           ENC=Password];
                ToolTipML=[ENU=Specifies the password used for logging into the server.;
                           ESM=Especifica la contrase¤a que usa para iniciar sesi¢n en el servidor.;
                           FRC=Sp‚cifie le mot de passe utilis‚ pour se connecter au serveur.;
                           ENC=Specifies the password used for logging into the server.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=Password;
                OnValidate=BEGIN
                             PasswordModified := TRUE;
                             "Password Key" := CREATEGUID; // trigger modify
                           END;
                            }

    { 11  ;1   ;Field     ;
                Name=TestEmailLbl;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=TestEmailLbl;
                Editable=FALSE;
                Style=StandardAccent;
                StyleExpr=TRUE;
                OnDrillDown=BEGIN
                              ValidateSettings(FALSE);

                              SendTestEmailAction;
                            END;

                ShowCaption=No }

  }
  CODE
  {
    VAR
      SMTPMail@1016 : Codeunit 400;
      AdvancedSettingsVisible@1013 : Boolean;
      Password@1005 : Text[250];
      PasswordModified@1006 : Boolean;
      EmailProvider@1003 : 'Office 365,Outlook,Gmail,Yahoo,Other Email Provider';
      DummyPasswordTxt@1001 : TextConst '@@@={Locked};ENU=***;ESM=***;FRC=***;ENC=***';
      TestEmailLbl@1000 : TextConst 'ENU=Send test email;ESM=Enviar correo electr¢nico de prueba;FRC=Envoyer un courriel de test;ENC=Send test email';
      EmailMissingUserPassErr@1004 : TextConst 'ENU=You must provide a user name and password to send email.;ESM=Debe proporcionar un nombre de usuario y una contrase¤a para poder enviar correos electr¢nicos.;FRC=Vous devez fournir un nom d''utilisateur et un mot de passe pour envoyer des messages ‚lectroniques.;ENC=You must provide a user name and password to send email.';
      MissingServerSettingsErr@1002 : TextConst 'ENU=You must provide server information to send email.;ESM=Debe proporcionar la informaci¢n del servidor para poder enviar correos electr¢nicos.;FRC=Vous devez fournir les informations du serveur pour envoyer des messages ‚lectroniques.;ENC=You must provide server information to send email.';

    PROCEDURE StoreSMTPSetup@31();
    VAR
      SMTPMailSetup@1000 : Record 409;
    BEGIN
      IF NOT SMTPMailSetup.GET THEN BEGIN
        SMTPMailSetup.INIT;
        SMTPMailSetup.INSERT;
      END;

      // preserve old password key in case we need to remove it
      "Password Key" := SMTPMailSetup."Password Key";

      SMTPMailSetup.TRANSFERFIELDS(Rec,FALSE);

      IF PasswordModified THEN BEGIN
        IF Password = '' THEN
          SMTPMailSetup.RemovePassword
        ELSE
          SMTPMailSetup.SetPassword(Password);
      END;

      SMTPMailSetup.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE SendTestEmailAction@10();
    BEGIN
      StoreSMTPSetup;
      COMMIT;
      CODEUNIT.RUN(CODEUNIT::"SMTP Test Mail");
    END;

    LOCAL PROCEDURE GetEmailProvider@11(VAR SMTPMailSetup@1000 : Record 409);
    BEGIN
      IF SMTPMail.IsOffice365Setup(SMTPMailSetup) THEN
        EmailProvider := EmailProvider::"Office 365"
      ELSE
        IF SMTPMail.IsOutlookSetup(SMTPMailSetup) THEN
          EmailProvider := EmailProvider::Outlook
        ELSE
          IF SMTPMail.IsGmailSetup(SMTPMailSetup) THEN
            EmailProvider := EmailProvider::Gmail
          ELSE
            IF SMTPMail.IsYahooSetup(SMTPMailSetup) THEN
              EmailProvider := EmailProvider::Yahoo
            ELSE
              EmailProvider := EmailProvider::"Other Email Provider";

      AdvancedSettingsVisible := EmailProvider = EmailProvider::"Other Email Provider";
    END;

    [TryFunction]
    PROCEDURE ValidateSettings@1(EmptyAuthInfoValid@1000 : Boolean);
    BEGIN
      IF EmailProvider = EmailProvider::"Other Email Provider" THEN BEGIN
        IF (NOT EmptyAuthInfoValid) AND ("SMTP Server" = '') THEN
          ERROR(MissingServerSettingsErr);
        EXIT;
      END;

      IF EmptyAuthInfoValid AND ("User ID" = '') AND (Password = '') THEN
        EXIT;

      IF ("User ID" = '') OR (Password = '') THEN
        ERROR(EmailMissingUserPassErr);
    END;

    BEGIN
    END.
  }
}

