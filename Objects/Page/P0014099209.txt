OBJECT Page 14099209 Inbound ASN Statistics
{
  OBJECT-PROPERTIES
  {
    Date=01/01/16;
    Time=12:00:00 PM;
    Version List=IBA1.10;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Inbound ASN Statistics;
    SourceTable=Table14099200;
    PageType=Card;
    OnOpenPage=BEGIN
                 IF InboundASNHeader.GET("ASN No.") THEN
                   CalcInboundASNStats;
               END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                CaptionML=ENU=General }

    { 3   ;2   ;Field     ;
                CaptionML=ENU=Quantity;
                DecimalPlaces=0:5;
                SourceExpr=LineQty }

    { 7   ;2   ;Field     ;
                CaptionML=ENU=Net Weight;
                DecimalPlaces=0:5;
                SourceExpr=TotalNetWeight }

    { 10  ;2   ;Field     ;
                CaptionML=ENU=Gross Weight;
                DecimalPlaces=0:5;
                SourceExpr=TotalGrossWeight }

    { 17  ;2   ;Field     ;
                CaptionML=ENU=Volume;
                DecimalPlaces=0:5;
                SourceExpr=TotalVolume }

    { 1240020000;2;Field  ;
                Name=TotalUnitCost;
                CaptionML=ENU=Total Cost;
                DecimalPlaces=0:5;
                SourceExpr=TotalCost }

    { 1240020002;2;Field  ;
                Name=TotalImportedUnitCost;
                CaptionML=ENU=Total Imported Cost;
                DecimalPlaces=0:5;
                SourceExpr=TotalImportedCost }

  }
  CODE
  {
    VAR
      LineQty@1000 : Decimal;
      TotalNetWeight@1001 : Decimal;
      TotalGrossWeight@1002 : Decimal;
      TotalVolume@1003 : Decimal;
      InboundASNHeader@1240020000 : Record 14099200;
      TotalCost@1240020001 : Decimal;
      TotalImportedCost@1240020002 : Decimal;

    PROCEDURE CalcInboundASNStats@1240020001();
    VAR
      InboundASNLine@1240020000 : Record 14099201;
    BEGIN
      InboundASNLine.SETRANGE("ASN No.",InboundASNHeader."ASN No.");
      IF InboundASNLine.FIND('-') THEN
        REPEAT
          LineQty := LineQty + InboundASNLine."Ship Qty.";
          TotalCost := TotalCost + (InboundASNLine."Ship Qty." * InboundASNLine."Purchase Line Direct Unit Cost");
          TotalImportedCost := TotalImportedCost + (InboundASNLine."Ship Qty." * InboundASNLine."Imported Unit Cost");
          TotalNetWeight := TotalNetWeight + (InboundASNLine."Ship Qty." * InboundASNLine."Net Weight");
          TotalGrossWeight := TotalGrossWeight + (InboundASNLine."Ship Qty." * InboundASNLine."Gross Weight");
          TotalVolume := TotalVolume + (InboundASNLine."Ship Qty." * InboundASNLine."Unit Volume");
        UNTIL InboundASNLine.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

