OBJECT Page 11123314 SC - Manual Process Requests
{
  OBJECT-PROPERTIES
  {
    Date=04/18/17;
    Time=[ 1:00:00 PM];
    Version List=SCW19.2.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Manual Process Requests;
    InsertAllowed=No;
    DeleteAllowed=Yes;
    ModifyAllowed=No;
    SourceTable=Table11123315;
    PageType=Worksheet;
    OnOpenPage=VAR
                 FileInfo@11123302 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
                 File@11123303 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{C7C3F5B5-88A3-11D0-ABCB-00A0C90FFFC0}:'Windows Script Host Object Model'.File";
                 RequestTracker@11123304 : Record 11123315;
               BEGIN
                 FILTERGROUP(2);
                 SETRANGE("User ID",USERID);
                 FILTERGROUP(0);
               END;

    OnAfterGetRecord=BEGIN
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

    OnDeleteRecord=VAR
                     ManualProcessRequests@11123302 : Record 11123315;
                   BEGIN
                     IF ManualProcessRequests.FINDFIRST THEN
                       IF ManualProcessRequests.NEXT = 0 THEN
                         RequestFilePath := '';
                   END;

    ActionList=ACTIONS
    {
      { 11123305;0   ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 11123304;1   ;Action    ;
                      Name=<Action1000000020>;
                      CaptionML=ENU=View &Request;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=View;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 TempBlob@11123303 : TEMPORARY Record 99008535;
                                 FileMgt@11123304 : Codeunit 419;
                               BEGIN
                                 CheckRequestConfiguration;

                                 IF IsWebClient THEN BEGIN
                                   IF NOT CheckRequestFile(Path) THEN
                                     EXIT;

                                   TempBlob.Blob.IMPORT(Path);
                                   FileMgt.BLOBExport(TempBlob,Path,TRUE);
                                   EXIT;
                                 END;

                                 IF CheckRequestFile(Path) THEN
                                   ExecuteCommand(STRSUBSTNO(Text0007,Setup."Request Ext. Tool",Path),FALSE);
                               END;
                                }
      { 11123303;1   ;Action    ;
                      Name=<Action1000000021>;
                      CaptionML=ENU=&Process Request;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ProcessRequest;
                               END;
                                }
      { 11123302;1   ;Action    ;
                      CaptionML=ENU=&Setup;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 11123315;
                      RunPageOnRec=No;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Setup;
                      PromotedCategory=Process }
    }
  }
  CONTROLS
  {
    { 11123315;0;Container;
                ContainerType=ContentArea }

    { 11123314;1;Field    ;
                CaptionML=ENU=Add Request File;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=RequestFilePath;
                OnAssistEdit=VAR
                               Result@11123303 : Text[250];
                             BEGIN
                               IF IsWebClient THEN
                                 Result := ServerSelectPath(Text0008)
                               ELSE
                                 Result := SelectPath(Text0008);

                               IF Result <> '' THEN BEGIN
                                 RequestFilePath := Result;
                                 CurrPage.UPDATE(FALSE);
                               END;
                             END;
                              }

    { 11123313;1;Group    ;
                GroupType=Repeater }

    { 11123312;2;Field    ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Path;
                Editable=FALSE }

    { 11123311;2;Field    ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Name;
                Editable=FALSE }

    { 11123310;2;Field    ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Size;
                Editable=FALSE }

    { 11123309;2;Field    ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Type;
                Editable=FALSE }

    { 11123308;2;Field    ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Date Created";
                Editable=FALSE }

    { 11123307;2;Field    ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Date Last Modified";
                Editable=FALSE }

    { 11123306;2;Field    ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Date Last Accessed";
                Editable=FALSE }

  }
  CODE
  {
    VAR
      Text0002@11123302 : TextConst 'ENU=Request file %1 does not exist anymore. Do you want to delete it from history?';
      Text0003@11123303 : TextConst 'ENU=Setup for user %1 is not configured properly. Response output directory is not set or does not exist.';
      Setup@11123304 : Record 11123316;
      Text0004@11123305 : TextConst 'ENU=Setup for user %1 is not created. Check Process Requests Setup form.';
      Text0005@11123306 : TextConst 'ENU=Setup for user %1 is not configured properly. Request Ext. Tool is not set.';
      Text0006@11123307 : TextConst 'ENU=Setup for user %1 is not configured properly. Response Ext. Tool is not set.';
      RequestFilePath@11123308 : Text[200];
      Text0007@11123309 : TextConst 'ENU="""%1"" ""%2"""';
      Text0008@11123310 : TextConst 'ENU=Add new request file...';
      Text0009@11123312 : TextConst 'ENU=Import';
      Text0010@11123314 : TextConst 'ENU=All Files (*.*)|*.*';
      Text0011@11123313 : TextConst 'ENU=Default';
      Text0012@11123315 : TextConst 'ENU=Empty response has been generated.';
      Text0013@11123311 : TextConst '@@@="%1=file types, such as *.txt or *.docx";ENU=Files (%1)|%1;ESM=Datos adjuntos (%1)|%1;FRC=PiŠces jointes (%1)|%1;ENC=Attachments (%1)|%1';
      Text0014@11123301 : TextConst '@@@={Locked};ENU="*.txt;*.xml;*.*";ESM="*.jpg;*.jpeg;*.bmp;*.png;*.gif;*.tiff;*.tif;*.pdf;*.docx;*.doc;*.xlsx;*.xls;*.pptx;*.ppt;*.msg;*.xml;*.*";FRC="*.jpg;*.jpeg;*.bmp;*.png;*.gif;*.tiff;*.tif;*.pdf;*.docx;*.doc;*.xlsx;*.xls;*.pptx;*.ppt;*.msg;*.xml;*.*";ENC="*.jpg;*.jpeg;*.bmp;*.png;*.gif;*.tiff;*.tif;*.pdf;*.docx;*.doc;*.xlsx;*.xls;*.pptx;*.ppt;*.msg;*.xml;*.*"';
      Text0015@11123316 : TextConst 'ENU=Insert File;ESM=Insertar archivo;FRC=Ins‚rer un fichier;ENC=Insert File';

    LOCAL PROCEDURE ProcessRequest@11123319();
    VAR
      RequestBuff@11123302 : TEMPORARY Record 11123303;
      ResponseBuff@11123303 : TEMPORARY Record 11123303;
      Context@11123305 : Codeunit 11123305;
      Dispatcher@11123304 : Codeunit 11123306;
      FileName@11123306 : Text[260];
    BEGIN
      CheckResponseConfiguration;
      IF NOT CheckRequestFile(Path) THEN
        EXIT;

      Context.InitBuffer(RequestBuff);
      ImportRequestFile(RequestBuff);
      RequestBuff.INSERT;

      Context.InitBuffer(ResponseBuff);
      ResponseBuff.INSERT;

      Context.SkipSanaEnabledCheck;
      Context.Initialize(RequestBuff,ResponseBuff);

      IF Context.RUN(ResponseBuff) THEN BEGIN
        IF NOT Dispatcher.RUN THEN
          Context.HandleError;
        Context.Finalize(ResponseBuff);
        SaveResponse(ResponseBuff);
        CurrPage.UPDATE(FALSE);
      END ELSE BEGIN
        ERROR(GETLASTERRORTEXT);
        CLEARLASTERROR;
      END;
    END;

    PROCEDURE SelectPath@11123302(Title@11123302 : Text[150]) FilePath : Text[200];
    VAR
      FileInfo@11123304 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      File@11123305 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{C7C3F5B5-88A3-11D0-ABCB-00A0C90FFFC0}:'Windows Script Host Object Model'.File";
      Folder@11123306 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{C7C3F5B3-88A3-11D0-ABCB-00A0C90FFFC0}:'Windows Script Host Object Model'.Folder";
    BEGIN
      CheckSetupConfiguration;
      CREATE(FileInfo,TRUE,TRUE);

      FilePath := OpenFileDialog(Title,RequestFilePath);

      IF FileInfo.FileExists(FilePath) THEN BEGIN
        File := FileInfo.GetFile(FilePath);
        IF GET(USERID,File.Path) THEN
          UpdateTrackingInfoRecord(Rec,File)
        ELSE
          InsertTrackingInfoRecord(Rec,File);
        COMMIT;
      END ELSE
        FilePath := '';

      CLEAR(FileInfo);
    END;

    PROCEDURE UpdateTrackingInfoRecord@11123303(VAR RecordToUpdate@11123302 : Record 11123315;VAR File@11123303 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{C7C3F5B5-88A3-11D0-ABCB-00A0C90FFFC0}:'Windows Script Host Object Model'.File");
    BEGIN
      UpdateTrackingInfoRecordImpl(RecordToUpdate,File);
      RecordToUpdate.MODIFY;
    END;

    PROCEDURE UpdateTrackingInfoRecordImpl@11123304(VAR RecordToUpdate@11123302 : Record 11123315;VAR File@11123303 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{C7C3F5B5-88A3-11D0-ABCB-00A0C90FFFC0}:'Windows Script Host Object Model'.File");
    BEGIN
      WITH RecordToUpdate DO BEGIN
        "User ID" := USERID;
        Path := File.Path;
        Name := File.Name;
        "Date Created" := File.DateCreated;
        "Date Last Modified" := File.DateLastModified;
        "Date Last Accessed" := File.DateLastAccessed;
        Size := File.Size;
        Type := File.Type;
      END;
    END;

    PROCEDURE InsertTrackingInfoRecord@11123305(VAR RecordToInsert@11123302 : Record 11123315;VAR File@11123303 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{C7C3F5B5-88A3-11D0-ABCB-00A0C90FFFC0}:'Windows Script Host Object Model'.File");
    BEGIN
      RecordToInsert.INIT;
      RecordToInsert.Path := File.Path;
      UpdateTrackingInfoRecordImpl(RecordToInsert,File);
      RecordToInsert.INSERT;
    END;

    PROCEDURE SaveResponse@11123306(VAR ResponseBuff@11123302 : Record 11123303);
    BEGIN
      IF IsWebClient THEN
        ServerSaveResponse(ResponseBuff)
      ELSE
        ClientSaveResponse(ResponseBuff);
    END;

    PROCEDURE CheckRequestConfiguration@11123307();
    BEGIN
      CheckSetupConfiguration;
      IF Setup."Response Ext. Tool" = '' THEN
        ERROR(Text0005, USERID);
    END;

    PROCEDURE CheckResponseConfiguration@11123308();
    VAR
      ResponseFileDir@11123302 : Text[250];
      FileInfo@11123303 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
    BEGIN
      CheckSetupConfiguration;

      IF IsWebClient THEN
        EXIT;

      IF Setup."Response Ext. Tool" = '' THEN
        ERROR(Text0006, USERID);

      IF NOT ISCLEAR(FileInfo) THEN
        CLEAR(FileInfo);
      CREATE(FileInfo,TRUE,TRUE);
      IF NOT FileInfo.FolderExists(Setup."Response Output Directory") THEN
        ERROR(Text0003, USERID);

      CLEAR(FileInfo);
    END;

    PROCEDURE CheckSetupConfiguration@11123309();
    BEGIN
      IF NOT Setup.GET(USERID) THEN
        ERROR(Text0004, USERID);
    END;

    PROCEDURE CheckRequestFile@11123310(FilePath@11123302 : Text[1024]) Result : Boolean;
    VAR
      FileInfo@11123305 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      FileMgt@11123304 : Codeunit 419;
      FileName@11123303 : Text;
    BEGIN
      FileName := FileMgt.GetFileName(FilePath);

      IF IsWebClient THEN BEGIN
        Result := FileMgt.ServerFileExists(FilePath);
        IF NOT Result AND (Path <> '') THEN
          IF CONFIRM(STRSUBSTNO(Text0002,FileName), FALSE) THEN
            DELETE;
        EXIT(Result);
      END;

      IF ISCLEAR(FileInfo) THEN
        CREATE(FileInfo,TRUE,TRUE);

      Result := FileInfo.FileExists(Path);
      CLEAR(FileInfo);
      IF NOT Result AND (Path <> '') THEN
        IF CONFIRM(STRSUBSTNO(Text0002,FileName), FALSE) THEN
          DELETE;
    END;

    LOCAL PROCEDURE ExecuteCommand@11123311(_commandLine@11123302 : Text[1024];_runModally@11123303 : Boolean) : Integer;
    VAR
      wSHShell@11123304 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{72C24DD5-D70A-438B-8A42-98424B88AFB8}:'Windows Script Host Object Model'.WshShell";
      wSHExecStatus@11123305 : Integer;
      dummyInt@11123306 : Integer;
      Process@11123301 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process";
    BEGIN
      CREATE(wSHShell,TRUE,TRUE);
      dummyInt := 1;
      wSHExecStatus := wSHShell.Run(_commandLine,dummyInt,_runModally);
      CLEAR(wSHShell);
      EXIT(wSHExecStatus);
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      RequestFilePath := Path;
    END;

    LOCAL PROCEDURE InitBlob@11123318(VAR TempBlob@11123302 : Record 99008535);
    BEGIN
      CLEAR(TempBlob);
      IF NOT TempBlob.ISEMPTY THEN
        TempBlob.DELETEALL;
      TempBlob.INIT;
    END;

    LOCAL PROCEDURE GetBlob@11123317(VAR TempBlob@11123302 : Record 99008535);
    BEGIN
      TempBlob.GET;
      TempBlob.CALCFIELDS(Blob);
    END;

    PROCEDURE BLOBImport@11123312(VAR BLOBRef@11123302 : Record 11123303;SourceFileName@11123304 : Text[1024];CommonDialog@11123307 : Boolean) : Text[1024];
    VAR
      FileSystemObject@11123303 : Automation "{420B2830-E718-11CF-893D-00A0C9054228} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Microsoft Scripting Runtime'.FileSystemObject";
      NVOutStream@11123305 : OutStream;
      NVInStream@11123306 : InStream;
      DestinationFileName@11123308 : Text[1024];
    BEGIN
      CREATE(FileSystemObject,TRUE,TRUE);
      DestinationFileName := ClientTempFileName;
      IF FileSystemObject.FileExists(DestinationFileName) THEN
        FileSystemObject.DeleteFile(DestinationFileName,TRUE);
      FileSystemObject.CopyFile(SourceFileName,DestinationFileName);
      CLEAR(FileSystemObject);

      IF UPLOADINTOSTREAM(Text0009,'',Text0010,DestinationFileName,NVInStream) THEN BEGIN
        BLOBRef.XML.CREATEOUTSTREAM(NVOutStream);
        COPYSTREAM(NVOutStream,NVInStream);
        EXIT(DestinationFileName);
      END;
      EXIT('');
    END;

    PROCEDURE ClientTempFileName@11123313() : Text[1024];
    VAR
      TempFile@11123302 : File;
      ClientFileName@11123303 : Text[1024];
    BEGIN
      TempFile.CREATETEMPFILE;
      ClientFileName := TempFile.NAME + '.xml';
      TempFile.CLOSE;
      TempFile.CREATE(ClientFileName);
      TempFile.CLOSE;
      EXIT(DownloadTempFile(ClientFileName));
    END;

    PROCEDURE GetPath@11123314(FileName@11123302 : Text[1024]) : Text[1024];
    BEGIN
      FileName := DELCHR(FileName,'<');
      Path := FileName;
      WHILE STRPOS(FileName,'\')<>0 DO BEGIN
        FileName := COPYSTR(FileName,STRPOS(FileName,'\') + 1);
      END;
      IF STRLEN(Path) > STRLEN(FileName) THEN
        EXIT(COPYSTR(Path,1,STRLEN(Path) - STRLEN(FileName)))
      ELSE
        EXIT('');
    END;

    PROCEDURE MagicPath@11123316() : Text[1024];
    BEGIN
      EXIT('<TEMP>');   // MAGIC PATH makes sure we don't get a prompt
    END;

    PROCEDURE DownloadTempFile@11123315(ServerFileName@11123302 : Text[1024]) : Text[1024];
    VAR
      FileName@11123303 : Text[1024];
      Path@11123304 : Text[1024];
    BEGIN
      FileName := ServerFileName;
      Path := MagicPath;
      DOWNLOAD(ServerFileName,'',Path,Text0010,FileName);
      EXIT(FileName);
    END;

    PROCEDURE BLOBExport@11123320(VAR BLOBRef@11123302 : Record 11123303;Name@11123303 : Text[1024];CommonDialog@11123304 : Boolean) : Text[1024];
    VAR
      FileSystemObject@11123310 : Automation "{420B2830-E718-11CF-893D-00A0C9054228} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Microsoft Scripting Runtime'.FileSystemObject";
      NVInStream@11123305 : InStream;
      p@11123306 : Integer;
      Path@11123307 : Text[1024];
      ToFile@11123308 : Text[1024];
      DestinationFileName@11123311 : Text[1024];
      Result@11123309 : Boolean;
    BEGIN
      BLOBRef.XML.CREATEINSTREAM(NVInStream);
      IF STRPOS(Name,'*') = 0 THEN
        ToFile := Name
      ELSE BEGIN
        ToFile := INSSTR(Name,Text0011,1);
        ToFile := DELCHR(ToFile,'=','*');
      END;
      WHILE STRPOS(ToFile,'\') <> 0 DO BEGIN
        p := STRPOS(ToFile,'\');
        ToFile := COPYSTR(ToFile,p + 1);
      END;
      IF NOT CommonDialog THEN
        Path := '<TEMP>';
      Result := DOWNLOADFROMSTREAM(NVInStream,'',Path,'',ToFile);

      CREATE(FileSystemObject,TRUE,TRUE);
      DestinationFileName := Name;
      IF FileSystemObject.FileExists(DestinationFileName) THEN
        FileSystemObject.DeleteFile(DestinationFileName,TRUE);
      FileSystemObject.CopyFile(ToFile,DestinationFileName);
      FileSystemObject.DeleteFile(ToFile,TRUE);
      CLEAR(FileSystemObject);
      EXIT(DestinationFileName);
    END;

    PROCEDURE OpenFileDialog@11123331(Title@11123302 : Text;FilePath@11123303 : Text) : Text;
    VAR
      ClientOpenFileDialog@11123305 : DotNet "'System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Windows.Forms.OpenFileDialog" RUNONCLIENT;
      ClientDialagResult@11123304 : DotNet "'System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Windows.Forms.DialogResult" RUNONCLIENT;
      PathHelper@11123309 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path";
    BEGIN
      ClientOpenFileDialog := ClientOpenFileDialog.OpenFileDialog;
      ClientOpenFileDialog.ShowReadOnly := FALSE;
      ClientOpenFileDialog.FileName := PathHelper.GetFileName(FilePath);
      ClientOpenFileDialog.Title := Title;
      ClientOpenFileDialog.Filter := Text0010;
      ClientOpenFileDialog.InitialDirectory := GetDirectoryName(FilePath);

      ClientDialagResult := ClientOpenFileDialog.ShowDialog;
      IF ClientDialagResult.CompareTo(ClientDialagResult.OK) = 0 THEN
        EXIT(ClientOpenFileDialog.FileName);
      EXIT('');
    END;

    LOCAL PROCEDURE FileExists@1(FilePath@11123302 : Text) : Boolean;
    VAR
      ClientFileHelper@11123304 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.File" RUNONCLIENT;
    BEGIN
      EXIT(ClientFileHelper.Exists(FilePath));
    END;

    PROCEDURE GetDirectoryName@11123321(FileName@11123302 : Text) : Text;
    VAR
      PathHelper@11123303 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path";
    BEGIN
      IF FileName = '' THEN
        EXIT(FileName);

      FileName := DELCHR(FileName,'<');
      EXIT(PathHelper.GetDirectoryName(FileName));
    END;

    PROCEDURE ServerSelectPath@11123301(Title@11123302 : Text[150]) FilePath : Text[200];
    VAR
      FileMgt@11123306 : Codeunit 419;
      TempBlob@11123305 : TEMPORARY Record 99008535;
      ClientFileName@11123304 : Text;
      ServerFileName@11123303 : Text;
    BEGIN
      CheckSetupConfiguration;

      ServerFileName := FileMgt.UploadFile(Title,ClientFileName);

      IF FileMgt.ServerFileExists(ServerFileName) THEN BEGIN
        IF GET(USERID,ServerFileName) THEN
          ServerUpdateTrackingInfoRec(Rec,ServerFileName)
        ELSE
          ServerInsertTrackingInfoRec(Rec,ServerFileName);
        COMMIT;
      END ELSE
        FilePath := '';
    END;

    PROCEDURE ServerUpdateTrackingInfoRec@11123326(VAR RecordToUpdate@11123302 : Record 11123315;File@11123303 : Text);
    BEGIN
      ServerInsertTrackingInfoRec(RecordToUpdate,File);
      RecordToUpdate.MODIFY;
    END;

    PROCEDURE ServerUpdateTrackingInfoRecImpl@11123324(VAR RecordToUpdate@11123302 : Record 11123315;FullFilePath@11123301 : Text);
    VAR
      FileMgt@11123309 : Codeunit 419;
      ClientFileHelper@11123308 : DotNet "'mscorlib'.System.IO.File" RUNONCLIENT;
      ModifyDate@11123307 : Date;
      ModifyTime@11123306 : Time;
      FileSize@11123305 : Integer;
      FileType@11123304 : Text[50];
      FileName@11123303 : Text;
    BEGIN
      GetServerFileProperties(FullFilePath,ModifyDate,ModifyTime,FileSize,FileType);
      FileName := FileMgt.GetFileName(FullFilePath);

      WITH RecordToUpdate DO BEGIN
        "User ID" := USERID;
        Path := FullFilePath;
        Name := FileName;
        "Date Created" := TODAY;
        "Date Last Modified" := ModifyDate;
        "Date Last Accessed" := ModifyDate;
        Size := FileSize;
        Type := FileType;
      END;
    END;

    PROCEDURE ServerInsertTrackingInfoRec@11123323(VAR RecordToInsert@11123302 : Record 11123315;File@11123301 : Text);
    VAR
      FileMgt@11123303 : Codeunit 419;
    BEGIN
      RecordToInsert.INIT;
      RecordToInsert.Path := File;
      ServerUpdateTrackingInfoRecImpl(RecordToInsert,File);
      RecordToInsert.INSERT;
    END;

    LOCAL PROCEDURE IsWebClient@11123322() : Boolean;
    VAR
      FileMgt@11123303 : Codeunit 419;
    BEGIN
      EXIT(FileMgt.IsWebClient);
    END;

    PROCEDURE GetServerFileProperties@53(FullFileName@11123310 : Text;VAR ModifyDate@11123309 : Date;VAR ModifyTime@11123308 : Time;VAR Size@11123307 : Integer;VAR FileType@11123304 : Text);
    VAR
      FileInfo@11123312 : DotNet "'mscorlib'.System.IO.FileInfo";
      ServerFileHelper@11123311 : DotNet "'mscorlib'.System.IO.File";
      FileMgt@11123306 : Codeunit 419;
      ModifyDateTime@11123305 : DateTime;
    BEGIN
      ModifyDateTime := ServerFileHelper.GetLastWriteTime(FullFileName);
      ModifyDate := DT2DATE(ModifyDateTime);
      ModifyTime := DT2TIME(ModifyDateTime);
      Size := FileInfo.FileInfo(FullFileName).Length;
      FileType := FileMgt.GetExtension(FullFileName);
    END;

    PROCEDURE ServerSaveResponse@11123334(VAR ResponseBuff@11123302 : Record 11123303);
    VAR
      TempBlob@11123307 : TEMPORARY Record 99008535;
      Context@11123306 : Codeunit 11123305;
      FileMgt@11123305 : Codeunit 419;
      ResponseFileDir@11123304 : Text[1024];
      FileName@11123303 : Text[1024];
    BEGIN
      Context.GetBuffer(ResponseBuff);
      IF NOT ResponseBuff.XML.HASVALUE THEN
        ERROR(Text0007);

      ResponseFileDir := Setup."Response Output Directory";
      IF ResponseFileDir[STRLEN(ResponseFileDir)] <> '\' THEN
          ResponseFileDir := ResponseFileDir + '\';

      FileName := TEMPORARYPATH +
                  FORMAT(CURRENTDATETIME,0,'<Day,2>-<Month,2>-<Year>_<Hours24>.<Minutes,2>.<Seconds,2><Second dec>') + '_' +
                  'Response' + '_' +
                  Context.GetCurrentOperationName +
                  '.xml';

      ResponseBuff.XML.EXPORT(FileName);

      IF NOT CheckRequestFile(FileName) THEN
        EXIT;

      TempBlob.Blob.IMPORT(FileName);
      FileMgt.BLOBExport(TempBlob,FileName,TRUE);
    END;

    PROCEDURE ClientSaveResponse@11123335(VAR ResponseBuff@11123302 : Record 11123303);
    VAR
      TempBlob@11123308 : TEMPORARY Record 99008535;
      Context@11123307 : Codeunit 11123305;
      FileInfo@11123306 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      WriteStream@11123305 : OutStream;
      ResponseFileDir@11123304 : Text[1024];
      FileName@11123303 : Text[1024];
    BEGIN
      Context.GetBuffer(ResponseBuff);
      IF NOT ResponseBuff.XML.HASVALUE THEN
        ERROR(Text0007);

      ResponseFileDir := Setup."Response Output Directory";
      IF ResponseFileDir[STRLEN(ResponseFileDir)] <> '\' THEN
          ResponseFileDir := ResponseFileDir + '\';

      FileName := ResponseFileDir +
                  FORMAT(CURRENTDATETIME,0,'<Day,2>-<Month,2>-<Year>_<Hours24>.<Minutes,2>.<Seconds,2><Second dec>') + '_' +
                  'Response' + '_' +
                  Context.GetCurrentOperationName +
                  '.xml';

      FileName := BLOBExport(ResponseBuff,FileName,FALSE);

      IF ISCLEAR(FileInfo) THEN
        CREATE(FileInfo,TRUE,TRUE);

      IF FileInfo.FileExists(FileName) THEN
        ExecuteCommand(STRSUBSTNO(Text0007,Setup."Response Ext. Tool",FileName),FALSE);
      CLEAR(FileInfo);
    END;

    LOCAL PROCEDURE ImportRequestFile@11123349(VAR RequestBuff@11123303 : Record 11123303);
    BEGIN
      IF IsWebClient THEN
        RequestBuff.XML.IMPORT(Path)
      ELSE
        BLOBImport(RequestBuff,Path,FALSE);
    END;

    BEGIN
    END.
  }
}

