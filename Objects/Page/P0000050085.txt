OBJECT Page 50085 Xml Receive Orders
{
  OBJECT-PROPERTIES
  {
    Date=06/18/21;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=002;
  }
  PROPERTIES
  {
    InsertAllowed=No;
    SourceTable=Table50060;
    PageType=List;
    CardPageID=Xml Receive Order;
    OnAfterGetRecord=BEGIN
                       GetSalesOrderStatus(FORMAT(ttsReleaseId),FORMAT(ttsOrderId));
                     END;

    ActionList=ACTIONS
    {
      { 1000000019;  ;ActionContainer;
                      ActionContainerType=NewDocumentItems }
      { 1000000020;1 ;Action    ;
                      Name=Sales Order;
                      Promoted=Yes;
                      Visible=FALSE;
                      Image=Order }
      { 1000000003;1 ;Action    ;
                      Name=Process Receive Document;
                      CaptionML=ENU=Process Receive Document;
                      Promoted=Yes;
                      Image=ElectronicDoc;
                      OnAction=VAR
                                 TTSOrderHeader2@1000000000 : Record 50060;
                                 CreateTradeTechOrder@1000000001 : Codeunit 51987;
                                 SalesHeader@1000000002 : Record 36;
                               BEGIN
                                 CLEARLASTERROR;
                                 SalesHeader.RESET;
                                 SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::Order);
                                 SalesHeader.SETRANGE("No.","Nav Order No.");
                                 IF SalesHeader.FINDFIRST THEN BEGIN
                                   PAGE.RUN(42,SalesHeader);
                                 END ELSE BEGIN
                                   DuplicatePOCheck;//TPZ3215
                                   TTSOrderHeader2.GET("Entry No.");
                                   IF CreateTradeTechOrder.RUN(Rec) THEN BEGIN
                                     TTSOrderHeader2."Order Status" := TTSOrderHeader2."Order Status"::Confirm;
                                     TTSOrderHeader2."Nav Order No." := "Nav Order No.";
                                     TTSOrderHeader2."Error Text" := '';
                                     TTSOrderHeader2."Data Error" := FALSE;
                                     TTSOrderHeader2."CSR Code" := "CSR Code";
                                     TTSOrderHeader2."ISR Code" := "ISR Code";
                                     TTSOrderHeader2."Division Code" := "Division Code";
                                     TTSOrderHeader2.MODIFY;
                                     COMMIT;
                                   END ELSE BEGIN
                                     TTSOrderHeader2."Order Status" := TTSOrderHeader2."Order Status"::Error;
                                     TTSOrderHeader2."Data Error" := TRUE;
                                     TTSOrderHeader2."Error Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                                     TTSOrderHeader2.MODIFY;
                                   END;
                                   CurrPage.UPDATE(FALSE);
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1000000008;2;Field  ;
                SourceExpr="Entry No." }

    { 1000000022;2;Field  ;
                SourceExpr="Division Code" }

    { 1000000006;2;Field  ;
                SourceExpr="Date Received" }

    { 1000000005;2;Field  ;
                SourceExpr="Time Received" }

    { 1000000002;2;Field  ;
                SourceExpr="Trade Partner No." }

    { 1000000004;2;Field  ;
                CaptionML=ENU=Trade Partner Name;
                SourceExpr=RepName }

    { 1000000017;2;Field  ;
                SourceExpr="Error Text" }

    { 1000000023;2;Field  ;
                SourceExpr="Data Error" }

    { 1000000011;2;Field  ;
                SourceExpr="CSR Code" }

    { 1000000021;2;Field  ;
                SourceExpr="ISR Code" }

    { 1000000018;2;Field  ;
                Name=Sales Order No.;
                SourceExpr="Nav Order No." }

    { 1000000016;2;Field  ;
                Name=Order Status;
                SourceExpr=SalesOrderStatus }

    { 1000000015;2;Field  ;
                CaptionML=ENU=Customer No.;
                SourceExpr=SellToCustomerVendorNumber }

    { 1000000014;2;Field  ;
                CaptionML=ENU=Customer Name;
                SourceExpr=SellToCustomerName }

    { 1000000012;2;Field  ;
                Name=Customer Reference No.;
                CaptionML=ENU=Customer Reference No.;
                SourceExpr=PONumber }

    { 1000000007;2;Field  ;
                CaptionML=ENU=Transmission Date;
                SourceExpr=TransmissionDate }

    { 1000000009;2;Field  ;
                Name=Warehouse Release Id;
                CaptionML=ENU=Warehouse Release Id;
                SourceExpr=ttsReleaseId }

  }
  CODE
  {
    VAR
      SalesOrderStatus@1000000000 : Text;
      Text045@1000000004 : TextConst 'ENU=Duplicate P.O. No. has been found for P.O. No.%1 on Sales Order %2 .\';
      Text046@1000000003 : TextConst 'ENU=Duplicate PO No.: Cust. Ledger Entry for Invoice %1 with P.O. No. %2 found.\';
      Text047@1000000002 : TextConst 'ENU=Do you want to create the sales order(s)?';
      Text005@1000000001 : TextConst 'ENU=Sales Document not created.';

    LOCAL PROCEDURE GetSalesOrderStatus@1000000002(ResId@1000000001 : Code[30];Orderid@1000000002 : Code[20]);
    VAR
      SalesHeader@1000000000 : Record 36;
    BEGIN
      CLEAR(SalesOrderStatus);
      SalesHeader.RESET;
      SalesHeader.SETRANGE("Warehouse Release No." , ResId);
      SalesHeader.SETRANGE("External Document No." , Orderid);
      IF SalesHeader.FINDLAST THEN
        SalesOrderStatus:= FORMAT(SalesHeader.Status);
    END;

    LOCAL PROCEDURE DuplicatePOCheck@1000000000();
    VAR
      SalesHeader@1000000000 : Record 36;
      CustLedgerEntry@1000000002 : Record 21;
      ConfirmMsg@1000000001 : Text[250];
    BEGIN
      //<TPZ3215>
      SalesHeader.RESET;
      SalesHeader.SETRANGE("External Document No.",PONumber);
      IF SalesHeader.FINDFIRST THEN BEGIN
        ConfirmMsg := Text045;
        ConfirmMsg := STRSUBSTNO(
          ConfirmMsg,
          SalesHeader."External Document No.",SalesHeader."No.");
        IF GUIALLOWED THEN BEGIN
          IF NOT CONFIRM(
            ConfirmMsg +
            Text047)
          THEN
            ERROR(Text005);
        END ELSE
          ERROR(Text005);
      END ELSE BEGIN
        CustLedgerEntry.RESET;
        CustLedgerEntry.SETCURRENTKEY("External Document No.");
        CustLedgerEntry.SETRANGE("External Document No.",PONumber);
        IF CustLedgerEntry.FINDFIRST THEN BEGIN
          ConfirmMsg := Text046;
          ConfirmMsg := STRSUBSTNO(
            ConfirmMsg,
            CustLedgerEntry."Document No.",CustLedgerEntry."External Document No.");
          IF GUIALLOWED THEN BEGIN
            IF NOT CONFIRM(
              ConfirmMsg +
              Text047)
            THEN
              ERROR(Text005);
          END ELSE
            ERROR(Text005);
        END;
      END;
      //</TPZ3215>
    END;

    BEGIN
    {
      001 TPZ2986 GKG 04162021 create new object for tradetech integration
      002 TPZ3215 GKG 06112021 Check duplicate PO and create function DuplicatePOCheck
    }
    END.
  }
}

