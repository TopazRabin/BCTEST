OBJECT Page 50005 SSQQ Item FactBox
{
  OBJECT-PROPERTIES
  {
    Date=10/22/20;
    Time=[ 4:57:39 AM];
    Modified=Yes;
    Version List=TOP010,230;
  }
  PROPERTIES
  {
    CaptionML=ENU=Item Details;
    SourceTable=Table50000;
    PageType=CardPart;
    OnOpenPage=BEGIN
                 ;ESACC_EasySecurity(TRUE);
               END;

    OnAfterGetRecord=BEGIN
                       //CALCFIELDS("Reserved Quantity");
                       CLEAR(BUMCode);
                       CLEAR(QtyPerUOM);
                       Item.RESET;
                       IF "Item No." <> '' THEN BEGIN
                         Item.GET("Item No.");
                         BUMCode := Item."Base Unit of Measure";
                         QtyPerUOM := UOMManagement.GetQtyPerUnitOfMeasure(Item,Item."Base Unit of Measure");
                         //TOP230 KT ABCSI CRP 2 Fixes 05012015
                         QtyPerSalesUOM := UOMManagement.GetQtyPerUnitOfMeasure(Item,Item."Sales Unit of Measure");
                         Item.SETRANGE("Location Filter",InLocFilter);
                         Item.CALCFIELDS(Inventory,"Qty. on Sales Order","Qty. on Purch. Order");
                         "Qty. on Purch. Order" := Item."Qty. on Purch. Order" / QtyPerSalesUOM;
                         //TOP230 KT ABCSI CRP 2 Fixes 05012015
                       END;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 8   ;1   ;Field     ;
                Name=ItemNo;
                Lookup=No;
                CaptionML=[ENU=Item No.;
                           ESM=N§ producto;
                           FRC=Nø d'article;
                           ENC=Item No.];
                SourceExpr=ShowNo;
                OnDrillDown=BEGIN
                              StockStatusQuickQuoteMgt.LookupItem(Rec);
                            END;
                             }

    { 1000000006;1;Field  ;
                Name=Alternative Item No.;
                CaptionML=ENU=Alt. Item No.;
                SourceExpr=Item."Alternative Item No.";
                OnDrillDown=VAR
                              AltItem@1000000000 : Record 27;
                            BEGIN
                              IF AltItem.GET(Item."Alternative Item No.") THEN
                                PAGE.RUNMODAL(PAGE::"Item Card",AltItem);
                            END;
                             }

    { 1000000008;1;Field  ;
                Name=Prior Generation;
                SourceExpr=Item."Prior Generation";
                OnDrillDown=VAR
                              AltItem@1000000000 : Record 27;
                            BEGIN
                              IF AltItem.GET(Item."Prior Generation") THEN
                                PAGE.RUNMODAL(PAGE::"Item Card",AltItem);
                            END;
                             }

    { 1000000009;1;Field  ;
                Name=Next Generation;
                SourceExpr=Item."Next Generation";
                OnDrillDown=VAR
                              AltItem@1000000000 : Record 27;
                            BEGIN
                              IF AltItem.GET(Item."Next Generation") THEN
                                PAGE.RUNMODAL(PAGE::"Item Card",AltItem);
                            END;
                             }

    { 1000000007;1;Field  ;
                Name=ABC Code;
                SourceExpr=Item."ABC Code";
                OnDrillDown=BEGIN
                              //
                            END;
                             }

    { 12  ;1   ;Group     ;
                Name=Availability;
                GroupType=Group }

    { 3   ;2   ;Field     ;
                Name=Item Availability;
                DrillDown=Yes;
                CaptionML=[ENU=Item Availability;
                           ESM=Disponibilidad de producto;
                           FRC=Disponibilit‚ article;
                           ENC=Item Availability];
                DecimalPlaces=2:0;
                SourceExpr=StockStatusQuickQuoteMgt.CalcAvailability(Rec,InLocFilter);
                OnDrillDown=BEGIN
                              Item.SETRANGE("Date Filter",0D,WORKDATE);
                              Item.SETRANGE("Location Filter",InLocFilter);
                              Item.SETRANGE("Drop Shipment Filter",FALSE);
                              ItemAvailFormsMgt.ShowItemAvailFromItem(Item,ItemAvailFormsMgt.ByEvent);
                              CurrPage.UPDATE(TRUE);
                            END;
                             }

    { 1   ;2   ;Field     ;
                Name=Available Inventory;
                CaptionML=[ENU=Available Invent;
                           ESM=Existencias disponibles;
                           FRC=Inventaire disponible;
                           ENC=Available Inventory];
                DecimalPlaces=0:5;
                SourceExpr=StockStatusQuickQuoteMgt.CalcAvailableInventory(Rec,InLocFilter) }

    { 1000000003;2;Field  ;
                Name=Qty. in Transit;
                CaptionML=ENU=Qty. in Transit;
                DecimalPlaces=0:5;
                SourceExpr=StockStatusQuickQuoteMgt.CalcQtyInTransit(Rec);
                OnDrillDown=VAR
                              TransferLine@1000000000 : Record 5741;
                            BEGIN
                              // <TPZ2389>
                              TransferLine.RESET;
                              TransferLine.SETRANGE("Item No.","Item No.");
                              //TransferLine.SETRANGE("Variant Code","Variant Code");
                              //TransferLine.SETRANGE("Transfer-to Code","Location Code");
                              PAGE.RUN(0,TransferLine);
                              // </TPZ2389>
                            END;
                             }

    { 1000000002;2;Field  ;
                CaptionML=ENU=Qty. Avail to Pick;
                DecimalPlaces=0:5;
                SourceExpr=StockStatusQuickQuoteMgt.CalcQtyAvailableToPick(Rec,InLocFilter);
                OnDrillDown=VAR
                              Location@1000000000 : Record 14;
                              Item@1000000002 : Record 27;
                              BinContent@1000000001 : Record 7302;
                            BEGIN
                              // <TPZ2389>
                              IF Location.GET(InLocFilter) AND
                                Location."Bin Mandatory"
                              THEN BEGIN
                                BinContent.RESET;
                                BinContent.SETRANGE("Location Code",InLocFilter);
                                BinContent.SETRANGE("Item No.","Item No.");
                                BinContent.SETFILTER("Bin Type Code",'%1|%2','PICKPUT', 'PICK');
                                BinContent.SETFILTER("Block Movement",'<>%1&<>%2',BinContent."Block Movement"::Outbound,BinContent."Block Movement"::All);
                                BinContent.SETFILTER("Bin Code", '<>%1&<>%2&<>%3&<>%4', 'RTV','MRB','QA','QC');
                                PAGE.RUN(PAGE::"Item Bin Contents",BinContent);
                              END;
                              // </TPZ2389>
                            END;
                             }

    { 16  ;1   ;Group     ;
                Name=Item;
                GroupType=Group }

    { 15  ;2   ;Field     ;
                Name=UnitofMeasureCode;
                CaptionML=[ENU=UOM Code;
                           ESM=C¢d. unidad medida;
                           FRC=Code unit‚ de mesure;
                           ENC=Unit of Measure Code];
                SourceExpr=BUMCode }

    { 14  ;2   ;Field     ;
                Name=Qty. per Unit of Measure;
                CaptionML=[ENU=Qty. per UOM;
                           ESM=Cdad. por unidad medida;
                           FRC=Quantit‚ par unit‚ de mesure;
                           ENC=Qty. per Unit of Measure];
                DecimalPlaces=0:5;
                SourceExpr=QtyPerUOM }

    { 1000000001;2;Field  ;
                Name=Qty. on Purch. Order;
                CaptionML=ENU=Qty on Purch Order;
                SourceExpr="Qty. on Purch. Order";
                Visible=ESACC_F84_Visible;
                Editable=ESACC_F84_Editable;
                HideValue=ESACC_F84_HideValue;
                OnLookup=VAR
                           PurchLines@1000000000 : Record 39;
                         BEGIN
                           PurchLines.RESET;
                           PurchLines.SETRANGE("Document Type",PurchLines."Document Type"::Order);
                           PurchLines.SETRANGE(Type,PurchLines.Type::Item);
                           PurchLines.SETRANGE("No.","Item No.");
                           PurchLines.SETRANGE("Location Code",InLocFilter);
                           PAGE.RUN(518,PurchLines);
                         END;
                          }

    { 5   ;2   ;Field     ;
                Name=Substitutions;
                DrillDown=Yes;
                CaptionML=[ENU=Substitutions;
                           ESM=Sustituciones;
                           FRC=Substitutions;
                           ENC=Substitutions];
                SourceExpr=StockStatusQuickQuoteMgt.CalcNoOfSubstitutions(Rec);
                OnDrillDown=BEGIN
                              ShowItemSub;
                              CurrPage.UPDATE;
                            END;
                             }

    { 1000000000;2;Field  ;
                Name=Sales Prices;
                DrillDown=Yes;
                SourceExpr=StockStatusQuickQuoteMgt.CalcNoOfSalesPrices(Rec);
                OnDrillDown=BEGIN
                              ShowPrices;
                              CurrPage.UPDATE;
                            END;
                             }

    { 1000000005;2;Field  ;
                Name=EnterpriseInventory;
                CaptionML=ENU=Enterprise  Invent;
                DecimalPlaces=0:0;
                SourceExpr=StockStatusQuickQuoteMgt.CalcEnterPriseInventory(Rec) }

    { 1000000004;2;Field  ;
                Name=MonthsofStock;
                CaptionML=ENU=Months of Stock;
                DecimalPlaces=1:1;
                SourceExpr=StockStatusQuickQuoteMgt.CalcMonthOfStock(Rec) }

  }
  CODE
  {
    VAR
      ESACC_ESFLADSMgt@14123801 : Codeunit 14123801;
      ESACC_F84_Visible@900000840 : Boolean INDATASET;
      ESACC_F84_Editable@900000841 : Boolean INDATASET;
      ESACC_F84_HideValue@900000842 : Boolean INDATASET;
      SalesHeader@1000 : Record 36;
      SalesPriceCalcMgt@1002 : Codeunit 7000;
      SalesInfoPaneMgt@1001 : Codeunit 7171;
      ItemAvailFormsMgt@1003 : Codeunit 353;
      Item@1000000000 : Record 27;
      StockStatusQuickQuoteMgt@1000000001 : Codeunit 50000;
      UOMManagement@1000000002 : Codeunit 5402;
      BUMCode@1000000003 : Code[10];
      QtyPerUOM@1000000004 : Decimal;
      QtyPerSalesUOM@1000000008 : Decimal;
      SalesPrice@1000000005 : Record 7002;
      ItemSubstitution@1000000006 : Record 5715;
      InLocFilter@1000000007 : Code[10];

    LOCAL PROCEDURE ESACC_EasySecurity@14123801(OpenObject@14123801 : Boolean);
    VAR
      SetFilters@14123802 : Codeunit 14123812;
      TempBoolean@14123803 : Boolean;
    BEGIN
      IF OpenObject THEN BEGIN
        SetFilters.Filter50000(Rec,8,50005);

        TempBoolean := CurrPage.EDITABLE;
        IF ESACC_ESFLADSMgt.PageGeneral(50000,50005,TempBoolean) THEN
          CurrPage.EDITABLE := TempBoolean;
      END;

      ESACC_ESFLADSMgt.PageControl(
        50000,50005,0,84,
        ESACC_F84_Visible,ESACC_F84_Editable,ESACC_F84_HideValue);

      ESACC_EasySecurityManual(OpenObject);
    END;

    LOCAL PROCEDURE ESACC_EasySecurityManual@14123811(OpenObject@14123811 : Boolean);
    BEGIN
    END;

    PROCEDURE UserUpdate@1000000001();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE SetUserFilters@1000000002(InLocation@1000000001 : Code[10]);
    BEGIN
      InLocFilter := InLocation;
    END;

    PROCEDURE ShowPrices@15();
    BEGIN
      SalesPrice.RESET;
      SalesPrice.SETRANGE("Item No.","Item No.");

      PAGE.RUNMODAL(7002,SalesPrice);
    END;

    PROCEDURE ShowNo@29() : Code[20];
    BEGIN
      EXIT("Item No.");
    END;

    PROCEDURE ShowItemSub@1000000000();
    BEGIN
      ItemSubstitution.RESET;
      ItemSubstitution.SETRANGE(Type,ItemSubstitution.Type::Item);
      ItemSubstitution.SETRANGE("No.","Item No.");
      PAGE.RUNMODAL(5716,ItemSubstitution);
    END;

    BEGIN
    {
      TOP010 KT ABCSI Stock Status Quick Quote Screen 12082014
       - Created this page

      TOP230 KT ABCSI CRP 2 Fixes 05012015
        - Added "Qty. on Purch. Order" field
        - Added code on OnAfterGetRecord() to calculate the field

      2015-10-09 TPZ925 VCHERNYA
        DecimalPlaces property has been set for Qty. per Unit of Measure field

      2018-08-25 TPZ2389 UCHOUHAN
        Added "Qty in Transit" and "Qty. Avail to pick" Fields.
      2019-06-21 TPZ2590 UCHOUHAN
        Added Enterprise Inventory and "monthly of Stock" fields.
      2019-09-20 TPZ2678 RTIWARI
        Added Alternative Item No field
      2019-11-26 TPZ2718 UCHOUHAN
        Change Blankzero Property to YES for 'Month of Stock' Field.
      2020-03-02 TPZ2784 VAHAMAD
       Added Field ABC Code
       2020-03-02 TPZ2783
       Added Field Prior Generation,NextGeneration
    }
    END.
  }
}

