OBJECT Page 14099043 Assisted OWR Replen Rule Wiz.
{
  OBJECT-PROPERTIES
  {
    Date=08/21/18;
    Time=12:00:00 PM;
    Version List=RF1.50.13;
  }
  PROPERTIES
  {
    CaptionML=ENU=Assisted OWR Replen Rule Wiz.;
    SourceTable=Table14002867;
    PageType=NavigatePage;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             LoadTopBanners;
           END;

    OnOpenPage=VAR
                 SMTPMailSetup@1000 : Record 409;
                 CompanyInformation@1001 : Record 79;
                 SMTPMail@1002 : Codeunit 400;
               BEGIN
                 INIT;

                 Step := Step::Start;
                 EnableControls;
               END;

    OnQueryClosePage=BEGIN
                       IF CloseAction = ACTION::OK THEN
                         IF OWRAssistedSetup.GetStatus(PAGE::"Assisted OWR Replen Rule Wiz.") = OWRAssistedSetup.Status::"Not Completed" THEN
                           IF NOT CONFIRM(NAVNotSetUpQst,FALSE) THEN
                             ERROR('');
                     END;

    ActionList=ACTIONS
    {
      { 10      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 15      ;1   ;Action    ;
                      Name=ActionBack;
                      CaptionML=ENU=Back;
                      ApplicationArea=#Basic,#Suite,#All;
                      Enabled=BackActionEnabled;
                      InFooterBar=Yes;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 NextStep(TRUE);
                               END;
                                }
      { 14      ;1   ;Action    ;
                      Name=ActionNext;
                      CaptionML=ENU=Next;
                      ApplicationArea=#Basic,#Suite,#All;
                      Enabled=NextActionEnabled;
                      InFooterBar=Yes;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 NextAction;

                                 NextStep(FALSE);
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=ActionFinish;
                      CaptionML=ENU=Finish;
                      ApplicationArea=#Basic,#Suite,#All;
                      Enabled=FinishActionEnabled;
                      InFooterBar=Yes;
                      Image=Approve;
                      OnAction=BEGIN
                                 FinishAction;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 96  ;1   ;Group     ;
                Name=UnfinishedBanner;
                Visible=TopBannerVisible AND NOT FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 97  ;2   ;Field     ;
                Name=StandardMediaReference;
                ApplicationArea=#Basic,#Suite,#All;
                SourceExpr=MediaResourcesStandard."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 98  ;1   ;Group     ;
                Name=FinishedBanner;
                Visible=TopBannerVisible AND FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 99  ;2   ;Field     ;
                Name=DoneMediaReference;
                ApplicationArea=#Basic,#Suite,#All;
                SourceExpr=MediaResourcesDone."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 20  ;1   ;Group     ;
                Name=FirstStep1;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 13  ;2   ;Group     ;
                Name=Welcome;
                CaptionML=ENU=Welcome to the OWR Replenishment Rule Setup;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 18  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=ENU=This setup wizard will walk through the creation of Replenishment Rules. Replenishment Rules can be used by Outbound Warehouse Request to add more control over bin replenishment to fixed bins. Replenishment Rules can then be assigned to Zones, Bins, or Bin Content records. }

    { 33  ;2   ;Group     ;
                GroupType=Group }

    { 27  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=ENU=" " }

    { 21  ;2   ;Group     ;
                GroupType=Group }

    { 22  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=ENU=Choose Next to begin the setup. }

    { 2   ;1   ;Group     ;
                Name=CreateReplenRule;
                Visible=EnableStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Create the OWR Replenishment Rule. }

    { 3   ;2   ;Field     ;
                Name=Replenishment Rule;
                CaptionML=ENU=Replenishment Rule;
                ToolTipML=ENU=This code should represent the preset Outbound Warehouse Request filter options being applied.;
                ApplicationArea=#All;
                SourceExpr=ReplenRuleCode;
                OnValidate=VAR
                             ReplenishmentRule@1000 : Record 14002867;
                           BEGIN
                             IF ReplenishmentRule.GET(ReplenRuleCode) THEN
                               IF CONFIRM(ConfirmOWRReplenRuleDelete,FALSE) THEN
                                 ReplenishmentRule.DELETE(TRUE)
                               ELSE
                                 ERROR(ErrorOWRReplenRuleExists);

                             INIT;
                             "Replenishment Rule" := ReplenRuleCode;
                             IF NOT INSERT THEN MODIFY;
                           END;
                            }

    { 34  ;2   ;Field     ;
                Name=Replenishment Description;
                CaptionML=ENU=Replenishment Description;
                ToolTipML=ENU=This is the long description for the Outbound Warehouse Request Filter Code.;
                ApplicationArea=#All;
                SourceExpr=ReplenRuleDescription;
                OnValidate=BEGIN
                             Description := ReplenRuleDescription;
                             MODIFY;
                           END;
                            }

    { 12  ;1   ;Group     ;
                Name=GeneralStep;
                Visible=GeneralStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Create the Replenishment Rules. }

    { 1240020011;2;Group  ;
                Name=Replen-From Filters:;
                CaptionML=ENU=Replen-From Filters:;
                Visible=GeneralStepVisible;
                GroupType=Group }

    { 1240020000;3;Field  ;
                Name=Replen-from Zone Filter;
                CaptionML=ENU=Replen-from Zone Filter;
                ToolTipML=ENU=This is the Zone Code filter that is applied when evaluating where the inventory is to be replenished from.;
                ApplicationArea=#All;
                SourceExpr="Replen-from Zone Filter" }

    { 1240020001;3;Field  ;
                Name=Replen-from Bin Filter;
                CaptionML=ENU=Replen-from Bin Filter;
                ToolTipML=ENU=This is the Bin Code filter that is applied when evaluating where the inventory is to be replenished from.;
                ApplicationArea=#All;
                SourceExpr="Replen-from Bin Filter" }

    { 1240020002;3;Field  ;
                Name=Replen-from UOM Filter;
                CaptionML=ENU=Replen-from UOM Filter;
                ToolTipML=ENU=This is the Unit of Measure Code filter that is applied when evaluating where the inventory is to be replenished from.;
                ApplicationArea=#All;
                SourceExpr="Replen-from UOM Filter" }

    { 1240020012;2;Group  ;
                Name=Quantity:;
                CaptionML=ENU=Quantity:;
                Visible=GeneralStepVisible;
                GroupType=Group }

    { 1240020003;3;Field  ;
                Name=Permit Exceeding Max. Qty.;
                CaptionML=ENU=Permit Exceeding Max. Qty.;
                ToolTipML=ENU=This option allows for the replenishment quantity to exceed the Max. Qty. defined for the Bin Content record.;
                ApplicationArea=#All;
                SourceExpr="Permit Exceeding Max. Qty." }

    { 1240020004;3;Field  ;
                Name=Max. Replenishment Tolerance;
                CaptionML=ENU=Max. Replenishment Tolerance;
                ToolTipML=ENU=This represents the percentage above the Max. Qty. defined for a Bin Content record that can be replenished to the bin.;
                ApplicationArea=#All;
                SourceExpr="Max. Replenishment Tolerance" }

    { 1240020005;3;Field  ;
                Name=Allow BreakBulk during Replen.;
                CaptionML=ENU=Allow BreakBulk during Replen.;
                ToolTipML=ENU=This option allows for inventory stored in a different unit of measure to be selected for replenishment. This option only applies to Locations with Directed Put-away and Pick enabled.;
                ApplicationArea=#All;
                SourceExpr="Allow BreakBulk during Replen." }

    { 1240020006;3;Field  ;
                Name=Replen. in Unit Increments;
                CaptionML=ENU=Replen. in Unit Increments;
                ToolTipML=ENU=This option allows for replenishments to be created in the Qty. per Unit of Measure increments. The Qty. per Unit of Measure increment will be based on the unit of measure defined for the associated item at the time of replenishment creation. This option only applies to Locations where Directed Put-away and Pick is disabled.;
                ApplicationArea=#All;
                SourceExpr="Replen. in Unit Increments" }

    { 1240020013;2;Group  ;
                Name=Lot Handling:;
                CaptionML=ENU=Lot Handling:;
                Visible=GeneralStepVisible;
                GroupType=Group }

    { 1240020007;3;Field  ;
                Name=FEFO Replenishment;
                CaptionML=ENU=FEFO Replenishment;
                ToolTipML=ENU=This allows for the lot inventory that is closest to reaching its expiration date to be selected first when creating the replenishment. This option only applies to lot numbers that have an expiration date defined. This option will not allow picking to bypass "Pick According to FEFO" on the Location Card.;
                ApplicationArea=#All;
                SourceExpr="FEFO Replenishment" }

    { 1240020008;3;Field  ;
                Name=Strict Lot Replenishment;
                CaptionML=ENU=Strict Lot Replenishment;
                ToolTipML=ENU="This option allows for the lot number that was last replenished to the Fixed bin to be replenished first before attempting to replenish a different lot number. ";
                ApplicationArea=#All;
                SourceExpr="Strict Lot Replenishment" }

    { 1240020009;3;Field  ;
                Name=Prevent Lot Mixing;
                CaptionML=ENU=Prevent Lot Mixing;
                ToolTipML=ENU=This option will only allow for the current lot number in the Fixed bin to be replenished to that bin. A different lot number will not get replenished to the Fixed bin until the existing inventory is picked dry.;
                ApplicationArea=#All;
                SourceExpr="Prevent Lot Mixing" }

    { 1240020010;3;Field  ;
                Name=Shelf Life Tolerance;
                CaptionML=ENU=Shelf Life Tolerance;
                ToolTipML=ENU=This represents the shelf life tolerance that will be applied during replenishment when selecting the lot inventory to replenish. For example, if inventory with less than 30 days of shelf life left should not be replenished, then set this tolerance to -30D. Set this Date Formula to a negative number for a range of time before the expiration date, and set this to a positive number to extend beyond the expiration date.;
                ApplicationArea=#All;
                SourceExpr="Shelf Life Tolerance" }

    { 29  ;1   ;Group     ;
                Name=ConfirmStep;
                Visible=ConfirmStepVisible;
                GroupType=Group }

    { 26  ;2   ;Group     ;
                Name=ConfirmReplenRuleCode;
                CaptionML=ENU=Confirm;
                Visible=ConfirmStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Confirm the creation of this Replenishment Rule }

    { 5   ;3   ;Field     ;
                Name=Confirm Replenishment Rule;
                ToolTipML=ENU=Confirm Replenishment Rule creation.;
                ApplicationArea=#All;
                SourceExpr=ConfirmCodeCreation;
                OnValidate=VAR
                             ReplenishmentRule@1000 : Record 14002867;
                           BEGIN
                             IF ConfirmCodeCreation THEN BEGIN
                               CLEAR(ReplenishmentRule);
                               ReplenishmentRule.INIT;
                               ReplenishmentRule := Rec;
                               IF NOT ReplenishmentRule.INSERT(TRUE) THEN
                                 ReplenishmentRule.MODIFY(TRUE);

                               MESSAGE(STRSUBSTNO(MessageOWRReplenRuleCreated,ReplenRuleCode));
                             END;
                           END;
                            }

    { 8   ;1   ;Group     ;
                Name=AdditionalStep;
                Visible=AdditionalStepVisible;
                GroupType=Group }

    { 7   ;2   ;Group     ;
                Name=AdditionalReplenRuleCode;
                CaptionML=ENU=Additional Replenishment Rules;
                Visible=AdditionalStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Do you wish to create an additional OWR Replenishment Rule? }

    { 6   ;3   ;Field     ;
                Name=YesCode;
                CaptionML=ENU=Yes;
                ToolTipML=ENU=Choose Yes to create another Replenishment Rule.;
                ApplicationArea=#All;
                SourceExpr=YesCode;
                OnValidate=VAR
                             RFEmployeeSetup@1000 : Record 14002802;
                             RFSetup@1001 : Record 14002801;
                             WhseEmployee@1002 : Record 7301;
                           BEGIN
                             NoCode := FALSE;
                             YesCode := TRUE;
                           END;
                            }

    { 9   ;3   ;Field     ;
                Name=NoCode;
                CaptionML=ENU=No;
                ToolTipML=ENU=Choose No to move onto the next step.;
                ApplicationArea=#All;
                SourceExpr=NoCode;
                OnValidate=BEGIN
                             YesCode := FALSE;
                             NoCode := TRUE;
                           END;
                            }

    { 17  ;1   ;Group     ;
                Name=FinalStep;
                Visible=FinalStepVisible;
                GroupType=Group }

    { 24  ;2   ;Group     ;
                Name=EndSetup;
                CaptionML=ENU=That's it!;
                GroupType=Group }

    { 25  ;3   ;Group     ;
                Name=ChooseFinish;
                GroupType=Group;
                InstructionalTextML=ENU=To finalize this Outbound Warehouse Request configuration, choose Finish. }

  }
  CODE
  {
    VAR
      OWRAssistedSetup@1005 : Record 14099040;
      MediaRepositoryStandard@1040 : Record 9400;
      MediaRepositoryDone@1041 : Record 9400;
      MediaResourcesStandard@1018 : Record 2000000182;
      MediaResourcesDone@1016 : Record 2000000182;
      ClientTypeManagement@1019 : Codeunit 4;
      Step@1012 : 'Start,Enable,General,Confirm,Additional,Finish';
      OrderSourceType@1035 : 'All Types,Sales Order,Purchase Return Order,Transfer Order';
      TopBannerVisible@1042 : Boolean;
      FirstStepVisible@1000 : Boolean;
      EnableStepVisible@1010 : Boolean;
      GeneralStepVisible@1011 : Boolean;
      TableFilterStepVisible@1020 : Boolean;
      PickFilterStepVisible@1022 : Boolean;
      WhseActGroupStepVisible@1023 : Boolean;
      LimitStepVisible@1024 : Boolean;
      ConfirmStepVisible@1033 : Boolean;
      AdditionalStepVisible@1026 : Boolean;
      AdvancedSettingsVisible@1003 : Boolean;
      FinalStepVisible@1015 : Boolean;
      FinishActionEnabled@1009 : Boolean;
      BackActionEnabled@1013 : Boolean;
      NextActionEnabled@1014 : Boolean;
      NAVNotSetUpQst@1004 : TextConst 'ENU=Outbound Warehouse Request has not been set up.\\Are you sure you want to exit?';
      EnableDefaultSettings@1001 : Boolean;
      NumberSettingsVisible@1006 : Boolean;
      DefaultSetupStepVisible@1007 : Boolean;
      OWRNotEnabled@1021 : TextConst 'ENU=Outbound Warehouse Request must first be enabled.';
      ConfirmCodeCreation@1017 : Boolean;
      YesCode@1027 : Boolean;
      NoCode@1028 : Boolean;
      ReplenRuleCode@1002 : Code[10];
      ErrorOWRReplenRuleExists@1008 : TextConst 'ENU=The OWR Replenishment Rule already exists.';
      ErrorConfirmOWRReplenRule@1030 : TextConst 'ENU=The Confirm OWR Replenishment Rule field must be checked.';
      ErrorYesNoChecked@1031 : TextConst 'ENU=Either Yes or No must be checked.';
      ErrorNullOWRReplenRule@1032 : TextConst 'ENU=The OWR Replenishment Rule code must not be empty.';
      ConfirmOWRReplenRuleDelete@1029 : TextConst 'ENU=This OWR Replenishment Rule already exists. Would you like to delete it?';
      ConfirmCreateAdditionalCode@1025 : TextConst 'ENU=Do you wish to create another OWR Replenishment Rule?';
      ReplenRuleDescription@1034 : Text[50];
      MessageOWRReplenRuleCreated@1036 : TextConst 'ENU=The OWR Replenishment Rule %1 has been created.';

    LOCAL PROCEDURE EnableControls@2();
    BEGIN
      ResetControls;

      CASE Step OF
        Step::Start:
          ShowStartStep;
        Step::Enable:
          ShowEnableStep;
        Step::General:
          ShowGeneralStep;
        Step::Confirm:
          ShowConfirmStep;
        Step::Additional:
          ShowAdditionalStep;
        Step::Finish:
          ShowFinishStep;
      END;
    END;

    LOCAL PROCEDURE NextAction@5();
    BEGIN
      CASE Step OF
        Step::Enable:
          IF ReplenRuleCode = '' THEN
            ERROR(ErrorNullOWRReplenRule);
        Step::Confirm:
          IF NOT ConfirmCodeCreation THEN
            ERROR(ErrorConfirmOWRReplenRule);
        Step::Additional:
          IF (NOT YesCode) AND (NOT NoCode) THEN
            ERROR(ErrorYesNoChecked);
      END;
    END;

    LOCAL PROCEDURE FinishAction@12();
    BEGIN
      OWRAssistedSetup.SetStatus(PAGE::"Assisted OWR Replen Rule Wiz.",OWRAssistedSetup.Status::Completed);
      CurrPage.CLOSE;
    END;

    LOCAL PROCEDURE NextStep@41(Backwards@1000 : Boolean);
    BEGIN
      IF Backwards THEN
        Step := Step - 1
      ELSE BEGIN
        IF YesCode AND (Step = Step::Additional) THEN
          Step := 1
        ELSE
          Step := Step + 1;
      END;

      EnableControls;
    END;

    LOCAL PROCEDURE ShowStartStep@24();
    BEGIN
      FirstStepVisible := TRUE;
      FinishActionEnabled := FALSE;
      BackActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowEnableStep@33();
    BEGIN
      FirstStepVisible := FALSE;
      EnableStepVisible := TRUE;
      GeneralStepVisible := FALSE;
      ConfirmStepVisible := FALSE;
      AdditionalStepVisible := FALSE;
      FinalStepVisible := FALSE;

      ConfirmCodeCreation := FALSE;
      YesCode := FALSE;
      CLEAR(ReplenRuleCode);
      CLEAR(ReplenRuleDescription);
    END;

    LOCAL PROCEDURE ShowGeneralStep@34();
    BEGIN
      FirstStepVisible := FALSE;
      EnableStepVisible := FALSE;
      GeneralStepVisible := TRUE;
      ConfirmStepVisible := FALSE;
      AdditionalStepVisible := FALSE;
      FinalStepVisible := FALSE;

      NextActionEnabled := TRUE;
    END;

    LOCAL PROCEDURE ShowConfirmStep@3();
    BEGIN
      FirstStepVisible := FALSE;
      EnableStepVisible := FALSE;
      GeneralStepVisible := FALSE;
      ConfirmStepVisible := TRUE;
      AdditionalStepVisible := FALSE;
      FinalStepVisible := FALSE;

      NextActionEnabled := TRUE;
    END;

    LOCAL PROCEDURE ShowAdditionalStep@11();
    BEGIN
      FirstStepVisible := FALSE;
      EnableStepVisible := FALSE;
      GeneralStepVisible := FALSE;
      ConfirmStepVisible := FALSE;
      AdditionalStepVisible := TRUE;
      FinalStepVisible := FALSE;

      NextActionEnabled := TRUE;
    END;

    LOCAL PROCEDURE ShowFinishStep@35();
    BEGIN
      FirstStepVisible := FALSE;
      EnableStepVisible := FALSE;
      GeneralStepVisible := FALSE;
      ConfirmStepVisible := FALSE;
      AdditionalStepVisible := FALSE;
      FinalStepVisible := TRUE;

      NextActionEnabled := FALSE;
      FinishActionEnabled := TRUE;
    END;

    LOCAL PROCEDURE ResetControls@1();
    BEGIN
      FinishActionEnabled := FALSE;
      BackActionEnabled := TRUE;
      NextActionEnabled := TRUE;

      FirstStepVisible := FALSE;
      EnableStepVisible := FALSE;
      GeneralStepVisible := FALSE;
      FinalStepVisible := FALSE;
    END;

    LOCAL PROCEDURE LoadTopBanners@40();
    BEGIN
      IF MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType)) AND
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType))
      THEN
        IF MediaResourcesStandard.GET(MediaRepositoryStandard."Media Resources Ref") AND
           MediaResourcesDone.GET(MediaRepositoryDone."Media Resources Ref")
        THEN
          TopBannerVisible := MediaResourcesDone."Media Reference".HASVALUE;
    END;

    BEGIN
    END.
  }
}

