OBJECT Page 14099041 Assisted OWR Emp. Setup Wizard
{
  OBJECT-PROPERTIES
  {
    Date=08/21/18;
    Time=12:00:00 PM;
    Version List=RF1.50.13;
  }
  PROPERTIES
  {
    CaptionML=ENU=OWR Employee Code Setup;
    SourceTable=Table14002802;
    PageType=NavigatePage;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             LoadTopBanners;
           END;

    OnOpenPage=VAR
                 SMTPMailSetup@1000 : Record 409;
                 CompanyInformation@1001 : Record 79;
                 SMTPMail@1002 : Codeunit 400;
               BEGIN
                 INIT;

                 Step := Step::Start;
                 EnableControls;
               END;

    OnQueryClosePage=BEGIN
                       IF CloseAction = ACTION::OK THEN
                         IF OWRAssistedSetup.GetStatus(PAGE::"Assisted OWR Emp. Setup Wizard") = OWRAssistedSetup.Status::"Not Completed" THEN
                           IF NOT CONFIRM(NAVNotSetUpQst,FALSE) THEN
                             ERROR('');
                     END;

    ActionList=ACTIONS
    {
      { 10      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 15      ;1   ;Action    ;
                      Name=ActionBack;
                      CaptionML=ENU=Back;
                      ApplicationArea=#Basic,#Suite,#All;
                      Enabled=BackActionEnabled;
                      InFooterBar=Yes;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 NextStep(TRUE);
                               END;
                                }
      { 14      ;1   ;Action    ;
                      Name=ActionNext;
                      CaptionML=ENU=Next;
                      ApplicationArea=#Basic,#Suite,#All;
                      Enabled=NextActionEnabled;
                      InFooterBar=Yes;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 NextAction;

                                 NextStep(FALSE);
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=ActionFinish;
                      CaptionML=ENU=Finish;
                      ApplicationArea=#Basic,#Suite,#All;
                      Enabled=FinishActionEnabled;
                      InFooterBar=Yes;
                      Image=Approve;
                      OnAction=BEGIN
                                 FinishAction;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 96  ;1   ;Group     ;
                Name=UnfinishedBanner;
                Visible=TopBannerVisible AND NOT FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 97  ;2   ;Field     ;
                Name=StandardMediaReference;
                ApplicationArea=#Basic,#Suite,#All;
                SourceExpr=MediaResourcesStandard."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 98  ;1   ;Group     ;
                Name=FinishedBanner;
                Visible=TopBannerVisible AND FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 99  ;2   ;Field     ;
                Name=DoneMediaReference;
                ApplicationArea=#Basic,#Suite,#All;
                SourceExpr=MediaResourcesDone."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 20  ;1   ;Group     ;
                Name=FirstStep1;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 13  ;2   ;Group     ;
                Name=Welcome;
                CaptionML=ENU=Welcome to the OWR Employee Code Setup;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 18  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=ENU=This setup wizard will walk through the creation of Outbound Warehouse Request Employee Setup Codes. The setup performed with this wizard will apply to the users that interact with Outbound Warehouse Request. }

    { 33  ;2   ;Group     ;
                GroupType=Group }

    { 27  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=ENU=" " }

    { 21  ;2   ;Group     ;
                GroupType=Group }

    { 22  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=ENU=Choose Next to begin the setup. }

    { 2   ;1   ;Group     ;
                Name=CreateOWREmpCode;
                Visible=EnableStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Create the OWR Employee Setup Code. }

    { 3   ;2   ;Field     ;
                Name=OWR Employee Setup Code;
                CaptionML=ENU=OWR Employee Setup Code;
                ToolTipML=ENU=This is the code that is applied to Warehouse Employees. This allows for a specific configuration set to be applied to a group of employees.;
                ApplicationArea=#All;
                SourceExpr=OWREmpCode;
                OnValidate=VAR
                             RFEmployeeSetupCode@1000 : Record 14002802;
                           BEGIN
                             IF RFEmployeeSetupCode.GET(OWREmpCode) THEN
                               IF CONFIRM(ConfirmOWREmpDelete,FALSE) THEN
                                 RFEmployeeSetupCode.DELETE(TRUE)
                               ELSE
                                 ERROR(ErrorOWREmpCodeExists);

                             INIT;
                             Code := OWREmpCode;
                             IF NOT INSERT THEN MODIFY;
                           END;
                            }

    { 12  ;1   ;Group     ;
                Name=SettingsStep;
                Visible=SettingsStepVisible;
                GroupType=Group }

    { 4   ;2   ;Field     ;
                Name=Outbound Whse. Request Type;
                CaptionML=ENU=Outbound Whse. Request Type;
                ToolTipML=ENU=This option sets the default Outbound Warehouse Request page that the user will see. By default, the Advanced Outbound Warehouse Request page is displayed.;
                OptionCaptionML=ENU=Advanced,Simple;
                ApplicationArea=#All;
                SourceExpr="Outbound Whse. Request Type";
                OnValidate=BEGIN
                             MODIFY;
                           END;
                            }

    { 16  ;2   ;Field     ;
                Name=Outbound Whse.Req. Filter Code;
                CaptionML=ENU=Outbound Whse.Req. Filter Code;
                ToolTipML=ENU=This is the default Outbound Warehouse Request Filter Code that is applied when the user opens Outbound Warehouse Request.;
                ApplicationArea=#All;
                SourceExpr="Outbound Whse.Req. Filter Code";
                TableRelation="Outbound Whse. Request Filter".Code;
                LookupPageID=Outbound Whse. Request Filters;
                OnValidate=BEGIN
                             MODIFY;
                           END;
                            }

    { 19  ;2   ;Field     ;
                Name=Action Created By Filter;
                CaptionML=ENU=Action Created By Filter;
                ToolTipML=ENU=Allows to filter the lines by the user that created the Actions.;
                ApplicationArea=#All;
                SourceExpr="Action Created By Filter";
                OnValidate=BEGIN
                             MODIFY;
                           END;
                            }

    { 23  ;2   ;Field     ;
                Name=Ignore Action Outst. Qty of 0;
                CaptionML=ENU=Ignore Action Outst. Qty of 0;
                ToolTipML=ENU=This option allows for lines with an Outstanding Quantity of zero to be ignored when Action Codes are applied.;
                ApplicationArea=#All;
                SourceExpr="Ignore Action Outst. Qty of 0";
                OnValidate=BEGIN
                             MODIFY;
                           END;
                            }

    { 28  ;2   ;Field     ;
                Name=Receive Qty not Available;
                CaptionML=ENU=Receive Qty not Available;
                ToolTipML=ENU=This field causes inventory sitting in the Receive bin (as set on the Location Card) to not be seen as available when generating the pick.;
                ApplicationArea=#All;
                SourceExpr="Receive Qty not Available";
                OnValidate=BEGIN
                             MODIFY;
                           END;
                            }

    { 30  ;2   ;Field     ;
                Name=Replenishment Tolerance;
                CaptionML=ENU=Replenishment Tolerance;
                ToolTipML=ENU=The value in this field defines the percentage tolerance of the item that can be replenished to a bin above the max quantity defined for it. Note, this movement may fail if "Prohibit More than Max. Cap." is enabled for the Location and the movement exceeds the maximum capacity.;
                ApplicationArea=#All;
                SourceExpr="Replenishment Tolerance";
                OnValidate=BEGIN
                             MODIFY;
                           END;
                            }

    { 31  ;2   ;Field     ;
                Name=Disable OWR Code Table Filters;
                CaptionML=ENU=Disable OWR Code Table Filters;
                ToolTipML=ENU=This option prevents the Table Filters (except the Location Filter) from the Outbound Warehouse Request Filter Codes from being applied to the Warehouse Request table. This option may be necessary if the Warehouse Request table performance is slow.;
                ApplicationArea=#All;
                SourceExpr="Disable OWR Code Table Filters";
                OnValidate=BEGIN
                             MODIFY;
                           END;
                            }

    { 32  ;2   ;Field     ;
                Name=Enable Delete Ship and Pick;
                CaptionML=ENU=Enable Delete Ship and Pick;
                ToolTipML=ENU=This option allows the Warehouse Employee to execute the "Delete Shipment and Pick" action from Outbound Warehouse Request.;
                ApplicationArea=#All;
                SourceExpr="Enable Delete Ship and Pick";
                OnValidate=BEGIN
                             MODIFY;
                           END;
                            }

    { 29  ;1   ;Group     ;
                Name=ConfirmStep;
                Visible=ConfirmStepVisible;
                GroupType=Group }

    { 26  ;2   ;Group     ;
                Name=ConfirmOWREmpCode;
                CaptionML=ENU=Confirm;
                Visible=ConfirmStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Confirm the creation of this Outbound Warehouse Request Employee Group Code. }

    { 5   ;3   ;Field     ;
                Name=Confirm OWR Employee Code;
                CaptionML=ENU=Confirm OWR Employee Code;
                ToolTipML=ENU=Confirm OWR Employee Code creation.;
                ApplicationArea=#All;
                SourceExpr=ConfirmCodeCreation;
                OnValidate=VAR
                             RFEmployeeSetup@1000 : Record 14002802;
                             RFSetup@1001 : Record 14002801;
                             WhseEmployee@1002 : Record 7301;
                             WhseEmpSelectionList@1003 : Page 14099045;
                           BEGIN
                             IF ConfirmCodeCreation THEN BEGIN
                               CLEAR(RFEmployeeSetup);
                               RFEmployeeSetup.INIT;
                               RFEmployeeSetup := Rec;
                               IF NOT RFEmployeeSetup.INSERT(TRUE) THEN
                                 RFEmployeeSetup.MODIFY(TRUE);

                               IF CONFIRM(STRSUBSTNO(ConfirmSetOWREmpCodeDefault,OWREmpCode),FALSE) THEN BEGIN
                                 CLEAR(RFSetup);
                                 IF RFSetup.GET THEN BEGIN
                                   RFSetup."Default OWR Emp. Setup Code" := OWREmpCode;
                                   RFSetup.MODIFY;
                                 END;
                                 MESSAGE(MessageDefaultOWRCodeSet);
                               END;

                               IF CONFIRM(STRSUBSTNO(ConfirmAssignOWREmpCode,OWREmpCode),FALSE) THEN BEGIN
                                 WhseEmpSelectionList.Initialize(OWREmpCode);
                                 WhseEmpSelectionList.RUN;
                               END;
                             END;
                           END;
                            }

    { 8   ;1   ;Group     ;
                Name=AdditionalStep;
                Visible=AdditionalStepVisible;
                GroupType=Group }

    { 7   ;2   ;Group     ;
                Name=AdditionalOWREmpCode;
                CaptionML=ENU=Additional OWR Employee Setup Codes;
                Visible=AdditionalStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Do you wish to create an additional OWR Employee Setup Code? }

    { 6   ;3   ;Field     ;
                Name=YesCode;
                CaptionML=ENU=Yes;
                ToolTipML=ENU=Choose Yes to create another OWR Employee Setup Code.;
                ApplicationArea=#All;
                SourceExpr=YesCode;
                OnValidate=VAR
                             RFEmployeeSetup@1000 : Record 14002802;
                             RFSetup@1001 : Record 14002801;
                             WhseEmployee@1002 : Record 7301;
                           BEGIN
                             NoCode := FALSE;
                             YesCode := TRUE;
                           END;
                            }

    { 9   ;3   ;Field     ;
                Name=NoCode;
                CaptionML=ENU=No;
                ToolTipML=ENU=Choose No to move onto the next step.;
                ApplicationArea=#All;
                SourceExpr=NoCode;
                OnValidate=BEGIN
                             YesCode := FALSE;
                             NoCode := TRUE;
                           END;
                            }

    { 17  ;1   ;Group     ;
                Name=FinalStep;
                Visible=FinalStepVisible;
                GroupType=Group }

    { 24  ;2   ;Group     ;
                Name=EndSetup;
                CaptionML=ENU=That's it!;
                GroupType=Group }

    { 25  ;3   ;Group     ;
                Name=ChooseFinish;
                GroupType=Group;
                InstructionalTextML=ENU=To finalize this Outbound Warehouse Request configuration, choose Finish. }

  }
  CODE
  {
    VAR
      OWRAssistedSetup@1005 : Record 14099040;
      MediaRepositoryStandard@1040 : Record 9400;
      MediaRepositoryDone@1041 : Record 9400;
      MediaResourcesStandard@1018 : Record 2000000182;
      MediaResourcesDone@1016 : Record 2000000182;
      ClientTypeManagement@1019 : Codeunit 4;
      Step@1012 : 'Start,Enable,Settings,Confirm,Additional,Finish';
      TopBannerVisible@1042 : Boolean;
      FirstStepVisible@1000 : Boolean;
      EnableStepVisible@1010 : Boolean;
      SettingsStepVisible@1011 : Boolean;
      ConfirmStepVisible@1033 : Boolean;
      AdditionalStepVisible@1026 : Boolean;
      AdvancedSettingsVisible@1003 : Boolean;
      FinalStepVisible@1015 : Boolean;
      FinishActionEnabled@1009 : Boolean;
      BackActionEnabled@1013 : Boolean;
      NextActionEnabled@1014 : Boolean;
      NAVNotSetUpQst@1004 : TextConst 'ENU=Outbound Warehouse Request has not been set up.\\Are you sure you want to exit?';
      EnableDefaultSettings@1001 : Boolean;
      NumberSettingsVisible@1006 : Boolean;
      DefaultSetupStepVisible@1007 : Boolean;
      OWRNotEnabled@1021 : TextConst 'ENU=Outbound Warehouse Request must first be enabled.';
      ConfirmCodeCreation@1017 : Boolean;
      YesCode@1027 : Boolean;
      NoCode@1028 : Boolean;
      OWREmpCode@1002 : Code[50];
      ErrorOWREmpCodeExists@1008 : TextConst 'ENU=The OWR Employee Setup Code already exists.';
      ErrorConfirmOWRCode@1030 : TextConst 'ENU=The Confirm OWR Employee Code field must be checked.';
      ErrorYesNoChecked@1031 : TextConst 'ENU=Either Yes or No must be checked.';
      ErrorNullOWRCode@1032 : TextConst 'ENU=The OWR Employee Setup Code must not be empty.';
      ConfirmOWREmpDelete@1029 : TextConst 'ENU=This OWR Employee Setup Code already exists. Would you like to delete it?';
      ConfirmSetOWREmpCodeDefault@1020 : TextConst 'ENU=Do you wish to set the %1 Code as the default configuration? This would apply to all Warehouse Employees who do not have a specified OWR Employee Code defined, and NAV users who do not have a Warehouse Employee code.';
      MessageDefaultOWRCodeSet@1023 : TextConst 'ENU=A default OWR Employee Code has been set.';
      ConfirmAssignOWREmpCode@1022 : TextConst 'ENU=Do you wish to assign %1 Code to specific Warehouse Employees? If yes, select each Warehouse Employee record on the next screen, and then click Close.';
      MessageAssignOWREmpCodeSet@1024 : TextConst 'ENU=The OWR Employee Code has been set.';
      ConfirmCreateAdditionalCode@1025 : TextConst 'ENU=Do you wish to create another OWR Employee Code?';

    LOCAL PROCEDURE EnableControls@2();
    BEGIN
      ResetControls;

      CASE Step OF
        Step::Start:
          ShowStartStep;
        Step::Enable:
          ShowEnableStep;
        Step::Settings:
          ShowSettingsStep;
        Step::Confirm:
          ShowConfirmStep;
        Step::Additional:
          ShowAdditionalStep;
        Step::Finish:
          ShowFinishStep;
      END;
    END;

    LOCAL PROCEDURE NextAction@5();
    BEGIN
      CASE Step OF
        Step::Enable:
          IF OWREmpCode = '' THEN
            ERROR(ErrorNullOWRCode);
        Step::Confirm:
          IF NOT ConfirmCodeCreation THEN
            ERROR(ErrorConfirmOWRCode);
        Step::Additional:
          IF (NOT YesCode) AND (NOT NoCode) THEN
            ERROR(ErrorYesNoChecked);
      END;
    END;

    LOCAL PROCEDURE FinishAction@12();
    BEGIN
      OWRAssistedSetup.SetStatus(PAGE::"Assisted OWR Emp. Setup Wizard",OWRAssistedSetup.Status::Completed);
      CurrPage.CLOSE;
    END;

    LOCAL PROCEDURE NextStep@41(Backwards@1000 : Boolean);
    BEGIN
      IF Backwards THEN
        Step := Step - 1
      ELSE BEGIN
        IF YesCode AND (Step = Step::Additional) THEN
          Step := 1
        ELSE
          Step := Step + 1;
      END;

      EnableControls;
    END;

    LOCAL PROCEDURE ShowStartStep@24();
    BEGIN
      FirstStepVisible := TRUE;
      FinishActionEnabled := FALSE;
      BackActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowEnableStep@33();
    BEGIN
      FirstStepVisible := FALSE;
      EnableStepVisible := TRUE;
      SettingsStepVisible := FALSE;
      ConfirmStepVisible := FALSE;
      AdditionalStepVisible := FALSE;
      FinalStepVisible := FALSE;

      ConfirmCodeCreation := FALSE;
      YesCode := FALSE;
      CLEAR(OWREmpCode);
    END;

    LOCAL PROCEDURE ShowSettingsStep@34();
    BEGIN
      FirstStepVisible := FALSE;
      EnableStepVisible := FALSE;
      SettingsStepVisible := TRUE;
      ConfirmStepVisible := FALSE;
      AdditionalStepVisible := FALSE;
      FinalStepVisible := FALSE;

      NextActionEnabled := TRUE;
    END;

    LOCAL PROCEDURE ShowConfirmStep@3();
    BEGIN
      FirstStepVisible := FALSE;
      EnableStepVisible := FALSE;
      SettingsStepVisible := FALSE;
      ConfirmStepVisible := TRUE;
      AdditionalStepVisible := FALSE;
      FinalStepVisible := FALSE;

      NextActionEnabled := TRUE;
    END;

    LOCAL PROCEDURE ShowAdditionalStep@11();
    BEGIN
      FirstStepVisible := FALSE;
      EnableStepVisible := FALSE;
      SettingsStepVisible := FALSE;
      ConfirmStepVisible := FALSE;
      AdditionalStepVisible := TRUE;
      FinalStepVisible := FALSE;

      NextActionEnabled := TRUE;
    END;

    LOCAL PROCEDURE ShowFinishStep@35();
    BEGIN
      FirstStepVisible := FALSE;
      EnableStepVisible := FALSE;
      SettingsStepVisible := FALSE;
      ConfirmStepVisible := FALSE;
      AdditionalStepVisible := FALSE;
      FinalStepVisible := TRUE;

      NextActionEnabled := FALSE;
      FinishActionEnabled := TRUE;
    END;

    LOCAL PROCEDURE ResetControls@1();
    BEGIN
      FinishActionEnabled := FALSE;
      BackActionEnabled := TRUE;
      NextActionEnabled := TRUE;

      FirstStepVisible := FALSE;
      EnableStepVisible := FALSE;
      SettingsStepVisible := FALSE;
      FinalStepVisible := FALSE;
    END;

    LOCAL PROCEDURE LoadTopBanners@40();
    BEGIN
      IF MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType)) AND
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType))
      THEN
        IF MediaResourcesStandard.GET(MediaRepositoryStandard."Media Resources Ref") AND
           MediaResourcesDone.GET(MediaRepositoryDone."Media Resources Ref")
        THEN
          TopBannerVisible := MediaResourcesDone."Media Reference".HASVALUE;
    END;

    BEGIN
    END.
  }
}

