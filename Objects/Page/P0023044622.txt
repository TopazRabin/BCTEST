OBJECT Page 23044622 DSHIP E-mail Template Card
{
  OBJECT-PROPERTIES
  {
    Date=01/21/19;
    Time=[ 1:35:23 PM];
    Version List=DSHIP2.0.0;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Dynamic Ship E-mail Template Card;
               ENC=Dynamic Ship Customer Options];
    SourceTable=Table23044613;
    PopulateAllFields=Yes;
    PageType=Card;
    OnInit=VAR
             lrecSMTPConfig@1000000000 : Record 409;
           BEGIN

             lrecSMTPConfig.GET;
             IF ( lrecSMTPConfig."User ID" <> '' ) THEN
               sSenderEmail := lrecSMTPConfig."User ID"
             ELSE
               sSenderEmail := tcConfigSMTP;
           END;

    OnClosePage=BEGIN

                  saveEmailBody;
                END;

    OnAfterGetRecord=VAR
                       lisLoadBody@1000000000 : InStream;
                     BEGIN

                       IF ( Rec.Code <> xRec.Code ) THEN BEGIN
                         CALCFIELDS("E-mail Body");
                         "E-mail Body".CREATEINSTREAM(lisLoadBody);
                         btBody.READ(lisLoadBody);
                       END; // if rec != xrec
                     END;

    ActionList=ACTIONS
    {
      { 1000000008;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000009;1 ;Action    ;
                      Name=acParamHelp;
                      CaptionML=ENU=Parameter Help;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Questionaire;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 showParams;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000012;1;Group  ;
                CaptionML=ENU=Header;
                GroupType=Group }

    { 1000000002;2;Field  ;
                SourceExpr=Code }

    { 1000000003;2;Field  ;
                SourceExpr="Sender Name" }

    { 1000000007;2;Field  ;
                CaptionML=ENU=Sender E-mail;
                ToolTipML=ENU=This e-mail is defined in SMTP Mail Setup;
                SourceExpr=sSenderEmail;
                Visible=FALSE;
                Enabled=FALSE }

    { 1000000010;2;Field  ;
                SourceExpr="E-mail Subject" }

    { 1000000014;1;Group  ;
                CaptionML=[ENU=Body;
                           ENC=Body];
                GroupType=Group }

    { 1000000006;2;Field  ;
                CaptionML=[ENU=Body Text;
                           ENC=Body Text];
                SourceExpr=btBody;
                MultiLine=Yes }

  }
  CODE
  {
    VAR
      btBody@1000000000 : BigText;
      sSenderEmail@1000000001 : Text[250];
      sBody@1000000002 : Text;
      tcConfigSMTP@1000000003 : TextConst 'ENU=You must configure an e-mail address in the SMTP Mail Setup.';
      tcInfo@1000000014 : TextConst 'ENU=These placeholders can be used in the email subject and body to fill in order details. The e-mail should be HTML formatted.';
      tcPlaceholder1@1000000013 : TextConst 'ENU=%1: Ship-From Location Name (fall back Company Name)';
      tcPlaceholder2@1000000012 : TextConst 'ENU=%2: Order No.';
      tcPlaceholder3@1000000011 : TextConst 'ENU=%3: External Document No.';
      tcPlaceholder4@1000000010 : TextConst 'ENU=%4: Ship-to Contact Name (fall back Sell-to Contact, Sell-to Customer)';
      tcPlaceholder5@1000000009 : TextConst 'ENU=%5: Carrier Name';
      tcPlaceholder6@1000000008 : TextConst 'ENU=%6: Tracking URL';
      tcPlaceholder7@1000000007 : TextConst 'ENU=FUTURE: Custom';
      tcPlaceholder8@1000000006 : TextConst 'ENU=FUTURE: Custom';
      tcPlaceholder9@1000000005 : TextConst 'ENU=FUTURE: Custom';
      tcPlaceholder10@1000000004 : TextConst 'ENU=FUTURE: Custom';

    LOCAL PROCEDURE showParams@1000000126();
    VAR
      lsMessage@1000000011 : Text;
    BEGIN
      // message box that contains params and explanation
      lsMessage := tcInfo + '\' +
                     tcPlaceholder1 + '\' +
                     tcPlaceholder2 + '\' +
                     tcPlaceholder3 + '\' +
                     tcPlaceholder4 + '\' +
                     tcPlaceholder5 + '\' +
                     tcPlaceholder6;

      MESSAGE(lsMessage);
    END;

    LOCAL PROCEDURE saveEmailBody@1000000000();
    VAR
      losSaveBody@1000000000 : OutStream;
    BEGIN
      //<FUNC>
      //  Description: Stores the current value of the email body text field in the blob
      //  Called From: This page (23044622)
      //  Side Effect: None
      //</FUNC>

      IF ( Code <> '' ) THEN BEGIN
        CLEAR("E-mail Body");
        "E-mail Body".CREATEOUTSTREAM(losSaveBody);
        btBody.WRITE(losSaveBody);
        MODIFY;
      END;
    END;

    BEGIN
    {
      ************************
      Copyright Notice
      This objects content is copyright of Insight Works 2011.  All rights reserved.
      Any redistribution or reproduction of part or all of the contents in any form is prohibited.
      ************************
    }
    END.
  }
}

