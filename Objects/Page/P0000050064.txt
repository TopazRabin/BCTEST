OBJECT Page 50064 Stock Status Worksheet MFR
{
  OBJECT-PROPERTIES
  {
    Date=10/22/20;
    Time=[ 4:57:39 AM];
    Modified=Yes;
    Version List=TOP010,040,170,130,180,230,TOPFIX,010B,010C,010D,010;
  }
  PROPERTIES
  {
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table50000;
    SourceTableView=SORTING(Sorting Order)
                    ORDER(Ascending);
    PageType=ListPart;
    OnOpenPage=BEGIN

                 UserSetup.GET(USERID);
                 CompanyInformation.GET;
                 ;ESACC_EasySecurity(TRUE);
               END;

    OnAfterGetRecord=BEGIN

                       CLEAR("Reason Code");
                       CLEAR("Reason Code Comment");
                       CLEAR("Lost Opportunity");
                       CLEAR("Lost Opportunity Description");  //TOP230 KT ABCSI CRP 2 Fixes 06092015
                       CLEAR("Last Reason Code");
                       CLEAR("Last Reason Code Comment");
                       CLEAR("Last Lost Opportunity");

                       //TOP010D KT ABCSI SSQQ Unit Price 07092015
                       CLEAR("Recomm. Unit Price");
                       CLEAR("Last Unit Price");
                       CLEAR("Last Price UOM");
                       CLEAR("Last Price Qty.");
                       CLEAR("Last Price Date");
                       //TOP010D KT ABCSI SSQQ Unit Price 07092015

                       UpdateLine;
                       CALCFIELDS("Cust. Qty. on SO", "Qty. on Sales Order");
                         //EB <TPZ1545>
                        { CASE Blocked OF
                           Blocked::All:
                             StyleTxt :='StandardAccent';
                           Blocked::Sale:
                             StyleTxt :='Attention';
                           Blocked::Purchase:
                             StyleTxt :='Ambiguous';
                           //<TPZ2531>
                           {
                           Blocked::NPI:
                             StyleTxt :='favorable';
                             }
                             //</TPZ2531>
                           ELSE
                            StyleTxt:= 'standard';
                         END;
                         //<TPZ2531>}
                         SetStyleABC; //<TPZ2788>
                           DefaultDimension.RESET;
                           IF DefaultDimension.GET(27,"Item No.",'PRODLIFECYCLE')THEN BEGIN
                           IF DefaultDimension."Dimension Value Code" = 'INTRO' THEN
                             StyleTxtABC := 'favorable'
                           //ELSE
                            // StyleTxt:= 'Standard';//<TPZ2788>
                           END;
                         //</TPZ2531>
                         //EB </TPZ1545>
                     END;

    OnAfterGetCurrRecord=BEGIN
                           UpdateLine;
                           CALCFIELDS("Cust. Qty. on SO", "Qty. on Sales Order");
                         END;

    ActionList=ACTIONS
    {
      { 1000000054;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000055;1 ;Action    ;
                      Name=Go Home;
                      ShortCutKey=F12;
                      Visible=ESACC_C1000000055_Visible;
                      Enabled=ESACC_C1000000055_Enabled;
                      Image=MoveUp;
                      OnAction=BEGIN
                                 FINDFIRST; //TOP010D KT ABCSI SSQQ Unit Price 07142015
                               END;
                                }
      { 1000000256;1 ;ActionGroup;
                      CaptionML=[ENU=&Item;
                                 ESM=&L°nea;
                                 FRC=&Ligne;
                                 ENC=&Line];
                      Image=Line }
      { 1000000255;2 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 ESM=C&omentarios;
                                 FRC=Co&mmentaires;
                                 ENC=Co&mments];
                      RunObject=Page 124;
                      RunPageLink=Table Name=CONST(Item),
                                  No.=FIELD(Item No.);
                      Visible=ESACC_C1000000255_Visible;
                      Enabled=ESACC_C1000000255_Enabled;
                      Image=ViewComments }
      { 1000000257;2 ;Action    ;
                      CaptionML=ENU=Last Prices;
                      RunObject=Page 50004;
                      RunPageLink=Sell-to Customer No.=FIELD(Sell-to Customer No.),
                                  Item No.=FIELD(Item No.);
                      Visible=ESACC_C1000000257_Visible;
                      Enabled=ESACC_C1000000257_Enabled }
      { 1000000258;2 ;Action    ;
                      CaptionML=ENU=Country/Region Last Prices;
                      Visible=ESACC_C1000000258_Visible;
                      Enabled=ESACC_C1000000258_Enabled;
                      OnAction=VAR
                                 LastSalesPrice@1000000001 : Record 50004;
                                 CustLoc@1000000000 : Record 18;
                               BEGIN
                                 // <TPZ449>
                                 LastSalesPrice.RESET;
                                 LastSalesPrice.SETRANGE("Item No.","Item No.");
                                 CustLoc.GET("Sell-to Customer No.");
                                 LastSalesPrice.SETRANGE("Country/Region Code",CustLoc."Country/Region Code");
                                 PAGE.RUN(PAGE::"Last Sales Prices",LastSalesPrice);
                                 // </TPZ449>
                               END;
                                }
      { 1000000058;2 ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Ledger E&ntries;
                                 ESM=&Movimientos;
                                 FRC=ê&critures comptables;
                                 ENC=Ledger E&ntries];
                      RunObject=Page 51130;
                      RunPageView=SORTING(Item No.);
                      RunPageLink=Item No.=FIELD(Item No.),
                                  Document Type=FILTER(Sales Shipment|Sales Return Receipt|Sales Credit Memo|Purchase Receipt|Transfer Shipment|Transfer Receipt);
                      Promoted=No;
                      Visible=ESACC_C1000000058_Visible;
                      Enabled=ESACC_C1000000058_Enabled;
                      Image=ItemLedger;
                      PromotedCategory=Process }
      { 1000000059;2 ;Action    ;
                      CaptionML=ENU=Cust. Group Last Sales Prices;
                      Visible=ESACC_C1000000059_Visible;
                      Enabled=ESACC_C1000000059_Enabled;
                      Image=EntriesList;
                      OnAction=VAR
                                 StockStatusWkshLine@1000000000 : Record 50000;
                                 StockStatusWkshMgt@1000000001 : Codeunit 50000;
                               BEGIN
                                 // <TPZ1014>
                                 StockStatusWkshLine.COPY(Rec);
                                 StockStatusWkshMgt.FindRelCustLastSalesPrice(StockStatusWkshLine);
                                 // <TPZ1014>
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1000000002;2;Field  ;
                SourceExpr="Item No.";
                Visible=ESACC_F6_Visible;
                Editable=FALSE;
                HideValue=ESACC_F6_HideValue;
                StyleExpr=StyleTxtABC;
                QuickEntry=FALSE }

    { 1000000003;2;Field  ;
                SourceExpr=Description;
                Visible=ESACC_F11_Visible;
                Editable=FALSE;
                HideValue=ESACC_F11_HideValue;
                QuickEntry=FALSE }

    { 1000000004;2;Field  ;
                SourceExpr="Description 2";
                Visible=ESACC_F12_Visible;
                Editable=FALSE;
                HideValue=ESACC_F12_HideValue;
                QuickEntry=FALSE }

    { 1000000006;2;Field  ;
                SourceExpr="Quantity Available on Location";
                Visible=ESACC_F50000_Visible;
                Editable=FALSE;
                HideValue=ESACC_F50000_HideValue;
                QuickEntry=FALSE }

    { 1000000007;2;Field  ;
                SourceExpr="Main Loc. Qty. Avail";
                Visible=ESACC_F50001_Visible;
                Editable=FALSE;
                HideValue=ESACC_F50001_HideValue;
                QuickEntry=FALSE }

    { 1000000008;2;Field  ;
                SourceExpr="Last Unit Price";
                Visible=ESACC_F50007_Visible;
                Editable=ESACC_F50007_Editable;
                HideValue=ESACC_F50007_HideValue }

    { 1000000040;2;Field  ;
                CaptionML=ENU=Unit Price;
                SourceExpr="High Unit Price";
                Visible=ESACC_F50024_Visible;
                Editable=FALSE;
                HideValue=ESACC_F50024_HideValue }

    { 1000000037;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Current Qty.";
                Visible=ESACC_F50005_Visible;
                Editable=ESACC_F50005_Editable;
                HideValue=ESACC_F50005_HideValue;
                OnValidate=BEGIN
                             IF (Blocked = TRUE) THEN //TPZ2785
                               FIELDERROR(Blocked);


                             IF "Current Qty." <> 0 THEN
                               BEGIN
                                 UpdateLastSalesPrice(Rec);
                                 FetchRecommFieldValues("Item No.",InCustFilter); //TOP230 KT ABCSI CRP 2 Fixes 05282015
                                 IF NOT StockStatusQuickQuote.GET("Item No.") THEN
                                   BEGIN
                                     StockStatusQuickQuote.INIT;
                                     StockStatusQuickQuote.TRANSFERFIELDS(Rec);
                                     StockStatusQuickQuote."Sell-to Customer No." := InCustFilter;
                                     StockStatusQuickQuote."Location Code" := "Location Code";
                                     StockStatusQuickQuote."Unit Price" := "Unit Price";
                                     StockStatusQuickQuote."Recomm. Unit Price" := "Recomm. Unit Price"; //TOP230 KT ABCSI CRP 2 Fixes 05282015
                                     StockStatusQuickQuote."Current Qty." := "Current Qty.";
                                     StockStatusQuickQuote."Current UOM" := "Current UOM";
                                     StockStatusQuickQuote.INSERT;
                                     QuickQuoteWorkSheet.TRANSFERFIELDS(StockStatusQuickQuote);
                                     LineNo += 1;
                                     QuickQuoteWorkSheet."Line No." := LineNo;
                                     IF ItemUOM.GET("Item No.","Current UOM") THEN
                                       QuickQuoteWorkSheet."Qty per Unit of Measure" := ItemUOM."Qty. per Unit of Measure"
                                     ELSE QuickQuoteWorkSheet."Qty per Unit of Measure" := 1;
                                     QuickQuoteWorkSheet."Current Qty (Base)" := QuickQuoteWorkSheet."Qty per Unit of Measure" * "Current Qty.";
                                     QuickQuoteWorkSheet.INSERT;
                                     //LineNo := LineNo +1;
                                   END
                                 ELSE
                                   BEGIN
                                     StockStatusQuickQuote."Current Qty." := "Current Qty.";
                                     StockStatusQuickQuote."Recomm. Unit Price" := "Recomm. Unit Price"; //TOP230 KT ABCSI CRP 2 Fixes 05282015
                                     StockStatusQuickQuote.MODIFY;
                                     QuickQuoteWorkSheet.RESET;
                                     QuickQuoteWorkSheet.SETRANGE("Item No.","Item No.");
                                     IF QuickQuoteWorkSheet.FIND('+') THEN BEGIN
                                       OldLineNo := QuickQuoteWorkSheet."Line No.";
                                       //LineNo := QuickQuoteWorkSheet."Line No." + 1;
                                     END ELSE BEGIN
                                       QuickQuoteWorkSheet.RESET;
                                       IF QuickQuoteWorkSheet.FIND('+') THEN LineNo := QuickQuoteWorkSheet."Line No.";
                                       OldLineNo := LineNo;
                                       LineNo := LineNo + 1;
                                     END;
                                     QuickQuoteWorkSheet.TRANSFERFIELDS(StockStatusQuickQuote);
                                     QuickQuoteWorkSheet."Line No." := OldLineNo;
                                     IF ItemUOM.GET("Item No.","Current UOM") THEN
                                       QuickQuoteWorkSheet."Qty per Unit of Measure" := ItemUOM."Qty. per Unit of Measure"
                                     ELSE QuickQuoteWorkSheet."Qty per Unit of Measure" := 1;
                                     QuickQuoteWorkSheet."Current Qty (Base)" := QuickQuoteWorkSheet."Qty per Unit of Measure" * "Current Qty.";
                                     QuickQuoteWorkSheet."Promotion Code" := "Promotion Code";
                                     QuickQuoteWorkSheet.MODIFY;
                                   END;
                               END ELSE
                                 IF StockStatusQuickQuote.GET("Item No.") THEN
                                   IF xRec."Current Qty." <> 0 THEN BEGIN
                                     StockStatusQuickQuote."Current Qty." := "Current Qty.";
                                     StockStatusQuickQuote.MODIFY;
                                     QuickQuoteWorkSheet.RESET;
                                     QuickQuoteWorkSheet.SETRANGE("Item No.","Item No.");
                                     IF QuickQuoteWorkSheet.FIND('+') THEN BEGIN
                                        OldLineNo := QuickQuoteWorkSheet."Line No.";
                                        //LineNo := QuickQuoteWorkSheet."Line No." + 1;
                                     END ELSE BEGIN
                                        QuickQuoteWorkSheet.RESET;
                                        IF QuickQuoteWorkSheet.FIND('+') THEN LineNo := QuickQuoteWorkSheet."Line No.";
                                        OldLineNo := LineNo;
                                        LineNo := LineNo + 1;
                                     END;
                                     QuickQuoteWorkSheet.TRANSFERFIELDS(StockStatusQuickQuote);
                                     QuickQuoteWorkSheet."Line No." := OldLineNo;
                                     IF ItemUOM.GET("Item No.","Current UOM") THEN
                                       QuickQuoteWorkSheet."Qty per Unit of Measure" := ItemUOM."Qty. per Unit of Measure"
                                     ELSE QuickQuoteWorkSheet."Qty per Unit of Measure" := 1;
                                     QuickQuoteWorkSheet."Current Qty (Base)" := QuickQuoteWorkSheet."Qty per Unit of Measure" * "Current Qty.";
                                     QuickQuoteWorkSheet."Promotion Code" := "Promotion Code";
                                     QuickQuoteWorkSheet.MODIFY;
                                   END;
                           END;
                            }

    { 1000000005;2;Field  ;
                SourceExpr=StockStatusQuickQuote."Current UOM" }

    { 1000000009;2;Field  ;
                SourceExpr="Last Price Qty.";
                Visible=ESACC_F50009_Visible;
                Editable=ESACC_F50009_Editable;
                HideValue=ESACC_F50009_HideValue }

    { 1000000011;2;Field  ;
                SourceExpr="Last Price Date";
                Visible=ESACC_F50013_Visible;
                Editable=ESACC_F50013_Editable;
                HideValue=ESACC_F50013_HideValue }

    { 1000000013;2;Field  ;
                SourceExpr="Last Price User ID";
                Visible=ESACC_F50031_Visible;
                Editable=ESACC_F50031_Editable;
                HideValue=ESACC_F50031_HideValue }

    { 1000000014;2;Field  ;
                SourceExpr="Order Date";
                Visible=ESACC_F19_Visible;
                Editable=ESACC_F19_Editable;
                HideValue=ESACC_F19_HideValue }

    { 1000000012;2;Field  ;
                SourceExpr="Last Quoted Qty.";
                Visible=ESACC_F50004_Visible;
                Editable=FALSE;
                HideValue=ESACC_F50004_HideValue }

    { 1000000010;2;Field  ;
                SourceExpr="Last Price UOM";
                Visible=ESACC_F50008_Visible;
                Editable=ESACC_F50008_Editable;
                HideValue=ESACC_F50008_HideValue }

    { 1000000025;2;Field  ;
                SourceExpr="Last Invoice Price";
                Visible=ESACC_F50014_Visible;
                Editable=FALSE;
                HideValue=ESACC_F50014_HideValue }

    { 1000000029;2;Field  ;
                SourceExpr="Vendor Item No.";
                Visible=ESACC_F32_Visible;
                Editable=FALSE;
                HideValue=ESACC_F32_HideValue }

  }
  CODE
  {
    VAR
      ESACC_ESFLADSMgt@14123801 : Codeunit 14123801;
      ESACC_C1000000055_Visible@915000550 : Boolean INDATASET;
      ESACC_C1000000055_Enabled@915000553 : Boolean INDATASET;
      ESACC_C1000000058_Visible@915000580 : Boolean INDATASET;
      ESACC_C1000000058_Enabled@915000583 : Boolean INDATASET;
      ESACC_C1000000059_Visible@915000590 : Boolean INDATASET;
      ESACC_C1000000059_Enabled@915000593 : Boolean INDATASET;
      ESACC_C1000000255_Visible@915002550 : Boolean INDATASET;
      ESACC_C1000000255_Enabled@915002553 : Boolean INDATASET;
      ESACC_C1000000257_Visible@915002570 : Boolean INDATASET;
      ESACC_C1000000257_Enabled@915002573 : Boolean INDATASET;
      ESACC_C1000000258_Visible@915002580 : Boolean INDATASET;
      ESACC_C1000000258_Enabled@915002583 : Boolean INDATASET;
      ESACC_F6_Visible@900000060 : Boolean INDATASET;
      ESACC_F6_Editable@900000061 : Boolean INDATASET;
      ESACC_F6_HideValue@900000062 : Boolean INDATASET;
      ESACC_F11_Visible@900000110 : Boolean INDATASET;
      ESACC_F11_Editable@900000111 : Boolean INDATASET;
      ESACC_F11_HideValue@900000112 : Boolean INDATASET;
      ESACC_F12_Visible@900000120 : Boolean INDATASET;
      ESACC_F12_Editable@900000121 : Boolean INDATASET;
      ESACC_F12_HideValue@900000122 : Boolean INDATASET;
      ESACC_F19_Visible@900000190 : Boolean INDATASET;
      ESACC_F19_Editable@900000191 : Boolean INDATASET;
      ESACC_F19_HideValue@900000192 : Boolean INDATASET;
      ESACC_F32_Visible@900000320 : Boolean INDATASET;
      ESACC_F32_Editable@900000321 : Boolean INDATASET;
      ESACC_F32_HideValue@900000322 : Boolean INDATASET;
      ESACC_F50000_Visible@900500000 : Boolean INDATASET;
      ESACC_F50000_Editable@900500001 : Boolean INDATASET;
      ESACC_F50000_HideValue@900500002 : Boolean INDATASET;
      ESACC_F50001_Visible@900500010 : Boolean INDATASET;
      ESACC_F50001_Editable@900500011 : Boolean INDATASET;
      ESACC_F50001_HideValue@900500012 : Boolean INDATASET;
      ESACC_F50004_Visible@900500040 : Boolean INDATASET;
      ESACC_F50004_Editable@900500041 : Boolean INDATASET;
      ESACC_F50004_HideValue@900500042 : Boolean INDATASET;
      ESACC_F50005_Visible@900500050 : Boolean INDATASET;
      ESACC_F50005_Editable@900500051 : Boolean INDATASET;
      ESACC_F50005_HideValue@900500052 : Boolean INDATASET;
      ESACC_F50007_Visible@900500070 : Boolean INDATASET;
      ESACC_F50007_Editable@900500071 : Boolean INDATASET;
      ESACC_F50007_HideValue@900500072 : Boolean INDATASET;
      ESACC_F50008_Visible@900500080 : Boolean INDATASET;
      ESACC_F50008_Editable@900500081 : Boolean INDATASET;
      ESACC_F50008_HideValue@900500082 : Boolean INDATASET;
      ESACC_F50009_Visible@900500090 : Boolean INDATASET;
      ESACC_F50009_Editable@900500091 : Boolean INDATASET;
      ESACC_F50009_HideValue@900500092 : Boolean INDATASET;
      ESACC_F50013_Visible@900500130 : Boolean INDATASET;
      ESACC_F50013_Editable@900500131 : Boolean INDATASET;
      ESACC_F50013_HideValue@900500132 : Boolean INDATASET;
      ESACC_F50014_Visible@900500140 : Boolean INDATASET;
      ESACC_F50014_Editable@900500141 : Boolean INDATASET;
      ESACC_F50014_HideValue@900500142 : Boolean INDATASET;
      ESACC_F50024_Visible@900500240 : Boolean INDATASET;
      ESACC_F50024_Editable@900500241 : Boolean INDATASET;
      ESACC_F50024_HideValue@900500242 : Boolean INDATASET;
      ESACC_F50031_Visible@900500310 : Boolean INDATASET;
      ESACC_F50031_Editable@900500311 : Boolean INDATASET;
      ESACC_F50031_HideValue@900500312 : Boolean INDATASET;
      StockStatusQuickQuote@1000000001 : TEMPORARY Record 50000;
      QuickQuoteWorkSheet@1000000000 : TEMPORARY Record 50001;
      SalesSetup@1000000054 : Record 311;
      WhseCreatePick@1000000055 : Codeunit 5778;
      LineNo@1000000002 : Integer;
      PrevLocationCode@1000000049 : Code[10];
      NextLocationCode@1000000050 : Code[10];
      LocationUpdated@1000000051 : Boolean;
      InFromItemNo@1000000006 : Code[20];
      InToItemNo@1000000005 : Code[20];
      InCustFilter@1000000004 : Code[20];
      InLocFilter@1000000003 : Code[10];
      Item@1000000012 : Record 27;
      Item2@1000000007 : Record 27;
      UserSetup@1000000008 : Record 91;
      SalesHeader@1000000010 : Record 36;
      SalesLine@1000000009 : Record 37;
      SalesLineNo@1000000011 : Integer;
      ItemUnitCost@1000000014 : Decimal;
      ItemUnitPrice@1000000013 : Decimal;
      EffPriceIncrDate@1000000015 : Date;
      QtyPerUOM@1000000016 : Decimal;
      UOMMgt@1000000017 : Codeunit 5402;
      ItemAvail@1000000018 : Decimal;
      ItemQOH@1000000020 : Decimal;
      ItemQPO@1000000019 : Decimal;
      ItemLead@1000000021 : DateFormula;
      CompanyInformation@1000000022 : Record 79;
      Item3@1000000024 : Record 27;
      MItemAvail@1000000023 : Decimal;
      LastSalesPrice@1000000044 : Record 50004;
      NewLastSalesPrice@1000000045 : Record 50004;
      SalesPrice@1000000026 : Record 7002;
      NewSalesPrice@1000000025 : Record 7002;
      BaseUOM@1000000027 : Code[10];
      Company@1000000028 : Record 79;
      OrderTotal@1000000033 : Decimal;
      SLoc@1000000034 : Record 14;
      MultiOrder@1000000032 : Boolean;
      FirstNo@1000000031 : Code[10];
      LastNo@1000000030 : Code[10];
      ONo@1000000029 : Code[10];
      LastPriceInfo@1000000035 : Text[60];
      LastPriceUserID@1000000036 : Code[10];
      Customer@1000000038 : Record 18;
      WLoc@1000000039 : Record 14;
      ItemUOM@1000000040 : Record 5404;
      OldLineNo@1000000041 : Integer;
      TempSalesHeader@1000000043 : TEMPORARY Record 36;
      TempSalesLine@1000000037 : TEMPORARY Record 37;
      LastSalesLineNo@1000000042 : Integer;
      CurrDivisionCodeFilter@1000000046 : Code[20];
      LastLostOpportunity@1000000047 : Record 50002;
      DocType@1000000048 : 'Quote,Order,Stock Status';
      Text00001@1000000052 : TextConst 'ENU=There are No Lines with Current Qty Populated. \ Please poulate Lines with Curr. Quantity and Unit Price to Proceed further';
      Text00002@1000000053 : TextConst 'ENU=There are Lines with Current Qty Populated. \ Are you sure you want to change the Division Code?';
      Text00003@1000000056 : TextConst 'ENU=Processing halted to respect the user selection';
      ItemMgt@1000000058 : Codeunit 50020;
      DefaultDimension@1000000059 : Record 352;
      StyleTxtABC@1000000060 : Text;

    LOCAL PROCEDURE ESACC_EasySecurity@14123801(OpenObject@14123801 : Boolean);
    VAR
      SetFilters@14123802 : Codeunit 14123812;
      TempBoolean@14123803 : Boolean;
    BEGIN
      IF OpenObject THEN BEGIN
        SetFilters.Filter50000(Rec,8,50064);

        TempBoolean := CurrPage.EDITABLE;
        IF ESACC_ESFLADSMgt.PageGeneral(50000,50064,TempBoolean) THEN
          CurrPage.EDITABLE := TempBoolean;
      END;

      ESACC_ESFLADSMgt.PageControl(
        50000,50064,1,1000000055,
        ESACC_C1000000055_Visible,ESACC_C1000000055_Enabled,TempBoolean);

      ESACC_ESFLADSMgt.PageControl(
        50000,50064,1,1000000058,
        ESACC_C1000000058_Visible,ESACC_C1000000058_Enabled,TempBoolean);

      ESACC_ESFLADSMgt.PageControl(
        50000,50064,1,1000000059,
        ESACC_C1000000059_Visible,ESACC_C1000000059_Enabled,TempBoolean);

      ESACC_ESFLADSMgt.PageControl(
        50000,50064,1,1000000255,
        ESACC_C1000000255_Visible,ESACC_C1000000255_Enabled,TempBoolean);

      ESACC_ESFLADSMgt.PageControl(
        50000,50064,1,1000000257,
        ESACC_C1000000257_Visible,ESACC_C1000000257_Enabled,TempBoolean);

      ESACC_ESFLADSMgt.PageControl(
        50000,50064,1,1000000258,
        ESACC_C1000000258_Visible,ESACC_C1000000258_Enabled,TempBoolean);

      ESACC_ESFLADSMgt.PageControl(
        50000,50064,0,6,
        ESACC_F6_Visible,ESACC_F6_Editable,ESACC_F6_HideValue);

      ESACC_ESFLADSMgt.PageControl(
        50000,50064,0,11,
        ESACC_F11_Visible,ESACC_F11_Editable,ESACC_F11_HideValue);

      ESACC_ESFLADSMgt.PageControl(
        50000,50064,0,12,
        ESACC_F12_Visible,ESACC_F12_Editable,ESACC_F12_HideValue);

      ESACC_ESFLADSMgt.PageControl(
        50000,50064,0,19,
        ESACC_F19_Visible,ESACC_F19_Editable,ESACC_F19_HideValue);

      ESACC_ESFLADSMgt.PageControl(
        50000,50064,0,32,
        ESACC_F32_Visible,ESACC_F32_Editable,ESACC_F32_HideValue);

      ESACC_ESFLADSMgt.PageControl(
        50000,50064,0,50000,
        ESACC_F50000_Visible,ESACC_F50000_Editable,ESACC_F50000_HideValue);

      ESACC_ESFLADSMgt.PageControl(
        50000,50064,0,50001,
        ESACC_F50001_Visible,ESACC_F50001_Editable,ESACC_F50001_HideValue);

      ESACC_ESFLADSMgt.PageControl(
        50000,50064,0,50004,
        ESACC_F50004_Visible,ESACC_F50004_Editable,ESACC_F50004_HideValue);

      ESACC_ESFLADSMgt.PageControl(
        50000,50064,0,50005,
        ESACC_F50005_Visible,ESACC_F50005_Editable,ESACC_F50005_HideValue);

      ESACC_ESFLADSMgt.PageControl(
        50000,50064,0,50007,
        ESACC_F50007_Visible,ESACC_F50007_Editable,ESACC_F50007_HideValue);

      ESACC_ESFLADSMgt.PageControl(
        50000,50064,0,50008,
        ESACC_F50008_Visible,ESACC_F50008_Editable,ESACC_F50008_HideValue);

      ESACC_ESFLADSMgt.PageControl(
        50000,50064,0,50009,
        ESACC_F50009_Visible,ESACC_F50009_Editable,ESACC_F50009_HideValue);

      ESACC_ESFLADSMgt.PageControl(
        50000,50064,0,50013,
        ESACC_F50013_Visible,ESACC_F50013_Editable,ESACC_F50013_HideValue);

      ESACC_ESFLADSMgt.PageControl(
        50000,50064,0,50014,
        ESACC_F50014_Visible,ESACC_F50014_Editable,ESACC_F50014_HideValue);

      ESACC_ESFLADSMgt.PageControl(
        50000,50064,0,50024,
        ESACC_F50024_Visible,ESACC_F50024_Editable,ESACC_F50024_HideValue);

      ESACC_ESFLADSMgt.PageControl(
        50000,50064,0,50031,
        ESACC_F50031_Visible,ESACC_F50031_Editable,ESACC_F50031_HideValue);

      ESACC_EasySecurityManual(OpenObject);
    END;

    LOCAL PROCEDURE ESACC_EasySecurityManual@14123811(OpenObject@14123811 : Boolean);
    BEGIN
    END;

    PROCEDURE UserPrompt@1000000011();
    BEGIN
      //TOP010B KT ABCSI SSQQ Division Code 07092015
      QuickQuoteWorkSheet.RESET;
      QuickQuoteWorkSheet.SETCURRENTKEY("Location Code",Description,"Item No.","Sell-To Customer No.");
      QuickQuoteWorkSheet.SETFILTER("Current Qty.",'<>%1',0);
      QuickQuoteWorkSheet.SETFILTER("Lost Opportunity",'%1',FALSE);
      IF QuickQuoteWorkSheet.FINDFIRST THEN
        IF NOT CONFIRM(Text00002) THEN
          ERROR(Text00003) ELSE
        BEGIN
          CheckLostOpportunity;
          StockStatusQuickQuote.RESET;
          StockStatusQuickQuote.DELETEALL;
          QuickQuoteWorkSheet.RESET;
          QuickQuoteWorkSheet.DELETEALL;
          CLEAR(LineNo);
        END;
      //TOP010B KT ABCSI SSQQ Division Code 07092015
    END;

    PROCEDURE UserUpdate@1000000000();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE Refresh@1000000001(NewCust@1000000000 : Boolean);
    VAR
      CustRec@1000000001 : Record 18;
      ItemDivMatrix@1000000002 : Record 50032;
    BEGIN
      IF NewCust THEN
        BEGIN
          CheckLostOpportunity;
          StockStatusQuickQuote.RESET;
          StockStatusQuickQuote.DELETEALL;
          QuickQuoteWorkSheet.RESET;
          QuickQuoteWorkSheet.DELETEALL;
          CLEAR(LineNo);
        END;

      RESET;

      //TOP130 KT ABCSI Item List Sort and Filter by Status 04102015 Start
      // <TPZ591>
      ASCENDING := TRUE;
      SETCURRENTKEY("Sorting Order");
      // </TPZ591>

      IF CustRec.GET(InCustFilter) THEN BEGIN
        IF  (NOT CustRec."Non Divisional") THEN BEGIN
          FILTERGROUP(2);
          IF ItemDivMatrix.GET(CurrDivisionCodeFilter) THEN
            SETFILTER("Shortcut Dimension 5 Code",ItemDivMatrix."Divisional Filter");
          FILTERGROUP(0);
        END;
      END;
      //TOP130 KT ABCSI Item List Sort and Filter by Status 04102015 End


      {
      IF InCustFilter <> '' THEN
         QuickQuoteWorkSheet.SETRANGE("Sell-To Customer No.", InCustFilter);
      IF NOT QuickQuoteWorkSheet.FIND('+') THEN
         LineNo := 1
      ELSE
         LineNo := QuickQuoteWorkSheet."Line No." + 1;
      }
      IF FIND('-') THEN;
      CurrPage.UPDATE(FALSE);
      CurrPage.ACTIVATE;
    END;

    PROCEDURE FindItemNo@1000000008(varItemNo@1000000000 : Code[20]);
    VAR
      WSHSHELL@1000000001 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{72C24DD5-D70A-438B-8A42-98424B88AFB8}:'Windows Script Host Object Model'.WshShell";
      MSVBD@1000000002 : DotNet "'Microsoft.VisualBasic, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.Microsoft.VisualBasic.Devices.Keyboard" RUNONCLIENT;
    BEGIN
      //TOP10C KT ABCSI - SSQQ Item Search 07082015
      IF varItemNo = '' THEN
        EXIT;

      SETFILTER("Item No.",varItemNo +'*');
      IF FIND('-') THEN;
      CurrPage.UPDATE(FALSE);
      CurrPage.ACTIVATE(TRUE);

      {
      IF ISCLEAR(WSHSHELL) THEN
        CREATE(WSHSHELL, TRUE, TRUE);

      WSHSHELL.SendKeys('^+A');
      }
      MSVBD := MSVBD.Keyboard;

      MSVBD.SendKeys('^+A');
      //TOP10C KT ABCSI - SSQQ Item Search 07082015
    END;

    PROCEDURE FindVendItemNo@1000000012(varVendItemNo@1000000000 : Text[30]);
    VAR
      WSHSHELL@1000000001 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{72C24DD5-D70A-438B-8A42-98424B88AFB8}:'Windows Script Host Object Model'.WshShell";
      MSVBD@1000000002 : DotNet "'Microsoft.VisualBasic, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.Microsoft.VisualBasic.Devices.Keyboard" RUNONCLIENT;
    BEGIN
      //TOP10E KT ABCSI - Additional Stock Status 07282015
      IF varVendItemNo = '' THEN
        EXIT;

      SETFILTER("Vendor Item No.",varVendItemNo +'*');
      IF FIND('-') THEN;
      CurrPage.UPDATE(FALSE);
      CurrPage.ACTIVATE(TRUE);
      {
      IF ISCLEAR(WSHSHELL) THEN
        CREATE(WSHSHELL, TRUE, TRUE);

      WSHSHELL.SendKeys('^+A');
      }
      MSVBD := MSVBD.Keyboard;

      MSVBD.SendKeys('^+A');

      //TOP10E KT ABCSI - Additional Stock Status 07282015
    END;

    PROCEDURE SetUserFilters@1000000002(InCustomer@1000000000 : Code[20];InLocation@1000000001 : Code[10];InDivisionCodeFilter@1000000002 : Code[20]);
    BEGIN
      InCustFilter := InCustomer;
      InLocFilter := InLocation;
      CurrDivisionCodeFilter := InDivisionCodeFilter;
      UpdateLine;
    END;

    PROCEDURE UpdateLastSalesPrice@1000000003(VAR InRec@1000000000 : Record 50000);
    VAR
      CustLoc@1000000001 : Record 18;
    BEGIN
      IF Item.GET(InRec."Item No.") THEN BEGIN
        BaseUOM := Item."Base Unit of Measure";
      END;

      IF "Unit Price" = 0 THEN
        EXIT;
      NewLastSalesPrice.RESET;
      NewLastSalesPrice.SETRANGE("Document Type",NewLastSalesPrice."Document Type"::"Stock Status");
      NewLastSalesPrice.SETRANGE("Document No.",'');
      NewLastSalesPrice.SETRANGE("Sell-to Customer No.",InCustFilter);
      NewLastSalesPrice.SETRANGE("Item No.","Item No.");
      NewLastSalesPrice.SETRANGE("Unit of Measure Code","Current UOM");
      IF NewLastSalesPrice.FINDFIRST THEN BEGIN
        NewLastSalesPrice."Document Date" := "Order Date";
        NewLastSalesPrice."Last Unit Price" := "Unit Price";
        NewLastSalesPrice."Last Price UOM" := "Current UOM";
        NewLastSalesPrice."Last Price Qty." := "Current Qty.";
        NewLastSalesPrice."Last Price Date" := TODAY;
        NewLastSalesPrice."Last Price User ID" := USERID;
        NewLastSalesPrice.MODIFY;
      END ELSE BEGIN
        NewLastSalesPrice.INIT;
        NewLastSalesPrice."Document Type" := NewLastSalesPrice."Document Type"::"Stock Status";
        NewLastSalesPrice."Document No." := '';
        // <TPZ1014>
        NewLastSalesPrice.VALIDATE("Sell-to Customer No.",InCustFilter);
        // </TPZ1014>
        NewLastSalesPrice."Item No." := "Item No.";
        NewLastSalesPrice."Unit of Measure Code" := "Current UOM";
        NewLastSalesPrice."Document Date" := "Order Date";
        NewLastSalesPrice."Last Unit Price" := "Unit Price";
        NewLastSalesPrice."Last Price UOM" := "Current UOM";
        NewLastSalesPrice."Last Price Qty." := "Current Qty.";
        NewLastSalesPrice."Last Price Date" := TODAY;
        NewLastSalesPrice."Last Price User ID" := USERID;
        // <TPZ449>
        IF CustLoc.GET(InCustFilter) THEN BEGIN
          NewLastSalesPrice."Shortcut Dimension 5 Code" := CurrDivisionCodeFilter;
          NewLastSalesPrice."Country/Region Code" := CustLoc."Country/Region Code";
        END;
        // </TPZ449>
        NewLastSalesPrice.INSERT;
      END;
    END;

    PROCEDURE CalcQtyOnPick@1000000015(varItemNo@1000000001 : Code[20];varLocCode@1000000002 : Code[10]) : Decimal;
    VAR
      ItemRec@1000000000 : Record 27;
    BEGIN
      //TOP010 - Stock Status Quick Quote Screen - KT ABCSI 11052015
      ItemRec.GET(varItemNo);
      ItemRec.SETRANGE("Location Filter",varLocCode);
      ItemRec.CALCFIELDS("Qty. on Pick");
      EXIT(ItemRec."Qty. on Pick");
      //TOP010 - Stock Status Quick Quote Screen - KT ABCSI 11052015
    END;

    PROCEDURE NewOrderQuote@1000000005(CreateType@1000000000 : 'Order,Quote,Credit Memo,Return Order';"Doc No."@1000000001 : Code[10]);
    VAR
      OLocation@1000000002 : Code[10];
      NLocation@1000000003 : Code[10];
      OK@1000000004 : Boolean;
      ONo@1000000005 : Code[10];
      SOrders@1000000007 : Record 36;
      "LostQuoteNo."@1000000006 : Code[10];
      OnlyLost@1000000008 : Boolean;
    BEGIN
      IF (StockStatusQuickQuote.COUNT = 0) AND ((CreateType = CreateType::Order) OR (CreateType = CreateType::Quote)) THEN
        BEGIN
          MESSAGE('There is no item to process.');
          EXIT;
        END;

      //TOP010 KT ABCSI Stock Status Quick Quote 06042015
      QuickQuoteWorkSheet.RESET;
      QuickQuoteWorkSheet.SETCURRENTKEY("Location Code",Description,"Item No.","Sell-To Customer No.");
      QuickQuoteWorkSheet.SETFILTER("Current Qty.",'<>%1',0);
      QuickQuoteWorkSheet.SETFILTER("Lost Opportunity",'%1',FALSE);
      IF NOT QuickQuoteWorkSheet.FINDFIRST THEN
        ERROR(Text00001);
      //TOP010 KT ABCSI Stock Status Quick Quote 06042015

      CheckLostOpportunity;
      StockStatusQuickQuote.SETFILTER("Lost Opportunity",'%1',FALSE);
      IF (StockStatusQuickQuote.COUNT <> 0) THEN BEGIN
        CLEAR(OnlyLost);
        CLEAR(OLocation);
        CLEAR(NLocation);
        CLEAR(SalesHeader);
        CLEAR(LocationUpdated);
        CLEAR(PrevLocationCode);
        CLEAR(NextLocationCode);
        CLEAR(MultiOrder);
        CLEAR(FirstNo);
        CLEAR(LastNo);
        OrderTotal := CalcTotal(MultiOrder);
        SalesHeader.INIT;
        IF CreateType = CreateType::Order THEN
          SalesHeader."Document Type" := SalesHeader."Document Type"::Order
        ELSE
          BEGIN
          IF CreateType = CreateType::Quote THEN
            SalesHeader."Document Type" := SalesHeader."Document Type"::Quote
          ELSE
            EXIT;
          END;

        IF "Doc No." = '' THEN
          BEGIN
            SalesHeader.INSERT(TRUE);
            SalesHeader.SetHideValidationDialog(TRUE);
            SalesHeader.VALIDATE("Sell-to Customer No.",InCustFilter);
            SalesHeader.VALIDATE("Payment Terms Code");
            SalesHeader.VALIDATE("Shortcut Dimension 5 Code",CurrDivisionCodeFilter);  //TOP130 KT ABCSI Item List Sort and Filter by Status 04172015
            SalesHeader."Location Code" := '';
            SalesHeader.VALIDATE("Order Date",TODAY);
            SalesHeader.MODIFY(TRUE);
            //TOP040 KT ABCSI Sales Order Split by Locations 03052015 Commented per SMT
            {
            FirstNo := SalesHeader."No.";
            IF MultiOrder THEN BEGIN
              SalesHeader."Master Order No." := FirstNo;
              SalesHeader."Original Free Freight Base" := OrderTotal;
            END;
            LastNo := SalesHeader."No."
            }
            //TOP040 KT ABCSI Sales Order Split by Locations 03052015 Commented per SMT
          END;

        SalesLine.RESET;
        SalesLine.SETCURRENTKEY("Document Type","Document No.");
        SalesLine.SETRANGE(SalesLine."Document Type",SalesHeader."Document Type");
        //TOP170 KT ABCSI Sales Order Updates 04022015
        IF "Doc No." <> '' THEN
          SalesLine.SETRANGE(SalesLine."Document No.","Doc No.")
        ELSE
          SalesLine.SETRANGE(SalesLine."Document No.",SalesHeader."No.");
        //TOP170 KT ABCSI Sales Order Updates 04022015
        IF SalesLine.FIND('+') THEN
          SalesLineNo := SalesLine."Line No." + 10000
        ELSE
          SalesLineNo := 10000;
        QuickQuoteWorkSheet.RESET;
        //QuickQuoteWorkSheet.SETCURRENTKEY("Location Code",Description,"Item No.","Sell-To Customer No.");
        QuickQuoteWorkSheet.SETCURRENTKEY("Line No.","Item No.","Sell-To Customer No.");
        QuickQuoteWorkSheet.SETFILTER("Current Qty.",'<>%1',0);
        QuickQuoteWorkSheet.SETFILTER("Lost Opportunity",'%1',FALSE);

        IF QuickQuoteWorkSheet.FIND('-') THEN
          REPEAT
            IF "Doc No." = '' THEN
              IF SalesHeader."Location Code" = '' THEN BEGIN
                SalesHeader.VALIDATE(SalesHeader."Location Code",QuickQuoteWorkSheet."Location Code");
                SalesHeader.MODIFY(TRUE);
              END;
            //TOP040 KT ABCSI Sales Order Split by Locations 03052015 Commented per SMT
            {
            IF OLocation = '' THEN OLocation := QuickQuoteWorkSheet."Location Code"
            ELSE OLocation := NLocation;
            NLocation := QuickQuoteWorkSheet."Location Code";
            IF OLocation <> NLocation THEN BEGIN
              SLoc.GET(NLocation);
              CLEAR(SalesHeader);
              SalesHeader.INIT;
              IF CreateType = CreateType::Order THEN
                SalesHeader."Document Type" := SalesHeader."Document Type"::Order
              ELSE IF CreateType = CreateType::Quote THEN
                SalesHeader."Document Type" := SalesHeader."Document Type"::Quote;
              IF "Doc No." = '' THEN BEGIN
                MultiOrder := TRUE;
                SalesHeader.INSERT(TRUE);
                SalesHeader.SetHideValidationDialog(TRUE);
                SalesHeader.VALIDATE("Sell-to Customer No.",InCustFilter);
                LastNo := SalesHeader."No.";
                SalesHeader."Master Order No." := FirstNo;
                SalesHeader."Original Free Freight Base" := OrderTotal;
                SalesHeader.VALIDATE("Payment Terms Code");
                SalesHeader.VALIDATE("Location Code",NLocation);
                SalesHeader.VALIDATE("Order Date",TODAY);
                PrevLocationCode := NLocation;
                SalesHeader.MODIFY(TRUE);
              END;
            END;
            }
            //TOP040 KT ABCSI Sales Order Split by Locations 03052015 Commented per SMT
            SalesLine.INIT;
            SalesLine."Document Type" := SalesHeader."Document Type";
            IF "Doc No." = '' THEN
              SalesLine."Document No." := SalesHeader."No."
            ELSE
              SalesLine."Document No." := "Doc No.";
            SalesLine."Line No." := SalesLineNo;
            SalesLineNo := SalesLineNo + 10000;
            SalesLine.VALIDATE("Sell-to Customer No.",InCustFilter);
            SalesLine.Type := SalesLine.Type::Item;
            SalesLine.VALIDATE("No.",QuickQuoteWorkSheet."Item No.");
            IF QuickQuoteWorkSheet."Location Code" <> '' THEN
              SalesLine.VALIDATE("Location Code",QuickQuoteWorkSheet."Location Code");
            SalesLine.Quantity := QuickQuoteWorkSheet."Current Qty.";
            SalesLine.VALIDATE("Unit of Measure Code",QuickQuoteWorkSheet."Current UOM");
            SalesLine.VALIDATE("Unit Price",QuickQuoteWorkSheet."Unit Price");
            SalesLine."Base UOM Price" := QuickQuoteWorkSheet."Unit Price";
            SalesLine."Last Unit Price" := QuickQuoteWorkSheet."Last Unit Price";
            SalesLine."Last Price UOM" := QuickQuoteWorkSheet."Last Price UOM";
            SalesLine."Last Price Qty." := QuickQuoteWorkSheet."Last Price Qty.";
            SalesLine."Last Price Date" := QuickQuoteWorkSheet."Last Price Date";
            SalesLine."Modified UserID" := USERID;
           SalesLine.INSERT(TRUE);
          UNTIL QuickQuoteWorkSheet.NEXT = 0;
      END ELSE OnlyLost := TRUE;

      StockStatusQuickQuote.RESET;
      StockStatusQuickQuote.DELETEALL;

      QuickQuoteWorkSheet.RESET;
      QuickQuoteWorkSheet.DELETEALL;

      COMMIT;
      IF NOT OnlyLost THEN BEGIN
        IF "Doc No." = '' THEN
          //IF NOT MultiOrder THEN BEGIN //TOP040 KT ABCSI Sales Order Split by Locations 03052015 Commented per SMT
            IF CreateType = CreateType::Order THEN
              PAGE.RUNMODAL(PAGE::"Sales Order",SalesHeader)
            ELSE
              PAGE.RUNMODAL(PAGE::"Sales Quote",SalesHeader);
          //TOP040 KT ABCSI Sales Order Split by Locations 03052015 Commented per SMT
          {
          END ELSE BEGIN
            SOrders.RESET;
            SOrders.SETFILTER("No.",'%1..%2',FirstNo,LastNo);
            SOrders.FIND('-');
            IF CreateType = CreateType::Order THEN
              PAGE.RUNMODAL(PAGE::"Sales Order List",SOrders)
            ELSE
              PAGE.RUNMODAL(PAGE::"Sales Quotes",SOrders);
          END;
          }
          //TOP040 KT ABCSI Sales Order Split by Locations 03052015 Commented per SMT
      END;
    END;

    PROCEDURE ShowWorksheet@1000000004();
    VAR
      QuickQuoteWkshPg@1000000000 : Page 50001;
      LocalOrderTotal@1000000001 : Decimal;
    BEGIN
      QuickQuoteWorkSheet.SETCURRENTKEY("Line No.","Item No.","Sell-To Customer No.");
      QuickQuoteWorkSheet.SETFILTER("Line No.", '<>%1',0);
      PAGE.RUNMODAL(50001,QuickQuoteWorkSheet);
      QuickQuoteWorkSheet.RESET;
      IF QuickQuoteWorkSheet.FIND('-') THEN
        REPEAT
          IF StockStatusQuickQuote.GET(QuickQuoteWorkSheet."Item No.") THEN
            BEGIN
              StockStatusQuickQuote."Current Qty." := QuickQuoteWorkSheet."Current Qty.";
              StockStatusQuickQuote."Current UOM" := QuickQuoteWorkSheet."Current UOM";
              StockStatusQuickQuote."Unit Price" := QuickQuoteWorkSheet."Unit Price";
              StockStatusQuickQuote."Location Code" := QuickQuoteWorkSheet."Location Code";
              StockStatusQuickQuote.MODIFY;
            END;
        UNTIL QuickQuoteWorkSheet.NEXT = 0;
    END;

    PROCEDURE UpdateLine@1000000007();
    VAR
      OK@1000000000 : Boolean;
    BEGIN

      IF (StockStatusQuickQuote.GET("Item No.")) THEN
        BEGIN
          "Current Qty." := StockStatusQuickQuote."Current Qty.";
          "Current UOM" := StockStatusQuickQuote."Current UOM";
          "Unit Price" := StockStatusQuickQuote."Unit Price";
          "Reason Code" := StockStatusQuickQuote."Reason Code";
          "Reason Code Comment" := StockStatusQuickQuote."Reason Code Comment";
          "Lost Opportunity Description" := StockStatusQuickQuote."Lost Opportunity Description";  //TOP230 KT ABCSI CRP 2 Fixes 06092015
          "Lost Opportunity" := StockStatusQuickQuote."Lost Opportunity";
          "Order Date" := TODAY;
          //TOP230 KT ABCSI CRP 2 Fixes 05282015
          "Recomm. Unit Price" := StockStatusQuickQuote."Recomm. Unit Price";
          "Recomm. Multiplier" := StockStatusQuickQuote."Recomm. Multiplier";
          //TOP230 KT ABCSI CRP 2 Fixes 05282015
          IF (StockStatusQuickQuote."Location Code" <> InLocFilter) AND ("Location Code" = xRec."Location Code") THEN BEGIN
            "Location Code" := StockStatusQuickQuote."Location Code";
            "Location Filter" := StockStatusQuickQuote."Location Code"
          END;
          //"Shortcut Dimension 5 Code" := CurrDivisionCodeFilter;
          "Sell-to Customer No." := InCustFilter;
          CALCFIELDS("Cust. Qty. on SO", "Qty. on Sales Order");
          IF Item.GET("Item No.") THEN
            BEGIN
              Description := Item.Description;
              "Unit Cost" := Item."Unit Cost";
              QtyPerUOM := UOMMgt.GetQtyPerUnitOfMeasure(Item,"Current UOM");
              Item.SETRANGE("Location Filter");
              Item.CALCFIELDS(Inventory,"Qty. on Sales Order","Qty. on Purch. Order");
              "Total Qty. on Hand" := Item.Inventory / QtyPerUOM;
              Item.SETRANGE("Location Filter",StockStatusQuickQuote."Location Code");
              Item.CALCFIELDS(Inventory,"Qty. on Sales Order","Qty. on Purch. Order");

              //<TPZ1678>
              "Quantity Available on Location" := (Item.Inventory - Item."Qty. on Sales Order") / QtyPerUOM;
              //"Quantity Available on Location" := ItemMgt.CalcQtyAvailable(Item) / QtyPerUOM;
              //</TPZ1678>

              "Qty. on Hand" := Item.Inventory / QtyPerUOM;
              "Qty. on Purch. Order" := Item."Qty. on Purch. Order" / QtyPerUOM;
              "Qty. on Sales Order" := Item."Qty. on Sales Order" / QtyPerUOM;
              ItemLead := Item."Lead Time Calculation";
              IF (CompanyInformation."Location Code" <> '') AND (Item3.GET("Item No.")) THEN BEGIN
                Item3.SETFILTER("Location Filter",CompanyInformation."Location Code");
                Item3.CALCFIELDS(Inventory,"Qty. on Sales Order");
                //<TPZ1678>
                "Main Loc. Qty. Avail" := (Item3.Inventory - Item3."Qty. on Sales Order") / QtyPerUOM;
                //"Main Loc. Qty. Avail" := ItemMgt.CalcQtyAvailable(Item3)/QtyPerUOM;
                //</TPZ1675>
              END ELSE CLEAR("Main Loc. Qty. Avail");
              //TOP230 KT ABCSI CRP 2 Fixes 05282015
              "Low Unit Price" := Item."Low Unit Price";
              "High Unit Price" := Item."High Unit Price";
              "Medium Unit Price" := Item."Medium Unit Price";
              //TOP230 KT ABCSI CRP 2 Fixes 05282015
            END;

            SalesPrice.RESET;
            SalesPrice.SETRANGE("Item No.","Item No.");
            SalesPrice.SETRANGE("Sales Type",SalesPrice."Sales Type"::Customer);
            SalesPrice.SETRANGE("Sales Code",InCustFilter);
            IF SalesPrice.FINDLAST THEN BEGIN
              "Last Price Change Date" := SalesPrice."Starting Date";
              //"Low Unit Price" := SalesPrice."Low Unit Price";
              //"High Unit Price" := SalesPrice."High Unit Price";
              //"Medium Unit Price" := SalesPrice."Medium Unit Price";
              "Curr. Unit Price Starting Date" := SalesPrice."Starting Date";
              "Curr. Unit Price Ending Date" := SalesPrice."Ending Date";
            END;

          //Find Last Lost Opportunity
          LastLostOpportunity.RESET;
          LastLostOpportunity.SETRANGE("Document Type",LastLostOpportunity."Document Type"::"3");
          LastLostOpportunity.SETRANGE("No.","Item No.");
          LastLostOpportunity.SETRANGE("Sell-to Customer No.",InCustFilter);
          IF LastLostOpportunity.FINDLAST THEN BEGIN
            "Last Lost Opportunity" := TRUE;
            "Last Reason Code" := LastLostOpportunity."Reason Code";
            "Last Reason Code Comment" := LastLostOpportunity."Reason Code Comment";
          END;

          //Find Last Quoted Unit Price and related fields
          LastSalesPrice.RESET;
          //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04162015 Start
          LastSalesPrice.ASCENDING;
          LastSalesPrice.SETCURRENTKEY("Sell-to Customer No.","Item No.","Document Date");
          //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04162015 Start
          LastSalesPrice.SETRANGE("Document Type",LastSalesPrice."Document Type"::Quote);
          LastSalesPrice.SETRANGE("Sell-to Customer No.",InCustFilter);
          LastSalesPrice.SETRANGE("Item No.","Item No.");
          LastSalesPrice.SETRANGE("Unit of Measure Code","Base Unit of Measure");
          IF LastSalesPrice.FINDLAST THEN BEGIN
            "Last Quoted Unit Price" := LastSalesPrice."Last Unit Price";
            "Last Quoted UOM" := LastSalesPrice."Last Price UOM";
            "Last Quoted Qty." := LastSalesPrice."Last Price Qty.";
          END ELSE BEGIN
            "Last Quoted Unit Price" := 0;
            "Last Quoted UOM" := '';
            "Last Quoted Qty." := 0;
          END;

          //Find Last Invoiced Unit Price and related fields
          LastSalesPrice.RESET;
          //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04162015 Start
          LastSalesPrice.ASCENDING;
          LastSalesPrice.SETCURRENTKEY("Sell-to Customer No.","Item No.","Document Date");
          //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04162015 Start
          LastSalesPrice.SETRANGE("Document Type",LastSalesPrice."Document Type"::"Posted Sales Invoice");
          LastSalesPrice.SETRANGE("Sell-to Customer No.",InCustFilter);
          LastSalesPrice.SETRANGE("Item No.","Item No.");
          LastSalesPrice.SETRANGE("Unit of Measure Code","Base Unit of Measure");
          IF LastSalesPrice.FINDLAST THEN BEGIN
            "Last Invoice Price" := LastSalesPrice."Last Unit Price";
            "Last Invoiced Qty." := LastSalesPrice."Last Price Qty.";
          END ELSE BEGIN
            "Last Invoice Price" := 0;
            "Last Invoiced Qty." := 0;
          END;

          //Find Last Unit Price and related fields
          LastSalesPrice.RESET;
          //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04162015 Start
          LastSalesPrice.ASCENDING;
          LastSalesPrice.SETCURRENTKEY("Sell-to Customer No.","Item No.","Document Date");
          //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04162015 Start
          LastSalesPrice.SETRANGE("Sell-to Customer No.",InCustFilter);
          LastSalesPrice.SETRANGE("Item No.","Item No.");
          IF LastSalesPrice.FINDLAST THEN BEGIN
            "Last Unit Price" := LastSalesPrice."Last Unit Price";
            "Last Price UOM" := LastSalesPrice."Last Price UOM";
            "Last Price Qty." := LastSalesPrice."Last Price Qty.";
            "Last Price Date" := LastSalesPrice."Last Price Date";
            "Last Price User ID" := LastSalesPrice."Last Price User ID";  //TOP010E KT ABCSI 07282015
          END ELSE BEGIN
            "Last Unit Price" := 0;
            "Last Price UOM" := '';
            "Last Price Qty." := 0;
            "Last Price Date" := 0D;
            "Last Price User ID" := ''; //TOP010E KT ABCSI 07282015
          END;
        END
      ELSE
        BEGIN
        IF Item.GET("Item No.") THEN
          BEGIN
            Description := Item.Description;
            "Unit Cost" := Item."Unit Cost";
            ItemUnitPrice := Item."Unit Price";
            "Unit Price" := 0;
            "Order Date" := TODAY;
            "Current UOM" := Item."Sales Unit of Measure";
            QtyPerUOM := UOMMgt.GetQtyPerUnitOfMeasure(Item,"Current UOM");
            Item.SETRANGE("Location Filter");
            Item.CALCFIELDS(Inventory,"Qty. on Sales Order","Qty. on Purch. Order");
            "Total Qty. on Hand" := Item.Inventory / QtyPerUOM;
            Item.SETRANGE("Location Filter",InLocFilter);
            Item.CALCFIELDS(Inventory,"Qty. on Sales Order","Qty. on Purch. Order");

            //<TPZ1675>
            "Quantity Available on Location" := (Item.Inventory - Item."Qty. on Sales Order") / QtyPerUOM;
           // "Quantity Available on Location" := ItemMgt.CalcQtyAvailable(Item) / QtyPerUOM;
            //</TPZ1675>

            "Qty. on Hand" := Item.Inventory / QtyPerUOM;
            "Qty. on Purch. Order" := Item."Qty. on Purch. Order" / QtyPerUOM;
            "Qty. on Sales Order" := Item."Qty. on Sales Order" / QtyPerUOM;
            ItemLead := Item."Lead Time Calculation";
            IF (CompanyInformation."Location Code" <> '') AND (Item3.GET("Item No.")) THEN BEGIN
              Item3.SETFILTER("Location Filter",CompanyInformation."Location Code");
              Item3.CALCFIELDS(Inventory,"Qty. on Sales Order");
              //<TPZ1675>
              "Main Loc. Qty. Avail" := (Item3.Inventory - Item3."Qty. on Sales Order") / QtyPerUOM;
              //"Main Loc. Qty. Avail" := ItemMgt.CalcQtyAvailable(Item3) / QtyPerUOM;
              //</TPZ1675>
            END ELSE CLEAR("Main Loc. Qty. Avail");
            "Current Qty." := 0;
            BaseUOM := Item."Base Unit of Measure";
            "Location Code" := InLocFilter;
            //"Shortcut Dimension 5 Code" := CurrDivisionCodeFilter;
            CALCFIELDS("Cust. Qty. on SO", "Qty. on Sales Order");
            "Sell-to Customer No." := InCustFilter;
            "Vendor Item No." := Item."Vendor Item No.";

            //TOP230 KT ABCSI CRP 2 Fixes 05282015
            "Low Unit Price" := Item."Low Unit Price";
            "High Unit Price" := Item."High Unit Price";
            "Medium Unit Price" := Item."Medium Unit Price";
            //TOP230 KT ABCSI CRP 2 Fixes 05282015

            SalesPrice.RESET;
            SalesPrice.SETRANGE("Item No.","Item No.");
            SalesPrice.SETRANGE("Sales Type",SalesPrice."Sales Type"::Customer);
            SalesPrice.SETRANGE("Sales Code",InCustFilter);
            IF SalesPrice.FINDLAST THEN BEGIN
              "Last Price Change Date" := SalesPrice."Starting Date";
              //"Low Unit Price" := SalesPrice."Low Unit Price";
              //"High Unit Price" := SalesPrice."High Unit Price";
              //"Medium Unit Price" := SalesPrice."Medium Unit Price";
              "Curr. Unit Price Starting Date" := SalesPrice."Starting Date";
              "Curr. Unit Price Ending Date" := SalesPrice."Ending Date";
            END;


            //Find Last Lost Opportunity
            LastLostOpportunity.RESET;
            LastLostOpportunity.SETRANGE("Document Type",LastLostOpportunity."Document Type"::"3");
            LastLostOpportunity.SETRANGE("No.","Item No.");
            LastLostOpportunity.SETRANGE("Sell-to Customer No.",InCustFilter);
            IF LastLostOpportunity.FINDLAST THEN BEGIN
              "Last Lost Opportunity" := TRUE;
              "Last Reason Code" := LastLostOpportunity."Reason Code";
              "Last Reason Code Comment" := LastLostOpportunity."Reason Code Comment";
            END;

            //Find Last Quoted Unit Price and related fields
            LastSalesPrice.RESET;
            //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04162015 Start
            LastSalesPrice.ASCENDING;
            LastSalesPrice.SETCURRENTKEY("Sell-to Customer No.","Item No.","Document Date");
            //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04162015 Start
            LastSalesPrice.SETRANGE("Document Type",LastSalesPrice."Document Type"::Quote);
            LastSalesPrice.SETRANGE("Sell-to Customer No.",InCustFilter);
            LastSalesPrice.SETRANGE("Item No.","Item No.");
            LastSalesPrice.SETRANGE("Unit of Measure Code","Base Unit of Measure");
            IF LastSalesPrice.FINDLAST THEN BEGIN
              "Last Quoted Unit Price" := LastSalesPrice."Last Unit Price";
              "Last Quoted UOM" := LastSalesPrice."Last Price UOM";
              "Last Quoted Qty." := LastSalesPrice."Last Price Qty.";
            END ELSE BEGIN
              "Last Quoted Unit Price" := 0;
              "Last Quoted UOM" := '';
              "Last Quoted Qty." := 0;
            END;

            //Find Last Invoiced Unit Price and related fields
            LastSalesPrice.RESET;
            //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04162015 Start
            LastSalesPrice.ASCENDING;
            LastSalesPrice.SETCURRENTKEY("Sell-to Customer No.","Item No.","Document Date");
            //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04162015 Start
            LastSalesPrice.SETRANGE("Document Type",LastSalesPrice."Document Type"::"Posted Sales Invoice");
            LastSalesPrice.SETRANGE("Sell-to Customer No.",InCustFilter);
            LastSalesPrice.SETRANGE("Item No.","Item No.");
            LastSalesPrice.SETRANGE("Unit of Measure Code","Base Unit of Measure");
            IF LastSalesPrice.FINDLAST THEN BEGIN
              "Last Invoice Price" := LastSalesPrice."Last Unit Price";
              "Last Invoiced Qty." := LastSalesPrice."Last Price Qty.";
            END ELSE BEGIN
              "Last Invoice Price" := 0;
              "Last Invoiced Qty." := 0;
            END;

            LastSalesPrice.RESET;
            //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04162015 Start
            LastSalesPrice.ASCENDING;
            LastSalesPrice.SETCURRENTKEY("Sell-to Customer No.","Item No.","Document Date");
            //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04162015 Start
            LastSalesPrice.SETRANGE("Sell-to Customer No.",InCustFilter);
            LastSalesPrice.SETRANGE("Item No.","Item No.");
            IF LastSalesPrice.FINDLAST THEN BEGIN
              "Last Unit Price" := LastSalesPrice."Last Unit Price";
              //TOP010D KT ABCSI SSQQ Unit Price 07142015
              IF ("Shortcut Dimension 5 Code" = 'I') OR ("Shortcut Dimension 5 Code" = 'L') THEN
                "Unit Price" := LastSalesPrice."Last Unit Price";
              //TOP010D KT ABCSI SSQQ Unit Price 07142015
              "Last Price UOM" := LastSalesPrice."Last Price UOM";
              "Last Price Qty." := LastSalesPrice."Last Price Qty.";
              "Last Price Date" := LastSalesPrice."Last Price Date";
              "Last Price User ID" := LastSalesPrice."Last Price User ID";  //TOP010E KT ABCSI 07282015
            END ELSE BEGIN
              "Last Unit Price" := 0;
              "Last Price UOM" := '';
              "Last Price Qty." := 0;
              "Last Price Date" := 0D;
              "Last Price User ID" := '';  //TOP010E KT ABCSI 07282015
            END;

            //TOP010D KT ABCSI SSQQ Unit Price 07142015
            IF "Shortcut Dimension 5 Code" = 'E' THEN
              "Unit Price" := "Recomm. Unit Price";
            //TOP010D KT ABCSI SSQQ Unit Price 07142015
          END;
        END;
    END;

    PROCEDURE UpdateSingleLine@1000000009(LineLocation@1000000000 : Code[10]);
    BEGIN

      IF (StockStatusQuickQuote.GET("Item No.")) THEN
        BEGIN
          "Current Qty." := StockStatusQuickQuote."Current Qty.";
          "Current UOM" := StockStatusQuickQuote."Current UOM";
          "Unit Price" := StockStatusQuickQuote."Unit Price";
          "Reason Code" := StockStatusQuickQuote."Reason Code";
          "Reason Code Comment" := StockStatusQuickQuote."Reason Code Comment";
          "Lost Opportunity Description" := StockStatusQuickQuote."Lost Opportunity Description";  //TOP230 KT ABCSI CRP 2 Fixes 06092015
          "Lost Opportunity" := StockStatusQuickQuote."Lost Opportunity";
          "Location Code" := LineLocation;
          "Order Date" := TODAY;
          //TOP230 KT ABCSI CRP 2 Fixes 05282015
          "Recomm. Unit Price" := StockStatusQuickQuote."Recomm. Unit Price";
          "Recomm. Multiplier" := StockStatusQuickQuote."Recomm. Multiplier";
          //TOP230 KT ABCSI CRP 2 Fixes 05282015
          //"Shortcut Dimension 5 Code" := CurrDivisionCodeFilter;
          "Sell-to Customer No." := InCustFilter;
          IF Item.GET("Item No.") THEN
            BEGIN
              Description := Item.Description;
              "Unit Cost" := Item."Unit Cost";
              ItemUnitPrice := Item."Unit Price";
              QtyPerUOM := UOMMgt.GetQtyPerUnitOfMeasure(Item,"Current UOM");
              Item.SETRANGE("Location Filter");
              Item.CALCFIELDS(Inventory,"Qty. on Sales Order","Qty. on Purch. Order");
              "Total Qty. on Hand" := Item.Inventory / QtyPerUOM;
              Item.SETFILTER("Location Filter","Location Code");
              Item.CALCFIELDS(Inventory,"Qty. on Sales Order","Qty. on Purch. Order");

              //<TPZ1675>
              "Quantity Available on Location" := (Item.Inventory - Item."Qty. on Sales Order") / QtyPerUOM;
              //"Quantity Available on Location" := ItemMgt.CalcQtyAvailable(Item) / QtyPerUOM;
              //<//TPZ1675>

              "Qty. on Hand" := Item.Inventory / QtyPerUOM;
              "Qty. on Purch. Order" := Item."Qty. on Purch. Order" / QtyPerUOM;
              "Qty. on Sales Order" := Item."Qty. on Sales Order" / QtyPerUOM;

              IF (CompanyInformation."Location Code" <> '') AND (Item3.GET("Item No.")) THEN BEGIN
                Item3.SETFILTER("Location Filter",CompanyInformation."Location Code");
                Item3.CALCFIELDS(Inventory,"Qty. on Sales Order");
                //<TPZ1675>
                "Main Loc. Qty. Avail" := (Item3.Inventory - Item3."Qty. on Sales Order") / QtyPerUOM;
               // "Main Loc. Qty. Avail" := ItemMgt.CalcQtyAvailable(Item3) / QtyPerUOM;
                //<//TPZ1675>
              END ELSE CLEAR("Main Loc. Qty. Avail");
              //TOP230 KT ABCSI CRP 2 Fixes 05282015
              "Low Unit Price" := Item."Low Unit Price";
              "High Unit Price" := Item."High Unit Price";
              "Medium Unit Price" := Item."Medium Unit Price";
              //TOP230 KT ABCSI CRP 2 Fixes 05282015
            END;

            SalesPrice.RESET;
            SalesPrice.SETRANGE("Item No.","Item No.");
            SalesPrice.SETRANGE("Sales Type",SalesPrice."Sales Type"::Customer);
            SalesPrice.SETRANGE("Sales Code",InCustFilter);
            IF SalesPrice.FINDLAST THEN BEGIN
              "Last Price Change Date" := SalesPrice."Starting Date";
              //"Low Unit Price" := SalesPrice."Low Unit Price";
              //"High Unit Price" := SalesPrice."High Unit Price";
              //"Medium Unit Price" := SalesPrice."Medium Unit Price";
              "Curr. Unit Price Starting Date" := SalesPrice."Starting Date";
              "Curr. Unit Price Ending Date" := SalesPrice."Ending Date";
            END;


            //Find Last Quoted Unit Price and related fields
            LastSalesPrice.RESET;
            //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04162015 Start
            LastSalesPrice.ASCENDING;
            LastSalesPrice.SETCURRENTKEY("Sell-to Customer No.","Item No.","Document Date");
            //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04162015 End
            LastSalesPrice.SETRANGE("Document Type",LastSalesPrice."Document Type"::Quote);
            LastSalesPrice.SETRANGE("Sell-to Customer No.",InCustFilter);
            LastSalesPrice.SETRANGE("Item No.","Item No.");
            LastSalesPrice.SETRANGE("Unit of Measure Code","Base Unit of Measure");
            IF LastSalesPrice.FINDLAST THEN BEGIN
              "Last Quoted Unit Price" := LastSalesPrice."Last Unit Price";
              "Last Quoted UOM" := LastSalesPrice."Last Price UOM";
              "Last Quoted Qty." := LastSalesPrice."Last Price Qty.";
            END ELSE BEGIN
              "Last Quoted Unit Price" := 0;
              "Last Quoted UOM" := '';
              "Last Quoted Qty." := 0;
            END;

            //Find Last Invoiced Unit Price and related fields
            LastSalesPrice.RESET;
            //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04162015 Start
            LastSalesPrice.ASCENDING;
            LastSalesPrice.SETCURRENTKEY("Sell-to Customer No.","Item No.","Document Date");
            //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04162015 End
            LastSalesPrice.SETRANGE("Document Type",LastSalesPrice."Document Type"::"Posted Sales Invoice");
            LastSalesPrice.SETRANGE("Sell-to Customer No.",InCustFilter);
            LastSalesPrice.SETRANGE("Item No.","Item No.");
            LastSalesPrice.SETRANGE("Unit of Measure Code","Base Unit of Measure");
            IF LastSalesPrice.FINDLAST THEN BEGIN
              "Last Invoice Price" := LastSalesPrice."Last Unit Price";
              "Last Invoiced Qty." := LastSalesPrice."Last Price Qty.";
            END ELSE BEGIN
              "Last Invoice Price" := 0;
              "Last Invoiced Qty." := 0;
            END;

            //Find Last Unit Price and related fields
            LastSalesPrice.RESET;
            //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04162015 Start
            LastSalesPrice.ASCENDING;
            LastSalesPrice.SETCURRENTKEY("Sell-to Customer No.","Item No.","Document Date");
            //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04162015 End
            LastSalesPrice.SETRANGE("Sell-to Customer No.",InCustFilter);
            LastSalesPrice.SETRANGE("Item No.","Item No.");
            IF LastSalesPrice.FINDLAST THEN BEGIN
              "Last Unit Price" := LastSalesPrice."Last Unit Price";
              "Last Price UOM" := LastSalesPrice."Last Price UOM";
              "Last Price Qty." := LastSalesPrice."Last Price Qty.";
              "Last Price Date" := LastSalesPrice."Last Price Date";
              "Last Price User ID" := LastSalesPrice."Last Price User ID";  //TOP010E KT ABCSI 07282015
            END ELSE BEGIN
              "Last Unit Price" := 0;
              "Last Price UOM" := '';
              "Last Price Qty." := 0;
              "Last Price Date" := 0D;
              "Last Price User ID" := '';  //TOP010E KT ABCSI 07282015
            END;
        END
      ELSE
        BEGIN
        IF Item.GET("Item No.") THEN
          BEGIN
            "Unit Cost" := Item."Unit Cost";
            ItemUnitPrice := Item."Unit Price";
            "Unit Price" := 0;
            "Order Date" := TODAY;
            "Current UOM" := Item."Sales Unit of Measure";
            QtyPerUOM := UOMMgt.GetQtyPerUnitOfMeasure(Item,"Current UOM");
            Item.SETRANGE("Location Filter");
            Item.CALCFIELDS(Inventory,"Qty. on Sales Order","Qty. on Purch. Order");
            "Total Qty. on Hand" := Item.Inventory / QtyPerUOM;
            Item.SETRANGE("Location Filter",LineLocation);
            Item.CALCFIELDS(Inventory,"Qty. on Sales Order","Qty. on Purch. Order");

            //<TPZ1675>
            "Quantity Available on Location" := (Item.Inventory - Item."Qty. on Sales Order") / QtyPerUOM;
            //"Quantity Available on Location" := ItemMgt.CalcQtyAvailable(Item) / QtyPerUOM;
            //</TPZ1675>

            "Qty. on Hand" := Item.Inventory / QtyPerUOM;
            "Qty. on Purch. Order" := Item."Qty. on Purch. Order" / QtyPerUOM;
            "Qty. on Sales Order" := Item."Qty. on Sales Order" / QtyPerUOM;
            ItemLead := Item."Lead Time Calculation";
            IF (CompanyInformation."Location Code" <> '') AND (Item3.GET("Item No.")) THEN BEGIN
              Item3.SETFILTER("Location Filter",CompanyInformation."Location Code");
              Item3.CALCFIELDS(Inventory,"Qty. on Sales Order");
              //<TPZ1675>
              "Main Loc. Qty. Avail" := (Item3.Inventory - Item3."Qty. on Sales Order") / QtyPerUOM;
              //"Main Loc. Qty. Avail" := ItemMgt.CalcQtyAvailable(Item3) / QtyPerUOM;
              //</TPZ1675>
            END ELSE CLEAR("Main Loc. Qty. Avail");
            "Current Qty." := 0;
            BaseUOM := Item."Base Unit of Measure";
            "Location Code" := LineLocation;
            //"Shortcut Dimension 5 Code" := CurrDivisionCodeFilter;
            "Sell-to Customer No." := InCustFilter;
            "Vendor Item No." := Item."Vendor Item No.";

            //TOP230 KT ABCSI CRP 2 Fixes 05282015
            "Low Unit Price" := Item."Low Unit Price";
            "High Unit Price" := Item."High Unit Price";
            "Medium Unit Price" := Item."Medium Unit Price";
            //TOP230 KT ABCSI CRP 2 Fixes 05282015

            SalesPrice.RESET;
            SalesPrice.SETRANGE("Item No.","Item No.");
            SalesPrice.SETRANGE("Sales Type",SalesPrice."Sales Type"::Customer);
            SalesPrice.SETRANGE("Sales Code",InCustFilter);
            IF SalesPrice.FINDLAST THEN BEGIN
              "Last Price Change Date" := SalesPrice."Starting Date";
              //"Low Unit Price" := SalesPrice."Low Unit Price";
              //"High Unit Price" := SalesPrice."High Unit Price";
              //"Medium Unit Price" := SalesPrice."Medium Unit Price";
              "Curr. Unit Price Starting Date" := SalesPrice."Starting Date";
              "Curr. Unit Price Ending Date" := SalesPrice."Ending Date";
            END;


            //Find Last Quoted Unit Price and related fields
            LastSalesPrice.RESET;
            //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04162015 Start
            LastSalesPrice.ASCENDING;
            LastSalesPrice.SETCURRENTKEY("Sell-to Customer No.","Item No.","Document Date");
            //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04162015 End
            LastSalesPrice.SETRANGE("Document Type",LastSalesPrice."Document Type"::Quote);
            LastSalesPrice.SETRANGE("Sell-to Customer No.",InCustFilter);
            LastSalesPrice.SETRANGE("Item No.","Item No.");
            LastSalesPrice.SETRANGE("Unit of Measure Code","Current UOM");
            IF LastSalesPrice.FINDLAST THEN BEGIN
              "Last Quoted Unit Price" := LastSalesPrice."Last Unit Price";
              "Last Quoted UOM" := LastSalesPrice."Last Price UOM";
              "Last Quoted Qty." := LastSalesPrice."Last Price Qty.";
            END ELSE BEGIN
              "Last Quoted Unit Price" := 0;
              "Last Quoted UOM" := '';
              "Last Quoted Qty." := 0;
            END;

            //Find Last Invoiced Unit Price and related fields
            LastSalesPrice.RESET;
            //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04162015 Start
            LastSalesPrice.ASCENDING;
            LastSalesPrice.SETCURRENTKEY("Sell-to Customer No.","Item No.","Document Date");
            //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04162015 End
            LastSalesPrice.SETRANGE("Document Type",LastSalesPrice."Document Type"::"Posted Sales Invoice");
            LastSalesPrice.SETRANGE("Sell-to Customer No.",InCustFilter);
            LastSalesPrice.SETRANGE("Item No.","Item No.");
            LastSalesPrice.SETRANGE("Unit of Measure Code","Current UOM");
            IF LastSalesPrice.FINDLAST THEN BEGIN
              "Last Invoice Price" := LastSalesPrice."Last Unit Price";
              "Last Invoiced Qty." := LastSalesPrice."Last Price Qty.";
            END ELSE BEGIN
              "Last Invoice Price" := 0;
              "Last Invoiced Qty." := 0;
            END;

            //Find Last Unit Price and related fields
            LastSalesPrice.RESET;
            //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04162015 Start
            LastSalesPrice.ASCENDING;
            LastSalesPrice.SETCURRENTKEY("Sell-to Customer No.","Item No.","Document Date");
            //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04162015 End
            LastSalesPrice.SETRANGE("Sell-to Customer No.",InCustFilter);
            LastSalesPrice.SETRANGE("Item No.","Item No.");
            IF LastSalesPrice.FINDLAST THEN BEGIN
              "Last Unit Price" := LastSalesPrice."Last Unit Price";
              "Last Price UOM" := LastSalesPrice."Last Price UOM";
              "Last Price Qty." := LastSalesPrice."Last Price Qty.";
              "Last Price Date" := LastSalesPrice."Last Price Date";
              "Last Price User ID" := LastSalesPrice."Last Price User ID";  //TOP010E KT ABCSI 07282015
            END ELSE BEGIN
              "Last Unit Price" := 0;
              "Last Price UOM" := '';
              "Last Price Qty." := 0;
              "Last Price Date" := 0D;
              "Last Price User ID" := '';  //TOP010E KT ABCSI 07282015
            END;
          END;
        END;
    END;

    PROCEDURE CheckLostOpportunity@1000000016();
    VAR
      "LostQuoteNo."@1000000000 : Code[10];
    BEGIN
      QuickQuoteWorkSheet.RESET;
      QuickQuoteWorkSheet.SETCURRENTKEY("Location Code",Description,"Item No.","Sell-To Customer No.");
      QuickQuoteWorkSheet.SETFILTER("Current Qty.",'<>%1',0);
      QuickQuoteWorkSheet.SETFILTER("Lost Opportunity",'%1',TRUE);
      IF QuickQuoteWorkSheet.FIND('-') THEN REPEAT
        UpDateLostOpportunity(DocType::"Stock Status","LostQuoteNo.",QuickQuoteWorkSheet."Line No."*10000,QuickQuoteWorkSheet,QuickQuoteWorkSheet."Location Code");
      UNTIL QuickQuoteWorkSheet.NEXT = 0;
    END;

    PROCEDURE CalcTotal@1000000010(VAR MultiOrder@1000000000 : Boolean) OrderTotal : Decimal;
    VAR
      OLocation@1000000001 : Code[10];
    BEGIN
      CLEAR(OLocation);
      QuickQuoteWorkSheet.RESET;
      QuickQuoteWorkSheet.SETCURRENTKEY("Location Code",Description,"Item No.","Sell-To Customer No.");
      QuickQuoteWorkSheet.SETFILTER("Current Qty.",'<>%1',0);
      QuickQuoteWorkSheet.SETRANGE("Sell-To Customer No.",InCustFilter);
      IF QuickQuoteWorkSheet.FIND('-') THEN REPEAT
        IF OLocation = '' THEN OLocation := QuickQuoteWorkSheet."Location Code"
        ELSE IF QuickQuoteWorkSheet."Location Code" <> OLocation THEN MultiOrder := TRUE;
        OLocation := QuickQuoteWorkSheet."Location Code";
        OrderTotal += QuickQuoteWorkSheet."Current Qty (Base)" * QuickQuoteWorkSheet."Unit Price";
      UNTIL QuickQuoteWorkSheet.NEXT = 0;
    END;

    PROCEDURE VerifySalesLine@1000000017() HasLine : Boolean;
    BEGIN
      StockStatusQuickQuote.SETFILTER("Lost Opportunity",'%1',FALSE);
      HasLine := (StockStatusQuickQuote.COUNT <> 0);
    END;

    PROCEDURE FetchRecommFieldValues@1000000006(ItemNo@1000000001 : Code[20];CustNo@1000000000 : Code[20]);
    VAR
      LocalItem@1000000002 : Record 27;
      SalesSetup@1000000003 : Record 311;
      NoSeriesMgt@1000000004 : Codeunit 396;
      TSalesHeader@1000000005 : Record 36;
      TSalesLine@1000000006 : Record 37;
    BEGIN
      IF ItemNo = '' THEN
        EXIT;

      IF CustNo = '' THEN
        EXIT;

      IF "Shortcut Dimension 5 Code" = 'E' THEN BEGIN //TOP010D KT ABCSI SSQQ Unit Price 07142015
      //TOP230 KT ABCSI CRP 2 Fixes 05012015
      LocalItem.GET(ItemNo);
      SalesSetup.GET;
      SalesSetup.TESTFIELD("Temp Order Nos.");
      //TOP230 KT ABCSI CRP 2 Fixes 05012015
        TSalesHeader."Document Type" := TSalesHeader."Document Type"::Order;
        TSalesHeader.VALIDATE("No.",NoSeriesMgt.GetNextNo(SalesSetup."Temp Order Nos.",WORKDATE,TRUE));//TOP230 KT ABCSI CRP 2 Fixes 05012015
        TSalesHeader.INSERT(TRUE);
        TSalesHeader.SetHideValidationDialog(TRUE);
        TSalesHeader.VALIDATE("Sell-to Customer No.",CustNo);
          TSalesHeader.VALIDATE("Shortcut Dimension 5 Code",CurrDivisionCodeFilter); //TOP10B KT ABCSI - SSQQ Division Code 07142015
        IF TSalesHeader."Shortcut Dimension 5 Code" = '' THEN
          TSalesHeader.VALIDATE("Shortcut Dimension 5 Code",LocalItem."Shortcut Dimension 5 Code");
        TSalesHeader."Location Code" := "Location Code";
        TSalesHeader.VALIDATE("Order Date",TODAY);
        TSalesHeader.MODIFY(TRUE);
      //END;

        TSalesLine.RESET;
        TSalesLine.SETCURRENTKEY("Document Type","Document No.");
        TSalesLine.SETRANGE(TSalesLine."Document Type",TSalesHeader."Document Type");
        TSalesLine.SETRANGE(TSalesLine."Document No.",TSalesHeader."No.");
        IF TSalesLine.FIND('+') THEN
          SalesLineNo := TSalesLine."Line No." + 10000
        ELSE
          SalesLineNo := 10000;

        TSalesLine.INIT;
        TSalesLine."Document Type" := TSalesLine."Document Type"::Order;
        TSalesLine."Document No." := TSalesHeader."No.";
        TSalesLine."Line No." := SalesLineNo;
        TSalesLine.VALIDATE("Sell-to Customer No.",CustNo);
        TSalesLine.Type := TSalesLine.Type::Item;
        TSalesLine.VALIDATE("No.",ItemNo);
        TSalesLine.VALIDATE("Location Code","Location Code");
        TSalesLine.Quantity := 1;
        TSalesLine.INSERT(TRUE);

      "Recomm. Multiplier" := TSalesLine."Recomm. Multiplier";
      "Recomm. Unit Price" := TSalesLine."Recomm. Unit Price";
        "Unit Price" := TSalesLine."Recomm. Unit Price";

      TSalesHeader.DELETE(TRUE);
      //TOP010D KT ABCSI SSQQ Unit Price 07142015
      END ELSE BEGIN
        LastSalesPrice.RESET;
        LastSalesPrice.ASCENDING;
        LastSalesPrice.SETCURRENTKEY("Sell-to Customer No.","Item No.","Document Date");
        LastSalesPrice.SETRANGE("Sell-to Customer No.",InCustFilter);
        LastSalesPrice.SETRANGE("Item No.","Item No.");
        IF LastSalesPrice.FINDLAST THEN BEGIN
          "Last Unit Price" := LastSalesPrice."Last Unit Price";
          "Last Price UOM" := LastSalesPrice."Last Price UOM";
          "Last Price Qty." := LastSalesPrice."Last Price Qty.";
          "Last Price Date" := LastSalesPrice."Last Price Date";
          "Last Price User ID" := LastSalesPrice."Last Price User ID";  //TOP010E KT ABCSI 07282015
        END ELSE BEGIN
          "Last Unit Price" := 0;
          "Last Price UOM" := '';
          "Last Price Qty." := 0;
          "Last Price Date" := 0D;
          "Last Price User ID" := '';  //TOP010E KT ABCSI 07282015
        END;
        "Unit Price" := "Last Unit Price";
      END;
      //TOP010D KT ABCSI SSQQ Unit Price 07142015
    END;

    PROCEDURE GetItemNo@1000000208() : Code[20];
    BEGIN
      // <TPZ820>
      EXIT("Item No.");
      // </TPZ820>
    END;

    PROCEDURE FilterByItemDescription@1000000013(ItemDescriptionFilter@1000000000 : Text[50]);
    BEGIN
      // <TPZ1055>
      IF ItemDescriptionFilter <> '' THEN BEGIN
        SETFILTER(Description,'*' + ItemDescriptionFilter +'*');
        IF FIND('-') THEN;
        CurrPage.UPDATE(FALSE);
        CurrPage.ACTIVATE(TRUE);
      END ELSE BEGIN
        SETRANGE(Description);
        IF FIND('-') THEN;
        CurrPage.UPDATE(FALSE);
        CurrPage.ACTIVATE(TRUE);
      END;
      // </TPZ1055>
    END;

    PROCEDURE FilterByItemDescription2@1000000014(ItemDescription2Filter@1000000000 : Text[50]);
    BEGIN
      // <TPZ1055>
      IF ItemDescription2Filter <> '' THEN BEGIN
        SETFILTER("Description 2",'*' + ItemDescription2Filter +'*');
        IF FIND('-') THEN;
        CurrPage.UPDATE(FALSE);
        CurrPage.ACTIVATE(TRUE);
      END ELSE BEGIN
        SETRANGE("Description 2");
        IF FIND('-') THEN;
        CurrPage.UPDATE(FALSE);
        CurrPage.ACTIVATE(TRUE);
      END;
      // </TPZ1055>
    END;

    LOCAL PROCEDURE SetStyleABC@1000000019();
    VAR
      ItemABC@1000000000 : Record 27;
    BEGIN
      //<TPZ2788>
      StyleTxtABC := '';
      ItemABC.RESET;
      IF ItemABC.GET("Item No.") THEN BEGIN
        CASE ItemABC."ABC Code" OF
          'LS' : StyleTxtABC := 'favorable';
          'N' : StyleTxtABC := 'Standard';
          'A' : StyleTxtABC := 'Standard';
          'B' : StyleTxtABC := 'Standard';
          'C' : StyleTxtABC := 'Standard';
          'MD' : StyleTxtABC := 'Standard';
          'SO' : StyleTxtABC := 'Standard';
          'CL' : StyleTxtABC := 'Attention';
          'DI' : StyleTxtABC := 'Ambiguous';
          'OB' : StyleTxtABC := 'Strongaccent';
        END;
      END;
      //<TPZ2788>
    END;

    BEGIN
    {
      TOP010 KT ABCSI Stock Status Quick Quote Screen 12082014
       - Created this page and Functions related to Stock Status Quick Quote

      TOP170 KT ABCSI Sales Order Updates 04022015
        - Added code to the NewOrderQuote function

      TOP130 KT ABCSI Item List Sort and Filter by Status 04172015
        - Added a new field "Blocked Sequence"
        - Added code to filter the records in Refresh() functions
        - Made Blocked field non editable
        - Added code in the NewOrderQuote function to pass the Shortcut Dimension 5 Code to the Sales Quote or Sales Order
        - Checked for Blocked field when entering values into Current Qty. and other required fields

      TOP180 KT ABCSI Customer Pricing - Hot Sheets 04162015 Start
        - Added code to set the key for Last Unit Price fields

      TOP230 KT ABCSI CRP 2 Fixes 07152015
        - Added a lookup functionality to "Qty. on Purch. Order" field
        - Added code in UpdateLine and UpdateSingleLine functions to update the Low Unit Price, High Unit Price and Medium Unit Price
        - Added a new field "Lost Opportunity Description"
        - Added Go Home Action to move to the first record

      TOP010 KT ABCSI Stock Status Quick Quote 06042015
        - Added an error message in NewOrderQuote function to prevent creating Sales Order/Quote with Curr. Qty. = 0
        - Updated the default Sorting of the page in the SourceTableView property

      TOP010B KT ABCSI SSQQ Division Code 07092015
        - Created a new function UserPrompt for checking the curr. qty field

      TOP10C KT ABCSI - SSQQ Item Search 07082015
        - Added a function FindItemNo

      TOP010D KT ABCSI SSQQ Unit Price 07142015
        - Added code in UpdateLine function to update the Unit Price and Recomm. Unit Price

      TOP10E KT ABCSI - Additional Stock Status 07282015
        - Added a function FindVendItemNo
        - Added a new field 'Last Price User ID' and the code to populate the field

      2015-06-19 TPZ591 VCHERNYA
        Sorting Order field has been added
        Sorting has been changed to Sorting Order field
      2015-06-30 TPZ449 VCHERNYA
        Last Prices and Country/Region Last Prices page actions have been added
        Population of Division Code (Shortcut Dimension 5 Code) and Country/Region Code in Last Sales Price table has been added
      2015-07-01 TPZ835 VCHERNYA
        Comments page action has been added
      2015-07-13 TPZ820 VCHERNYA
        GetItemNo function has been added
      2015-09-25 TPZ1046 VCHERNYA
        BlankZero property set to Yes for Current Qty. column
      2015-10-06 TPZ1055 VCHERNYA
        FilterByItemDescription and FilterByItemDescription2 functions have been added

      TOP010 - Stock Status Quick Quote Screen - KT ABCSI 11052015
        - Added the function CalcQtyOnPick, added code on OnDrillDown trigger of Qty. on Pick Loc. and Qty. Avail. to Pick fields
        - Changed the properties of Qty. On Pick, Qty. Avail. to Pick fields

      2016-03-24 TPZ1519 TAKHMETO
        Page Action Ledger Entries has been added
      2016-04-01 TPZ1014 TAKHMETO
        Validation of Customer No. in Last Sales Price has been added
      2016-07-08 TPZ1545 EBAGIM
        Color Coding based on blocked item attributes
      2016-10-26 TPZ1698 EBAGIM
        Page has been added
      2019-05-03 TPZ2531 UCHOUHAN
        Removed NPI Blocked option and added code for dimension code 'Intro'
      2020-05-13 TPZ2788 UCHOUHAN
        Re-implement color coding on the basis of ABC code.
      TPZ2785 05112020 GGUPTA Remove Item blocking Topaz Customization
    }
    END.
  }
}

