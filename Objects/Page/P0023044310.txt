OBJECT Page 23044310 IWX Count Difference Summary
{
  OBJECT-PROPERTIES
  {
    Date=04/25/19;
    Time=[ 2:18:52 PM];
    Version List=IWX2.4.7684.0;
  }
  PROPERTIES
  {
    DeleteAllowed=No;
    SourceTable=Table23044301;
    PageType=Worksheet;
    SourceTableTemporary=Yes;
    ShowFilter=Yes;
    OnOpenPage=BEGIN
                 IF GETFILTER("Count No.")='' THEN
                   bSelectionVisible := TRUE
                 ELSE
                   populateSummary;

                 {{// 2009::begin
                 IF NOT bGroupByTracking THEN
                   CurrPage.spTrackingSummary.FORM.populateData(Rec);
                 }}// 2009::end
               END;

    OnAfterGetCurrRecord=BEGIN
                           IF NOT bGroupByTracking THEN
                             CurrPage.spTrackingSummary.PAGE.populateData(Rec);
                         END;

  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000032;1;Group  ;
                CaptionML=[ENU=Options;
                           ESM=Options;
                           FRC=Options;
                           ENC=Options];
                GroupType=Group }

    { 1000000031;2;Field  ;
                CaptionML=[ENU=Count No.;
                           ESM=Count No.;
                           FRC=Count No.;
                           ENC=Count No.];
                ToolTipML=ENU=Specifies the Count No. to filter by;
                SourceExpr=codSelectedCountNo;
                TableRelation="IWX Inventory Count Header";
                Visible=bSelectionVisible;
                OnValidate=BEGIN
                             selectCount;
                           END;
                            }

    { 1000000033;2;Field  ;
                CaptionML=[ENU=Group by Item Tracking;
                           ESM=Group by Item Tracking;
                           FRC=Group by Item Tracking;
                           ENC=Group by Item Tracking];
                ToolTipML=ENU=Whether to group by item tracking;
                SourceExpr=bGroupByTracking;
                OnValidate=BEGIN
                             populateSummary;
                           END;
                            }

    { 1000000001;1;Group  ;
                Name=Group;
                Editable=FALSE;
                GroupType=Repeater }

    { 1000000002;2;Field  ;
                ToolTipML=ENU=Specifies the Count No. for the current Count Sheet Line;
                SourceExpr="Count No.";
                Editable=FALSE }

    { 1000000003;2;Field  ;
                ToolTipML=ENU=The item being counted.  Extra items can be manually entered into the sheet, but most items are added through the Generate Count Sheets function.;
                SourceExpr="Item No.";
                Editable=FALSE }

    { 1000000009;2;Field  ;
                ToolTipML=ENU=Holds the Variant Code for the current item.;
                SourceExpr="Variant Code";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000004;2;Field  ;
                ToolTipML=ENU=Holds the Location Code for the current Count Sheet Line.;
                SourceExpr="Location Code";
                Editable=FALSE }

    { 1000000007;2;Field  ;
                ToolTipML=ENU=The bin code with which the item is associated.  Can be ignored where bins are not used.;
                SourceExpr="Bin Code";
                Editable=FALSE }

    { 1000000006;2;Field  ;
                ToolTipML=ENU=The shelf number of the item.;
                SourceExpr="Shelf No.";
                Visible=FALSE }

    { 1000000027;2;Field  ;
                ToolTipML=ENU=The actual count of the physical inventory in the unit of measure specified on the line.;
                SourceExpr=Quantity }

    { 1000000026;2;Field  ;
                ToolTipML=ENU=The unit of measure for the Quantity field. This can be changed based on the units the items were counted in.;
                SourceExpr="Unit of Measure Code";
                Editable=FALSE }

    { 1000000005;2;Field  ;
                ToolTipML=ENU=The actual count of the physical inventory in the item base unit of measure.  This value is calculated based on the Quantity and Unit of Measure fields.;
                SourceExpr="Quantity (Base)";
                Visible=FALSE }

    { 1000000008;2;Field  ;
                ToolTipML=ENU=Can be used to record the serial number of the item being counted.;
                SourceExpr="Serial No." }

    { 1000000021;2;Field  ;
                ToolTipML=ENU=Can be used to record the lot number of the item being counted.;
                SourceExpr="Lot No." }

    { 1000000022;2;Field  ;
                ToolTipML=ENU=You can enter the expiration date for the Lot No. here.;
                SourceExpr="Expiration Date" }

    { 1000000010;2;Field  ;
                ToolTipML=ENU=Shows the quantity of the item based on variant and location that has been consumed on the production order defined in the Prod Order No field.;
                SourceExpr="WIP Qty. (Base)";
                Visible=FALSE }

    { 1000000011;2;Field  ;
                ToolTipML=ENU=The production order number upon which this item appears or has been consumed.;
                SourceExpr="Prod. Order No.";
                Visible=FALSE }

    { 1000000012;2;Field  ;
                ToolTipML=ENU=This field is true (checkmark) if the item has been consumed on the production order specified for the line.;
                SourceExpr="Is WIP";
                Visible=FALSE }

    { 1000000024;2;Field  ;
                ToolTipML=ENU=The expected quantity for this count line.  The way the expected quantity is calculated depends on the item and location configuration.;
                SourceExpr="Expected Quantity" }

    { 1000000023;2;Field  ;
                ToolTipML=ENU=The expected quantity for this count line.  The way the expected quantity is calculated depends on the item and location configuration.;
                SourceExpr="Expected Quantity (Base)";
                Visible=FALSE }

    { 1000000013;2;Field  ;
                ToolTipML=ENU=Shows the difference between expected quantity and counted quantity.;
                SourceExpr="Difference Qty. (Base)";
                Visible=FALSE }

    { 1000000014;2;Field  ;
                ToolTipML=ENU=Shows the difference between expected quantity and counted quantity.;
                SourceExpr="Difference Qty. (ABS) (Base)";
                Visible=FALSE }

    { 1000000015;2;Field  ;
                ToolTipML=ENU=The difference quantity times the unit cost.;
                SourceExpr="Difference Amount" }

    { 1000000016;2;Field  ;
                ToolTipML=ENU=The absolute difference quantity times the unit cost.;
                SourceExpr="Difference Amount (ABS)";
                Visible=FALSE }

    { 1000000017;2;Field  ;
                ToolTipML=ENU=Shows the difference between expected quantity and counted quantity for this specific line.;
                SourceExpr="Difference Qty." }

    { 1000000018;2;Field  ;
                ToolTipML=ENU=Shows the absolute difference between expected quantity and counted quantity for this specific line.;
                SourceExpr="Difference Qty. (ABS)";
                Visible=FALSE }

    { 1000000019;2;Field  ;
                ToolTipML=ENU=Shows the percentage difference between the counted quantity and the expected quantity.;
                SourceExpr="Difference Qty. Pct. (ABS)" }

    { 1000000020;2;Field  ;
                ToolTipML=ENU=The bin content quantity for the current item/variant/bin combination.;
                SourceExpr="Bin Quantity (Base)";
                Visible=FALSE }

    { 1000000025;2;Field  ;
                ToolTipML=ENU=If Warehouse Item Tracking is used, this displays the expected quantity of the item/bin/serial #/lot # combination.;
                SourceExpr="Tracked Bin Quantity (Base)";
                Visible=FALSE }

    { 1000000028;2;Field  ;
                ToolTipML=ENU=The conversion factor between the item base unit of measure and the counted unit of measure.;
                SourceExpr="Qty. per Unit of Measure";
                Visible=FALSE }

    { 1000000029;2;Field  ;
                ToolTipML=ENU=The item description field.;
                SourceExpr=Description }

    { 1000000030;2;Field  ;
                ToolTipML=ENU=The item description 2 field.;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 1000000034;1;Part   ;
                Name=spTrackingSummary;
                PagePartID=Page23044311;
                Visible=bShowTrackingSummary;
                Editable=FALSE;
                PartType=Page }

  }
  CODE
  {
    VAR
      cuInvMgmt@1000000002 : Codeunit 23044300;
      bSelectionVisible@1000000000 : Boolean;
      codSelectedCountNo@1000000001 : Code[10];
      bGroupByTracking@1000000003 : Boolean;
      bShowTrackingSummary@1000000004 : Boolean;

    LOCAL PROCEDURE populateSummary@1000000005();
    VAR
      lrecCountLine@1000000000 : Record 23044301;
    BEGIN
      // Build summary data
      COPYFILTER("Count No.", lrecCountLine."Count No.");
      lrecCountLine.FINDSET;

      Rec.RESET;
      Rec.DELETEALL;

      cuInvMgmt.getInventoryDifference(lrecCountLine, Rec,
       FALSE, // no WIP
       bGroupByTracking, //grouping by lot
       FALSE // Group by UOM
      );

      COPYFILTERS(lrecCountLine);

      bShowTrackingSummary := NOT bGroupByTracking;

      IF FINDFIRST THEN;
    END;

    PROCEDURE selectCount@1000000010();
    VAR
      lrecCountHdr@1000000000 : Record 23044304;
    BEGIN
      // Updates view based on option selection

      lrecCountHdr.GET(codSelectedCountNo);
      IF (lrecCountHdr."Inventory As of Date"<>0D) THEN
        SETRANGE("Date Filter", 0D, lrecCountHdr."Inventory As of Date");

      SETRANGE("Count No.", codSelectedCountNo);

      populateSummary;
    END;

    BEGIN
    END.
  }
}

