OBJECT Page 14099305 E.D.I. XML Node Values FactBox
{
  OBJECT-PROPERTIES
  {
    Date=07/13/20;
    Time=12:00:00 PM;
    Version List=SE0.62;
  }
  PROPERTIES
  {
    CaptionML=ENU=XML Node Values;
    SourceTable=Table14002355;
    PageType=ListPart;
    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1240030035;1 ;Action    ;
                      ShortCutKey=Return;
                      CaptionML=ENU=Open;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowConditionals;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1240030000;1;Group  ;
                GroupType=Repeater }

    { 1240030039;2;Field  ;
                ToolTipML=ENU=Number used to identify the XML Node Value within a Node.;
                SourceExpr=Element;
                Visible=FALSE }

    { 1240030015;2;Field  ;
                CaptionML=ENU=<Node Value  Mapping Error>;
                ToolTipML=ENU=Indicates a mapping error at the element level. An error message will be displayed if importing or exporting documents with element mapping errors.;
                SourceExpr="Element Mapping Error";
                Visible=FALSE }

    { 1240030017;2;Field  ;
                ToolTipML=ENU=Indicates a mapping error at the conditional level. An error message will be displayed if importing documents with conditional mapping errors.;
                SourceExpr="Conditional Mapping Error";
                Visible=FALSE }

    { 1240030041;2;Field  ;
                ToolTipML=ENU=For inbound mapping, the flag will be displayed if Conditional logic has been entered for the Node Value.;
                SourceExpr=Conditional;
                Visible=FALSE }

    { 1240030043;2;Field  ;
                ToolTipML=ENU=Options are None, NAV, EDI IN, EDI OUT and SDQ. When the Origin - NAV, then used with the "NAV Table Name" and "Field Name" fields. For inbound, it is where data will be placed in NAV. For outbound, it is where data will be pulled from in NAV.;
                SourceExpr=Origin }

    { 1240030045;2;Field  ;
                ToolTipML=ENU=For inbound or outbound documents, where the "Origin" - NAV, specify the "NAV Table Name." Used with the "Field Name" field.;
                SourceExpr="NAV Table Name" }

    { 1240030047;2;Field  ;
                ToolTipML=ENU=For inbound or outbound documents, where the "Origin" - NAV and the "NAV Table Name" is populate, specify the NAV "Field Name." Where the "Origin" - blank, it's a free-form field.;
                SourceExpr="Field Name" }

    { 1240030057;2;Field  ;
                ToolTipML=ENU=For outbound documents, specify a fixed value to export when the file must send a specific value. For inbound documents, it may be used as a mapping informational field.;
                SourceExpr="Fixed Value";
                Visible=FALSE }

    { 1240030059;2;Field  ;
                ToolTipML=ENU=For inbound documents, enable on the last Element that writes to the Sales/Purchase Lines.;
                SourceExpr=Trigger;
                Visible=FALSE }

    { 1240030049;2;Field  ;
                ToolTipML=ENU=For inbound and outbound documents, specify the maximum Length of the XML Node Value.;
                SourceExpr=Length;
                Visible=FALSE }

    { 1240030051;2;Field  ;
                ToolTipML=ENU=For outbound documents, if a value is entered and the minimum is not met, the EDI Send Document will be flagged with a "Data Error" and prevent exporting the file.;
                SourceExpr="Minimum Length";
                Visible=FALSE }

    { 1240030053;2;Field  ;
                ToolTipML=ENU=For inbound and outbound documents, specify the Data Type used to interpret the EDI data.;
                SourceExpr="Data Type";
                Visible=FALSE }

    { 1240030055;2;Field  ;
                ToolTipML=ENU=For inbound documents, specify the number of decimals expected for the XML Node Value. For outbound documents, specify the the number of decimals used to format the output decimal field.;
                SourceExpr=Decimals;
                Visible=FALSE }

    { 1240030021;2;Field  ;
                CaptionML=ENU=<Bypass Element Node if Not Blank>;
                ToolTipML=ENU=For outbound documents, enable to bypass the entire XML Node Value if the flagged Element is NOT zero or blank.;
                SourceExpr="Bypass Segment if Not Blank";
                Visible=FALSE }

    { 1240030013;2;Field  ;
                CaptionML=ENU=<Bypass Element Node if Blank>;
                ToolTipML=ENU=For outbound documents, enable to bypass the entire Element if the flagged XML Node Value is zero or blank.;
                SourceExpr="Bypass Segment if Blank";
                Visible=FALSE }

    { 1240030023;2;Field  ;
                ToolTipML=ENU=For outbound documents, enable to bypass trailing XML Node Values at the end of the Node if the value is zero or blank.;
                SourceExpr="Bypass Blank Trailing Element";
                Visible=FALSE }

    { 1240030001;2;Field  ;
                ToolTipML=ENU=Typically used for Sterling file formats, select the option to justify the imported or exported data. Options are Left, Right or Right Zero Filled.;
                SourceExpr=Justify;
                Visible=FALSE }

    { 1240030007;2;Field  ;
                ToolTipML=ENU=For inbound generic documents (I_SLSGEN), specify the column number the EDI received data should print in for the Formatted Receive Document report. It is used to override default column settings.;
                SourceExpr=Column;
                Visible=FALSE }

    { 1240030009;2;Field  ;
                ToolTipML=ENU=For inbound generic documents (I_SLSGEN), specify the maximum columns per line to print on the Formatted Receive Document report. It is used to override default column settings on the report.;
                SourceExpr="Columns Per Line";
                Visible=FALSE }

    { 1240030011;2;Field  ;
                ToolTipML=ENU=For inbound documents, enable when the XML Node Value should print on a new line with a carriage return line feed. Used to override the default new line settings on the Formatted Receive Document Report.;
                SourceExpr="New Line";
                Visible=FALSE }

    { 1240030019;2;Field  ;
                ToolTipML=ENU=For inbound and outbound EDIFACT file types, enable when a component seperator is needed as specified on the EDI Template's "Component Delimeter" or "Dec. Component Delimeter.";
                SourceExpr="Use Component Delimiter";
                Visible=FALSE }

    { 1240030025;2;Field  ;
                ToolTipML=ENU=For inbound and outbound documents, number of characters to copy when it is necessary to parse data.  Used with the "Copy String Length" field.;
                SourceExpr="Copy String Position";
                Visible=FALSE }

    { 1240030027;2;Field  ;
                ToolTipML=ENU=For inbound and outbound documents, where to begin the copy-from when it is necessary to parse data.  Used with the "Copy String Position" field.;
                SourceExpr="Copy String Length";
                Visible=FALSE }

    { 1240030029;2;Field  ;
                ToolTipML=ENU=For inbound documents, enable when multiple XML Node Values are mapped to the same NAV table and field, this field will merge the data together. May be used with the "Insert Into Field Contents" and "Insert Position" fields.;
                SourceExpr="Append to Field Contents";
                Visible=FALSE }

    { 1240030031;2;Field  ;
                ToolTipML=ENU=For inbound documents, enable when merged received EDI data from the "Append to Field Contents" field, needs to be inserted at a certain position within the data. Used with "Insert Position" field.;
                SourceExpr="Insert into Field Contents";
                Visible=FALSE }

    { 1240030033;2;Field  ;
                ToolTipML=ENU=For inbound documents, if "Append to Field Contents" and "Insert Into Field Contents" are enabled, set the numeric value of where inserted data should begin.;
                SourceExpr="Insert Position";
                Visible=FALSE }

    { 1240030003;2;Field  ;
                ToolTipML=ENU=Specifies the Trade Partner "No." from the Trade Partner page.;
                SourceExpr="Trade Partner No.";
                Visible=FALSE }

    { 1240030005;2;Field  ;
                ToolTipML=ENU=Represents the NAV functionality associated with the EDI files being processed (ex. I_SLSORD creates a NAV Sales Order and E_SLSINV exports a NAV Posted Sales Invoice.);
                SourceExpr="Navision Document";
                Visible=FALSE }

    { 1240030036;2;Field  ;
                ToolTipML=ENU=Specifies the EDI document number identifying the transaction.;
                SourceExpr="EDI Document No.";
                Visible=FALSE }

    { 1240030038;2;Field  ;
                ToolTipML=ENU=Specifies the version or release of the industry standard being used.;
                SourceExpr=Version;
                Visible=FALSE }

    { 1240030062;2;Field  ;
                ToolTipML=ENU=Specifies if the XML file is an Import or Export depending on the "NAV Document.";
                SourceExpr=Type;
                Visible=FALSE }

    { 1240030064;2;Field  ;
                ToolTipML=ENU=For XML files, specifies the XML Node as expressed by the DOM (Document Object Model).;
                SourceExpr=Segment;
                Visible=FALSE }

    { 1240030066;2;Field  ;
                ToolTipML=ENU=For inbound files, lines will be processed in the order in which they are received.  For outbound files, used to identify the order each XML Node is to be processed.;
                SourceExpr="Processing Sequence";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      EDIConditional@1240030000 : Record 14002363;

    PROCEDURE ShowConditionals@1240030000();
    BEGIN
      EDIConditional.RESET;
      EDIConditional.SETRANGE("Trade Partner No.","Trade Partner No.");
      EDIConditional.SETRANGE("Navision Document","Navision Document");
      EDIConditional.SETRANGE("EDI Document No.","EDI Document No.");
      EDIConditional.SETRANGE(Version,Version);
      EDIConditional.SETRANGE(Type,Type);
      EDIConditional.SETRANGE("Processing Sequence","Processing Sequence");
      EDIConditional.SETRANGE(Segment,Segment);
      EDIConditional.SETRANGE(Element,Element);
      IF EDIConditional.FIND('-') THEN
        PAGE.RUN(PAGE::"E.D.I. XML Conditionals",EDIConditional);
    END;

    BEGIN
    END.
  }
}

