OBJECT Page 50061 Create LTL Label
{
  OBJECT-PROPERTIES
  {
    Date=09/24/21;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=TPZ000.00.00,003;
  }
  PROPERTIES
  {
    PageType=Card;
    OnOpenPage=BEGIN
                 LabelName := 'LTLGEN';
                 Copies := 1;
                 //DocumentNo := '';
               END;

    ActionList=ACTIONS
    {
      { 1000000012;  ;ActionContainer;
                      CaptionML=ENU=ActionContainer;
                      ActionContainerType=NewDocumentItems }
      { 1000000013;1 ;Action    ;
                      Name=Print Label;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 LabelMgt@1000000000 : Codeunit 14000841;
                               BEGIN
                                 IF DocumentNo = '' THEN
                                   ERROR('Please enter valid Document No. first');

                                 GetPackingStation;
                                 IF SalesOrderFound THEN BEGIN
                                   IF PackingStation."Label Printer Type" = PackingStation."Label Printer Type"::"Eltron Orion" THEN
                                     LabelMgt.PrintLTLSOLabel(SalesHeader,'LTLGEN_EL',Copies)
                                   ELSE
                                     LabelMgt.PrintLTLSOLabel(SalesHeader,'LTLGEN',Copies);
                                 END;

                                 IF TransferOrderFound THEN BEGIN
                                   IF PackingStation."Label Printer Type" = PackingStation."Label Printer Type"::"Eltron Orion" THEN
                                     LabelMgt.PrintLTLTOLabel(TransferHeader,'LTL_TRA_EL',Copies)
                                   ELSE
                                     LabelMgt.PrintLTLTOLabel(TransferHeader,'LTL_TRANS',Copies);
                                 END;
                                 //TPZ3171-->
                                 IF PostedSalesShipFound THEN BEGIN
                                   IF PackingStation."Label Printer Type" = PackingStation."Label Printer Type"::"Eltron Orion" THEN
                                     LabelMgt.PrintLTLPostedSOLabel(SalesShipHeader,'LTL_POST_E',Copies)
                                   ELSE
                                     LabelMgt.PrintLTLPostedSOLabel(SalesShipHeader,'LTL_POSTED',Copies);
                                 END;
                                 //<--TPZ3171
                                 //<TPZ3198>
                                 IF PostedTOFound THEN BEGIN
                                   IF PackingStation."Label Printer Type" = PackingStation."Label Printer Type"::"Eltron Orion" THEN
                                     LabelMgt.PrintLTLPostedTOLabel(TransShipHdr,'LTL_P_T_EL',Copies)
                                   ELSE
                                     LabelMgt.PrintLTLPostedTOLabel(TransShipHdr,'LTL_P_TRAN',Copies);
                                 END;
                                 //</TPZ3198>
                               END;
                                }
      { 1000000010;1 ;Action    ;
                      Name=Test Label;
                      RunObject=Page 50080;
                      Visible=False }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                Name=General;
                GroupType=Group }

    { 1000000002;2;Field  ;
                Name=DocumentNo;
                CaptionML=ENU=Document No.;
                SourceExpr=DocumentNo;
                Importance=Promoted;
                OnValidate=BEGIN
                             GetDocumentDetail;
                           END;
                            }

    { 1000000011;2;Field  ;
                CaptionML=ENU=Number of Copies;
                SourceExpr=Copies;
                Importance=Promoted }

    { 1000000003;2;Field  ;
                Name=<ShipToNo>;
                CaptionML=ENU=Ship-to No.;
                SourceExpr=ShipToNo;
                Editable=FALSE }

    { 1000000004;2;Field  ;
                Name=<ShipToName>;
                CaptionML=ENU=Ship-to Name;
                SourceExpr=ShipToName;
                Editable=FALSE }

    { 1000000005;2;Field  ;
                Name=<ShipToAddress>;
                CaptionML=ENU=Ship-to Address;
                SourceExpr=ShipToAddress;
                Editable=FALSE }

    { 1000000006;2;Field  ;
                Name=<ShipToAddress2>;
                CaptionML=ENU=Ship-to Address 2;
                SourceExpr=ShipToAddress2;
                Editable=FALSE }

    { 1000000007;2;Field  ;
                Name=<ShipToCity>;
                CaptionML=ENU=Ship-to City;
                SourceExpr=ShipToCity;
                Editable=FALSE }

    { 1000000008;2;Field  ;
                Name=<ShipToCounty>;
                CaptionML=ENU=Ship-to County;
                SourceExpr=ShipToCounty;
                Editable=FALSE }

    { 1000000009;2;Field  ;
                Name=<ShipToPostCode>;
                CaptionML=ENU=Ship-to Post Code;
                SourceExpr=ShipToPostCode;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      LabelName@1000000001 : Code[10];
      Copies@1000000000 : Integer;
      SalesHeader@1000000002 : Record 36;
      TransferHeader@1000000013 : Record 5740;
      DocumentNo@1000000003 : Code[20];
      TransferOrderFound@1000000005 : Boolean;
      SalesOrderFound@1000000006 : Boolean;
      PostedSalesShipFound@1000000016 : Boolean;
      PostedTOFound@1170000000 : Boolean;
      ShipToNo@1000000004 : Code[10];
      ShipToName@1000000007 : Text[50];
      ShipToAddress@1000000008 : Text[50];
      ShipToAddress2@1000000009 : Text[50];
      ShipToCity@1000000010 : Text[50];
      ShipToCounty@1000000011 : Text[50];
      ShipToPostCode@1000000012 : Text[50];
      PackingStation@1000000014 : Record 14000709;
      SalesShipHeader@1000000015 : Record 110;
      TransShipHdr@1170000001 : Record 5744;

    PROCEDURE SetDocumentNo@1000000000(DocNo2@1000000000 : Code[20]);
    BEGIN
      DocumentNo := DocNo2;
      GetDocumentDetail;
    END;

    PROCEDURE GetDocumentDetail@1000000003();
    BEGIN
      IF DocumentNo = '' THEN
        ERROR('Please enter Document No. first.');

      TransferOrderFound := FALSE;
      SalesOrderFound := FALSE;
      PostedSalesShipFound := FALSE; //TPZ3171
      PostedTOFound := FALSE; //TPZ3198
      CLEAR(SalesHeader);
      CLEAR(TransferHeader);
      ShipToNo := '';
      ShipToName := '';
      ShipToAddress := '';
      ShipToAddress2 := '';
      ShipToCity := '';
      ShipToCounty := '';
      ShipToPostCode := '';

      //<TPZ3214>
      SalesHeader.RESET;
      SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::Order);
      SalesHeader.SETFILTER("No.",DocumentNo);
      //IF SalesHeader.GET(SalesHeader."Document Type"::Order, DocumentNo) THEN BEGIN
      IF SalesHeader.FINDFIRST THEN BEGIN
      //</TPZ3214>
        SalesOrderFound := TRUE;
        ShipToNo := SalesHeader."Sell-to Customer No.";
        ShipToName := SalesHeader."Ship-to Name";
        ShipToAddress := SalesHeader."Ship-to Address";
        ShipToAddress2 := SalesHeader."Ship-to Address 2";
        ShipToCity := SalesHeader."Ship-to City";
        ShipToCounty := SalesHeader."Ship-to County";
        ShipToPostCode := SalesHeader."Ship-to Post Code";
      END;

      IF SalesOrderFound = FALSE THEN
        IF TransferHeader.GET(DocumentNo) THEN BEGIN
          ShipToNo := TransferHeader."Transfer-to Code";
          ShipToName := TransferHeader."Transfer-to Name";
          ShipToAddress := TransferHeader."Transfer-to Address";
          ShipToAddress2 := TransferHeader."Transfer-to Address 2";
          ShipToCity := TransferHeader."Transfer-to City";
          ShipToCounty := TransferHeader."Transfer-to County";
          ShipToPostCode := TransferHeader."Transfer-to Post Code";
          TransferOrderFound := TRUE;
        END;
      //TPZ3171-->
      IF (SalesOrderFound = FALSE) AND (TransferOrderFound = FALSE) THEN BEGIN
        SalesShipHeader.RESET;
        SalesShipHeader.SETRANGE("Order No.",DocumentNo);
        IF SalesShipHeader.FINDLAST THEN BEGIN
          ShipToNo := SalesShipHeader."Sell-to Customer No.";
          ShipToName := SalesShipHeader."Ship-to Name";
          ShipToAddress := SalesShipHeader."Ship-to Address";
          ShipToAddress2 := SalesShipHeader."Ship-to Address 2";
          ShipToCity := SalesShipHeader."Ship-to City";
          ShipToCounty := SalesShipHeader."Ship-to County";
          ShipToPostCode := SalesShipHeader."Ship-to Post Code";
          PostedSalesShipFound := TRUE;
        END;
      END;
      //<--TPZ3171
      //<TPZ3198>
      IF (SalesOrderFound = FALSE) AND (TransferOrderFound = FALSE) AND (PostedSalesShipFound = FALSE) THEN BEGIN
        TransShipHdr.RESET;
        TransShipHdr.SETRANGE("Transfer Order No.",DocumentNo);
        IF TransShipHdr.FINDLAST THEN BEGIN
          ShipToNo := TransShipHdr."Transfer-to Code";
          ShipToName := TransShipHdr."Transfer-to Name";
          ShipToAddress := TransShipHdr."Transfer-to Address";
          ShipToAddress2 := TransShipHdr."Transfer-to Address 2";
          ShipToCity := TransShipHdr."Transfer-to City";
          ShipToCounty := TransShipHdr."Transfer-to County";
          ShipToPostCode := TransShipHdr."Transfer-to Post Code";
          PostedTOFound := TRUE;
        END;
      END;
      //</TPZ3198>
      IF (TransferOrderFound = FALSE) AND (SalesOrderFound = FALSE) AND (PostedSalesShipFound = FALSE) AND (PostedTOFound = FALSE) THEN
        ERROR('Cannot find any Sales/Transfer order with No. %1.', DocumentNo);
    END;

    PROCEDURE GetPackingStation@1000000001();
    VAR
      UserSetup@1000000000 : Record 91;
    BEGIN
      IF PackingStation.Code <> '' THEN
        EXIT;

      UserSetup.GET(USERID);
      UserSetup.TESTFIELD("Packing Station");
      PackingStation.GET(UserSetup."Packing Station");
    END;

    BEGIN
    {
      001 TPZ3171 GKG 05212021 Printing address labels after SO is posted
      002 TPZ3198 GKG 06152021 Printing address labels after TO is posted
      003 TPZ3214 GKG 09242021 printing address labels for multiple SO
    }
    END.
  }
}

