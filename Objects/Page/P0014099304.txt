OBJECT Page 14099304 E.D.I. XML Node FactBox
{
  OBJECT-PROPERTIES
  {
    Date=12/28/17;
    Time=12:00:00 PM;
    Version List=SE0.60.18;
  }
  PROPERTIES
  {
    CaptionML=ENU=XML Element Nodes;
    SourceTable=Table14002354;
    PageType=ListPart;
    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1240030013;1 ;Action    ;
                      ShortCutKey=Return;
                      CaptionML=ENU=Open;
                      RunPageOnRec=No;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowElements;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1240030000;1;Group  ;
                GroupType=Repeater }

    { 1240030001;2;Field  ;
                ToolTipML=ENU=For inbound files, lines will be processed in the order in which they are received.  For outbound files, used to identify the order each XML Node is to be processed.;
                SourceExpr="Processing Sequence" }

    { 1240030003;2;Field  ;
                ToolTipML=ENU=Options are 'Element' & 'Command.' Commands are used to define specific data groups for processing like types of data lines. Valid Commands which define the inbound order line loop are LINE BEGIN & LINE END. ASN hierarchial levels are those with HL-.;
                SourceExpr="Segment Type" }

    { 1240030005;2;Field  ;
                ToolTipML=ENU=For XML files, specifies the XML Node as expressed by the DOM (Document Object Model).;
                SourceExpr=Segment }

    { 1240020000;2;Field  ;
                ToolTipML=ENU=Specifies the name of a Node, which is the same as the last path in the "Node List Path.";
                SourceExpr="Node Name" }

    { 1240030007;2;Field  ;
                ToolTipML=ENU=Indicates a mapping error at the element level. An error message will be displayed if importing or exporting documents with element mapping errors.;
                SourceExpr="Element Mapping Error";
                Visible=FALSE }

    { 1240030009;2;Field  ;
                ToolTipML=ENU=Indicates a mapping error at the conditional level. An error message will be displayed if importing documents with conditional mapping errors.;
                SourceExpr="Conditional Mapping Error";
                Visible=FALSE }

    { 1240030011;2;Field  ;
                ToolTipML=ENU=Specifies the name of a Node, which is the same as the last path in the "Node List Path.";
                SourceExpr="Segment Name" }

  }
  CODE
  {
    VAR
      EDIElement@1240030000 : Record 14002355;

    PROCEDURE ShowElements@1240030000();
    BEGIN
      EDIElement.RESET;
      EDIElement.SETRANGE("Trade Partner No.","Trade Partner No.");
      EDIElement.SETRANGE("Navision Document","Navision Document");
      EDIElement.SETRANGE("EDI Document No.","EDI Document No.");
      EDIElement.SETRANGE(Version,Version);
      EDIElement.SETRANGE(Type,Type);
      EDIElement.SETRANGE(Segment,Segment);
      IF EDIElement.FIND('-') THEN
        PAGE.RUN(PAGE::"E.D.I. Elements",EDIElement);
    END;

    BEGIN
    END.
  }
}

