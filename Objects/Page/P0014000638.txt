OBJECT Page 14000638 Receive Line Scan. Subform 2
{
  OBJECT-PROPERTIES
  {
    Date=02/25/19;
    Time=12:00:00 PM;
    Version List=SE0.61;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Receive Line Scanning Subform;
    SourceTable=Table14000602;
    PageType=ListPart;
    OnFindRecord=BEGIN
                   ReceiveLineTmp := Rec;
                   IF NOT ReceiveLineTmp.FIND(Which) THEN
                     EXIT(FALSE);
                   Rec := ReceiveLineTmp;
                   EXIT(TRUE);
                 END;

    OnNextRecord=BEGIN
                   ReceiveLineTmp := Rec;
                   CurrentSteps := ReceiveLineTmp.NEXT(Steps);
                   IF CurrentSteps <> 0 THEN
                     Rec := ReceiveLineTmp;
                   EXIT(CurrentSteps);
                 END;

    OnAfterGetRecord=BEGIN
                       TypeOnFormat;
                       NoOnFormat;
                       VariantCodeOnFormat;
                       SerialNoOnFormat;
                       LotNoOnFormat;
                       DescriptionOnFormat;
                       QuantityOnFormat;
                       UnitofMeasureCodeOnFormat;
                     END;

    OnInsertRecord=BEGIN
                     EXIT(FALSE);
                   END;

    OnModifyRecord=BEGIN
                     EXIT(FALSE);
                   END;

    OnDeleteRecord=BEGIN
                     EXIT(FALSE);
                   END;

    OnAfterGetCurrRecord=BEGIN
                           xRec := Rec;
                         END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr=Type }

    { 4   ;2   ;Field     ;
                SourceExpr="No." }

    { 6   ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 1240030000;2;Field  ;
                ToolTipML=ENU=System defaults to TRUE for the Item and Quantity combination of the created over receive line, when E-Receive is setup to allow for over receives.;
                SourceExpr="Over Receive";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Selected Source ID";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                SourceExpr="Serial No.";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr="Lot No.";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                SourceExpr="Warranty Date";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr="Expiration Date";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                SourceExpr=Description }

    { 14  ;2   ;Field     ;
                SourceExpr=Quantity }

    { 16  ;2   ;Field     ;
                SourceExpr="Unit of Measure Code" }

  }
  CODE
  {
    VAR
      ReceiveLineTmp@1240030000 : TEMPORARY Record 14000602;
      CurrentSteps@1240030002 : Integer;
      TypeEmphasize@19012868 : Boolean INDATASET;
      "No.Emphasize"@19074284 : Boolean INDATASET;
      "Variant CodeEmphasize"@19033058 : Boolean INDATASET;
      "Serial No.Emphasize"@19051405 : Boolean INDATASET;
      "Lot No.Emphasize"@19060788 : Boolean INDATASET;
      DescriptionEmphasize@19010547 : Boolean INDATASET;
      QuantityEmphasize@19029508 : Boolean INDATASET;
      "Unit of Measure CodeEmphasize"@19043477 : Boolean INDATASET;

    PROCEDURE LoadReceiveLines@1(VAR ReceiveLine@1240030000 : Record 14000602;ReceiveControl@1240030001 : Record 14000611);
    BEGIN
      ReceiveLineTmp.RESET;
      ReceiveLineTmp.DELETEALL;
      IF ReceiveLine.FIND('-') THEN
        REPEAT
          ReceiveLineTmp := ReceiveLine;
          ReceiveLineTmp.INSERT;
        UNTIL ReceiveLine.NEXT = 0;

      ReceiveLineTmp.RESET;
      ReceiveLineTmp.SETRANGE(Type,ReceiveControl."Input Type");
      ReceiveLineTmp.SETRANGE("No.",ReceiveControl."Input No.");
      IF ReceiveControl."Input Variant Code" <> '' THEN
        ReceiveLineTmp.SETRANGE("Variant Code",ReceiveControl."Input Variant Code");
      IF ReceiveControl."Input Serial Number" <> '' THEN
        ReceiveLineTmp.SETRANGE("Serial No.",ReceiveControl."Input Serial Number");
      IF ReceiveControl."Input Lot Number" <> '' THEN
        ReceiveLineTmp.SETRANGE("Lot No.",ReceiveControl."Input Lot Number");
      IF NOT ReceiveLineTmp.FIND('-') THEN BEGIN
        ReceiveLineTmp.RESET;
        IF NOT ReceiveLineTmp.FIND('+') THEN
          ;
      END;
      ReceiveLineTmp.RESET;

      Rec := ReceiveLineTmp;

      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE TypeOnFormat@19025827();
    BEGIN
      TypeEmphasize := "Action Required";
    END;

    LOCAL PROCEDURE NoOnFormat@19031395();
    BEGIN
      "No.Emphasize" := "Action Required";
    END;

    LOCAL PROCEDURE VariantCodeOnFormat@19013227();
    BEGIN
      "Variant CodeEmphasize" := "Action Required";
    END;

    LOCAL PROCEDURE SerialNoOnFormat@19077228();
    BEGIN
      "Serial No.Emphasize" := "Action Required";
    END;

    LOCAL PROCEDURE LotNoOnFormat@19010784();
    BEGIN
      "Lot No.Emphasize" := "Action Required";
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      DescriptionEmphasize := "Action Required";
    END;

    LOCAL PROCEDURE QuantityOnFormat@19071269();
    BEGIN
      QuantityEmphasize := "Action Required";
    END;

    LOCAL PROCEDURE UnitofMeasureCodeOnFormat@19026690();
    BEGIN
      "Unit of Measure CodeEmphasize" := "Action Required";
    END;

    BEGIN
    END.
  }
}

