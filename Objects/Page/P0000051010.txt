OBJECT Page 51010 Sales Quote Subform Buffer
{
  OBJECT-PROPERTIES
  {
    Date=09/15/20;
    Time=[ 3:18:08 PM];
    Modified=Yes;
    Version List=TPZ000.00.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Pricing Simulation Subform;
               ESM=L°neas;
               FRC=Lignes;
               ENC=Lines];
    MultipleNewLines=Yes;
    LinksAllowed=No;
    SourceTable=Table50006;
    DelayedInsert=Yes;
    SourceTableView=WHERE(Document Type=FILTER(Quote));
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             SalesSetup.GET;
             Currency.InitRoundingPrecision;
           END;

    OnOpenPage=VAR
                 TaxGroup@1020000 : Record 321;
               BEGIN
                 //{=======} MODIFIED
                 // <TPZ159>

                 ActualUnitPriceEditable := TRUE;
                 ChangeLogEntriesVisible := TRUE;
                 IF UserMgt.GetMfrRepSalesFilter <> '' THEN BEGIN
                   ActualUnitPriceEditable := FALSE;
                   ChangeLogEntriesVisible := FALSE;
                 END;
                 // </TPZ159>
                 //{=======} TARGET
                 TaxGroupCodeVisible := NOT TaxGroup.ISEMPTY;
                 {<<<<<<<}
               END;

    OnAfterGetRecord=VAR
                       tmpitem@1000000000 : Record 27;
                     BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);


                       //<TPZ1545>//EB
                        IF ("Document Type" IN ["Document Type"::Order,"Document Type"::Quote]) AND (Type=Type::Item) THEN BEGIN
                         //<TPZ2788>
                          {IF tmpitem.GET("No.") THEN

                        StyleTxtBlocked:= 'Standard';
                           CASE tmpitem.Blocked OF
                             TRUE:
                               StyleTxtBlocked :='StandardAccent';
                             tmpitem.Blocked::Sale:
                               StyleTxtBlocked :='Attention';
                             tmpitem.Blocked::Purchase:
                               StyleTxtBlocked :='Ambiguous';
                             //<TPZ2531>
                             {
                             tmpitem.Blocked::"4":
                               StyleTxtBlocked :='favorable';
                               }
                               //</TPZ2531>
                             ELSE
                              StyleTxtBlocked:= 'Standard';
                           END;
                           //<TPZ2531>}
                           SetStyleABC; //</TPZ2788>
                           DefaultDimension.RESET;
                           IF DefaultDimension.GET(27,"No.",'PRODLIFECYCLE')THEN BEGIN
                           IF DefaultDimension."Dimension Value Code" = 'INTRO' THEN
                             StyleTxtABC := 'favorable'
                          // ELSE
                            // StyleTxtBlocked:= 'Standard';//<TPZ2788>
                           END;
                         //</TPZ2531>
                         END;
                          //EB </TPZ1545>

                       //<TPZ1125>
                       IF "Actual Unit Price"<>xRec."Actual Unit Price" THEN
                         StyleTxt :="Unit Price Color";

                       //<TPZ2512>
                       SalesPriceMultiplier := 0;
                       IF Item.GET("No.") THEN BEGIN
                       IF "Pricing Logic" = "Pricing Logic"::"Sales Price" THEN BEGIN
                         IF Item."Unit Price" <> 0 THEN
                           SalesPriceMultiplier := "Recomm. Unit Price" / Item."Unit Price"
                         ELSE
                           SalesPriceMultiplier := 0;
                       END;
                       END;
                       //</TPZ2512>
                         //TOP230 KT ABCSI CRP 2 Fixes 05012015  //EB
                       //<TPZ1125>
                       //GetLastSalesPrice(Rec); //TOP180 KT ABCSI Customer Pricing - Hot Sheets 04142015
                     END;

    OnNewRecord=VAR
                  ApplicationAreaSetup@1001 : Record 9178;
                BEGIN
                  IF ApplicationAreaSetup.IsFoundationEnabled THEN
                    Type := Type::Item
                  ELSE
                    InitType;

                  CLEAR(ShortcutDimCode);

                  StyleTxt := SetStyle;  //TOP230 KT ABCSI CRP 2 Fixes 05012015
                END;

    OnInsertRecord=VAR
                     ApplicationAreaSetup@1000 : Record 9178;
                   BEGIN
                     IF ApplicationAreaSetup.IsFoundationEnabled THEN
                       Type := Type::Item;
                   END;

    OnDeleteRecord=VAR
                     ReserveSalesLine@1000 : Codeunit 99000832;
                   BEGIN
                     IF (Quantity <> 0) AND ItemExists("No.") THEN BEGIN
                       COMMIT;
                       {
                       IF NOT ReserveSalesLine.DeleteLineConfirm(Rec) THEN
                         EXIT(FALSE);
                       }
                       //ReserveSalesLine.DeleteLine(Rec);
                     END;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           //<TPZ2512>
                           SalesPriceMultiplier := 0;
                           IF Item.GET("No.") THEN BEGIN
                           IF "Pricing Logic" = "Pricing Logic"::"Sales Price" THEN BEGIN
                             IF Item."Unit Price" <> 0 THEN
                               SalesPriceMultiplier :="Recomm. Unit Price" / Item."Unit Price"
                             ELSE
                               SalesPriceMultiplier := 0;
                           END;
                           END;
                           //</TPZ2512>
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 ESM=&L°nea;
                                 FRC=&Ligne;
                                 ENC=&Line];
                      Image=Line }
      { 1901743104;2 ;ActionGroup;
                      CaptionML=[ENU=Item Availability by;
                                 ESM=Disponibilidad prod. por;
                                 FRC=DisponibilitÇ article par;
                                 ENC=Item Availability by];
                      Image=ItemAvailability }
      { 5       ;3   ;Action    ;
                      CaptionML=[ENU=Event;
                                 ESM=Evento;
                                 FRC=êvÇnement;
                                 ENC=Event];
                      Image=Event;
                      OnAction=BEGIN
                                 //ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByEvent)
                               END;
                                }
      { 1907981204;3 ;Action    ;
                      CaptionML=[ENU=Period;
                                 ESM=Periodo;
                                 FRC=PÇriode;
                                 ENC=Period];
                      Image=Period;
                      OnAction=BEGIN
                                 //ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByPeriod)
                               END;
                                }
      { 1903587104;3 ;Action    ;
                      CaptionML=[ENU=Variant;
                                 ESM=Variante;
                                 FRC=Variante;
                                 ENC=Variant];
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 //ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByVariant)
                               END;
                                }
      { 1903134404;3 ;Action    ;
                      AccessByPermission=TableData 14=R;
                      CaptionML=[ENU=Location;
                                 ESM=AlmacÇn;
                                 FRC=Magasin;
                                 ENC=Location];
                      Image=Warehouse;
                      OnAction=BEGIN
                                 //ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByLocation)
                               END;
                                }
      { 26      ;3   ;Action    ;
                      CaptionML=[ENU=BOM Level;
                                 ESM=Nivel L.M.;
                                 FRC=Niveau nomenclature;
                                 ENC=BOM Level];
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 //ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByBOM)
                               END;
                                }
      { 1901092104;2 ;Action    ;
                      CaptionML=[ENU=Select Item Substitution;
                                 ESM=Seleccionar prod. alternativo;
                                 FRC=SÇlectionner article de substitution;
                                 ENC=Select Item Substitution];
                      ToolTipML=[ENU=Select another item that has been set up to be sold instead of the original item if it is unavailable.;
                                 ESM=Seleccione otro producto que se haya configurado para venderse en vez del producto original si no est† disponible.;
                                 FRC=SÇlectionnez un autre article qui a ÇtÇ configurÇ pour àtre vendu Ö la place de l'article initial, s'il n'est pas disponible.;
                                 ENC=Select another item that has been set up to be sold instead of the original item if it is unavailable.];
                      ApplicationArea=#Suite;
                      Image=SelectItemSubstitution;
                      OnAction=BEGIN
                                 ShowItemSub;
                               END;
                                }
      { 1907075804;2 ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ESM=Dimensiones;
                                 FRC=Dimensions;
                                 ENC=Dimensions];
                      ToolTipML=[ENU=View or edits dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 ESM=Permite ver o editar dimensiones, como el †rea, el proyecto o el departamento, que pueden asignarse a los documentos de venta y compra para distribuir costes y analizar el historial de transacciones.;
                                 FRC=Affichez ou modifiez les axes analytiques, tels que la zone, le projet ou le dÇpartement que vous pouvez affecter aux documents vente et achat afin de distribuer les coñts et analyser l'historique des transactions.;
                                 ENC=View or edits dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyse transaction history.];
                      ApplicationArea=#Suite;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1902027204;2 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 ESM=C&omentarios;
                                 FRC=Co&mmentaires;
                                 ENC=Co&mments];
                      Image=ViewComments;
                      OnAction=BEGIN
                                 ShowLineComments;
                               END;
                                }
      { 1907184504;2 ;Action    ;
                      AccessByPermission=TableData 5800=R;
                      CaptionML=[ENU=Item Charge &Assignment;
                                 ESM=&Asignaci¢n cargos prod.;
                                 FRC=&Affectation frais annexes;
                                 ENC=Item Charge &Assignment];
                      Image=ItemCosts;
                      OnAction=BEGIN
                                 ItemChargeAssgnt;
                               END;
                                }
      { 1905987604;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=[ENU=Item &Tracking Lines;
                                 ESM=L°ns. se&guim. prod.;
                                 FRC=Lignes &traáabilitÇ;
                                 ENC=Item &Tracking Lines];
                      Image=ItemTrackingLines;
                      OnAction=VAR
                                 Item@1001 : Record 27;
                               BEGIN
                                 Item.GET("No.");
                                 Item.TESTFIELD("Assembly Policy",Item."Assembly Policy"::"Assemble-to-Stock");
                                 TESTFIELD("Qty. to Asm. to Order (Base)",0);
                                 OpenItemTrackingLines;
                               END;
                                }
      { 1000000028;2 ;Action    ;
                      CaptionML=ENU=Change Log Entries;
                      Visible=ChangeLogEntriesVisible;
                      Image=History;
                      OnAction=VAR
                                 ChangeLogEntry@1000000000 : Record 405;
                                 Number@1000000001 : Integer;
                                 ChangeLogMgt@1000000002 : Codeunit 423;
                                 Codeunit423EventSubscriber@1000000003 : Codeunit 51876;
                               BEGIN
                                 //<TPZ1728>
                                 Number := "Document Type";
                                 //ChangeLogMgt.OpenSSRSReport(DATABASE::"Loc. S. A. and S. Mpng.", FORMAT(Number), "Document No.", FORMAT("Line No."));
                                 Codeunit423EventSubscriber.CU423_OpenSSRSReport(DATABASE::"Loc. S. A. and S. Mpng.", FORMAT(Number), "Document No.", FORMAT("Line No."));//TPZ2829 Event Conversion
                                 EXIT;
                                 //</TPZ1728>


                                 // <TPZ129>
                                 Number := "Document Type";
                                 ChangeLogEntry.RESET;
                                 ChangeLogEntry.SETRANGE("Table No.",DATABASE::"Loc. S. A. and S. Mpng.");
                                 ChangeLogEntry.SETRANGE("Primary Key Field 1 Value",FORMAT(Number));
                                 ChangeLogEntry.SETRANGE("Primary Key Field 2 Value","Document No.");
                                 ChangeLogEntry.SETRANGE("Primary Key Field 3 Value",FORMAT("Line No."));
                                 PAGE.RUNMODAL(PAGE::"Change Log Entries",ChangeLogEntry);
                                 // </TPZ129>
                               END;
                                }
      { 15      ;2   ;ActionGroup;
                      CaptionML=[ENU=Assemble to Order;
                                 ESM=Ensamblar para pedido;
                                 FRC=Assembler pour commande;
                                 ENC=Assemble to Order];
                      ActionContainerType=NewDocumentItems;
                      Image=AssemblyBOM }
      { 3       ;3   ;Action    ;
                      AccessByPermission=TableData 90=R;
                      CaptionML=[ENU=Assemble-to-Order Lines;
                                 ESM=Ensamblar para l°neas de pedido;
                                 FRC=Lignes Assembler pour commande;
                                 ENC=Assemble-to-Order Lines];
                      OnAction=BEGIN
                                 ShowAsmToOrderLines;
                               END;
                                }
      { 9       ;3   ;Action    ;
                      AccessByPermission=TableData 90=R;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Roll Up &Price;
                                 ESM=Revertir &precio;
                                 FRC=&Prix relation;
                                 ENC=Roll Up &Price];
                      OnAction=BEGIN
                                 RollupAsmPrice;
                               END;
                                }
      { 7       ;3   ;Action    ;
                      AccessByPermission=TableData 90=R;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Roll Up &Cost;
                                 ESM=Distribuir &coste;
                                 FRC=&Coñts relation;
                                 ENC=Roll Up &Cost];
                      OnAction=BEGIN
                                 RollUpAsmCost;
                               END;
                                }
      { 25      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ESM=F&unciones;
                                 FRC=Fonction&s;
                                 ENC=F&unctions];
                      Image=Action }
      { 23      ;2   ;Action    ;
                      AccessByPermission=TableData 7002=R;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get &Price;
                                 ESM=Traer &precio;
                                 FRC=Extraire &prix;
                                 ENC=Get &Price];
                      Image=Price;
                      OnAction=BEGIN
                                 ShowPrices
                               END;
                                }
      { 21      ;2   ;Action    ;
                      AccessByPermission=TableData 7004=R;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get Li&ne Discount;
                                 ESM=Traer descuento l°&nea;
                                 FRC=E&xtraire remise ligne;
                                 ENC=Get Li&ne Discount];
                      Image=LineDiscount;
                      OnAction=BEGIN
                                 ShowLineDisc
                               END;
                                }
      { 19      ;2   ;Action    ;
                      AccessByPermission=TableData 90=R;
                      CaptionML=[ENU=E&xplode BOM;
                                 ESM=D&esplegar L.M.;
                                 FRC=&Eclater nomenclature;
                                 ENC=E&xplode BOM];
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeBOM;
                               END;
                                }
      { 1000000053;2 ;Action    ;
                      Name=InsertExtTexts;
                      AccessByPermission=TableData 279=R;
                      CaptionML=[ENU=Insert &Ext. Text;
                                 ESM=Insertar &textos adicionales;
                                 FRC=InsÇrer te&xtes Çtendus;
                                 ENC=Insert &Ext. Text];
                      ToolTipML=[ENU=Insert an extended description for the sales document.;
                                 ESM=Inserta una descripci¢n ampliada para el documento de venta.;
                                 FRC=InsÇrez une description plus longue pour le document vente.;
                                 ENC=Insert an extended description for the sales document.];
                      ApplicationArea=#Suite;
                      Image=Text;
                      OnAction=BEGIN
                                 InsertExtendedText(TRUE);
                               END;
                                }
      { 13      ;2   ;Action    ;
                      AccessByPermission=TableData 5718=R;
                      CaptionML=[ENU=Nonstoc&k Items;
                                 ESM=Prods. no in&ventariables;
                                 FRC=Articles &hors stock;
                                 ENC=Nonstoc&k Items];
                      ApplicationArea=#Basic,#Suite;
                      Image=NonStockItem;
                      OnAction=BEGIN
                                 ShowNonstockItems;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of entity that will be posted for this sales line, such as Item, Resource, or G/L Account.;
                           ESM=Especifica el tipo de entidad que se registrar† para esta l°nea de venta, como Producto, Recurso o Cuenta.;
                           FRC=SpÇcifie le type d'entitÇ qui sera validÇ pour cette ligne vente, tel qu'Article, Ressource, ou Compte gÇnÇral.;
                           ENC=Specifies the type of entity that will be posted for this sales line, such as Item, Resource, or G/L Account.];
                SourceExpr=Type;
                OnValidate=BEGIN
                             NoOnAfterValidate;

                             IF xRec."No." <> '' THEN
                               RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of a general ledger account, item, resource, additional cost, or fixed asset, depending on the contents of the Type field.;
                           ESM=Especifica el n£mero de una cuenta de contabilidad, un producto, un recurso, un coste adicional o un activo fijo, seg£n el contenido del campo Tipo.;
                           FRC=SpÇcifie le numÇro d'un compte gÇnÇral, d'un article, d'une ressource, d'un coñt supplÇmentaire ou d'une immobilisation, selon ce que vous avez sÇlectionnÇ dans le champ Type.;
                           ENC=Specifies the number of a general ledger account, item, resource, additional cost, or fixed asset, depending on the contents of the Type field.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="No.";
                StyleExpr=StyleTxtABC;
                OnValidate=VAR
                             tmpitem@1000000000 : Record 27;
                           BEGIN
                             ShowShortcutDimCode(ShortcutDimCode);
                             NoOnAfterValidate;
                             //{=======} MODIFIED

                              IF ("Document Type" IN ["Document Type"::Order,"Document Type"::Quote]) AND (Type=Type::Item) THEN BEGIN
                                //<TPZ2788>
                               {IF tmpitem.GET("No.") THEN

                                 CASE tmpitem.Blocked OF
                                   tmpitem.Blocked::All:
                                     StyleTxtBlocked :='StandardAccent';
                                   tmpitem.Blocked::Sale:
                                     StyleTxtBlocked :='Attention';
                                   tmpitem.Blocked::Purchase:
                                     StyleTxtBlocked :='Ambiguous';
                                   //<TPZ2531>
                                   {
                                   tmpitem.Blocked::"4":
                                     StyleTxtBlocked :='favorable';
                                     }
                                     //</TPZ2531>
                                   ELSE
                                    StyleTxtBlocked:= 'Standard';
                                 END;
                                 //<TPZ2531>}
                                 SetStyleABC; //</TPZ2788>
                                 DefaultDimension.RESET;
                                 IF DefaultDimension.GET(27,"No.",'PRODLIFECYCLE')THEN BEGIN
                                 IF DefaultDimension."Dimension Value Code" = 'INTRO' THEN
                                   StyleTxtABC := 'favorable'
                                // ELSE
                                  // StyleTxtBlocked:= 'Standard';//<TPZ2788>
                                 END;
                               //</TPZ2531>
                               END;
                                //EB </TPZ1545>
                             //{=======} TARGET

                             //<TPZ2512>
                             SalesPriceMultiplier := 0;
                             IF Item.GET("No.") THEN BEGIN
                             IF "Pricing Logic" = "Pricing Logic"::"Sales Price" THEN BEGIN
                               IF Item."Unit Price" <> 0 THEN
                                 SalesPriceMultiplier :="Recomm. Unit Price" / Item."Unit Price"
                               ELSE
                                 SalesPriceMultiplier := 0;
                             END;
                             END;
                             //</TPZ2512>

                             IF xRec."No." <> '' THEN
                               RedistributeTotalsOnAfterValidate;

                             UpdateEditableOnRow;
                             {<<<<<<<}
                           END;
                            }

    { 1000000069;2;Field  ;
                SourceExpr="Cross-Reference No.";
                OnValidate=BEGIN
                             CrossReferenceNoOnAfterValidat;
                             NoOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           CrossReferenceNoLookUp;
                           InsertExtendedText(FALSE);
                           NoOnAfterValidate;
                         END;
                          }

    { 1000000070;2;Field  ;
                SourceExpr="Variant Code";
                OnValidate=BEGIN
                             VariantCodeOnAfterValidate
                           END;
                            }

    { 1000000072;2;Field  ;
                Name=Sales Price Multiplier;
                DecimalPlaces=3:3;
                SourceExpr=SalesPriceMultiplier;
                Editable=false }

    { 1000000067;2;Field  ;
                DrillDown=No;
                SourceExpr="Vendor Item No." }

    { 1000000068;2;Field  ;
                SourceExpr="Substitution Available" }

    { 1000000066;2;Field  ;
                SourceExpr=Nonstock }

    { 1000000065;2;Field  ;
                SourceExpr="VAT Prod. Posting Group" }

    { 1000000064;2;Field  ;
                SourceExpr=Description;
                StyleExpr=StyleTxtABC;
                OnValidate=VAR
                             OldDescription@1000000000 : Text[50];
                           BEGIN
                             // <TPZ1039>
                             IF (Type = Type::Item) AND
                                ("No." = '') AND
                                (Description <> '')
                             THEN BEGIN
                               OldDescription := Description;
                               VALIDATE(Type,Type::" ");
                               Description := OldDescription;
                             END;
                             // </TPZ1039>
                           END;
                            }

    { 1000000063;2;Field  ;
                SourceExpr="Mfr. Rep. Code" }

    { 1000000062;2;Field  ;
                SourceExpr="ISR Code" }

    { 1000000061;2;Field  ;
                SourceExpr="CSR Code" }

    { 1000000060;2;Field  ;
                SourceExpr=Comment }

    { 1000000071;2;Field  ;
                SourceExpr="Location Code";
                OnValidate=BEGIN
                             LocationCodeOnAfterValidate;
                           END;
                            }

    { 1000000057;2;Field  ;
                BlankZero=Yes;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;
                            }

    { 1000000056;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Qty. to Order" }

    { 1000000058;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Qty. Ordered" }

    { 1000000054;2;Field  ;
                SourceExpr="Qte. Qty. Shipped" }

    { 1000000059;2;Field  ;
                SourceExpr="Qte. Qty. Invoiced" }

    { 1000000055;2;Field  ;
                SourceExpr="Reason Code" }

    { 1000000052;2;Field  ;
                SourceExpr="Reason Code Comment" }

    { 1000000051;2;Field  ;
                SourceExpr="Lost Opportunity Description" }

    { 1000000050;2;Field  ;
                SourceExpr="Qty. to Assemble to Order";
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             CurrPage.UPDATE(TRUE);
                           END;

                OnDrillDown=BEGIN
                              ShowAsmToOrderLines;
                            END;
                             }

    { 1000000049;2;Field  ;
                SourceExpr="Unit of Measure Code";
                OnValidate=BEGIN
                             UnitofMeasureCodeOnAfterValida;
                           END;
                            }

    { 1000000048;2;Field  ;
                SourceExpr="Unit of Measure" }

    { 1000000047;2;Field  ;
                SourceExpr="Unit Cost (LCY)";
                StyleExpr=StyleTxt }

    { 1000000073;2;Field  ;
                SourceExpr="Average Unit Cost";
                Visible=false }

    { 1000000046;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Unit Price";
                StyleExpr=StyleTxt }

    { 1000000045;2;Field  ;
                SourceExpr="Recomm. Multiplier" }

    { 1000000044;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Recomm. Unit Price";
                StyleExpr=StyleTxt }

    { 1000000043;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Requested Unit Price" }

    { 1000000042;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Actual Unit Price";
                StyleExpr=StyleTxt;
                OnValidate=BEGIN
                             //<TPZ1125>
                             StyleTxt := SetStyle;//EB
                             "Unit Price Color":=StyleTxt;
                             //<TPZ1125>
                           END;
                            }

    { 1000000041;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Alt. UOM Quantity" }

    { 1000000040;2;Field  ;
                SourceExpr="Alt. UOM Code" }

    { 1000000039;2;Field  ;
                SourceExpr="Alt. Unit of Measure" }

    { 1000000038;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Alt. UOM Unit Price";
                StyleExpr=StyleTxt }

    { 1000000037;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Alt. UOM Recomm. Unit Price";
                StyleExpr=StyleTxt }

    { 1000000036;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Alt. UOM Actual Unit Price";
                StyleExpr=StyleTxt }

    { 1000000035;2;Field  ;
                SourceExpr="Tax Liable" }

    { 1000000034;2;Field  ;
                SourceExpr="Tax Area Code" }

    { 1000000033;2;Field  ;
                SourceExpr="Tax Group Code" }

    { 1000000032;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Line Amount" }

    { 1000000031;2;Field  ;
                SourceExpr="Amount Including VAT" }

    { 1000000030;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Line Discount %" }

    { 1000000029;2;Field  ;
                BlankZero=Yes;
                SourceExpr=Multiplier }

    { 1000000026;2;Field  ;
                SourceExpr="Gross Margin %" }

    { 1000000074;2;Field  ;
                SourceExpr="Gross Margin % Avg Cost";
                Visible=false }

    { 1000000027;2;Field  ;
                SourceExpr="Pricing Logic" }

    { 1000000025;2;Field  ;
                SourceExpr="Line Discount Amount" }

    { 1000000024;2;Field  ;
                SourceExpr="Allow Invoice Disc." }

    { 1000000023;2;Field  ;
                SourceExpr="Allow Item Charge Assignment" }

    { 1000000022;2;Field  ;
                SourceExpr="Last Unit Price" }

    { 1000000021;2;Field  ;
                SourceExpr="Last Price UOM" }

    { 1000000020;2;Field  ;
                SourceExpr="Last Price Qty." }

    { 1000000019;2;Field  ;
                SourceExpr="Last Price Date" }

    { 1000000018;2;Field  ;
                SourceExpr="Work Type Code" }

    { 1000000017;2;Field  ;
                SourceExpr="Blanket Order No." }

    { 1000000016;2;Field  ;
                SourceExpr="Blanket Order Line No." }

    { 1000000015;2;Field  ;
                SourceExpr="Appl.-to Item Entry" }

    { 1000000014;2;Field  ;
                SourceExpr="Shortcut Dimension 1 Code" }

    { 1000000013;2;Field  ;
                SourceExpr="Shortcut Dimension 2 Code" }

    { 1000000012;2;Field  ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                Visible=false;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(3,ShortcutDimCode[3]);
                         END;
                          }

    { 1000000011;2;Field  ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                Visible=false;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(4,ShortcutDimCode[4]);
                         END;
                          }

    { 1000000010;2;Field  ;
                SourceExpr="Shortcut Dimension 5 Code" }

    { 1000000009;2;Field  ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(6,ShortcutDimCode[6]);
                         END;
                          }

    { 1000000008;2;Field  ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(7,ShortcutDimCode[7]);
                         END;
                          }

    { 1000000007;2;Field  ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(8,ShortcutDimCode[8]);
                         END;
                          }

    { 1000000006;2;Field  ;
                SourceExpr="Document No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000005;2;Field  ;
                SourceExpr="Line No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000004;2;Field  ;
                SourceExpr="EDI Release No.";
                Visible=false;
                Editable=FALSE }

    { 1000000003;2;Field  ;
                SourceExpr="EDI Ship Req. Date";
                Visible=FALSE }

    { 1000000002;2;Field  ;
                SourceExpr="EDI Kanban No.";
                Visible=FALSE }

    { 1000000001;2;Field  ;
                SourceExpr="EDI Line Type";
                Visible=FALSE }

    { 1000000000;2;Field  ;
                SourceExpr="EDI Line Status";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      TotalSalesHeader@1017 : Record 50005;
      TotalSalesLine@1016 : Record 50006;
      SalesHeader@1000 : Record 50005;
      Currency@1005 : Record 4;
      SalesSetup@1018 : Record 311;
      TransferExtendedText@1002 : Codeunit 378;
      SalesPriceCalcMgt@1004 : Codeunit 7000;
      ItemAvailFormsMgt@1001 : Codeunit 353;
      UserMgt@1000000005 : Codeunit 5700;
      SalesCalcDiscByType@1015 : Codeunit 56;
      DocumentTotals@1014 : Codeunit 57;
      VATAmount@1013 : Decimal;
      ShortcutDimCode@1003 : ARRAY [8] OF Code[20];
      RowIsText@1012 : Boolean;
      UnitofMeasureCodeIsChangeable@1008 : Boolean;
      InvoiceDiscountAmount@1011 : Decimal;
      InvoiceDiscountPct@1006 : Decimal;
      InvDiscAmountEditable@1007 : Boolean;
      TaxGroupCodeVisible@1020000 : Boolean;
      "****ABCSI Globals****"@1000000000 : Integer;
      PgSalesLines@1000000001 : Page 50021;
      SalesLine@1000000002 : Record 50006;
      StyleTxt@1000000003 : Text;
      ActualUnitPriceEditable@1000000004 : Boolean;
      ChangeLogEntriesVisible@1000000006 : Boolean;
      DefaultDimension@1000000008 : Record 352;
      SalesPriceMultiplier@1000000009 : Decimal;
      Item@1000000010 : Record 27;
      StyleTxtABC@1000000011 : Text;

    PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Disc. (Yes/No)",Rec);
    END;

    LOCAL PROCEDURE ValidateInvoiceDiscountAmount@22();
    VAR
      SalesHeader@1000 : Record 50005;
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      //SalesCalcDiscByType.ApplyInvDiscBasedOnAmt(InvoiceDiscountAmount,SalesHeader);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE CalcInvDisc@17();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Calc. Discount",Rec);
    END;

    LOCAL PROCEDURE ExplodeBOM@3();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Explode BOM",Rec);
    END;

    LOCAL PROCEDURE InsertExtendedText@4(Unconditionally@1000 : Boolean);
    BEGIN
      {
      IF TransferExtendedText.SalesCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        COMMIT;
        TransferExtendedText.InsertSalesExtText(Rec);
      END;
      }
      IF TransferExtendedText.MakeUpdate THEN
        UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE ShowItemSub@8();
    BEGIN
      ShowItemSub;
    END;

    LOCAL PROCEDURE ShowNonstockItems@10();
    BEGIN
      ShowNonstock;
    END;

    LOCAL PROCEDURE ItemChargeAssgnt@5800();
    BEGIN
      ShowItemChargeAssgnt;
    END;

    PROCEDURE UpdateForm@12(SetSaveRecord@1000 : Boolean);
    BEGIN
      CurrPage.UPDATE(SetSaveRecord);
    END;

    LOCAL PROCEDURE ShowPrices@15();
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      //SalesPriceCalcMgt.GetSalesLinePrice(SalesHeader,Rec);
    END;

    LOCAL PROCEDURE ShowLineDisc@16();
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      //SalesPriceCalcMgt.GetSalesLineLineDisc(SalesHeader,Rec);
    END;

    LOCAL PROCEDURE ShowLineComments@11();
    BEGIN
      ShowLineComments;
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      InsertExtendedText(FALSE);
      IF (Type = Type::"Charge (Item)") AND ("No." <> xRec."No.") AND
         (xRec."No." <> '')
      THEN
        CurrPage.SAVERECORD;

      SaveAndAutoAsmToOrder;
    END;

    LOCAL PROCEDURE LocationCodeOnAfterValidate@2();
    BEGIN
      SaveAndAutoAsmToOrder;
    END;

    LOCAL PROCEDURE VariantCodeOnAfterValidate@9();
    BEGIN
      SaveAndAutoAsmToOrder;
    END;

    LOCAL PROCEDURE CrossReferenceNoOnAfterValidat@19048248();
    BEGIN
      InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      IF Reserve = Reserve::Always THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve(TRUE);
      END;

      IF (Type = Type::Item) AND
         (Quantity <> xRec.Quantity)
      THEN
        CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE UnitofMeasureCodeOnAfterValida@19057939();
    BEGIN
      IF Reserve = Reserve::Always THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve(TRUE);
      END;
    END;

    LOCAL PROCEDURE SaveAndAutoAsmToOrder@13();
    BEGIN
      IF (Type = Type::Item) AND IsAsmToOrderRequired THEN BEGIN
        CurrPage.SAVERECORD;
        AutoAsmToOrder;
        CurrPage.UPDATE(FALSE);
      END;
    END;

    PROCEDURE "****ABCSI Functions****"@1000000000();
    BEGIN
    END;

    PROCEDURE AutoFillQtytoOrder@1000000001();
    BEGIN
      //AutoFillQtyToOrder(Rec);
    END;

    PROCEDURE DeleteQtytoOrder@1000000002();
    BEGIN
      //DeleteQtyToOrder(Rec);
    END;

    PROCEDURE CopyLastUnitPriceToActualUnitPrice@1000000004();
    VAR
      SalesLineLoc@1000000000 : Record 50006;
    BEGIN
      // <TPZ929>
      SalesLineLoc.COPY(Rec);
      //CopyLastUnitPriceToActualUnitPrice(SalesLineLoc);  //AJ
      // </TPZ929>
    END;

    PROCEDURE ClearActualUnitPrice@1000000003();
    VAR
      SalesLineLoc@1000000000 : Record 50006;
    BEGIN
      // <TPZ929>
      SalesLineLoc.COPY(Rec);
      //ClearActualUnitPrice(SalesLineLoc);  //AJ
      // </TPZ929>
    END;

    LOCAL PROCEDURE RedistributeTotalsOnAfterValidate@7();
    BEGIN
      CurrPage.SAVERECORD;

      SalesHeader.GET("Document Type","Document No.");
      //DocumentTotals.SalesRedistributeInvoiceDiscountAmounts(Rec,VATAmount,TotalSalesLine);
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ValidateSaveShortcutDimCode@18(FieldNumber@1001 : Integer;VAR ShortcutDimCode@1000 : Code[20]);
    BEGIN
      ValidateShortcutDimCode(FieldNumber,ShortcutDimCode);
      CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE UpdateEditableOnRow@19();
    VAR
      SalesLine@1000 : Record 50006;
    BEGIN
      RowIsText := ("No." = '') AND (Description <> '');
      {
      IF NOT RowIsText THEN
        UnitofMeasureCodeIsChangeable := CanEditUnitOfMeasureCode
      ELSE
        UnitofMeasureCodeIsChangeable := FALSE;
      }
      IF TotalSalesHeader."No." <> '' THEN BEGIN
        SalesLine.SETRANGE("Document No.",TotalSalesHeader."No.");
        SalesLine.SETRANGE("Document Type",TotalSalesHeader."Document Type");
        IF NOT SalesLine.ISEMPTY THEN
          InvDiscAmountEditable :=
            SalesCalcDiscByType.InvoiceDiscIsAllowed(TotalSalesHeader."Invoice Disc. Code") AND CurrPage.EDITABLE;
      END;
    END;

    LOCAL PROCEDURE UpdatePage@20();
    VAR
      SalesHeader@1001 : Record 50005;
    BEGIN
      CurrPage.UPDATE;
      SalesHeader.GET("Document Type","Document No.");
      //SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(TotalSalesHeader."Invoice Discount Amount",SalesHeader);
    END;

    LOCAL PROCEDURE GetTotalSalesHeader@14();
    BEGIN
      IF NOT TotalSalesHeader.GET("Document Type","Document No.") THEN
        CLEAR(TotalSalesHeader);
      IF Currency.Code <> TotalSalesHeader."Currency Code" THEN
        IF NOT Currency.GET(TotalSalesHeader."Currency Code") THEN BEGIN
          CLEAR(Currency);
          Currency.InitRoundingPrecision;
        END;
    END;

    LOCAL PROCEDURE CalculateTotals@6();
    BEGIN
      GetTotalSalesHeader;
      TotalSalesHeader.CALCFIELDS("Recalculate Invoice Disc.");

      IF SalesSetup."Calc. Inv. Discount" AND ("Document No." <> '') AND (TotalSalesHeader."Customer Posting Group" <> '') AND
         TotalSalesHeader."Recalculate Invoice Disc."
      THEN
        IF FIND THEN
          CalcInvDisc;

      //DocumentTotals.CalculateSalesTotals(TotalSalesLine,VATAmount,Rec);
      InvoiceDiscountAmount := TotalSalesLine."Inv. Discount Amount";
      //InvoiceDiscountPct := SalesCalcDiscByType.GetCustInvoiceDiscountPct(Rec);
    END;

    LOCAL PROCEDURE SetStyleABC@1000000019();
    VAR
      ItemABC@1000000000 : Record 27;
    BEGIN
      //<TPZ2788>
      StyleTxtABC := '';
      ItemABC.RESET;
      IF ItemABC.GET("No.") THEN BEGIN
        CASE ItemABC."ABC Code" OF
          'LS' : StyleTxtABC := 'favorable';
          'N' : StyleTxtABC := 'Standard';
          'A' : StyleTxtABC := 'Standard';
          'B' : StyleTxtABC := 'Standard';
          'C' : StyleTxtABC := 'Standard';
          'MD' : StyleTxtABC := 'Standard';
          'SO' : StyleTxtABC := 'Standard';
          'CL' : StyleTxtABC := 'Attention';
          'DI' : StyleTxtABC := 'Ambiguous';
          'OB' : StyleTxtABC := 'Strongaccent';
        END;
      END;
      //<TPZ2788>
    END;

    BEGIN
    {
      2019-01-17 TPZ2417 AKUMAR
      Created new object.
      2019-03-27 TPZ2531 AKUMAR
        Removed NPI Blocked option and added code for dimension code 'Intro';
      2020-05-13 TPZ2788 UCHOUHAN
        Re-implement color coding on the basis of ABC code.
      TPZ2785 05112020 GGUPTA Remove Item blocking Topaz Customization
    }
    END.
  }
}

