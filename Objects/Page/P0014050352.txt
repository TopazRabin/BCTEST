OBJECT Page 14050352 E.D.I. Sales Orders Chart
{
  OBJECT-PROPERTIES
  {
    Date=12/28/17;
    Time=12:00:00 PM;
    Version List=SE0.60.18;
  }
  PROPERTIES
  {
    CaptionML=ENU=EDI Sales Orders Chart;
    SourceTable=Table485;
    PageType=CardPart;
    OnOpenPage=BEGIN
                 SetActionsEnabled;
               END;

    OnFindRecord=BEGIN
                   UpdateChart;
                   IsChartDataReady := TRUE;

                   IF NOT IsChartAddInReady THEN
                     SetActionsEnabled;
                 END;

    ActionList=ACTIONS
    {
      { 2       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 15      ;1   ;ActionGroup;
                      Name=Show;
                      CaptionML=[ENU=Show;
                                 ESM=Mostrar;
                                 FRC=Afficher;
                                 ENC=Show];
                      Image=View }
      { 10      ;2   ;Action    ;
                      Name=AllOrders;
                      CaptionML=[ENU=All Orders;
                                 ESM=Todos los pedidos;
                                 FRC=Toutes les commandes;
                                 ENC=All Orders];
                      Enabled=AllOrdersEnabled;
                      OnAction=BEGIN
                                 EDISalesOrderSetup.SetShowOrders(EDISalesOrderSetup."Show Orders"::"All Orders");
                                 UpdateStatus;
                               END;
                                }
      { 11      ;2   ;Action    ;
                      Name=OrdersUntilToday;
                      CaptionML=[ENU=Orders Until Today;
                                 ESM=Pedidos hasta hoy;
                                 FRC=Commandes jusqu'… aujourd'hui;
                                 ENC=Orders Until Today];
                      Enabled=OrdersUntilTodayEnabled;
                      OnAction=BEGIN
                                 EDISalesOrderSetup.SetShowOrders(EDISalesOrderSetup."Show Orders"::"Orders Until Today");
                                 UpdateStatus;
                               END;
                                }
      { 9       ;2   ;Action    ;
                      Name=DelayedOrders;
                      CaptionML=[ENU=Delayed Orders;
                                 ESM=Pedidos retrasados;
                                 FRC=Commandes en retard;
                                 ENC=Delayed Orders];
                      Enabled=DelayedOrdersEnabled;
                      OnAction=BEGIN
                                 EDISalesOrderSetup.SetShowOrders(EDISalesOrderSetup."Show Orders"::"Delayed Orders");
                                 UpdateStatus;
                               END;
                                }
      { 14      ;1   ;ActionGroup;
                      Name=PeriodLength;
                      CaptionML=[ENU=Period Length;
                                 ESM=Longitud periodo;
                                 FRC=Dur‚e de la p‚riode;
                                 ENC=Period Length];
                      Image=Period }
      { 7       ;2   ;Action    ;
                      Name=Day;
                      CaptionML=[ENU=Day;
                                 ESM=D¡a;
                                 FRC=Jour;
                                 ENC=Day];
                      Enabled=DayEnabled;
                      OnAction=BEGIN
                                 EDISalesOrderSetup.SetPeriodLength(EDISalesOrderSetup."Period Length"::Day);
                                 UpdateStatus;
                               END;
                                }
      { 8       ;2   ;Action    ;
                      Name=Week;
                      CaptionML=[ENU=Week;
                                 ESM=Semana;
                                 FRC=Semaine;
                                 ENC=Week];
                      Enabled=WeekEnabled;
                      OnAction=BEGIN
                                 EDISalesOrderSetup.SetPeriodLength(EDISalesOrderSetup."Period Length"::Week);
                                 UpdateStatus;
                               END;
                                }
      { 4       ;2   ;Action    ;
                      Name=Month;
                      CaptionML=[ENU=Month;
                                 ESM=Mes;
                                 FRC=Mois;
                                 ENC=Month];
                      Enabled=MonthEnabled;
                      OnAction=BEGIN
                                 EDISalesOrderSetup.SetPeriodLength(EDISalesOrderSetup."Period Length"::Month);
                                 UpdateStatus;
                               END;
                                }
      { 6       ;2   ;Action    ;
                      Name=Quarter;
                      CaptionML=[ENU=Quarter;
                                 ESM=Trimestre;
                                 FRC=Trimestre;
                                 ENC=Quarter];
                      Enabled=QuarterEnabled;
                      OnAction=BEGIN
                                 EDISalesOrderSetup.SetPeriodLength(EDISalesOrderSetup."Period Length"::Quarter);
                                 UpdateStatus;
                               END;
                                }
      { 3       ;2   ;Action    ;
                      Name=Year;
                      CaptionML=[ENU=Year;
                                 ESM=A¤o;
                                 FRC=Ann‚e;
                                 ENC=Year];
                      Enabled=YearEnabled;
                      OnAction=BEGIN
                                 EDISalesOrderSetup.SetPeriodLength(EDISalesOrderSetup."Period Length"::Year);
                                 UpdateStatus;
                               END;
                                }
      { 1240020001;1 ;ActionGroup;
                      CaptionML=ENU=Trade Partner }
      { 1240020000;2 ;Action    ;
                      Name=TradePartner;
                      CaptionML=ENU=Trade Partner List;
                      OnAction=BEGIN
                                 EDITradePartner.RESET;
                                 IF PAGE.RUNMODAL(PAGE::"E.D.I. Trade Partner List",EDITradePartner) = ACTION::LookupOK THEN BEGIN
                                   TradePartnerFilter := EDITradePartner."No.";
                                   EDISalesOrderSetup."Trade Partner" := TradePartnerFilter;
                                   EDISalesOrderSetup.SetTradePartner(EDISalesOrderSetup."Trade Partner");
                                   UpdateStatus;
                                 END;
                               END;
                                }
      { 1240020002;2 ;Action    ;
                      Name=AllTradePartners;
                      CaptionML=ENU=All Trade Partners;
                      OnAction=BEGIN
                                 TradePartnerFilter := '';
                                 EDISalesOrderSetup."Trade Partner" := TradePartnerFilter;
                                 EDISalesOrderSetup.SetTradePartner(EDISalesOrderSetup."Trade Partner");
                                 UpdateStatus;
                               END;
                                }
      { 24      ;1   ;ActionGroup;
                      Name=Options;
                      CaptionML=[ENU=Options;
                                 ESM=Opciones;
                                 FRC=Options;
                                 ENC=Options];
                      Image=SelectChart }
      { 16      ;2   ;ActionGroup;
                      Name=ValueToCalculate;
                      CaptionML=[ENU=Value to Calculate;
                                 ESM=Valor que se calcular ;
                                 FRC=Valeur … calculer;
                                 ENC=Value to Calculate];
                      ActionContainerType=ActionItems;
                      Image=Calculate }
      { 17      ;3   ;Action    ;
                      Name=Amount;
                      CaptionML=[ENU=Amount;
                                 ESM=Importe;
                                 FRC=Montant;
                                 ENC=Amount];
                      Enabled=AmountEnabled;
                      OnAction=BEGIN
                                 EDISalesOrderSetup.SetValueToCalcuate(EDISalesOrderSetup."Value to Calculate"::"Amount Excl. VAT");
                                 UpdateStatus;
                               END;
                                }
      { 18      ;3   ;Action    ;
                      Name=NoofOrders;
                      CaptionML=[ENU=No. of Orders;
                                 ESM=N§ de pedidos;
                                 FRC=Nombre de commandes;
                                 ENC=No. of Orders];
                      Enabled=NoOfOrdersEnabled;
                      OnAction=BEGIN
                                 EDISalesOrderSetup.SetValueToCalcuate(EDISalesOrderSetup."Value to Calculate"::"No. of Orders");
                                 UpdateStatus;
                               END;
                                }
      { 19      ;2   ;ActionGroup;
                      CaptionML=[ENU=Chart Type;
                                 ESM=Tipo de gr fico;
                                 FRC=Type de graphique;
                                 ENC=Chart Type];
                      Image=BarChart }
      { 20      ;3   ;Action    ;
                      Name=StackedArea;
                      CaptionML=[ENU=Stacked Area;
                                 ESM=µrea apilada;
                                 FRC=Aires empil‚es;
                                 ENC=Stacked Area];
                      Enabled=StackedAreaEnabled;
                      OnAction=BEGIN
                                 EDISalesOrderSetup.SetChartType(EDISalesOrderSetup."Chart Type"::"Stacked Area");
                                 UpdateStatus;
                               END;
                                }
      { 21      ;3   ;Action    ;
                      Name=StackedAreaPct;
                      CaptionML=[ENU=Stacked Area (%);
                                 ESM=µrea apilada (%);
                                 FRC=Aires empil‚es (%);
                                 ENC=Stacked Area (%)];
                      Enabled=StackedAreaPctEnabled;
                      OnAction=BEGIN
                                 EDISalesOrderSetup.SetChartType(EDISalesOrderSetup."Chart Type"::"Stacked Area (%)");
                                 UpdateStatus;
                               END;
                                }
      { 22      ;3   ;Action    ;
                      Name=StackedColumn;
                      CaptionML=[ENU=Stacked Column;
                                 ESM=Columna apilada;
                                 FRC=Histogramme empil‚;
                                 ENC=Stacked Column];
                      Enabled=StackedColumnEnabled;
                      OnAction=BEGIN
                                 EDISalesOrderSetup.SetChartType(EDISalesOrderSetup."Chart Type"::"Stacked Column");
                                 UpdateStatus;
                               END;
                                }
      { 23      ;3   ;Action    ;
                      Name=StackedColumnPct;
                      CaptionML=[ENU=Stacked Column (%);
                                 ESM=Columna apilada (%);
                                 FRC=Histogramme empil‚ (%);
                                 ENC=Stacked Column (%)];
                      Enabled=StackedColumnPctEnabled;
                      OnAction=BEGIN
                                 EDISalesOrderSetup.SetChartType(EDISalesOrderSetup."Chart Type"::"Stacked Column (%)");
                                 UpdateStatus;
                               END;
                                }
      { 25      ;1   ;Separator  }
      { 26      ;1   ;Action    ;
                      Name=Refresh;
                      CaptionML=[ENU=Refresh;
                                 ESM=Actualizar;
                                 FRC=Actualiser;
                                 ENC=Refresh];
                      Image=Refresh;
                      OnAction=BEGIN
                                 NeedsUpdate := TRUE;
                                 UpdateStatus;
                               END;
                                }
      { 27      ;1   ;Separator  }
      { 13      ;1   ;Action    ;
                      Name=Setup;
                      CaptionML=[ENU=Setup;
                                 ESM=Configuraci¢n;
                                 FRC=Configuration;
                                 ENC=Setup];
                      Image=Setup;
                      OnAction=BEGIN
                                 RunSetup;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=container;
                ContainerType=ContentArea }

    { 12  ;1   ;Field     ;
                CaptionML=ENU=Status Text;
                SourceExpr=StatusText }

    { 5   ;1   ;Field     ;
                Name=BusinessChart;
                CaptionML=ENU=Business Chart;
                ControlAddIn=[Microsoft.Dynamics.Nav.Client.BusinessChart;PublicKeyToken=31bf3856ad364e35] }

    { 1240020003;1;Field  ;
                Name=TradePartner;
                CaptionML=ENU=Trade Partner;
                SourceExpr=TradePartnerFilter }

  }
  CODE
  {
    VAR
      EDISalesOrderSetup@1002 : Record 14050307;
      OldEDISalesOrderSetup@1005 : Record 14050307;
      EDITradePartner@1240020000 : Record 14002360;
      EDISalesOrdersMgt@1000 : Codeunit 14050310;
      StatusText@1003 : Text[250];
      NeedsUpdate@1001 : Boolean;
      AllOrdersEnabled@1004 : Boolean INDATASET;
      OrdersUntilTodayEnabled@1006 : Boolean INDATASET;
      DelayedOrdersEnabled@1007 : Boolean INDATASET;
      DayEnabled@1008 : Boolean INDATASET;
      WeekEnabled@1009 : Boolean INDATASET;
      MonthEnabled@1010 : Boolean INDATASET;
      QuarterEnabled@1011 : Boolean INDATASET;
      YearEnabled@1012 : Boolean INDATASET;
      AmountEnabled@1013 : Boolean INDATASET;
      NoOfOrdersEnabled@1014 : Boolean INDATASET;
      StackedAreaEnabled@1015 : Boolean INDATASET;
      StackedAreaPctEnabled@1016 : Boolean INDATASET;
      StackedColumnEnabled@1017 : Boolean INDATASET;
      StackedColumnPctEnabled@1018 : Boolean INDATASET;
      IsChartAddInReady@1019 : Boolean;
      IsChartDataReady@1020 : Boolean;
      TradePartnerFilter@1240020001 : Code[20];
      TradePartnerEnabled@1240020002 : Boolean;

    LOCAL PROCEDURE UpdateChart@6();
    BEGIN
      IF NOT NeedsUpdate THEN
        EXIT;
      EDISalesOrdersMgt.UpdateData(Rec);
      Update(CurrPage.BusinessChart);
      UpdateStatus;
      NeedsUpdate := FALSE;
    END;

    PROCEDURE UpdateStatus@8();
    BEGIN
      NeedsUpdate :=
        NeedsUpdate OR
        (OldEDISalesOrderSetup."Period Length" <> EDISalesOrderSetup."Period Length") OR
        (OldEDISalesOrderSetup."Show Orders" <> EDISalesOrderSetup."Show Orders") OR
        (OldEDISalesOrderSetup."Use Work Date as Base" <> EDISalesOrderSetup."Use Work Date as Base") OR
        (OldEDISalesOrderSetup."Value to Calculate" <> EDISalesOrderSetup."Value to Calculate") OR
        (OldEDISalesOrderSetup."Chart Type" <> EDISalesOrderSetup."Chart Type") OR
        (OldEDISalesOrderSetup."Trade Partner" <> EDISalesOrderSetup."Trade Partner");

      OldEDISalesOrderSetup := EDISalesOrderSetup;

      IF NeedsUpdate THEN
        StatusText := EDISalesOrderSetup.GetCurrentSelectionText;

      SetActionsEnabled;
    END;

    PROCEDURE RunSetup@3();
    BEGIN
      PAGE.RUNMODAL(PAGE::"E.D.I. Sales Orders Setup",EDISalesOrderSetup);
      EDISalesOrderSetup.GET(USERID);
      UpdateStatus;
    END;

    PROCEDURE SetActionsEnabled@10();
    BEGIN
      AllOrdersEnabled := (EDISalesOrderSetup."Show Orders" <> EDISalesOrderSetup."Show Orders"::"All Orders") AND
        IsChartAddInReady;
      OrdersUntilTodayEnabled :=
        (EDISalesOrderSetup."Show Orders" <> EDISalesOrderSetup."Show Orders"::"Orders Until Today") AND
        IsChartAddInReady;
      DelayedOrdersEnabled := (EDISalesOrderSetup."Show Orders" <> EDISalesOrderSetup."Show Orders"::"Delayed Orders") AND
        IsChartAddInReady;
      DayEnabled := (EDISalesOrderSetup."Period Length" <> EDISalesOrderSetup."Period Length"::Day) AND
        IsChartAddInReady;
      WeekEnabled := (EDISalesOrderSetup."Period Length" <> EDISalesOrderSetup."Period Length"::Week) AND
        IsChartAddInReady;
      MonthEnabled := (EDISalesOrderSetup."Period Length" <> EDISalesOrderSetup."Period Length"::Month) AND
        IsChartAddInReady;
      QuarterEnabled := (EDISalesOrderSetup."Period Length" <> EDISalesOrderSetup."Period Length"::Quarter) AND
        IsChartAddInReady;
      YearEnabled := (EDISalesOrderSetup."Period Length" <> EDISalesOrderSetup."Period Length"::Year) AND
        IsChartAddInReady;
      AmountEnabled :=
        (EDISalesOrderSetup."Value to Calculate" <> EDISalesOrderSetup."Value to Calculate"::"Amount Excl. VAT") AND
        IsChartAddInReady;
      NoOfOrdersEnabled :=
        (EDISalesOrderSetup."Value to Calculate" <> EDISalesOrderSetup."Value to Calculate"::"No. of Orders") AND
        IsChartAddInReady;
      StackedAreaEnabled := (EDISalesOrderSetup."Chart Type" <> EDISalesOrderSetup."Chart Type"::"Stacked Area") AND
        IsChartAddInReady;
      StackedAreaPctEnabled := (EDISalesOrderSetup."Chart Type" <> EDISalesOrderSetup."Chart Type"::"Stacked Area (%)") AND
        IsChartAddInReady;
      StackedColumnEnabled := (EDISalesOrderSetup."Chart Type" <> EDISalesOrderSetup."Chart Type"::"Stacked Column") AND
        IsChartAddInReady;
      StackedColumnPctEnabled :=
        (EDISalesOrderSetup."Chart Type" <> EDISalesOrderSetup."Chart Type"::"Stacked Column (%)") AND
        IsChartAddInReady;
      //TradePartnerEnabled := (EDISalesOrderSetup."Trade Partner" <> '') AND
        //IsChartAddInReady;
    END;

    EVENT BusinessChart@-5::DataPointClicked@1(point@1240020000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
    END;

    EVENT BusinessChart@-5::DataPointDoubleClicked@2(point@1240020000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
    END;

    EVENT BusinessChart@-5::AddInReady@3();
    BEGIN
      IsChartAddInReady := TRUE;
      EDISalesOrdersMgt.OnOpenPage(EDISalesOrderSetup);
      UpdateStatus;
      IF IsChartDataReady THEN
        UpdateChart;
    END;

    BEGIN
    END.
  }
}

