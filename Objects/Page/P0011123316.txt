OBJECT Page 11123316 SC - Webshop Catalog Overview
{
  OBJECT-PROPERTIES
  {
    Date=04/18/17;
    Time=[ 1:00:00 PM];
    Version List=SCW19.2.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Webshop Catalog Overview;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table11123317;
    PageType=Worksheet;
    OnInit=BEGIN
             RepresentCustomerNoEnable := TRUE;
           END;

    OnOpenPage=VAR
                 ProductInfo@11123303 : Record 11123317;
                 Validation@11123302 : Codeunit 11123310;
               BEGIN
                 Params.INIT;
                 Params.CalculatePrices := TRUE;
                 Params.CalculateInventory := TRUE;

                 IF WebshopId = '' THEN BEGIN
                   Webshop.FIND('-');
                   WebshopId := Webshop.ID;
                 END ELSE
                   Webshop.GET(WebshopId);

                 xAccountType := AccountType;
                 xAccountCode := AccountCode;
                 xRepresentCustomerNo := RepresentCustomerNo;

                 SetParamsByWebshop(Webshop,Customer,Params);

                 ActivateControls;
                 IF Validation.RefreshCatOverviewRequired THEN
                   Validation.RefreshCatalogOverview(Params,1);

                 IF Item.COUNT <> ProductInfo.COUNT THEN
                   Validation.RefreshCatalogOverview(Params,0);
               END;

    OnAfterGetRecord=BEGIN
                       CALCFIELDS("Variants Exist");
                       GetCalculatedValues(Params);
                       ItemNoOnFormat;
                       DescriptionOnFormat;
                       NonOrderableReasonOnFormat;
                       UnitPriceOnFormat;
                       UnitListPriceOnFormat;
                       StockOnFormat;
                       LastDateTimeModifiedOnFormat;
                     END;

    OnQueryClosePage=VAR
                       CacheMgt@11123302 : Codeunit 11123323;
                     BEGIN
                       CacheMgt.ClearCache;
                     END;

    ActionList=ACTIONS
    {
      { 11123319;0   ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 11123320;1   ;ActionGroup;
                      CaptionML=ENU=&Item }
      { 11123318;2   ;Action    ;
                      CaptionML=ENU=Item &Card;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Edit;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Item2@11123302 : Record 27;
                                 ItemCard@11123303 : Page 30;
                               BEGIN
                                 CLEAR(ItemCard);
                                 CLEAR(Item2);
                                 IF "Item No." <> '' THEN BEGIN
                                   Item2.GET("Item No.");
                                   ItemCard.SETTABLEVIEW(Item2);
                                   ItemCard.SETRECORD(Item2);
                                   ItemCard.RUNMODAL;
                                   UpdateForm(FALSE);
                                 END;
                               END;
                                }
      { 11123316;2   ;Action    ;
                      CaptionML=ENU=Va&riants Info.;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ItemTrackingLedger;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowVariantsInfo(Params);
                               END;
                                }
      { 11123313;1   ;ActionGroup;
                      CaptionML=ENU=&Customer }
      { 11123312;2   ;Action    ;
                      CaptionML=ENU=Customer &Card;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Edit;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Customer2@11123303 : Record 18;
                                 CustomerCard@11123302 : Page 21;
                                 RecMgt@11123305 : Codeunit 11123326;
                               BEGIN
                                 CLEAR(CustomerCard);
                                 CLEAR(Customer2);
                                 IF Customer."No." <> '' THEN BEGIN
                                   Customer2.GET(Customer."No.");
                                   CustomerCard.SETTABLEVIEW(Customer2);
                                   CustomerCard.SETRECORD(Customer2);
                                   CustomerCard.RUNMODAL;
                                   IF RecMgt.GetCustomer(Customer."No.",Customer,FALSE) THEN
                                     SetParamsByCustomer(Customer,Params);
                                   UpdateForm(FALSE);
                                 END;
                               END;
                                }
      { 11123311;0   ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 11123310;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 11123308;2   ;Action    ;
                      CaptionML=ENU=Refresh All Info...;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Refresh;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Validation@11123303 : Codeunit 11123310;
                               BEGIN
                                 Validation.RefreshCatalogOverview(Params,0);
                               END;
                                }
      { 11123306;2   ;Separator  }
      { 11123304;2   ;Action    ;
                      CaptionML=ENU=Update Visibility...;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=ChangeStatus;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 REPORT.RUNMODAL(REPORT::"SC - Updating Visiblity");
                                 UpdateForm(FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 11123337;0;Container;
                ContainerType=ContentArea }

    { 11123336;1;Group    ;
                CaptionML=ENU=General }

    { 11123335;2;Field    ;
                CaptionML=ENU=Webshop Name;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=WebshopId;
                TableRelation="SC - Webshop";
                OnValidate=BEGIN
                             ValidateWebshopId;
                               WebshopIdOnAfterValidate;
                           END;

                OnLookup=VAR
                           Webshop@11123302 : Record 11123313;
                           WebshopsForm@11123303 : Page 11123312;
                         BEGIN
                           CLEAR(WebshopsForm);
                           IF Text <> '' THEN
                             Webshop.GET(Text)
                           ELSE
                             Webshop.FINDFIRST;

                           WebshopsForm.LOOKUPMODE(TRUE);
                           WebshopsForm.SETTABLEVIEW(Webshop);
                           WebshopsForm.SETRECORD(Webshop);
                           IF WebshopsForm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             WebshopsForm.GETRECORD(Webshop);
                             Text := Webshop.ID;
                             Params.WebsiteId := Webshop.ID;
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 11123334;2;Field    ;
                CaptionML=ENU=Visible in Webshop Filter;
                OptionCaptionML=ENU=All,Yes,No;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=VisibleInWebshopFilter;
                OnValidate=BEGIN
                             ApplyVisibleInWebshopFilter;
                               VisibleInWebshopFilterOnAfterV;
                           END;
                            }

    { 11123333;2;Field    ;
                Name=OrderableFilter;
                CaptionML=ENU=Orderable Filter;
                OptionCaptionML=ENU=All,Yes,No;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=OrderableFilter;
                OnValidate=BEGIN
                             ApplyOrderableFilter;
                               OrderableFilterOnAfterValidate;
                           END;
                            }

    { 11123332;2;Field    ;
                CaptionML=ENU=Account Type;
                OptionCaptionML=ENU=Customer,Contact,Salesperson;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AccountType;
                OnValidate=BEGIN
                             ValidateAccountType;
                               AccountTypeOnAfterValidate;
                           END;
                            }

    { 11123331;2;Field    ;
                CaptionML=ENU=Account Code;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AccountCode;
                OnValidate=BEGIN
                             ValidateAccountCode;
                               AccountCodeOnAfterValidate;
                           END;

                OnLookup=VAR
                           Customer@11123304 : Record 18;
                           Contact@11123305 : Record 5050;
                           Salesperson@11123306 : Record 13;
                           Validation@11123307 : Codeunit 11123310;
                           ErrorText@11123308 : Text[1024];
                         BEGIN
                           CASE AccountType OF
                             AccountType::Customer :
                               BEGIN
                                 IF Text <> '' THEN
                                   Customer.GET(Text)
                                 ELSE
                                   Customer.FINDFIRST;
                                 IF PAGE.RUNMODAL(0,Customer) = ACTION::LookupOK THEN BEGIN
                                   Text := Customer."No.";
                                   EXIT(TRUE);
                                 END;
                               END;
                             AccountType::Contact :
                               BEGIN
                                 IF Text <> '' THEN
                                   Contact.GET(Text)
                                 ELSE
                                   Contact.FINDFIRST;
                                 IF PAGE.RUNMODAL(0,Contact) = ACTION::LookupOK THEN BEGIN
                                   Text := Contact."No.";
                                   EXIT(TRUE);
                                 END;
                               END;
                             AccountType::Salesperson :
                               BEGIN
                                 IF Text <> '' THEN BEGIN
                                   IF NOT Validation.ValidateMaxFieldLen(
                                     DATABASE::"Salesperson/Purchaser",Salesperson.FIELDNO(Salesperson.Code),Text,ErrorText)
                                   THEN
                                     ERROR(ErrorText);
                                   Salesperson.GET(Text);
                                 END ELSE
                                   Salesperson.FINDFIRST;
                                 IF PAGE.RUNMODAL(0,Salesperson) = ACTION::LookupOK THEN BEGIN
                                   Text := Salesperson.Code;
                                   EXIT(TRUE);
                                 END;
                               END;
                           END;
                         END;
                          }

    { 11123330;2;Field    ;
                Name=RepresentCustomerNo;
                CaptionML=ENU=Represent Customer No.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=RepresentCustomerNo;
                TableRelation=Customer;
                Enabled=RepresentCustomerNoEnable;
                OnValidate=BEGIN
                             ValidateRepresentCustomerNo;
                               RepresentCustomerNoOnAfterVali;
                           END;

                OnLookup=VAR
                           Customer2@11123302 : Record 18;
                           CustomerFunc@11123303 : Codeunit 11123313;
                           CustomerListForm@11123304 : Page 22;
                         BEGIN
                           IF AccountType <> AccountType::Salesperson THEN
                             EXIT(FALSE);

                           CLEAR(CustomerListForm);

                           CustomerFunc.ApplyFilterToCustBySalesperson(Customer2,AccountCode);

                           IF Text <> '' THEN BEGIN
                             Customer2."No." := RepresentCustomerNo;
                             Customer2.FIND;
                           END ELSE
                             IF Customer2.FINDFIRST THEN;

                           CustomerListForm.LOOKUPMODE(TRUE);
                           CustomerListForm.SETTABLEVIEW(Customer2);
                           CustomerListForm.SETRECORD(Customer2);
                           IF CustomerListForm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             CustomerListForm.GETRECORD(Customer2);
                             Text := Customer2."No.";
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 11123329;1;Group    ;
                Editable=FALSE;
                GroupType=Repeater }

    { 11123328;2;Field    ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Item No.";
                Style=Strong;
                StyleExpr=FontIsBold }

    { 11123327;2;Field    ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                Style=Strong;
                StyleExpr=FontIsBold }

    { 11123326;2;Field    ;
                CaptionML=ENU=Visible in Webshop;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Visible in Webshop" }

    { 11123325;2;Field    ;
                Name=Orderable;
                CaptionML=ENU=Orderable;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Orderable }

    { 11123324;2;Field    ;
                Name=NonOrderableReason;
                CaptionML=ENU=Non Orderable Reason;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Non Orderable Reason";
                Style=Strong;
                StyleExpr=FontIsBold }

    { 11123323;2;Field    ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit Price";
                CaptionClass=GetCaptionClass;
                Style=Strong;
                StyleExpr=FontIsBold }

    { 11123322;2;Field    ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit List Price";
                Visible=FALSE;
                Enabled=FALSE;
                Style=Strong;
                StyleExpr=FontIsBold }

    { 11123321;2;Field    ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Stock;
                Style=Strong;
                StyleExpr=FontIsBold }

    { 11123317;2;Field    ;
                CaptionML=ENU=Last Date/Time Modified;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Last Date/Time Modified";
                Style=Strong;
                StyleExpr=FontIsBold }

    { 11123315;1;Group     }

    { 11123314;2;Field    ;
                CaptionML=ENU=Customer No.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Customer."No.";
                Editable=FALSE }

    { 11123309;2;Field    ;
                CaptionML=ENU=Customer Name;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Customer.Name;
                Editable=FALSE }

    { 11123307;2;Field    ;
                CaptionML=ENU=Location Code;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CatalogHelper.GetAccountLocationCode(Params);
                Editable=FALSE }

    { 11123305;2;Field    ;
                CaptionML=ENU=Currency Code;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Params.CurrentCurrencyId;
                Editable=FALSE }

    { 11123303;2;Field    ;
                CaptionML=ENU=Prices Including VAT;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Params.PricesIncludingVAT;
                Editable=FALSE }

    { 11123302;2;Field    ;
                CaptionML=ENU=No. of Products;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=COUNT;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      Params@11123304 : TEMPORARY Record 11123310;
      Webshop@11123310 : Record 11123313;
      Customer@11123312 : Record 18;
      Item@11123314 : Record 27;
      CatalogHelper@11123318 : Codeunit 11123318;
      VisibleInWebshopFilter@11123302 : 'All,Yes,No';
      OrderableFilter@11123303 : 'All,Yes,No';
      WebshopId@11123305 : Code[50];
      AccountCode@11123306 : Code[20];
      AccountType@11123307 : 'Customer,Contact,Salesperson';
      xAccountCode@11123315 : Code[20];
      xAccountType@11123311 : 'Customer,Contact,Salesperson';
      RepresentCustomerNo@11123308 : Code[20];
      xRepresentCustomerNo@11123317 : Code[20];
      CheckStock@11123309 : Boolean;
      Text11123302@11123313 : TextConst 'ENU=Salesperson %1 cannot represent Customer %2.';
      Text11123303@11123316 : TextConst 'ENU=%1 %2 ''%3'' does not exist.';
      FontIsBold@19003736 : Boolean INDATASET;
      RepresentCustomerNoEnable@19003738 : Boolean INDATASET;

    LOCAL PROCEDURE MakeBold@11123303() : Boolean;
    BEGIN
      EXIT("Variants Exist");
    END;

    LOCAL PROCEDURE ApplyVisibleInWebshopFilter@11123302();
    BEGIN
      CASE VisibleInWebshopFilter OF
        VisibleInWebshopFilter::All : SETRANGE("Visible in Webshop");
        VisibleInWebshopFilter::Yes : SETRANGE("Visible in Webshop",TRUE);
        VisibleInWebshopFilter::No  : SETRANGE("Visible in Webshop",FALSE);
      END;
    END;

    LOCAL PROCEDURE ApplyOrderableFilter@11123304();
    BEGIN
      CASE OrderableFilter OF
        OrderableFilter::All : SETRANGE(Orderable);
        OrderableFilter::Yes : SETRANGE(Orderable,TRUE);
        OrderableFilter::No  : SETRANGE(Orderable,FALSE);
      END;
    END;

    PROCEDURE SetWebshopNameFilter@11123306(NewWebshopId@11123302 : Code[20]);
    BEGIN
      WebshopId := NewWebshopId;
    END;

    LOCAL PROCEDURE ActivateControls@11123305();
    BEGIN
      RepresentCustomerNoEnable := AccountType = AccountType::Salesperson;
    END;

    LOCAL PROCEDURE ValidateWebshopId@11123307();
    BEGIN
      IF Webshop.ID <> WebshopId THEN BEGIN
        CLEAR(Webshop);
        CLEAR(Customer);
        Webshop.GET(WebshopId);
        AccountCode := '';
        AccountType := AccountType::Customer;
        RepresentCustomerNo := '';
        xRepresentCustomerNo := '';
        ActivateControls;
        SetParamsByWebshop(Webshop,Customer,Params);
      END;
    END;

    LOCAL PROCEDURE ValidateAccountType@11123311();
    BEGIN
      IF AccountType <> xAccountType THEN BEGIN
        AccountCode := '';
        xAccountCode := '';
        RepresentCustomerNo := '';
        xRepresentCustomerNo := '';
        ActivateControls;
        CLEAR(Customer);
        IF AccountType = AccountType::Customer THEN BEGIN
          CLEAR(Webshop);
          ValidateWebshopId;
        END;
      END;
      xAccountType := AccountType;
    END;

    LOCAL PROCEDURE ValidateAccountCode@11123308();
    BEGIN
      IF AccountCode <> '' THEN BEGIN
        IF xAccountCode <> AccountCode THEN BEGIN
          TestCuctContSales;
          ActivateControls;
          SetParamsByAccount(AccountType,AccountCode,Customer,Params);
          IF RepresentCustomerNo <> '' THEN BEGIN
            CLEAR(Customer);
            ValidateRepresentCustomerNo;
          END;
        END;
      END ELSE BEGIN
        CLEAR(Webshop);
        ValidateWebshopId;
      END;
      xAccountCode := AccountCode;
    END;

    LOCAL PROCEDURE ValidateRepresentCustomerNo@11123309();
    VAR
      Customer2@11123302 : Record 18;
      RecMgt@11123303 : Codeunit 11123326;
      CustomerFunc@11123304 : Codeunit 11123313;
    BEGIN
      IF RepresentCustomerNo <> '' THEN BEGIN
        IF Customer."No." <> RepresentCustomerNo THEN BEGIN
          CustomerFunc.ApplyFilterToCustBySalesperson(Customer2,AccountCode);
          Customer2.SETRANGE("No.",RepresentCustomerNo);
          IF Customer2.ISEMPTY THEN
            ERROR(Text11123302,AccountCode,RepresentCustomerNo);

          RecMgt.GetCustomer(RepresentCustomerNo,Customer,TRUE);
          SetParamsByCustomer(Customer,Params);
        END;
      END ELSE BEGIN
        xAccountCode := '';
        ValidateAccountCode;
      END;
      xRepresentCustomerNo := RepresentCustomerNo;
    END;

    LOCAL PROCEDURE ValidateCheckStock@11123326();
    BEGIN
      Params.CheckStock := TRUE;
    END;

    PROCEDURE UpdateForm@11123319(SaveChanges@11123302 : Boolean);
    BEGIN
      RefreshProductInfo(Params);
      CurrPage.UPDATE(SaveChanges);
    END;

    PROCEDURE GetCaptionClass@11123310() : Text[80];
    BEGIN
      IF Params.PricesIncludingVAT THEN
        EXIT('2,1,' + FIELDCAPTION("Unit Price"))
      ELSE
        EXIT('2,0,' + FIELDCAPTION("Unit Price"));
    END;

    LOCAL PROCEDURE TestCuctContSales@11123312();
    VAR
      Cust@11123304 : Record 18;
      Cont@11123303 : Record 5050;
      Salesperson@11123302 : Record 13;
      Validation@11123306 : Codeunit 11123310;
      ErrorText@11123305 : Text[1024];
    BEGIN
      CASE AccountType OF
        AccountType::Customer :
          IF NOT Cust.GET(AccountCode) THEN
            ErrorText := STRSUBSTNO(Text11123303,Cust.TABLECAPTION,Cust.FIELDCAPTION(Cust."No."),AccountCode);
        AccountType::Contact :
          IF NOT Cont.GET(AccountCode) THEN
            ErrorText := STRSUBSTNO(Text11123303,Cont.TABLECAPTION,Cont.FIELDCAPTION(Cont."No."),AccountCode);
        AccountType::Salesperson :
          IF Validation.ValidateMaxFieldLen(
            DATABASE::"Salesperson/Purchaser",Salesperson.FIELDNO(Salesperson.Code),AccountCode,ErrorText)
          THEN
            IF NOT Salesperson.GET(AccountCode) THEN
              ErrorText := STRSUBSTNO(Text11123303,Salesperson.TABLECAPTION,Salesperson.FIELDCAPTION(Salesperson.Code),AccountCode);
      END;

      IF ErrorText = '' THEN BEGIN
        RepresentCustomerNo := '';
        xRepresentCustomerNo := '';
        EXIT;
      END;

      IF ISSERVICETIER THEN BEGIN
        IF xAccountCode = '' THEN BEGIN
          AccountCode := '';
          IF AccountType = AccountType::Customer THEN BEGIN
            CLEAR(Webshop);
            ValidateWebshopId;
          END;
        END ELSE BEGIN
          AccountCode := xAccountCode;
          RepresentCustomerNo := xRepresentCustomerNo;
        END;
        MESSAGE(ErrorText);
      END ELSE
        ERROR(ErrorText);
    END;

    LOCAL PROCEDURE VisibleInWebshopFilterOnAfterV@19067538();
    BEGIN
      UpdateForm(FALSE);
    END;

    LOCAL PROCEDURE OrderableFilterOnAfterValidate@19041678();
    BEGIN
      UpdateForm(FALSE);
    END;

    LOCAL PROCEDURE WebshopIdOnAfterValidate@19012454();
    BEGIN
      UpdateForm(FALSE);
    END;

    LOCAL PROCEDURE AccountCodeOnAfterValidate@19007267();
    BEGIN
      UpdateForm(FALSE);
    END;

    LOCAL PROCEDURE RepresentCustomerNoOnAfterVali@19050055();
    BEGIN
      UpdateForm(FALSE);
    END;

    LOCAL PROCEDURE AccountTypeOnAfterValidate@19013737();
    BEGIN
      UpdateForm(FALSE);
    END;

    LOCAL PROCEDURE ItemNoOnFormat@19046299();
    BEGIN
      FontIsBold := MakeBold;
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      FontIsBold := MakeBold;
    END;

    LOCAL PROCEDURE NonOrderableReasonOnFormat@19066480();
    BEGIN
      FontIsBold := MakeBold;
    END;

    LOCAL PROCEDURE UnitPriceOnFormat@19008119();
    BEGIN
      FontIsBold := MakeBold;
    END;

    LOCAL PROCEDURE UnitListPriceOnFormat@19066691();
    BEGIN
      FontIsBold := MakeBold;
    END;

    LOCAL PROCEDURE StockOnFormat@19025898();
    BEGIN
      FontIsBold := MakeBold;
    END;

    LOCAL PROCEDURE LastDateTimeModifiedOnFormat@19003446();
    BEGIN
      FontIsBold := MakeBold;
    END;

    BEGIN
    END.
  }
}

