OBJECT Page 14097519 AFP Assembly Forecast
{
  OBJECT-PROPERTIES
  {
    Date=03/27/19;
    Time=12:00:00 PM;
    Version List=UBP3.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Assembly Forecast;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=Yes;
    LinksAllowed=No;
    SourceTable=Table14000555;
    SourceTableView=SORTING(Location Code,Replenishment Source Type,Replenishment Source Code)
                    ORDER(Ascending)
                    WHERE(Replenishment Source Type=CONST(Assembly));
    PageType=List;
    CardPageID=Procurement Unit Card;
    OnOpenPage=BEGIN
                 SummaryVisible := UBP.SummarizeVariantDetail;
               END;

    OnAfterGetRecord=BEGIN
                       CalcPageQuantities;
                       GetLocation("Location Code");
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1240020017;1 ;Action    ;
                      Name=Page Assembly Forecast Lines;
                      CaptionML=ENU=Show Assembly Forecast Lines;
                      RunObject=Page 14097507;
                      RunPageView=SORTING(Assy. Item No.,Assy. Variant Code,Assy. Location Code,Required Date);
                      RunPageLink=Assy. Location Code=FIELD(Location Code),
                                  Assy. Item No.=FIELD(Item No.),
                                  Assy. Variant Code=FIELD(Variant Code);
                      Image=AssemblyOrder;
                      PromotedCategory=Process }
      { 1240020016;1 ;Action    ;
                      Name=ShowAsmProdTotal;
                      CaptionML=ENU=Show Assembly Totals;
                      Image=AssemblyOrder;
                      OnAction=BEGIN
                                 ShowProdOrders;
                               END;
                                }
      { 1240030048;1 ;Action    ;
                      CaptionML=ENU=&Location Inventory Roll Up;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=BOMVersions;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 LocInvRollUpRTC@1240020001 : Page 14097475;
                                 InvMgtSetup@1240020002 : Record 14000551;
                               BEGIN
                                 InvMgtSetup.GET;
                                 IF InvMgtSetup."Roll Up Via Repl. Path" THEN BEGIN
                                   //LocInvRollUpRTC.LoadRollUPLines(Rec, PlanningStartDate);
                                   LocInvRollUpRTC.LoadProcUnit(Rec);
                                   LocInvRollUpRTC.RUN;
                                 END ELSE
                                   ERROR(Text001);
                               END;
                                }
      { 1240030033;1 ;Action    ;
                      ShortCutKey=Shift+F11;
                      CaptionML=ENU=View &Forecast;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CalculateRegenerativePlan;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ProcUnit.GET("Location Code","Item No.","Variant Code");
                                 CLEAR(ForecastView);
                                 //ForecastView.SetLTHDate(PlanningStartDate);
                                 ForecastView.SetProcUnitandSourceNo(ProcUnit,'');
                                 ForecastView.RUN;
                               END;
                                }
      { 1240030052;1 ;Action    ;
                      CaptionML=ENU=&Item;
                      RunObject=Page 30;
                      RunPageView=SORTING(No.)
                                  ORDER(Ascending);
                      RunPageLink=No.=FIELD(Item No.);
                      Image=NewItem;
                      PromotedCategory=Process }
      { 1240020022;1 ;Action    ;
                      CaptionML=[ENU=Assembly BOM;
                                 ESM=L.M. de ensamblado;
                                 FRC=Nomenclature d'assemblage;
                                 ENC=Assembly BOM];
                      ToolTipML=[ENU=View or edit the bill of material that specifies which items and resources are required to assemble the assembly item.;
                                 ESM=Permite ver o editar la lista de materiales que especifica qu‚ productos y recursos se necesitan para ensamblar el producto de ensamblado.;
                                 FRC=Affichez ou modifiez la nomenclature qui indique les articles et les ressources qui sont n‚cessaires pour assembler l'‚l‚ment d'assemblage.;
                                 ENC=View or edit the bill of material that specifies which items and resources are required to assemble the assembly item.];
                      RunObject=Page 36;
                      RunPageLink=Parent Item No.=FIELD(Item No.);
                      Image=BOM }
      { 1240020020;1 ;Action    ;
                      Name=PUCSummaryCard;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Summary Card;
                      Promoted=No;
                      Visible=SummaryVisible;
                      PromotedIsBig=No;
                      Image=TeamSales;
                      OnAction=VAR
                                 SumVarMsg@1240020000 : TextConst 'ENU=No summary procurement unit exists for Location %1 Item %2.';
                                 ProcUnit2@1240020001 : Record 14000555;
                               BEGIN
                                 IF ProcUnit2.GET("Location Code", "Item No.", '') THEN
                                   PAGE.RUN(PAGE::"Procurement Unit Card Sum.",ProcUnit2)
                                 ELSE
                                   MESSAGE(STRSUBSTNO(SumVarMsg, "Location Code", "Item No."));
                               END;
                                }
      { 1240020000;1 ;Action    ;
                      CaptionML=ENU=Item &Usage;
                      Image=ItemTrackingLedger;
                      OnAction=VAR
                                 ItemUsage@1240020000 : Record 14000557;
                               BEGIN
                                 ItemUsage.RESET;
                                 ItemUsage.SETCURRENTKEY(
                                   "Location Code","Item No.","Variant Code","Starting Date","Ending Date");
                                 ItemUsage.SETRANGE("Location Code","Location Code");
                                 ItemUsage.SETRANGE("Item No.","Item No.");
                                 ItemUsage.SETRANGE("Variant Code","Variant Code");
                                 ItemUsage.SETRANGE("Location Filter","Location Code");
                                 PAGE.RUNMODAL(PAGE::"Item Usage List",ItemUsage);
                               END;
                                }
      { 1240030049;1 ;Action    ;
                      CaptionML=ENU=&Replenishment Path;
                      Promoted=No;
                      Visible=FALSE;
                      Image=RoutingVersions;
                      OnAction=BEGIN
                                 UBP.DisplayReplenishmentPath(Rec);
                               END;
                                }
      { 1240020013;1 ;Action    ;
                      Name=<Action1240020002>;
                      CaptionML=ENU=Replenishment Path Alert;
                      RunObject=Page 14097511;
                      RunPageLink=Item No.=FIELD(Item No.);
                      Image=RoutingVersions;
                      PromotedCategory=Process }
      { 1240030057;1 ;Action    ;
                      CaptionML=ENU=Alerts;
                      RunObject=Page 14002718;
                      RunPageLink=Item No.=FIELD(Item No.),
                                  Location Code=FIELD(Location Code),
                                  Variant Code=FIELD(Variant Code);
                      Image=Approve }
      { 1240020009;1 ;Action    ;
                      CaptionML=ENU=Unusual Usage &Adj.;
                      RunObject=Page 14002657;
                      RunPageView=SORTING(Location Code,Item No.,Variant Code,Starting Date,Ending Date)
                                  ORDER(Ascending);
                      RunPageLink=Location Code=FIELD(Location Code),
                                  Item No.=FIELD(Item No.),
                                  Variant Code=FIELD(Variant Code),
                                  Source No.=FILTER(='');
                      Image=CalculateDepreciation }
      { 1240020008;1 ;Action    ;
                      CaptionML=ENU=&Usage Redirect;
                      RunObject=Page 14000588;
                      RunPageLink=Location Code=FIELD(Location Code),
                                  Item No.=FIELD(Item No.),
                                  Variant Code=FIELD(Variant Code);
                      Image=SelectItemSubstitution }
      { 1240020307;1 ;Action    ;
                      CaptionML=ENU=&Additional Stock Quantity;
                      RunObject=Page 14002711;
                      RunPageView=SORTING(Location Code,Item No.,Variant Code,Customer No.);
                      RunPageLink=Location Code=FIELD(Location Code),
                                  Item No.=FIELD(Item No.),
                                  Variant Code=FIELD(Variant Code);
                      Promoted=No;
                      Image=VATStatement;
                      PromotedCategory=Process }
      { 1240020002;1 ;Action    ;
                      CaptionML=ENU=&Surplus List;
                      RunObject=Page 14000538;
                      RunPageView=SORTING(Item No.,Variant Code,Surplus Available)
                                  ORDER(Ascending);
                      RunPageLink=Item No.=FIELD(Item No.),
                                  Surplus Available=CONST(Yes);
                      Promoted=No;
                      Image=ResourceCosts;
                      PromotedCategory=Process }
      { 1240020006;1 ;ActionGroup;
                      CaptionML=ENU=&Item Availability by;
                      Image=ItemAvailability }
      { 1240020005;2 ;Action    ;
                      Name=<Action110>;
                      CaptionML=ENU=Event;
                      Image=Event;
                      OnAction=BEGIN
                                 RunItemAvail(ItemAvailFormsMgt.ByEvent);
                               END;
                                }
      { 1240020001;2 ;Action    ;
                      CaptionML=ENU=BOM Level;
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 RunItemAvail(ItemAvailFormsMgt.ByBOM);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1240020007;1 ;Action    ;
                      CaptionML=ENU=Create Assembly Forecast (All Locations);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=AssemblyOrder;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 CreateProdPlanYesNo@1240020001 : Codeunit 14002674;
                                 LocationFilterRec@1240020000 : Record 14;
                               BEGIN
                                 COMMIT;
                                 CLEAR(CreateProdPlanYesNo);
                                 //IF (Rec.GETFILTER("Location Code") <> '') THEN
                                 //  Rec.COPYFILTER("Location Code", LocationFilterRec.Code)
                                 //ELSE
                                 //  LocationFilterRec.SETRANGE(Code, Rec."Location Code");
                                 CreateProdPlanYesNo.SetOverrideExecutionModeAssy;
                                 CreateProdPlanYesNo.SetGlobalLocationFilters(LocationFilterRec);
                                 CLEARLASTERROR;
                                 IF NOT CreateProdPlanYesNo.RUN THEN BEGIN
                                   MESSAGE(GETLASTERRORTEXT);
                                 END ELSE
                                   CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1240020018;1 ;Action    ;
                      CaptionML=ENU=&Restart Assembly Forecast;
                      Promoted=No;
                      Image=Replan;
                      OnAction=VAR
                                 CreateAFPProdPlan@1240020000 : Codeunit 14002675;
                               BEGIN
                                 CLEAR(CreateAFPProdPlan);
                                 Location.GET(Rec."Location Code");
                                 IF CONFIRM(STRSUBSTNO(Text004,Location.Code),FALSE) THEN BEGIN
                                   CreateAFPProdPlan.SetOverrideExecutionModeAssy;
                                   CreateAFPProdPlan.ByLocation(Location,TRUE);
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1240030000;1;Group  ;
                GroupType=Repeater }

    { 1240030003;2;Field  ;
                SourceExpr="Item No.";
                Editable=FALSE }

    { 1240030001;2;Field  ;
                SourceExpr="Location Code";
                Editable=FALSE }

    { 1240020024;2;Field  ;
                SourceExpr="Low-Level Code";
                Visible=FALSE }

    { 1240030005;2;Field  ;
                SourceExpr="Variant Code";
                Visible=FALSE;
                Editable=FALSE }

    { 1240030007;2;Field  ;
                SourceExpr=Description;
                Visible=FALSE }

    { 1240020004;2;Field  ;
                SourceExpr="Ranking Code" }

    { 1240020003;2;Field  ;
                SourceExpr="Item Class Description" }

    { 1240030054;2;Field  ;
                SourceExpr=Alert }

    { 1240030050;2;Field  ;
                SourceExpr="Item Blocked" }

    { 1240020310;2;Field  ;
                SourceExpr="Usage Formula Status";
                Editable=FALSE }

    { 1240020011;2;Field  ;
                SourceExpr="Replenishment Hierarchy";
                Visible=FALSE;
                Editable=FALSE }

    { 1240020012;2;Field  ;
                SourceExpr="Purchaser Code";
                Visible=FALSE;
                Editable=FALSE }

    { 1240030046;2;Field  ;
                CaptionML=ENU=Bypass Assembly Plan;
                ToolTipML=ENU=The system updates this field during the planning calculation to show that it has bypassed planning.  If there is a problem with the replenishment path from the low-level code, bill of materials, or manually bypassed this will be checked.;
                SourceExpr="Bypass Production Plan" }

    { 1240020019;2;Field  ;
                ToolTipML=ENU=User setting to allow this procurement unit to be bypassed by the assembly plan.;
                SourceExpr="Manual Bypass Replenishment" }

    { 1240020014;2;Field  ;
                CaptionML=ENU=Qty. on Assy. Order;
                DecimalPlaces=0:5;
                SourceExpr=QtyAssemblyOrder;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ShowAssyOrders;
                            END;
                             }

    { 1240020015;2;Field  ;
                CaptionML=ENU=Qty. on Assy. Forecast;
                DecimalPlaces=0:5;
                SourceExpr=QtyAssemblyFCLines;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ShowAssyFCLines;
                              CurrPage.UPDATE(FALSE);
                            END;
                             }

    { 2   ;0   ;Container ;
                ContainerType=FactBoxArea }

    { 1   ;1   ;Part      ;
                SubPageLink=Location Code=FIELD(Location Code),
                            Item No.=FIELD(Item No.),
                            Variant Code=FIELD(Variant Code),
                            Date Filter=FIELD(Date Filter),
                            Expire Date Filter=FIELD(Expire Date Filter);
                PagePartID=Page14097479;
                PartType=Page }

    { 1240020010;1;Part   ;
                CaptionML=ENU=Item Usage;
                SubPageLink=Location Code=FIELD(Location Code),
                            Item No.=FIELD(Item No.),
                            Variant Code=FIELD(Variant Code);
                PagePartID=Page14097457;
                Visible=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1240020023;1;Part   ;
                CaptionML=ENU=Replenishment Alerts;
                SubPageLink=Location Code=FIELD(Location Code),
                            Item No.=FIELD(Item No.),
                            Variant Code=FIELD(Variant Code);
                PagePartID=Page14097459;
                PartType=Page }

    { 1240020021;1;Part   ;
                SubPageView=SORTING(Level)
                            ORDER(Ascending);
                SubPageLink=Location Code=FIELD(Location Code),
                            Item No.=FIELD(Item No.),
                            Variant Code=FIELD(Variant Code);
                PagePartID=Page14000530;
                PartType=Page;
                ShowFilter=No }

  }
  CODE
  {
    VAR
      Location@1240030006 : Record 14;
      ProcUnit@1240030009 : Record 14000555;
      ForecastView@1240030010 : Page 14002661;
      UBP@1240030011 : Codeunit 14000564;
      ItemAvailFormsMgt@1240020000 : Codeunit 353;
      BaseOnStartDate@1240030008 : Boolean;
      QtyAssemblyOrder@1240030000 : Decimal;
      QtyAssemblyFCLines@1240030001 : Decimal;
      Text001@1240030013 : TextConst 'ENU=Starting Date';
      Text002@1240030014 : TextConst 'ENU=Due Date';
      QtySObyLocFilter@1240020018 : Decimal;
      QtyInv@1240020019 : Decimal;
      Text004@1240020001 : TextConst 'ENU=Do you wish to restart the Assembly Forecast for Location %1?';
      SummaryVisible@1240020002 : Boolean;

    PROCEDURE RunItemAvail@2(ItemAvailFormsMgtOption@1006 : Option);
    VAR
      Item@1005 : Record 27;
      LastProdOrderDate@1004 : Date;
      ProdOrderLine2@1003 : Record 5406;
      Location@1002 : Record 14;
      StartDate@1001 : Date;
      AFPProdTemplate@1000 : Record 14002677;
    BEGIN
      Item.GET(Rec."Item No.");
      Location.GET(Rec."Location Code");
      IF Location."Prod. Plan Locked Through" > WORKDATE THEN
        StartDate := CALCDATE('<+1D>',Location."Prod. Plan Locked Through");

      LastProdOrderDate := 0D;
      ProdOrderLine2.SETRANGE("Item No.",ProcUnit."Item No.");
      ProdOrderLine2.SETRANGE("Variant Code",ProcUnit."Variant Code");
      ProdOrderLine2.SETRANGE("Location Code",ProcUnit."Location Code");
      ProdOrderLine2.SETRANGE(Status,ProdOrderLine2.Status::Planned);
      IF ProdOrderLine2.FIND('+') THEN
        LastProdOrderDate := ProdOrderLine2."Due Date";
      ProdOrderLine2.SETRANGE(Status,ProdOrderLine2.Status::"Firm Planned");
      IF ProdOrderLine2.FIND('+') THEN
        IF ProdOrderLine2."Due Date" > LastProdOrderDate THEN
          LastProdOrderDate := ProdOrderLine2."Due Date";
      ProdOrderLine2.SETRANGE(Status,ProdOrderLine2.Status::Released);
      IF ProdOrderLine2.FIND('+') THEN
        IF ProdOrderLine2."Due Date" > LastProdOrderDate THEN
          LastProdOrderDate := ProdOrderLine2."Due Date";

      IF LastProdOrderDate <> 0D THEN BEGIN
        REPEAT
          StartDate := StartDate + AFPProdTemplate."Planning Increment (Days)";
        UNTIL StartDate > LastProdOrderDate;
      END;

      IF StartDate = 0D THEN
        StartDate := WORKDATE;

      //ItemAvailFormsMgt.FilterItem(Item,"Location Code","Variant Code", StartDate);
      ItemAvailFormsMgt.ShowItemAvailFromItem(Item, ItemAvailFormsMgtOption);
    END;

    PROCEDURE GetLocation@4(LocCode@1000 : Code[10]);
    BEGIN
      IF (Location.Code <> LocCode) AND (LocCode <> '') THEN BEGIN
        Location.GET(LocCode);
        //GetProductionTemplate;
      END;
    END;

    PROCEDURE DisplayLocInvRollup@1240030011(CurrProcUnit@1240030000 : Record 14000555);
    VAR
      InvMgtSetup@1240030001 : Record 14000551;
      Text001@1240030002 : TextConst 'ENU=Your system is not currently configured to roll up forecast and demand via replenishment path.';
      InvMgt@1240030003 : Codeunit 14000553;
      LocInvRollUpRTC@1240030004 : Page 14097475;
    BEGIN
      InvMgtSetup.GET;
      IF InvMgtSetup."Roll Up Via Repl. Path" THEN BEGIN
        //LocInvRollUpRTC.LoadRollUPLines(CurrProcUnit, PlanningStartDate);
        LocInvRollUpRTC.LoadProcUnit(CurrProcUnit);
        LocInvRollUpRTC.RUN;
      END ELSE
        ERROR(Text001);
    END;

    PROCEDURE CalcPageQuantities@1240020001();
    VAR
      ProcUnit2@1240020000 : Record 14000555;
    BEGIN
      ProcUnit2.GET("Location Code", "Item No.", "Variant Code");
      ProcUnit2.COPYFILTERS(Rec);

      ProcUnit2.SETFILTER("Location Filter", "Location Code");
      ProcUnit2.CALCFIELDS(Inventory,"Qty. on Assy. Order","Qty. on Assy. Order FC");
      QtyInv := ProcUnit2.Inventory;
      QtyAssemblyOrder := ProcUnit2."Qty. on Assy. Order";
      QtyAssemblyFCLines := ProcUnit2."Qty. on Assy. Order FC";
    END;

    PROCEDURE LookUpSOLines@1240020003();
    VAR
      SalesLine@1240020000 : Record 37;
    BEGIN
      SalesLine.SETRANGE("Document Type", SalesLine."Document Type"::Order);
      SalesLine.SETFILTER("Location Code", UBP.GetLocationFilter(Rec,FALSE));
      SalesLine.SETRANGE(Type, SalesLine.Type::Item);
      SalesLine.SETRANGE("No.", "Item No.");
      SalesLine.SETFILTER("Variant Code", "Variant Code");
      SalesLine.SETRANGE("Drop Shipment", FALSE);
      SalesLine.SETFILTER("Outstanding Qty. (Base)", '<>%1', 0);
      PAGE.RUN(0, SalesLine);
    END;

    PROCEDURE ShowProdOrders@1240030014();
    VAR
      ProcUnit2@1240020000 : Record 14000555;
    BEGIN
      ProcUnit2.COPYFILTERS(Rec);
      ProcUnit2.SETFILTER("Location Filter", "Location Code");
      ProcUnit2.SETFILTER("Prod. Order Status Filter", UBP.GetProductionStatusFilter());
      PAGE.RUNMODAL(PAGE::"Assy. Prod. Total", ProcUnit2);
    END;

    PROCEDURE ShowComp@1240030015();
    VAR
      ProcUnit2@1240020000 : Record 14000555;
    BEGIN
      ProcUnit2.COPYFILTERS(Rec);
      ProcUnit2.SETFILTER("Location Filter", "Location Code");
      ProcUnit2.SETFILTER("Prod. Order Status Filter", UBP.GetProductionStatusFilter());
      PAGE.RUNMODAL(PAGE::"Assy. Prod. Comp. Total",ProcUnit2);
    END;

    LOCAL PROCEDURE ShowAssyFCLines@1240020000();
    VAR
      AssyFCLine@1240020000 : Record 14002667;
    BEGIN
      AssyFCLine.SETRANGE("Assy. Location Code", "Location Code");
      AssyFCLine.SETRANGE("Assy. Item No.", "Item No.");
      AssyFCLine.SETRANGE("Assy. Variant Code", "Variant Code");
      AssyFCLine.SETFILTER("Required Date", GETFILTER("Date Filter"));
      PAGE.RUNMODAL(PAGE::"Assy. Forecast Lines", AssyFCLine);
    END;

    LOCAL PROCEDURE ShowAssyOrders@1240020005();
    VAR
      AssyHeader@1240020000 : Record 900;
    BEGIN
      AssyHeader.SETRANGE("Location Code", "Location Code");
      AssyHeader.SETRANGE("Item No.", "Item No.");
      AssyHeader.SETRANGE("Variant Code", "Variant Code");
      AssyHeader.SETFILTER("Due Date", GETFILTER("Date Filter"));
      PAGE.RUNMODAL(0, AssyHeader);
    END;

    BEGIN
    END.
  }
}

