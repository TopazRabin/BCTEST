OBJECT Page 14000551 Surplus Inventory Factbox
{
  OBJECT-PROPERTIES
  {
    Date=01/27/21;
    Time=[ 8:28:09 AM];
    Modified=Yes;
    Version List=UBP2.99.01;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Surplus Inventory;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table14000584;
    PageType=ListPart;
    OnFindRecord=VAR
                   SugOrderHeader@1240020001 : Record 14000565;
                   SugTranOrderHeader@1240020002 : Record 14000592;
                   SurplusSourceDocTypeText@1240020003 : Text;
                 BEGIN
                   // set filter group to manipulate the fields to pass additional information
                   FILTERGROUP(4);

                   TransferToLocation := GETFILTER("Transfer To Location Code");

                   IF EVALUATE(OutStandingQtyBase, GETFILTER("On Hand Qty. (Base)")) THEN;
                   IF EVALUATE(TransferQtyBase, GETFILTER("Surplus Quantity (Base)")) THEN;

                   // mapped option strings match
                   SurplusSourceDocTypeText := UPPERCASE(GETFILTER("Replenishment Source Type"));
                   CASE SurplusSourceDocTypeText OF
                     'VENDOR':
                     //1: //SurplusSourceDocType::"Sug. Order":
                     BEGIN
                       SurplusSourceDocType := SurplusSourceDocType::"Sug. Order";
                       BuyFromVendorNo := GETFILTER("Buy-from Vendor No.");
                       SuggOrderNo := GETFILTER("Suggested Order No.");
                       IF SugOrderHeader.GET(BuyFromVendorNo, SuggOrderNo) THEN
                         IF EVALUATE(SuggOrderLineNo, GETFILTER("Suggested Order Line No.")) THEN;
                     END;
                     'LOCATION':
                     //2: //SurplusSourceDocType::"Sug. Inv. Repl.":
                     BEGIN
                       //BuyFromVendorNo := GETFILTER("Buy-from Vendor No.");
                       SurplusSourceDocType := SurplusSourceDocType::"Sug. Inv. Repl.";
                       SuggOrderNo := GETFILTER("Suggested Order No.");
                       IF SugTranOrderHeader.GET(SugTranOrderHeader."Document Type"::"Repl. Path", SuggOrderNo) THEN
                         IF EVALUATE(SuggOrderLineNo, GETFILTER("Suggested Order Line No.")) THEN;
                     END;
                     ELSE BEGIN
                       SurplusSourceDocType := SurplusSourceDocType::"Tran. Order";
                     END;
                   END;

                   QtyNeededBase := (OutStandingQtyBase - TransferQtyBase);

                   // reset the form level filters to make sure they are not used for FIND
                   SETRANGE("Transfer To Location Code");
                   SETRANGE("Buy-from Vendor No.");
                   SETRANGE("Replenishment Source Type");
                   SETRANGE("Suggested Order No.");
                   SETRANGE("Suggested Order Line No.");
                   SETRANGE("On Hand Qty. (Base)");
                   SETRANGE("Surplus Quantity (Base)");
                   FILTERGROUP(0);
                   EXIT(FIND(Which));
                 END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1240030000;1;Group  ;
                GroupType=Repeater }

    { 1240030001;2;Field  ;
                ToolTipML=ENU=Specifies a location code for the warehouse or distribution center where your items are handled and stored before being sold.;
                SourceExpr="Location Code" }

    { 1240030003;2;Field  ;
                CaptionML=ENU=Item;
                ToolTipML=ENU=Item number;
                SourceExpr="Item No.";
                Visible=FALSE }

    { 1240030005;2;Field  ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 1240020004;2;Field  ;
                CaptionML=ENU=Nonstock;
                ToolTipML=ENU=Nonstock and no forecast;
                SourceExpr="Nonstock Item" }

    { 1240020000;2;Field  ;
                CaptionML=ENU=Qty.;
                ToolTipML=ENU=Surplus inventory quantity;
                SourceExpr="Outstanding Surplus Qty (Base)";
                OnDrillDown=BEGIN
                              ShowSurplusAvailable;
                            END;
                             }

    { 1240030009;2;Field  ;
                ToolTipML=ENU=Purchasing unit of measure;
                SourceExpr="Unit of Measure Code";
                Visible=FALSE }

    { 1240030015;2;Field  ;
                ToolTipML=ENU=Surplus inventory available beyond LTH date;
                SourceExpr="Surplus Date";
                Visible=FALSE }

    { 1240020006;2;Field  ;
                ToolTipML=ENU=First date of sales order shipment;
                SourceExpr="First Stocked Date";
                Visible=FALSE }

    { 1240030017;2;Field  ;
                CaptionML=ENU=To Xfer;
                ToolTipML=ENU=Quantity to be transferred from this location;
                SourceExpr="Quantity To Transfer";
                OnDrillDown=BEGIN
                              ShowSurplusAvailable;
                            END;
                             }

    { 1240030019;2;Field  ;
                ToolTipML=ENU=Quantity transferred from this location;
                SourceExpr="Quantity Transferred";
                Visible=FALSE }

    { 1240030021;2;Field  ;
                SourceExpr="Date Updated";
                Visible=FALSE }

    { 1240020002;2;Field  ;
                ToolTipML=ENU=Item class based on COGS or percentage of items;
                SourceExpr="Item Class Description";
                Visible=FALSE }

    { 1240030028;2;Field  ;
                ToolTipML=ENU=Ranking code based on sales order 'hits';
                SourceExpr="Ranking Code";
                Visible=FALSE }

    { 1000000001;2;Field  ;
                Name=EnterpriseInventory;
                CaptionML=ENU=Enterprise Inventory;
                DecimalPlaces=0:0;
                SourceExpr=ItemManagement.CalcItemSubsEnterPriseInventory("Item No.") }

    { 1000000000;2;Field  ;
                Name=Months of Stock;
                DecimalPlaces=1:1;
                SourceExpr=ItemManagement.CalctemSubsMonthOfStock("Item No.") }

  }
  CODE
  {
    VAR
      TransferToLocation@1006 : Code[10];
      OutStandingQtyBase@1007 : Decimal;
      TransferQtyBase@1008 : Decimal;
      QtyPerUOM@1009 : Decimal;
      QtyNeededBase@1005 : Decimal;
      BuyFromVendorNo@1004 : Code[20];
      SuggOrderNo@1003 : Code[20];
      SuggOrderLineNo@1002 : Integer;
      SummarizeVariant@1000 : Boolean;
      SurplusSourceDocType@1240020001 : 'Surplus Calc.,Sug. Order,Sug. Inv. Repl.,Sug. Inv. Bal.,Tran. Order';
      ItemManagement@1000000000 : Codeunit 50020;

    PROCEDURE ShowSurplusAvailable@1240020000();
    VAR
      SurplusAvailable@1000 : Page 14000532;
      SuggOrdLine@1240020000 : Record 14000566;
    BEGIN
      CLEAR(SurplusAvailable);
      SurplusAvailable.SETTABLEVIEW(Rec);
      IF NOT SummarizeVariant THEN
        SurplusAvailable.LoadInfo(
          "Item No.","Variant Code",TransferToLocation,QtyNeededBase,
          BuyFromVendorNo, SurplusSourceDocType, SuggOrderNo, SuggOrderLineNo)
      ELSE
        SurplusAvailable.LoadInfo(
          "Item No.",'',TransferToLocation,QtyNeededBase,
          BuyFromVendorNo, SurplusSourceDocType, SuggOrderNo, SuggOrderLineNo);
      SurplusAvailable.RUNMODAL;
      IF SuggOrdLine.GET(BuyFromVendorNo, SuggOrderNo,SuggOrderLineNo) THEN BEGIN
        SuggOrdLine.ReCalcLineTotals;
        SuggOrdLine.MODIFY(FALSE);
      END;
    END;

    BEGIN
    END.
  }
}

