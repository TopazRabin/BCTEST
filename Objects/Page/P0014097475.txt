OBJECT Page 14097475 Location Inventory Roll UP RTC
{
  OBJECT-PROPERTIES
  {
    Date=11/01/20;
    Time=12:00:00 PM;
    Version List=UBP3.03;
  }
  PROPERTIES
  {
    CaptionML=ENU=Location Inventory Roll UP;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table14000583;
    PageType=List;
    SourceTableTemporary=Yes;
    OnAfterGetCurrRecord=BEGIN
                           SetReplenishmentTabData();
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1240030048;1 ;Action    ;
                      CaptionML=ENU=&Item;
                      ApplicationArea=#All;
                      Promoted=No;
                      Image=NewItem;
                      OnAction=BEGIN
                                 ViewItem;
                               END;
                                }
      { 1240030050;1 ;Action    ;
                      CaptionML=ENU=&Procurement Unit;
                      ApplicationArea=#All;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=BankAccountRec;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ViewProcUnit;
                               END;
                                }
      { 1240020001;1 ;Action    ;
                      Name=Forecast_Horizon;
                      CaptionML=ENU=&Forecast View (Current);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CalculateRegenerativePlan;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF HorizonDate = 0D THEN
                                   HorizonDate := UBP.GetLeadTimeHorizHub(ProcUnit);
                                 ViewForecast(HorizonDate);
                               END;
                                }
      { 1240030062;1 ;Action    ;
                      Name=View_Forecast;
                      CaptionML=ENU=&View Forecast (Proc Unit);
                      Promoted=Yes;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=CalculateRegenerativePlan;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF ProcUnit.GET("Individual Location Code","Item No.","Variant Code") THEN
                                   ViewForecast(UBP.GetLeadTimeHoriz(ProcUnit));
                               END;
                                }
      { 1240030063;1 ;Action    ;
                      CaptionML=ENU=Item &Usage;
                      Promoted=Yes;
                      Image=ItemTrackingLedger;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ViewItemUsage;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1240030061;1 ;Action    ;
                      CaptionML=ENU=&Previous Increment;
                      ApplicationArea=#All;
                      Promoted=No;
                      Image=PreviousSet;
                      OnAction=BEGIN
                                 CalculateIncrementStep('-');
                               END;
                                }
      { 1240030060;1 ;Action    ;
                      ShortCutKey=Ctrl+N;
                      CaptionML=ENU=&Next Increment;
                      ApplicationArea=#All;
                      Promoted=No;
                      Image=NextSet;
                      OnAction=BEGIN
                                 CalculateIncrementStep('+');
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1240020013;1;Group  ;
                Name=Horizon;
                GroupType=Group }

    { 1240030046;2;Field  ;
                CaptionML=ENU=Horizon Date;
                ApplicationArea=#All;
                SourceExpr=HorizonDate;
                Importance=Promoted;
                OnValidate=BEGIN
                             ProcUnit.GET("Individual Location Code","Item No.","Variant Code");
                             IF HorizonDate = 0D THEN
                               HorizonDate := UBP.GetLeadTimeHorizHub(ProcUnit);
                             LoadRollUPLines(ProcUnit,HorizonDate);
                           END;
                            }

    { 1240030000;1;Group  ;
                GroupType=Repeater }

    { 1240030001;2;Field  ;
                CaptionML=ENU=Location;
                ToolTipML=ENU=The procurment unit's location.;
                ApplicationArea=#All;
                SourceExpr="Individual Location" }

    { 1240030003;2;Field  ;
                ToolTipML=ENU=The depth of the replenishment path.;
                ApplicationArea=#All;
                DecimalPlaces=0:0;
                SourceExpr=Level;
                Visible=FALSE }

    { 1240030005;2;Field  ;
                ToolTipML=ENU=The procurment unit's stock setting.;
                ApplicationArea=#All;
                SourceExpr="Nonstock Item" }

    { 1240030007;2;Field  ;
                ToolTipML=ENU=The procurment unit's replenishment type.;
                ApplicationArea=#All;
                SourceExpr="Repl. Source Type";
                Visible=FALSE }

    { 1240030009;2;Field  ;
                Name=Forecast;
                CaptionML=ENU=Forecast;
                ToolTipML=ENU=Hub location's forecast. Usage from all spokes is used to generate this location's forecast.;
                ApplicationArea=#All;
                SourceExpr="Rolled Up Forecast" }

    { 1240030017;2;Field  ;
                CaptionML=ENU=Spoke Forecast;
                ToolTipML=ENU=The Spoke Forecast represents the forecast for the spoke locations.  This forecast has multiple options depending on "Hub to Spoke Forecast Calculation" setting in advanced forecasting setup.;
                ApplicationArea=#All;
                SourceExpr="Prev. Level Forecast" }

    { 1240030011;2;Field  ;
                ToolTipML=ENU=Hub location's auto-forecast adjust.  Demand from all spokes is used to generate this location's auto-forecast adjustment.;
                ApplicationArea=#All;
                SourceExpr="Auto Forc. Adj";
                Visible=FALSE }

    { 1240030013;2;Field  ;
                ToolTipML=ENU=Accumulating total of the auto-forecast adjust from all spoke locations.  Exceptions when this exceeds the hub's forecast.;
                ApplicationArea=#All;
                SourceExpr="Prev. Level Auto Forc. Adj.";
                Visible=FALSE }

    { 1240030015;2;Field  ;
                ToolTipML=ENU=If the hub's auto-forecast adjust is higher than the spoke this is zero.  This calculated field helps to determine if an adjustment must be made to the previous level forecast to handle differences between the hub's forecast and the accumulation of the spoke forecast (previous level forecast).;
                ApplicationArea=#All;
                SourceExpr="Net Auto Forc. Adj.";
                Visible=FALSE }

    { 1240020004;2;Field  ;
                ToolTipML=ENU=If the spoke forecast is from accumulation then this represents an adjustment to that forecast becuase it is larger than the hub.;
                ApplicationArea=#All;
                SourceExpr="Forced Forc. Adj.";
                Visible=FALSE }

    { 1240020003;2;Field  ;
                ToolTipML=ENU=This location's individual forecast.  It is the usage from the single location with the item usage record's currently selected formula.  This includes the Auto-Forecast Adjust (Demand and Consumed Netting), Collaborative, Forecast adjustments, and Forecast for the single location.;
                ApplicationArea=#All;
                SourceExpr="Single Loc. Adj. Forecast";
                Visible=FALSE;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              MESSAGE("Single Loc. Message");
                            END;
                             }

    { 1240030019;2;Field  ;
                CaptionML=ENU=Net Inv. Pos.;
                ToolTipML=ENU=The net inventory position (including forecast) for this location with the spoke usage included.  The same as the forecast view.;
                ApplicationArea=#All;
                SourceExpr="Net Exp. Inv." }

    { 1240030021;2;Field  ;
                CaptionML=ENU=Loc. Net Exp. Inv.;
                ToolTipML=ENU=This location's share of the the net inventory position after hub and spoke calculations.  It represents the expected position of this individual location taking into account forecast, adjustments, and fixed quantities.;
                ApplicationArea=#All;
                SourceExpr="Adj. Net Exp. Inv.";
                Visible=FALSE }

    { 1240020009;2;Field  ;
                CaptionML=ENU=Loc. Inv. Pos.;
                ToolTipML=ENU=The Inventory position for the hub location after removing the spokeÂs forecast.;
                ApplicationArea=#All;
                SourceExpr="Loc. Exp. Inv." }

    { 1240030023;2;Field  ;
                ToolTipML=ENU=The individual location's specific forecast.  This will be the forecast less the accumulated forecast if the hub is greater than the spoke.  If the foreced forecast adjustment is active then this is calculated based on the individual location's usage.;
                ApplicationArea=#All;
                SourceExpr="Loc. Forecast";
                Visible=FALSE }

    { 1240030025;2;Field  ;
                ToolTipML=ENU=Current demand calculation for this individual location.  This is the demand as it is seen from the forecast view.;
                ApplicationArea=#All;
                SourceExpr="Loc. Immediate Demand";
                Visible=FALSE }

    { 1240020006;2;Field  ;
                ToolTipML=ENU=Current component demand calculation for this individual location.  If forecasting consumption this value is not calculated and will be included in the immediate demand calculation.;
                ApplicationArea=#All;
                SourceExpr="Loc. Component Demand";
                Visible=FALSE }

    { 1240020000;2;Field  ;
                ApplicationArea=#All;
                SourceExpr="Loc. Transfer Demand";
                Visible=FALSE }

    { 1240020012;2;Field  ;
                ApplicationArea=#All;
                SourceExpr="Safety Stock Qty.";
                Visible=FALSE }

    { 1240030029;2;Field  ;
                ToolTipML=ENU=The individual location's target stock level after hub and spoke calculations.;
                ApplicationArea=#All;
                SourceExpr="Target Stock Level";
                Visible=FALSE }

    { 1240030031;2;Field  ;
                ToolTipML=ENU=The procurment unit's maximum inventory setting.;
                ApplicationArea=#All;
                SourceExpr="Max. Qty.";
                Visible=FALSE }

    { 1240020011;2;Field  ;
                SourceExpr="Min. Qty.";
                Visible=FALSE }

    { 1240030033;2;Field  ;
                ToolTipML=ENU="The procurement unit's additional stock qty. ";
                ApplicationArea=#All;
                SourceExpr="Additional Stock Qty.";
                Visible=FALSE }

    { 1240020010;2;Field  ;
                SourceExpr="Minimum Shelf Stock";
                Visible=FALSE }

    { 1240020015;2;Field  ;
                SourceExpr="Order Multiple";
                Visible=FALSE }

    { 1240020016;2;Field  ;
                SourceExpr="Order Minimum";
                Visible=FALSE }

    { 1240030037;2;Field  ;
                ToolTipML=ENU=The anticipated transfer out quantitiy from this location after hub and spoke calculations.;
                ApplicationArea=#All;
                SourceExpr="Transfer Out Qty." }

    { 1240030039;2;Field  ;
                ToolTipML=ENU=The anticipated transfer in quantitiy from the spoke location's replenishment settings.;
                ApplicationArea=#All;
                SourceExpr="Transfer In Qty." }

    { 1240020005;2;Field  ;
                ToolTipML=ENU=The current inbound supply quantity, both anticipated and committed on documents.  This calculation is part of the available to send logic for spoke replenishment.;
                ApplicationArea=#All;
                SourceExpr="Inbound Supply Quantity";
                Visible=FALSE }

    { 1240020002;2;Field  ;
                ToolTipML=ENU=The portion of the hub's inventory that is available to send to the spoke locations.  This is used directly in replenishment transfers.;
                ApplicationArea=#All;
                DecimalPlaces=0:1;
                SourceExpr="Avail. to Send" }

    { 1240030041;2;Field  ;
                ToolTipML=ENU=Represents the Qty. needed by this location and it's spokes.  When positive it represents a surplus position.;
                ApplicationArea=#All;
                SourceExpr=Surplus }

    { 1240030051;1;Group  ;
                CaptionML=ENU=Item }

    { 1240030043;2;Field  ;
                CaptionML=ENU=Item No.;
                ApplicationArea=#All;
                SourceExpr=ProcUnit."Item No.";
                Editable=FALSE }

    { 1240030057;2;Field  ;
                CaptionML=ENU=Description;
                ApplicationArea=#All;
                SourceExpr=ProcUnit.Description;
                Editable=FALSE }

    { 1240030052;2;Field  ;
                CaptionML=ENU=MinSOQ;
                ApplicationArea=#All;
                DecimalPlaces=0:2;
                SourceExpr=MinSOQ;
                Editable=FALSE }

    { 1240030055;2;Field  ;
                CaptionML=ENU=MaxSOQ;
                ApplicationArea=#All;
                DecimalPlaces=0:0;
                SourceExpr=MaxSOQ;
                Editable=FALSE }

    { 1240020008;0;Container;
                ContainerType=FactBoxArea }

    { 1240020014;1;Part   ;
                Name=LocInvRollForecastFB;
                CaptionML=ENU=Roll Up Factbox;
                SubPageView=SORTING(Rec. No.);
                SubPageLink=Rec. No.=FIELD(Rec. No.);
                PagePartID=Page14097485;
                PartType=Page;
                ShowFilter=No }

    { 1240020007;1;Part   ;
                ApplicationArea=#All;
                SubPageLink=Location Code=FIELD(Individual Location Code),
                            Item No.=FIELD(Item No.),
                            Variant Code=FIELD(Variant Code);
                PagePartID=Page14097479;
                PartType=Page }

  }
  CODE
  {
    VAR
      Item@1240030012 : Record 27;
      ItemUsage@1240030013 : Record 14000557;
      Location@1240030008 : Record 14;
      ProcUnit@1240030003 : Record 14000555;
      CreateLocInvRollUp@1240030004 : Codeunit 14000574;
      UBP@1240030007 : Codeunit 14000564;
      ForecastView@1240030011 : Page 14002661;
      Complete@1240030005 : Boolean;
      First@1240030006 : Boolean;
      HorizonDate@1240030000 : Date;
      MaxSOQ@1240030002 : Decimal;
      MinSOQ@1240030001 : Decimal;
      Text001@1240030010 : TextConst 'ENU=This is not a production item.';
      UseSurplusFactor@1240020000 : Boolean;
      UseExcessFactor@1240020001 : Boolean;

    PROCEDURE LoadProcUnit@1240030000(CurrProcUnit@1240030000 : Record 14000555);
    BEGIN
      ProcUnit.COPY(CurrProcUnit);
      ProcUnit.CALCFIELDS(Description);
      HorizonDate := UBP.GetLeadTimeHorizHub(ProcUnit);
      LoadRollUPLines(CurrProcUnit,HorizonDate);
    END;

    PROCEDURE LoadRollUPLines@1240030002(CurrProcUnit@1240030000 : Record 14000555;CurrHorizonDate@1240030001 : Date);
    BEGIN
      IF HorizonDate = 0D THEN
        HorizonDate := CurrHorizonDate;

      IF ProcUnit."Item No." <> CurrProcUnit."Item No." THEN BEGIN
        ProcUnit.COPY(CurrProcUnit);
        ProcUnit.CALCFIELDS(Description);
      END;

      CLEAR(CreateLocInvRollUp);
      CreateLocInvRollUp.SetUseSurplusFactor(UseSurplusFactor);
      CreateLocInvRollUp.SetUseExcessFactor(UseExcessFactor);
      CreateLocInvRollUp.SetGblOverrideCalcSingleLocForecast(TRUE);
      CreateLocInvRollUp.CalcRollUp(CurrProcUnit,FALSE,0,HorizonDate);
      CreateLocInvRollUp.GetMinMaxSOQ(MinSOQ,MaxSOQ);

      RESET;
      DELETEALL;
      Complete := FALSE;
      First := TRUE;
      REPEAT
        IF CreateLocInvRollUp.GetNextRollUpLine(Rec,First) THEN BEGIN
          INSERT;
          First := FALSE;
        END ELSE
          Complete := TRUE;
      UNTIL Complete;
    END;

    PROCEDURE GetMinMaxSOQ@1240030003(VAR CurrMinimumSOQ@1240030000 : Decimal;VAR CurrMaximumSOQ@1240030001 : Decimal;VAR CurrAddStockQty@1240030002 : Decimal);
    BEGIN
      CurrMinimumSOQ := MinSOQ;
      CurrMaximumSOQ := MaxSOQ;
    END;

    PROCEDURE ViewForecast@1240030006(CurrHorizonDate@1240020000 : Date);
    BEGIN
      CLEAR(ForecastView);
      ProcUnit.GET(
        "Individual Location Code","Item No.","Variant Code");
      ForecastView.SetLTHDate(CurrHorizonDate);
      ForecastView.SetProcUnitandSourceNo(ProcUnit,'');
      ForecastView.SetUseSurplusFactor(UseSurplusFactor);
      ForecastView.SetUseExcessFactor(UseExcessFactor);
      ForecastView.RUN;
    END;

    PROCEDURE ViewProcUnit@1240030001();
    BEGIN
      ProcUnit.SETRANGE("Item No.","Item No.");
      ProcUnit.SETRANGE("Variant Code","Variant Code");
      ProcUnit.GET("Individual Location Code","Item No.","Variant Code");
      PAGE.RUN(PAGE::"Procurement Unit Card",ProcUnit);
    END;

    PROCEDURE ViewItem@1240030004();
    BEGIN
      Item.GET("Item No.");
      PAGE.RUN(PAGE::"Item Card",Item);
    END;

    PROCEDURE ViewItemUsage@1240030005();
    BEGIN
      ItemUsage.RESET;
      ItemUsage.SETCURRENTKEY("Location Code","Item No.","Variant Code");
      ItemUsage.SETRANGE("Location Code","Individual Location Code");
      ItemUsage.SETRANGE("Item No.","Item No.");
      ItemUsage.SETRANGE("Variant Code","Variant Code");
      PAGE.RUN(PAGE::"Item Usage List",ItemUsage);
    END;

    PROCEDURE CalculateIncrementStep@1240020001(StepType@1240020000 : Text);
    VAR
      AdvForcSetup@1240020001 : Record 14002651;
      AFPProdTemplate@1240020002 : Record 14002677;
      ReviewCycleDays@1240020003 : Integer;
    BEGIN
      ProcUnit.GET("Individual Location Code","Item No.","Variant Code");
      CASE StepType OF
        '-','+':
        BEGIN
        END;
        ELSE
          ERROR('');
      END;

      IF (ProcUnit."Replenishment Source Type" = ProcUnit."Replenishment Source Type"::Location) THEN
        CreateLocInvRollUp.GetSourceUnit(ProcUnit);

      CASE ProcUnit."Replenishment Source Type" OF
        ProcUnit."Replenishment Source Type"::Vendor:
        BEGIN
          // review cycle
          ReviewCycleDays := UBP.GetReviewCycle(ProcUnit);
          IF ReviewCycleDays > 0 THEN
            HorizonDate :=
              CALCDATE(
                STRSUBSTNO(
                  '<' + StepType + '%1D>',ReviewCycleDays),HorizonDate);
        END;
        ProcUnit."Replenishment Source Type"::Production:
        BEGIN
          // produciton template increment
          IF Location.Code <> ProcUnit."Location Code" THEN
            Location.GET(ProcUnit."Location Code");
          IF AFPProdTemplate.GET(Location."AFP Prod. Template Name") THEN
            HorizonDate :=
              CALCDATE(
                STRSUBSTNO(
                  '<' + StepType + '%1D>',AFPProdTemplate."Planning Increment (Days)"),HorizonDate);
        END;
        ProcUnit."Replenishment Source Type"::Assembly:
        BEGIN
          // adv. forecasting setup assembly increment
          AdvForcSetup.GET;
          IF AdvForcSetup."Assembly Increment Days" > 0 THEN
            HorizonDate :=
              CALCDATE(
                STRSUBSTNO(
                  '<' + StepType + '%1D>',AdvForcSetup."Assembly Increment Days"),HorizonDate);
        END;
        // not allowed in roll-up
        ProcUnit."Replenishment Source Type"::Location:
        BEGIN
          // location increments
          IF ProcUnit."Maximum Inventory" = 0 THEN BEGIN
            IF ProcUnit."Maximum Days Supply" > 0 THEN
              HorizonDate :=
                CALCDATE(
                  STRSUBSTNO(
                    '<' + StepType + '%1D>',ProcUnit."Maximum Days Supply"),HorizonDate);
          END;
        END;
      END;
      LoadRollUPLines(ProcUnit,HorizonDate);
    END;

    LOCAL PROCEDURE SetReplenishmentTabData@1240020000();
    VAR
      SporadicTargetStock@1000000000 : Decimal;
      SafetyStockValue@1000000003 : Decimal;
      SafetyStockCaption@1000000002 : Text[50];
      NeedMessage@1240020001 : Text;
    BEGIN
      CurrPage.LocInvRollForecastFB.PAGE.SetReplenishmentInfo2(Rec);
    END;

    PROCEDURE SetUseSurplusFactor@1240020027(inUseSurplusFactor@1240020002 : Boolean);
    BEGIN
      UseSurplusFactor := inUseSurplusFactor;
    END;

    PROCEDURE SetUseExcessFactor@1240020048(inUseExcessFactor@1240020000 : Boolean);
    BEGIN
      UseExcessFactor := inUseExcessFactor;
    END;

    BEGIN
    END.
  }
}

