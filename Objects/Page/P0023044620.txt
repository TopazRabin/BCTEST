OBJECT Page 23044620 DSHIP Freight Quote Worksheet
{
  OBJECT-PROPERTIES
  {
    Date=03/21/19;
    Time=[ 8:29:05 AM];
    Version List=DSHIP2.2.2;
  }
  PROPERTIES
  {
    Editable=Yes;
    CaptionML=[ENU=Dynamic Ship Freight Quote;
               ESM=Cita de tarifa de Dynamic Ship;
               FRC=Taux de citation Dynamic Ship;
               ENC=Dynamic Ship Freight Quote];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table23044603;
    SourceTableView=SORTING(Carrier Name,Service);
    PageType=Worksheet;
    SourceTableTemporary=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Packing,Print;
                                ESM=Nuevo,proceso,Informe,Embalaje,Impresi¢n;
                                FRC=Nouveau,Processus,Rapport,Emballage,Impression;
                                ENC=New,Process,Report,Packing,Print];
    ShowFilter=No;
    OnQueryClosePage=BEGIN
                       EXIT(TRUE);
                     END;

    ActionList=ACTIONS
    {
      { 1000000029;  ;ActionContainer;
                      CaptionML=ENU=Rate Quote;
                      ActionContainerType=ActionItems }
      { 1000000030;1 ;Action    ;
                      Name=acGetQuotes;
                      CaptionML=ENU=Get &Quotes;
                      Promoted=Yes;
                      Visible=TRUE;
                      Enabled=TRUE;
                      PromotedIsBig=Yes;
                      Image=SuggestItemPrice;
                      PromotedCategory=Process;
                      RunPageMode=Edit;
                      OnAction=BEGIN
                                 getQuotes();
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;;Container;
                ContainerType=ContentArea }

    { 1000000025;1;Group  ;
                GroupType=Group }

    { 1000000002;2;Group  ;
                GroupType=Group }

    { 1000000004;3;Field  ;
                CaptionML=ENU=Quote Information;
                Style=Strong;
                StyleExpr=TRUE }

    { 1000000024;3;Field  ;
                Name=edtPkgTemplate;
                CaptionML=ENU=Package Template;
                SourceExpr=codPkgTmpl;
                TableRelation="IWX License Plate Template";
                Editable=TRUE }

    { 1000000027;3;Field  ;
                Name=edtBoxCount;
                CaptionML=ENU=Boxes;
                SourceExpr=iBoxCount;
                Editable=TRUE;
                OnValidate=BEGIN
                             calcWeightPerBox();
                           END;
                            }

    { 1000000003;3;Field  ;
                Name=edtWeight;
                CaptionML=ENU=Weight per Box;
                SourceExpr=dBoxWeight;
                CaptionClass='1,5,,' + getWeightCaption();
                Editable=TRUE;
                OnValidate=BEGIN
                             bCalcWeight := FALSE;
                           END;
                            }

    { 1000000028;3;Field  ;
                Lookup=Yes;
                SourceExpr=sWarning;
                Enabled=FALSE;
                Editable=FALSE;
                MultiLine=No;
                Style=Strong;
                StyleExpr=TRUE;
                ShowCaption=No }

    { 1000000023;2;Group  ;
                GroupType=Group }

    { 1000000026;3;Field  ;
                CaptionML=[ENU=Ship To;
                           ESM=A;
                           FRC=Ú;
                           ENC=To];
                Style=Strong;
                StyleExpr=TRUE }

    { 1000000035;3;Field  ;
                Lookup=Yes;
                CaptionML=ENU=Company;
                SourceExpr=asToAddress[1];
                Enabled=FALSE;
                Editable=FALSE;
                ShowCaption=No }

    { 1000000034;3;Field  ;
                Lookup=Yes;
                CaptionML=ENU=Street;
                SourceExpr=STRSUBSTNO('%1 %2',asToAddress[2],asToAddress[3]);
                Enabled=FALSE;
                Editable=FALSE;
                ShowCaption=No }

    { 1000000032;3;Field  ;
                Lookup=Yes;
                CaptionML=ENU=City;
                SourceExpr=STRSUBSTNO('%1, %2',asToAddress[4], asToAddress[5]);
                Enabled=FALSE;
                Editable=FALSE;
                ShowCaption=No }

    { 1000000001;1;Group  ;
                CaptionML=ENU=Rate Quotes;
                GroupType=Group }

    { 1000000006;2;Group  ;
                Editable=FALSE;
                GroupType=Repeater }

    { 1000000007;3;Field  ;
                SourceExpr="License Plate No.";
                Visible=FALSE }

    { 1000000008;3;Field  ;
                SourceExpr=ID;
                Visible=FALSE }

    { 1000000009;3;Field  ;
                SourceExpr="Carrier Name" }

    { 1000000010;3;Field  ;
                SourceExpr="Carrier Account ID";
                Visible=FALSE }

    { 1000000011;3;Field  ;
                SourceExpr="Order ID";
                Visible=FALSE }

    { 1000000021;3;Field  ;
                SourceExpr=Service }

    { 1000000031;3;Field  ;
                SourceExpr="Rate Price" }

    { 1000000012;3;Field  ;
                SourceExpr="Rate Cost" }

    { 1000000013;3;Field  ;
                SourceExpr=Currency }

    { 1000000014;3;Field  ;
                SourceExpr="Retail Rate";
                Visible=FALSE }

    { 1000000015;3;Field  ;
                SourceExpr="Retail Currency";
                Visible=FALSE }

    { 1000000016;3;Field  ;
                SourceExpr="List Rate";
                Visible=FALSE }

    { 1000000017;3;Field  ;
                SourceExpr="List Currency";
                Visible=FALSE }

    { 1000000018;3;Field  ;
                SourceExpr="Delivery Days" }

    { 1000000019;3;Field  ;
                SourceExpr="Delivery Date" }

    { 1000000020;3;Field  ;
                SourceExpr="Delivery Date Guaranteed" }

    { 1000000022;1;Group  ;
                GroupType=Group }

    { 1000000005;2;Part   ;
                Name=pageMessages;
                CaptionML=[ENU=Carrier Messages;
                           ESM=Mensajes portadores;
                           FRC=Messages des transporteurs;
                           ENC=Carrier Messages];
                PagePartID=Page23044604;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page }

  }
  CODE
  {
    VAR
      recDShipSetup@1000000005 : Record 23044600;
      optDocType@1000000010 : Option;
      codDocNo@1000000009 : Code[20];
      codPkgTmpl@1000000007 : Code[20];
      asToAddress@1000000003 : ARRAY [12] OF Text[100];
      sWarning@1000000012 : Text;
      iBoxCount@1000000002 : Integer;
      dTotalWeight@1000000011 : Decimal;
      dBoxWeight@1000000001 : Decimal;
      tcWarningItemWeight@1000000006 : TextConst 'ENU=Some items do not have weight defined. This is an estimate.';
      bCalcWeight@1000000008 : Boolean;
      tcFailedRateQuote@1000000000 : TextConst 'ENU=Failed to get a quote from Easy Post.';

    PROCEDURE initPage@1000000000(poptDocType@1000000004 : Option;pcodDocNo@1000000003 : Code[20];VAR pasToAddress@1000000002 : ARRAY [12] OF Text[100];pdTotalWeight@1000000000 : Decimal;pbItemsHaveWeight@1000000001 : Boolean);
    BEGIN
      //<FUNC>
      //  Description: Initializes the page record
      //  Called From: Codeunit 23044604
      //  Side Effect: None
      //</FUNC>

      optDocType := poptDocType;
      codDocNo := pcodDocNo;
      asToAddress[1] := pasToAddress[1];
      asToAddress[2] := pasToAddress[2];
      asToAddress[3] := pasToAddress[3];
      asToAddress[4] := pasToAddress[4];
      asToAddress[5] := pasToAddress[5];
      asToAddress[6] := pasToAddress[6];
      asToAddress[7] := pasToAddress[7];
      asToAddress[8] := pasToAddress[8];
      dTotalWeight := pdTotalWeight;

      IF (NOT pbItemsHaveWeight) THEN BEGIN
        sWarning := tcWarningItemWeight;
      END; // if !pbItemsHaveWeight

      iBoxCount := 1;
      bCalcWeight := TRUE;
      calcWeightPerBox();
      recDShipSetup.GET;
      codPkgTmpl := recDShipSetup."Freight Quote Pkg. Tmpl. Code";
    END;

    LOCAL PROCEDURE calcWeightPerBox@1000000007();
    BEGIN
      //<FUNC>
      //  Description: Calculates shipment weight for each box
      //  Called From: This page (23044620)
      //  Side Effect: None
      //</FUNC>

      IF (bCalcWeight) THEN
        dBoxWeight := dTotalWeight / iBoxCount;
    END;

    LOCAL PROCEDURE getQuotes@1000000022();
    VAR
      ltrecAPIParam@1000000005 : TEMPORARY Record 23044623;
      ltrecRateBuffer@1000000002 : TEMPORARY Record 23044603;
      ltrecShipMsgBuffer@1000000001 : TEMPORARY Record 23044604;
      lcuRateMgmt@1000000000 : Codeunit 23044602;
      lcuRateSingleton@1000000004 : Codeunit 23044608;
    BEGIN
      //<FUNC>
      //  Description: Get the rates based on current box count and weight
      //  Called From: This page (23044620)
      //  Side Effect:
      //</FUNC>

      lcuRateSingleton.clearAll();

      ltrecAPIParam.INIT();
      ltrecAPIParam."Quote Box Count" := iBoxCount;
      ltrecAPIParam."Quote Box Weight" := dBoxWeight;
      ltrecAPIParam."License Plate No." := codPkgTmpl;
      lcuRateMgmt.buildAPIParam(ltrecAPIParam, ltrecAPIParam.Action::GetQuotes, optDocType, codDocNo);

      lcuRateMgmt.callFreightIntegration(ltrecAPIParam);

      IF (ltrecAPIParam."Object ID" = '') THEN
        ERROR(tcFailedRateQuote);

      lcuRateSingleton.getRateBuffer(ltrecRateBuffer);
      lcuRateSingleton.getShipMessages(ltrecShipMsgBuffer);

      CurrPage.pageMessages.PAGE.populateMessages(ltrecShipMsgBuffer);

      Rec.RESET;
      Rec.DELETEALL;
      ltrecRateBuffer.RESET;

      IF (ltrecRateBuffer.FINDSET(FALSE)) THEN BEGIN
        REPEAT
            Rec := ltrecRateBuffer;
            Rec.INSERT(FALSE);
        UNTIL(ltrecRateBuffer.NEXT=0);
      END; // if ltrecRateBuffer.FINDSET

      Rec.RESET;
      Rec.SETCURRENTKEY("Carrier Name", Service);
      IF (Rec.FINDSET()) THEN ;

      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE getWeightCaption@1000000008() rtxtUOM : Text;
    BEGIN
      //<FUNC>
      //  Description: Returns the configured weight UOM for quoting
      //  Called From: This page (P23044620)
      //  Side Effect: None
      //</FUNC>

      recDShipSetup.GET();
      rtxtUOM := 'Weight (' + recDShipSetup."Freight Quote Weight UOM Code" + ') per Box';
    END;

    BEGIN
    {
      ************************
      Copyright Notice
      This objects content is copyright of Insight Works 2011.  All rights reserved.
      Any redistribution or reproduction of part or all of the contents in any form is prohibited.
      ************************
    }
    END.
  }
}

