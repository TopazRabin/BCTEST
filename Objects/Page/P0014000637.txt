OBJECT Page 14000637 Receive Line Scanning Picture
{
  OBJECT-PROPERTIES
  {
    Date=06/28/17;
    Time=12:00:00 PM;
    Version List=SE0.54.10;
  }
  PROPERTIES
  {
    CaptionML=ENU=Receive Line Scanning;
    PageType=Card;
    TimerUpdate=1;
    OnOpenPage=BEGIN
                 SetCurrentValues;
                 ReceiveLineScanningMgt.OnOpenFormCode;
                 GetCurrentValues;
               END;

    OnQueryClosePage=BEGIN
                       IF ReceiveControl."Order Open" AND ReceiveStation."Confirm Rec. Line Scan. Close" THEN
                         EXIT(CONFIRM(Text048))
                       ELSE
                         EXIT(TRUE);
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 38      ;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 41      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Card;
                      Image=EditLines;
                      OnAction=BEGIN
                                 SetCurrentValues;
                                 ReceiveLineScanningMgt.ShowCard;
                                 GetCurrentValues;
                               END;
                                }
      { 19      ;2   ;Action    ;
                      CaptionML=ENU=Print Item Label;
                      OnAction=BEGIN
                                 SetCurrentValues;
                                 ReceiveLineScanningMgt.PrintReceiveLineLabel;
                                 GetCurrentValues;
                               END;
                                }
      { 6       ;2   ;Action    ;
                      ShortCutKey=Ctrl+I;
                      CaptionML=ENU=View Item Action;
                      OnAction=BEGIN
                                 SetCurrentValues;
                                 ReceiveLineScanningMgt.ViewItemAction;
                                 GetCurrentValues;
                               END;
                                }
      { 1240030100;2 ;ActionGroup;
                      CaptionML=ENU=De&fault }
      { 1240030101;3 ;Action    ;
                      CaptionML=ENU=Option;
                      OnAction=BEGIN
                                 ReceiveStation.TESTFIELD("Default F3 Option");

                                 SetCurrentValues;
                                 ReceiveLineScanningMgt.DefaultOption(ReceiveStation."Default F3 Option");
                                 GetCurrentValues;
                               END;
                                }
      { 1240030102;3 ;Action    ;
                      ShortCutKey=Shift+F3;
                      CaptionML=ENU=Shift Option;
                      OnAction=BEGIN
                                 ReceiveStation.TESTFIELD("Default Shift+F3 Option");

                                 SetCurrentValues;
                                 ReceiveLineScanningMgt.DefaultOption(ReceiveStation."Default Shift+F3 Option");
                                 GetCurrentValues;
                               END;
                                }
      { 1240030103;3 ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=ENU=Ctrl Option;
                      OnAction=BEGIN
                                 ReceiveStation.TESTFIELD("Default Ctrl+F3 Option");

                                 SetCurrentValues;
                                 ReceiveLineScanningMgt.DefaultOption(ReceiveStation."Default Ctrl+F3 Option");
                                 GetCurrentValues;
                               END;
                                }
      { 1240030104;3 ;Action    ;
                      ShortCutKey=Alt+F3;
                      CaptionML=ENU=Alt Option;
                      OnAction=BEGIN
                                 ReceiveStation.TESTFIELD("Default Alt+F3 Option");

                                 SetCurrentValues;
                                 ReceiveLineScanningMgt.DefaultOption(ReceiveStation."Default Alt+F3 Option");
                                 GetCurrentValues;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 20  ;1   ;Group     ;
                CaptionML=ENU=Buy-from Address }

    { 5   ;2   ;Field     ;
                SourceExpr=FormatSource;
                Editable=FALSE;
                MultiLine=Yes;
                Style=Strong;
                StyleExpr=TRUE }

    { 9   ;2   ;Field     ;
                SourceExpr=ReceiveControl."Ship-from Name";
                Editable=FALSE }

    { 11  ;2   ;Field     ;
                SourceExpr=ReceiveControl."Ship-from Address";
                Editable=FALSE }

    { 13  ;2   ;Field     ;
                SourceExpr=ReceiveControl."Ship-from Address 2";
                Editable=FALSE }

    { 15  ;2   ;Field     ;
                SourceExpr=ReceiveControl."Ship-from City" + ',' + ReceiveControl."Ship-from State" + '  ' + ReceiveControl."Ship-from ZIP Code";
                Editable=FALSE }

    { 8   ;1   ;Field     ;
                CaptionML=ENU=Receive No.;
                SourceExpr=Receive."No.";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=TRUE }

    { 3   ;1   ;Field     ;
                CaptionML=ENU=Order;
                DecimalPlaces=0:0;
                SourceExpr=ReceiveControl."Order Message";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=TRUE }

    { 4   ;1   ;Field     ;
                CaptionML=ENU=Receive;
                DecimalPlaces=0:0;
                SourceExpr=ReceiveControl."Receive Message";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=TRUE }

    { 17  ;1   ;Field     ;
                SourceExpr=ReceiveControl."Display Caption";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=TRUE }

    { 18  ;1   ;Field     ;
                Name=ScaleWeight;
                SourceExpr=ReceiveControl."Display Value";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=TRUE }

    { 12  ;1   ;Field     ;
                SourceExpr=InputLine;
                Style=Strong;
                StyleExpr=TRUE;
                OnValidate=BEGIN
                             IF InputLine <> '' THEN BEGIN
                               SetCurrentValues;
                               ReceiveLineScanningMgt.ParseInput(InputLine);
                               GetCurrentValues;
                             END;
                               InputLineOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           SetCurrentValues;
                           ReceiveLineScanningMgt.ProcessLookup;
                           GetCurrentValues;

                           CurrPage.UPDATE;
                         END;
                          }

    { 21  ;1   ;Field     ;
                CaptionClass=FORMAT (ReceiveControl."Message Line");
                Editable=FALSE;
                MultiLine=Yes }

    { 31  ;1   ;Field     ;
                CaptionClass=FORMAT (ReceiveControl."Line Description");
                Editable=FALSE;
                Style=Strong;
                StyleExpr=TRUE }

    { 27  ;1   ;Field     ;
                CaptionML=ENU=Order Qty. Received;
                DecimalPlaces=0:5;
                SourceExpr=FORMAT(ReceiveControl."Received Order Qty. (Base)") + ' OF ' + FORMAT(ReceiveControl."Total Order Qty. (Base)");
                Editable=FALSE;
                Style=Strong;
                StyleExpr=TRUE }

    { 33  ;1   ;Field     ;
                CaptionML=ENU=Line Qty. Received;
                DecimalPlaces=0:5;
                SourceExpr=FORMAT(ReceiveControl."Received Line Qty. (Base)") + ' OF ' + FORMAT(ReceiveControl."Total Line Qty. (Base)");
                Editable=FALSE;
                Style=Strong;
                StyleExpr=TRUE }

    { 1240030000;1;Field  ;
                SourceExpr=Item.Picture }

  }
  CODE
  {
    VAR
      Receive@1240030000 : Record 14000601;
      ReceiveSetup@1240030001 : Record 14000607;
      ReceiveStation@1240030002 : Record 14000608;
      ReceiveControl@1240030008 : Record 14000611;
      Item@1240030004 : Record 27;
      ReceiveLineScanningMgt@1240030013 : Codeunit 14000605;
      InputLine@1240030014 : Text[250];
      TimerCount@1240030023 : Integer;
      CommandAlreadyReceived@1240030020 : Boolean;
      Text048@1240030026 : TextConst 'ENU=Close Receive Line Scanning';
      GlobalRecordsLoaded@1240030003 : Boolean;

    LOCAL PROCEDURE SetCurrentValues@1240030000();
    VAR
      ReceiveLine@1240030000 : Record 14000602;
    BEGIN
      IF GlobalRecordsLoaded THEN
        GetCurrentValues;

      ReceiveLineScanningMgt.SetValues(
        ReceiveControl,ReceiveSetup,ReceiveStation,Receive,ReceiveLine);
      GlobalRecordsLoaded := TRUE;
    END;

    LOCAL PROCEDURE GetCurrentValues@1240030001();
    VAR
      ReceiveLine@1240030000 : Record 14000602;
      CurrFormClose@1240030002 : Boolean;
      CurrFormScaleWeightUpdate@1240030001 : Boolean;
    BEGIN
      ReceiveLineScanningMgt.GetValues(
        ReceiveControl,ReceiveSetup,ReceiveStation,Receive,CurrFormClose,
        CurrFormScaleWeightUpdate);
      GlobalRecordsLoaded := FALSE;

      IF CurrFormClose THEN
        CurrPage.CLOSE;

      ReceiveLine.RESET;
      IF ReceiveControl."Receive Open" THEN
        ReceiveLine.SETRANGE("Receive No.",Receive."No.")
      ELSE
        ReceiveLine.SETRANGE("Receive No.",'X Y Z');

      IF (ReceiveControl."Input Type" = ReceiveControl."Input Type"::Item) AND
         (ReceiveControl."Input No." <> '')
      THEN BEGIN
        IF Item.GET(ReceiveControl."Input No.") THEN
          Item.CALCFIELDS(Picture)
        ELSE
          CLEAR(Item);
      END ELSE
        CLEAR(Item);

      IF CurrFormScaleWeightUpdate THEN;
    END;

    PROCEDURE OpenWithOrder@68(SetOpenSourceType@1240030000 : Integer;SetOpenSourceSubtype@1240030001 : Integer;SetOpenSourceID@1240030002 : Code[20];SetCloseWhenCloseOrder@1240030003 : Boolean);
    BEGIN
      ReceiveControl."Open Source Type" := SetOpenSourceType;
      ReceiveControl."Open Source Subtype" := SetOpenSourceSubtype;
      ReceiveControl."Open Source ID" := SetOpenSourceID;
      ReceiveControl."Close When Close Order" := SetCloseWhenCloseOrder;
    END;

    PROCEDURE ReceiveInputLine@1240030004(NewInputLine@1240030000 : Text[250]);
    BEGIN
      IF NOT CommandAlreadyReceived THEN BEGIN
        SetCurrentValues;
        ReceiveLineScanningMgt.OnOpenFormCode;
        GetCurrentValues;

        CommandAlreadyReceived := TRUE;
      END;

      SetCurrentValues;
      ReceiveLineScanningMgt.ParseInput(NewInputLine);
      GetCurrentValues;
    END;

    LOCAL PROCEDURE FormatSource@1240030002() : Text[1000];
    BEGIN
      IF GlobalRecordsLoaded THEN
        GetCurrentValues;

      EXIT(
        ReceiveControl.FormatSource(
          ReceiveControl."Source Type",ReceiveControl."Source Subtype",
          ReceiveControl."Multi Document No."));
    END;

    LOCAL PROCEDURE InputLineOnAfterValidate@19076879();
    BEGIN
      SetCurrentValues;
      ReceiveLineScanningMgt.UpdateDisplayValue;
      GetCurrentValues;

      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE InputLineOnAfterInput@19010624(VAR Text@19010625 : Text[1024]);
    BEGIN
      Text := UPPERCASE(Text);
    END;

    LOCAL PROCEDURE OnTimer@19019642();
    BEGIN
      IF (ReceiveStation."Scale Update Interval (second)" = 0) OR
         (ReceiveStation."Show What During Receive" <>
          ReceiveStation."Show What During Receive"::"Scale Weight")
      THEN
        EXIT;

      TimerCount := TimerCount + 1;
      IF TimerCount > ReceiveStation."Scale Update Interval (second)" THEN BEGIN
        TimerCount := 0;

        SetCurrentValues;
        ReceiveLineScanningMgt.UpdateScaleWeight;
        GetCurrentValues;
      END;
    END;

    BEGIN
    END.
  }
}

