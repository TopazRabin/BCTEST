OBJECT Page 14002661 Forecast View
{
  OBJECT-PROPERTIES
  {
    Date=02/22/21;
    Time=[ 3:50:00 PM];
    Modified=Yes;
    Version List=UBP3.03;
  }
  PROPERTIES
  {
    CaptionML=ENU=View Forecast;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table2000000026;
    SourceTableView=SORTING(Number)
                    ORDER(Ascending);
    PageType=List;
    ShowFilter=No;
    OnOpenPage=BEGIN
                 IF ProcUnit.Description = '' THEN
                   ProcUnit.CALCFIELDS(Description);
                 CurrPage.CAPTION := ProcUnit."Item No." + ' ' + ProcUnit."Variant Code" + ' ' + ProcUnit.Description;
                 AdvForSetup.GET;
                 InvMgtSetup.GET;
                 IF (AdvForSetup."Auto Forcast Adj. Option" = AdvForSetup."Auto Forcast Adj. Option"::"Lead Time Horizon") THEN BEGIN
                   AutoFCAdjustByHorizonActive := TRUE;
                   ExtTxtPrefix := 'H';
                 END;
                 IF (AdvForSetup."Auto Forcast Adj. Option" = AdvForSetup."Auto Forcast Adj. Option"::"Period and LTH") THEN BEGIN
                   AutoFCAdjustByHorizonActive := TRUE;
                   ExtTxtPrefix := 'P';
                 END;
                 DecCharacter := UBP.DecCharacter;
                 ProdStatFilter := UBP.GetProductionStatusFilter;
                 DispPlaces := InvMgtSetup."Item Usage Decimal Places";
                 IF DispPlaces = 0 THEN
                   DispPlaces := - 1;
                 IF MaxLineNo = 0 THEN
                 MaxLineNo := 19;

                 SETRANGE(Number, 1, MaxLineNo);

                 // Load Chart
                 ChartVisible := AdvForSetup."Forecast View Show Chart";
                 IF ForecastUserSetup.GET(USERID) THEN BEGIN
                   ChartVisible := ForecastUserSetup."Forecast View Show Chart";
                 END;
                 IF CURRENTCLIENTTYPE <> CLIENTTYPE::Windows THEN
                   ChartVisible := FALSE;

                 SingleLocExpInv := TRUE;
                 UseCalcPeriods := TRUE;
                 SetPeriodColumnsToDisplay;
                 GetPUCData;
                 CalcForecast;
                 SetReplenishmentTabData(ProcUnit);
                 CurrPage.AFPForecastChart.PAGE.SetProcUnit(ProcUnit."Location Code", ProcUnit."Item No.", ProcUnit."Variant Code");
                 SetVisibleColumns;
               END;

    OnFindRecord=BEGIN
                   EXIT(FIND(Which));
                 END;

    OnAfterGetRecord=BEGIN
                       // R2 does not filter integer correctly - Add check for value of Number
                       IF Number <> 0 THEN BEGIN
                         DisplayForecast;
                         TitleOnFormat;
                         CurrDisp1OnFormat;
                         CurrDisp2OnFormat;
                         CurrDisp3OnFormat;
                         CurrDisp4OnFormat;
                         CurrDisp5OnFormat;
                         CurrDisp6OnFormat;
                         CurrDisp7OnFormat;
                         CurrDisp8OnFormat;
                         CurrDisp9OnFormat;
                         CurrDisp10OnFormat;
                         CurrDisp11OnFormat;
                         CurrDisp12OnFormat;
                         CurrDisp13OnFormat;
                         CurrDisp14OnFormat;
                         CurrDisp15OnFormat;
                         CurrDisp16OnFormat;
                         CurrDisp17OnFormat;
                         CurrDisp18OnFormat;
                         CurrDisp19OnFormat;
                         CurrDisp20OnFormat;
                         CurrDisp21OnFormat;
                         CurrDisp22OnFormat;
                         CurrDisp23OnFormat;
                         CurrDisp24OnFormat;
                         CurrDisp25OnFormat;
                         CurrDisp26OnFormat;
                         CurrDisp27OnFormat;
                         CurrDisp28OnFormat;
                         CurrDisp29OnFormat;
                         CurrDisp30OnFormat;
                         CurrDisp31OnFormat;
                         CurrDisp32OnFormat;
                         CurrDisp33OnFormat;
                         CurrDisp34OnFormat;
                         CurrDisp35OnFormat;
                         CurrDisp36OnFormat;
                         CurrDisp37OnFormat;
                         CurrDisp38OnFormat;
                         CurrDisp39OnFormat;
                         CurrDisp40OnFormat;
                         CurrDisp41OnFormat;
                         CurrDisp42OnFormat;
                         CurrDisp43OnFormat;
                         CurrDisp44OnFormat;
                         CurrDisp45OnFormat;
                         CurrDisp46OnFormat;
                         CurrDisp47OnFormat;
                         CurrDisp48OnFormat;
                         CurrDisp49OnFormat;
                         CurrDisp50OnFormat;
                         CurrDisp51OnFormat;
                         CurrDisp52OnFormat;
                       END;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1240030042;1 ;Action    ;
                      CaptionML=ENU=Item;
                      ApplicationArea=#All;
                      Promoted=No;
                      Image=NewItem;
                      OnAction=VAR
                                 CurrItem@1240030000 : Record 27;
                               BEGIN
                                 CurrItem.RESET;
                                 CurrItem.SETRANGE("No.",ProcUnit."Item No.");
                                 PAGE.RUNMODAL(PAGE::"Item Card",CurrItem);
                               END;
                                }
      { 1240030041;1 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Procurement Unit;
                      ApplicationArea=#All;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=BankAccountRec;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 CurrProcUnit@1240030001 : Record 14000555;
                               BEGIN
                                 CurrProcUnit.RESET;
                                 CurrProcUnit.SETRANGE("Location Code",ProcUnit."Location Code");
                                 CurrProcUnit.SETRANGE("Item No.",ProcUnit."Item No.");
                                 CurrProcUnit.SETRANGE("Variant Code",ProcUnit."Variant Code");
                                 PAGE.RUNMODAL(PAGE::"Procurement Unit Card",CurrProcUnit);
                               END;
                                }
      { 1240030035;1 ;Action    ;
                      CaptionML=ENU=Item &Classification By Period;
                      ApplicationArea=#All;
                      Promoted=No;
                      Image=ImplementPriceChange;
                      OnAction=VAR
                                 CurrItemUsage@1240030000 : Record 14000557;
                               BEGIN
                                 CurrItemUsage.RESET;
                                 CurrItemUsage.SETCURRENTKEY(
                                   "Location Code","Item No.","Variant Code","Starting Date","Ending Date");
                                 CurrItemUsage.SETRANGE("Location Code",ProcUnit."Location Code");
                                 CurrItemUsage.SETRANGE("Item No.",ProcUnit."Item No.");
                                 CurrItemUsage.SETRANGE("Variant Code",ProcUnit."Variant Code");
                                 PAGE.RUNMODAL(PAGE::"Item Classification By Period",CurrItemUsage);
                               END;
                                }
      { 1240030040;1 ;Action    ;
                      CaptionML=ENU=Item &Ranking By Period;
                      ApplicationArea=#All;
                      Promoted=No;
                      Image=ImplementRegAbsence;
                      OnAction=VAR
                                 CurrItemUsage@1240030001 : Record 14000557;
                               BEGIN
                                 CurrItemUsage.RESET;
                                 CurrItemUsage.SETCURRENTKEY(
                                   "Location Code","Item No.","Variant Code","Starting Date","Ending Date");
                                 CurrItemUsage.SETRANGE("Location Code",ProcUnit."Location Code");
                                 CurrItemUsage.SETRANGE("Item No.",ProcUnit."Item No.");
                                 CurrItemUsage.SETRANGE("Variant Code",ProcUnit."Variant Code");
                                 PAGE.RUNMODAL(PAGE::"Item Ranking By Period",CurrItemUsage);
                               END;
                                }
      { 1240030036;1 ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Item &Usage;
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Image=ItemTrackingLedger;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 CurrItemUsage@1240030000 : Record 14000557;
                               BEGIN
                                 CurrItemUsage.RESET;
                                 CurrItemUsage.SETCURRENTKEY(
                                   "Location Code","Item No.","Variant Code","Starting Date","Ending Date");
                                 CurrItemUsage.SETRANGE("Location Code",ProcUnit."Location Code");
                                 CurrItemUsage.SETRANGE("Item No.",ProcUnit."Item No.");
                                 CurrItemUsage.SETRANGE("Variant Code",ProcUnit."Variant Code");
                                 CurrItemUsage.SETFILTER("Location Filter",UBP.GetLocationFilter(ProcUnit,SingleLocExpInv));
                                 PAGE.RUNMODAL(PAGE::"Item Usage List",CurrItemUsage);
                               END;
                                }
      { 1240030037;1 ;Action    ;
                      CaptionML=ENU=Vendor &Performance;
                      Promoted=No;
                      Image=MachineCenterLoad;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 CurrPostedVendPerfLine@1240030000 : Record 14000562;
                               BEGIN
                                 CurrPostedVendPerfLine.RESET;
                                 CurrPostedVendPerfLine.SETCURRENTKEY(
                                   "Location Code",Vendor,"Document No.","Document Line No.","Item No.","Variant Code");
                                 CurrPostedVendPerfLine.SETRANGE("Location Code",ProcUnit."Location Code");
                                 CurrPostedVendPerfLine.SETRANGE("Item No.",ProcUnit."Item No.");
                                 CurrPostedVendPerfLine.SETRANGE("Variant Code",ProcUnit."Variant Code");
                                 PAGE.RUNMODAL(PAGE::"Posted Vendor Perform. Lines",CurrPostedVendPerfLine);
                               END;
                                }
      { 1240030038;1 ;Action    ;
                      CaptionML=ENU=&Calculation Lines;
                      ApplicationArea=#All;
                      Promoted=No;
                      Visible=FALSE;
                      Image=CalculateInvoiceDiscount;
                      OnAction=VAR
                                 CurrCalcLine@1240030000 : Record 14000569;
                               BEGIN
                                 CurrCalcLine.RESET;
                                 CurrCalcLine.SETCURRENTKEY("Location Code","Item No.","Variant Code","Line No.");
                                 CurrCalcLine.SETRANGE("Location Code",ProcUnit."Location Code");
                                 CurrCalcLine.SETRANGE("Item No.",ProcUnit."Item No.");
                                 CurrCalcLine.SETRANGE("Variant Code",ProcUnit."Variant Code");
                                 PAGE.RUNMODAL(PAGE::"Calculation Lines",CurrCalcLine);
                               END;
                                }
      { 1240030039;1 ;Action    ;
                      CaptionML=ENU=Unusual Usage &Adj.;
                      ApplicationArea=#All;
                      Promoted=No;
                      Image=CalculateDepreciation;
                      OnAction=VAR
                                 UnusualUsageAdj@1240030000 : Record 14002658;
                               BEGIN
                                 UnusualUsageAdj.RESET;
                                 UnusualUsageAdj.SETCURRENTKEY(
                                   "Location Code","Item No.","Variant Code","Starting Date","Ending Date");
                                 UnusualUsageAdj.SETRANGE("Location Code",ProcUnit."Location Code");
                                 UnusualUsageAdj.SETRANGE("Item No.",ProcUnit."Item No.");
                                 UnusualUsageAdj.SETRANGE("Variant Code",ProcUnit."Variant Code");
                                 UnusualUsageAdj.SETFILTER("Source No.",'%1','');
                                 PAGE.RUNMODAL(PAGE::"Unusual Usage Adj.",UnusualUsageAdj);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1240030046;1 ;Action    ;
                      CaptionML=ENU=&Update;
                      ApplicationArea=#All;
                      Promoted=No;
                      Visible=FALSE;
                      Image=ChangeDates;
                      OnAction=BEGIN
                                 UpdatePage;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1240030065;1 ;Action    ;
                      Name=SwitchToForecastPeriods;
                      CaptionML=ENU=Switch to &Forecast Periods;
                      ApplicationArea=#All;
                      Promoted=No;
                      Image=WorkCenterCalendar;
                      OnAction=BEGIN
                                 UseCalcPeriods := FALSE;
                                 UpdatePage;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1240030066;1 ;Action    ;
                      Name=SwitchToCalcPeriods;
                      CaptionML=ENU=Switch to &Calculate Periods;
                      ApplicationArea=#All;
                      Promoted=No;
                      Image=WorkCenterAbsence;
                      OnAction=BEGIN
                                 UseCalcPeriods := TRUE;
                                 UpdatePage;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1240020002;1 ;Action    ;
                      Name=Toggle Single Location Forecast;
                      CaptionML=ENU=Toggle Single Loc. Forecast;
                      ApplicationArea=#All;
                      Image=EditForecast;
                      OnAction=BEGIN
                                 CalculateSingleLocForecast;
                               END;
                                }
      { 1000000000;1 ;Action    ;
                      Name=Toggle Rounding View;
                      CaptionML=ENU=Toggle Rounding View;
                      Image=RollUpCosts;
                      OnAction=BEGIN
                                 DoNotRound := NOT DoNotRound;
                                 CalcForecast;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1240020008;1 ;Action    ;
                      Name=[Toggle Frozen Forecast ];
                      CaptionML=ENU=Toggle Frozen Forecast (View Only);
                      ApplicationArea=#All;
                      Image=EditForecast;
                      OnAction=BEGIN
                                 CalculateFrozenForecast;
                               END;
                                }
      { 1240030060;1 ;Action    ;
                      CaptionML=ENU=Roll Up Exp Inventory;
                      Promoted=No;
                      Visible=FALSE;
                      Image=ExpandDepositLine;
                      OnAction=BEGIN
                                 SingleLocExpInv := FALSE;
                                 CalcForecast;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1240030061;1 ;Action    ;
                      CaptionML=ENU=Single Location Exp. Inventory;
                      Promoted=No;
                      Visible=FALSE;
                      Image=ExpandDepositLine;
                      OnAction=BEGIN
                                 SingleLocExpInv := TRUE;
                                 CalcForecast;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1240030064;1 ;Action    ;
                      Name=Forecast Adjust;
                      CaptionML=ENU=Forecast &Adjust;
                      Promoted=No;
                      Image=AdjustEntries;
                      OnAction=VAR
                                 ForecastAdjTmp@1240030000 : Record 14002708;
                               BEGIN
                                 ForecastAdjTmp.SetForecast(ProcUnit);
                                 CalcForecast;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 2       ;1   ;Action    ;
                      Name=Toggle Chart Visible;
                      Image=ShowMatrix;
                      OnAction=BEGIN
                                 ChartVisible := NOT ChartVisible;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1240020004;1;Group  ;
                Name=Horizon;
                CaptionML=ENU=Horizon;
                Description=DisableThisGroupBySetupValue;
                GroupType=Group }

    { 1240020003;2;Field  ;
                Name=PeriodsToDisplay;
                CaptionML=ENU=Periods to Display;
                SourceExpr=SelNoOfColumns;
                Visible=FALSE;
                OnValidate=BEGIN
                             UpdatePage;
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 1240020005;2;Field  ;
                Name=ManualHorizonDate;
                CaptionML=ENU=Horizon Date:;
                SourceExpr=OverrideLTHDate;
                Importance=Promoted;
                OnValidate=BEGIN
                             IF OverrideLTHDate < WORKDATE THEN
                               OverrideLTHDate := WORKDATE;
                             UpdatePage;
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 1240030000;1;Group  ;
                Name=ForecastView;
                CaptionML=ENU=Forecast View;
                Editable=FALSE;
                GroupType=Repeater }

    { 1240030008;2;Field  ;
                Name=Title;
                CaptionML=ENU=Title;
                SourceExpr=Title }

    { 1240030030;2;Field  ;
                Name=Period 1;
                Width=10;
                CaptionML=ENU=Period 1;
                SourceExpr=CurrDisp[1];
                Visible=Per1Visible;
                OnDrillDown=BEGIN
                              FirstOpenPeriod := TRUE;
                              DrilldownRow(1);
                            END;
                             }

    { 1240030028;2;Field  ;
                Name=Period 2;
                Width=10;
                CaptionML=ENU=Period 2;
                SourceExpr=CurrDisp[2];
                Visible=Per2Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(2);
                            END;
                             }

    { 1240030026;2;Field  ;
                Name=Period 3;
                Width=10;
                CaptionML=ENU=Period 3;
                SourceExpr=CurrDisp[3];
                Visible=Per3Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(3);
                            END;
                             }

    { 1240030024;2;Field  ;
                Name=Period 4;
                Width=10;
                CaptionML=ENU=Period 4;
                SourceExpr=CurrDisp[4];
                Visible=Per4Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(4);
                            END;
                             }

    { 1240030006;2;Field  ;
                Name=Period 5;
                Width=10;
                CaptionML=ENU=Period 5;
                SourceExpr=CurrDisp[5];
                Visible=Per5Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(5);
                            END;
                             }

    { 1240030022;2;Field  ;
                Name=Period 6;
                Width=10;
                CaptionML=ENU=Period 6;
                SourceExpr=CurrDisp[6];
                Visible=Per6Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(6);
                            END;
                             }

    { 1240030020;2;Field  ;
                Name=Period 7;
                Width=10;
                CaptionML=ENU=Period 7;
                SourceExpr=CurrDisp[7];
                Visible=Per7Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(7);
                            END;
                             }

    { 1240030010;2;Field  ;
                Name=Period 8;
                Width=10;
                CaptionML=ENU=Period 8;
                SourceExpr=CurrDisp[8];
                Visible=Per8Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(8);
                            END;
                             }

    { 1240030018;2;Field  ;
                Name=Period 9;
                Width=10;
                CaptionML=ENU=Period 9;
                SourceExpr=CurrDisp[9];
                Visible=Per9Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(9);
                            END;
                             }

    { 1240030016;2;Field  ;
                Name=Period 10;
                Width=10;
                CaptionML=ENU=Period 10;
                SourceExpr=CurrDisp[10];
                Visible=Per10Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(10);
                            END;
                             }

    { 1240030012;2;Field  ;
                Name=Period 11;
                Width=10;
                CaptionML=ENU=Period 11;
                SourceExpr=CurrDisp[11];
                Visible=Per11Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(11);
                            END;
                             }

    { 1240030014;2;Field  ;
                Name=Period 12;
                Width=10;
                CaptionML=ENU=Period 12;
                SourceExpr=CurrDisp[12];
                Visible=Per12Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(12);
                            END;
                             }

    { 1240030050;2;Field  ;
                Name=Period 13;
                Width=10;
                CaptionML=ENU=Period 13;
                SourceExpr=CurrDisp[13];
                Visible=Per13Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(13);
                            END;
                             }

    { 1240030048;2;Field  ;
                Name=Period 14;
                Width=10;
                CaptionML=ENU=Period 14;
                SourceExpr=CurrDisp[14];
                Visible=Per14Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(14);
                            END;
                             }

    { 1240030052;2;Field  ;
                Name=Period 15;
                Width=10;
                CaptionML=ENU=Period 15;
                SourceExpr=CurrDisp[15];
                Visible=Per15Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(15);
                            END;
                             }

    { 1240030071;2;Field  ;
                Name=Period 16;
                CaptionML=ENU=Period 16;
                SourceExpr=CurrDisp[16];
                Visible=Per16Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(16);
                            END;
                             }

    { 1240030067;2;Field  ;
                Name=Period 17;
                CaptionML=ENU=Period 17;
                SourceExpr=CurrDisp[17];
                Visible=Per17Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(17);
                            END;
                             }

    { 1240030081;2;Field  ;
                Name=Period 18;
                CaptionML=ENU=Period 18;
                SourceExpr=CurrDisp[18];
                Visible=Per18Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(18);
                            END;
                             }

    { 1240030105;2;Field  ;
                Name=Period 19;
                CaptionML=ENU=Period 19;
                SourceExpr=CurrDisp[19];
                Visible=Per19Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(19);
                            END;
                             }

    { 1240030103;2;Field  ;
                Name=Period 20;
                CaptionML=ENU=Period 20;
                SourceExpr=CurrDisp[20];
                Visible=Per20Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(20);
                            END;
                             }

    { 1240030101;2;Field  ;
                Name=Period 21;
                CaptionML=ENU=Period 21;
                SourceExpr=CurrDisp[21];
                Visible=Per21Visible;
                OnLookup=BEGIN
                           DrilldownRow(21);
                         END;
                          }

    { 1240030099;2;Field  ;
                Name=Period 22;
                CaptionML=ENU=Period 22;
                SourceExpr=CurrDisp[22];
                Visible=Per22Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(22);
                            END;
                             }

    { 1240030097;2;Field  ;
                Name=Period 23;
                CaptionML=ENU=Period 23;
                SourceExpr=CurrDisp[23];
                Visible=Per23Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(23);
                            END;
                             }

    { 1240030095;2;Field  ;
                Name=Period 24;
                CaptionML=ENU=Period 24;
                SourceExpr=CurrDisp[24];
                Visible=Per24Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(24);
                            END;
                             }

    { 1240030093;2;Field  ;
                Name=Period 25;
                CaptionML=ENU=Period 25;
                SourceExpr=CurrDisp[25];
                Visible=Per25Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(25);
                            END;
                             }

    { 1240030091;2;Field  ;
                Name=Period 26;
                CaptionML=ENU=Period 26;
                SourceExpr=CurrDisp[26];
                Visible=Per26Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(26);
                            END;
                             }

    { 1240030089;2;Field  ;
                Name=Period 27;
                CaptionML=ENU=Period 27;
                SourceExpr=CurrDisp[27];
                Visible=Per27Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(27);
                            END;
                             }

    { 1240030087;2;Field  ;
                Name=Period 28;
                CaptionML=ENU=Period 28;
                SourceExpr=CurrDisp[28];
                Visible=Per28Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(28);
                            END;
                             }

    { 1240030085;2;Field  ;
                Name=Period 29;
                CaptionML=ENU=Period 29;
                SourceExpr=CurrDisp[29];
                Visible=Per29Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(29);
                            END;
                             }

    { 1240030083;2;Field  ;
                Name=Period 30;
                CaptionML=ENU=Period 30;
                SourceExpr=CurrDisp[30];
                Visible=Per30Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(30);
                            END;
                             }

    { 1240030079;2;Field  ;
                Name=Period 31;
                CaptionML=ENU=Period 31;
                SourceExpr=CurrDisp[31];
                Visible=Per31Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(31);
                            END;
                             }

    { 1240030077;2;Field  ;
                Name=Period 32;
                CaptionML=ENU=Period 32;
                SourceExpr=CurrDisp[32];
                Visible=Per32Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(32);
                            END;
                             }

    { 1240030075;2;Field  ;
                Name=Period 33;
                CaptionML=ENU=Period 33;
                SourceExpr=CurrDisp[33];
                Visible=Per33Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(33);
                            END;
                             }

    { 1240030073;2;Field  ;
                Name=Period 34;
                CaptionML=ENU=Period 34;
                SourceExpr=CurrDisp[34];
                Visible=Per34Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(34);
                            END;
                             }

    { 1240030069;2;Field  ;
                Name=Period 35;
                CaptionML=ENU=Period 35;
                SourceExpr=CurrDisp[35];
                Visible=Per35Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(35);
                            END;
                             }

    { 1240030113;2;Field  ;
                Name=Period 36;
                CaptionML=ENU=Period 36;
                SourceExpr=CurrDisp[36];
                Visible=Per36Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(36);
                            END;
                             }

    { 1240030131;2;Field  ;
                Name=Period 37;
                CaptionML=ENU=Period 37;
                SourceExpr=CurrDisp[37];
                Visible=Per37Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(37);
                            END;
                             }

    { 1240030129;2;Field  ;
                Name=Period 38;
                CaptionML=ENU=Period 38;
                SourceExpr=CurrDisp[38];
                Visible=Per38Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(38);
                            END;
                             }

    { 1240030127;2;Field  ;
                Name=Period 39;
                CaptionML=ENU=Period 39;
                SourceExpr=CurrDisp[39];
                Visible=Per39Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(39);
                            END;
                             }

    { 1240030125;2;Field  ;
                Name=Period 40;
                CaptionML=ENU=Period 40;
                SourceExpr=CurrDisp[40];
                Visible=Per40Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(40);
                            END;
                             }

    { 1240030123;2;Field  ;
                Name=Period 41;
                CaptionML=ENU=Period 41;
                SourceExpr=CurrDisp[41];
                Visible=Per41Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(41);
                            END;
                             }

    { 1240030121;2;Field  ;
                Name=Period 42;
                CaptionML=ENU=Period 42;
                SourceExpr=CurrDisp[42];
                Visible=Per42Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(42);
                            END;
                             }

    { 1240030119;2;Field  ;
                Name=Period 43;
                CaptionML=ENU=Period 43;
                SourceExpr=CurrDisp[43];
                Visible=Per43Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(43);
                            END;
                             }

    { 1240030117;2;Field  ;
                Name=Period 44;
                CaptionML=ENU=Period 44;
                SourceExpr=CurrDisp[44];
                Visible=Per44Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(44);
                            END;
                             }

    { 1240030115;2;Field  ;
                Name=Period 45;
                CaptionML=ENU=Period 45;
                SourceExpr=CurrDisp[45];
                Visible=Per45Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(45);
                            END;
                             }

    { 1240030109;2;Field  ;
                Name=Period 46;
                CaptionML=ENU=Period 46;
                SourceExpr=CurrDisp[46];
                Visible=Per46Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(46);
                            END;
                             }

    { 1240030111;2;Field  ;
                Name=Period 47;
                CaptionML=ENU=Period 47;
                SourceExpr=CurrDisp[47];
                Visible=Per47Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(47);
                            END;
                             }

    { 1240030133;2;Field  ;
                Name=Period 48;
                CaptionML=ENU=Period 48;
                SourceExpr=CurrDisp[48];
                Visible=Per48Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(48);
                            END;
                             }

    { 1240030139;2;Field  ;
                Name=Period 49;
                CaptionML=ENU=Period 49;
                SourceExpr=CurrDisp[49];
                Visible=Per49Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(49);
                            END;
                             }

    { 1240030137;2;Field  ;
                Name=Period 50;
                CaptionML=ENU=Period 50;
                SourceExpr=CurrDisp[50];
                Visible=Per50Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(50);
                            END;
                             }

    { 1240030135;2;Field  ;
                Name=Period 51;
                CaptionML=ENU=Period 51;
                SourceExpr=CurrDisp[51];
                Visible=Per51Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(51);
                            END;
                             }

    { 1240030107;2;Field  ;
                Name=Period 52;
                CaptionML=ENU=Period 52;
                SourceExpr=CurrDisp[52];
                Visible=Per52Visible;
                OnDrillDown=BEGIN
                              DrilldownRow(52);
                            END;
                             }

    { 1   ;1   ;Part      ;
                Name=AFPForecastChart;
                CaptionML=ENU=Forecast Chart;
                PagePartID=Page14098061;
                Visible=ChartVisible;
                PartType=Page }

    { 1240020001;0;Container;
                ContainerType=FactBoxArea }

    { 1240020007;1;Part   ;
                Name=ForecastViewFB;
                CaptionML=ENU=Forecast Info;
                PagePartID=Page14002709;
                PartType=Page }

    { 1240020046;1;Part   ;
                Name=ProcurementUnitFB;
                CaptionML=ENU=Procurement Unit;
                PagePartID=Page14002710;
                PartType=Page }

  }
  CODE
  {
    VAR
      AdvForSetup@1240030065 : Record 14002651;
      ForecastEntry@1240030029 : Record 14002603;
      InvMgtSetup@1240030015 : Record 14000551;
      InvPeriod@1240030027 : Record 14000552;
      Location@1240030002 : Record 14;
      ProcUnit@1240030005 : Record 14000555;
      ProcUnit2@1240030033 : Record 14000555;
      Forecast@1240030000 : Codeunit 14000567;
      UBP@1240030062 : Codeunit 14000564;
      CurrDisp@1240030003 : ARRAY [200] OF Text[50];
      ForecastAccumArray@1240030008 : ARRAY [200] OF Decimal;
      ForecastArray@1240030006 : ARRAY [200] OF Decimal;
      ForecastCustArray@1240030007 : ARRAY [200] OF Decimal;
      HorizonPeriod@1240030014 : Integer;
      NetArray@1240030010 : ARRAY [200] OF Decimal;
      Pos@1240030012 : Integer;
      Title@1240030011 : Text[30];
      i@1240030004 : Integer;
      Text000@1240030016 : TextConst 'ENU=Advanced Forecasting and Customer Collaborative Forecasting is not enabled for location %1.';
      DispPlaces@1240030022 : Decimal;
      DemandArray@1240030019 : ARRAY [200] OF Decimal;
      SlsShipmentArray@1240030020 : ARRAY [200] OF Decimal;
      AutoAdjArray@1240030021 : ARRAY [200] OF Decimal;
      CurrInventory@1240030023 : Decimal;
      NetTransfers@1240030024 : ARRAY [200] OF Decimal;
      PurchOrderArray@1240030025 : ARRAY [200] OF Decimal;
      Text002@1240030034 : TextConst 'ENU=Forecast';
      Text003@1240030035 : TextConst 'ENU=Cust. FC';
      Text004@1240030036 : TextConst 'ENU="      Demand"';
      Text005@1240030037 : TextConst 'ENU="      Consumed"';
      Text006@1240030038 : TextConst 'ENU=Auto Forc. Adj.';
      Text007@1240030039 : TextConst 'ENU=Total FC';
      Text008@1240030040 : TextConst 'ENU="      Consumed FC"';
      Text009@1240030041 : TextConst 'ENU=Accum FC';
      Text010@1240030042 : TextConst 'ENU="      Inventory"';
      Text011@1240030043 : TextConst 'ENU="      Transfers"';
      Text012@1240030044 : TextConst 'ENU="      Pur. Orders"';
      Text013@1240030055 : TextConst 'ENU="      Assy./Prod. Orders"';
      Text015@1240030057 : TextConst 'ENU="      Assy./Prod. Comp."';
      Text017@1240030045 : TextConst 'ENU=Net Inv. Pos.';
      Text018@1240030046 : TextConst 'ENU=Horiz %1';
      Text019@1240030059 : TextConst 'ENU=Prior Yr';
      Text020@1240030047 : TextConst 'ENU=Drilldown not available from this row.';
      FirstOpenPeriod@1240030048 : Boolean;
      LogicalLine@1240030060 : ARRAY [200] OF Integer;
      PushLeadTimeDays@1240030061 : Decimal;
      SourceNo@1240030063 : Code[20];
      DecCharacter@1240030064 : Text[1];
      ProdStatFilter@1240030052 : Text[60];
      ReplenishmentSource@1240030069 : Text[100];
      Text021@1240030070 : TextConst 'ENU=Production';
      OverrideLTHDate@1240030074 : Date;
      SingleLocExpInv@1240030075 : Boolean;
      Text022@1240030076 : TextConst 'ENU=Forc. Adj.';
      ForcAdjArray@1240030077 : ARRAY [200] OF Decimal;
      CurrFormula@1240030078 : Text[50];
      UseCalcPeriods@1240030009 : Boolean;
      EntryTypeFilter@1240020000 : Text[100];
      DispPeriods@1240020001 : Integer;
      Text023@1240020002 : TextConst 'ENU=No Trend';
      Text024@1240020003 : TextConst 'ENU=Non Sea.';
      Text025@1240020004 : TextConst 'ENU=Sea.';
      CurrTrend@1240020005 : Text[30];
      DisplayForecastAdjust@1024 : Boolean;
      DisplayCustomerForecast@1016 : Boolean;
      DisplayTransfers@1008 : Boolean;
      DisplayPriorYear@1007 : Boolean;
      DisplayProdOrder@1029 : Boolean;
      DisplayComponents@1028 : Boolean;
      DisplaySalesReturnOrders@1001 : Boolean;
      MaxLineNo@1003 : Integer;
      TitleLineNo@1004 : Integer;
      ForecastLineNo@1005 : Integer;
      ForecastAdjustLineNo@1006 : Integer;
      DemandLineNo@1009 : Integer;
      ShipmentLineNo@1027 : Integer;
      CustForecastLineNo@1010 : Integer;
      ConsumedFCLineNo@1011 : Integer;
      AutoFCAdjustLineNo@1012 : Integer;
      TotalFCLineNo@1013 : Integer;
      AccumFCLineNo@1014 : Integer;
      InventoryLineNo@1015 : Integer;
      PurchLineNo@1017 : Integer;
      ProdOrdLineNo@1018 : Integer;
      CompLineNo@1019 : Integer;
      SalesReturnLineNo@1020 : Integer;
      NetInvPosLineNo@1021 : Integer;
      LTHLineNo@1023 : Integer;
      PriorYearLineNo@1022 : Integer;
      TransferLineNo@1025 : Integer;
      Text026@1240020006 : TextConst 'ENU="      Sales Ret. Orders"';
      TitleEmphasize@19037038 : Boolean INDATASET;
      "Period 1Emphasize"@19011682 : Boolean INDATASET;
      "Period 2Emphasize"@19010655 : Boolean INDATASET;
      "Period 3Emphasize"@19009632 : Boolean INDATASET;
      "Period 4Emphasize"@19008597 : Boolean INDATASET;
      "Period 5Emphasize"@19016022 : Boolean INDATASET;
      "Period 6Emphasize"@19014995 : Boolean INDATASET;
      "Period 7Emphasize"@19013972 : Boolean INDATASET;
      "Period 8Emphasize"@19012457 : Boolean INDATASET;
      "Period 9Emphasize"@19019882 : Boolean INDATASET;
      "Period 10Emphasize"@19073534 : Boolean INDATASET;
      "Period 11Emphasize"@19051902 : Boolean INDATASET;
      "Period 12Emphasize"@19062334 : Boolean INDATASET;
      "Period 13Emphasize"@19076862 : Boolean INDATASET;
      "Period 14Emphasize"@19078715 : Boolean INDATASET;
      "Period 15Emphasize"@19065662 : Boolean INDATASET;
      "Period 16Emphasize"@19065083 : Boolean INDATASET;
      "Period 17Emphasize"@19079611 : Boolean INDATASET;
      "Period 18Emphasize"@19050043 : Boolean INDATASET;
      "Period 19Emphasize"@19060283 : Boolean INDATASET;
      "Period 20Emphasize"@19072509 : Boolean INDATASET;
      "Period 21Emphasize"@19050877 : Boolean INDATASET;
      "Period 22Emphasize"@19061309 : Boolean INDATASET;
      "Period 23Emphasize"@19075837 : Boolean INDATASET;
      "Period 24Emphasize"@19077694 : Boolean INDATASET;
      "Period 25Emphasize"@19064637 : Boolean INDATASET;
      "Period 26Emphasize"@19064062 : Boolean INDATASET;
      "Period 27Emphasize"@19078590 : Boolean INDATASET;
      "Period 28Emphasize"@19049022 : Boolean INDATASET;
      "Period 29Emphasize"@19059262 : Boolean INDATASET;
      "Period 30Emphasize"@19071488 : Boolean INDATASET;
      "Period 31Emphasize"@19049856 : Boolean INDATASET;
      "Period 32Emphasize"@19060288 : Boolean INDATASET;
      "Period 33Emphasize"@19074816 : Boolean INDATASET;
      "Period 34Emphasize"@19076669 : Boolean INDATASET;
      "Period 35Emphasize"@19063616 : Boolean INDATASET;
      "Period 36Emphasize"@19063037 : Boolean INDATASET;
      "Period 37Emphasize"@19077565 : Boolean INDATASET;
      "Period 38Emphasize"@19047997 : Boolean INDATASET;
      "Period 39Emphasize"@19058237 : Boolean INDATASET;
      "Period 40Emphasize"@19070463 : Boolean INDATASET;
      "Period 41Emphasize"@19048831 : Boolean INDATASET;
      "Period 42Emphasize"@19059263 : Boolean INDATASET;
      "Period 43Emphasize"@19073791 : Boolean INDATASET;
      "Period 44Emphasize"@19075648 : Boolean INDATASET;
      "Period 45Emphasize"@19062591 : Boolean INDATASET;
      "Period 46Emphasize"@19062016 : Boolean INDATASET;
      "Period 47Emphasize"@19076544 : Boolean INDATASET;
      "Period 48Emphasize"@19046976 : Boolean INDATASET;
      "Period 49Emphasize"@19057216 : Boolean INDATASET;
      "Period 50Emphasize"@19077874 : Boolean INDATASET;
      "Period 51Emphasize"@19056242 : Boolean INDATASET;
      "Period 52Emphasize"@19066674 : Boolean INDATASET;
      Text027@1240020007 : TextConst 'ENU=Min %1 Max %2 Qty.';
      Text028@1240020008 : TextConst 'ENU=Min %1 Max %2 Days';
      Text029@1240020009 : TextConst 'ENU=Assembly';
      ChartVisible@1002 : Boolean;
      counter@1240020011 : Integer;
      Per1Visible@1240020063 : Boolean;
      Per2Visible@1240020062 : Boolean;
      Per3Visible@1240020061 : Boolean;
      Per4Visible@1240020060 : Boolean;
      Per5Visible@1240020059 : Boolean;
      Per6Visible@1240020058 : Boolean;
      Per7Visible@1240020057 : Boolean;
      Per8Visible@1240020056 : Boolean;
      Per9Visible@1240020055 : Boolean;
      Per10Visible@1240020054 : Boolean;
      Per11Visible@1240020053 : Boolean;
      Per12Visible@1240020052 : Boolean;
      Per13Visible@1240020051 : Boolean;
      Per14Visible@1240020050 : Boolean;
      Per15Visible@1240020049 : Boolean;
      Per16Visible@1240020048 : Boolean;
      Per17Visible@1240020047 : Boolean;
      Per18Visible@1240020046 : Boolean;
      Per19Visible@1240020045 : Boolean;
      Per20Visible@1240020044 : Boolean;
      Per21Visible@1240020043 : Boolean;
      Per22Visible@1240020042 : Boolean;
      Per23Visible@1240020041 : Boolean;
      Per24Visible@1240020040 : Boolean;
      Per25Visible@1240020039 : Boolean;
      Per26Visible@1240020038 : Boolean;
      Per27Visible@1240020037 : Boolean;
      Per28Visible@1240020036 : Boolean;
      Per29Visible@1240020035 : Boolean;
      Per30Visible@1240020034 : Boolean;
      Per31Visible@1240020033 : Boolean;
      Per32Visible@1240020032 : Boolean;
      Per33Visible@1240020031 : Boolean;
      Per34Visible@1240020030 : Boolean;
      Per35Visible@1240020029 : Boolean;
      Per36Visible@1240020028 : Boolean;
      Per37Visible@1240020027 : Boolean;
      Per38Visible@1240020026 : Boolean;
      Per39Visible@1240020025 : Boolean;
      Per40Visible@1240020024 : Boolean;
      Per41Visible@1240020023 : Boolean;
      Per42Visible@1240020022 : Boolean;
      Per43Visible@1240020021 : Boolean;
      Per44Visible@1240020020 : Boolean;
      Per45Visible@1240020019 : Boolean;
      Per46Visible@1240020018 : Boolean;
      Per47Visible@1240020017 : Boolean;
      Per48Visible@1240020016 : Boolean;
      Per49Visible@1240020015 : Boolean;
      Per50Visible@1240020014 : Boolean;
      Per51Visible@1240020013 : Boolean;
      Per52Visible@1240020012 : Boolean;
      SelNoOfColumns@1240020010 : Integer;
      NeedMessage@1240020066 : Text;
      Text030@1240020067 : TextConst 'ENU=%1 Critical for %2 on %3';
      ForecastUserSetup@1240020068 : Record 14097451;
      Text031@1240020069 : TextConst 'ENU=Sporadic %1';
      SingleLocForecast@1240020070 : Boolean;
      NetInvPos@1240020072 : Decimal;
      AutoFCAdjustByHorizonActive@1240020071 : Boolean;
      ExtTxtPrefix@1240020073 : Text[1];
      DoNotRound@1000000000 : Boolean;
      IgnoreFrozenForecast@1240020064 : Boolean;
      CycleValue@1240020074 : Integer;
      CycleCaption@1240020065 : Text[30];
      UseSurplusFactor@1240020075 : Boolean;
      UseExcessFactor@1240020076 : Boolean;

    PROCEDURE SetProcUnitandSourceNo@1240030001(CurrProcUnit@1240030000 : Record 14000555;CurrSourceNo@1240030001 : Code[20]);
    VAR
      ItemUsage@1240020000 : Record 14000557;
    BEGIN
      ProcUnit.COPY(CurrProcUnit);
      Location.GET(ProcUnit."Location Code");

      IF (NOT Location."Enable Adv. Forecasting") AND
         (NOT Location."Enable Cust. Forecasting") THEN
        ERROR(STRSUBSTNO(Text000,Location.Code));

      SourceNo := CurrSourceNo;

      SetRowDisplay;
    END;

    PROCEDURE SetRowDisplay@1240030009();
    BEGIN
      AdvForSetup.GET;
      DisplayProdOrder := AdvForSetup."FC View Show Production Orders";
      DisplayComponents := AdvForSetup."FC View Show Components";
      DisplaySalesReturnOrders := AdvForSetup."FC View Show Sales Ret. Orders";
      DisplayForecastAdjust := AdvForSetup."FC View Show Forecast Adjust";
      DisplayCustomerForecast := AdvForSetup."FC View Show Customer Forecast";
      DisplayTransfers := AdvForSetup."FC View Show Transfer Orders";
      DisplayPriorYear := AdvForSetup."FC View Show Prior Year";

      i := 1;
      // Title
      TitleLineNo := i;
      i := i + 1;
      // Forecast
      ForecastLineNo := i;
      i := i + 1;
      // Forecast Adjust
      IF DisplayForecastAdjust THEN BEGIN
        ForecastAdjustLineNo := i;
        i:= i + 1;
      END;
      // Customer Forecast
      IF DisplayCustomerForecast THEN BEGIN
        CustForecastLineNo := i;
        i := i + 1;
      END;
      // Demand
      DemandLineNo := i;
      i := i + 1;
      // Shipments
      ShipmentLineNo := i;
      i := i + 1;
      // Auto Forecast Adjustment
      AutoFCAdjustLineNo := i;
      i := i + 1;
      // Total Forecast
      TotalFCLineNo := i;
      i := i + 1;
      // Consumed Forecast
      ConsumedFCLineNo := i;
      i := i + 1;
      // Accumulated Forecast
      AccumFCLineNo := i;
      i := i + 1;
      // Inventory
      InventoryLineNo := i;
      i := i + 1;
      // Transfers
      IF DisplayTransfers THEN BEGIN
        TransferLineNo := i;
        i := i + 1;
      END;
      // Open PO
      PurchLineNo := i;
      i := i + 1;
      // Production Orders
      IF DisplayProdOrder THEN BEGIN
        ProdOrdLineNo := i;
        i := i + 1;
      END;
      // Component Lines
      IF DisplayComponents THEN BEGIN
        CompLineNo := i;
        i := i + 1;
      END;
      // Sales Return Order Lines
      IF DisplaySalesReturnOrders THEN BEGIN
        SalesReturnLineNo := i;
        i := i + 1;
      END;
      // Net Inv. Position
      NetInvPosLineNo := i;
      i := i + 1;
      // Lead Time Horizon
      LTHLineNo := i;
      i := i + 1;
      // Prior Year
      IF DisplayPriorYear THEN BEGIN
        PriorYearLineNo := i;
        i := i + 1;
      END;
      MaxLineNo := i;
    END;

    PROCEDURE SetLTHDate@1240030012(CurrOverideLTHDate@1240030000 : Date);
    BEGIN
      OverrideLTHDate := CurrOverideLTHDate;
    END;

    PROCEDURE DisplayForecast@1240030000();
    VAR
      LTHtempText@1240020000 : Text[30];
    BEGIN
      i := 1;
      CASE Number OF
        // Title
        TitleLineNo:
          BEGIN
            REPEAT
              CurrDisp[i] := FORMAT(Forecast.GetPeriodStartingDate(i));
              //Pos := STRPOS(CurrDisp[i],DecCharacter);
              //IF Pos <> 0 THEN
              //  CurrDisp[i] := COPYSTR(CurrDisp[i],1,Pos - 1);
              i := i + 1;
            UNTIL i > DispPeriods;
            REPEAT
              CurrDisp[i] := '';
              i := i + 1;
            UNTIL i > AdvForSetup."Periods to Calculate";
            Title := ProcUnit."Location Code";
          END;
        // Forecast
        ForecastLineNo:
          BEGIN
            REPEAT
              ForecastArray[i] := Forecast.GetPeriodForecastUsage(i);
              CurrDisp[i] := FORMAT(RoundVisibleValue(ForecastArray[i]));
              //Pos := STRPOS(CurrDisp[i],DecCharacter);
              //IF Pos <> 0 THEN
              //  CurrDisp[i] := COPYSTR(CurrDisp[i],1,Pos + DispPlaces);
              i := i + 1;
            UNTIL i > DispPeriods;
            Title := Text002;
          END;
        // Forecast Adjust
        ForecastAdjustLineNo:
          BEGIN
            REPEAT
              ForcAdjArray[i] := Forecast.GetForecastAdj(i);
              CurrDisp[i] := FORMAT(RoundVisibleValue(ForcAdjArray[i]));
              //Pos := STRPOS(CurrDisp[i],DecCharacter);
              //IF Pos <> 0 THEN
              //  CurrDisp[i] := COPYSTR(CurrDisp[i],1,Pos + DispPlaces);
              i := i + 1;
            UNTIL i > DispPeriods;
            Title := Text022;
          END;
        // Customer Forecast
        CustForecastLineNo:
          BEGIN
            CLEAR(CurrDisp);
            REPEAT
              ForecastCustArray[i] := Forecast.GetCustForecastUsage(i);
              CurrDisp[i] := FORMAT(RoundVisibleValue(ForecastCustArray[i]));
              //Pos := STRPOS(CurrDisp[i],DecCharacter);
              //IF Pos <> 0 THEN
              //  CurrDisp[i] := COPYSTR(CurrDisp[i],1,Pos + DispPlaces);
              i := i + 1;
            UNTIL i > DispPeriods;
            Title := Text003;
          END;
        // Demand
        DemandLineNo:
          BEGIN
            CLEAR(CurrDisp);
            REPEAT
              DemandArray[i] := Forecast.GetDemand(i);
              CurrDisp[i] := FORMAT(RoundVisibleValue(DemandArray[i]));
              //Pos := STRPOS(CurrDisp[i],DecCharacter);
              //IF Pos <> 0 THEN
              //  CurrDisp[i] := COPYSTR(CurrDisp[i],1,Pos + DispPlaces);
              IF (i = HorizonPeriod) AND (AutoFCAdjustByHorizonActive) THEN BEGIN
                LTHtempText  := FORMAT(RoundVisibleValue(Forecast.GetLeadTimeHorizonDemand()));
                //Pos := STRPOS(LTHtempText,DecCharacter);
                //IF Pos <> 0 THEN
                //  LTHtempText := COPYSTR(LTHtempText,1,Pos + DispPlaces);
                CurrDisp[i] := CurrDisp[i] + ' ' + ExtTxtPrefix + '(' + LTHtempText + ')';
              END;
              i := i + 1;
            UNTIL i > DispPeriods;
            Title := Text004;
          END;
        // Shipments
        ShipmentLineNo:
          BEGIN
            CLEAR(CurrDisp);
            REPEAT
              SlsShipmentArray[i] := Forecast.GetConsumed(i);
              CurrDisp[i] := FORMAT(RoundVisibleValue(SlsShipmentArray[i]));
              //Pos := STRPOS(CurrDisp[i],DecCharacter);
              //IF Pos <> 0 THEN
              //  CurrDisp[i] := COPYSTR(CurrDisp[i],1,Pos + DispPlaces);
              i := i + 1;
            UNTIL i > DispPeriods;
            Title := Text005;
          END;
        // Auto Forecast Adjustment
        AutoFCAdjustLineNo:
          BEGIN
            CLEAR(CurrDisp);
            REPEAT
              AutoAdjArray[i] := Forecast.GetAutoForcAdjustment(i);
              CurrDisp[i] := FORMAT(RoundVisibleValue(AutoAdjArray[i]));
              //Pos := STRPOS(CurrDisp[i],DecCharacter);
              //IF Pos <> 0 THEN
              //  CurrDisp[i] := COPYSTR(CurrDisp[i],1,Pos + DispPlaces);
              IF (i = HorizonPeriod) AND (AutoFCAdjustByHorizonActive) THEN BEGIN
                LTHtempText  := FORMAT(RoundVisibleValue(Forecast.GetLeadTimeHorizonAutoFCAdj()));
                //Pos := STRPOS(LTHtempText,DecCharacter);
                //IF Pos <> 0 THEN
                //  LTHtempText := COPYSTR(LTHtempText,1,Pos + DispPlaces);
                CurrDisp[i] := CurrDisp[i] + ' ' + ExtTxtPrefix + '(' + LTHtempText + ')';
              END;
              i := i + 1;
            UNTIL i > DispPeriods;
            Title := Text006;
          END;
        // Total Forecast
        TotalFCLineNo:
          BEGIN
            CLEAR(CurrDisp);
            REPEAT
              CurrDisp[i] := FORMAT(RoundVisibleValue(Forecast.GetTotalForecast(i)));
              //Pos := STRPOS(CurrDisp[i],DecCharacter);
              //IF Pos <> 0 THEN
                //CurrDisp[i] := COPYSTR(CurrDisp[i],1,Pos + DispPlaces);
              IF (i = HorizonPeriod) AND (AutoFCAdjustByHorizonActive) THEN BEGIN
                LTHtempText  := FORMAT(RoundVisibleValue(Forecast.GetLeadTimeHorizonTotalFC(i,OverrideLTHDate)));
                //Pos := STRPOS(LTHtempText,DecCharacter);
                //IF Pos <> 0 THEN
                //  LTHtempText := COPYSTR(LTHtempText,1,Pos + DispPlaces);
                CurrDisp[i] := CurrDisp[i] + ' ' + ExtTxtPrefix + '(' + LTHtempText + ')';
              END;
              i := i + 1;
            UNTIL i > DispPeriods;
            Title := Text007;
          END;
        // Consumed Forecast
        ConsumedFCLineNo:
          BEGIN
            CLEAR(CurrDisp);
            REPEAT
              SlsShipmentArray[i] := Forecast.GetConsumed(i);
              CurrDisp[i] := FORMAT(RoundVisibleValue(SlsShipmentArray[i]));
              //Pos := STRPOS(CurrDisp[i],DecCharacter);
              //IF Pos <> 0 THEN
              //  CurrDisp[i] := COPYSTR(CurrDisp[i],1,Pos + DispPlaces);
              IF (i = HorizonPeriod) AND (AutoFCAdjustByHorizonActive) THEN BEGIN
                IF (AdvForSetup."Auto Forcast Adj. Option" = AdvForSetup."Auto Forcast Adj. Option"::"Lead Time Horizon") THEN BEGIN
                  LTHtempText  := FORMAT(RoundVisibleValue(Forecast.GetLeadTimeHorizonConsumed()));
                  //Pos := STRPOS(LTHtempText,DecCharacter);
                  //IF Pos <> 0 THEN
                  //  LTHtempText := COPYSTR(LTHtempText,1,Pos + DispPlaces);
                  CurrDisp[i] := CurrDisp[i] + ' ' + ExtTxtPrefix + '(' + LTHtempText + ')';
                END;
              END;
              i := i + 1;
            UNTIL i > DispPeriods;
            Title := Text008;
          END;
        // Accumulated Forecast
        AccumFCLineNo:
          BEGIN
            CLEAR(CurrDisp);
            REPEAT
              ForecastAccumArray[i] := Forecast.GetAccumForecast(i);
              CurrDisp[i] := FORMAT(RoundVisibleValue(ForecastAccumArray[i]));
              //Pos := STRPOS(CurrDisp[i],DecCharacter);
              //IF Pos <> 0 THEN
              //  CurrDisp[i] := COPYSTR(CurrDisp[i],1,Pos + DispPlaces);
              IF (i = HorizonPeriod) AND (AutoFCAdjustByHorizonActive) THEN BEGIN
                LTHtempText  := FORMAT(RoundVisibleValue(Forecast.GetLTHForecast()));
                //Pos := STRPOS(LTHtempText,DecCharacter);
                //IF Pos <> 0 THEN
                //  LTHtempText := COPYSTR(LTHtempText,1,Pos + DispPlaces);
                CurrDisp[i] := CurrDisp[i] + ' ' + ExtTxtPrefix + '(' + LTHtempText + ')';
              END;
              i := i + 1;
            UNTIL i > DispPeriods;
            Title := Text009;
          END;
        // Inventory
        InventoryLineNo:
          BEGIN
            IF i = 1 THEN BEGIN
              CLEAR(CurrDisp);
              CurrInventory := Forecast.GetInventory(i);
              CurrDisp[i] := FORMAT(RoundVisibleValue(CurrInventory));
              //Pos := STRPOS(CurrDisp[i],DecCharacter);
              //IF Pos <> 0 THEN
              //  CurrDisp[i] := COPYSTR(CurrDisp[i],1,Pos + DispPlaces);
              Title := Text010;
            END;
          END;
        // Transfers
        TransferLineNo:
          BEGIN
            CLEAR(CurrDisp);
            REPEAT
              NetTransfers[i] := Forecast.GetTransfers(i);
              CurrDisp[i] := FORMAT(RoundVisibleValue(NetTransfers[i]));
              //Pos := STRPOS(CurrDisp[i],DecCharacter);
              //IF Pos <> 0 THEN
              //  CurrDisp[i] := COPYSTR(CurrDisp[i],1,Pos + DispPlaces);
              i := i + 1;
            UNTIL i > DispPeriods;
            Title := Text011;
          END;
        // Open PO
        PurchLineNo:
          BEGIN
            CLEAR(CurrDisp);
            REPEAT
              PurchOrderArray[i] := Forecast.GetPurchOrders(i);
              CurrDisp[i] := FORMAT(RoundVisibleValue(PurchOrderArray[i]));
              //Pos := STRPOS(CurrDisp[i],DecCharacter);
              //IF Pos <> 0 THEN
              //  CurrDisp[i] := COPYSTR(CurrDisp[i],1,Pos + DispPlaces);
              i := i + 1;
            UNTIL i > DispPeriods;
            Title := Text012;
          END;
        // Production Orders
        ProdOrdLineNo:
          BEGIN
            CLEAR(CurrDisp);
            REPEAT
              CurrDisp[i] := FORMAT(RoundVisibleValue(Forecast.GetProdOrders(i)));
              //Pos := STRPOS(CurrDisp[i],DecCharacter);
              //IF Pos <> 0 THEN
              //  CurrDisp[i] := COPYSTR(CurrDisp[i],1,Pos + DispPlaces);
               i := i + 1;
            UNTIL i > DispPeriods;
            Title := Text013;
          END;
        // Component Lines
        CompLineNo:
          BEGIN
            CLEAR(CurrDisp);
            REPEAT
              CurrDisp[i] := FORMAT(RoundVisibleValue(Forecast.GetComp(i)));
              //Pos := STRPOS(CurrDisp[i],DecCharacter);
              //IF Pos <> 0 THEN
              //  CurrDisp[i] := COPYSTR(CurrDisp[i],1,Pos + DispPlaces);
              i := i + 1;
            UNTIL i > DispPeriods;
            Title := Text015;
          END;
        // Return Order Lines
        SalesReturnLineNo:
          BEGIN
            IF DisplaySalesReturnOrders THEN BEGIN
              CLEAR(CurrDisp);
              REPEAT
                CurrDisp[i] := FORMAT(RoundVisibleValue(Forecast.GetSalesReturnOrders(i)));
                //Pos := STRPOS(CurrDisp[i],DecCharacter);
                //IF Pos <> 0 THEN
                //  CurrDisp[i] := COPYSTR(CurrDisp[i],1,Pos + DispPlaces);
                i := i + 1;
              UNTIL i > DispPeriods;
              Title := Text026;
            END;
          END;
        // Net Inv. Position
        NetInvPosLineNo:
          BEGIN
            CLEAR(CurrDisp);
            REPEAT
              NetArray[i] := Forecast.GetNetInvPosition(i);
              CurrDisp[i] := FORMAT(RoundVisibleValue(NetArray[i]));
              //Pos := STRPOS(CurrDisp[i],DecCharacter);
              //IF Pos <> 0 THEN
              //  CurrDisp[i] := COPYSTR(CurrDisp[i],1,Pos + DispPlaces);
              i := i + 1;
            UNTIL i > DispPeriods;
            Title := Text017;
          END;
        // Lead Time Horizon
        LTHLineNo:
          BEGIN
            CLEAR(CurrDisp);
            CurrDisp[HorizonPeriod] := FORMAT(RoundVisibleValue(NetInvPos));

            //Pos := STRPOS(CurrDisp[HorizonPeriod],DecCharacter);
            //IF Pos <> 0 THEN
            //  CurrDisp[HorizonPeriod] := COPYSTR(CurrDisp[HorizonPeriod],1,Pos + DispPlaces);
            Title := STRSUBSTNO(Text018,FORMAT(OverrideLTHDate));
          END;
        // Prior Year
        PriorYearLineNo:
          BEGIN
            CLEAR(CurrDisp);
            REPEAT
              CurrDisp[i] := FORMAT(RoundVisibleValue(Forecast.GetPriorYear(i)));
              //Pos := STRPOS(CurrDisp[i],DecCharacter);
              //IF Pos <> 0 THEN
              //  CurrDisp[i] := COPYSTR(CurrDisp[i],1,Pos + DispPlaces);
              i := i + 1;
            UNTIL i > DispPeriods;
            Title := Text019;
          END;
        ELSE
          BEGIN
            Title := '';
            CLEAR(CurrDisp);
          END;
      END;
    END;

    PROCEDURE DrilldownRow@1240030003(CurrRow@1240030000 : Integer);
    VAR
      ForecastAdjTmp@1000000000 : Record 14002708;
    BEGIN
      IF UseCalcPeriods THEN
        InvPeriod.SETRANGE(Type,InvPeriod.Type::Calculate)
      ELSE
        InvPeriod.SETRANGE(Type);
      InvPeriod.SETRANGE("Starting Date",Forecast.GetPeriodStartingDate(CurrRow));
      InvPeriod.FIND('-');


      CASE Number OF
        ForecastLineNo: BEGIN
          ForecastAdjTmp.SetForecast(ProcUnit);
          CalcForecast;
          CurrPage.UPDATE(FALSE);
        END;
        ForecastAdjustLineNo:
          ShowForecastAdj(InvPeriod."Starting Date",InvPeriod."Ending Date");
        CustForecastLineNo:
          ShowForecastEntries(InvPeriod."Starting Date",InvPeriod."Ending Date");
        DemandLineNo:
          ShowSalesLines(InvPeriod."Starting Date",InvPeriod."Ending Date");
        ShipmentLineNo:
          ShowSalesShipmentLines(InvPeriod."Starting Date",InvPeriod."Ending Date");
        ConsumedFCLineNo:
          ShowConsumption(InvPeriod."Starting Date",InvPeriod."Ending Date");
        InventoryLineNo:
          ShowItemLedgerEntries;
        TransferLineNo:
          ShowTransferLines(InvPeriod."Starting Date",InvPeriod."Ending Date");
        PurchLineNo:
          ShowPurchaseOrderLines(InvPeriod."Starting Date",InvPeriod."Ending Date");
        ProdOrdLineNo:
          ShowProdOrders(InvPeriod."Starting Date",InvPeriod."Ending Date");
        CompLineNo:
          ShowComp(InvPeriod."Starting Date",InvPeriod."Ending Date");
        SalesReturnLineNo:
          ShowSalesLines(InvPeriod."Starting Date",InvPeriod."Ending Date");
        ELSE
          ERROR('');
      END;

      FirstOpenPeriod := FALSE;
    END;

    PROCEDURE ShowSalesLines@1240030002(StartingDate@1240030001 : Date;EndingDate@1240030000 : Date);
    BEGIN
      ProcUnit2.RESET;
      ProcUnit2.SETRANGE("Location Code",ProcUnit."Location Code");
      ProcUnit2.SETRANGE("Item No.",ProcUnit."Item No.");
      IF InvMgtSetup."Roll Up Via Repl. Path" THEN
        ProcUnit2.SETFILTER("Location Filter",UBP.GetLocationFilter(ProcUnit,FALSE))
      ELSE
        ProcUnit2.SETFILTER("Location Filter",UBP.GetLocationFilter(ProcUnit,SingleLocExpInv));
      IF NOT ProcUnit."Summarize Variant Detail" THEN
        ProcUnit2.SETRANGE("Variant Code",ProcUnit."Variant Code");
      IF FirstOpenPeriod THEN
        ProcUnit2.SETFILTER("Date Filter",'..%1',EndingDate)
      ELSE
        ProcUnit2.SETFILTER("Date Filter",'%1..%2',StartingDate,EndingDate);
      IF NOT ProcUnit."Summarize Variant Detail" THEN
        PAGE.RUNMODAL(PAGE::Demand,ProcUnit2)
      ELSE
        PAGE.RUNMODAL(PAGE::"Demand Sum.",ProcUnit2);
    END;

    PROCEDURE ShowSalesShipmentLines@1240030004(StartingDate@1240030000 : Date;EndingDate@1240030001 : Date);
    VAR
      ItemLedgerEnt@1240020000 : Record 32;
    BEGIN
      ItemLedgerEnt.SETCURRENTKEY(
        "Item No.","Entry Type","Variant Code","Drop Shipment","Location Code","Posting Date");
      IF InvMgtSetup."Roll Up Via Repl. Path" THEN
        ItemLedgerEnt.SETFILTER("Location Code",UBP.GetLocationFilter(ProcUnit,FALSE))
      ELSE
        ItemLedgerEnt.SETFILTER("Location Code",UBP.GetLocationFilter(ProcUnit,SingleLocExpInv));
      ItemLedgerEnt.SETRANGE("Item No.",ProcUnit."Item No.");
      IF NOT ProcUnit."Summarize Variant Detail" THEN
        ItemLedgerEnt.SETRANGE("Variant Code",ProcUnit."Variant Code");
      ItemLedgerEnt.SETRANGE("Entry Type",ItemLedgerEnt."Entry Type"::Sale);
      ItemLedgerEnt.SETFILTER("Posting Date",'%1..%2',StartingDate,EndingDate);
      ItemLedgerEnt.SETRANGE("Drop Shipment",FALSE);
      ItemLedgerEnt.SETRANGE(Positive,FALSE);
      PAGE.RUNMODAL(PAGE::"Item Ledger Entries",ItemLedgerEnt);
    END;

    PROCEDURE ShowConsumption@1240030011(StartingDate@1240030001 : Date;EndingDate@1240030000 : Date);
    VAR
      ItemLedgerEnt@1240020000 : Record 32;
    BEGIN
      ItemLedgerEnt.SETCURRENTKEY(
        "Location Code","Item No.","Variant Code","Entry Type",
        "Drop Shipment","Posting Date");
      ItemLedgerEnt.SETRANGE("Location Code",UBP.GetLocationFilter(ProcUnit,SingleLocExpInv));
      ItemLedgerEnt.SETRANGE("Item No.",ProcUnit."Item No.");
      IF NOT ProcUnit."Summarize Variant Detail" THEN
        ItemLedgerEnt.SETRANGE("Variant Code",ProcUnit."Variant Code");
      EntryTypeFilter := FORMAT(ItemLedgerEnt."Entry Type"::Sale);
      IF InvMgtSetup."Consider Neg. Adj. as Usage" THEN
        EntryTypeFilter := EntryTypeFilter + '|' + FORMAT(ItemLedgerEnt."Entry Type"::"Negative Adjmt.");
      IF InvMgtSetup."Consider Comp. Cons. as Usage" THEN BEGIN
        EntryTypeFilter := EntryTypeFilter + '|' + FORMAT(ItemLedgerEnt."Entry Type"::Consumption);
        EntryTypeFilter := EntryTypeFilter + '|' + FORMAT(ItemLedgerEnt."Entry Type"::"Assembly Consumption");
      END;
      ItemLedgerEnt.SETFILTER("Entry Type",EntryTypeFilter);
      ItemLedgerEnt.SETFILTER("Posting Date",'%1..%2',StartingDate,EndingDate);
      PAGE.RUNMODAL(PAGE::"Item Ledger Entries",ItemLedgerEnt);
    END;

    PROCEDURE ShowForecastEntries@1240030005(StartingDate@1240030000 : Date;EndingDate@1240030001 : Date);
    BEGIN
      ForecastEntry.RESET;
      ForecastEntry.SETCURRENTKEY(
        "Location Code","Item No.","Variant Code","Starting Date",Released);
      IF InvMgtSetup."Roll Up Via Repl. Path" THEN
        ForecastEntry.SETFILTER(
          "Location Code",UBP.GetUsageLocationFilter(
            ProcUnit."Location Code",ProcUnit."Item No.",ProcUnit."Variant Code",FALSE))
      ELSE
        ForecastEntry.SETFILTER(
          "Location Code",UBP.GetUsageLocationFilter(
            ProcUnit."Location Code",ProcUnit."Item No.",ProcUnit."Variant Code",SingleLocExpInv));
      ForecastEntry.SETRANGE("Item No.",ProcUnit."Item No.");
      IF NOT ProcUnit."Summarize Variant Detail" THEN
        ForecastEntry.SETRANGE("Variant Code",ProcUnit."Variant Code");
      ForecastEntry.SETFILTER("Starting Date",'%1..%2',StartingDate,EndingDate);
      ForecastEntry.SETRANGE(Released,TRUE);
      PAGE.RUNMODAL(PAGE::"Forecast Entries",ForecastEntry);
    END;

    PROCEDURE ShowItemLedgerEntries@1240030006();
    VAR
      ItemLedgerEnt@1240020000 : Record 32;
    BEGIN
      ItemLedgerEnt.SETCURRENTKEY(
        "Item No.","Entry Type","Variant Code","Drop Shipment","Location Code","Posting Date");
      ItemLedgerEnt.SETFILTER("Location Code",UBP.GetLocationFilter(ProcUnit,SingleLocExpInv));
      ItemLedgerEnt.SETRANGE("Item No.",ProcUnit."Item No.");
      IF NOT ProcUnit."Summarize Variant Detail" THEN
        ItemLedgerEnt.SETRANGE("Variant Code",ProcUnit."Variant Code");
      PAGE.RUNMODAL(PAGE::"Item Ledger Entries",ItemLedgerEnt);
    END;

    PROCEDURE ShowTransferLines@1240030007(StartingDate@1240030000 : Date;EndingDate@1240030001 : Date);
    BEGIN
      ProcUnit2.RESET;
      ProcUnit2.SETRANGE("Location Code",ProcUnit."Location Code");
      ProcUnit2.SETRANGE("Item No.",ProcUnit."Item No.");
      ProcUnit2.SETFILTER("Location Filter",UBP.GetLocationFilter(ProcUnit,SingleLocExpInv));
      IF NOT ProcUnit."Summarize Variant Detail" THEN
        ProcUnit2.SETRANGE("Variant Code",ProcUnit."Variant Code");
      IF FirstOpenPeriod THEN
        ProcUnit2.SETFILTER("Date Filter",'..%1',EndingDate)
      ELSE
        ProcUnit2.SETFILTER("Date Filter",'%1..%2',StartingDate,EndingDate);
      IF NOT ProcUnit."Summarize Variant Detail" THEN
        PAGE.RUNMODAL(PAGE::"Open Transfer Lines",ProcUnit2)
      ELSE
        PAGE.RUNMODAL(PAGE::"Open Transfer Lines Sum.",ProcUnit2);
    END;

    PROCEDURE ShowPurchaseOrderLines@1240030008(StartingDate@1240030000 : Date;EndingDate@1240030001 : Date);
    BEGIN
      ProcUnit2.RESET;
      ProcUnit2.SETCURRENTKEY("Location Code","Item No.","Variant Code");
      ProcUnit2.SETRANGE("Location Code",ProcUnit."Location Code");
      ProcUnit2.SETRANGE("Item No.",ProcUnit."Item No.");
      ProcUnit2.SETFILTER("Location Filter",UBP.GetLocationFilter(ProcUnit,SingleLocExpInv));
      IF NOT ProcUnit."Summarize Variant Detail" THEN
        ProcUnit2.SETRANGE("Variant Code",ProcUnit."Variant Code");
      IF FirstOpenPeriod THEN
        ProcUnit2.SETFILTER("Date Filter",'..%1',EndingDate)
      ELSE
        ProcUnit2.SETFILTER("Date Filter",'%1..%2',StartingDate,EndingDate);
      IF NOT ProcUnit."Summarize Variant Detail" THEN
        PAGE.RUNMODAL(PAGE::"Net Purchase Lines",ProcUnit2)
      ELSE
        PAGE.RUNMODAL(PAGE::"Net Purchase Lines Sum.",ProcUnit2)
    END;

    PROCEDURE ShowProdOrders@1240030014(StartingDate@1240030001 : Date;EndingDate@1240030000 : Date);
    VAR
      ProdOrderLine@1240030002 : Record 5406;
    BEGIN
      ProcUnit2.RESET;
      ProcUnit2.SETRANGE("Location Code",ProcUnit."Location Code");
      ProcUnit2.SETRANGE("Item No.",ProcUnit."Item No.");
      ProcUnit2.SETRANGE("Variant Code",ProcUnit."Variant Code");
      IF FirstOpenPeriod THEN
        ProcUnit2.SETFILTER("Date Filter",'..%1',EndingDate)
      ELSE
        ProcUnit2.SETFILTER("Date Filter",'%1..%2',StartingDate,EndingDate);
      ProcUnit2.SETFILTER("Location Filter",UBP.GetLocationFilter(ProcUnit,SingleLocExpInv));
      ProcUnit2.SETFILTER("Prod. Order Status Filter",ProdStatFilter);
      PAGE.RUNMODAL(PAGE::"Assy. Prod. Total",ProcUnit2);
    END;

    PROCEDURE ShowComp@1240030015(StartingDate@1240030001 : Date;EndingDate@1240030000 : Date);
    VAR
      ProdOrderComp@1240030002 : Record 5407;
    BEGIN
      ProcUnit2.RESET;
      ProcUnit2.SETRANGE("Location Code",ProcUnit."Location Code");
      ProcUnit2.SETRANGE("Item No.",ProcUnit."Item No.");
      ProcUnit2.SETRANGE("Variant Code",ProcUnit."Variant Code");
      ProcUnit2.SETFILTER("Location Filter",UBP.GetLocationFilter(ProcUnit,SingleLocExpInv));
      ProcUnit2.SETFILTER("Prod. Order Status Filter",ProdStatFilter);
      IF FirstOpenPeriod THEN
        ProcUnit2.SETFILTER("Date Filter",'..%1',EndingDate)
      ELSE
        ProcUnit2.SETFILTER("Date Filter",'%1..%2',StartingDate,EndingDate);
      PAGE.RUNMODAL(PAGE::"Assy. Prod. Comp. Total",ProcUnit2);
    END;

    PROCEDURE ShowForecastAdj@1240030013(StartingDate@1240030000 : Date;EndingDate@1240030001 : Date);
    VAR
      ForecastAdj@1240030002 : Record 14002707;
    BEGIN
      ForecastAdj.RESET;
      ForecastAdj.SETCURRENTKEY(
        "Item No.","Variant Code","Location Code","Starting Date",
        ForecastAdj."Date Adjusted",ForecastAdj."Time Adjusted");
      ForecastAdj.SETRANGE("Item No.",ProcUnit."Item No.");
      ForecastAdj.SETRANGE("Variant Code",ProcUnit."Variant Code");
        ForecastAdj.SETFILTER(
          "Location Code",UBP.GetUsageLocationFilter(
            ProcUnit."Location Code",ProcUnit."Item No.",ProcUnit."Variant Code",SingleLocExpInv));
      ForecastAdj.SETFILTER("Starting Date",'%1..%2',StartingDate,EndingDate);
      PAGE.RUNMODAL(PAGE::"Forecast Adjust Lines",ForecastAdj);
    END;

    PROCEDURE CalcForecast@1240030010();
    BEGIN
      CLEAR(Forecast);
      Forecast.SetOverrideForSingleLocForecast(SingleLocForecast);
      Forecast.SetUseSurplusFactor(UseSurplusFactor);
      Forecast.SetUseExcessFactor(UseExcessFactor);
      Forecast.SetIgnoreFrozenForcAdjust(IgnoreFrozenForecast);
      Forecast.CalcPeriodStartingDates(Location,AdvForSetup."Periods to Forecast");
      Forecast.CalcForecast(ProcUnit,AdvForSetup."Periods to Forecast",SourceNo,SingleLocExpInv,UseCalcPeriods);
      Forecast.CalcForecastAdj(ProcUnit,AdvForSetup."Periods to Forecast");
      Forecast.CalcCustForecast(ProcUnit,AdvForSetup."Periods to Forecast");
      Forecast.CalcInvPlusExpRec(ProcUnit,AdvForSetup."Periods to Forecast");
      Forecast.CalcDemand(ProcUnit,AdvForSetup."Periods to Forecast");
      Forecast.CalcConsumed(ProcUnit,AdvForSetup."Periods to Forecast");
      IF OverrideLTHDate = 0D THEN
        OverrideLTHDate := UBP.GetLeadTimeHoriz(ProcUnit);
      Forecast.CalcAutoForcAdjustment(ProcUnit, OverrideLTHDate);
      Forecast.CalcInventory(ProcUnit,AdvForSetup."Periods to Forecast");
      Forecast.CalcNetTransfers(ProcUnit,AdvForSetup."Periods to Forecast");
      Forecast.CalcPurchOrders(ProcUnit,AdvForSetup."Periods to Forecast");
      Forecast.CalcSalesReturnOrders(ProcUnit,AdvForSetup."Periods to Forecast");
      Forecast.CalcPriorYear(ProcUnit,AdvForSetup."Periods to Forecast");
      Forecast.GetComp(AdvForSetup."Periods to Forecast");
      Forecast.CalcProdOrders(ProcUnit,AdvForSetup."Periods to Forecast");
      Forecast.CalcComp(ProcUnit,AdvForSetup."Periods to Forecast");
      HorizonPeriod := Forecast.GetLeadTimeHorizPeriod(OverrideLTHDate);
      // override calc periods - calc periods are used by default
      NetInvPos := Forecast.CalcNetNeed(ProcUnit, SourceNo, OverrideLTHDate, NOT UseCalcPeriods);
    END;

    PROCEDURE CalcForecastMinSOQ@1240020008();
    BEGIN
      IF OverrideLTHDate = 0D THEN
        OverrideLTHDate := UBP.GetLeadTimeHoriz(ProcUnit);
    END;

    LOCAL PROCEDURE GetPUCData@1240020004();
    VAR
      Vendor@1240020000 : Record 23;
      locText001@1240020001 : TextConst 'ENU=" Lead Time %1, Review Cycle %2, Safety %3"';
      MsgLength@1240020004 : Integer;
    BEGIN
      CASE ProcUnit."Replenishment Source Type" OF
        ProcUnit."Replenishment Source Type"::Vendor:
        BEGIN
          IF Vendor.GET(ProcUnit."Replenishment Source Code") THEN BEGIN
            IF Vendor.Name = '' THEN
              ReplenishmentSource := Vendor."No."
            ELSE
              ReplenishmentSource := Vendor.Name;
          END;
          ReplenishmentSource := COPYSTR(ReplenishmentSource, 1, 100);
        END;
        ProcUnit."Replenishment Source Type"::Location:
          IF Location.GET(ProcUnit."Replenishment Source Code") THEN BEGIN
            IF Location.Name = '' THEN
              ReplenishmentSource := Location.Code
            ELSE
              ReplenishmentSource := Location.Name;
          END;
        ProcUnit."Replenishment Source Type"::Production:
          ReplenishmentSource := Text021;
        ProcUnit."Replenishment Source Type"::Assembly:
          ReplenishmentSource := Text029;
      END;
    END;

    LOCAL PROCEDURE TitleOnFormat@19003572();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          TitleEmphasize := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp1OnFormat@19009337();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 1Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp2OnFormat@19008376();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 2Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp3OnFormat@19007159();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 3Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp4OnFormat@19038006();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 4Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp5OnFormat@19005237();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 5Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp6OnFormat@19004276();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 6Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp7OnFormat@19003059();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 7Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp8OnFormat@19033922();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 8Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp9OnFormat@19001153();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 9Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp10OnFormat@19079527();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 10Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp11OnFormat@19077927();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 11Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp12OnFormat@19056935();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 12Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp13OnFormat@19059623();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 13Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp14OnFormat@19061928();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 14Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp15OnFormat@19068904();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 15Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp16OnFormat@19050408();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 16Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp17OnFormat@19042024();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 17Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp18OnFormat@19046824();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 18Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp19OnFormat@19079592();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 19Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp20OnFormat@19040746();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 20Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp21OnFormat@19079146();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 21Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp22OnFormat@19058154();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 22Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp23OnFormat@19060842();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 23Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp24OnFormat@19063143();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 24Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp25OnFormat@19070119();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 25Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp26OnFormat@19051623();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 26Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp27OnFormat@19043239();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 27Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp28OnFormat@19048039();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 28Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp29OnFormat@19040807();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 29Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp30OnFormat@19077349();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 30Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp31OnFormat@19075749();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 31Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp32OnFormat@19054757();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 32Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp33OnFormat@19057445();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 33Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp34OnFormat@19059750();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 34Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp35OnFormat@19066726();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 35Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp36OnFormat@19048230();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 36Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp37OnFormat@19079846();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 37Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp38OnFormat@19044646();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 38Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp39OnFormat@19077414();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 39Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp40OnFormat@19069856();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 40Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp41OnFormat@19068256();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 41Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp42OnFormat@19047264();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 42Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp43OnFormat@19049952();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 43Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp44OnFormat@19052253();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 44Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp45OnFormat@19059229();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 45Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp46OnFormat@19040733();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 46Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp47OnFormat@19072349();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 47Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp48OnFormat@19077149();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 48Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp49OnFormat@19069917();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 49Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp50OnFormat@19075435();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 50Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp51OnFormat@19073835();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 51Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE CurrDisp52OnFormat@19052843();
    BEGIN
      CASE LogicalLine[Number] OF
        TitleLineNo,TotalFCLineNo,AccumFCLineNo,NetInvPosLineNo,LTHLineNo,PriorYearLineNo:
          "Period 52Emphasize" := TRUE;
      END;
    END;

    LOCAL PROCEDURE IsPeriodVisible@1240020001(CurrPeriod@1240020000 : Integer) : Boolean;
    BEGIN
      counter += 1;
      IF counter <= DispPeriods THEN
        EXIT(TRUE)
      ELSE
        EXIT(FALSE);
    END;

    LOCAL PROCEDURE SetVisibleColumns@1240020002();
    BEGIN
      Per1Visible := IsPeriodVisible(1);
      Per2Visible := IsPeriodVisible(2);
      Per3Visible := IsPeriodVisible(3);
      Per4Visible := IsPeriodVisible(4);
      Per5Visible := IsPeriodVisible(5);
      Per6Visible := IsPeriodVisible(6);
      Per7Visible := IsPeriodVisible(7);
      Per8Visible := IsPeriodVisible(8);
      Per9Visible := IsPeriodVisible(9);
      Per10Visible := IsPeriodVisible(10);
      Per11Visible := IsPeriodVisible(11);
      Per12Visible := IsPeriodVisible(12);
      Per13Visible := IsPeriodVisible(13);
      Per14Visible := IsPeriodVisible(14);
      Per15Visible := IsPeriodVisible(15);
      Per16Visible := IsPeriodVisible(16);
      Per17Visible := IsPeriodVisible(17);
      Per18Visible := IsPeriodVisible(18);
      Per19Visible := IsPeriodVisible(19);
      Per20Visible := IsPeriodVisible(20);
      Per21Visible := IsPeriodVisible(21);
      Per22Visible := IsPeriodVisible(22);
      Per23Visible := IsPeriodVisible(23);
      Per24Visible := IsPeriodVisible(24);
      Per25Visible := IsPeriodVisible(25);
      Per26Visible := IsPeriodVisible(26);
      Per27Visible := IsPeriodVisible(27);
      Per28Visible := IsPeriodVisible(28);
      Per29Visible := IsPeriodVisible(29);
      Per30Visible := IsPeriodVisible(30);
      Per31Visible := IsPeriodVisible(31);
      Per32Visible := IsPeriodVisible(32);
      Per33Visible := IsPeriodVisible(33);
      Per34Visible := IsPeriodVisible(34);
      Per35Visible := IsPeriodVisible(35);
      Per36Visible := IsPeriodVisible(36);
      Per37Visible := IsPeriodVisible(37);
      Per38Visible := IsPeriodVisible(38);
      Per39Visible := IsPeriodVisible(39);
      Per40Visible := IsPeriodVisible(40);
      Per41Visible := IsPeriodVisible(41);
      Per42Visible := IsPeriodVisible(42);
      Per43Visible := IsPeriodVisible(43);
      Per44Visible := IsPeriodVisible(44);
      Per45Visible := IsPeriodVisible(45);
      Per46Visible := IsPeriodVisible(46);
      Per47Visible := IsPeriodVisible(47);
      Per48Visible := IsPeriodVisible(48);
      Per49Visible := IsPeriodVisible(49);
      Per50Visible := IsPeriodVisible(50);
      Per51Visible := IsPeriodVisible(51);
      Per52Visible := IsPeriodVisible(52);
    END;

    LOCAL PROCEDURE ToggleAllFieldsVisible@1240020003();
    BEGIN
      Per1Visible := TRUE;
      Per2Visible :=TRUE;
      Per3Visible :=TRUE;
      Per4Visible :=TRUE;
      Per5Visible :=TRUE;
      Per6Visible :=TRUE;
      Per7Visible :=TRUE;
      Per8Visible :=TRUE;
      Per9Visible :=TRUE;
      Per10Visible :=TRUE;
      Per11Visible :=TRUE;
      Per12Visible :=TRUE;
      Per13Visible :=TRUE;
      Per14Visible :=TRUE;
      Per15Visible :=TRUE;
      Per16Visible :=TRUE;
      Per17Visible :=TRUE;
      Per18Visible :=TRUE;
      Per19Visible :=TRUE;
      Per20Visible :=TRUE;
      Per21Visible :=TRUE;
      Per22Visible :=TRUE;
      Per23Visible :=TRUE;
      Per24Visible :=TRUE;
      Per25Visible :=TRUE;
      Per26Visible :=TRUE;
      Per27Visible :=TRUE;
      Per28Visible :=TRUE;
      Per29Visible :=TRUE;
      Per30Visible :=TRUE;
      Per31Visible :=TRUE;
      Per32Visible :=TRUE;
      Per33Visible :=TRUE;
      Per34Visible :=TRUE;
      Per35Visible :=TRUE;
      Per36Visible :=TRUE;
      Per37Visible :=TRUE;
      Per38Visible :=TRUE;
      Per39Visible :=TRUE;
      Per40Visible :=TRUE;
      Per41Visible :=TRUE;
      Per42Visible :=TRUE;
      Per43Visible :=TRUE;
      Per44Visible :=TRUE;
      Per45Visible :=TRUE;
      Per46Visible :=TRUE;
      Per47Visible :=TRUE;
      Per48Visible :=TRUE;
      Per49Visible :=TRUE;
      Per50Visible :=TRUE;
      Per51Visible :=TRUE;
      Per52Visible :=TRUE;
    END;

    LOCAL PROCEDURE SetPeriodColumnsToDisplay@1240020032();
    VAR
      DispPeriodNeed@1240020000 : Integer;
    BEGIN
      IF UseCalcPeriods THEN
        DispPeriods := AdvForSetup."Periods to Calculate"
      ELSE
        DispPeriods := AdvForSetup."Periods to Forecast";

      // Columns Shown (AKA Periods)
      IF AdvForSetup."FC View Default No. of Columns" > 0 THEN
        DispPeriods := AdvForSetup."FC View Default No. of Columns";
      IF ForecastUserSetup."FC View Default No. of Columns" > 0 THEN
        DispPeriods := ForecastUserSetup."FC View Default No. of Columns";
      IF SelNoOfColumns > 0 THEN
        DispPeriods := SelNoOfColumns;

      // check display periods
      CLEAR(Forecast);
      Forecast.SetUseCalcPeriods(UseCalcPeriods);
      IF UseCalcPeriods THEN BEGIN
        Forecast.CalcPeriodStartingDates(Location, AdvForSetup."Periods to Calculate");
      END ELSE BEGIN
      Forecast.CalcPeriodStartingDates(Location,AdvForSetup."Periods to Forecast");
      END;
      //Forecast.CalcPeriodStartingDates(Location, DispPeriods);
      IF UseCalcPeriods THEN BEGIN
      Forecast.LoadForCalcPeriods;
      Forecast.LoadForPerWithCalcPer;
      END;
      IF OverrideLTHDate = 0D THEN
        OverrideLTHDate := UBP.GetLeadTimeHoriz(ProcUnit);
      DispPeriodNeed := Forecast.GetLeadTimeHorizPeriod(OverrideLTHDate);
      IF DispPeriods < DispPeriodNeed THEN BEGIN
        DispPeriods := DispPeriodNeed;
      END;
    END;

    LOCAL PROCEDURE UpdatePage@1240020005();
    BEGIN
      counter := 0;
      SetPeriodColumnsToDisplay;
      SetVisibleColumns;
      CalcForecast;
      SetReplenishmentTabData(ProcUnit);
      CurrPage.AFPForecastChart.PAGE.SetProcUnit(ProcUnit."Location Code", ProcUnit."Item No.", ProcUnit."Variant Code");
    END;

    LOCAL PROCEDURE SetReplenishmentTabData@1240020000(VAR CurrProcUnit@1240020000 : Record 14000555);
    VAR
      SporadicTargetStock@1000000000 : Decimal;
      SafetyStockValue@1000000003 : Decimal;
      SafetyStockCaption@1000000002 : Text[50];
    BEGIN
      CurrPage.ProcurementUnitFB.PAGE.SetProcUnitandSourceNo(ProcUnit, SourceNo);
      SporadicTargetStock := Forecast.GetTargetStockLevel;
      CalculateCycleDays(CycleValue, CycleCaption);

      NeedMessage := Forecast.GetNetInvPosSource();

      // get from forecast
      UBP.GetSafetyStock(ProcUnit,SafetyStockValue,SafetyStockCaption);
      IF (CurrProcUnit."Safety Stock Calc. Method" = CurrProcUnit."Safety Stock Calc. Method"::Fixed) THEN BEGIN
        SafetyStockCaption := SafetyStockCaption + ' at ' + FORMAT(Forecast.GetSafetyStockQtyFromDays(SafetyStockValue));
        END;

      CurrPage.ForecastViewFB.PAGE.SetReplenishmentInfo(ReplenishmentSource,
          UBP.CalcLeadTimeDays(ProcUnit),
          CycleValue,
          CycleCaption,
          SafetyStockValue,
          SafetyStockCaption,
          SporadicTargetStock,
          Forecast.GetReplenishmentText(ProcUnit),
          Forecast.GetTrendText(),
          Forecast.GetSafetyStockQty,
          Forecast.GetAddtionalStockQty,
          Forecast.GetAverageOrderQty,
          CurrProcUnit."Minimum Shelf Stock",
          NeedMessage,
          UBP.GetLeadTimeSource());
    END;

    LOCAL PROCEDURE CalculateSingleLocForecast@1240020006();
    BEGIN
      SingleLocForecast := NOT SingleLocForecast;
      UpdatePage;
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE SetCalcSingleLocForecast@1240020007();
    BEGIN
      SingleLocForecast := TRUE;
    END;

    LOCAL PROCEDURE RoundVisibleValue@1000000000(CurrValue@1000000000 : Decimal) : Decimal;
    BEGIN
      IF NOT DoNotRound THEN
        Forecast.RoundValueForForecast(ProcUnit, CurrValue)
      ELSE
        CurrValue := ROUND(CurrValue,0.00001);
      EXIT(CurrValue);
    END;

    PROCEDURE TotForcast1@1000000001() : Decimal;
    VAR
      CurrDisp2@1000000000 : ARRAY [15] OF Decimal;
      CurrDisp3@1000000001 : Decimal;
      J@1000000002 : Integer;
      NextDate@1000000003 : Date;
      DateIndex@1000000004 : Integer;
      K@1000000005 : Integer;
      M@1000000006 : Integer;
      DateDisp@1000000007 : ARRAY [50] OF Date;
    BEGIN
      //<TPZ2590>
      CLEAR(CurrDisp2);
      CLEAR(CurrDisp3);
      SetPeriodColumnsToDisplay;
      GetPUCData;
      CalcForecast;

      M :=1;
      FOR M := 1 TO DispPeriods DO
       DateDisp[M] := (Forecast.GetPeriodStartingDate(M));

      NextDate :=  CALCDATE ('<-CM>', WORKDATE);

      REPEAT
        J+=1;
        IF NextDate = DateDisp[J] THEN
            DateIndex := J;
      UNTIL (NextDate = DateDisp[J]) OR (J = 50);

      FOR K:= DateIndex TO (DateIndex+2) DO BEGIN
        CurrDisp2[K] := (Forecast.GetForecastOnly(K));
        //IF CurrDisp2[K] = 0 THEN
          //EXIT(0);
        CurrDisp3 := CurrDisp3 + CurrDisp2[K];
      END;

      EXIT(CurrDisp3);
      //</TPZ2590>
    END;

    PROCEDURE TotForcast@1000000002() : Decimal;
    VAR
      CurrDisp2@1000000000 : ARRAY [15] OF Decimal;
      CurrDisp3@1000000001 : Decimal;
      J@1000000002 : Integer;
      NextDate@1000000003 : Date;
      DateIndex@1000000004 : Integer;
      K@1000000005 : Integer;
      M@1000000006 : Integer;
      DateDisp@1000000007 : ARRAY [50] OF Date;
    BEGIN
      //<TPZ2590>
      CLEAR(CurrDisp2);
      CLEAR(CurrDisp3);
      SetPeriodColumnsToDisplay;
      GetPUCData;
      CalcForecast;

      M :=1;
      FOR M := 1 TO DispPeriods DO
       DateDisp[M] := (Forecast.GetPeriodStartingDate(M));

      NextDate :=  CALCDATE ('<-CM>', WORKDATE);

      REPEAT
        J+=1;
        IF NextDate = DateDisp[J] THEN
            DateIndex := J;
      UNTIL (NextDate = DateDisp[J]) OR (J = 50);

      FOR K:= DateIndex TO (DateIndex+2) DO BEGIN
        CurrDisp2[K] := (Forecast.GetTotalForecast(K));
        CurrDisp3 := CurrDisp3 + CurrDisp2[K];
      END;

      EXIT(CurrDisp3);
      //</TPZ2590>
    END;

    LOCAL PROCEDURE CalculateFrozenForecast@1240020011();
    BEGIN
      IgnoreFrozenForecast := NOT IgnoreFrozenForecast;
      UpdatePage;
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE CalculateCycleDays@1240020009(VAR CycleValue@1240020001 : Integer;VAR CycleCaption@1240020002 : Text[30]);
    VAR
      UBP@1240020000 : Codeunit 14000564;
      TxtProductionIncrement@1240020006 : TextConst 'ENU=Production Increment Cycle';
      TxtAssemblyIncrement@1240020005 : TextConst 'ENU=Assembly Increment Cycle';
      TxtLocationIncrement@1240020004 : TextConst 'ENU=Location Increment Cycle';
      TxtReviewCycle@1240020003 : TextConst 'ENU=Vendor Review Cycle';
    BEGIN
      CycleValue := 0;
      CASE ProcUnit."Replenishment Source Type" OF
        ProcUnit."Replenishment Source Type"::Vendor:
        BEGIN
          CycleValue := UBP.GetReviewCycle(ProcUnit);
          CycleCaption := TxtReviewCycle;
        END;
        ProcUnit."Replenishment Source Type"::Production:
        BEGIN
          CycleValue := UBP.GetProductionTemplateIncrDays(ProcUnit."Location Code");
          CycleCaption := TxtProductionIncrement;
        END;
        ProcUnit."Replenishment Source Type"::Assembly:
        BEGIN
          CycleValue := UBP.GetAssemblyIncrementDays();
          CycleCaption := TxtAssemblyIncrement;
        END;
        // not allowed in roll-up
        ProcUnit."Replenishment Source Type"::Location:
        BEGIN
          CycleValue := InvMgtSetup."Roll Up Increment Days";
          CycleCaption := TxtLocationIncrement;
        END;
      END;
    END;

    PROCEDURE SetUseSurplusFactor@1240020027(inUseSurplusFactor@1240020002 : Boolean);
    BEGIN
      UseSurplusFactor := inUseSurplusFactor;
    END;

    PROCEDURE SetUseExcessFactor@1240020048(inUseExcessFactor@1240020000 : Boolean);
    BEGIN
      UseExcessFactor := inUseExcessFactor;
    END;

    BEGIN
    END.
  }
}

