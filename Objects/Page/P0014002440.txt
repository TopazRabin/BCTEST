OBJECT Page 14002440 E.D.I. Adj. Inventory  Subform
{
  OBJECT-PROPERTIES
  {
    Date=02/25/19;
    Time=12:00:00 PM;
    Version List=SE0.61;
  }
  PROPERTIES
  {
    CaptionML=ENU=E.D.I. Adjustment Invt.  Subform;
    SourceTable=Table14002414;
    DelayedInsert=Yes;
    SourceTableView=SORTING(Inventory Advice No.,Type,Line No.)
                    ORDER(Ascending)
                    WHERE(Type=FILTER(Adjustment));
    PageType=ListPart;
    AutoSplitKey=Yes;
    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=ENU=&Line }
      { 1900066304;2 ;ActionGroup;
                      CaptionML=ENU=Item Availablity by }
      { 1901941704;3 ;Action    ;
                      CaptionML=ENU=Period;
                      OnAction=BEGIN
                                 GetItemAvailability(0);
                               END;
                                }
      { 1901941804;3 ;Action    ;
                      CaptionML=ENU=Variant;
                      OnAction=BEGIN
                                 GetItemAvailability(1);
                               END;
                                }
      { 1900066604;3 ;Action    ;
                      CaptionML=ENU=Location;
                      OnAction=BEGIN
                                 GetItemAvailability(2);
                               END;
                                }
      { 1903049004;2 ;ActionGroup;
                      CaptionML=ENU=Sales Orders }
      { 1901602604;3 ;Action    ;
                      CaptionML=ENU=Customer;
                      OnAction=BEGIN
                                 GetSalesOrders(0);
                               END;
                                }
      { 1903727404;3 ;Action    ;
                      CaptionML=ENU=Location;
                      OnAction=BEGIN
                                 GetSalesOrders(1);
                               END;
                                }
      { 1902281004;2 ;ActionGroup;
                      CaptionML=ENU=Purchase Orders }
      { 1900834604;3 ;Action    ;
                      CaptionML=ENU=Vendor;
                      OnAction=BEGIN
                                 GetPurchaseOrders(0);
                               END;
                                }
      { 1903388204;3 ;Action    ;
                      CaptionML=ENU=Location;
                      OnAction=BEGIN
                                 GetPurchaseOrders(1);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1240030000;1;Group  ;
                GroupType=Repeater }

    { 1240020022;2;Field  ;
                ToolTipML=ENU=Specifies "Type" - Item.;
                SourceExpr=Type;
                Visible=FALSE }

    { 1240030001;2;Field  ;
                ToolTipML=ENU=Specifies the system item number.;
                SourceExpr="No.";
                Editable=TRUE }

    { 1240030003;2;Field  ;
                ToolTipML=ENU=Populates with the item's Description.;
                SourceExpr=Description;
                Editable=TRUE }

    { 1240020000;2;Field  ;
                ToolTipML=ENU=Populate with the applicable "Location Code.";
                SourceExpr="Location Code" }

    { 1240020002;2;Field  ;
                SourceExpr="Adjustment Quantity" }

    { 1240020008;2;Field  ;
                SourceExpr="Adjustment Description" }

    { 1240020018;2;Field  ;
                ToolTipML=ENU=Optionally, select the applicable Reason Code from the list to send in the outbound EDI file.;
                SourceExpr="EDI Reason Code";
                Editable=false;
                OnLookup=VAR
                           EDIStatusCode@1240020000 : Record 14002406;
                           EDIInventoryAdviceHdr@1240020001 : Record 14002413;
                           EDIDocument@1240020002 : Record 14002353;
                           EDIRecDocHdr@1240020003 : Record 14002358;
                           DocumentNo@1240020004 : Code[10];
                         BEGIN
                           EDIInventoryAdviceHdr.GET("Inventory Advice No.",Type);
                           IF EDIRecDocHdr.GET(EDIInventoryAdviceHdr."EDI Internal Doc. No.") THEN BEGIN
                             IF EDIDocument.GET(
                                 EDIRecDocHdr."Trade Partner No.",EDIRecDocHdr."Navision Document",
                                 EDIRecDocHdr."EDI Document No.",EDIRecDocHdr."EDI Version",EDIDocument.Type::Import)
                             THEN
                               DocumentNo := EDIDocument."EDI Document No."
                             ELSE
                               DocumentNo := '947';
                           END;

                           EDIStatusCode.RESET;
                           EDIStatusCode.SETRANGE("Trade Partner No.","Trade Partner No.");
                           EDIStatusCode.SETRANGE(Line,TRUE);
                           EDIStatusCode.SETRANGE(Code,"EDI Reason Code");
                           EDIStatusCode.SETRANGE("EDI Document No.",DocumentNo);
                           IF EDIStatusCode.FIND('-') THEN
                             EDIStatusCode.SETRANGE(Code);
                           IF PAGE.RUNMODAL(PAGE::"E.D.I. Status Codes",EDIStatusCode,EDIStatusCode.Code) = ACTION::LookupOK THEN
                             ;
                         END;
                          }

    { 1240020004;2;Field  ;
                ToolTipML=ENU=Populates with the received, mapped damaged quantity. When the Item Journal is created, the Location Code will reflect the EDI Document's 'Damaged Location.';
                SourceExpr="Damaged Quantity";
                Editable=TRUE }

    { 1240020006;2;Field  ;
                ToolTipML=ENU=Populates with the received, mapped on hold quantity. When the system Item Journal is created, the Location Code will reflect the EDI Document's 'On Hold Location.';
                SourceExpr="Quantity On Hold";
                Editable=TRUE }

    { 1240030009;2;Field  ;
                ToolTipML=ENU=Specifies the item's "Unit of Measure.";
                SourceExpr="Unit of Measure Code";
                Editable=TRUE }

    { 1240030011;2;Field  ;
                ToolTipML=ENU=Specifies the item's "Variant Code.";
                SourceExpr="Variant Code";
                Editable=TRUE }

    { 1240030013;2;Field  ;
                ToolTipML=ENU=Populates with the cross reference number from the system Item Cross Reference table when the EDI Document's 'Auto. Create Item Filter' - Item Cross Ref.;
                SourceExpr="Cross-Reference No.";
                Visible=FALSE;
                Editable=TRUE }

    { 1240020010;2;Field  ;
                ToolTipML=ENU=Specifies the lot number of the item being handled for the associated document line.;
                SourceExpr="Lot No.";
                Visible=FALSE;
                Editable=TRUE }

    { 1240020014;2;Field  ;
                ToolTipML=ENU=Specifies the expiration date, if any, of the item carrying the item tracking number.;
                SourceExpr="Expiration Date";
                Visible=FALSE;
                Editable=TRUE }

    { 1240020012;2;Field  ;
                ToolTipML=ENU=Specifies the serial number of the item being handled for the associated document line.;
                SourceExpr="Serial No.";
                Visible=FALSE;
                Editable=TRUE }

    { 1240020016;2;Field  ;
                ToolTipML=ENU=Specifies the warranty date of the item being handled for the associated document line.;
                SourceExpr="Warranty Date";
                Visible=FALSE;
                Editable=TRUE }

  }
  CODE
  {

    PROCEDURE GetSalesOrders@1240030000(FilterType@1240030000 : 'Customer,Location');
    BEGIN
      Rec.SalesOrders(FilterType);
    END;

    PROCEDURE GetPurchaseOrders@1240030001(FilterType@1240030000 : 'Vendor,Location');
    BEGIN
      Rec.PurchaseOrders(FilterType);
    END;

    PROCEDURE GetItemAvailability@19008035(AvailabilityType@1000 : 'Date,Variant,Location');
    BEGIN
      Rec.ItemAvailability(AvailabilityType);
    END;

    BEGIN
    END.
  }
}

