OBJECT Page 14002381 E.D.I. Send Document
{
  OBJECT-PROPERTIES
  {
    Date=02/25/19;
    Time=12:00:00 PM;
    Version List=SE0.61;
  }
  PROPERTIES
  {
    CaptionML=ENU=E.D.I. Send Document;
    InsertAllowed=No;
    SourceTable=Table14002369;
    PageType=Card;
    OnInit=BEGIN
             XMLDoc := FALSE;
             NonXMLDoc := FALSE;
           END;

    OnOpenPage=BEGIN
                 GetDocType;
                 SetCaption;
               END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 26      ;1   ;ActionGroup;
                      CaptionML=ENU=&Document }
      { 40      ;2   ;Action    ;
                      CaptionML=ENU=&Trace;
                      ToolTipML=ENU=Lists all system and EDI records containing the same 'EDI Internal Doc No.' or associated records.;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Trace;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CLEAR(EDITrace);
                                 EDITrace.SetDoc("Internal Doc No.");
                                 EDITrace.RUNMODAL;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 38      ;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 39      ;2   ;Action    ;
                      CaptionML=ENU=&Export Document;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=TransmitElectronicDoc;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 TESTFIELD("Internal Doc No.");
                                 EDISend.ExportSingleDoc(Rec);
                               END;
                                }
      { 1240030000;2 ;Action    ;
                      CaptionML=ENU=Arch&ive Document;
                      ToolTipML=ENU=Select to Archive the EDI Send Document. Archiving allows for faster sorting and filtering of the data.;
                      Image=History;
                      OnAction=BEGIN
                                 EDIArchiveManagement.ArchiveSendDocument(Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1240020000;2 ;ActionGroup;
                      CaptionML=ENU=View Text EDI File;
                      Image=View }
      { 1240020001;3 ;Action    ;
                      CaptionML=ENU=Outbox EDI File;
                      Promoted=Yes;
                      Image=View;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ViewTextEDIDocument(FALSE);
                               END;
                                }
      { 1240020002;3 ;Action    ;
                      CaptionML=ENU=Outbox Archive EDI File;
                      Promoted=Yes;
                      Image=View;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ViewTextEDIDocument(TRUE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=ENU=General }

    { 2   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the Internal EDI Document Number associated to the EDI Send Document. The EDI Setup's "Last Internal Document No." is used to assign the number and increment.;
                SourceExpr="Internal Doc No." }

    { 4   ;2   ;Field     ;
                ToolTipML=ENU=System Document number that is the source of the EDI Send Document.;
                SourceExpr="Document No." }

    { 1000000000;2;Field  ;
                SourceExpr="Shortcut Dimension 5 Code" }

    { 6   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the version of the EDI Send Docment. The version number will increment each time a new EDI Send Document is created unless the Send Document has "Data Error" - TRUE in which the version will be overwritten.;
                SourceExpr=Version }

    { 8   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the Trade Partner "No." from the Trade Partner page.;
                SourceExpr="Trade Partner No.";
                Importance=Promoted }

    { 23  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the free form name identifying the Trade Partner for the outbound document.;
                SourceExpr="EDI Trade Partner Name" }

    { 12  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the template's name associated to an EDI document which defines how to handle the outbound document.;
                SourceExpr="EDI Template Name";
                Importance=Promoted }

    { 10  ;2   ;Field     ;
                ToolTipML=ENU=Represents the system functionality associated to the Document. For Import, a Receive Documents is created and determines the system destination of the data. For Export, a Send Document is created from the applicable system document.;
                SourceExpr="Navision Document" }

    { 45  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the EDI document number identifying the transaction. For Delimited X12 files, it is included as part of the file name for Inbox and Outbox files. It is exported as the ST-01. For Sterling/Gentran, set as position 1 on each line.;
                SourceExpr="EDI Document No.";
                Importance=Promoted }

    { 41  ;2   ;Field     ;
                ToolTipML=ENU=Enabled if errors were encountered while creating the EDI Send Document. Data Errors are detected by not meeting the Minimum Length requirement as defined in the EDI Trade Partner Document map.;
                SourceExpr="Data Error" }

    { 25  ;1   ;Part      ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page14002382 }

    { 1900025701;1;Group  ;
                CaptionML=ENU=Sent }

    { 28  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the date the record was created.;
                SourceExpr="Created Date";
                Importance=Promoted }

    { 30  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the time the record was created.;
                SourceExpr="Created Time" }

    { 32  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the date the EDI Send Document was exported.;
                SourceExpr="Sent Date";
                Importance=Promoted }

    { 34  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the time the EDI Send Document was exported.;
                SourceExpr="Sent Time" }

    { 48  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the folder path and name of the file as it is exported. The folder path is specified on the EDI Template and the name of the file is a combination of EDI Doc's 'Interface File'+'EDI Document No.'+EDISetup's 'Last Export Sequence.';
                SourceExpr="Interface File Name";
                Importance=Promoted }

    { 14  ;2   ;Field     ;
                ToolTipML=ENU=Populates with the Interchange Control No. from the associated EDI Template upon export. For X12 documents, it is used in the ISA-13 envelope of the exported file.;
                SourceExpr="Interchange Control No.";
                Visible=NonXMLDoc }

    { 16  ;2   ;Field     ;
                ToolTipML=ENU=Populates with the Group Control No. from the associated EDI Template upon export. For X12 documents, it is used in the GS-06 envelope of the exported file. For EDIFACT documents, it is used in the UNB-050 envelope of the exported file.;
                SourceExpr="Group Control No.";
                Visible=NonXMLDoc }

    { 18  ;2   ;Field     ;
                ToolTipML=ENU=Populates with the Interchange Set Control No. from the associated EDI Template upon export. For X12 documents, it is used in the ST-02 envelope of the exported file. For EDIFACT documents, it is used in the UNH-010 envelope of the exported file.;
                SourceExpr="Transaction Set Control No.";
                Visible=NonXMLDoc }

    { 20  ;2   ;Field     ;
                ToolTipML=ENU=When enabled, an attempt will be made to reconcile the outbound documents with the inbound Functional Acknowledgement (997) from the Trade Partner in the Functional Acknowledgement Status page.;
                SourceExpr="Funct. Ack. Required";
                CaptionClass=FunctAckReqCaption }

    { 36  ;2   ;Field     ;
                ToolTipML=ENU=Populates with the Functional Group Status from the inbound Functional Acknowledgement for the EDI Send Document. Valid Options are <blank>, Accepted, Accepted Errors, Part Accepted and Rejected.;
                SourceExpr="Funct. Group Ack. Status";
                Importance=Promoted;
                Visible=NonXMLDoc }

    { 43  ;2   ;Field     ;
                ToolTipML=ENU=Populates with the Transaction's Functional Group Status from the inbound Functional Acknowledgement for the EDI Send Document. Valid Options are <blank>, Accepted, Accepted Errors, Part Accepted and Rejected.;
                SourceExpr="Tran. Set Funct. Ack. Status";
                Importance=Promoted;
                Visible=NonXMLDoc }

    { 1240020003;2;Field  ;
                ToolTipML=ENU=The value in this field ties the associated XML outbound document with the inbound document (ie, PO number) from inbound purchase order returned to identify outbound invoice.;
                SourceExpr="Reference ID";
                Visible=XMLDoc }

    { 1240020009;2;Field  ;
                ToolTipML=ENU=Specifies the XML uniquely created number sent in a Response document.;
                SourceExpr="Reference Type";
                Visible=XMLDoc }

    { 1240020008;2;Field  ;
                ToolTipML=ENU=The acknowledgement code received in the XML Response document. This valued is defined in the Response document EDI Status Code record.;
                SourceExpr="Response ID";
                Visible=XMLDoc }

    { 1240020004;2;Field  ;
                ToolTipML=ENU=A unique number used for logging purposes to identify documents. This value should not change for retry attempts.;
                SourceExpr="cXML Payload ID";
                Visible=XMLDoc }

    { 1240020005;2;Field  ;
                ToolTipML=ENU=The acknowledgement code sent in the Response document.;
                SourceExpr="Response Code";
                Visible=XMLDoc }

    { 1240020006;2;Field  ;
                ToolTipML=ENU=The action message code associated to the Response Code in the EDI Status Code record.;
                SourceExpr="Response Status";
                Importance=Promoted;
                Visible=XMLDoc }

    { 1240020007;2;Field  ;
                ToolTipML=ENU=The description of the XML Response Code. It is the Description set in the EDI Status Code record.;
                SourceExpr="Response Description";
                Visible=XMLDoc }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1901959207;1;Part   ;
                SubPageLink=Internal Doc No.=FIELD(Internal Doc No.),
                            Navision Document=FIELD(Navision Document),
                            Document No.=FIELD(Document No.),
                            Version=FIELD(Version);
                PagePartID=Page14050310;
                Visible=TRUE;
                PartType=Page }

  }
  CODE
  {
    VAR
      EDISend@1240030001 : Codeunit 14002356;
      EDIArchiveManagement@1240030003 : Codeunit 14000378;
      EDITrace@1240030002 : Page 14002386;
      XMLDoc@1240020000 : Boolean;
      NonXMLDoc@1240020001 : Boolean;
      FunctAckReqCaption@1240020002 : Text INDATASET;

    LOCAL PROCEDURE GetDocType@1240020000();
    BEGIN
      XMLDoc := "XML Document";
      IF XMLDoc THEN
        NonXMLDoc := FALSE
      ELSE
        NonXMLDoc := TRUE;
    END;

    LOCAL PROCEDURE SetCaption@1240020001();
    BEGIN
      IF XMLDoc THEN
        FunctAckReqCaption := 'Response Required'
      ELSE
        FunctAckReqCaption := 'Funct. Ack. Required';
    END;

    BEGIN
    END.
  }
}

