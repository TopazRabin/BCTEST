OBJECT Page 23044640 DSHIP Packages Info. Factbox
{
  OBJECT-PROPERTIES
  {
    Date=01/21/19;
    Time=[ 1:59:05 PM];
    Version List=DSHIP2.2.2;
  }
  PROPERTIES
  {
    CaptionML=ENU=Dynamic Ship Packages Info. Factbox;
    SourceTable=Table23044601;
    PageType=CardPart;
    SourceTableTemporary=Yes;
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Field  ;
                SourceExpr="No. of Packages" }

    { 1000000002;1;Field  ;
                SourceExpr="Total Package Weight" }

    { 1000000003;1;Field  ;
                SourceExpr="Weight Unit of Measure Code" }

    { 1000000004;1;Field  ;
                SourceExpr="Total Item Quantity" }

    { 1000000005;1;Field  ;
                SourceExpr="Total Packed Item Quantity" }

  }
  CODE
  {
    VAR
      recrRecRef@1000000001 : RecordRef;
      dItemQty@1000000000 : Decimal;

    PROCEDURE setOrder@1000000002(VAR precrRecRef@1000000000 : RecordRef);
    BEGIN
      //<FUNC>
      //  Description: Sets the order to grab details from
      //  Called From: PAGE DSHIP Package Worksheet (P23044602)
      //  Side Effect: None
      //</FUNC>

      recrRecRef := precrRecRef;

      getOrderInfo;
    END;

    LOCAL PROCEDURE getOrderInfo@1000000005();
    VAR
      lrecWhseShipHeader@1000000002 : Record 7320;
      lrecSalesHeader@1000000001 : Record 36;
      lrecTransferHeader@1000000000 : Record 5740;
      lrecWhseShipLine@1000000003 : Record 7321;
      lrecLPHeader@1000000007 : Record 23044505;
      lcuListMgmt@1000000008 : Codeunit 23044600;
      lcuPackMgmt@1000000004 : Codeunit 23044600;
      loptSourceDocType@1000000005 : Option;
      lcodSourceNo@1000000006 : Code[20];
    BEGIN
      //<FUNC>
      //  Description: Gets factbox info from the order
      //  Called From: This page (P23044640)
      //  Side Effect: None
      //</FUNC>

      prepRec;

      CASE recrRecRef.NUMBER OF
        DATABASE::"Warehouse Shipment Header":
          BEGIN
            recrRecRef.SETTABLE(lrecWhseShipHeader);
            IF ( NOT lrecWhseShipHeader.GET(lrecWhseShipHeader."No.") ) THEN
              clearInfo
            ELSE BEGIN
              loptSourceDocType := lrecLPHeader."Source Document"::Shipment;
              lcodSourceNo := lrecWhseShipHeader."No.";
            END;
          END;
        DATABASE::"Sales Header":
          BEGIN
            recrRecRef.SETTABLE(lrecSalesHeader);
            IF ( NOT lrecSalesHeader.GET(1, lrecSalesHeader."No.") ) THEN
              clearInfo
            ELSE BEGIN
              loptSourceDocType := lrecLPHeader."Source Document"::"Sales Order";
              lcodSourceNo := lrecSalesHeader."No.";
            END;
          END;
        DATABASE::"Transfer Header":
          BEGIN
            recrRecRef.SETTABLE(lrecTransferHeader);
            IF ( NOT lrecTransferHeader.GET(lrecTransferHeader."No.") ) THEN
              clearInfo
            ELSE BEGIN
              loptSourceDocType := lrecLPHeader."Source Document"::"Outbound Transfer";
              lcodSourceNo := lrecTransferHeader."No.";
            END;
          END;
        ELSE BEGIN
          clearInfo;
          CurrPage.UPDATE(FALSE);
          EXIT;
        END;
      END;

      lcuListMgmt.setStatusFields(Rec, recrRecRef, loptSourceDocType, lcodSourceNo);
      setItemCount(loptSourceDocType, lcodSourceNo);;
      Rec.MODIFY(FALSE);
    END;

    LOCAL PROCEDURE prepRec@1000000026();
    BEGIN

      CLEAR(Rec);
      Rec.RESET;
      Rec.DELETEALL;

      Rec.INSERT;
    END;

    LOCAL PROCEDURE clearInfo@1000000000();
    BEGIN
      //<FUNC>
      //  Description: Clears info
      //  Called From: This page (P23044640)
      //  Side Effect: None
      //</FUNC>

      prepRec;
    END;

    LOCAL PROCEDURE setItemCount@1000000001(poptDocType@1000000000 : Option;pcodDocNo@1000000001 : Code[20]);
    VAR
      lrecWhseShipLine@1000000002 : Record 7321;
      lrecTransferLine@1000000003 : Record 5741;
      lrecSalesLine@1000000004 : Record 37;
      ldItemQty@1000000005 : Decimal;
    BEGIN
      //<FUNC>
      //  Description: Calcs "Total Item Quantity"
      //  Called From: This page (P23044640)
      //  Side Effect: None
      //</FUNC>

      ldItemQty := 0;

      CASE poptDocType OF
        Rec."Document Type"::"Warehouse Shipment":
          BEGIN
            lrecWhseShipLine.SETRANGE("No.", pcodDocNo);
            IF ( lrecWhseShipLine.FINDSET(FALSE) ) THEN
              REPEAT
                ldItemQty += lrecWhseShipLine.Quantity;
              UNTIL(lrecWhseShipLine.NEXT=0);
          END;
        Rec."Document Type"::"Sales Order":
          BEGIN
            lrecSalesLine.SETRANGE("Document No.", pcodDocNo);
            lrecSalesLine.SETRANGE("Document Type", lrecSalesLine."Document Type"::Order);
            IF ( lrecSalesLine.FINDSET(FALSE) ) THEN
              REPEAT
                ldItemQty += lrecSalesLine.Quantity;
              UNTIL(lrecSalesLine.NEXT=0);
          END;
        Rec."Document Type"::"Outbound Transfer":
          BEGIN
            lrecTransferLine.SETRANGE("Document No.", pcodDocNo);
            IF ( lrecTransferLine.FINDSET(FALSE) ) THEN
              REPEAT
                ldItemQty += lrecTransferLine.Quantity;
              UNTIL(lrecTransferLine.NEXT=0);
          END;
      END;

      Rec."Total Item Quantity" := ldItemQty;
    END;

    BEGIN
    {
      ************************
      Copyright Notice
      This objects content is copyright of Insight Works 2011.  All rights reserved.
      Any redistribution or reproduction of part or all of the contents in any form is prohibited.
      ************************
    }
    END.
  }
}

