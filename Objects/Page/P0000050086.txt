OBJECT Page 50086 Xml Receive Order
{
  OBJECT-PROPERTIES
  {
    Date=06/25/21;
    Time=[ 7:23:38 AM];
    Modified=Yes;
    Version List=002;
  }
  PROPERTIES
  {
    InsertAllowed=No;
    SourceTable=Table50060;
    PageType=Document;
    ActionList=ACTIONS
    {
      { 1000000046;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000048;1 ;ActionGroup }
      { 1000000047;2 ;Action    ;
                      Name=Show Order;
                      Visible=FALSE;
                      Image=Order;
                      OnAction=VAR
                                 SalesHeader@1000000000 : Record 36;
                               BEGIN
                                 SalesHeader.RESET;
                                 SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::Order);
                                 SalesHeader.SETRANGE("No.","Nav Order No.");
                                 IF SalesHeader.FINDFIRST THEN
                                   PAGE.RUN(42,SalesHeader);
                               END;
                                }
      { 1000000002;2 ;Action    ;
                      Name=Process Receive Document;
                      CaptionML=ENU=Process Receive Document;
                      Promoted=Yes;
                      Image=ElectronicDoc;
                      OnAction=VAR
                                 TTSOrderHeader2@1000000000 : Record 50060;
                                 CreateTradeTechOrder@1000000001 : Codeunit 51987;
                                 SalesHeader@1000000002 : Record 36;
                               BEGIN
                                 CLEARLASTERROR;
                                 SalesHeader.RESET;
                                 SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::Order);
                                 SalesHeader.SETRANGE("No.","Nav Order No.");
                                 IF SalesHeader.FINDFIRST THEN BEGIN
                                   PAGE.RUN(42,SalesHeader);
                                 END ELSE BEGIN
                                   DuplicatePOCheck;//TPZ3215
                                   TTSOrderHeader2.GET("Entry No.");
                                   IF CreateTradeTechOrder.RUN(Rec) THEN BEGIN
                                     TTSOrderHeader2."Order Status" := TTSOrderHeader2."Order Status"::Confirm;
                                     TTSOrderHeader2."Nav Order No." := "Nav Order No.";
                                     TTSOrderHeader2."Error Text" := '';
                                     TTSOrderHeader2."Data Error" := FALSE;
                                     TTSOrderHeader2."CSR Code" := "CSR Code";
                                     TTSOrderHeader2."ISR Code" := "ISR Code";
                                     TTSOrderHeader2."Division Code" := "Division Code";
                                     TTSOrderHeader2.MODIFY;
                                     COMMIT;
                                   END ELSE BEGIN
                                     TTSOrderHeader2."Order Status" := TTSOrderHeader2."Order Status"::Error;
                                     TTSOrderHeader2."Data Error" := TRUE;
                                     TTSOrderHeader2."Error Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                                     TTSOrderHeader2.MODIFY;
                                   END;
                                   CurrPage.UPDATE(FALSE);
                                 END;
                               END;
                                }
      { 1000000003;1 ;ActionGroup;
                      CaptionML=ENU=&Trading Partner;
                      Image=ImportExport }
      { 1000000006;2 ;Action    ;
                      CaptionML=ENU=General Cross References;
                      ToolTipML=ENU=Lists all General Cross References associated to the Trade Partner.;
                      OnAction=BEGIN
                                 //<TPZ3207>
                                 CLEAR(EvaluateCrossReference);
                                 EvaluateCrossReference.ShowGeneralCrossReference("Trade Partner No.");
                                 //</TPZ3207>
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                Name=General;
                GroupType=Group }

    { 1000000005;2;Field  ;
                SourceExpr="Trade Partner No." }

    { 1000000004;2;Field  ;
                CaptionML=ENU=Trade Partner Name;
                SourceExpr=RepName }

    { 1000000007;2;Field  ;
                CaptionML=ENU=Transmission Date;
                SourceExpr=TransmissionDate }

    { 1000000009;2;Field  ;
                CaptionML=ENU=Release Id;
                SourceExpr=ttsReleaseId }

    { 1000000010;2;Field  ;
                CaptionML=ENU=Release Number;
                SourceExpr=ReleaseNumber;
                Importance=Additional }

    { 1000000012;2;Field  ;
                Name=Customer Reference No.;
                CaptionML=ENU=Customer Ref No.;
                SourceExpr=ttsOrderId;
                Importance=Additional }

    { 1000000015;2;Field  ;
                CaptionML=ENU=Order Date;
                SourceExpr=OrderDate;
                Editable=FALSE }

    { 1000000018;2;Field  ;
                Name=Sales Order No.;
                SourceExpr="Nav Order No.";
                Editable=FALSE }

    { 1000000016;2;Field  ;
                SourceExpr="Order Status";
                Editable=FALSE }

    { 1000000017;2;Field  ;
                SourceExpr="Error Text";
                Editable=FALSE }

    { 1000000044;1;Part   ;
                SubPageLink=Entry No.=FIELD(Entry No.);
                PagePartID=Page50087;
                PartType=Page }

    { 1000000045;1;Part   ;
                SubPageLink=Entry No.=FIELD(Entry No.);
                PagePartID=Page50088;
                PartType=Page }

    { 1000000019;1;Group  ;
                Name=Invoice;
                GroupType=Group }

    { 1000000022;2;Field  ;
                CaptionML=ENU=Sell-to Customer No.;
                SourceExpr=SellToCustomerVendorNumber }

    { 1000000021;2;Field  ;
                CaptionML=ENU=Sell-to Customer Name;
                SourceExpr=SellToCustomerName;
                Importance=Additional }

    { 1000000023;2;Field  ;
                CaptionML=ENU=Sell-to Customer Address;
                SourceExpr="SellToCustomer AddressName" }

    { 1000000024;2;Field  ;
                CaptionML=ENU=Sell-to Customer Address 1;
                SourceExpr="SellToCustomer AddressLine1" }

    { 1000000025;2;Field  ;
                CaptionML=ENU=Sell-to Customer Address 2;
                SourceExpr="SellToCustomer AddressLine2";
                Importance=Additional }

    { 1000000026;2;Field  ;
                CaptionML=ENU=Sell-to Customer City;
                SourceExpr="SellToCustomer City" }

    { 1000000027;2;Field  ;
                CaptionML=ENU=Sell-to Customer State;
                SourceExpr="SellToCustomer State" }

    { 1000000028;2;Field  ;
                CaptionML=ENU=Sell-to Customer ZIP Code;
                SourceExpr="SellToCustomer PostalCode" }

    { 1000000029;2;Field  ;
                CaptionML=ENU=Sell-to Customer Country;
                SourceExpr="SellToCustomer Country" }

    { 1000000030;2;Field  ;
                CaptionML=ENU=Sell-to Customer Phone;
                SourceExpr=SellToCustomerPhone;
                Importance=Additional }

    { 1000000032;1;Group  ;
                Name=Shipping;
                GroupType=Group }

    { 1000000033;2;Field  ;
                CaptionML=ENU=Ship-to Name;
                SourceExpr="ShipTo Name" }

    { 1000000034;2;Field  ;
                CaptionML=ENU=Ship-to Address 1;
                SourceExpr="ShipTo AddressLine1" }

    { 1000000035;2;Field  ;
                CaptionML=ENU=Ship-to Address 2;
                SourceExpr="ShipTo AddressLine2" }

    { 1000000036;2;Field  ;
                CaptionML=ENU=Ship-to City;
                SourceExpr="ShipTo City" }

    { 1000000037;2;Field  ;
                CaptionML=ENU=Ship-to State;
                SourceExpr="ShipTo State" }

    { 1000000038;2;Field  ;
                CaptionML=ENU=Ship-to Zip Code;
                SourceExpr="ShipTo PostalCode" }

    { 1000000039;2;Field  ;
                CaptionML=ENU=Ship-to Country;
                SourceExpr="ShipTo Country" }

    { 1000000040;2;Field  ;
                CaptionML=ENU=Ship-to Phone;
                SourceExpr=ShipToPhone }

    { 1000000041;2;Field  ;
                CaptionML=ENU=Date Shipped;
                SourceExpr=DateShipped }

    { 1000000042;2;Field  ;
                CaptionML=ENU=Shipping Agent Code;
                SourceExpr="Ship Via" }

    { 1000000043;2;Field  ;
                CaptionML=ENU=Ship Note;
                SourceExpr=ShipNote }

  }
  CODE
  {
    VAR
      Text045@1000000003 : TextConst 'ENU=Duplicate P.O. No. has been found for P.O. No.%1 on Sales Order %2 .\';
      Text046@1000000002 : TextConst 'ENU=Duplicate PO No.: Cust. Ledger Entry for Invoice %1 with P.O. No. %2 found.\';
      Text047@1000000001 : TextConst 'ENU=Do you want to create the sales order(s)?';
      Text005@1000000000 : TextConst 'ENU=Sales Document not created.';
      EvaluateCrossReference@1000000004 : Codeunit 14000380;

    LOCAL PROCEDURE DuplicatePOCheck@1000000000();
    VAR
      SalesHeader@1000000000 : Record 36;
      CustLedgerEntry@1000000002 : Record 21;
      ConfirmMsg@1000000001 : Text[250];
    BEGIN
      //<TPZ3215>
      SalesHeader.RESET;
      SalesHeader.SETRANGE("External Document No.",PONumber);
      IF SalesHeader.FINDFIRST THEN BEGIN
        ConfirmMsg := Text045;
        ConfirmMsg := STRSUBSTNO(
          ConfirmMsg,
          SalesHeader."External Document No.",SalesHeader."No.");
        IF GUIALLOWED THEN BEGIN
          IF NOT CONFIRM(
            ConfirmMsg +
            Text047)
          THEN
            ERROR(Text005);
        END ELSE
          ERROR(Text005);
      END ELSE BEGIN
        CustLedgerEntry.RESET;
        CustLedgerEntry.SETCURRENTKEY("External Document No.");
        CustLedgerEntry.SETRANGE("External Document No.",PONumber);
        IF CustLedgerEntry.FINDFIRST THEN BEGIN
          ConfirmMsg := Text046;
          ConfirmMsg := STRSUBSTNO(
            ConfirmMsg,
            CustLedgerEntry."Document No.",CustLedgerEntry."External Document No.");
          IF GUIALLOWED THEN BEGIN
            IF NOT CONFIRM(
              ConfirmMsg +
              Text047)
            THEN
              ERROR(Text005);
          END ELSE
            ERROR(Text005);
        END;
      END;
      //</TPZ3215>
    END;

    BEGIN
    {
      001 TPZ2986 GKG 04162021 create new object for tradetech integration
      002 TPZ3215 GKG 06112021 Check duplicate PO and create function DuplicatePOCheck
      003 TPZ3207 GKG 06252021 New Button 'General Cross References' to select the correct carrier in XML Orders
    }
    END.
  }
}

