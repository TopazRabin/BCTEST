OBJECT Page 50048 Item Cust. Avail. & Price
{
  OBJECT-PROPERTIES
  {
    Date=10/01/21;
    Time=[ 7:36:03 AM];
    Modified=Yes;
    Version List=TOP100B,230,TOPFI,3247;
  }
  PROPERTIES
  {
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table50025;
    DelayedInsert=Yes;
    DataCaptionFields=Item No.,Description;
    PageType=Card;
    OnOpenPage=BEGIN
                 FILTERGROUP(2);
                 SETRANGE("User ID",USERID);
                 FILTERGROUP(0);
                 IF NOT CalledFromCustItemPages THEN BEGIN
                   IF NOT ItemCustAvailPrice.GET(USERID) THEN BEGIN
                     ItemCustAvailPrice.INIT;
                     ItemCustAvailPrice."User ID" := USERID;
                     ItemCustAvailPrice.INSERT;
                     Rec := ItemCustAvailPrice;
                   END;
                 END;
                 UpdateQuantities;
                 SetStyleonReplacement; //TPZ3247
                 GetCallForPricetemAttr("Item No.");//<TPZ3331>
                 //<TPZ2493>
                 CurrPage.ItemInventoryFactBox.PAGE.AssignQtyAvlbToPick(QtyAvailtoPick);
                 CurrPage.UPDATE;
                 //</TPZ2493>
               END;

    OnClosePage=BEGIN
                  OnClosePageTrigger;
                END;

    OnAfterGetRecord=BEGIN
                       SetStyleonReplacement; //TPZ3247
                       //SetStyleLastPriceDate;//utkarsh
                     END;

    ActionList=ACTIONS
    {
      { 1000000116;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000115;1 ;ActionGroup;
                      CaptionML=[ENU=Master Data;
                                 ESM=Datos maestros;
                                 FRC=DonnÇes principales;
                                 ENC=Master Data];
                      Image=<DataEntry> }
      { 1000000114;2 ;Action    ;
                      CaptionML=[ENU=&Units of Measure;
                                 ESM=&Unidades medida;
                                 FRC=&UnitÇs de mesure;
                                 ENC=&Units of Measure];
                      RunObject=Page 5404;
                      RunPageLink=Item No.=FIELD(Item No.);
                      Image=UnitOfMeasure }
      { 1000000113;2 ;Action    ;
                      CaptionML=[ENU=Va&riants;
                                 ESM=Va&riantes;
                                 FRC=Va&riantes;
                                 ENC=Va&riants];
                      RunObject=Page 5401;
                      RunPageLink=Item No.=FIELD(Item No.);
                      Image=ItemVariant }
      { 1000000112;2 ;ActionGroup;
                      CaptionML=[ENU=Dimensions;
                                 ESM=Dimensiones;
                                 FRC=Dimensions;
                                 ENC=Dimensions];
                      Image=Dimensions }
      { 1000000111;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ESM=Dimensiones;
                                 FRC=Dimensions;
                                 ENC=Dimensions];
                      RunObject=Page 540;
                      RunPageLink=Table ID=CONST(27),
                                  No.=FIELD(Item No.);
                      Image=Dimensions }
      { 1000000110;2 ;Action    ;
                      CaptionML=[ENU=Substituti&ons;
                                 ESM=Sustitu&ciones;
                                 FRC=Articles de su&bstitution;
                                 ENC=Substituti&ons];
                      RunObject=Page 5716;
                      RunPageLink=Type=CONST(Item),
                                  No.=FIELD(Item No.);
                      Image=ItemSubstitution }
      { 1000000109;2 ;Action    ;
                      CaptionML=[ENU=Cross Re&ferences;
                                 ESM=Referencias cru&zadas;
                                 FRC=Ren&vois;
                                 ENC=Cross Re&ferences];
                      RunObject=Page 5721;
                      RunPageLink=Item No.=FIELD(Item No.);
                      Image=Change }
      { 1000000108;2 ;Action    ;
                      CaptionML=[ENU=E&xtended Text;
                                 ESM=Te&xtos adicionales;
                                 FRC=Te&xtes Çtendus;
                                 ENC=E&xtended Text];
                      RunObject=Page 391;
                      RunPageView=SORTING(Table Name,No.,Language Code,All Language Codes,Starting Date,Ending Date);
                      RunPageLink=Table Name=CONST(Item),
                                  No.=FIELD(Item No.);
                      Image=Text }
      { 1000000107;2 ;Action    ;
                      CaptionML=[ENU=Translations;
                                 ESM=Traducciones;
                                 FRC=Traductions;
                                 ENC=Translations];
                      RunObject=Page 35;
                      RunPageLink=Item No.=FIELD(Item No.);
                      Image=Translations }
      { 1000000106;2 ;Action    ;
                      CaptionML=[ENU=&Picture;
                                 ESM=Ima&gen;
                                 FRC=&Image;
                                 ENC=&Picture];
                      RunObject=Page 346;
                      RunPageLink=No.=FIELD(Item No.);
                      Image=Picture }
      { 1000000105;2 ;Action    ;
                      CaptionML=[ENU=Identifiers;
                                 ESM=Identificadores;
                                 FRC=Identificateurs;
                                 ENC=Identifiers];
                      RunObject=Page 7706;
                      RunPageView=SORTING(Item No.,Variant Code,Unit of Measure Code);
                      RunPageLink=Item No.=FIELD(Item No.);
                      Image=BarCode }
      { 1000000104;2 ;Action    ;
                      CaptionML=ENU=Barcode Conversion;
                      RunObject=Page 14000733;
                      RunPageLink=Type=CONST(Item),
                                  Item No.=FIELD(Item No.) }
      { 1000000103;2 ;Action    ;
                      CaptionML=ENU=Customer Package UOM;
                      RunObject=Page 14000728;
                      RunPageLink=Item No.=FIELD(Item No.) }
      { 1000000102;1 ;ActionGroup;
                      CaptionML=[ENU=Availability;
                                 ESM=Disponibilidad;
                                 FRC=DisponibilitÇ;
                                 ENC=Availability];
                      Image=ItemAvailability }
      { 1000000101;2 ;Action    ;
                      Name=ItemsByLocation;
                      CaptionML=[ENU=Items b&y Location;
                                 ESM=Prods. por &almacÇn;
                                 FRC=Articles &par emplacement;
                                 ENC=Items b&y Location];
                      Image=ItemAvailbyLoc;
                      OnAction=VAR
                                 Item@1000000000 : Record 27;
                                 ItemsByLocation@1001 : Page 491;
                               BEGIN
                                 // <TPZ1035>
                                 Item.RESET;
                                 Item."No." := "Item No.";
                                 IF Item.FIND THEN;
                                 ItemsByLocation.SETRECORD(Item);
                                 ItemsByLocation.RUN;
                                 // </TPZ1035>
                               END;
                                }
      { 1000000100;2 ;ActionGroup;
                      CaptionML=[ENU=&Item Availability by;
                                 ESM=&Disponibilidad prod. por;
                                 FRC=DisponibilitÇ d'&article par;
                                 ENC=&Item Availability by];
                      Image=ItemAvailability }
      { 1000000099;3 ;Action    ;
                      Name=<Action110>;
                      CaptionML=[ENU=Event;
                                 ESM=Evento;
                                 FRC=êvÇnement;
                                 ENC=Event];
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItem(ItemRec,ItemAvailFormsMgt.ByEvent);
                               END;
                                }
      { 1000000098;3 ;Action    ;
                      CaptionML=[ENU=Period;
                                 ESM=Periodo;
                                 FRC=PÇriode;
                                 ENC=Period];
                      RunObject=Page 157;
                      RunPageLink=No.=FIELD(Item No.);
                      Image=Period }
      { 1000000097;3 ;Action    ;
                      CaptionML=[ENU=Variant;
                                 ESM=Variante;
                                 FRC=Variante;
                                 ENC=Variant];
                      RunObject=Page 5414;
                      RunPageLink=No.=FIELD(Item No.);
                      Image=ItemVariant }
      { 1000000096;3 ;Action    ;
                      CaptionML=[ENU=Location;
                                 ESM=AlmacÇn;
                                 FRC=Emplacement;
                                 ENC=Location];
                      RunObject=Page 492;
                      RunPageLink=No.=FIELD(Item No.);
                      Image=Warehouse }
      { 1000000095;3 ;Action    ;
                      CaptionML=[ENU=BOM Level;
                                 ESM=Nivel L.M.;
                                 FRC=Niveau nomenclature;
                                 ENC=BOM Level];
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItem(ItemRec,ItemAvailFormsMgt.ByBOM);
                               END;
                                }
      { 1000000094;3 ;Action    ;
                      CaptionML=[ENU=Timeline;
                                 ESM=Escala de tiempo;
                                 FRC=Chronologie;
                                 ENC=Timeline];
                      Image=Timeline;
                      OnAction=BEGIN
                                 ItemRec.ShowTimelineFromItem(ItemRec);
                               END;
                                }
      { 1000000093;1 ;ActionGroup;
                      CaptionML=[ENU=History;
                                 ESM=Historial;
                                 FRC=Historique;
                                 ENC=History];
                      Image=History }
      { 1000000092;2 ;ActionGroup;
                      CaptionML=[ENU=E&ntries;
                                 ESM=&Movimientos;
                                 FRC=ê&critures;
                                 ENC=E&ntries];
                      Image=Entries }
      { 1000000091;3 ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Ledger E&ntries;
                                 ESM=&Movimientos;
                                 FRC=ê&critures comptables;
                                 ENC=Ledger E&ntries];
                      RunObject=Page 38;
                      RunPageView=SORTING(Item No.);
                      RunPageLink=Item No.=FIELD(Item No.);
                      Promoted=No;
                      Image=ItemLedger;
                      PromotedCategory=Process }
      { 1000000090;3 ;Action    ;
                      CaptionML=[ENU=&Reservation Entries;
                                 ESM=Movs. &reserva;
                                 FRC=êcritures &rÇservation;
                                 ENC=&Reservation Entries];
                      RunObject=Page 497;
                      RunPageView=SORTING(Item No.,Variant Code,Location Code,Reservation Status);
                      RunPageLink=Reservation Status=CONST(Reservation),
                                  Item No.=FIELD(Item No.);
                      Image=ReservationLedger }
      { 1000000089;3 ;Action    ;
                      CaptionML=[ENU=&Phys. Inventory Ledger Entries;
                                 ESM=Movs. &inventario f°sico;
                                 FRC=êcritures du grand livre de l'inventaire physique;
                                 ENC=&Phys. Inventory Ledger Entries];
                      RunObject=Page 390;
                      RunPageView=SORTING(Item No.);
                      RunPageLink=Item No.=FIELD(Item No.);
                      Image=PhysicalInventoryLedger }
      { 1000000088;3 ;Action    ;
                      CaptionML=[ENU=&Value Entries;
                                 ESM=Movs. &valor;
                                 FRC=êcritures &valeur;
                                 ENC=&Value Entries];
                      RunObject=Page 5802;
                      RunPageView=SORTING(Item No.);
                      RunPageLink=Item No.=FIELD(Item No.);
                      Image=ValueLedger }
      { 1000000087;3 ;Action    ;
                      CaptionML=[ENU=Item &Tracking Entries;
                                 ESM=Movs. &seguim. prod.;
                                 FRC=êcritures de &traáabilitÇ;
                                 ENC=Item &Tracking Entries];
                      Image=ItemTrackingLedger;
                      OnAction=VAR
                                 ItemTrackingMgt@1000 : Codeunit 6500;
                               BEGIN
                                 //ItemTrackingMgt.CallItemTrackingEntryForm(3,'',"Item No.",'','','','');//NAVEVENT
                                 Codeunit6500EventSubscriber.CallItemTrackingEntryForm(3,'',"Item No.",'','','','');//NAVEVENT
                               END;
                                }
      { 1000000086;3 ;Action    ;
                      CaptionML=[ENU=&Warehouse Entries;
                                 ESM=Movs. &almacÇn;
                                 FRC=ê&critures d'entrepìt;
                                 ENC=&Warehouse Entries];
                      RunObject=Page 7318;
                      RunPageView=SORTING(Item No.,Bin Code,Location Code,Variant Code,Unit of Measure Code,Lot No.,Serial No.,Entry Type,Dedicated);
                      RunPageLink=Item No.=FIELD(Item No.);
                      Image=BinLedger }
      { 1000000085;3 ;Action    ;
                      CaptionML=[ENU=Application Worksheet;
                                 ESM=Hoja liquidaci¢n;
                                 FRC=Feuille de travail Affectation;
                                 ENC=Application Worksheet];
                      RunObject=Page 521;
                      RunPageLink=Item No.=FIELD(Item No.);
                      Image=ApplicationWorksheet }
      { 1000000084;2 ;ActionGroup;
                      CaptionML=[ENU=Statistics;
                                 ESM=Estad°sticas;
                                 FRC=Statistiques;
                                 ENC=Statistics];
                      Image=Statistics }
      { 1000000083;3 ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 ESM=Estad°sticas;
                                 FRC=Statistiques;
                                 ENC=Statistics];
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ItemStatistics@1001 : Page 5827;
                               BEGIN
                                 //TPZ2102 kvb 11/29/17 ->
                                 ItemRec.GET("Item No.");
                                 //TPZ2102 kvb 11/29/17 <-
                                 ItemStatistics.SetItem(ItemRec);
                                 ItemStatistics.RUNMODAL;
                               END;
                                }
      { 1000000082;3 ;Action    ;
                      CaptionML=[ENU=Entry Statistics;
                                 ESM=Estad°sticas documentos;
                                 FRC=Statistiques Çcritures;
                                 ENC=Entry Statistics];
                      RunObject=Page 304;
                      RunPageLink=No.=FIELD(Item No.);
                      Image=EntryStatistics }
      { 1000000081;3 ;Action    ;
                      CaptionML=[ENU=T&urnover;
                                 ESM=An†&lisis;
                                 FRC=Ro&ulement;
                                 ENC=T&urnover];
                      RunObject=Page 158;
                      RunPageLink=No.=FIELD(Item No.);
                      Image=Turnover }
      { 1000000080;2 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 ESM=C&omentarios;
                                 FRC=Co&mmentaires;
                                 ENC=Co&mments];
                      RunObject=Page 124;
                      RunPageLink=Table Name=CONST(Item),
                                  No.=FIELD(Item No.);
                      Image=ViewComments }
      { 1000000079;1 ;ActionGroup;
                      CaptionML=[ENU=&Purchases;
                                 ESM=&Compras;
                                 FRC=&Achats;
                                 ENC=&Purchases];
                      Image=Purchasing }
      { 1000000078;2 ;Action    ;
                      CaptionML=[ENU=Ven&dors;
                                 ESM=Provee&dores;
                                 FRC=&Fournisseurs;
                                 ENC=Ven&dors];
                      RunObject=Page 114;
                      RunPageView=SORTING(Item No.);
                      RunPageLink=Item No.=FIELD(Item No.);
                      Image=Vendor }
      { 1000000077;2 ;Action    ;
                      CaptionML=[ENU=Prices;
                                 ESM=Precios;
                                 FRC=Prix;
                                 ENC=Prices];
                      RunObject=Page 7012;
                      RunPageView=SORTING(Item No.);
                      RunPageLink=Item No.=FIELD(Item No.);
                      Image=Price }
      { 1000000076;2 ;Action    ;
                      CaptionML=[ENU=Line Discounts;
                                 ESM=Descuentos l°nea;
                                 FRC=Ligne Escomptes;
                                 ENC=Line Discounts];
                      RunObject=Page 7014;
                      RunPageLink=Item No.=FIELD(Item No.);
                      Image=LineDiscount }
      { 1000000075;2 ;Action    ;
                      CaptionML=[ENU=Prepa&yment Percentages;
                                 ESM=Porcentajes &anticipo;
                                 FRC=Pour&centages paiement anticipÇ;
                                 ENC=Prepa&yment Percentages];
                      RunObject=Page 665;
                      RunPageLink=Item No.=FIELD(Item No.);
                      Image=PrepaymentPercentages }
      { 1000000074;2 ;Separator  }
      { 1000000073;2 ;Action    ;
                      CaptionML=[ENU=Orders;
                                 ESM=Pedidos;
                                 FRC=Commandes;
                                 ENC=Orders];
                      RunObject=Page 56;
                      RunPageView=SORTING(Document Type,Type,No.);
                      RunPageLink=Type=CONST(Item),
                                  No.=FIELD(Item No.);
                      Image=Document }
      { 1000000072;2 ;Action    ;
                      CaptionML=[ENU=Return Orders;
                                 ESM=Devoluciones;
                                 FRC=Retours;
                                 ENC=Return Orders];
                      RunObject=Page 6643;
                      RunPageView=SORTING(Document Type,Type,No.);
                      RunPageLink=Type=CONST(Item),
                                  No.=FIELD(Item No.);
                      Image=ReturnOrder }
      { 1000000071;2 ;Action    ;
                      CaptionML=[ENU=Nonstoc&k Items;
                                 ESM=Prods. no in&ventariables;
                                 FRC=Articles &hors stock;
                                 ENC=Nonstoc&k Items];
                      RunObject=Page 5726;
                      Image=NonStockItem }
      { 1000000070;1 ;ActionGroup;
                      CaptionML=[ENU=S&ales;
                                 ESM=Ve&ntas;
                                 FRC=V&entes;
                                 ENC=S&ales];
                      Image=Sales }
      { 1000000069;2 ;Action    ;
                      CaptionML=[ENU=Prices;
                                 ESM=Precios;
                                 FRC=Prix;
                                 ENC=Prices];
                      RunObject=Page 7002;
                      RunPageView=SORTING(Item No.);
                      RunPageLink=Item No.=FIELD(Item No.);
                      Image=Price }
      { 1000000068;2 ;Action    ;
                      CaptionML=[ENU=Multipliers;
                                 ESM=Descuentos l°nea;
                                 FRC=Ligne Escomptes;
                                 ENC=Line Discounts];
                      RunObject=Page 7004;
                      RunPageView=SORTING(Type,Code);
                      RunPageLink=Type=CONST(Item),
                                  Code=FIELD(Item No.);
                      Image=LineDiscount }
      { 1000000055;2 ;Action    ;
                      CaptionML=ENU=Hot Sheet Prices;
                      RunObject=Page 50017;
                      RunPageLink=Item No.=FIELD(Item No.);
                      Image=Price }
      { 1000000067;2 ;Action    ;
                      CaptionML=[ENU=Prepa&yment Percentages;
                                 ESM=Porcentajes &anticipo;
                                 FRC=Pour&centages paiement anticipÇ;
                                 ENC=Prepa&yment Percentages];
                      RunObject=Page 664;
                      RunPageLink=Item No.=FIELD(Item No.);
                      Image=PrepaymentPercentages }
      { 1000000066;2 ;ActionGroup;
                      CaptionML=ENU=E-Ship }
      { 1000000065;3 ;Action    ;
                      CaptionML=ENU=International Shipping;
                      RunObject=Page 14000687;
                      RunPageLink=No.=FIELD(Item No.) }
      { 1000000064;3 ;Action    ;
                      CaptionML=ENU=E-Ship Agent Options;
                      OnAction=VAR
                                 Shipping@14000800 : Codeunit 14000701;
                               BEGIN
                                 Shipping.ShowOptPageItemResource(DATABASE::Item,"Item No.");
                               END;
                                }
      { 1000000063;3 ;Action    ;
                      CaptionML=ENU=Required Shipping Agents;
                      RunObject=Page 14000677;
                      RunPageLink=Type=CONST(Item),
                                  Code=FIELD(Item No.) }
      { 1000000062;3 ;Action    ;
                      CaptionML=ENU=E-Ship Hazardous Material Card;
                      RunObject=Page 14050151;
                      RunPageView=SORTING(Type,No.)
                                  ORDER(Ascending);
                      RunPageLink=Type=CONST(Item),
                                  No.=FIELD(Item No.) }
      { 1000000061;2 ;Separator  }
      { 1000000060;2 ;Action    ;
                      CaptionML=[ENU=Quotes;
                                 ESM=Pedidos;
                                 FRC=Commandes;
                                 ENC=Quotes];
                      RunObject=Page 516;
                      RunPageView=SORTING(Document Type,Type,No.)
                                  WHERE(Document Type=CONST(Quote));
                      RunPageLink=Type=CONST(Item),
                                  No.=FIELD(Item No.);
                      Image=Quote }
      { 1000000059;2 ;Action    ;
                      CaptionML=[ENU=Orders;
                                 ESM=Pedidos;
                                 FRC=Commandes;
                                 ENC=Orders];
                      RunObject=Page 48;
                      RunPageView=SORTING(Document Type,Type,No.);
                      RunPageLink=Type=CONST(Item),
                                  No.=FIELD(Item No.);
                      Image=Document }
      { 1000000058;2 ;Action    ;
                      CaptionML=[ENU=Return Orders;
                                 ESM=Devoluciones;
                                 FRC=Retours;
                                 ENC=Return Orders];
                      RunObject=Page 6633;
                      RunPageView=SORTING(Document Type,Type,No.);
                      RunPageLink=Type=CONST(Item),
                                  No.=FIELD(Item No.);
                      Image=ReturnOrder }
      { 1000000057;2 ;Action    ;
                      CaptionML=ENU=Lost Opportunities;
                      RunObject=Page 50002;
                      RunPageLink=Type=CONST(Item),
                                  No.=FIELD(Item No.);
                      Promoted=Yes;
                      Image=OpportunitiesList }
      { 1000000044;1 ;ActionGroup;
                      CaptionML=[ENU=Warehouse;
                                 ESM=AlmacÇn;
                                 FRC=Entrepìt;
                                 ENC=Warehouse];
                      Image=Warehouse }
      { 1000000043;2 ;Action    ;
                      CaptionML=[ENU=&Bin Contents;
                                 ESM=Contenidos u&bicaci¢n;
                                 FRC=C&ontenu de la zone;
                                 ENC=&Bin Contents];
                      RunObject=Page 7379;
                      RunPageView=SORTING(Item No.);
                      RunPageLink=Item No.=FIELD(Item No.);
                      Image=BinContent }
      { 1000000042;2 ;Action    ;
                      CaptionML=[ENU=Stockkeepin&g Units;
                                 ESM=Uds. de almace&nam.;
                                 FRC=UnitÇs de stoc&k;
                                 ENC=Stockkeepin&g Units];
                      RunObject=Page 5701;
                      RunPageView=SORTING(Item No.);
                      RunPageLink=Item No.=FIELD(Item No.);
                      Image=SKU }
      { 1000000048;0 ;ActionContainer;
                      ActionContainerType=Reports }
      { 1000000053;1 ;Action    ;
                      CaptionML=ENU=Inventory History Details;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Report;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 URL@1000000001 : Text[1000];
                               BEGIN
                                 // <TPZ135>,<TPZ2777>
                                 URL :=
                                   'http://nyvsvnavsql5/reportserver?/User%20Reports%20-%20Product/Inventory%20History%20Details&rs:Command=Render&ItemNo=' +
                                   "Item No.";

                                 HYPERLINK(URL);
                                 // </TPZ135>
                               END;
                                }
      { 1000000052;1 ;Action    ;
                      CaptionML=ENU=Alt. UOM Inventory History Details;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Report;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 URL@1000000000 : Text[1000];
                               BEGIN
                                 // <TPZ135>,<TPZ2777>
                                 URL :=
                                   'http://nyvsvnavsql5/reportserver?/User%20Reports%20-%20Product/Inventory%20History%20Details&rs:Command=Render&ItemNo=' +
                                   "Item No.";

                                 URL :=
                                   URL +
                                   '&DisplayQtysInAltPurchUOM=True';

                                 HYPERLINK(URL);
                                 // </TPZ135>
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                Name=Item;
                GroupType=Group }

    { 1000000002;2;Field  ;
                SourceExpr="Item No.";
                OnValidate=VAR
                             UnitofMeasure@1000000001 : Record 204;
                           BEGIN
                             UpdateQuantities;
                             FetchRecommFieldValues("Item No.","Customer No.");
                             FillSubTableRecords("Item No.","Customer No.");

                             //SetStyleLastPriceDate;//utkarsh

                             GetCallForPricetemAttr("Item No.");//<TPZ3331>

                             // <TOP9030>
                             IF "Item No." <> xRec."Item No." THEN BEGIN
                               NewMultiplier := 0;
                               NewMultiplier2 := 0;
                               NewUnitPrice := 0;
                               NewUnitPrice2 := 0;
                               IF ItemRec.GET("Item No.") THEN BEGIN
                               //-->TPZ2941
                                 //UnitofMeasure.GET(ItemRec."Base Unit of Measure");
                                 IF (ItemRec."Sales Order Multiple" <> 0) THEN
                                   MESSAGE('Inner qty %1',ItemRec."Sales Order Multiple");
                                 //<--TPZ2941
                               END;
                             END;
                             // <TOP9030>
                             //<TPZ2493>
                             CurrPage.ItemInventoryFactBox.PAGE.AssignQtyAvlbToPick(QtyAvailtoPick);
                             CurrPage.UPDATE;
                             //</TPZ2493>
                           END;
                            }

    { 1000000003;2;Field  ;
                SourceExpr=Description;
                Editable=FALSE }

    { 1000000056;2;Field  ;
                SourceExpr="Description 2";
                Editable=FALSE }

    { 1000000004;2;Field  ;
                SourceExpr="Sales Unit of Measure";
                Editable=FALSE }

    { 1000000005;2;Field  ;
                SourceExpr="Item Disc. Group";
                Editable=FALSE }

    { 1000000006;2;Field  ;
                SourceExpr="Price Book Code";
                Editable=FALSE }

    { 1000000007;2;Field  ;
                SourceExpr=Blocked;
                Editable=FALSE }

    { 1000000008;2;Field  ;
                SourceExpr="Unit Cost";
                Importance=Additional;
                Visible=false;
                Editable=FALSE }

    { 1000000118;2;Field  ;
                SourceExpr="Average Unit Cost" }

    { 1000000009;2;Field  ;
                SourceExpr="Last Direct Cost";
                Editable=FALSE }

    { 1000000010;2;Field  ;
                DecimalPlaces=2:5;
                SourceExpr="Unit Price";
                AutoFormatType=2;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 1000000119;2;Field  ;
                SourceExpr="Replacement Cost";
                StyleExpr=StyleRep }

    { 1000000011;1;Group  ;
                Name=Customer;
                GroupType=Group }

    { 1000000034;2;Field  ;
                SourceExpr="Customer No.";
                OnValidate=BEGIN
                             UpdateQuantities;
                             FetchRecommFieldValues("Item No.","Customer No.");
                             FillSubTableRecords("Item No.","Customer No.");

                             GetCallForPricetemAttr("Item No.");//<TPZ3331>
                             //SetStyleLastPriceDate;//utkarsh
                           END;
                            }

    { 1000000033;2;Field  ;
                SourceExpr="Customer Name";
                Editable=FALSE }

    { 1000000035;2;Field  ;
                SourceExpr="Customer Price Group";
                Editable=FALSE }

    { 1000000036;2;Field  ;
                SourceExpr="Customer Disc. Group";
                Editable=FALSE }

    { 1000000016;1;Group  ;
                Name=Inventory;
                GroupType=Group }

    { 1000000012;2;Field  ;
                SourceExpr="Location Code";
                OnValidate=BEGIN
                             UpdateQuantities;
                             //<TPZ2493>
                             CurrPage.ItemInventoryFactBox.PAGE.AssignQtyAvlbToPick(QtyAvailtoPick);
                             CurrPage.UPDATE;
                             //</TPZ2493>
                           END;
                            }

    { 1000000013;2;Field  ;
                Name=QtyonHand;
                SourceExpr=Inventory }

    { 1000000019;2;Field  ;
                SourceExpr="Qty. on Purch. Order" }

    { 1000000020;2;Field  ;
                SourceExpr="Qty. on Sales Order" }

    { 1000000021;2;Field  ;
                SourceExpr="Qty. on Assembly Order";
                Importance=Additional }

    { 1000000022;2;Field  ;
                SourceExpr="Qty. on Asm. Component";
                Importance=Additional }

    { 1000000041;2;Field  ;
                SourceExpr="Safety Stock Quantity";
                Editable=FALSE }

    { 1000000024;2;Field  ;
                Name=QtyAvailable;
                CaptionML=ENU=Qty. Available;
                DecimalPlaces=0:5;
                SourceExpr=QtyAvailable;
                Editable=FALSE }

    { 1000000046;2;Field  ;
                SourceExpr="Qty. on Pick";
                Editable=FALSE }

    { 1000000045;2;Field  ;
                Name=QtyAvailtoPick;
                CaptionML=ENU=Qty. Available to Pick;
                DecimalPlaces=0:5;
                SourceExpr=QtyAvailtoPick;
                Editable=FALSE }

    { 1000000040;2;Field  ;
                Name=EnterpriseInventory;
                CaptionML=ENU=Enterprise Inventory;
                DecimalPlaces=0:0;
                SourceExpr=ItemManagement.CalcItemCustEnterPriseInventory(Rec) }

    { 1000000117;2;Field  ;
                Name=Months of Stock;
                DecimalPlaces=1:1;
                SourceExpr=ItemManagement.CalcItemCustMonthOfStock(Rec) }

    { 1000000014;1;Group  ;
                Name=Prices;
                GroupType=Group }

    { 1000000015;2;Field  ;
                Name=RecommMultiplier;
                CaptionML=ENU=Recomm. Multiplier;
                DecimalPlaces=3:3;
                SourceExpr=RecommMultiplier;
                MinValue=0;
                MaxValue=1;
                Editable=FALSE }

    { 1000000017;2;Field  ;
                Name=NewMultiplier;
                CaptionML=ENU=New Multiplier;
                DecimalPlaces=3:3;
                SourceExpr=NewMultiplier;
                MinValue=0;
                MaxValue=1;
                OnValidate=BEGIN
                             IF NewMultiplier <> 0 THEN
                               NewUnitPrice := "Unit Price" * NewMultiplier //TOP100B KT ABCSI TOP100B - Pricing Form 06042015
                             ELSE
                               NewUnitPrice := 0;
                           END;
                            }

    { 1000000018;2;Field  ;
                Name=NewMultiplier2;
                CaptionML=ENU=New Multiplier 2;
                DecimalPlaces=3:3;
                SourceExpr=NewMultiplier2;
                MinValue=0;
                MaxValue=1;
                OnValidate=BEGIN
                             IF NewMultiplier2 <> 0 THEN
                               NewUnitPrice2 := "Unit Price" * NewMultiplier2 //TOP100B KT ABCSI TOP100B - Pricing Form 06042015
                             ELSE
                               NewUnitPrice2 := 0;
                           END;
                            }

    { 1000000027;2;Field  ;
                SourceExpr="Last Unit Price";
                Importance=Additional;
                Editable=FALSE }

    { 1000000047;2;Field  ;
                SourceExpr="Last Price UOM" }

    { 1000000049;2;Field  ;
                SourceExpr="Last Price Qty.";
                Importance=Additional }

    { 1000000037;2;Field  ;
                Name=RecommUnitPrice;
                CaptionML=ENU=Recomm. Unit Price;
                DecimalPlaces=2:5;
                SourceExpr=RecommUnitPrice;
                AutoFormatType=2;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 1000000038;2;Field  ;
                Name=NewUnitPrice;
                CaptionML=ENU=New Unit Price;
                DecimalPlaces=2:5;
                SourceExpr=NewUnitPrice;
                AutoFormatType=2;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 1000000039;2;Field  ;
                Name=NewUnitPrice2;
                CaptionML=ENU=New Unit Price2;
                DecimalPlaces=2:5;
                SourceExpr=NewUnitPrice2;
                AutoFormatType=2;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 1000000050;2;Field  ;
                SourceExpr="Last Price User ID";
                Importance=Additional;
                Editable=FALSE }

    { 1000000051;2;Field  ;
                SourceExpr="Last Price Date";
                Importance=Additional;
                Editable=FALSE }

    { 1000000028;2;Field  ;
                CaptionML=ENU=Pricing Logic;
                SourceExpr="Pricing Logic" }

    { 1000000026;1;Part   ;
                Name=ItemCustMultipliers;
                CaptionML=ENU=Multipliers;
                SubPageLink=Item No.=FIELD(Item No.),
                            Customer No.=FIELD(Customer No.),
                            User ID=FIELD(User ID);
                PagePartID=Page50046;
                Editable=FALSE;
                PartType=Page }

    { 1000000023;0;Container;
                ContainerType=FactBoxArea }

    { 1000000054;1;Part   ;
                Name=ItemInventoryFactBox;
                SubPageLink=No.=FIELD(Item No.),
                            Location Filter=FIELD(Location Filter);
                PagePartID=Page50050;
                PartType=Page }

    { 1000000032;1;Part   ;
                SubPageLink=No.=FIELD(Item No.);
                PagePartID=Page9089;
                Visible=FALSE;
                PartType=Page }

    { 1000000031;1;Part   ;
                SubPageLink=No.=FIELD(Item No.);
                PagePartID=Page9090;
                Visible=FALSE;
                PartType=Page }

    { 1000000030;1;Part   ;
                SubPageLink=No.=FIELD(Item No.);
                PagePartID=Page9091;
                Visible=FALSE;
                PartType=Page }

    { 1000000029;1;Part   ;
                SubPageLink=No.=FIELD(Item No.);
                PagePartID=Page9109;
                Visible=FALSE;
                PartType=Page }

    { 1000000025;1;Part   ;
                SubPageLink=Item No.=FIELD(Item No.);
                PagePartID=Page50049;
                PartType=Page }

  }
  CODE
  {
    VAR
      SkilledResourceList@1000000023 : Page 6023;
      CalculateStdCost@1000000022 : Codeunit 5812;
      ItemAvailFormsMgt@1000000021 : Codeunit 353;
      ItemCustAvailPrice@1000000017 : Record 50025;
      SalesHeader@1000000019 : Record 36;
      SalesLine@1000000024 : TEMPORARY Record 50021;
      OrderNo@1000000025 : Code[20];
      SalesLineNo@1000000027 : Integer;
      EntryNo@1000000018 : Integer;
      CurrentSteps@1000000020 : Integer;
      ItemRec@1000000009 : Record 27;
      Item@1000000000 : Record 27;
      Customer@1000000001 : Record 18;
      ItemNo@1000000002 : Code[20];
      CustNo@1000000003 : Code[20];
      CustName@1000000004 : Text[50];
      CustPriceGrp@1000000005 : Code[10];
      CustMultGrp@1000000006 : Code[20];
      LocCode@1000000007 : Code[10];
      QtyAvailable@1000000008 : Decimal;
      QtyAvailtoPick@1000000028 : Decimal;
      RecommMultiplier@1000000010 : Decimal;
      RecommUnitPrice@1000000011 : Decimal;
      NewMultiplier@1000000012 : Decimal;
      NewUnitPrice@1000000013 : Decimal;
      NewMultiplier2@1000000014 : Decimal;
      NewUnitPrice2@1000000015 : Decimal;
      CalledFromCustItemPages@1000000016 : Boolean;
      ab_Text001@1000000026 : TextConst 'ENU=DO NOT PROCESS';
      WhseCreatePick@1000000029 : Codeunit 5778;
      SalesSetup@1000000030 : Record 311;
      NoSeriesMgt@1000000031 : Codeunit 396;
      ItemManagement@1000000032 : Codeunit 50020;
      StyleTxtLastPriceDate@1000000033 : Text;
      Codeunit6500EventSubscriber@1000000034 : Codeunit 51914;
      StyleRep@1000000035 : Text;

    PROCEDURE SetRecords@1000000010(VAR NewItemRec@1000000000 : Record 27;VAR NewCustomerRec@1000000001 : Record 18;NewCalledFromCustItemPages@1000000002 : Boolean);
    BEGIN
      CalledFromCustItemPages := NewCalledFromCustItemPages;
      Item := NewItemRec;
      Customer := NewCustomerRec;

      IF NOT ItemCustAvailPrice.GET(USERID) THEN BEGIN
        ItemCustAvailPrice.INIT;
        ItemCustAvailPrice."User ID" := USERID;
        ItemCustAvailPrice.INSERT;
      END;

      IF NOT Item.ISEMPTY THEN
        ItemCustAvailPrice.VALIDATE("Item No.",Item."No.");

      IF NOT Customer.ISEMPTY THEN
        ItemCustAvailPrice.VALIDATE("Customer No.",Customer."No.");

      ItemCustAvailPrice.MODIFY;
      Rec := ItemCustAvailPrice;
      UpdateQuantities;
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE UpdateQuantities@1000000002();
    BEGIN
      IF "Location Code" <> '' THEN
        SETFILTER("Location Filter","Location Code")
      ELSE
        // <TOP9173>
        //CLEAR("Location Filter");
        SETRANGE("Location Filter");
        // </TOP9173>

      CLEAR(QtyAvailable);
      CALCFIELDS(Inventory,"Qty. on Sales Order");
      QtyAvailable := Inventory - "Qty. on Sales Order";
      QtyAvailtoPick := WhseCreatePick.QtyAvailtoPick("Item No.","Location Code");
    END;

    PROCEDURE FetchRecommFieldValues@1000000001(ItemNo@1000000001 : Code[20];CustNo@1000000000 : Code[20]);
    VAR
      LocalItem@1000000002 : Record 27;
      LastSalesPrice@1000000003 : Record 50004;
      SSWrksMgt@1000000004 : Codeunit 50000;
      DivisionCodeFilter@1000000005 : Code[20];
      LineNo@1000000006 : Integer;
    BEGIN
      IF ItemNo = '' THEN
        EXIT;

      IF CustNo = '' THEN
        EXIT;

      //TOP230 KT ABCSI CRP 2 Fixes 05012015
      LocalItem.GET(ItemNo);

      //<TPZ1240>
      IF LocalItem."Shortcut Dimension 5 Code" = 'C' THEN BEGIN
        SSWrksMgt.DivisionCodeFilterEntry;
        DivisionCodeFilter := SSWrksMgt.GetDivisionCodeFilter();
        IF DivisionCodeFilter = '' THEN
          ERROR('Please choose a Division Code');
        LocalItem."Shortcut Dimension 5 Code" := DivisionCodeFilter;
      END;
      //</TPZ1240>
      IF LocalItem."Shortcut Dimension 5 Code"<>'L' THEN BEGIN//TPZ2728
        SalesSetup.GET;
        SalesSetup.TESTFIELD("Temp Order Nos.");
        //TOP230 KT ABCSI CRP 2 Fixes 05012015
        //IF NOT SalesHeader.GET(SalesHeader."Document Type"::Order,ab_Text001) THEN BEGIN
          //<TPZ1937>
          {
           SalesHeader."Document Type" := SalesHeader."Document Type"::Order;
          // <TPZ1280>
          SalesHeader.SetSkipManualNoTest(TRUE);
          // </TPZ1280>
          SalesHeader.VALIDATE("No.",NoSeriesMgt.GetNextNo(SalesSetup."Temp Order Nos.",WORKDATE,TRUE));//TOP230 KT ABCSI CRP 2 Fixes 05012015
          SalesHeader.INSERT(TRUE);
          SalesHeader.SetHideValidationDialog(TRUE);
          //<TPZ9131>
          SalesHeader.SetSkipCustBlock(TRUE);
         //</TPZ9131>


          SalesHeader.VALIDATE("Sell-to Customer No.",CustNo);
          //IF SalesHeader."Shortcut Dimension 5 Code" = '' THEN
            SalesHeader.VALIDATE("Shortcut Dimension 5 Code",LocalItem."Shortcut Dimension 5 Code");
          SalesHeader."Location Code" := "Location Code";
          SalesHeader.VALIDATE("Order Date",TODAY);
          SalesHeader.MODIFY(TRUE);
        //END;
           }


          LineNo+= 10000;

          SalesLine.INIT;
          SalesLine."Document Type" := SalesLine."Document Type"::Order;
          SalesLine."Document No." := '111';
          SalesLine."Line No." := LineNo;
          SalesLine."Sell-to Customer No.":=CustNo;
          SalesLine.Type := SalesLine.Type::Item;
          SalesLine.VALIDATE("No.",ItemNo);
          SalesLine."Location Code":="Location Code";
          //salesLine.Quantity := 1;
         // SalesLine.updateunitprice("No.");
          SalesLine.INSERT(TRUE);

           {
          SalesLine.RESET;
          SalesLine.SETCURRENTKEY("Document Type","Document No.");
          SalesLine.SETRANGE(SalesLine."Document Type",SalesHeader."Document Type");
          SalesLine.SETRANGE(SalesLine."Document No.",SalesHeader."No.");
          IF SalesLine.FIND('+') THEN
            SalesLineNo := SalesLine."Line No." + 10000
          ELSE
            SalesLineNo := 10000;

          SalesLine.INIT;
          SalesLine."Document Type" := SalesLine."Document Type"::Order;
          SalesLine."Document No." := SalesHeader."No.";
          SalesLine."Line No." := SalesLineNo;
          SalesLine.VALIDATE("Sell-to Customer No.",CustNo);
          SalesLine.Type := SalesLine.Type::Item;
          SalesLine.VALIDATE("No.",ItemNo);
          SalesLine.VALIDATE("Location Code","Location Code");
          SalesLine.Quantity := 1;
          SalesLine.INSERT(TRUE);
             }//EB Comment out

        //</TPZ1937>
        RecommMultiplier := SalesLine."Recomm. Multiplier";
        RecommUnitPrice := SalesLine."Recomm. Unit Price";
        "Pricing Logic" := SalesLine."Pricing Logic";
        SalesLine.DELETE();
        //SalesHeader.DELETE(TRUE);
      END;//TPZ2728
          //Find Last Unit Price and related fields
          LastSalesPrice.RESET;
          LastSalesPrice.ASCENDING;
          LastSalesPrice.SETCURRENTKEY("Sell-to Customer No.","Item No.","Document Date");
          LastSalesPrice.SETRANGE("Sell-to Customer No.",CustNo);
          //<TPZ1725>
          LastSalesPrice.SETRANGE("Document Type",LastSalesPrice."Document Type"::"Posted Sales Invoice");
          //</TPZ1725>
          LastSalesPrice.SETRANGE("Item No.",ItemNo);
          IF LastSalesPrice.FINDLAST THEN BEGIN
            "Last Unit Price" := LastSalesPrice."Last Unit Price";
            "Last Price UOM" := LastSalesPrice."Last Price UOM";
            "Last Price Qty." := LastSalesPrice."Last Price Qty.";
            "Last Price Date" := LastSalesPrice."Last Price Date";
            "Last Price User ID" := LastSalesPrice."Last Price User ID";
          END ELSE BEGIN
            "Last Unit Price" := 0;
            "Last Price UOM" := '';
            "Last Price Qty." := 0;
            "Last Price Date" := 0D;
            "Last Price User ID" := '';
          END;
    END;

    PROCEDURE FillSubTableRecords@1000000000(ItemNo@1000000001 : Code[20];CustNo@1000000002 : Code[20]);
    VAR
      StandardMultipliers@1000000000 : Record 50008;
      ItemCustMultRec@1000000003 : Record 50026;
      LocalItemRec@1000000004 : Record 27;
      LocalCustRec@1000000005 : Record 18;
    BEGIN
      IF ItemNo = '' THEN
        EXIT;

      IF CustNo = '' THEN
        EXIT;

      IF LocalItemRec.GET(ItemNo) THEN;
      IF LocalCustRec.GET(CustNo) THEN;

      IF StandardMultipliers.FINDFIRST THEN
        REPEAT
          IF ItemCustMultRec.GET(ItemNo,CustNo,USERID,StandardMultipliers.Value) THEN BEGIN
            //ItemCustMultRec.Multiplier := StandardMultipliers.Value;
            ItemCustMultRec."Unit Price" := LocalItemRec."Unit Price" * StandardMultipliers.Value;
            ItemCustMultRec.MODIFY;
          END ELSE BEGIN
            ItemCustMultRec.INIT;
            ItemCustMultRec."Item No." := ItemNo;
            ItemCustMultRec."Customer No." := CustNo;
            ItemCustMultRec."User ID" := USERID;
            ItemCustMultRec.Multiplier := StandardMultipliers.Value;
            ItemCustMultRec."Unit Price" := LocalItemRec."Unit Price" * StandardMultipliers.Value;
            ItemCustMultRec.INSERT;
          END;
        UNTIL StandardMultipliers.NEXT = 0;
      CurrPage.ItemCustMultipliers.PAGE.Refresh;
      CurrPage.ItemCustMultipliers.PAGE.ACTIVATE;
    END;

    PROCEDURE OnClosePageTrigger@1000000006();
    BEGIN
      IF ItemCustAvailPrice.GET(USERID) THEN
        ItemCustAvailPrice.DELETE(TRUE);
    END;

    PROCEDURE SetStyleLastPriceDate@1000000003();
    VAR
      LastYearDate@1000000000 : Date;
      ModifyDate@1000000001 : Date;
      SalesPrice@1000000002 : Record 7002;
      SalesLineMultiplier@1000000003 : Record 7004;
      ItemMultiplier@1000000005 : Record 27;
      SalesPriceFound@1000000004 : Boolean;
      HotSheetPriceFound@1000000006 : Boolean;
      SalesLineMultiplierFound@1000000007 : Boolean;
      HotSheetPrice@1000000008 : Record 50017;
      LastYearDateFound@1000000009 : Boolean;
      TextCH@1000000010 : TextConst 'ENU=There is no history for Item %1 , Customer %2 , the recommended price is outdated.';
      LastPriceBlankdate@1000000011 : Boolean;
    BEGIN
      //WITH Rec DO BEGIN
       StyleTxtLastPriceDate := 'Standard';

        LastYearDate := 0D;
        LastYearDateFound := FALSE;

        ModifyDate := 0D;
        SalesPriceFound := FALSE;
        HotSheetPriceFound := FALSE;
        SalesLineMultiplierFound := FALSE;
        LastPriceBlankdate := FALSE;

        IF "Item No." = '' THEN
          EXIT;
        IF "Customer No." = '' THEN
          EXIT;

          LastYearDate := CALCDATE('-1Y',WORKDATE);
          IF "Last Price Date" <> 0D THEN BEGIN
            IF ("Last Price Date" < LastYearDate) THEN
              LastYearDateFound := TRUE
            ELSE
              LastYearDateFound := FALSE;
          END ELSE
          // MESSAGE(TextCH,"Item No.","Customer No.");
            LastPriceBlankdate := TRUE;

          //IF LastYearDateFound THEN BEGIN
            ModifyDate := CALCDATE('-6M',WORKDATE);
           IF ("Pricing Logic" = "Pricing Logic" :: "Sales Price") THEN BEGIN
            SalesPrice.RESET;
            SalesPrice.SETCURRENTKEY("Modified Date");
            SalesPrice.SETASCENDING("Modified Date",FALSE);
            SalesPrice.SETRANGE("Sales Type",SalesPrice."Sales Type" :: Customer);
            SalesPrice.SETRANGE("Sales Code","Customer No.");
            SalesPrice.SETRANGE("Item No.","Item No.");
            //SalesPrice.SETFILTER("Modified Date",'<%2',ModifyDate);
            IF SalesPrice.FINDFIRST THEN
              IF SalesPrice."Modified Date" <> 0D THEN
                IF SalesPrice."Modified Date" >= ModifyDate THEN
                 SalesPriceFound := TRUE;
           END;

           IF ("Pricing Logic" = "Pricing Logic" :: "Sales Line Multiplier(Cust.)") OR ("Pricing Logic" = "Pricing Logic" :: "Sales Line Multiplier(Cust. Mult. Grp.)") THEN BEGIN
            IF SalesPriceFound = FALSE THEN BEGIN
              SalesLineMultiplier.RESET;
              SalesLineMultiplier.SETCURRENTKEY("Last Modified Date");
              SalesLineMultiplier.SETASCENDING("Last Modified Date",FALSE);
              SalesLineMultiplier.SETRANGE("Sales Type",SalesLineMultiplier."Sales Type" :: Customer);
              SalesLineMultiplier.SETRANGE("Sales Code","Customer No.");
              IF ItemMultiplier.GET("Item No.") THEN
                SalesLineMultiplier.SETRANGE(Code,ItemMultiplier."Item Disc. Group");
              //SalesLineMultiplier.SETFILTER("Last Modified Date",'<%2',ModifyDate);
              IF SalesLineMultiplier.FINDFIRST THEN
                IF SalesLineMultiplier."Last Modified Date" <> 0D THEN
                  IF SalesLineMultiplier."Last Modified Date" >= ModifyDate THEN
                  SalesLineMultiplierFound := TRUE;
            END;
           END;

           IF ("Pricing Logic" = "Pricing Logic" :: "Hot Sheet") THEN BEGIN
            IF (SalesPriceFound = FALSE) AND (SalesLineMultiplierFound = FALSE) THEN BEGIN
              SalesLineMultiplier.RESET;
              SalesLineMultiplier.SETRANGE("Sales Type",SalesLineMultiplier."Sales Type" :: Customer);
              SalesLineMultiplier.SETRANGE("Sales Code","Customer No.");
              IF ItemMultiplier.GET("Item No.") THEN
                SalesLineMultiplier.SETRANGE(Code,ItemMultiplier."Item Disc. Group");
              SalesLineMultiplier.SETFILTER("Hot Sheet Code",'<>%1','');
              IF (SalesLineMultiplier.FINDFIRST) AND (HotSheetPriceFound = FALSE) THEN BEGIN
                REPEAT
                    HotSheetPrice.RESET;
                    HotSheetPrice.SETRANGE(Code,SalesLineMultiplier."Hot Sheet Code");
                    HotSheetPrice.SETRANGE("Item Disc. Group",SalesLineMultiplier.Code);
                    HotSheetPrice.SETRANGE("Item No.","Item No.");
                    IF HotSheetPrice.FINDFIRST THEN BEGIN
                      IF HotSheetPrice."Last Modified Date" = 0D THEN
                        HotSheetPriceFound := FALSE
                      ELSE BEGIN
                        IF HotSheetPrice."Last Modified Date" >= ModifyDate THEN
                          HotSheetPriceFound := TRUE
                      END;
                    END;
                UNTIL SalesLineMultiplier.NEXT = 0;
              END;
            END;
          END;
         //END;
          IF  (LastPriceBlankdate = TRUE) AND (SalesPriceFound = FALSE) AND (SalesLineMultiplierFound = FALSE) AND (HotSheetPriceFound = FALSE) THEN
            MESSAGE(TextCH,"Item No.","Customer No.");

          IF (LastYearDateFound) AND ((SalesPriceFound = FALSE) AND (SalesLineMultiplierFound = FALSE) AND (HotSheetPriceFound = FALSE)) THEN
            //StyleTxtLastPriceDate := 'Ambiguous';
            StyleTxtLastPriceDate := 'Unfavorable';
      //  END;
      //END;
      //</TPZ2865>
    END;

    LOCAL PROCEDURE SetStyleonReplacement@1000000004();
    VAR
      ItemLoc@1000000000 : Record 27;
    BEGIN
      //TPZ3247
      StyleRep := '';
      IF ItemLoc.GET("Item No.") THEN
        IF ItemLoc."Replacement Cost" = 0 THEN
          StyleRep := 'StrongAccent'; //TPZ3247
    END;

    LOCAL PROCEDURE GetCallForPricetemAttr@1000000009(VAR ItemNo@1000000000 : Code[20]);
    VAR
      ItemAttributeValueMapping@1000000001 : Record 7505;
    BEGIN
      //<TPZ3331>
      ItemAttributeValueMapping.RESET;
      ItemAttributeValueMapping.SETFILTER("Table ID",'27');
      ItemAttributeValueMapping.SETRANGE("No.",ItemNo);
      ItemAttributeValueMapping.SETFILTER("Item Attribute ID",'1063');//Call for Price
      ItemAttributeValueMapping.SETFILTER("Item Attribute Value ID",'6724'); //Call for Price-Yes
      IF ItemAttributeValueMapping.FINDFIRST THEN
         MESSAGE('Call for Price');
      //</TPZ3331>
    END;

    BEGIN
    {
      TOP100B KT ABCSI Item Cust. Avail. & Price 08072015
        - Created this table as part of the SMT
        - Added accompanying fields for displaying Last Unit price
        - Changed the Decimal Places property of RecommMultiplier field

      TOP100B KT ABCSI TOP100B - Pricing Form 06042015
        - Corrected the New Unit Price/2 Calculation

      TOP230 KT ABCSI CRP 2 Fixes 05012015
        -  Code added to the function FetchRecommFieldValues()
        -  Added a new field "Pricing Logic"

      2015-09-21 TPZ1035 VCHERNYA
        Items by Location page action trigger has been corrected to use Item record instead of
          Item Cust. Avail. & Price record
      2015-10-09 TPZ925 VCHERNYA
        DecimalPlaces property has been set for Qty. Available and Qty. Available to Pick fields
      2015-11-24 TPZ135 VCHERNYA
        Inventory History Details and Alt. UOM Inventory History Details page actions have been added
      2015-12-17 TPZ1280 VCHERNYA
        Skipping of Manual No. test has been added
      2016-03-10 TPZ1431 TAKHMETO
        Page Hot Sheet Prices has been added
      2016-03-10 TOP9030 TAKHMETO
        Validation of Item No. has been modified
      2016-03-29 TOP9173 TAKHMETO
        UpdateQuantities function has been modified
      2016-03-30 TPZ9131 EBAGIM
        Enable Blocked Customers to get pricing
      2016-03-30 TPZ1725 EBAGIM
        Show Last Price only for posted invoices
      2017-06-30 TPZ1937 EBAGIM
        Sales line table changed to sales line buffer table, not creating an order to calculate a price
      2017-11-29 TPZ2102 kvb
      2018-07-06 TOP2340 UCHOUHAN
        - Added new field "Description 2".
      2019-01-23 TPZ2493 AKUMAR
        Added code to update QtyAvailtoPick in fact box.
      2019-06-21 TPZ2590 UCHOUHAN
        Added Enterprise Inventory and "monthly of Stock" fields.
      2019-11-26 TPZ2718 UCHOUHAN
        Change Blankzero Property to YES for 'Month of Stock' Field.
      2019-12-04 TPZ2728 RTIWARI
        Added condition to exclude Lighting Items from Pricing
      2020-04-15 TPZ2777 DCleary - Changed Report directory to: User Reports - Product
      09-09-2020  PKS  TPZ2881  Added Average Unit Cost field and make visisble false to Unit Cost field
      001 TPZ3125 PKS 05042021 Added replacement cost field
      002 TPZ3247 PKS 06292021 Added new logic on color coding of replacement cost field to show blue bold if replacement cost is zero on item card
      003 TPZ3331 UTK 10-01-2021 Added code for call for price message.
    }
    END.
  }
}

