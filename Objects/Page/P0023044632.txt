OBJECT Page 23044632 DSHIP Order Info. Factbox
{
  OBJECT-PROPERTIES
  {
    Date=07/09/21;
    Time=11:02:21 AM;
    Modified=Yes;
    Version List=DSHIP2.2.1,3265;
  }
  PROPERTIES
  {
    CaptionML=ENU=Dynamic Ship Order Informataion Factbox;
    SourceTable=Table23044601;
    PageType=CardPart;
    SourceTableTemporary=Yes;
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000016;1;Group  ;
                CaptionML=ENU=Shipping Information;
                GroupType=Group }

    { 1000000001;2;Field  ;
                SourceExpr="Shipping Agent Code";
                OnLookup=BEGIN
                           assistEdit;
                         END;

                OnDrillDown=BEGIN
                              assistEdit;
                            END;
                             }

    { 1000000002;2;Field  ;
                SourceExpr="Shipping Agent Service Code";
                Visible=False;
                OnLookup=BEGIN
                           assistEdit;
                         END;

                OnDrillDown=BEGIN
                              assistEdit;
                            END;
                             }

    { 1000000015;2;Field  ;
                SourceExpr="E-Ship Agent Service";
                OnLookup=BEGIN
                           assistEdit;
                         END;

                OnDrillDown=BEGIN
                              assistEdit;
                            END;
                             }

    { 1000000003;2;Field  ;
                SourceExpr="Shipment Method Code";
                OnLookup=BEGIN
                           assistEdit;
                         END;

                OnDrillDown=BEGIN
                              assistEdit;
                            END;
                             }

    { 1000000004;2;Field  ;
                CaptionML=ENU=Freight Cost;
                SourceExpr=dFreightCost }

    { 1000000017;1;Group  ;
                CaptionML=ENU=Document Information;
                Editable=FALSE;
                GroupType=Group }

    { 1000000020;2;Field  ;
                SourceExpr="Document Status" }

    { 1000000019;2;Field  ;
                SourceExpr="Warehouse Shipment Status" }

    { 1000000018;2;Field  ;
                SourceExpr="Document Assigned User ID" }

    { 1000000021;1;Group  ;
                CaptionML=ENU=Destination Information;
                Editable=FALSE;
                GroupType=Group }

    { 1000000014;2;Field  ;
                SourceExpr="Sell-to Customer No." }

    { 1000000013;2;Field  ;
                SourceExpr="Ship-to Name" }

    { 1000000012;2;Field  ;
                SourceExpr="Ship-to Name 2" }

    { 1000000011;2;Field  ;
                SourceExpr="Ship-to Address" }

    { 1000000010;2;Field  ;
                SourceExpr="Ship-to Address 2" }

    { 1000000009;2;Field  ;
                SourceExpr="Ship-to City" }

    { 1000000008;2;Field  ;
                SourceExpr="Ship-to County" }

    { 1000000007;2;Field  ;
                SourceExpr="Ship-to Country/Region Code" }

    { 1000000006;2;Field  ;
                SourceExpr="Ship-to Post Code" }

    { 1000000005;2;Field  ;
                SourceExpr="Ship-to Phone No." }

  }
  CODE
  {
    VAR
      recrRecRef@1000000000 : RecordRef;
      tcUnknownDoc@1000000001 : TextConst 'ENU=Unknown source document for packaging.;ESM=Documento de origen desconocido para el embalaje.;FRC=Document source inconnue pour l''emballage.;ENC=Unknown source document for packaging.';
      dFreightCost@1000000002 : Decimal;

    PROCEDURE setOrder@1000000002(VAR precrRecRef@1000000000 : RecordRef);
    BEGIN
      //<FUNC>
      //  Description: Sets the order to grab details from
      //  Called From: PAGE DSHIP Package Worksheet (P23044602)
      //  Side Effect: None
      //</FUNC>

      recrRecRef := precrRecRef;

      getOrderInfo;
    END;

    LOCAL PROCEDURE getOrderInfo@1000000005();
    VAR
      lrecWhseShipHeader@1000000002 : Record 7320;
      lrecSalesHeader@1000000001 : Record 36;
      lrecTransferHeader@1000000000 : Record 5740;
      lrecWhseShipLine@1000000003 : Record 7321;
      lcuPackMgmt@1000000004 : Codeunit 23044600;
      SalesHeader@1170000000 : Record 36;
    BEGIN
      //<FUNC>
      //  Description: Gets factbox info from the order
      //  Called From: This page (P23044632)
      //  Side Effect: None
      //</FUNC>

      prepRec;

      CASE recrRecRef.NUMBER OF
        DATABASE::"Warehouse Shipment Header":
          BEGIN
            recrRecRef.SETTABLE(lrecWhseShipHeader);
            IF ( lrecWhseShipHeader.GET(lrecWhseShipHeader."No.") ) THEN BEGIN
              Rec."Document Type" := Rec."Document Type"::"Warehouse Shipment";
              Rec."Document No." := lrecWhseShipHeader."No.";
              Rec.INSERT;
              setShipInfo(lrecWhseShipHeader."Shipping Agent Code",
                          lrecWhseShipHeader."Shipping Agent Service Code",
                          lrecWhseShipHeader."Shipment Method Code");
              lrecWhseShipLine.SETRANGE("No.", lrecWhseShipHeader."No.");
              IF ( lrecWhseShipLine.FINDFIRST ) THEN
                IF ( lrecWhseShipLine."Source Document" = lrecWhseShipLine."Source Document"::"Sales Order" ) THEN
                  setFreightCost(lrecWhseShipLine."Source No.");
              setDocInfo(lrecWhseShipHeader.Status,
                         lrecWhseShipHeader."Document Status",
                         lrecWhseShipHeader."Assigned User ID");
              lcuPackMgmt.setShipToDetailFromWhseShipment(Rec, lrecWhseShipHeader);
              Rec.MODIFY(FALSE);
            END;
          END;
        DATABASE::"Sales Header":
          BEGIN
            recrRecRef.SETTABLE(lrecSalesHeader);
            IF ( lrecSalesHeader.GET(1, lrecSalesHeader."No.") ) THEN BEGIN
              Rec."Document Type" := Rec."Document Type"::"Sales Order";
              Rec."Document No." := lrecSalesHeader."No.";
              Rec."Document Subtype" := 1;
              Rec.INSERT;
              setShipInfo(lrecSalesHeader."Shipping Agent Code",
                          lrecSalesHeader."Shipping Agent Service Code",
                          lrecSalesHeader."Shipment Method Code");
              setFreightCost(lrecSalesHeader."No.");
              setDocInfo(lrecSalesHeader.Status,
                         0,
                         lrecSalesHeader."Assigned User ID");
              lcuPackMgmt.setShipToDetailFromSalesOrder(Rec, lrecSalesHeader);
              Rec.MODIFY(FALSE);
            END;
          END;
        DATABASE::"Transfer Header":
          BEGIN
            recrRecRef.SETTABLE(lrecTransferHeader);
            IF ( lrecTransferHeader.GET(lrecTransferHeader."No.") ) THEN BEGIN
              Rec."Document Type" := Rec."Document Type"::"Outbound Transfer";
              Rec."Document No." := lrecTransferHeader."No.";
              Rec.INSERT;
              setShipInfo(lrecTransferHeader."Shipping Agent Code",
                          lrecTransferHeader."Shipping Agent Service Code",
                          lrecTransferHeader."Shipment Method Code");
              setDocInfo(lrecTransferHeader.Status,
                         0,
                         lrecTransferHeader."Assigned User ID");
              lcuPackMgmt.setShipToDetailFromTransferOrder(Rec, lrecTransferHeader);
              Rec.MODIFY(FALSE);
            END;
          END;
      END;
      updateShipInfoGetLabel;//TPZ3265
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE setShipInfo@1000000006(pcodShipAgent@1000000000 : Code[20];pcodShipAgentService@1000000001 : Code[20];pcodShipMethod@1000000002 : Code[20]);
    BEGIN
      //<FUNC>
      //  Description: Sets shipping info on order
      //  Called From: This page (P23044632)
      //  Side Effect: None
      //</FUNC>

      Rec."Shipping Agent Code" := pcodShipAgent;
      Rec."Shipping Agent Service Code" := pcodShipAgentService;
      Rec."Shipment Method Code" := pcodShipMethod;
    END;

    LOCAL PROCEDURE setFreightCost@1000000003(pcodSalesHeader@1000000000 : Code[20]);
    VAR
      lrecDShipConfig@1000000002 : Record 23044600;
      lrecSalesLine@1000000001 : Record 37;
    BEGIN
      //<FUNC>
      //  Description: Calculates and sets freight cost of the order
      //  Called From: This page (P23044632)
      //  Side Effect: None
      //</FUNC>

      dFreightCost := 0;
      lrecDShipConfig.GET;
      lrecSalesLine.SETRANGE("Document No.", pcodSalesHeader);
      lrecSalesLine.SETRANGE("Qty. to Ship", 1);
      lrecSalesLine.SETRANGE("No.", lrecDShipConfig."Freight Billing No.");
      CASE lrecDShipConfig."Freight Billing Type" OF
        lrecDShipConfig."Freight Billing Type"::Resource:
          lrecSalesLine.SETRANGE(Type, lrecSalesLine.Type::Resource);
        lrecDShipConfig."Freight Billing Type"::"G/L":
          lrecSalesLine.SETRANGE(Type, lrecSalesLine.Type::"G/L Account");
      END;

      IF ( lrecSalesLine.FINDSET(FALSE) ) THEN
        REPEAT
          dFreightCost += lrecSalesLine."Amount Including VAT";
        UNTIL(lrecSalesLine.NEXT=0);
    END;

    LOCAL PROCEDURE setDocInfo@1000000004(poptStatus@1000000000 : Option;poptDocStatus@1000000001 : Option;pcodAssUserID@1000000002 : Code[50]);
    BEGIN
      //<FUNC>
      //  Description: Sets the order details
      //  Called From: This page (P23044640)
      //  Side Effect: None
      //</FUNC>

      Rec."Document Status" := poptStatus;
      Rec."Warehouse Shipment Status" := poptDocStatus;
      Rec."Document Assigned User ID" := pcodAssUserID;
    END;

    LOCAL PROCEDURE prepRec@1000000026();
    BEGIN

      CLEAR(Rec);
      Rec.RESET;
      Rec.DELETEALL;

      dFreightCost := 0;
    END;

    LOCAL PROCEDURE assistEdit@1000000038();
    VAR
      lpgShipInfo@1000000000 : Page 23044642;
    BEGIN

      lpgShipInfo.LOOKUPMODE := TRUE;
      lpgShipInfo.initPage(Rec);
      IF ( lpgShipInfo.RUNMODAL = ACTION::LookupOK ) THEN BEGIN
        lpgShipInfo.GETRECORD(Rec);
        updateShipInfo;
      END;
    END;

    LOCAL PROCEDURE updateShipInfo@1000000007();
    VAR
      lrecWhseShipHeader@1000000002 : Record 7320;
      lrecSalesHeader@1000000001 : Record 36;
      lrecTransferHeader@1000000000 : Record 5740;
      WhseShipLineLoc@1000000003 : Record 7321;
      SourceNo@1000000004 : Code[20];
    BEGIN

      CASE Rec."Document Type" OF
        Rec."Document Type"::"Warehouse Shipment":
          BEGIN
            IF ( lrecWhseShipHeader.GET(Rec."Document No.") ) THEN BEGIN
      //        <TPZ2723> DSHIP Code Blocked
      //        lrecWhseShipHeader."Shipping Agent Code" := Rec."Shipping Agent Code";
      //        lrecWhseShipHeader."Shipping Agent Service Code" := Rec."Shipping Agent Service Code";
      //        lrecWhseShipHeader."Shipment Method Code" := Rec."Shipment Method Code";
      //        lrecWhseShipHeader.MODIFY(FALSE);
      //        </TPZ2723>

            //-->PKS
              WhseShipLineLoc.RESET;
              WhseShipLineLoc.SETCURRENTKEY("No.","Source Document","Source No.");
              WhseShipLineLoc.SETRANGE("No.",Rec."Document No.");
              IF WhseShipLineLoc.FINDFIRST THEN
                REPEAT
                  IF SourceNo <> WhseShipLineLoc."Source No." THEN
                    IF lrecSalesHeader.GET(lrecSalesHeader."Document Type"::Order, WhseShipLineLoc."Source No.") THEN BEGIN
                      lrecSalesHeader."Shipping Agent Code" := Rec."Shipping Agent Code";
                      lrecSalesHeader."Shipping Agent Service Code" := Rec."Shipping Agent Service Code";
                      lrecSalesHeader."Shipment Method Code" := Rec."Shipment Method Code";
                      lrecSalesHeader."E-Ship Agent Service" := Rec."E-Ship Agent Service"; //PKS
                      lrecSalesHeader.MODIFY(FALSE);
                      //-->TPZ3265
                      UpdateShipinfotoOWR(lrecSalesHeader."No.");
                    END ELSE IF ( lrecTransferHeader.GET(WhseShipLineLoc."Source No.")) THEN BEGIN
                      lrecTransferHeader."Shipping Agent Code" := Rec."Shipping Agent Code";
                      lrecTransferHeader."Shipping Agent Service Code" := Rec."Shipping Agent Service Code";
                      lrecTransferHeader."Shipment Method Code" := Rec."Shipment Method Code";
                      lrecTransferHeader."E-Ship Agent Service" := Rec."E-Ship Agent Service";
                      lrecTransferHeader.MODIFY(FALSE);
                      UpdateShipinfotoOWR(lrecTransferHeader."No.");
            END;
                    //<--TPZ3265
                  SourceNo := WhseShipLineLoc."Source No.";
                UNTIL WhseShipLineLoc.NEXT = 0;
            END;
            //<--
          END;
        Rec."Document Type"::"Sales Order":
          BEGIN
            IF ( lrecSalesHeader.GET(Rec."Document Subtype", Rec."Document No.") ) THEN BEGIN
              lrecSalesHeader."Shipping Agent Code" := Rec."Shipping Agent Code";
              lrecSalesHeader."Shipping Agent Service Code" := Rec."Shipping Agent Service Code";
              lrecSalesHeader."Shipment Method Code" := Rec."Shipment Method Code";
              lrecSalesHeader."E-Ship Agent Service" := Rec."E-Ship Agent Service"; //PKS
              lrecSalesHeader.MODIFY(FALSE);
              UpdateShipinfotoOWR(lrecSalesHeader."No."); //TPZ3265
            END;
          END;
        Rec."Document Type"::"Outbound Transfer":
          BEGIN
            IF ( lrecTransferHeader.GET(Rec."Document No.") ) THEN BEGIN
              lrecTransferHeader."Shipping Agent Code" := Rec."Shipping Agent Code";
              lrecTransferHeader."Shipping Agent Service Code" := Rec."Shipping Agent Service Code";
              lrecTransferHeader."Shipment Method Code" := Rec."Shipment Method Code";
              lrecTransferHeader."E-Ship Agent Service" := Rec."E-Ship Agent Service"; //TPZ3265
              lrecTransferHeader.MODIFY(FALSE);
              UpdateShipinfotoOWR(lrecTransferHeader."No."); //TPZ3265
            END;
          END;

      END;
    END;

    LOCAL PROCEDURE UpdateShipinfotoOWR@1000000000(SourcePara@1000000001 : Code[20]);
    VAR
      WarehouseRequest@1000000000 : Record 5765;
    BEGIN
      //-->TPZ3265
      WarehouseRequest.RESET;
      WarehouseRequest.SETRANGE("Source No.",SourcePara);
      IF WarehouseRequest.FINDSET THEN
        REPEAT
          WarehouseRequest."Shipping Agent Code" := Rec."Shipping Agent Code";
          WarehouseRequest."Shipping Method" := Rec."Shipping Agent Code";
          WarehouseRequest."E-Ship Agent Service" := Rec."E-Ship Agent Service";
          WarehouseRequest.MODIFY
        UNTIL WarehouseRequest.NEXT = 0;
      //<--TPZ3265
    END;

    LOCAL PROCEDURE updateShipInfoGetLabel@1000000001();
    VAR
      lrecWhseShipHeader@1000000002 : Record 7320;
      lrecSalesHeader@1000000001 : Record 36;
      lrecTransferHeader@1000000000 : Record 5740;
      WhseShipLineLoc@1000000003 : Record 7321;
      SourceNo@1000000004 : Code[20];
    BEGIN
      //-->TPZ3265
      CASE Rec."Document Type" OF
        Rec."Document Type"::"Warehouse Shipment":
          BEGIN
            IF ( lrecWhseShipHeader.GET(Rec."Document No.") ) THEN BEGIN
              WhseShipLineLoc.RESET;
              WhseShipLineLoc.SETCURRENTKEY("No.","Source Document","Source No.");
              WhseShipLineLoc.SETRANGE("No.",Rec."Document No.");
              IF WhseShipLineLoc.FINDFIRST THEN
                REPEAT
                  IF SourceNo <> WhseShipLineLoc."Source No." THEN
                    IF lrecSalesHeader.GET(lrecSalesHeader."Document Type"::Order, WhseShipLineLoc."Source No.") THEN BEGIN
                      UpdateShipinfotoOWR(lrecSalesHeader."No.");
                    END ELSE IF lrecTransferHeader.GET(WhseShipLineLoc."Source No.") THEN BEGIN
                      UpdateShipinfotoOWR(lrecTransferHeader."No.");
                    END;;
                  SourceNo := WhseShipLineLoc."Source No.";
                UNTIL WhseShipLineLoc.NEXT = 0;
            END;
          END;
        Rec."Document Type"::"Sales Order":
          BEGIN
            IF ( lrecSalesHeader.GET(Rec."Document Subtype", Rec."Document No.") ) THEN BEGIN
              UpdateShipinfotoOWR(lrecSalesHeader."No.");
            END;
          END;
        Rec."Document Type"::"Outbound Transfer":
          BEGIN
            IF ( lrecTransferHeader.GET(Rec."Document No.") ) THEN BEGIN
              UpdateShipinfotoOWR(lrecTransferHeader."No.");
            END ELSE IF ( lrecWhseShipHeader.GET(Rec."Document No.") ) THEN BEGIN
              WhseShipLineLoc.RESET;
              WhseShipLineLoc.SETCURRENTKEY("No.","Source Document","Source No.");
              WhseShipLineLoc.SETRANGE("No.",Rec."Document No.");
              IF WhseShipLineLoc.FINDFIRST THEN
                REPEAT
                  IF SourceNo <> WhseShipLineLoc."Source No." THEN
                    IF lrecTransferHeader.GET(WhseShipLineLoc."Source No.") THEN BEGIN
                      UpdateShipinfotoOWR(lrecTransferHeader."No.");
                    END;
                  SourceNo := WhseShipLineLoc."Source No.";
                UNTIL WhseShipLineLoc.NEXT = 0;
            END;
          END;
      END;
      //<--TPZ3265
    END;

    BEGIN
    {
      ************************
      Copyright Notice
      This objects content is copyright of Insight Works 2011.  All rights reserved.
      Any redistribution or reproduction of part or all of the contents in any form is prohibited.
      ************************
      12-18-2019 TPZ2723 VAHAMAD
       Code blocked in function updateShipInfo to prevent updation into Sales Order
      001 TPZ3265 PKS 07072021 Added code to flow shipping agent code to OWR
    }
    END.
  }
}

