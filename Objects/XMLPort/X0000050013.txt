OBJECT XMLport 50013 Expensify Transactions Import
{
  OBJECT-PROPERTIES
  {
    Date=07/01/20;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=TPZ000.00.00;
  }
  PROPERTIES
  {
    Direction=Import;
    OnPreXMLport=BEGIN
                   ExpensifyBuffer.RESET;
                   ExpensifyBuffer.DELETEALL;
                 END;

    OnPostXMLport=VAR
                    ExpensifyImport@1000000000 : Codeunit 50034;
                    ExpFile@1000000001 : Record 2000000022;
                    ExpPaymentGenJnlBatch@1000000002 : Record 232;
                    ExpPurchGenJnlBatch@1000000004 : Record 232;
                  BEGIN
                    //<TPZ2078>
                    IF ExpensifyBuffer.ISEMPTY = TRUE THEN BEGIN
                      MESSAGE('No records were imported.');
                      EXIT;
                    END;

                    ExpensifyImport.Initializer;
                    ExpensifyImport.ScanAmexExpenseEntries;
                    ExpensifyImport.ScanExpenseEntries;
                    ExpensifyImport.ScanExpenseEntriesForPayment;
                    ExpensifyImport.ArchiveFile(currXMLport.FILENAME);

                    MESSAGE('Payment Journal and Purchase Journal records had been added to Expensify batch and the file was archived');
                    //</TPZ2078>
                  END;

    Format=Variable Text;
    RecordSeparator=<LF>;
    UseRequestPage=No;
  }
  ELEMENTS
  {
    { [{2F2B1571-B4B1-4DC3-A203-F291D2CB8FF2}];  ;Root                ;Element ;Text    ;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF CompanyCodeTxt = 'COMPANY' THEN
                                                                                    currXMLport.SKIP;
                                                                                END;
                                                                                 }

    { [{BD00758C-172E-4A60-828F-E1E639E202FC}];1 ;ExpensifyImportBuffer;Element;Table   ;
                                                  SourceTable=Table50036;
                                                  Import::OnBeforeInsertRecord=BEGIN
                                                                                 WITH "Expensify Import Buffer" DO BEGIN
                                                                                   IF UPPERCASE(CompanyCodeTxt) = 'COMPANY' THEN
                                                                                     currXMLport.SKIP;
                                                                                   INIT;
                                                                                   "Entry No." := 0;
                                                                                   "Company Code" :=  CompanyCodeTxt;
                                                                                   "Site Code" := SiteCodeTxt;
                                                                                   "Division Code" := DivCodeTxt;
                                                                                   "Department Code" := DeptCodeTxt;
                                                                                   "G/L Account No." := PrimGLAccTxt;
                                                                                   IF EVALUATE (DateReimbursedVar, DateReimbursedTxt) THEN
                                                                                     "Date Reimbursed" := DateReimbursedVar
                                                                                   ELSE
                                                                                     "Date Reimbursed" := 0D ;
                                                                                   "Date Imported" := TODAY;
                                                                                   IF EVALUATE(AmountReimbursedDec, AmountReimbursedTxt) THEN
                                                                                     "Amount Reimbursed" := AmountReimbursedDec
                                                                                   ELSE
                                                                                     "Amount Reimbursed" := 0;
                                                                                   "Expensify Reference No." := ExpensifyRefTxt;
                                                                                   Description := COPYSTR(DescriptionTxt,1,30);
                                                                                   "Secondary G/L Account No." := COPYSTR(SecondGLAccTxt,1,20);
                                                                                   "Import File Name" := currXMLport.FILENAME;


                                                                                   //<TPZ1909>
                                                                                   "Vendor No." := COPYSTR(VendorNumTxt, 1, MAXSTRLEN("Vendor No."));
                                                                                   Reimbursable := FALSE;
                                                                                   IF ReimbursableTxt <> '' THEN BEGIN
                                                                                     IF UPPERCASE(ReimbursableTxt) = 'Y' THEN
                                                                                       Reimbursable := TRUE
                                                                                     ELSE IF UPPERCASE(ReimbursableTxt) = 'N' THEN
                                                                                       Reimbursable := FALSE
                                                                                     ELSE
                                                                                       ERROR('Line Description: %1 error: Reimbursable must be N or Y.', DescriptionTxt);
                                                                                   END ELSE
                                                                                     ERROR('Line Description: %1 error: Reimbursable must must not be blank.', DescriptionTxt)
                                                                                   //</TPZ1909>
                                                                                 END;
                                                                               END;
                                                                                }

    { [{D269E8BE-14D1-448A-AFDE-6B8A6162AA12}];2 ;CompanyCodeTxt      ;Element ;Text    ;
                                                  DataType=Code }

    { [{C39B2A08-9220-4AC8-9E27-6D8BF460670C}];2 ;SiteCodeTxt         ;Element ;Text    ;
                                                  DataType=Code }

    { [{BDA7E9BA-185C-4AC0-8203-8A4783591512}];2 ;DivCodeTxt          ;Element ;Text    ;
                                                  DataType=Code }

    { [{4E16CCE9-781B-41C7-B9E6-E87678EA5D17}];2 ;DeptCodeTxt         ;Element ;Text    ;
                                                  DataType=Code }

    { [{89C94589-A85E-4D7D-969E-631757F9691E}];2 ;PrimGLAccTxt        ;Element ;Text    ;
                                                  DataType=Code }

    { [{C7C2F422-AE5F-40A3-9726-B98526BE3B07}];2 ;DateReimbursedTxt   ;Element ;Text    ;
                                                  DataType=Date }

    { [{82420603-8794-42B7-BB78-63D292B8B050}];2 ;AmountReimbursedTxt ;Element ;Text    ;
                                                  DataType=Decimal }

    { [{A05CC87F-FD2A-4907-917F-A45BAC6E234F}];2 ;ExpensifyRefTxt     ;Element ;Text    ;
                                                  DataType=Text }

    { [{836C81AF-65D3-4386-BE1D-1436FA863384}];2 ;DescriptionTxt      ;Element ;Text    ;
                                                  DataType=Text }

    { [{A0F6B4B6-C159-4935-8F96-E8987560EEE9}];2 ;SecondGLAccTxt      ;Element ;Text    ;
                                                  DataType=Code }

    { [{61FBB9B9-6651-427E-9EE2-580F8CBFDA2D}];2 ;ReimbursableTxt     ;Element ;Text     }

    { [{5924705B-55FA-49D1-82E9-EB54688A7D08}];2 ;VendorNumTxt        ;Element ;Text    ;
                                                  MinOccurs=Zero }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      DateReimbursedVar@1000000000 : Date;
      AmountReimbursedDec@1000000011 : Decimal;
      ExpensifyBuffer@1000000001 : Record 50036;
      DateOrigText@1000000005 : Text;
      DateYYYYTxt@1000000006 : Text;
      DateMMTxt@1000000007 : Text;
      DateDDTxt@1000000008 : Text;
      DateYYYY@1000000002 : Integer;
      DateMM@1000000003 : Integer;
      DateDD@1000000004 : Integer;
      DateConcTxt@1000000009 : Text;

    BEGIN
    {
      TPZ1922 061617 SDESAI - Added two new place holder fields due to changed layout
      TPZ1909 070517 TMEI - Added support for AMEX, Vendor No. and Reimbursable.
      TPZ2078 110917 TMEI
        Create Purchase Journal and Payment Journal after importing file.
    }
    END.
  }
}

