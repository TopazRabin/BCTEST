OBJECT XMLport 50029 ITEM_UPC IMPORT
{
  OBJECT-PROPERTIES
  {
    Date=07/01/20;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=TPZ000.00.00;
  }
  PROPERTIES
  {
    Format=Variable Text;
  }
  ELEMENTS
  {
    { [{75FDE9AE-B95D-4A51-A7F4-7CB17A35B17F}];  ;Root                ;Element ;Text     }

    { [{1768536A-87A2-4C2B-93D1-85EA6DEE8533}];1 ;integer             ;Element ;Table   ;
                                                  SourceTable=Table2000000026;
                                                  AutoSave=No;
                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 tmpBarcode1@1000000000 : Code[20];
                                                                                 tmpBarcode2@1000000001 : Code[20];
                                                                                 tmpBarcode3@1000000002 : Code[20];
                                                                                 item@1000000003 : Record 27;
                                                                                 barcodeConversion@1000000004 : Record 14000733;
                                                                               BEGIN

                                                                                 CreateUPC(ItemNo);
                                                                               END;

                                                  Import::OnBeforeModifyRecord=BEGIN


                                                                                     { // IF Items."Item UPC/EAN Number"='' THEN BEGIN
                                                                                    MESSAGE(Item."No.");
                                                                                    MESSAGE(UPCNO);

                                                                                       MyItems.GET(Item."No.");
                                                                                       MyItems."Item UPC/EAN Number":=UPCNO;
                                                                                       MyItems.MODIFY();
                                                                                      //END;
                                                                                   }
                                                                               END;
                                                                                }

    { [{6705261F-596F-4BF4-B107-5D4DE61DC6C4}];2 ;ItemNo              ;Element ;Text     }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      MyBarcodes@1000000000 : Record 14000733;

    PROCEDURE CreateUPC@1000000000("ItemNo."@1000000000 : Code[20]);
    VAR
      BarcodeBuffer@1000000001 : Record 50028;
      BarcodeConv@1000000002 : Record 14000733;
      InventorySetup@1000000003 : Record 313;
      BaseCode@1000000004 : Code[20];
      TEXT1@1000000005 : TextConst 'ENU=Item %1 already have a Barcode setup - Please Delete the records for Auto Generation';
      TEXT2@1000000006 : TextConst 'ENU=UPC Codes Created  - Please Check The Barcode Conversion table';
      Item@1000000007 : Record 27;
    BEGIN
      //<TPZ82>
      BarcodeConv.SETRANGE("Item No.","ItemNo.");
      IF BarcodeConv.FINDFIRST THEN
        ERROR(TEXT1,"ItemNo.");


      InventorySetup.GET(' ');


      BarcodeConv.RESET();
      BarcodeConv.SETFILTER("Item No.",'%1','');

      BarcodeConv.SETRANGE(Type,BarcodeConv.Type::Item);
      BarcodeConv.SETRANGE("Unit of Measure Code",InventorySetup."Base UOM");
      IF BarcodeConv.FINDFIRST THEN BEGIN
         BarcodeConv."Item No.":="ItemNo.";
         BarcodeConv.MODIFY();
         BaseCode:=COPYSTR(BarcodeConv."Bar Code",1,11);
         Item.GET("ItemNo.");
         Item."Item UPC/EAN Number":=BarcodeConv."Bar Code";
         Item.MODIFY();
      END;

      BarcodeConv.RESET();
      BarcodeConv.SETFILTER("Item No.",'%1','');
      BarcodeConv.SETRANGE(Type,BarcodeConv.Type::Item);
      BarcodeConv.SETRANGE("Unit of Measure Code",InventorySetup."Master on Carton Code");
      BarcodeConv.SETFILTER("Bar Code",'%1','*'+BaseCode+'*');
      IF BarcodeConv.FINDFIRST THEN
          BEGIN
            BarcodeConv."Item No.":="ItemNo.";
            BarcodeConv.MODIFY();
          END ELSE BEGIN
              BarcodeConv.RESET();
              BarcodeConv.SETFILTER("Item No.",'%1','');
              BarcodeConv.SETRANGE(Type,BarcodeConv.Type::Item);
              BarcodeConv.SETRANGE("Unit of Measure Code",InventorySetup."Master on Carton Code");
              IF BarcodeConv.FINDFIRST THEN BEGIN
                BarcodeConv."Item No.":="ItemNo.";
                BarcodeConv.MODIFY();
              END;
           END;

      BarcodeConv.RESET();
      BarcodeConv.SETFILTER("Item No.",'%1','');
      BarcodeConv.SETRANGE(Type,BarcodeConv.Type::Item);
      BarcodeConv.SETRANGE("Unit of Measure Code",InventorySetup."Inner on Carton Code");
      BarcodeConv.SETFILTER("Bar Code",'%1','*'+BaseCode+'*');
      IF BarcodeConv.FINDFIRST THEN BEGIN
         BarcodeConv."Item No.":="ItemNo.";
         BarcodeConv.MODIFY();
      END ELSE BEGIN
          BarcodeConv.RESET();
          BarcodeConv.SETFILTER("Item No.",'%1','');
          BarcodeConv.SETRANGE(Type,BarcodeConv.Type::Item);
          BarcodeConv.SETRANGE("Unit of Measure Code",InventorySetup."Inner on Carton Code");
          IF BarcodeConv.FINDFIRST THEN BEGIN
             BarcodeConv."Item No.":="ItemNo.";
             BarcodeConv.MODIFY();
          END;
       END;
      //MESSAGE(TEXT2);
      //<TPZ82>
    END;

    BEGIN
    END.
  }
}

