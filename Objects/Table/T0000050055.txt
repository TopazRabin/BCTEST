OBJECT Table 50055 Barcode
{
  OBJECT-PROPERTIES
  {
    Date=07/01/20;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=TPZ000.00.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               "Primary Key" := CREATEGUID;
               GenerateBarCode();
             END;

    OnModify=BEGIN
               GenerateBarCode();
             END;

  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;GUID           }
    { 2   ;   ;Value               ;Text250        }
    { 3   ;   ;Type                ;Option        ;OptionCaptionML=ENU=Select a Type,Code 39,Code 128a,Code 128b,Code 128c,2 of 5 Interleaved,QR Code;
                                                   OptionString=[ ,c39,c128a,c128b,c128c,i2of5,qr] }
    { 4   ;   ;Width               ;Integer       ;InitValue=250 }
    { 5   ;   ;Height              ;Integer       ;InitValue=100 }
    { 6   ;   ;Include Text        ;Boolean        }
    { 7   ;   ;Border              ;Boolean        }
    { 8   ;   ;Reverse Colors      ;Boolean        }
    { 9   ;   ;ECC Level           ;Option        ;OptionCaptionML=ENU=Low (L),Medium-Low (M),Medium-High (Q),High (H);
                                                   OptionString=0,1,2,3 }
    { 10  ;   ;Size                ;Option        ;InitValue=5;
                                                   OptionCaptionML=ENU=21x21,42x42,63x63,84x84,105x105,126x126,147x147,168x168,189x189,210x210;
                                                   OptionString=1,2,3,4,5,6,7,8,9,10 }
    { 11  ;   ;Image Type          ;Option        ;OptionString=png,gif,jpg }
    { 12  ;   ;Image               ;BLOB          ;SubType=Bitmap }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE GenerateBarCode@1000000000();
    VAR
      Method@1000000000 : Text;
      RESTWSManagement@1004 : Codeunit 50085;
      HttpResponseMessage@1003 : DotNet "'System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Net.Http.HttpResponseMessage";
      WebUtility@1000000001 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Net.WebUtility";
      null@1001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object";
      ImageStream@1000000004 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.MemoryStream";
      OutStr@1000000002 : OutStream;
      Window@1000 : Dialog;
    BEGIN
      IF Type = Type::" " THEN BEGIN
        CLEAR(Image);
        EXIT;
      END;

      Window.OPEN('Generating Bar Code');

      IF Type = Type::qr THEN
        Method := STRSUBSTNO('barcode/qr/qr.%1?value=%2&size=%3&ecclevel=%4',
                              GetOptionStringValue("Image Type",FIELDNO("Image Type")),
                              WebUtility.UrlEncode(Value),
                              GetOptionStringValue(Size,FIELDNO(Size)),
                              GetOptionStringValue("ECC Level",FIELDNO("ECC Level")))
      ELSE
        Method := STRSUBSTNO('barcode/%1/%2.%3?istextdrawn=%4&isborderdrawn=%5&isreversecolor=%6',
                              GetOptionStringValue(Type,FIELDNO(Type)),
                              WebUtility.UrlEncode(Value),
                              GetOptionStringValue("Image Type",FIELDNO("Image Type")),
                              FORMAT("Include Text",0,2),
                              FORMAT(Border,0,2),
                              FORMAT("Reverse Colors",0,2));


      RESTWSManagement.CallRESTWebService('http://barcodes4.me/',
                                          Method,
                                          'GET',
                                          null,
                                          HttpResponseMessage);

      ImageStream := HttpResponseMessage.Content.ReadAsStreamAsync.Result;

      CLEAR(Image);

      Image.CREATEOUTSTREAM(OutStr);
      ImageStream.WriteTo(OutStr);

      Window.CLOSE();
    END;

    LOCAL PROCEDURE GetOptionStringValue@9(option@1000 : Integer;fieldno@1006 : Integer) : Text;
    VAR
      RecRef@1001 : RecordRef;
      FldRef@1002 : FieldRef;
      OptionString@1003 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.String";
      options@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array";
      separator@1004 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.String";
    BEGIN
      RecRef.GETTABLE(Rec);
      FldRef := RecRef.FIELD(fieldno);
      OptionString := FldRef.OPTIONSTRING;

      separator := ',';
      options := OptionString.Split(separator.ToCharArray());
      EXIT(options.GetValue(option));
    END;

    BEGIN
    END.
  }
}

