OBJECT Table 14000752 Shipping Bill Recon. Line
{
  OBJECT-PROPERTIES
  {
    Date=06/28/17;
    Time=12:00:00 PM;
    Version List=SE0.60;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               GetHeader;
               "Shortcut Dimension 1 Code" := ShippingBillReconHeader."Shortcut Dimension 1 Code";
               "Shortcut Dimension 2 Code" := ShippingBillReconHeader."Shortcut Dimension 2 Code";
             END;

    CaptionML=ENU=Shipping Bill Recon. Line;
  }
  FIELDS
  {
    { 1   ;   ;Shipping Bill No.   ;Code10        ;TableRelation="Shipping Bill Recon. Header";
                                                   CaptionML=ENU=Shipping Bill No. }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 11  ;   ;Shipping Agent Code ;Code10        ;TableRelation="Shipping Agent";
                                                   CaptionML=ENU=Shipping Agent Code;
                                                   Editable=No }
    { 12  ;   ;External Tracking No.;Text30       ;OnValidate=BEGIN
                                                                IF "External Tracking No." <> '' THEN BEGIN
                                                                  TESTFIELD("No.",'');

                                                                  PostedPackage.RESET;
                                                                  PostedPackage.SETCURRENTKEY("External Tracking No.");
                                                                  PostedPackage.SETRANGE("External Tracking No.","External Tracking No.");
                                                                  PostedPackage.SETRANGE("Exclude From Manifest",FALSE);
                                                                  IF PostedPackage.FIND('-') THEN BEGIN
                                                                    VALIDATE(Type,Type::Package);
                                                                    VALIDATE("No.",PostedPackage."No.");
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=External Tracking No. }
    { 13  ;   ;Shipment Date       ;Date          ;CaptionML=ENU=Shipment Date;
                                                   Editable=No }
    { 14  ;   ;Delivery Date       ;Date          ;CaptionML=ENU=Delivery Date }
    { 15  ;   ;Miscellaneous       ;Boolean       ;CaptionML=ENU=Miscellaneous;
                                                   Editable=No }
    { 16  ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Package,Bill of Lading,Other Charges;
                                                   OptionString=Package,Bill of Lading,Other Charges }
    { 17  ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Package)) "Posted Package"
                                                                 ELSE IF (Type=CONST(Bill of Lading)) "Bill of Lading";
                                                   OnValidate=BEGIN
                                                                GetHeader;

                                                                IF "No." = '' THEN
                                                                  EXIT;

                                                                ShippingBillReconLine.RESET;
                                                                ShippingBillReconLine.SETCURRENTKEY(Type,"No.");
                                                                ShippingBillReconLine.SETRANGE(Type,Type);
                                                                ShippingBillReconLine.SETRANGE("No.","No.");
                                                                IF ShippingBillReconLine.FIND('-') AND (CurrFieldNo <> 0) THEN
                                                                  MESSAGE(
                                                                    Text001,
                                                                    Type,"No.",ShippingBillReconLine."Shipping Bill No.");

                                                                CASE Type OF
                                                                  Type::Package:
                                                                    BEGIN
                                                                      PostedPackage.GET("No.");

                                                                      Description := STRSUBSTNO(Text002,PostedPackage."No.");
                                                                      "Shipping Agent Code" := PostedPackage."Shipping Agent Code";
                                                                      "Shipping Agent Service" := PostedPackage."Shipping Agent Service";
                                                                      "External Tracking No." := PostedPackage."External Tracking No.";
                                                                      "Shipment Date" := PostedPackage."Packing Date";
                                                                      "Delivery Date" :=PostedPackage."Expected Delivery Date" ;
                                                                      Miscellaneous := PostedPackage.Miscellaneous;
                                                                      "Weight Calculated" := PostedPackage."Calculation Weight";
                                                                      "Amount Calculated" := PostedPackage."Shipping Cost";
                                                                      "Volume Calculated" := PostedPackage."Calculation Volume";
                                                                      COD := PostedPackage.COD;
                                                                      "COD Amount Calculated" := PostedPackage."COD Amount";
                                                                      "Source Type" := PostedPackage."Source Type";
                                                                      "Source Subtype" := PostedPackage."Source Subtype";
                                                                      "Source ID" := PostedPackage."Source ID";
                                                                      "Posted Source ID" := PostedPackage."Posted Source ID";
                                                                      "Location Code" := PostedPackage."Location Code";
                                                                      "External Document No." := PostedPackage."External Document No.";
                                                                      "Shipping Payment Type" := PostedPackage."Shipping Payment Type";
                                                                      "Third Party Ship. Account No." := PostedPackage."Third Party Ship. Account No.";
                                                                      "Insure Through Shipping Agent" := PostedPackage."Insure Through Shipping Agent";
                                                                      "Shipping Insurance" := PostedPackage."Shipping Insurance";
                                                                      "Ship-to Type" := PostedPackage."Ship-to Type";
                                                                      "Ship-to No." := PostedPackage."Ship-to No.";
                                                                      "Ship-to Code" := PostedPackage."Ship-to Code";
                                                                      "Ship-to Name" := PostedPackage."Ship-to Name";
                                                                      "Ship-to Name 2" := PostedPackage."Ship-to Name 2";
                                                                      "Ship-to Address" := PostedPackage."Ship-to Address";
                                                                      "Ship-to Address 2" := PostedPackage."Ship-to Address 2";
                                                                      "Ship-to City" := PostedPackage."Ship-to City";
                                                                      "Ship-to Contact" := PostedPackage."Ship-to Contact";
                                                                      "Ship-to ZIP Code" := PostedPackage."Ship-to ZIP Code";
                                                                      "Ship-to State" := PostedPackage."Ship-to State";
                                                                      "Ship-to Country Code" := PostedPackage."Ship-to Country Code";
                                                                      "Ship-to Phone No." := PostedPackage."Ship-to Phone No.";
                                                                      "Ship-to Fax No." := PostedPackage."Ship-to Fax No.";
                                                                    END;
                                                                  Type::"Bill of Lading":
                                                                    BEGIN
                                                                      BillOfLading.GET("No.");

                                                                      Description := STRSUBSTNO(Text003,BillOfLading."No.");
                                                                      "Shipping Agent Code" := BillOfLading."Shipping Agent Code";
                                                                      "Shipping Agent Service" := BillOfLading."Shipping Agent Service";
                                                                      "External Tracking No." := BillOfLading."External Tracking No.";
                                                                      "Shipment Date" := BillOfLading."Packing Date";
                                                                      "Delivery Date" :=BillOfLading."Expected Delivery Date" ;
                                                                      Miscellaneous := FALSE;
                                                                      "Weight Calculated" := BillOfLading."Calculation Weight";
                                                                      "Amount Calculated" := BillOfLading."Shipping Cost";
                                                                      "Volume Calculated" := BillOfLading."Calculation Volume";
                                                                      COD := FALSE;
                                                                      "COD Amount Calculated" := 0;
                                                                      "Source Type" := 0;
                                                                      "Source Subtype" := 0;
                                                                      "Source ID" := '';
                                                                      "Posted Source ID" := '';
                                                                      "Location Code" := BillOfLading."Location Code";
                                                                      "External Document No." := '';
                                                                      "Shipping Payment Type" := BillOfLading."Shipping Payment Type";
                                                                      "Third Party Ship. Account No." := BillOfLading."Third Party Ship. Account No.";
                                                                      "Insure Through Shipping Agent" := BillOfLading."Insure Through Shipping Agent";
                                                                      "Shipping Insurance" := BillOfLading."Shipping Insurance";
                                                                      "Ship-to Type" := BillOfLading."Ship-to Type";
                                                                      "Ship-to No." := BillOfLading."Ship-to No.";
                                                                      "Ship-to Code" := BillOfLading."Ship-to Code";
                                                                      "Ship-to Name" := BillOfLading."Ship-to Name";
                                                                      "Ship-to Name 2" := BillOfLading."Ship-to Name 2";
                                                                      "Ship-to Address" := BillOfLading."Ship-to Address";
                                                                      "Ship-to Address 2" := BillOfLading."Ship-to Address 2";
                                                                      "Ship-to City" := BillOfLading."Ship-to City";
                                                                      "Ship-to Contact" := BillOfLading."Ship-to Contact";
                                                                      "Ship-to ZIP Code" := BillOfLading."Ship-to ZIP Code";
                                                                      "Ship-to State" := BillOfLading."Ship-to State";
                                                                      "Ship-to Country Code" := BillOfLading."Ship-to Country Code";
                                                                      "Ship-to Phone No." := BillOfLading."Ship-to Phone No.";
                                                                      "Ship-to Fax No." := BillOfLading."Ship-to Fax No.";
                                                                    END;
                                                                END;

                                                                ShippingBillReconLine.RESET;
                                                                ShippingBillReconLine.SETCURRENTKEY(Type,"No.");
                                                                ShippingBillReconLine.SETRANGE(Type,Type);
                                                                ShippingBillReconLine.SETRANGE("No.","No.");
                                                                PostedShipBillReconLine.RESET;
                                                                PostedShipBillReconLine.SETCURRENTKEY(Type,"No.");
                                                                PostedShipBillReconLine.SETRANGE(Type,Type);
                                                                PostedShipBillReconLine.SETRANGE("No.","No.");
                                                                IF ShippingBillReconLine.FIND('+') OR PostedShipBillReconLine.FIND('+') THEN BEGIN
                                                                  PostedShipBillReconLine.CALCSUMS("Amount Invoiced");
                                                                  "Previous Invoiced Amount" := PostedShipBillReconLine."Amount Invoiced";
                                                                  VALIDATE(Description,'');
                                                                  VALIDATE("Amount Calculated",0);
                                                                  VALIDATE("Weight Calculated",0);
                                                                  VALIDATE("Volume Calculated",0);
                                                                  VALIDATE("Amount Invoiced",0);
                                                                  VALIDATE("Weight Invoiced",0);
                                                                  VALIDATE("Volume Invoiced",0);
                                                                END ELSE BEGIN
                                                                  IF "Amount Invoiced" = 0 THEN
                                                                    VALIDATE("Amount Invoiced","Amount Calculated");
                                                                  IF "Weight Invoiced" = 0 THEN
                                                                    VALIDATE("Weight Invoiced","Weight Calculated");
                                                                  IF "Volume Invoiced" = 0 THEN
                                                                    VALIDATE("Volume Invoiced","Volume Calculated");
                                                                  IF COD THEN BEGIN
                                                                    IF "COD Amount Invoiced" = 0 THEN
                                                                      VALIDATE("COD Amount Invoiced","COD Amount Calculated");
                                                                  END ELSE BEGIN
                                                                    "COD Amount Invoiced" := 0;
                                                                    "COD Amount Difference" := 0;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 18  ;   ;Shipping Agent Service;Code30      ;TableRelation="E-Ship Agent Service".Code WHERE (Shipping Agent Code=FIELD(Shipping Agent Code));
                                                   CaptionML=ENU=Shipping Agent Service;
                                                   Editable=No }
    { 19  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 22  ;   ;Weight Calculated   ;Decimal       ;CaptionML=ENU=Weight Calculated;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 23  ;   ;Amount Calculated   ;Decimal       ;CaptionML=ENU=Amount Calculated;
                                                   Editable=No }
    { 24  ;   ;Amount Invoiced     ;Decimal       ;OnValidate=BEGIN
                                                                IF (Type <> Type::"Other Charges") AND ("Amount Invoiced" <> 0) THEN
                                                                  TESTFIELD("No.");

                                                                "Amount Difference" := "Amount Invoiced" - "Amount Calculated";
                                                              END;

                                                   CaptionML=ENU=Amount Invoiced }
    { 25  ;   ;Amount Difference   ;Decimal       ;OnValidate=BEGIN
                                                                IF (Type <> Type::"Other Charges") AND ("Amount Difference" <> 0) THEN
                                                                  TESTFIELD("No.");

                                                                "Amount Invoiced" := "Amount Calculated" + "Amount Difference";
                                                              END;

                                                   CaptionML=ENU=Amount Difference }
    { 26  ;   ;Verified            ;Boolean       ;OnValidate=BEGIN
                                                                IF Verified THEN
                                                                  "Verified Date" := WORKDATE
                                                                ELSE
                                                                  "Verified Date" := 0D;
                                                              END;

                                                   CaptionML=ENU=Verified }
    { 27  ;   ;Verified Date       ;Date          ;CaptionML=ENU=Verified Date;
                                                   Editable=No }
    { 28  ;   ;Weight Invoiced     ;Decimal       ;OnValidate=BEGIN
                                                                "Weight Difference" := "Weight Invoiced" - "Weight Calculated";
                                                              END;

                                                   CaptionML=ENU=Weight Invoiced;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 29  ;   ;Weight Difference   ;Decimal       ;OnValidate=BEGIN
                                                                "Weight Invoiced" := "Weight Calculated" + "Weight Difference";
                                                              END;

                                                   CaptionML=ENU=Weight Difference;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 30  ;   ;Volume Calculated   ;Decimal       ;CaptionML=ENU=Volume Calculated;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 31  ;   ;Volume Invoiced     ;Decimal       ;OnValidate=BEGIN
                                                                "Weight Difference" := "Weight Invoiced" - "Weight Calculated";
                                                              END;

                                                   CaptionML=ENU=Volume Invoiced;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 32  ;   ;Volume Difference   ;Decimal       ;OnValidate=BEGIN
                                                                "Weight Invoiced" := "Weight Calculated" + "Weight Difference";
                                                              END;

                                                   CaptionML=ENU=Volume Difference;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 33  ;   ;COD Amount Calculated;Decimal      ;CaptionML=ENU=COD Amount Calculated;
                                                   Editable=No }
    { 34  ;   ;COD Amount Invoiced ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD(COD);

                                                                "COD Amount Difference" := "COD Amount Invoiced" - "COD Amount Calculated";
                                                              END;

                                                   CaptionML=ENU=COD Amount Invoiced }
    { 35  ;   ;COD Amount Difference;Decimal      ;OnValidate=BEGIN
                                                                TESTFIELD(COD);

                                                                "COD Amount Invoiced" := "COD Amount Calculated" + "COD Amount Difference";
                                                              END;

                                                   CaptionML=ENU=COD Amount Difference }
    { 36  ;   ;COD                 ;Boolean       ;CaptionML=ENU=COD }
    { 37  ;   ;Previous Invoiced Amount;Decimal   ;CaptionML=ENU=Previous Invoiced Amount;
                                                   Editable=No }
    { 38  ;   ;Discount Invoiced   ;Decimal       ;CaptionML=ENU=Discount Invoiced }
    { 43  ;   ;External Document No.;Code35       ;CaptionML=ENU=External Document No.;
                                                   Editable=No }
    { 47  ;   ;Shipping Payment Type;Option       ;CaptionML=ENU=Shipping Payment Type;
                                                   OptionCaptionML=ENU=Prepaid,Third Party,Freight Collect,Consignee;
                                                   OptionString=Prepaid,Third Party,Freight Collect,Consignee;
                                                   Editable=No }
    { 48  ;   ;Third Party Ship. Account No.;Code20;
                                                   OnLookup=BEGIN
                                                              CustomerShippingAccount.LookupThirdPartyAccountNo(
                                                                "Shipping Agent Code","Ship-to Type","Ship-to No.","Ship-to Code");
                                                            END;

                                                   CaptionML=ENU=Third Party Ship. Account No.;
                                                   Editable=No }
    { 49  ;   ;Insure Through Shipping Agent;Boolean;
                                                   CaptionML=ENU=Insure Through Shipping Agent;
                                                   Editable=No }
    { 50  ;   ;Shipping Insurance  ;Option        ;CaptionML=ENU=Shipping Insurance;
                                                   OptionCaptionML=ENU=" ,Never,Always";
                                                   OptionString=[ ,Never,Always];
                                                   Editable=No }
    { 51  ;   ;Ship-to Type        ;Option        ;CaptionML=ENU=Ship-to Type;
                                                   OptionCaptionML=ENU=Customer,Vendor,Bank,Prospect,Resource,Employee,Contact,Location;
                                                   OptionString=Customer,Vendor,Bank,Prospect,Resource,Employee,Contact,Location;
                                                   Editable=No }
    { 52  ;   ;Ship-to No.         ;Code20        ;TableRelation=IF (Ship-to Type=CONST(Customer)) Customer
                                                                 ELSE IF (Ship-to Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Ship-to Type=CONST(Bank)) "Bank Account"
                                                                 ELSE IF (Ship-to Type=CONST(Contact)) Contact
                                                                 ELSE IF (Ship-to Type=CONST(Resource)) Resource
                                                                 ELSE IF (Ship-to Type=CONST(Employee)) Employee
                                                                 ELSE IF (Ship-to Type=CONST(Location)) Location;
                                                   CaptionML=ENU=Ship-to No.;
                                                   Editable=No }
    { 53  ;   ;Ship-to Code        ;Code10        ;TableRelation=IF (Ship-to Type=CONST(Customer)) "Ship-to Address".Code WHERE (Customer No.=FIELD(Ship-to No.))
                                                                 ELSE IF (Ship-to Type=CONST(Vendor)) "Order Address".Code WHERE (Vendor No.=FIELD(Ship-to No.));
                                                   CaptionML=ENU=Ship-to Code;
                                                   Editable=No }
    { 54  ;   ;Ship-to Name        ;Text50        ;CaptionML=ENU=Ship-to Name;
                                                   Editable=No }
    { 55  ;   ;Ship-to Name 2      ;Text50        ;CaptionML=ENU=Ship-to Name 2;
                                                   Editable=No }
    { 56  ;   ;Ship-to Address     ;Text50        ;CaptionML=ENU=Ship-to Address;
                                                   Editable=No }
    { 57  ;   ;Ship-to Address 2   ;Text50        ;CaptionML=ENU=Ship-to Address 2;
                                                   Editable=No }
    { 58  ;   ;Ship-to City        ;Text30        ;CaptionML=ENU=Ship-to City;
                                                   Editable=No }
    { 59  ;   ;Ship-to Contact     ;Text50        ;CaptionML=ENU=Ship-to Contact;
                                                   Editable=No }
    { 60  ;   ;Ship-to ZIP Code    ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Ship-to ZIP Code;
                                                   Editable=No }
    { 61  ;   ;Ship-to State       ;Text30        ;CaptionML=ENU=Ship-to State;
                                                   Editable=No }
    { 62  ;   ;Ship-to Country Code;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Ship-to Country Code;
                                                   Editable=No }
    { 63  ;   ;Ship-to Phone No.   ;Text30        ;CaptionML=ENU=Ship-to Phone No.;
                                                   Editable=No }
    { 64  ;   ;Ship-to Fax No.     ;Text30        ;CaptionML=ENU=Ship-to Fax No.;
                                                   Editable=No }
    { 65  ;   ;Source Type         ;Integer       ;CaptionML=ENU=Source Type;
                                                   Editable=No }
    { 66  ;   ;Source Subtype      ;Option        ;CaptionML=ENU=Source Subtype;
                                                   OptionCaptionML=ENU=0,1,2,3,4,5,6,7,8,9,10;
                                                   OptionString=0,1,2,3,4,5,6,7,8,9,10;
                                                   Editable=No }
    { 67  ;   ;Source ID           ;Code20        ;OnLookup=BEGIN
                                                              PackingControl.ViewSourceDocument(FALSE,'',"Source Type","Source Subtype","Source ID");
                                                            END;

                                                   CaptionML=ENU=Source ID;
                                                   Editable=No }
    { 68  ;   ;Posted Source ID    ;Code20        ;OnLookup=BEGIN
                                                              PackingControl.ViewPostedSourceDocument("Source Type","Source Subtype","Posted Source ID");
                                                            END;

                                                   CaptionML=ENU=Posted Source ID;
                                                   Editable=No }
    { 69  ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=ENU=Location Code;
                                                   Editable=No }
    { 71  ;   ;Refererence No. 1   ;Code20        ;CaptionML=ENU=Refererence No. 1 }
    { 72  ;   ;Refererence No. 2   ;Code20        ;CaptionML=ENU=Refererence No. 2 }
    { 73  ;   ;Actual Weight       ;Decimal       ;CaptionML=ENU=Actual Weight }
    { 74  ;   ;Net Charge Amount   ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("Amount Invoiced","Net Charge Amount" + "Incentive Amount");
                                                              END;

                                                   CaptionML=ENU=Net Charge Amount }
    { 75  ;   ;Incentive Amount    ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("Amount Invoiced","Net Charge Amount" + "Incentive Amount");
                                                              END;

                                                   CaptionML=ENU=Incentive Amount }
    { 81  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Shortcut Dimension 1 Code;
                                                   CaptionClass='1,2,1' }
    { 82  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Shortcut Dimension 2 Code;
                                                   CaptionClass='1,2,2' }
  }
  KEYS
  {
    {    ;Shipping Bill No.,Line No.              ;SumIndexFields=Amount Invoiced,Amount Difference,Amount Calculated,Weight Calculated,Discount Invoiced;
                                                   Clustered=Yes }
    {    ;Shipping Bill No.,Verified              ;SumIndexFields=Amount Invoiced,Amount Difference,Amount Calculated,Weight Calculated }
    {    ;Shipping Bill No.,Shipping Agent Code,Shipping Agent Service }
    {    ;Type,No.                                 }
    {    ;Shipping Bill No.,Type,Shipping Agent Code,Shipping Agent Service,Shortcut Dimension 1 Code,Shortcut Dimension 2 Code;
                                                   MaintainSQLIndex=No }
    {    ;Shipping Bill No.,Type,External Tracking No. }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ShippingBillReconHeader@1000000000 : Record 14000751;
      ShippingBillReconLine@1000000001 : Record 14000752;
      PostedShipBillReconLine@1240030001 : Record 14000754;
      PostedPackage@1000000002 : Record 14000704;
      BillOfLading@1000000003 : Record 14000822;
      CustomerShippingAccount@1240030000 : Record 14000714;
      Text001@1001 : TextConst 'ENU=%1 %2 is already on Shipping Bill Reconciliation %3.';
      Text002@1002 : TextConst 'ENU=Package %1';
      Text003@1003 : TextConst 'ENU=Bill of Lading %1';
      PackingControl@1240030002 : Record 14000717;

    PROCEDURE GetHeader@1();
    BEGIN
      ShippingBillReconHeader.GET("Shipping Bill No.");
    END;

    BEGIN
    END.
  }
}

