OBJECT Table 14123801 ES FLADS Setup
{
  OBJECT-PROPERTIES
  {
    Date=04/30/18;
    Time=12:00:00 PM;
    Version List=ES1.41.51;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               "Created By User" := USERID;
               "Created Date Time" := CURRENTDATETIME;
             END;

    OnModify=BEGIN
               IF "Use Login Setup" OR xRec."Use Login Setup" THEN BEGIN
                 ESLoginSetup.GET(USERID);
                 ESLoginSetup.TESTFIELD("Edit Setup (FLADS)");
               END;
             END;

    OnDelete=BEGIN
               IF "Use Login Setup" OR xRec."Use Login Setup" THEN BEGIN
                 ESLoginSetup.GET(USERID);
                 ESLoginSetup.TESTFIELD("Edit Setup (FLADS)");
               END;
             END;

    CaptionML=ENU=Field Level and Data Security Setup;
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key }
    { 2   ;   ;Source Code File Name;Text250      ;OnValidate=VAR
                                                                ESObjectExplorer@1240520001 : Record 14123901;
                                                              BEGIN
                                                                IF "Source Code File Name" <> '' THEN
                                                                  IF LOWERCASE(COPYSTR("Source Code File Name",STRLEN("Source Code File Name") - 3)) = '.txt'
                                                                  THEN
                                                                    "Output File Name" :=
                                                                      COPYSTR("Source Code File Name",1,STRLEN("Source Code File Name") - 4) + '-out.txt';
                                                                ESObjectExplorer.CheckCorrectFileName("Source Code File Name",TRUE);
                                                              END;

                                                   OnLookup=VAR
                                                              CommonDialogMgt@1240520008 : Codeunit 14123901;
                                                            BEGIN
                                                              "Source Code File Name" :=
                                                                CommonDialogMgt.OpenFile(
                                                                  FIELDCAPTION("Source Code File Name"),"Source Code File Name",1,'*.txt',0);
                                                              VALIDATE("Source Code File Name");
                                                            END;

                                                   CaptionML=ENU=Source Code File Name }
    { 3   ;   ;Use Nice Names in Code;Boolean     ;InitValue=Yes;
                                                   CaptionML=ENU=Use Nice Names in Code }
    { 4   ;   ;Remove Indentation in Code;Boolean ;CaptionML=ENU=Remove Indentation in Code }
    { 5   ;   ;Dynamic Setup       ;Boolean       ;InitValue=Yes;
                                                   CaptionML=ENU=Dynamic Setup }
    { 6   ;   ;Caption Language    ;Code10        ;InitValue=ENU;
                                                   CaptionML=ENU=Caption Language }
    { 7   ;   ;Use Form Setup for Pages;Boolean   ;OnValidate=BEGIN
                                                                IF "Use Form Setup for Pages" THEN
                                                                  TESTFIELD("Use Page Setup for Forms",FALSE);
                                                              END;

                                                   CaptionML=ENU=Use Form Setup for Pages }
    { 8   ;   ;Output File Name    ;Text250       ;OnValidate=VAR
                                                                ESObjectExplorer@1240520001 : Record 14123901;
                                                              BEGIN
                                                                ESObjectExplorer.CheckCorrectFileName("Output File Name",TRUE);
                                                              END;

                                                   OnLookup=VAR
                                                              ESObjectExplorer@1240520001 : Record 14123901;
                                                              CommonDialogMgt@1240520008 : Codeunit 14123901;
                                                            BEGIN
                                                              "Output File Name" :=
                                                                CommonDialogMgt.OpenFile(
                                                                  FIELDCAPTION("Output File Name"),"Output File Name",1,'*.txt',0);
                                                              ESObjectExplorer.CheckCorrectFileName("Output File Name",TRUE);
                                                            END;

                                                   CaptionML=ENU=Output File Name }
    { 9   ;   ;Lookup Data Date    ;Date          ;CaptionML=ENU=Lookup Data Date;
                                                   Editable=No }
    { 10  ;   ;Lookup Data Time    ;Time          ;CaptionML=ENU=Lookup Data Time;
                                                   Editable=No }
    { 11  ;   ;Use Page Setup for Forms;Boolean   ;OnValidate=BEGIN
                                                                IF "Use Page Setup for Forms" THEN
                                                                  TESTFIELD("Use Form Setup for Pages",FALSE);
                                                              END;

                                                   CaptionML=ENU=Use Page Setup for Forms }
    { 12  ;   ;Modify Forms        ;Boolean       ;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                IF "Modify Forms" <> xRec."Modify Forms" THEN
                                                                  MESSAGE(Text011,FIELDCAPTION("Modify Forms"));
                                                              END;

                                                   CaptionML=ENU=Modify Forms }
    { 13  ;   ;Modify Pages        ;Boolean       ;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                IF "Modify Pages" <> xRec."Modify Pages" THEN
                                                                  MESSAGE(Text011,FIELDCAPTION("Modify Pages"));
                                                              END;

                                                   CaptionML=ENU=Modify Pages }
    { 16  ;   ;Install Allowed     ;Boolean       ;OnValidate=BEGIN
                                                                IF "Install Allowed" THEN BEGIN
                                                                  TestNoInstallInOtherCompanies;

                                                                  IF xRec."Install Allowed" <> "Install Allowed" THEN
                                                                    ESDynamicFilter.InsertStandardFilters(FALSE);

                                                                  TESTFIELD("Copy From Company Name",'');
                                                                  TESTFIELD("Copy From Setup Company",FALSE);
                                                                  TESTFIELD("Copy Field Level Sec. Setup",FALSE);
                                                                  TESTFIELD("Copy Data Security Setup",FALSE);
                                                                  TESTFIELD("Copy User Security Setup",FALSE);
                                                                  TESTFIELD("Copy Group Members",FALSE);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Install Allowed }
    { 19  ;   ;Read-Only Field Level Sec.Code;Code10;
                                                   InitValue=READONLY;
                                                   CaptionML=ENU=Read-Only Field Level Sec.Code }
    { 20  ;   ;Create Read-Only Automatically;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=ENU=Create Read-Only Automatically }
    { 21  ;   ;Set Read-Only to Default;Boolean   ;InitValue=Yes;
                                                   CaptionML=ENU=Set Read-Only to Default }
    { 22  ;   ;Copy From Setup Company;Boolean    ;OnValidate=BEGIN
                                                                IF "Copy From Setup Company" THEN BEGIN
                                                                  TESTFIELD("Install Allowed",FALSE);
                                                                  TESTFIELD("Copy From Company Name");

                                                                  VALIDATE("Copy Field Level Sec. Setup",TRUE);
                                                                  VALIDATE("Copy Data Security Setup",TRUE);
                                                                END ELSE BEGIN
                                                                  VALIDATE("Copy Field Level Sec. Setup",FALSE);
                                                                  VALIDATE("Copy Data Security Setup",FALSE);
                                                                  VALIDATE("Copy User Security Setup",FALSE);
                                                                  VALIDATE("Copy Group Members",FALSE);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Copy From Setup Company }
    { 24  ;   ;Last Copy Date Time ;DateTime      ;CaptionML=ENU=Last Copy Date Time;
                                                   Editable=No }
    { 25  ;   ;Copy Field Level Sec. Setup;Boolean;OnValidate=BEGIN
                                                                IF "Copy Field Level Sec. Setup" = xRec."Copy Field Level Sec. Setup" THEN
                                                                  EXIT;

                                                                IF "Copy Field Level Sec. Setup" THEN BEGIN
                                                                  TESTFIELD("Copy From Setup Company");
                                                                  TESTFIELD("Install Allowed",FALSE);
                                                                  TESTFIELD("Copy From Company Name");

                                                                  MODIFY;
                                                                  ESFLADSCompanyMgt.CreateCopySetupRecords(
                                                                    "Copy From Company Name",COMPANYNAME,TRUE,FALSE,FALSE);
                                                                END ELSE BEGIN
                                                                  MODIFY;
                                                                  ESFLADSCompanyMgt.DeleteCopySetupRecords(TRUE,FALSE,FALSE);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Copy Field Level Security Setup }
    { 26  ;   ;Copy Data Security Setup;Boolean   ;OnValidate=BEGIN
                                                                IF "Copy Data Security Setup" = xRec."Copy Data Security Setup" THEN
                                                                  EXIT;

                                                                IF "Copy Data Security Setup" THEN BEGIN
                                                                  TESTFIELD("Copy From Setup Company");
                                                                  TESTFIELD("Install Allowed",FALSE);
                                                                  TESTFIELD("Copy From Company Name");

                                                                  MODIFY;
                                                                  ESFLADSCompanyMgt.CreateCopySetupRecords(
                                                                    "Copy From Company Name",COMPANYNAME,FALSE,TRUE,FALSE);
                                                                END ELSE BEGIN
                                                                  MODIFY;
                                                                  ESFLADSCompanyMgt.DeleteCopySetupRecords(FALSE,TRUE,FALSE);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Copy Data Security Setup }
    { 27  ;   ;Copy User Security Setup;Boolean   ;OnValidate=BEGIN
                                                                IF "Copy User Security Setup" = xRec."Copy User Security Setup" THEN
                                                                  EXIT;

                                                                 IF "Copy User Security Setup" THEN BEGIN
                                                                  TESTFIELD("Copy From Setup Company");
                                                                  TESTFIELD("Install Allowed",FALSE);
                                                                  TESTFIELD("Copy From Company Name");

                                                                  MODIFY;
                                                                  ESFLADSCompanyMgt.CreateCopySetupRecords(
                                                                    "Copy From Company Name",COMPANYNAME,FALSE,FALSE,TRUE);
                                                                END ELSE BEGIN
                                                                  MODIFY;
                                                                  ESFLADSCompanyMgt.DeleteCopySetupRecords(FALSE,FALSE,TRUE);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Copy User Security Setup }
    { 28  ;   ;Show Group Messages (Debug);Boolean;CaptionML=ENU=Show Group Messages (Debug) }
    { 29  ;   ;Lookup Live Windows Groups;Boolean ;OnValidate=BEGIN
                                                                IF "Lookup Live Windows Groups" THEN BEGIN
                                                                  TESTFIELD("Use FLADS Groups",FALSE);
                                                                  IF ISSERVICETIER THEN
                                                                    MESSAGE(Text025,FIELDCAPTION("Use Stored Windows Groups"));
                                                                END ELSE
                                                                  "Use Stored Windows Groups" := FALSE;
                                                              END;

                                                   CaptionML=ENU=Lookup Live Windows Group }
    { 31  ;   ;Use FLADS Groups    ;Boolean       ;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                IF "Use FLADS Groups" THEN
                                                                  TESTFIELD("Lookup Live Windows Groups",FALSE);
                                                              END;

                                                   CaptionML=ENU=Use Field Level and Data Security Group }
    { 32  ;   ;Copy From Company Name;Text30      ;TableRelation=Company;
                                                   OnValidate=BEGIN
                                                                IF "Copy From Company Name" <> '' THEN BEGIN
                                                                  TESTFIELD("Install Allowed",FALSE);

                                                                  ESFLADSSetup.CHANGECOMPANY("Copy From Company Name");
                                                                  ESFLADSSetup.GET;
                                                                  ESFLADSSetup.TESTFIELD("Install Allowed");

                                                                  IF NOT "Copy From Setup Company" THEN
                                                                    IF CONFIRM(STRSUBSTNO(Text016,FIELDCAPTION("Copy From Setup Company")),TRUE) THEN
                                                                      VALIDATE("Copy From Setup Company",TRUE);
                                                                END ELSE
                                                                  TESTFIELD("Copy From Setup Company",FALSE);
                                                              END;

                                                   OnLookup=VAR
                                                              Company@1240520001 : Record 2000000006;
                                                              CompanyTmp@1240520002 : TEMPORARY Record 2000000006;
                                                            BEGIN
                                                              TESTFIELD("Install Allowed",FALSE);

                                                              IF Company.FIND('-') THEN
                                                                REPEAT
                                                                  IF Company.Name <> COMPANYNAME THEN BEGIN
                                                                    ESFLADSSetup.CHANGECOMPANY(Company.Name);
                                                                    IF ESFLADSSetup.GET THEN
                                                                      IF ESFLADSSetup."Install Allowed" THEN BEGIN
                                                                        CompanyTmp := Company;
                                                                        CompanyTmp.INSERT;
                                                                      END;
                                                                  END;
                                                                UNTIL Company.NEXT = 0;

                                                              IF NOT CompanyTmp.FIND('-') THEN
                                                                TESTFIELD("Install Allowed");

                                                              IF PAGE.RUNMODAL(PAGE::"ES Live Companies",CompanyTmp) = ACTION::LookupOK THEN
                                                                VALIDATE("Copy From Company Name",CompanyTmp.Name);
                                                            END;

                                                   CaptionML=ENU=Copy From Company Name }
    { 33  ;   ;Copy Group Members  ;Boolean       ;OnValidate=VAR
                                                                ESFLADSGroupMember@1240520001 : Record 14123817;
                                                              BEGIN
                                                                IF "Copy Group Members" = xRec."Copy Group Members" THEN
                                                                  EXIT;

                                                                IF "Copy Group Members" THEN BEGIN
                                                                  TESTFIELD("Copy From Setup Company");
                                                                  TESTFIELD("Install Allowed",FALSE);
                                                                  TESTFIELD("Copy From Company Name");

                                                                  ESFLADSGroupMember.RESET;
                                                                  IF ESFLADSGroupMember.FIND('-') THEN
                                                                    ERROR(Text014,ESFLADSGroupMember.TABLECAPTION);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Copy Group Members }
    { 34  ;   ;Manually Enter Group Members;Boolean;
                                                   InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                IF "Manually Enter Group Members" THEN
                                                                  TESTFIELD("Use FLADS Groups");
                                                              END;

                                                   CaptionML=ENU=Manually Enter Group Members }
    { 35  ;   ;Use Stored Windows Groups;Boolean  ;OnValidate=BEGIN
                                                                IF "Use Stored Windows Groups" THEN
                                                                  TESTFIELD("Lookup Live Windows Groups");
                                                              END;

                                                   CaptionML=ENU=Use Stored Windows Groups }
    { 36  ;   ;Use Login Setup     ;Boolean       ;OnValidate=BEGIN
                                                                IF "Use Login Setup" THEN BEGIN
                                                                  ESLoginSetup.GET(USERID);
                                                                  ESLoginSetup.TESTFIELD("Edit Setup (FLADS)");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Use Login Setup }
    { 37  ;   ;Default Object Type ;Option        ;InitValue=Page;
                                                   CaptionML=ENU=Default Object Type;
                                                   OptionCaptionML=ENU=" ,,,,,,,,Page";
                                                   OptionString=[ ,,,,,,,,Page];
                                                   NotBlank=Yes }
    { 38  ;   ;No Action Code on Pages;Boolean    ;CaptionML=ENU=No Action Code on Pages }
    { 39  ;   ;No Button Code on Forms;Boolean    ;CaptionML=ENU=No Button Code on Forms }
    { 40  ;   ;No Field Code on Forms;Boolean     ;CaptionML=ENU=No Field Code on Forms }
    { 41  ;   ;No Field Code on Pages;Boolean     ;CaptionML=ENU=No Field Code on Pages }
    { 42  ;   ;Data Security Filter Group;Integer ;InitValue=2;
                                                   CaptionML=ENU=Data Security Filter Group;
                                                   MinValue=2;
                                                   MaxValue=255 }
    { 43  ;   ;Disable Coded OnLookup;Boolean     ;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                IF "Disable Coded OnLookup" <> xRec."Disable Coded OnLookup" THEN
                                                                  MESSAGE(Text011,FIELDCAPTION("Disable Coded OnLookup"));
                                                              END;

                                                   CaptionML=ENU=Disable Coded OnLookup }
    { 44  ;   ;Created By User     ;Code20        ;CaptionML=ENU=Created By User;
                                                   Editable=No }
    { 45  ;   ;Created Date Time   ;DateTime      ;CaptionML=ENU=Created Date Time;
                                                   Editable=No }
    { 46  ;   ;Enable for Conflicting Code;Boolean;InitValue=Yes;
                                                   CaptionML=ENU=Enable for Conflicting Code }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text004@1004 : TextConst 'ENU=Import changed objects?';
      Text005@1005 : TextConst 'ENU=Please wait while objects being imported from\';
      Text006@1006 : TextConst 'ENU=%1 objects were imported and need to be compiled.';
      Text007@1007 : TextConst 'ENU=Updating Lookup Data.';
      Text008@1008 : TextConst 'ENU=Lookup Data has been updated.';
      Text009@1240520002 : TextConst 'ENU=NAV Easy Security %1\%2 objects, %3 modified.';
      Text010@1010 : TextConst 'ENU=%1 is set in company %2. Only one company can be used for installation.';
      Text012@1012 : TextConst 'ENU=It is recommended to export all objects when deleting code changes. Export all objects?';
      ESFLADSSetup@1240520001 : Record 14123801;
      Text018@1013 : TextConst 'ENU=Lookup data needs to the updated, by a SUPER user.';
      Text019@1009 : TextConst 'ENU=%1 is correct.';
      ESLoginSetup@1240520004 : Record 14123540;
      ESDynamicFilter@1240520006 : Record 14123818;
      ESFLADSCompanyMgt@1240520003 : Codeunit 14123804;
      Text020@1014 : TextConst 'ENU=Source Code Analysis has already been calculated for Logins and Permissions. Use this data?';
      Text021@1015 : TextConst 'ENU="Source Code Analysis data for %1 of %2 needed objects copied "';
      Text022@1016 : TextConst 'ENU=(a small percentage of objects does not have a source table).';
      Text025@1019 : TextConst 'ENU=%1 must be used.';
      Text026@1020 : TextConst 'ENU=%1 is not an object text-file.';
      Text027@1021 : TextConst 'ENU=Additional objects for Field Level and Data Security has not been imported.';
      Text011@1240520005 : TextConst 'ENU=When %1 is changed, must all code changes be deleted and implemented.';
      Text001@1001 : TextConst 'ENU=%1 %2 was created.';
      Text002@1002 : TextConst 'ENU=Source Code Analysis (All),Source Code Analysis (Licensed),';
      Text003@1003 : TextConst 'ENU=Needed for Implement Changes (All),Needed for Implement Changes (Licensed)';
      Text013@1011 : TextConst 'ENU=Set DBM Table No.';
      Text014@1240520007 : TextConst 'ENU=%1 already exists.';
      Text015@1017 : TextConst 'ENU=Change Log Activated';
      Text016@1018 : TextConst 'ENU=Enable %1?';
      Text101@1022 : TextConst 'ENU=Downloading File.';
      Text102@1000 : TextConst 'ENU=Uploading file.';

    PROCEDURE InitializeSetup@1240520007();
    VAR
      Object@1240520001 : Record 2000000001;
    BEGIN
      INIT;

      Object.RESET;
      Object.SETRANGE(Type,Object.Type::"2");
      "Modify Forms" := Object.FIND('-');

      Object.RESET;
      Object.SETRANGE(Type,Object.Type::Page);
      "Modify Pages" := Object.FIND('-');
    END;

    PROCEDURE InitialSourceCodeAnalysis@1240520004(ShowStatus@1240520001 : Boolean);
    VAR
      ESDynamicFilter@1240520002 : Record 14123818;
      RunSourceCodeAnalysis@1240520003 : Boolean;
    BEGIN
      TESTFIELD("Install Allowed");

      CreateProfile(TRUE);

      RunSourceCodeAnalysis := NOT TestRolesAndLoginRelExists(ShowStatus);

      IF RunSourceCodeAnalysis THEN BEGIN
        ExportNeededObjects(FALSE,ShowStatus,FALSE,TRUE);

        ImportSourceCode(FALSE,ShowStatus);
      END;

      IF NOT ESDynamicFilter.FIND('-') THEN
        ESDynamicFilter.InsertStandardFilters(FALSE);
    END;

    PROCEDURE ImportSourceCode@1240520018(AskToCopy@1240520001 : Boolean;ShowStatus@1240520009 : Boolean);
    VAR
      ESReadSourceCode@1240520008 : Codeunit 14123601;
      FileMgt@1002 : Codeunit 419;
      InputFile@1001 : File;
      Window@1000 : Dialog;
      TempFileName@1003 : Text[1000];
      UsingTempFile@1004 : Boolean;
      RunSourceCodeAnalysis@1240520002 : Boolean;
    BEGIN
      TESTFIELD("Install Allowed");

      IF AskToCopy THEN
        RunSourceCodeAnalysis := NOT TestRolesAndLoginRelExists(ShowStatus)
      ELSE
        RunSourceCodeAnalysis := TRUE;

      IF RunSourceCodeAnalysis THEN BEGIN
        TESTFIELD("Source Code File Name");

        InputFile.WRITEMODE(FALSE);
        InputFile.TEXTMODE(TRUE);
        IF NOT InputFile.OPEN("Source Code File Name") THEN BEGIN
          IF GUIALLOWED THEN
            Window.OPEN(Text102);

          TempFileName := FileMgt.UploadFileSilent("Source Code File Name");
          UsingTempFile := TRUE;

          IF GUIALLOWED THEN
            Window.CLOSE;

          IF NOT InputFile.OPEN(TempFileName) THEN
            InputFile.OPEN("Source Code File Name")
          ELSE
            InputFile.CLOSE;
        END ELSE BEGIN
          InputFile.CLOSE;
          TempFileName := "Source Code File Name";
        END;

        ESReadSourceCode.UpdateFromSourceCode(TempFileName,FALSE,4,FALSE,FALSE,ShowStatus);

        IF UsingTempFile THEN
          ERASE(TempFileName);
      END;
    END;

    PROCEDURE TestRolesAndLoginRelExists@1240520006(ShowStatus@1240520002 : Boolean) : Boolean;
    VAR
      ESRelation@1240520001 : Record 14123601;
    BEGIN
      ESRelation.RESET;
      ESRelation.SETFILTER(
        "Object Type",'%1|%2',ESRelation."Object Type"::"2",ESRelation."Object Type"::Page);
      ESRelation.SETRANGE(Type,ESRelation.Type::"Source Table");
      IF ESRelation.FIND('-') THEN
        IF CONFIRM(Text020,TRUE) THEN BEGIN
          CopyRoleAndLoginRelations(ShowStatus);
          EXIT(TRUE);
        END;

      EXIT(FALSE);
    END;

    PROCEDURE CopyRoleAndLoginRelations@1240520005(ShowStatus@1240520001 : Boolean);
    VAR
      ESRelation@1240520008 : Record 14123601;
      ESFLADSRelation@1240520007 : Record 14123810;
      Object@1240520006 : Record 2000000001;
      ExistingForms@1240520004 : Integer;
      ExistingPages@1240520003 : Integer;
      ObjectsNeeded@1240520002 : Integer;
    BEGIN
      ESRelation.RESET;
      ESRelation.SETFILTER(
        "Object Type",'%1|%2',ESRelation."Object Type"::"2",ESRelation."Object Type"::Page);
      ESRelation.SETRANGE(Type,ESRelation.Type::"Source Table");
      ESRelation.FIND('-');
      REPEAT
        CASE ESRelation."Object Type" OF
          ESRelation."Object Type"::"2":
            ExistingForms := ExistingForms + 1;
          ESRelation."Object Type"::Page:
            ExistingPages := ExistingPages + 1;
        END;
        ESFLADSRelation.RESET;
        ESFLADSRelation.SETRANGE("Object Type",ESRelation."Object Type");
        ESFLADSRelation.SETRANGE("Object ID",ESRelation."Object ID");
        ESFLADSRelation.DELETEALL;

        ESFLADSRelation.TRANSFERFIELDS(ESRelation);
        ESFLADSRelation."Object Type" := ESRelation."Object Type";
        ESFLADSRelation."Object ID" := ESRelation."Object ID";
        ESFLADSRelation."Entry No." := 1;
        IF ESFLADSRelation."Relation Object ID" <> 0 THEN
          ESFLADSRelation."Relation Object Type" :=
            ESFLADSRelation."Relation Object Type"::Table;
        ESFLADSRelation.INSERT;
      UNTIL ESRelation.NEXT = 0;

      Object.RESET;
      Object.SETFILTER(Type,'%1|%2',Object.Type::"2",Object.Type::Page);
      ObjectsNeeded := Object.COUNT;

      IF ShowStatus THEN
        MESSAGE(Text021 + Text022,ExistingForms + ExistingPages,ObjectsNeeded);
    END;

    PROCEDURE ImplementChangesInCode@1240520008(CreateOutObject@1240520010 : Boolean;ShowStatus@1240520009 : Boolean);
    VAR
      Object@1240520011 : Record 2000000001;
      ESUpdateSourceCode@1240520008 : Codeunit 14123803;
      FileMgt@1000 : Codeunit 419;
      InputFile@1004 : File;
      Window@1005 : Dialog;
      DateText@1240520001 : Text[30];
      TimeText@1240520002 : Text[30];
      VersionListText@1240520003 : Text[30];
      TempFileName@1001 : Text[1000];
      TempOutFileName@1002 : Text[1000];
      DownloadFile@1003 : Boolean;
    BEGIN
      TESTFIELD("Source Code File Name");
      TESTFIELD("Output File Name");
      TESTFIELD("Caption Language");
      TESTFIELD("Install Allowed");

      TestESACCObjectImported;

      InputFile.WRITEMODE(FALSE);
      InputFile.TEXTMODE(TRUE);
      IF NOT InputFile.OPEN("Source Code File Name") THEN BEGIN
        IF GUIALLOWED THEN
          Window.OPEN(Text102);

        TempFileName := FileMgt.UploadFileSilent("Source Code File Name");
        TempOutFileName := TempFileName + 'out';
        DownloadFile := TRUE;

        IF GUIALLOWED THEN
          Window.CLOSE;

        IF NOT InputFile.OPEN(TempFileName) THEN
          InputFile.OPEN("Source Code File Name")
        ELSE
          InputFile.CLOSE;
      END ELSE BEGIN
        InputFile.CLOSE;
        TempFileName := "Source Code File Name";
        TempOutFileName := "Output File Name";
      END;

      FindObjectPropertyTexts(TempFileName,DateText,TimeText,VersionListText);

      ESUpdateSourceCode.UpdateFromSourceCode(
        TempFileName,TempOutFileName,FALSE,CreateOutObject,0,
        TODAY,TIME,"Caption Language","Enable for Conflicting Code",
        DateText,TimeText,VersionListText,ShowStatus);
      COMMIT;

      IF DownloadFile THEN BEGIN
        IF GUIALLOWED THEN
          Window.OPEN(Text101);

        FileMgt.DownloadToFile(TempOutFileName,"Output File Name");
        ERASE(TempFileName);
        ERASE(TempOutFileName);

        IF GUIALLOWED THEN
          Window.CLOSE;
      END;

      IF NOT ISSERVICETIER THEN
        ImportChangedObjects(ShowStatus);
    END;

    PROCEDURE DeleteChangesInCode@1240520010(ShowStatus@1240520009 : Boolean);
    VAR
      ESUpdateSourceCode@1240520008 : Codeunit 14123803;
      FileMgt@1002 : Codeunit 419;
      InputFile@1001 : File;
      Window@1000 : Dialog;
      DateText@1240520003 : Text[30];
      TimeText@1240520002 : Text[30];
      VersionListText@1240520001 : Text[30];
      TempFileName@1005 : Text[1000];
      TempOutFileName@1004 : Text[1000];
      DownloadFile@1003 : Boolean;
    BEGIN
      TESTFIELD("Source Code File Name");
      TESTFIELD("Output File Name");
      TESTFIELD("Caption Language");
      TESTFIELD("Install Allowed");

      TestESACCObjectImported;

      InputFile.WRITEMODE(FALSE);
      InputFile.TEXTMODE(TRUE);
      IF NOT InputFile.OPEN("Source Code File Name") THEN BEGIN
        IF GUIALLOWED THEN
          Window.OPEN(Text102);
        TempFileName := FileMgt.UploadFileSilent("Source Code File Name");
        IF GUIALLOWED THEN
          Window.CLOSE;
        TempOutFileName := TempFileName + 'out';
        DownloadFile := TRUE;

        IF NOT InputFile.OPEN(TempFileName) THEN
          InputFile.OPEN("Source Code File Name")
        ELSE
          InputFile.CLOSE;
      END ELSE BEGIN
        InputFile.CLOSE;
        TempFileName := "Source Code File Name";
        TempOutFileName := "Output File Name";
      END;

      FindObjectPropertyTexts(TempFileName,DateText,TimeText,VersionListText);

      ESUpdateSourceCode.UpdateFromSourceCode(
        TempFileName,TempOutFileName,FALSE,TRUE,1,
        TODAY,TIME,"Caption Language","Enable for Conflicting Code",
        DateText,TimeText,VersionListText,ShowStatus);
      COMMIT;

      IF DownloadFile THEN BEGIN
        IF GUIALLOWED THEN
          Window.OPEN(Text101);

        FileMgt.DownloadToFile(TempOutFileName,"Output File Name");

        ERASE(TempFileName);
        ERASE(TempOutFileName);

        IF GUIALLOWED THEN
          Window.CLOSE;
      END;

      IF NOT ISSERVICETIER THEN
        ImportChangedObjects(ShowStatus);
    END;

    PROCEDURE ImportChangedObjects@1240520012(ShowStatus@1240520010 : Boolean) : Integer;
    VAR
      Object@1240520008 : Record 2000000001;
      ObjectTmp@1240520009 : TEMPORARY Record 2000000001;
      Window@1240520011 : Dialog;
    BEGIN
      TESTFIELD("Output File Name");
      TESTFIELD("Install Allowed");

      IF ShowStatus THEN
        IF NOT CONFIRM(Text004,FALSE) THEN
          EXIT(0);

      IF GUIALLOWED THEN BEGIN
        Window.OPEN(Text005 + '#1###########################');
        Window.UPDATE(1,"Output File Name");
      END;

      Object.RESET;
      Object.SETFILTER(Type,'1..9');
      Object.SETRANGE(Compiled,FALSE);
      IF Object.FIND('-') THEN
        REPEAT
          ObjectTmp := Object;
          ObjectTmp.INSERT;
        UNTIL ObjectTmp.NEXT = 0;

      IMPORTOBJECTS("Output File Name");

      SELECTLATESTVERSION;

      IF Object.GET(Object.Type::Codeunit,'',CODEUNIT::"ES FLADS Lookup Data") THEN BEGIN
        "Lookup Data Date" := Object.Date;
        "Lookup Data Time" := Object.Time;
        MODIFY;
      END;

      Object.RESET;
      Object.SETFILTER(Type,'1..9');
      Object.SETRANGE(Compiled,FALSE);
      IF Object.FIND('-') THEN
        REPEAT
          IF ObjectTmp.GET(Object.Type,Object."Company Name",Object.ID) THEN BEGIN
            IF (Object.Date = ObjectTmp.Date) AND (Object.Time = ObjectTmp.Time) THEN
              ObjectTmp.DELETE;
          END ELSE BEGIN
            ObjectTmp := Object;
            ObjectTmp.INSERT;
          END;
        UNTIL Object.NEXT = 0;

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text006,ObjectTmp.COUNT);

      EXIT(ObjectTmp.COUNT);
    END;

    PROCEDURE ExportNeededObjects@1240520009(OnlyObjectsForInstall@1240520014 : Boolean;ShowStatus@1240520013 : Boolean;SetDBMTableNo@1240520015 : Boolean;OnlyLicensedObjects@1240520001 : Boolean);
    VAR
      ESObjectExplorer@1240520002 : Record 14123901;
    BEGIN
      TESTFIELD("Install Allowed");
      IF NOT SetDBMTableNo THEN
        TESTFIELD("Source Code File Name");

      ESObjectExplorer.ExportNeededObjects(
        "Source Code File Name",TRUE,FALSE,FALSE,OnlyObjectsForInstall,
        "Modify Forms","Modify Pages",ShowStatus,SetDBMTableNo,OnlyLicensedObjects,0);
    END;

    PROCEDURE SetDBMTableNo@1240520023(ShowStatus@1240520002 : Boolean);
    VAR
      Selection@1240520001 : Integer;
    BEGIN
      Selection := STRMENU(Text002 + Text003,1,Text013);

      CASE Selection OF
        1:
          ExportNeededObjects(FALSE,ShowStatus,TRUE,FALSE);
        2:
          ExportNeededObjects(FALSE,ShowStatus,TRUE,TRUE);
        3:
          ExportNeededObjects(TRUE,ShowStatus,TRUE,FALSE);
        4:
          ExportNeededObjects(TRUE,ShowStatus,TRUE,TRUE);
        ELSE
          EXIT;
      END;
    END;

    PROCEDURE FindObjectPropertyTexts@1240520019(FileName@1000 : Text[1000];VAR DateText@1240520003 : Text[30];VAR TimeText@1240520002 : Text[30];VAR VersionListText@1240520001 : Text[30]);
    VAR
      SourceCodeFile@1240520004 : File;
      TempText@1240520005 : Text[1024];
      LastText@1240520006 : Text[30];
      pos@1240520007 : Integer;
    BEGIN
      TESTFIELD("Source Code File Name");

      SourceCodeFile.WRITEMODE(FALSE);
      SourceCodeFile.TEXTMODE(TRUE);
      SourceCodeFile.OPEN(FileName);

      SourceCodeFile.READ(TempText);
      IF COPYSTR(TempText,1,7) <> 'OBJECT ' THEN
        ERROR(Text026,"Source Code File Name");
      SourceCodeFile.READ(TempText);
      IF TempText <> '{' THEN
        ERROR(Text026,"Source Code File Name");
      SourceCodeFile.READ(TempText);
      IF TempText <> '  OBJECT-PROPERTIES' THEN
        ERROR(Text026,"Source Code File Name");
      SourceCodeFile.READ(TempText);
      IF TempText <> '  {' THEN
        ERROR(Text026,"Source Code File Name");

      SourceCodeFile.READ(TempText);
      pos := STRPOS(TempText,'=');
      IF pos < 6 THEN
        ERROR(Text026,"Source Code File Name");
      DateText := COPYSTR(TempText,5,pos - 5);
      SourceCodeFile.READ(TempText);
      pos := STRPOS(TempText,'=');
      IF pos < 6 THEN
        ERROR(Text026,"Source Code File Name");
      TimeText := COPYSTR(TempText,5,pos - 5);

      SourceCodeFile.READ(TempText);
      pos := STRPOS(TempText,'=');
      IF pos < 6 THEN
        ERROR(Text026,"Source Code File Name");
      LastText := COPYSTR(TempText,5,pos - 5);

      SourceCodeFile.READ(TempText);
      IF TempText <> '  }' THEN BEGIN
        pos := STRPOS(TempText,'=');
        IF pos < 6 THEN
          ERROR(Text026,"Source Code File Name");
        VersionListText := COPYSTR(TempText,5,pos - 5);

        SourceCodeFile.READ(TempText);
        IF TempText <> '  }' THEN
          ERROR(Text026,"Source Code File Name");
      END ELSE
        VersionListText := LastText;

      SourceCodeFile.CLOSE;
    END;

    PROCEDURE ResetDBMTableNo@1240520022(AllObjects@1240520012 : Boolean;ShowStatus@1240520011 : Boolean);
    VAR
      ESObjectExplorer@1240520008 : Record 14123901;
    BEGIN
      ESObjectExplorer.ResetDBMTableNo(AllObjects,ShowStatus);
    END;

    PROCEDURE ExportObjectsAndImplementCode@1240520021();
    BEGIN
      TESTFIELD("Source Code File Name");
      TESTFIELD("Output File Name");
      TESTFIELD("Install Allowed");

      TestESACCObjectImported;

      ExportNeededObjects(TRUE,TRUE,FALSE,TRUE);

      ImplementChangesInCode(TRUE,TRUE);
    END;

    PROCEDURE ExportObjectsAndDeleteCode@1240520020();
    BEGIN
      TESTFIELD("Source Code File Name");
      TESTFIELD("Output File Name");
      TESTFIELD("Install Allowed");

      TestESACCObjectImported;

      IF CONFIRM(Text012,TRUE) THEN
        ExportNeededObjects(FALSE,TRUE,FALSE,TRUE)
      ELSE
        ExportNeededObjects(TRUE,TRUE,FALSE,TRUE);

      DeleteChangesInCode(TRUE);
    END;

    PROCEDURE UpdateLookupData@1240520013(ForceUpdate@1240520008 : Boolean;ShowStatus@1240520009 : Boolean);
    VAR
      Object@1240520012 : Record 2000000001;
      ESSourceTableSetup@1240520001 : Record 14123802;
      ESFLADSRelation@1240520002 : Record 14123810;
      ESFLADSControl@1240520003 : Record 14123814;
      Window@1240520014 : Dialog;
    BEGIN
      IF NOT GET('') THEN BEGIN
        INIT;
        INSERT;
      END;

      IF "Install Allowed" THEN
        EXIT;

      IF NOT Object.GET(Object.Type::Codeunit,'',CODEUNIT::"ES FLADS Lookup Data") THEN
        EXIT;

      IF NOT ForceUpdate AND
         (Object.Date = "Lookup Data Date") AND (Object.Time = "Lookup Data Time")
      THEN
          EXIT;

      IF NOT WRITEPERMISSION OR NOT ESSourceTableSetup.WRITEPERMISSION OR
         NOT ESFLADSRelation.WRITEPERMISSION OR NOT ESFLADSControl.WRITEPERMISSION
      THEN BEGIN
        MESSAGE(Text018);
        EXIT;
      END;

      IF GUIALLOWED THEN
        Window.OPEN(Text007);

      CODEUNIT.RUN(CODEUNIT::"ES FLADS Lookup Data");

      "Lookup Data Date" := Object.Date;
      "Lookup Data Time" := Object.Time;
      MODIFY;

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text008);
    END;

    PROCEDURE ActivateChangeLog@1240520032(ShowStatus@1240520002 : Boolean);
    VAR
      ChangeLogSetup@1240520001 : Record 402;
    BEGIN
      IF ChangeLogSetup.GET THEN BEGIN
        IF NOT ChangeLogSetup."Change Log Activated" THEN BEGIN
          ChangeLogSetup.VALIDATE("Change Log Activated",TRUE);
          ChangeLogSetup.MODIFY(TRUE);
        END;
      END ELSE BEGIN
        ChangeLogSetup.INIT;
        ChangeLogSetup.VALIDATE("Change Log Activated",TRUE);
        ChangeLogSetup.INSERT(TRUE);
      END;

      CreateChangeLogTable(14123522);
      CreateChangeLogTable(14123540);
      CreateChangeLogTable(14123801);
      CreateChangeLogTable(14123802);
      CreateChangeLogTable(14123803);
      CreateChangeLogTable(14123804);
      CreateChangeLogTable(14123805);
      CreateChangeLogTable(14123806);
      CreateChangeLogTable(14123807);
      CreateChangeLogTable(14123808);
      CreateChangeLogTable(14123809);
      CreateChangeLogTable(14123816);
      CreateChangeLogTable(14123817);
      CreateChangeLogTable(14123818);
      CreateChangeLogTable(14123819);

      IF ShowStatus THEN
        MESSAGE(Text015);
    END;

    LOCAL PROCEDURE CreateChangeLogTable@1240520033(TableNo@1240520001 : Integer) : Boolean;
    VAR
      ChangeLogSetupTable@1240520002 : Record 403;
      AllObjWithCaption@1240520003 : Record 2000000058;
    BEGIN
      IF ChangeLogSetupTable.GET(TableNo) THEN
        EXIT(FALSE);

      IF NOT AllObjWithCaption.GET(AllObjWithCaption."Object Type"::Table,TableNo) THEN
        EXIT(FALSE);

      ChangeLogSetupTable.INIT;
      ChangeLogSetupTable.VALIDATE("Table No.",TableNo);
      ChangeLogSetupTable.VALIDATE("Log Insertion",ChangeLogSetupTable."Log Insertion"::"All Fields");
      ChangeLogSetupTable.VALIDATE("Log Modification",ChangeLogSetupTable."Log Modification"::"All Fields");
      ChangeLogSetupTable.VALIDATE("Log Deletion",ChangeLogSetupTable."Log Deletion"::"All Fields");
      ChangeLogSetupTable.INSERT(TRUE);

      EXIT(TRUE);
    END;

    PROCEDURE AddFLADSPermToRole@1240520011();
    VAR
      UserRole@1240520001 : Record 2000000004;
      Permission@1240520002 : Record 2000000005;
      Permission2@1240520005 : Record 2000000005;
      Codeunit0ExecuteFound@1240520004 : Boolean;
      InsertedRecords@1240520003 : Integer;
    BEGIN
      IF PAGE.RUNMODAL(PAGE::"Permission Sets",UserRole) <> ACTION::LookupOK THEN
        EXIT;

      UserRole.TESTFIELD("Role ID");

      Permission.INIT;
      Permission."Role ID" := UserRole."Role ID";
      Permission."Object Type" := Permission."Object Type"::"Table Data";
      Permission."Read Permission" := Permission."Read Permission"::Yes;
      Permission."Insert Permission" := Permission."Insert Permission"::" ";
      Permission."Modify Permission" := Permission."Modify Permission"::" ";
      Permission."Delete Permission" := Permission."Delete Permission"::" ";
      Permission."Execute Permission" := Permission."Execute Permission"::" ";

      Permission."Object ID" := 14123801;
      IF Permission.INSERT THEN
        InsertedRecords := InsertedRecords + 1;
      Permission."Object ID" := 14123802;
      IF Permission.INSERT THEN
        InsertedRecords := InsertedRecords + 1;
      Permission."Object ID" := 14123803;
      IF Permission.INSERT THEN
        InsertedRecords := InsertedRecords + 1;
      Permission."Object ID" := 14123804;
      IF Permission.INSERT THEN
        InsertedRecords := InsertedRecords + 1;
      Permission."Object ID" := 14123805;
      IF Permission.INSERT THEN
        InsertedRecords := InsertedRecords + 1;
      Permission."Object ID" := 14123806;
      IF Permission.INSERT THEN
        InsertedRecords := InsertedRecords + 1;
      Permission."Object ID" := 14123807;
      IF Permission.INSERT THEN
        InsertedRecords := InsertedRecords + 1;
      Permission."Object ID" := 14123808;
      IF Permission.INSERT THEN
        InsertedRecords := InsertedRecords + 1;
      Permission."Object ID" := 14123809;
      IF Permission.INSERT THEN
        InsertedRecords := InsertedRecords + 1;
      Permission."Object ID" := 14123811;
      IF Permission.INSERT THEN
        InsertedRecords := InsertedRecords + 1;
      Permission."Object ID" := 14123812;
      IF Permission.INSERT THEN
        InsertedRecords := InsertedRecords + 1;
      Permission."Object ID" := 14123813;
      IF Permission.INSERT THEN
        InsertedRecords := InsertedRecords + 1;
      Permission."Object ID" := 14123817;
      IF Permission.INSERT THEN
        InsertedRecords := InsertedRecords + 1;
      Permission."Object ID" := 14123818;
      IF Permission.INSERT THEN
        InsertedRecords := InsertedRecords + 1;

      IF Permission2.GET(UserRole."Role ID",Permission2."Object Type"::Codeunit,0) THEN
        IF Permission2."Execute Permission" = Permission2."Execute Permission"::Yes THEN
          Codeunit0ExecuteFound := TRUE;

      IF NOT Codeunit0ExecuteFound THEN BEGIN
        Permission."Object Type" := Permission."Object Type"::Codeunit;
        Permission."Read Permission" := Permission."Read Permission"::" ";
        Permission."Insert Permission" := Permission."Insert Permission"::" ";
        Permission."Modify Permission" := Permission."Modify Permission"::" ";
        Permission."Delete Permission" := Permission."Delete Permission"::" ";
        Permission."Execute Permission" := Permission."Execute Permission"::Yes;

        Permission."Object ID" := 14123801;
        IF Permission.INSERT THEN
          InsertedRecords := InsertedRecords + 1;
        Permission."Object ID" := 14123805;
        IF Permission.INSERT THEN
          InsertedRecords := InsertedRecords + 1;
        Permission."Object ID" := 14123806;
        IF Permission.INSERT THEN
          InsertedRecords := InsertedRecords + 1;
        Permission."Object ID" := 14123811;
        IF Permission.INSERT THEN
          InsertedRecords := InsertedRecords + 1;
        Permission."Object ID" := 14123812;
        IF Permission.INSERT THEN
          InsertedRecords := InsertedRecords + 1;
        Permission."Object ID" := 14123814;
        IF Permission.INSERT THEN
          InsertedRecords := InsertedRecords + 1;
      END;

      MESSAGE(Text001,InsertedRecords,Permission.TABLECAPTION);
    END;

    PROCEDURE GetObjectTypeFilter@1240520014(ObjectType@1240520008 : Integer) : Integer;
    VAR
      Object@1240520009 : Record 2000000001;
    BEGIN
      IF "Use Form Setup for Pages" AND (ObjectType = Object.Type::Page) THEN
        EXIT(Object.Type::"2")
      ELSE
        IF "Use Page Setup for Forms" AND (ObjectType = Object.Type::"2") THEN
          EXIT(Object.Type::Page)
        ELSE
          EXIT(ObjectType);
    END;

    PROCEDURE TestNoInstallInOtherCompanies@1240520015();
    VAR
      Company@1240520008 : Record 2000000006;
      ESFLADSSetup@1240520009 : Record 14123801;
    BEGIN
      Company.RESET;
      IF Company.FIND('-') THEN
        REPEAT
          IF Company.Name <> COMPANYNAME THEN BEGIN
            ESFLADSSetup.CHANGECOMPANY(Company.Name);
            IF ESFLADSSetup.GET THEN
              IF ESFLADSSetup."Install Allowed" THEN
                ERROR(
                  Text010,
                  FIELDCAPTION("Install Allowed"),Company.Name);
          END;
        UNTIL Company.NEXT = 0;
    END;

    PROCEDURE TestESACCObjectImported@1240520016();
    VAR
      Object@1240520001 : Record 2000000001;
    BEGIN
      IF NOT Object.GET(Object.Type::Codeunit,'',CODEUNIT::"ES FLADS Get Editable") OR
         NOT Object.GET(Object.Type::Codeunit,'',CODEUNIT::"ES FLADS Set Filters") OR
         NOT Object.GET(Object.Type::Codeunit,'',CODEUNIT::"ES FLADS Lookup Data")
      THEN
        ERROR(Text027);
    END;

    PROCEDURE ExtendProgressText@1240520041(OriginalText@1240520001 : Text[1000]) : Text[1000];
    VAR
      NewText@1240520002 : Text[1000];
    BEGIN
      IF NOT ISSERVICETIER THEN
        EXIT(OriginalText);

      IF STRLEN(OriginalText) = 0 THEN
        EXIT(OriginalText);

      IF STRLEN(OriginalText) > 100 THEN
        EXIT(OriginalText);

      IF COPYSTR(OriginalText,STRLEN(OriginalText),1) = '\' THEN
        EXIT(
          COPYSTR(OriginalText,1,STRLEN(OriginalText) - 1) +
          PADSTR(' ',100 - STRLEN(OriginalText) + 1,' ') + '.\')
      ELSE
        EXIT(OriginalText + PADSTR(' ',100 - STRLEN(OriginalText),' ') + '.');
    END;

    PROCEDURE CopyDataToOtherCompanies@1240520001(ShowDetails@1240520003 : Boolean;ShowStatus@1240520001 : Boolean);
    VAR
      ESFLADSCompanyMgt@1240520002 : Codeunit 14123804;
    BEGIN
      IF NOT "Install Allowed" THEN BEGIN
        TESTFIELD("Copy From Setup Company");
        TESTFIELD("Copy From Company Name");

        ESFLADSCompanyMgt.UpdateCompany("Copy From Company Name",COMPANYNAME,ShowStatus);
      END ELSE
        ESFLADSCompanyMgt.UpdateAllCompanies(ShowDetails,ShowStatus);
    END;

    PROCEDURE UpdateData@1240520031(ShowStatus@1240520004 : Boolean);
    VAR
      ESDynamicFilter@1240520001 : Record 14123818;
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"ES Create Profile");

      ESDynamicFilter.InsertStandardFilters(FALSE);

      IF NOT "Enable for Conflicting Code" THEN
        IF CONFIRM(Text016,TRUE,FIELDCAPTION("Enable for Conflicting Code")) THEN BEGIN
          "Enable for Conflicting Code" := TRUE;
          MODIFY(TRUE);
          COMMIT;
        END;
    END;

    PROCEDURE AboutEasySecurity@1240520002();
    VAR
      Object@1240520008 : Record 2000000001;
      HighestVersion@1240520009 : Text[80];
      NoOfObjects@1240520010 : Integer;
      ModifiedObjects@1240520011 : Integer;
    BEGIN
      Object.RESET;
      Object.SETRANGE("Company Name",'');
      Object.SETFILTER("Version List",'ES1*');
      Object.FIND('-');
      REPEAT
        NoOfObjects := NoOfObjects + 1;
        IF Object.Modified THEN
          ModifiedObjects := ModifiedObjects + 1;

        IF Object."Version List" > HighestVersion THEN
          HighestVersion := Object."Version List";
      UNTIL Object.NEXT = 0;

      MESSAGE(Text009,HighestVersion,NoOfObjects,ModifiedObjects);
    END;

    PROCEDURE TestConsistentUserSecSetup@1240520003();
    VAR
      ESUserSecuritySetup@1240520002 : Record 14123805;
      ESFLADSCompanyMgt@1240520001 : Codeunit 14123804;
    BEGIN
      ESFLADSCompanyMgt.TestConsistentSetup(COMPANYNAME,TRUE);

      MESSAGE(Text019,ESUserSecuritySetup.TABLECAPTION);
    END;

    PROCEDURE CreateProfile@1240520017(ShowStatus@1240520009 : Boolean);
    VAR
      ESCreateProfile@1240520008 : Codeunit 14123504;
    BEGIN
      ESCreateProfile.RUN;
    END;

    BEGIN
    END.
  }
}

