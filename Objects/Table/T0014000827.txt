OBJECT Table 14000827 Bill of Lading Info. Line
{
  OBJECT-PROPERTIES
  {
    Date=02/17/21;
    Time=[ 5:43:54 AM];
    Modified=Yes;
    Version List=SE0.60.19;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               //TM BEG 081315
               IF NOT ToSuspendTestReleased THEN
                 BillOfLading.TESTFIELD(Released,FALSE);
               //TM END 081315

               BillOfLading.GET("Bill of Lading No.");
               BillOfLading.TESTFIELD("Summary Released",FALSE);
             END;

    OnModify=BEGIN
               //TM BEG 081315
               IF NOT ToSuspendTestReleased THEN
                 BillOfLading.TESTFIELD(Released,FALSE);
               //TM END 081315

               BillOfLading.GET("Bill of Lading No.");
               BillOfLading.TESTFIELD("Summary Released",FALSE);
             END;

    OnDelete=BEGIN
               BillOfLading.GET("Bill of Lading No.");


               //TM BEG 081315
               IF NOT ToSuspendTestReleased THEN
                 BillOfLading.TESTFIELD(Released,FALSE);
               //TM END 081315
               BillOfLading.TESTFIELD("Summary Released",FALSE);
             END;

    OnRename=BEGIN
               ERROR(Text001);
             END;

    CaptionML=ENU=Bill of Lading Info. Line;
    LookupPageID=Page14000828;
    DrillDownPageID=Page14000828;
  }
  FIELDS
  {
    { 1   ;   ;Bill of Lading No.  ;Code20        ;CaptionML=ENU=Bill of Lading No. }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 11  ;   ;Description         ;Text250       ;CaptionML=ENU=Description }
    { 21  ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=" ,,Shipment,Package,External Doc. No.,Document,Item,Bill of Lading";
                                                   OptionString=[ ,,Shipment,Package,External Doc. No.,Document,Item,Bill of Lading] }
    { 22  ;   ;No.                 ;Code35        ;OnValidate=BEGIN
                                                                CASE Type OF
                                                                  Type::"External Doc. No.":
                                                                    BEGIN
                                                                      BillOfLadingInfoLine.RESET;
                                                                      BillOfLadingInfoLine.SETRANGE("Bill of Lading No.","Bill of Lading No.");
                                                                      BillOfLadingInfoLine.SETRANGE(Type,Type);
                                                                      BillOfLadingInfoLine.SETRANGE("No.","No.");
                                                                      BillOfLadingInfoLine.SETRANGE("Info. Line Type","Info. Line Type"::"Cust. Order Info.");
                                                                      IF BillOfLadingInfoLine.FIND('-') THEN BEGIN
                                                                        Description := BillOfLadingInfoLine.Description;
                                                                        "Source Type" := BillOfLadingInfoLine."Source Type";
                                                                        "Source Subtype" := BillOfLadingInfoLine."Source Subtype";
                                                                        "Source ID" := BillOfLadingInfoLine."Source ID";
                                                                        "Posted Source ID" := BillOfLadingInfoLine."Posted Source ID";
                                                                        Weight := BillOfLadingInfoLine.Weight;
                                                                        Volume := BillOfLadingInfoLine.Volume;
                                                                        Value := BillOfLadingInfoLine.Value;
                                                                        "External Document No." := BillOfLadingInfoLine."External Document No.";
                                                                        "Packages (Top Level)" := BillOfLadingInfoLine."Packages (Top Level)";
                                                                        "Packages (Lower Level)" := BillOfLadingInfoLine."Packages (Lower Level)";
                                                                        "NMFC #" := BillOfLadingInfoLine."NMFC #";
                                                                        "Handling Unit Type" := "Handling Unit Type"::Pallets;
                                                                        IF "Packages (Lower Level)" > 0 THEN
                                                                          "Package Type" := "Package Type"::Cartons;
                                                                      END;
                                                                    END;
                                                                  Type::Document,
                                                                  Type::"Bill of Lading":
                                                                    BEGIN
                                                                      BillOfLadingInfoLine.RESET;
                                                                      BillOfLadingInfoLine.SETRANGE("Bill of Lading No.","Bill of Lading No.");
                                                                      BillOfLadingInfoLine.SETRANGE(Type,Type);
                                                                      BillOfLadingInfoLine.SETRANGE("No.","No.");
                                                                      BillOfLadingInfoLine.SETRANGE("Info. Line Type","Info. Line Type"::"Cust. Order Info.");
                                                                      IF BillOfLadingInfoLine.FIND('-') THEN BEGIN
                                                                        Description := BillOfLadingInfoLine.Description;
                                                                        "Source Type" := BillOfLadingInfoLine."Source Type";
                                                                        "Source Subtype" := BillOfLadingInfoLine."Source Subtype";
                                                                        "Source ID" := BillOfLadingInfoLine."Source ID";
                                                                        "Posted Source ID" := BillOfLadingInfoLine."Posted Source ID";
                                                                        Weight := BillOfLadingInfoLine.Weight;
                                                                        Volume := BillOfLadingInfoLine.Volume;
                                                                        Value := BillOfLadingInfoLine.Value;
                                                                        "External Document No." := BillOfLadingInfoLine."External Document No.";
                                                                        "Packages (Top Level)" := BillOfLadingInfoLine."Packages (Top Level)";
                                                                        "Packages (Lower Level)" := BillOfLadingInfoLine."Packages (Lower Level)";
                                                                        "NMFC #" := BillOfLadingInfoLine."NMFC #";
                                                                        "Handling Unit Type" := "Handling Unit Type"::Pallets;
                                                                        IF "Packages (Lower Level)" > 0 THEN
                                                                          "Package Type" := "Package Type"::Cartons;
                                                                      END;
                                                                    END;
                                                                  Type::Shipment:
                                                                    BEGIN
                                                                      SalesShipmentHeader.GET("No.");
                                                                      SalesShipmentHeader.TESTFIELD("Bill of Lading No.","Bill of Lading No.");
                                                                      PostedPackage.RESET;
                                                                      PostedPackage.SETCURRENTKEY("Source Type","Source Subtype","Posted Source ID");
                                                                      PostedPackage.SETRANGE("Source Type",DATABASE::"Sales Header");
                                                                      PostedPackage.SETRANGE("Posted Source ID","No.");
                                                                      Weight := 0;
                                                                      Volume := 0;
                                                                      Value := 0;
                                                                      "Packages (Top Level)" := 0;
                                                                      "Packages (Lower Level)" := 0;
                                                                      IF PostedPackage.FIND('-') THEN
                                                                        REPEAT
                                                                          PostedPackage.CALCFIELDS("Exist in Other Package");
                                                                          IF NOT PostedPackage."Exist in Other Package" THEN BEGIN
                                                                            Weight := Weight + PostedPackage."Calculation Weight";
                                                                            Volume := Volume + PostedPackage."Calculation Volume";
                                                                            Value := Value + PostedPackage."Calculation Value";
                                                                            "Packages (Top Level)" := "Packages (Top Level)" + 1;
                                                                          END ELSE
                                                                            "Packages (Lower Level)" := "Packages (Lower Level)" + 1;
                                                                        UNTIL PostedPackage.NEXT = 0;
                                                                      "External Document No." := PostedPackage."External Document No.";
                                                                      "Handling Unit Type" := "Handling Unit Type"::Pallets;
                                                                      IF "Packages (Lower Level)" > 0 THEN
                                                                        "Package Type" := "Package Type"::Cartons;
                                                                    END;
                                                                  Type::Package:
                                                                    BEGIN
                                                                      PostedPackage.GET("No.");
                                                                      PostedPackage.CALCFIELDS("Exist in Other Package");
                                                                      PostedPackage.TESTFIELD("Exist in Other Package",FALSE);
                                                                      IF PostedPackage."Bill of Lading No." <> '' THEN
                                                                        PostedPackage.TESTFIELD("Bill of Lading No.","Bill of Lading No.")
                                                                      ELSE
                                                                        PostedPackage.TESTFIELD("Used on Bill of Lading No.","Bill of Lading No.");
                                                                      "Source Type" := PostedPackage."Source Type";
                                                                      "Source Subtype" := PostedPackage."Source Subtype";
                                                                      "Source ID" := PostedPackage."Source ID";
                                                                      Weight := PostedPackage."Calculation Weight";
                                                                      Volume := PostedPackage."Calculation Volume";
                                                                      Value := PostedPackage."Calculation Value";
                                                                      "External Document No." := PostedPackage."External Document No.";
                                                                      "Packages (Top Level)" := 1;
                                                                      "Packages (Lower Level)" := 0;
                                                                      "Handling Unit Type" := "Handling Unit Type"::Pallets;
                                                                      "LTL Freight Type" := PostedPackage."LTL Freight Type";
                                                                    END;
                                                                  Type::Item:
                                                                    BEGIN
                                                                      Item.GET("No.");
                                                                      Description := Item.Description;
                                                                      "LTL Freight Type" := Item."LTL Freight Type";
                                                                    END;
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              Range@1240030000 : ARRAY [10] OF Text[250];
                                                              i@1240030001 : Integer;
                                                            BEGIN
                                                              FOR i := 1 TO 10 DO
                                                                CLEAR(Range[i]);
                                                              i := 1;
                                                              CASE Type OF
                                                                Type::Package:
                                                                  BEGIN
                                                                    i := 1;
                                                                    BillOfLadingLine.RESET;
                                                                    BillOfLadingLine.SETRANGE("Bill of Lading No.","Bill of Lading No.");
                                                                    IF BillOfLadingLine.FIND('-') THEN
                                                                      REPEAT
                                                                        IF BillOfLadingLine.Type = BillOfLadingLine.Type::"Sales Shipment (Posted)" THEN BEGIN
                                                                          SalesShipmentHeader.GET(BillOfLadingLine."Posted Source ID");
                                                                          PostedPackage.RESET;
                                                                          PostedPackage.SETCURRENTKEY("Source Type","Source Subtype","Posted Source ID");
                                                                          PostedPackage.SETRANGE("Source Type",DATABASE::"Sales Header");
                                                                          PostedPackage.SETRANGE("Posted Source ID",BillOfLadingLine."Posted Source ID");
                                                                          IF PostedPackage.FIND('-') THEN
                                                                            REPEAT
                                                                              IF STRLEN(Range[i]) + STRLEN(PostedPackage."No.") > 250 THEN
                                                                                i := i + 1;
                                                                              Range[i] := Range[i] + PostedPackage."No." + '|';
                                                                            UNTIL PostedPackage.NEXT = 0;
                                                                        END ELSE IF BillOfLadingLine.Type = BillOfLadingLine.Type::Package THEN BEGIN
                                                                           IF STRLEN(Range[i]) + STRLEN(BillOfLadingLine."No.") > 250 THEN
                                                                             i := i + 1;
                                                                           Range[i] := Range[i] + BillOfLadingLine."No." + '|';
                                                                        END;
                                                                      UNTIL BillOfLadingLine.NEXT = 0;
                                                                    IF STRLEN(Range[i]) > 0 THEN
                                                                      Range[i] := COPYSTR(Range[i],1,STRLEN(Range[i]) - 1);

                                                                    PostedPackage.RESET;
                                                                    PostedPackage.SETFILTER("No.",Range[1] + Range[2] + Range[3] + Range[4] + Range[5] +
                                                                       Range[6] + Range[7] + Range[8] + Range[9] + Range[10]);
                                                                    IF PAGE.RUNMODAL(14000714,PostedPackage) = ACTION::LookupOK THEN
                                                                      VALIDATE("No.",PostedPackage."No.");
                                                                  END;
                                                                Type::Shipment:
                                                                  BEGIN
                                                                    SalesShipmentHeader.RESET;
                                                                    SalesShipmentHeader.SETCURRENTKEY("Bill of Lading No.");
                                                                    SalesShipmentHeader.SETRANGE("Bill of Lading No.","Bill of Lading No.");
                                                                    IF PAGE.RUNMODAL(142,SalesShipmentHeader) = ACTION::LookupOK THEN
                                                                      VALIDATE("No.",SalesShipmentHeader."No.");
                                                                  END;
                                                                Type::Item:
                                                                  BEGIN
                                                                    PostedPackage.RESET;
                                                                    PostedPackage.SETCURRENTKEY("Bill of Lading No.");
                                                                    PostedPackage.SETRANGE("Bill of Lading No.","Bill of Lading No.");
                                                                    IF PostedPackage.FIND('-') THEN
                                                                      REPEAT
                                                                        PostedPackageLine.RESET;
                                                                        PostedPackageLine.SETRANGE("Package No.",PostedPackage."No.");
                                                                        PostedPackageLine.SETRANGE(Type,PostedPackageLine.Type::Item);
                                                                        IF PostedPackageLine.FIND('-') THEN
                                                                          REPEAT
                                                                            IF STRLEN(Range[i]) + STRLEN(PostedPackageLine."No.") > 250 THEN
                                                                              i := i + 1;
                                                                            Range[i] := Range[i] + PostedPackageLine."No." + '|';
                                                                          UNTIL PostedPackageLine.NEXT = 0;
                                                                      UNTIL PostedPackage.NEXT = 0;

                                                                    PostedPackage.RESET;
                                                                    PostedPackage.SETCURRENTKEY("Bill of Lading No.");
                                                                    PostedPackage.SETRANGE("Used on Bill of Lading No.","Bill of Lading No.");
                                                                    IF PostedPackage.FIND('-') THEN
                                                                      REPEAT
                                                                        PostedPackageLine.RESET;
                                                                        PostedPackageLine.SETRANGE("Package No.",PostedPackage."No.");
                                                                        PostedPackageLine.SETRANGE(Type,PostedPackageLine.Type::Item);
                                                                        IF PostedPackageLine.FIND('-') THEN
                                                                          REPEAT
                                                                            IF STRLEN(Range[i]) + STRLEN(PostedPackageLine."No.") > 250 THEN
                                                                              i := i + 1;
                                                                            Range[i] := Range[i] + PostedPackageLine."No." + '|';
                                                                          UNTIL PostedPackageLine.NEXT = 0;
                                                                      UNTIL PostedPackage.NEXT = 0;
                                                                    IF STRLEN(Range[i]) > 0 THEN
                                                                      Range[i] := COPYSTR(Range[i],1,STRLEN(Range[i]) - 1);

                                                                    Item.RESET;
                                                                    Item.SETFILTER("No.",Range[1] + Range[2] + Range[3] + Range[4] + Range[5] +
                                                                       Range[6] + Range[7] + Range[8] + Range[9] + Range[10]);
                                                                    IF PAGE.RUNMODAL(31,Item) = ACTION::LookupOK THEN
                                                                      VALIDATE("No.",Item."No.");
                                                                  END;
                                                                Type::"Bill of Lading":
                                                                  BEGIN
                                                                    BillOfLading.RESET;
                                                                    BillOfLading.SETRANGE("Used on Bill of Lading No.","Bill of Lading No.");
                                                                    IF "No." <> '' THEN
                                                                      IF BillOfLading.GET("No.") THEN
                                                                        ;
                                                                    IF PAGE.RUNMODAL(0,BillOfLading) = ACTION::LookupOK THEN
                                                                      VALIDATE("No.",BillOfLading."No.");
                                                                  END;
                                                              END;
                                                            END;

                                                   CaptionML=ENU=No. }
    { 23  ;   ;Source Type         ;Integer       ;CaptionML=ENU=Source Type }
    { 24  ;   ;Source Subtype      ;Option        ;CaptionML=ENU=Source Subtype;
                                                   OptionCaptionML=ENU=0,1,2,3,4,5,6,7,8,9,10;
                                                   OptionString=0,1,2,3,4,5,6,7,8,9,10 }
    { 25  ;   ;Source ID           ;Code20        ;CaptionML=ENU=Source ID }
    { 26  ;   ;Posted Source ID    ;Code20        ;CaptionML=ENU=Posted Source ID }
    { 33  ;   ;Weight              ;Decimal       ;CaptionML=ENU=Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 34  ;   ;Volume              ;Decimal       ;CaptionML=ENU=Volume;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 35  ;   ;Value               ;Decimal       ;CaptionML=ENU=Value;
                                                   BlankZero=Yes }
    { 36  ;   ;External Document No.;Code35       ;CaptionML=ENU=External Document No. }
    { 37  ;   ;Packages (Top Level);Integer       ;CaptionML=ENU=Packages (Top Level) }
    { 38  ;   ;Packages (Lower Level);Integer     ;CaptionML=ENU=Packages (Lower Level) }
    { 100 ;   ;Info. Line Type     ;Option        ;CaptionML=ENU=Info. Line Type;
                                                   OptionCaptionML=ENU=Commodity Info.,Cust. Order Info.,Special Info.;
                                                   OptionString=Commodity Info.,Cust. Order Info.,Special Info. }
    { 101 ;   ;NMFC #              ;Code10        ;TableRelation="LTL Freight NMFC Code";
                                                   CaptionML=ENU=NMFC # }
    { 102 ;   ;LTL Freight Type    ;Code10        ;TableRelation="LTL Freight Type";
                                                   CaptionML=ENU=LTL Freight Type }
    { 115 ;   ;Handling Unit Type  ;Option        ;CaptionML=ENU=Handling Unit Type;
                                                   OptionCaptionML=ENU=" ,Pallets,Cartons,Loose";
                                                   OptionString=[ ,Pallets,Cartons,Loose] }
    { 116 ;   ;Package Type        ;Option        ;CaptionML=ENU=Package Type;
                                                   OptionCaptionML=ENU=" ,Pallets,Cartons";
                                                   OptionString=[ ,Pallets,Cartons] }
    { 117 ;   ;Hazardous Material  ;Boolean       ;CaptionML=ENU=Hazardous Material }
    { 118 ;   ;HazMat Code         ;Code20         }
    { 50001;  ;EDI ASN             ;Boolean       ;Description=TPZ2301;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Bill of Lading No.,Line No.             ;SumIndexFields=Weight,Volume,Value;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      SalesShipmentHeader@1240030000 : Record 110;
      BillOfLading@1000000000 : Record 14000822;
      BillOfLadingLine@1240030001 : Record 14000823;
      BillOfLadingInfoLine@1240030002 : Record 14000827;
      PostedPackage@1240030003 : Record 14000704;
      PostedPackageLine@1240030004 : Record 14000705;
      Item@1240030005 : Record 27;
      Text001@1001 : TextConst 'ENU=Cannot be renamed.';
      ToSuspendTestReleased@1000000001 : Boolean;

    PROCEDURE SuspendTestReleased@1000000000(SuspendTest@1000000000 : Boolean);
    BEGIN
      //MDNTM BEG 031209
      ToSuspendTestReleased := SuspendTest;
      //MDNTM END 031209
    END;

    BEGIN
    {
      06-19-2018 TPZ2301 DKUMAR
       Added EDI Order Field.
      05-02-2019 TPZ2572 DCleary
       Added Loose as another option for Handling Unit Type.
    }
    END.
  }
}

