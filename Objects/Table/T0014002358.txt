OBJECT Table 14002358 E.D.I. Receive Document Hdr.
{
  OBJECT-PROPERTIES
  {
    Date=02/25/19;
    Time=12:00:00 PM;
    Version List=SE0.61;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               EDIRecDocFields.RESET;
               EDIRecDocFields.SETRANGE(EDIRecDocFields."Internal Doc. No.","Internal Doc. No.");
               IF EDIRecDocFields.FIND('-') THEN
                 EDIRecDocFields.DELETEALL;

               EDIChangedDoc.RESET;
               EDIChangedDoc.SETRANGE("Internal Doc. No.","Internal Doc. No.");
               EDIChangedDoc.DELETEALL(TRUE);

               EDIOrderStatusHeader.RESET;
               EDIOrderStatusHeader.SETRANGE("Trade Partner Code","Trade Partner No.");
               EDIOrderStatusHeader.SETRANGE("Internal Doc. No.","Internal Doc. No.");
               EDIOrderStatusHeader.DELETEALL(TRUE);

               EDIRecDocHdrInfo.RESET;
               EDIRecDocHdrInfo.SETRANGE("Internal Doc. No.","Internal Doc. No.");
               EDIRecDocHdrInfo.DELETEALL;

               EDIRecDocLineInfo.RESET;
               EDIRecDocLineInfo.SETRANGE("Internal Doc. No.","Internal Doc. No.");
               EDIRecDocLineInfo.DELETEALL;

               EDIAlert.RESET;
               EDIAlert.SETCURRENTKEY("Internal Doc. No.");
               EDIAlert.SETRANGE("Internal Doc. No.","Internal Doc. No.");
               EDIAlert.MODIFYALL("Review Alert",FALSE);
               EDIAlert.DELETEALL;

               EDIDiscount.RESET;
               EDIDiscount.SETRANGE("Internal Doc. No.","Internal Doc. No.");
               EDIDiscount.DELETEALL;

               EDILineDiscount.RESET;
               EDILineDiscount.SETRANGE("Internal Doc. No.","Internal Doc. No.");
               EDILineDiscount.DELETEALL;

               EDIDiscountSummary.RESET;
               EDIDiscountSummary.SETRANGE("Internal Doc. No.","Internal Doc. No.");
               EDIDiscountSummary.DELETEALL;
             END;

    CaptionML=ENU=E.D.I. Receive Document Hdr.;
    LookupPageID=Page14002368;
    DrillDownPageID=Page14002368;
  }
  FIELDS
  {
    { 1   ;   ;Trade Partner No.   ;Code20        ;TableRelation="E.D.I. Trade Partner".No.;
                                                   CaptionML=ENU=Trade Partner No.;
                                                   Editable=No }
    { 2   ;   ;Navision Document   ;Code10        ;TableRelation="E.D.I. Navision Available Doc.".Document;
                                                   CaptionML=ENU=Navision Document;
                                                   Editable=No }
    { 3   ;   ;EDI Document No.    ;Code30        ;CaptionML=ENU=EDI Document No.;
                                                   Editable=No }
    { 4   ;   ;EDI Version         ;Code12        ;CaptionML=ENU=EDI Version;
                                                   Editable=No }
    { 5   ;   ;Internal Doc. No.   ;Code10        ;CaptionML=ENU=Internal Doc. No.;
                                                   Editable=No }
    { 11  ;   ;EDI Doc. Name       ;Text40        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("E.D.I. Navision Available Doc."."Document Description" WHERE (Document=FIELD(EDI Document No.)));
                                                   CaptionML=ENU=EDI Doc. Name;
                                                   Editable=No }
    { 12  ;   ;Customer No.        ;Code20        ;TableRelation=Customer.No.;
                                                   CaptionML=ENU=Customer No.;
                                                   Editable=No }
    { 13  ;   ;Customer Name       ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.Name WHERE (No.=FIELD(Customer No.)));
                                                   CaptionML=ENU=Customer Name;
                                                   Editable=No }
    { 14  ;   ;Sales Order Created ;Boolean       ;CaptionML=ENU=Sales Order Created;
                                                   Editable=No }
    { 15  ;   ;Sales Order Updated ;Boolean       ;CaptionML=ENU=Sales Order Updated;
                                                   Editable=No }
    { 16  ;   ;Document Printed    ;Boolean       ;CaptionML=ENU=Document Printed;
                                                   Editable=No }
    { 17  ;   ;Purchase Order Updated;Boolean     ;CaptionML=ENU=Purchase Order Updated;
                                                   Editable=No }
    { 18  ;   ;Purch. Order Updated Date;Date     ;CaptionML=ENU=Purch. Order Updated Date;
                                                   Editable=No }
    { 19  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor.No.;
                                                   CaptionML=ENU=Vendor No.;
                                                   Editable=No }
    { 20  ;   ;Vendor Name         ;Text40        ;CaptionML=ENU=Vendor Name;
                                                   Editable=No }
    { 21  ;   ;Purch. Order Updated Time;Time     ;CaptionML=ENU=Purch. Order Updated Time;
                                                   Editable=No }
    { 22  ;   ;Company Name        ;Text30        ;TableRelation=Company.Name;
                                                   CaptionML=ENU=Company Name;
                                                   Editable=No }
    { 23  ;   ;Date Received       ;Date          ;CaptionML=ENU=Date Received;
                                                   Editable=No }
    { 24  ;   ;Time Received       ;Time          ;CaptionML=ENU=Time Received;
                                                   Editable=No }
    { 25  ;   ;Sales Order Created Date;Date      ;CaptionML=ENU=Sales Order Created Date;
                                                   Editable=No }
    { 26  ;   ;Sales Order Updated Date;Date      ;CaptionML=ENU=Sales Order Updated Date;
                                                   Editable=No }
    { 27  ;   ;Sales Order Created Time;Time      ;CaptionML=ENU=Sales Order Created Time;
                                                   Editable=No }
    { 28  ;   ;Sales Order Updated Time;Time      ;CaptionML=ENU=Sales Order Updated Time;
                                                   Editable=No }
    { 29  ;   ;Data Error          ;Boolean       ;CaptionML=ENU=Data Error;
                                                   Editable=No }
    { 30  ;   ;EDI Template Code   ;Code10        ;TableRelation="E.D.I. Template";
                                                   CaptionML=ENU=EDI Template Code }
    { 31  ;   ;Functional Identifier;Code2        ;CaptionML=ENU=Functional Identifier;
                                                   Editable=No }
    { 32  ;   ;Transaction Set Identifier;Code3   ;CaptionML=ENU=Transaction Set Identifier;
                                                   Editable=No }
    { 33  ;   ;Group Control No.   ;Text30        ;CaptionML=ENU=Group Control No.;
                                                   Editable=No }
    { 34  ;   ;Transaction Set Control No.;Text30 ;CaptionML=ENU=Transaction Set Control No.;
                                                   Editable=No }
    { 35  ;   ;Interchange Control No.;Text30     ;CaptionML=ENU=Interchange Control No.;
                                                   Editable=No }
    { 36  ;   ;Interface File Name ;Text250       ;CaptionML=ENU=Interface File Name;
                                                   Editable=No }
    { 37  ;   ;Funct. Ack. Sent    ;Boolean       ;CaptionML=ENU=Funct. Ack. Sent;
                                                   Editable=No }
    { 38  ;   ;Funct. Ack. Sent Date;Date         ;CaptionML=ENU=Funct. Ack. Sent Date;
                                                   Editable=No }
    { 39  ;   ;Funct. Ack. Sent Time;Time         ;CaptionML=ENU=Funct. Ack. Sent Time;
                                                   Editable=No }
    { 40  ;   ;Funct. Ack. Required;Boolean       ;CaptionML=ENU=Funct. Ack. Required;
                                                   Editable=Yes }
    { 41  ;   ;Sales Order Status Req.;Boolean    ;CaptionML=ENU=Sales Order Status Req. }
    { 42  ;   ;Sales Order Status Sent Date;Date  ;CaptionML=ENU=Sales Order Status Sent Date;
                                                   Editable=No }
    { 43  ;   ;Sales Order Status Sent Time;Time  ;CaptionML=ENU=Sales Order Status Sent Time;
                                                   Editable=No }
    { 44  ;   ;Order Status Open Entries;Boolean  ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Order Status Header" WHERE (Trade Partner Code=FIELD(Trade Partner No.),
                                                                                                  Internal Doc. No.=FIELD(Internal Doc. No.),
                                                                                                  Exported=CONST(No)));
                                                   CaptionML=ENU=Order Status Open Entries;
                                                   Editable=No }
    { 45  ;   ;Inbound Funct. Ack. Updated;Boolean;CaptionML=ENU=Inbound Funct. Ack. Updated;
                                                   Editable=No }
    { 46  ;   ;Org. Relationships Updated;Boolean ;CaptionML=ENU=Org. Relationships Updated;
                                                   Editable=No }
    { 47  ;   ;Org. Rel. Updated Date;Date        ;CaptionML=ENU=Org. Rel. Updated Date;
                                                   Editable=No }
    { 48  ;   ;Org. Rel. Updated Time;Time        ;CaptionML=ENU=Org. Rel. Updated Time;
                                                   Editable=No }
    { 49  ;   ;Shipment Release    ;Boolean       ;CaptionML=ENU=Shipment Release;
                                                   Editable=No }
    { 50  ;   ;Routing Req. Updated;Boolean       ;CaptionML=ENU=Routing Req. Updated;
                                                   Editable=No }
    { 51  ;   ;Routing Req. Updated Date;Date     ;CaptionML=ENU=Routing Req. Updated Date;
                                                   Editable=No }
    { 52  ;   ;Routing Req. Updated Time;Time     ;CaptionML=ENU=Routing Req. Updated Time;
                                                   Editable=No }
    { 53  ;   ;Sales Cr. Memo Created;Boolean     ;CaptionML=ENU=Sales Cr. Memo Created;
                                                   Editable=No }
    { 54  ;   ;Sales Cr. Memo Created Date;Date   ;CaptionML=ENU=Sales Cr. Memo Created Date;
                                                   Editable=No }
    { 55  ;   ;Sales Cr. Memo Created Time;Time   ;CaptionML=ENU=Sales Cr. Memo Created Time;
                                                   Editable=No }
    { 56  ;   ;Enable Bulk Draw Down;Boolean      ;CaptionML=ENU=Enable Bulk Draw Down;
                                                   Editable=No }
    { 57  ;   ;Blanket Order Created;Boolean      ;CaptionML=ENU=Blanket Order Created;
                                                   Editable=No }
    { 58  ;   ;Blanket Order Created Date;Date    ;CaptionML=ENU=Blanket Order Created Date;
                                                   Editable=No }
    { 59  ;   ;Blanket Order Created Time;Time    ;CaptionML=ENU=Blanket Order Created Time;
                                                   Editable=No }
    { 60  ;   ;Blanket Order Release Created;Boolean;
                                                   CaptionML=ENU=Blanket Order Release Created;
                                                   Editable=No }
    { 61  ;   ;Blanket Order Release Date;Date    ;CaptionML=ENU=Blanket Order Release Date;
                                                   Editable=No }
    { 62  ;   ;Blanket Order Release Time;Time    ;CaptionML=ENU=Blanket Order Release Time;
                                                   Editable=No }
    { 63  ;   ;Bulk Draw Down Error;Boolean       ;CaptionML=ENU=Bulk Draw Down Error }
    { 64  ;   ;Enable Forecast Release;Boolean    ;CaptionML=ENU=Enable Forecast Release;
                                                   Editable=No }
    { 65  ;   ;Forecast Created    ;Boolean       ;CaptionML=ENU=Forecast Processed;
                                                   Editable=No }
    { 66  ;   ;Release Created     ;Boolean       ;CaptionML=ENU=Release Processed;
                                                   Editable=No }
    { 67  ;   ;Forecast Release Created Date;Date ;CaptionML=ENU=Document Processed Date;
                                                   Editable=No }
    { 68  ;   ;Forecast Release Created Time;Time ;CaptionML=ENU=Document Processed Time;
                                                   Editable=No }
    { 69  ;   ;Forecast Release Error;Boolean     ;CaptionML=ENU=Forecast Release Error;
                                                   Editable=No }
    { 70  ;   ;Enable PO Change    ;Boolean       ;CaptionML=ENU=Enable PO Change;
                                                   Editable=No }
    { 72  ;   ;PO Change Purpose Code;Code10      ;CaptionML=ENU=PO Change Purpose Code;
                                                   Editable=No }
    { 73  ;   ;PO Change Updated   ;Boolean       ;CaptionML=ENU=PO Change Updated;
                                                   Editable=No }
    { 74  ;   ;PO Change Updated Date;Date        ;CaptionML=ENU=PO Change Updated Date;
                                                   Editable=No }
    { 75  ;   ;PO Change Updated Time;Time        ;CaptionML=ENU=PO Change Updated Time;
                                                   Editable=No }
    { 77  ;   ;PO Change Error     ;Boolean       ;CaptionML=ENU=PO Change Error;
                                                   Editable=No }
    { 78  ;   ;Sales Doc. Created  ;Boolean       ;CaptionML=ENU=Sales Doc. Created;
                                                   Editable=No }
    { 79  ;   ;Sales Doc. Created Date;Date       ;CaptionML=ENU=Sales Doc. Created Date;
                                                   Editable=No }
    { 80  ;   ;Sales Doc. Created Time;Time       ;CaptionML=ENU=Sales Doc. Created Time;
                                                   Editable=No }
    { 81  ;   ;Open Sales Order    ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE (EDI Internal Doc. No.=FIELD(Internal Doc. No.),
                                                                                           Document Type=FILTER(Order)));
                                                   CaptionML=ENU=Open Sales Order }
    { 82  ;   ;Posted Shipments    ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Shipment Header" WHERE (EDI Internal Doc. No.=FIELD(Internal Doc. No.)));
                                                   CaptionML=ENU=Posted Shipments }
    { 83  ;   ;Invoices To Send    ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Invoice Header" WHERE (EDI Internal Doc. No.=FIELD(Internal Doc. No.),
                                                                                                   EDI Invoice Generated=CONST(No)));
                                                   CaptionML=ENU=Invoices To Send }
    { 84  ;   ;Sales Invoices Sent ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Invoice Header" WHERE (EDI Internal Doc. No.=FIELD(Internal Doc. No.),
                                                                                                   EDI Invoice Generated=CONST(Yes)));
                                                   CaptionML=ENU=Sales Invoices Sent }
    { 85  ;   ;Purchase Order Ack. Created;Boolean;CaptionML=ENU=Purchase Order Ack. Created }
    { 86  ;   ;PO Ack. Created Date;Date          ;CaptionML=ENU=PO. Ack. Created Date }
    { 87  ;   ;PO Ack. Created Time;Time          ;CaptionML=ENU=PO Ack. Created Time }
    { 88  ;   ;PO Ack. Processed   ;Boolean       ;CaptionML=ENU=PO Ack. Processed }
    { 89  ;   ;PO Ack. Status      ;Code10        ;CaptionML=ENU=PO Ack. Status }
    { 90  ;   ;PO Ack. Processed Date;Date        ;CaptionML=ENU=PO Ack. Processed Date }
    { 91  ;   ;PO Ack. Processed Time;Time        ;CaptionML=ENU=PO Ack. Processed Time }
    { 92  ;   ;Archive Version No. ;Integer       ;CaptionML=ENU=Archive Version No. }
    { 93  ;   ;Time Archived       ;Time          ;CaptionML=ENU=Time Archived }
    { 94  ;   ;Date Archived       ;Date          ;CaptionML=ENU=Date Archived }
    { 95  ;   ;Archived By         ;Code50        ;CaptionML=ENU=Archived By }
    { 96  ;   ;PO Change Release Override;Boolean ;CaptionML=ENU=PO Change Release Override }
    { 97  ;   ;Evaluate PO Change  ;Boolean       ;CaptionML=ENU=Evaluate PO Change;
                                                   Editable=No }
    { 98  ;   ;Cancel Released Order Update;Boolean;
                                                   CaptionML=ENU=Cancel Released Order Update }
    { 99  ;   ;ASN Processed       ;Boolean       ;CaptionML=ENU=ASN Processed;
                                                   Editable=No }
    { 100 ;   ;ASN Process Date    ;Date          ;CaptionML=ENU=ASN Process Date;
                                                   Editable=No }
    { 101 ;   ;ASN Process Time    ;Time          ;CaptionML=ENU=ASN Process Time;
                                                   Editable=No }
    { 102 ;   ;Whse. Ship. Order Required;Boolean ;CaptionML=ENU=Whse. Ship. Order Required }
    { 103 ;   ;Whse. Ship. Order Generated;Boolean;CaptionML=ENU=Whse. Ship. Order Generated;
                                                   Editable=No }
    { 104 ;   ;Generated Date      ;Date          ;CaptionML=ENU=Generated Date;
                                                   Editable=No }
    { 105 ;   ;Generated Time      ;Time          ;CaptionML=ENU=Generated Time;
                                                   Editable=No }
    { 106 ;   ;Whse. Ship. Adv. Processed;Boolean ;CaptionML=ENU=Whse. Ship. Adv. Processed;
                                                   Editable=No }
    { 107 ;   ;Processed Date      ;Date          ;CaptionML=ENU=Processed Date;
                                                   Editable=No }
    { 108 ;   ;Processed Time      ;Time          ;CaptionML=ENU=Processed Time;
                                                   Editable=No }
    { 109 ;   ;ASN Transaction Type Code;Code2    ;CaptionML=ENU=ASN Transaction Type Code;
                                                   Editable=No }
    { 110 ;   ;Warehouse Shipment ID;Code30       ;CaptionML=ENU=Warehouse Shipment ID;
                                                   Editable=No }
    { 111 ;   ;General Cross Reference Error;Boolean;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Exist("E.D.I. Receive Document Field" WHERE (Internal Doc. No.=FIELD(Internal Doc. No.),
                                                                                                            General Cross Reference Error=CONST(Yes)));
                                                   CaptionML=ENU=General Cross Reference Error;
                                                   Editable=No }
    { 112 ;   ;Unassigned Cust. Cross Ref.;Integer;FieldClass=FlowField;
                                                   CalcFormula=Count("E.D.I. Cust. Cross Reference" WHERE (Trade Partner No.=FIELD(Trade Partner No.),
                                                                                                           Unassigned=CONST(Yes)));
                                                   CaptionML=ENU=Unassigned Cust. Cross Ref.;
                                                   Editable=No }
    { 113 ;   ;Unassigned Item Cross Ref.;Integer ;FieldClass=FlowField;
                                                   CalcFormula=Count("E.D.I. Trade Partner Item" WHERE (Trade Partner No.=FIELD(Trade Partner No.),
                                                                                                        Unassigned=CONST(Yes)));
                                                   CaptionML=ENU=Unassigned Item Cross Ref.;
                                                   Editable=No }
    { 114 ;   ;Unassigned General Cross Ref.;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("E.D.I. General Cross Reference" WHERE (Trade Partner=FIELD(Trade Partner No.),
                                                                                                             Unassigned=CONST(Yes)));
                                                   CaptionML=ENU=Unassigned General Cross Ref.;
                                                   Editable=No }
    { 115 ;   ;Disable Pre-evaluation;Boolean     ;CaptionML=ENU=Disable Pre-evaluation }
    { 116 ;   ;Unassigned UOM Cross Reference;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("E.D.I. Trade Partner UOM" WHERE (Trade Partner No.=FIELD(Trade Partner No.),
                                                                                                       Unassigned=CONST(Yes)));
                                                   CaptionML=ENU=Unassigned UOM Cross Reference;
                                                   Editable=No }
    { 117 ;   ;Dropship ASN        ;Boolean       ;CaptionML=ENU=Dropship ASN;
                                                   Editable=No }
    { 118 ;   ;HL Sequence Error   ;Boolean       ;CaptionML=ENU=HL Sequence Error }
    { 119 ;   ;ASN Error           ;Boolean       ;CaptionML=ENU=ASN Error;
                                                   Editable=No }
    { 120 ;   ;Warehouse Bill of Lading No.;Code30;CaptionML=ENU=Warehouse Bill of Lading No. }
    { 121 ;   ;Purchase Order Ack. Required;Boolean;
                                                   CaptionML=ENU=Purchase Order Ack. Required }
    { 122 ;   ;Purchase Order Required;Boolean    ;CaptionML=ENU=Purchase Order Required }
    { 123 ;   ;Whse. Purchase Advice Required;Boolean;
                                                   CaptionML=ENU=Whse. Purchase Advice Required }
    { 124 ;   ;Whse. Ship. Advice Required;Boolean;CaptionML=ENU=Whse. Ship. Advice Required }
    { 125 ;   ;Whse. ASN Required (Shipping);Boolean;
                                                   CaptionML=ENU=Whse. ASN Required (Shipping) }
    { 126 ;   ;Customer Cross Ref. Error;Boolean  ;CaptionML=ENU=Customer Cross Ref. Error }
    { 127 ;   ;Item Cross Ref. Error;Boolean      ;CaptionML=ENU=Item Cross Ref. Error }
    { 128 ;   ;UOM Cross Ref. Error;Boolean       ;CaptionML=ENU=UOM Cross Ref. Error }
    { 129 ;   ;Assoc. Archive Internal Doc.;Code10;CaptionML=ENU=Assoc. Archive Internal Doc. }
    { 130 ;   ;NAV BOL No.         ;Code20        ;CaptionML=ENU=NAV BOL No.;
                                                   Editable=No }
    { 131 ;   ;Posted Date         ;Date          ;CaptionML=ENU=Posted Date;
                                                   Editable=No }
    { 132 ;   ;Posted Time         ;Time          ;CaptionML=ENU=Posted Time;
                                                   Editable=No }
    { 134 ;   ;Manual Process      ;Boolean       ;CaptionML=ENU=Manual Process }
    { 135 ;   ;Flat File Header ID ;Code30        ;CaptionML=ENU=Flat File Header ID;
                                                   Editable=No }
    { 136 ;   ;Flat File Trailer ID;Code30        ;CaptionML=ENU=Flat File Trailer ID;
                                                   Editable=No }
    { 137 ;   ;Warehouse Ship Order Created;Boolean;
                                                   CaptionML=ENU=Warehouse Ship Order Created;
                                                   Editable=No }
    { 138 ;   ;Whse. Ship Order Created Date;Date ;CaptionML=ENU=Whse. Ship Order Created Date;
                                                   Editable=No }
    { 139 ;   ;Whse. Ship Order Created Time;Time ;CaptionML=ENU=Whse. Ship Order Created Time;
                                                   Editable=No }
    { 140 ;   ;Inventory Advice Processed;Boolean ;CaptionML=ENU=Inventory Advice Processed;
                                                   Editable=No }
    { 141 ;   ;Inventory Advice Process Date;Date ;CaptionML=ENU=Inventory Advice Process Date;
                                                   Editable=No }
    { 142 ;   ;Inventory Advice Process Time;Time ;CaptionML=ENU=Inventory Advice Process Time;
                                                   Editable=No }
    { 143 ;   ;Sales Return Order Created;Boolean ;CaptionML=ENU=Sales Return Order Created;
                                                   Editable=No }
    { 144 ;   ;Sls. Return Order Created Date;Date;CaptionML=ENU=Sales Return Order Created Date;
                                                   Editable=No }
    { 145 ;   ;Sls. Return Order Created Time;Time;CaptionML=ENU=Sales. Return Order Created Time;
                                                   Editable=No }
    { 146 ;   ;Inventory Advice Posting Date;Date ;CaptionML=ENU=Inventory Advice Posting Date }
    { 147 ;   ;Inventory Advice Document No.;Code20;
                                                   CaptionML=ENU=Inventory Advice Document No. }
    { 148 ;   ;Suggested Journal Created;Boolean  ;CaptionML=ENU=Suggested Journal Created }
    { 149 ;   ;Purchase Order Created;Boolean     ;CaptionML=ENU=Purchase Order Created;
                                                   Editable=No }
    { 150 ;   ;Purch. Order Created Date;Date     ;CaptionML=ENU=Purch. Order Created Date;
                                                   Editable=No }
    { 151 ;   ;Purch. Order Created Time;Time     ;CaptionML=ENU=Purch. Order Created Time;
                                                   Editable=No }
    { 152 ;   ;Purchase Invoice Created;Boolean   ;CaptionML=ENU=Purchase Invoice Created;
                                                   Editable=No }
    { 153 ;   ;Purch. Invoice Created Date;Date   ;CaptionML=ENU=Purch. Invoice Created Date;
                                                   Editable=No }
    { 154 ;   ;Purch. Invoice Created Time;Time   ;CaptionML=ENU=Purch. Invoice Created Time;
                                                   Editable=No }
    { 155 ;   ;Purch. Return Order Created;Boolean;CaptionML=ENU=Purchase Return Order Created;
                                                   Editable=No }
    { 156 ;   ;Purch. Return Ord Created Date;Date;CaptionML=ENU=Purch. Return Order Created Date;
                                                   Editable=No }
    { 157 ;   ;Purch. Return Ord Created Time;Time;CaptionML=ENU=Purch. Return Order Created Time;
                                                   Editable=No }
    { 161 ;   ;Purchase Cr. Memo Created;Boolean  ;CaptionML=ENU=Purchase Cr. Memo Created;
                                                   Editable=No }
    { 162 ;   ;Purch. Cr. Memo Created Date;Date  ;CaptionML=ENU=Purch. Cr. Memo Created Date;
                                                   Editable=No }
    { 163 ;   ;Purch. Cr. Memo Created Time;Time  ;CaptionML=ENU=Purch. Cr. Memo Created Time;
                                                   Editable=No }
    { 164 ;   ;PO Change Generates Change Ack;Boolean;
                                                   CaptionML=ENU=PO Change Generates Change Ack }
    { 165 ;   ;Customer Reference No.;Code35      ;CaptionML=ENU=Customer Reference No.;
                                                   Editable=No }
    { 166 ;   ;Vendor Invoice No.  ;Code35        ;CaptionML=ENU=Vendor Invoice No.;
                                                   Editable=No }
    { 167 ;   ;Vendor Order No.    ;Code35        ;CaptionML=ENU=Vendor Order No.;
                                                   Editable=No }
    { 168 ;   ;Vendor Shipment No. ;Code35        ;CaptionML=ENU=Vendor Shipment No.;
                                                   Editable=No }
    { 169 ;   ;Purch. Doc. Created ;Boolean       ;CaptionML=ENU=Purch. Doc. Created;
                                                   Editable=No }
    { 170 ;   ;Purch. Doc. Created Date;Date      ;CaptionML=ENU=Purch. Doc. Created Date;
                                                   Editable=No }
    { 171 ;   ;Purch. Doc. Created Time;Time      ;CaptionML=ENU=Purch. Doc. Created Time;
                                                   Editable=No }
    { 172 ;   ;Whse. Ship Advice Send Error;Boolean;
                                                   CaptionML=ENU=Whse. Ship Advice Send Error;
                                                   Editable=No }
    { 173 ;   ;Posting Error       ;Boolean       ;CaptionML=ENU=Posting Error;
                                                   Editable=No }
    { 174 ;   ;Posting Error Date  ;Date          ;CaptionML=ENU=Posting Error Date;
                                                   Editable=No }
    { 175 ;   ;Shipment Posting Error;Boolean     ;CaptionML=ENU=Shipment Posting Error;
                                                   Editable=No }
    { 176 ;   ;Document(s) Posted  ;Boolean       ;CaptionML=ENU=Document(s) Posted;
                                                   Editable=No }
    { 177 ;   ;Sales Order Posted  ;Boolean       ;CaptionML=ENU=Sales Order Posted;
                                                   Editable=No }
    { 178 ;   ;Sales Order Posted Date;Date       ;CaptionML=ENU=Sales Order Posted Date;
                                                   Editable=No }
    { 179 ;   ;Sales Order Posted Time;Time       ;CaptionML=ENU=Sales Order Posted Time;
                                                   Editable=No }
    { 180 ;   ;Purchase Order Posted;Boolean      ;CaptionML=ENU=Purchase Order Posted;
                                                   Editable=No }
    { 181 ;   ;Purchase Order Posted Date;Date    ;CaptionML=ENU=Purchase Order Posted Date;
                                                   Editable=No }
    { 182 ;   ;Purchase Order Posted Time;Time    ;CaptionML=ENU=Purchase Order Posted Time;
                                                   Editable=No }
    { 183 ;   ;Transfer Order Created;Boolean     ;CaptionML=ENU=Transfer Order Created;
                                                   Editable=No }
    { 184 ;   ;Transfer Order Created Date;Date   ;CaptionML=ENU=Transfer Order Created Date;
                                                   Editable=No }
    { 185 ;   ;Transfer Order Created Time;Time   ;CaptionML=ENU=Transfer Order Created Time;
                                                   Editable=No }
    { 186 ;   ;Freight Invoice Created;Boolean    ;CaptionML=ENU=Freight Invoice Created;
                                                   Editable=No }
    { 187 ;   ;Freight Invoice Created Date;Date  ;CaptionML=ENU=Freight Invoice Created Date;
                                                   Editable=No }
    { 188 ;   ;Freight Invoice Created Time;Time  ;CaptionML=ENU=Freight Invoice Created Time;
                                                   Editable=No }
    { 189 ;   ;Receipt Posting Error;Boolean      ;CaptionML=ENU=Receipt Posting Error }
    { 190 ;   ;Transfer Order Updated;Boolean     ;CaptionML=ENU=Transfer Order Updated }
    { 191 ;   ;Transfer Order Updated Time;Time   ;CaptionML=ENU=Transfer Order Updated Time }
    { 192 ;   ;Transfer Order Updated Date;Date   ;CaptionML=ENU=Transfer Order Updated Date }
    { 193 ;   ;Error Message Text  ;Text250       ;CaptionML=ENU=Error Message Text;
                                                   Editable=No }
    { 200 ;   ;Transaction Date    ;Date          ;CaptionML=ENU=Transaction Date;
                                                   Editable=No }
    { 201 ;   ;Transaction Time    ;Time          ;CaptionML=ENU=Transaction Time;
                                                   Editable=No }
    { 206 ;   ;Same Day Ship Time  ;Time          ;CaptionML=ENU=Same Day Ship Time }
    { 207 ;   ;Use Same Day Ship Time;Boolean     ;CaptionML=ENU=Use Same Day Ship Time }
    { 208 ;   ;Document Processed  ;Boolean       ;CaptionML=ENU=Document Processed }
    { 209 ;   ;Process Receive Doc. Job Ready;Boolean;
                                                   CaptionML=ENU=Process Receive Doc. Job Ready }
    { 210 ;   ;Order Status Created;Boolean       ;CaptionML=ENU=Order Status Created;
                                                   Editable=No }
    { 211 ;   ;Order Status Created Time;Time     ;CaptionML=ENU=Order Status Created Time;
                                                   Editable=No }
    { 212 ;   ;Order Status Created Date;Date     ;CaptionML=ENU=Order Status Created Date;
                                                   Editable=No }
    { 213 ;   ;Advance P.O. Ack. Created;Boolean  ;CaptionML=ENU=Advance P.O. Acknowledgement Created;
                                                   Editable=No }
    { 214 ;   ;Advance P.O. Ack. Created Time;Time;CaptionML=ENU=Advance P.O. Acknowledgement Created Time;
                                                   Editable=No }
    { 215 ;   ;Advance P.O. Ack. Created Date;Date;CaptionML=ENU=Advance P.O. Acknowledgement Created Date;
                                                   Editable=No }
    { 216 ;   ;Order Change Status Created;Boolean;CaptionML=ENU=Order Change Status Created;
                                                   Editable=No }
    { 217 ;   ;Order Change Stat Created Time;Time;CaptionML=ENU=Order Change Status Created Time;
                                                   Editable=No }
    { 218 ;   ;Order Change Stat Created Date;Date;CaptionML=ENU=Order Change Status Created Date;
                                                   Editable=No }
    { 219 ;   ;Update Sales Order Error;Boolean   ;CaptionML=ENU=Update Sales Order Error;
                                                   Editable=No }
    { 220 ;   ;Create Bill of Lading Error;Boolean;CaptionML=ENU=Create Bill of Lading Error;
                                                   Editable=No }
    { 221 ;   ;Std. XRef Processed On Import;Boolean;
                                                   CaptionML=ENU=Std. Cross Reference Processed On Import }
    { 222 ;   ;Gen. XRef Processed On Import;Boolean;
                                                   CaptionML=ENU=General Cross Reference Processed On Import }
    { 223 ;   ;Sales Invoice Created;Boolean      ;CaptionML=ENU=Sales Invoice Created;
                                                   Editable=No }
    { 224 ;   ;Sales Invoice Created Date;Date    ;CaptionML=ENU=Sales Invoice Created Date;
                                                   Editable=No }
    { 225 ;   ;Sales Invoice Created Time;Time    ;CaptionML=ENU=Sales Invoice Created Time;
                                                   Editable=No }
    { 226 ;   ;Sales Invoice Posted;Boolean       ;CaptionML=ENU=Sales Invoice Posted;
                                                   Editable=No }
    { 227 ;   ;Sales Invoice Posted Date;Date     ;CaptionML=ENU=Sales Invoice Posted Date;
                                                   Editable=No }
    { 228 ;   ;Sales Invoice Posted Time;Time     ;CaptionML=ENU=Sales Invoice Posted Time;
                                                   Editable=No }
    { 229 ;   ;Sales Invoice Posting Error;Boolean;CaptionML=ENU=Sales Invoice Posting Error }
    { 230 ;   ;Subline Item Detail Used;Boolean   ;CaptionML=ENU=Subline Item Detail Used }
    { 231 ;   ;Subline Segment     ;Code15        ;CaptionML=ENU=Subline Segment }
    { 239 ;   ;My GS Trade Partner ID Match;Boolean;
                                                   CaptionML=ENU=My GS Trade Partner ID Match }
    { 240 ;   ;Evaluate EDI Time   ;Boolean       ;CaptionML=ENU=Evaluate EDI Time }
    { 241 ;   ;Payment Remit Advice Created;Boolean;
                                                   CaptionML=ENU=Payment Remit Advice Created }
    { 242 ;   ;Pmt. Remit Advice Created Time;Time;CaptionML=ENU=Payment Remit Advice Created Time;
                                                   Editable=No }
    { 243 ;   ;Pmt. Remit Advice Created Date;Date;CaptionML=ENU=Payment Remit Advice Created Date;
                                                   Editable=No }
    { 244 ;   ;Price Discrepancy Check Req.;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Price Discrepancy Rel. Block" AND
                                                                    xRec."Price Discrepancy Check Req." = TRUE AND
                                                                    "Price Discrepancy Check Req." = FALSE
                                                                THEN
                                                                  "Price Discrepancy CheckRemoved" := TRUE;
                                                              END;

                                                   CaptionML=ENU=Price Discrepancy Check Required;
                                                   Editable=Yes }
    { 245 ;   ;Price Discrepancy CheckRemoved;Boolean;
                                                   CaptionML=ENU=Price Discrepancy Check Enabled }
    { 246 ;   ;Price Discrepancy Rel. Block;Boolean;
                                                   CaptionML=ENU=Price Discrepancy Rel. Block }
    { 247 ;   ;Purchase Quote Created;Boolean     ;CaptionML=ENU=Purchase Quote Created;
                                                   Editable=No }
    { 248 ;   ;Purch. Quote Created Date;Date     ;CaptionML=ENU=Purch. Quote Created Date;
                                                   Editable=No }
    { 249 ;   ;Purch. Quote Created Time;Time     ;CaptionML=ENU=Purch. Quote Created Time;
                                                   Editable=No }
    { 250 ;   ;Sales Quote Created ;Boolean       ;CaptionML=ENU=Sales Quote Created;
                                                   Editable=No }
    { 251 ;   ;Sales Quote Created Date;Date      ;CaptionML=ENU=Sales Quote Created Date;
                                                   Editable=No }
    { 252 ;   ;Sales Quote Created Time;Time      ;CaptionML=ENU=Sales Quote Created Time;
                                                   Editable=No }
    { 253 ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=" ,Order,Invoice,Cr. Memo,Return Order,P.O. Change,Quote,Warehouse Ship Order";
                                                   OptionString=[ ,Order,Invoice,Cr. Memo,Return Order,P.O. Change,Quote,Warehouse Ship Order] }
    { 254 ;   ;Document Previewed  ;Boolean       ;CaptionML=ENU=Document Previewed }
    { 255 ;   ;Special Order       ;Boolean       ;CaptionML=ENU=Special Order }
    { 256 ;   ;Reference ID        ;Text30        ;CaptionML=ENU=Reference ID }
    { 257 ;   ;Reference Type      ;Text20        ;CaptionML=ENU=Reference Type }
    { 300 ;   ;XML Document        ;Boolean       ;CaptionML=ENU=XML Document }
    { 301 ;   ;Bulk Draw Down Code ;Code20        ;CaptionML=ENU=Bulk Draw Down Code }
    { 302 ;   ;Original            ;Boolean       ;CaptionML=ENU=Original }
    { 303 ;   ;cXML Payload ID     ;Text100       ;CaptionML=ENU=cXML Payload ID;
                                                   Editable=No }
    { 304 ;   ;Response ID         ;Text100       ;CaptionML=ENU=Response ID }
    { 305 ;   ;Response DTD URL    ;Text100       ;CaptionML=ENU=Response DTD URL }
    { 50000;  ;Shortcut Dimension 5 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Dimension Value ID=FILTER(3208..3211));
                                                   Description=TPZEDI;
                                                   CaptionClass='1,2,5' }
    { 50001;  ;CSR Code            ;Code20        ;TableRelation=Salesperson/Purchaser.Code }
    { 50002;  ;Notification Sent   ;Boolean        }
    { 50003;  ;Sales Order No.     ;Code20         }
    { 50004;  ;Ship-to Code        ;Code10         }
    { 50005;  ;ISR Code            ;Code20        ;TableRelation=Salesperson/Purchaser.Code;
                                                   DataClassification=ToBeClassified;
                                                   Description=TPZ2499 }
  }
  KEYS
  {
    {    ;Internal Doc. No.                       ;Clustered=Yes }
    {    ;Company Name,Navision Document,EDI Document No.,Trade Partner No.;
                                                   MaintainSQLIndex=No }
    {    ;Trade Partner No.,Navision Document,EDI Document No.,EDI Version }
    {    ;Funct. Ack. Required,Trade Partner No.,Group Control No.,Transaction Set Control No. }
    {    ;Data Error,Trade Partner No.             }
    {    ;Funct. Ack. Required,Funct. Ack. Sent    }
    {    ;Enable PO Change,PO Change Updated,Evaluate PO Change,Trade Partner No.,Navision Document,EDI Document No.,Company Name }
    {    ;Group Control No.                        }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      EDIRecDocFields@1240030000 : Record 14002359;
      EDIOrderStatusHeader@1240030001 : Record 14002400;
      EDIChangedDoc@1240030002 : Record 14002373;
      EDIRecDocHdrInfo@1240030003 : Record 14002371;
      EDIRecDocLineInfo@1240030004 : Record 14002372;
      EDIRecDocHdr@1240030009 : Record 14002358;
      EDIRecDocField@1240020000 : Record 14002359;
      EDISetup@1240030012 : Record 14002367;
      EDIAlert@1240020004 : Record 14000380;
      EDIDiscount@1240020005 : Record 14002382;
      EDILineDiscount@1240020006 : Record 14002383;
      EDIDiscountSummary@1240020007 : Record 14002384;
      EDISalesOrderStatSend@1240020002 : Codeunit 14002400;
      CreateEDIAlert@1240020003 : Codeunit 14000375;
      Created@1240030011 : Integer;
      Updated@1240030010 : Integer;
      Errors@1240030007 : Integer;
      Processed@1240030013 : Integer;
      EDISetupRetrieved@1240030006 : Boolean;
      Text001@1240020001 : TextConst 'ENU=Function not supported with current EDI Document.';
      SLNFound@1240020008 : Boolean;
      SLNSegmentID@1240020009 : Code[15];

    PROCEDURE GetEDISetup@1240030006();
    BEGIN
      IF NOT EDISetupRetrieved THEN BEGIN
        EDISetup.GET;
        EDISetupRetrieved := TRUE;
      END;
    END;

    PROCEDURE ViewTextEDIDocument@1240030001();
    VAR
      ToFolder@1240040002 : Text[250];
      ToFilter@1240040001 : Text[250];
      ToFile@1240040000 : Text[250];
    BEGIN
      ToFolder := 'C:\';
      ToFilter := 'Text file(*.txt)|*.edi';
      ToFile := "Interface File Name";
      DOWNLOAD("Interface File Name",'Open file',ToFolder,ToFilter,ToFile);
    END;

    PROCEDURE CreateTradePtnrItems@1240030007();
    VAR
      EDIRecDocFields@1240030001 : Record 14002359;
      EDIRecDocField@1240020001 : Record 14002359;
      TradePtnrItem@1240030000 : Record 14002364;
      SalesLine@1240020000 : Record 37;
      EDILoadTextFields@1240020006 : Codeunit 14002390;
      PartnerVariantCode@1240020002 : Code[40];
      SDQFound@1240020003 : Boolean;
      MultiLocation@1240020004 : Boolean;
      EDIItemCrossRef@1240020005 : Code[250];
      MultipleSellTo@1240020007 : Boolean;
      EDIItemDesc@1240020008 : Text[60];
      CrossRefFound@1240020009 : Boolean;
      PrevSegmentGroup@1240020010 : Integer;
    BEGIN
      GetSublineSegment(Rec);

      EDIRecDocField.RESET;
      EDIRecDocField.SETCURRENTKEY("Internal Doc. No.","Field Name");
      EDIRecDocField.SETRANGE("Internal Doc. No.","Internal Doc. No.");
      EDIRecDocField.SETFILTER(Segment,'%1','SDQ');
      EDIRecDocField.SETFILTER("Field Name",'%1|%2','SDQ SHIP TO','SDQ SELL TO');
      IF EDIRecDocField.FIND('-') THEN
        SDQFound := TRUE;

      EDIRecDocField.RESET;
      EDIRecDocField.SETCURRENTKEY("Internal Doc. No.","Field Name");
      EDIRecDocField.SETRANGE("Internal Doc. No.","Internal Doc. No.");
      EDIRecDocField.SETFILTER(Segment,'<>%1','SDQ');
      EDIRecDocField.SETRANGE("Field Name",'SDQ SHIP TO');
      IF EDIRecDocField.FIND('-') THEN BEGIN
        SDQFound := TRUE;
        MultiLocation := TRUE;
      END;

      EDIRecDocField.RESET;
      EDIRecDocField.SETCURRENTKEY("Internal Doc. No.","Field Name");
      EDIRecDocField.SETRANGE("Internal Doc. No.","Internal Doc. No.");
      EDIRecDocField.SETRANGE("Field Name",'SDQ SELL TO');
      IF EDIRecDocField.FIND('-') THEN
        MultipleSellTo := TRUE;

      PartnerVariantCode := '';
      EDIItemCrossRef := '';
      EDIItemDesc := '';
      CrossRefFound := FALSE;
      PrevSegmentGroup := 0;

      EDIRecDocFields.RESET;
      EDIRecDocFields.SETRANGE("Internal Doc. No.","Internal Doc. No.");
      IF EDIRecDocFields.FIND('-') THEN
        REPEAT
          IF (EDIRecDocFields."NAV Table No." = DATABASE::"Sales Line") AND
            (EDIRecDocFields."Nav Field No." = SalesLine.FIELDNO("EDI Item Cross Ref."))
          THEN BEGIN
            IF MultipleSellTo OR SDQFound THEN BEGIN
              IF PrevSegmentGroup <> 0 THEN
                IF PrevSegmentGroup <> EDIRecDocFields."Segment Group" THEN BEGIN
                  PartnerVariantCode := '';
                  EDIItemCrossRef := '';
                  EDIItemDesc := '';
                END;
            END;
            EDIItemCrossRef :=
              EDILoadTextFields.LoadTextFields(EDIItemCrossRef,EDIRecDocFields);
            IF EDIRecDocFields."Item Description" THEN
              EDIItemDesc := COPYSTR(EDIRecDocFields."Field Text Value",1,60);

            EDIRecDocField.RESET;
            EDIRecDocField.SETRANGE("Internal Doc. No.","Internal Doc. No.");
            EDIRecDocField.SETRANGE("Segment Group",EDIRecDocFields."Segment Group");
            EDIRecDocField.SETRANGE("NAV Table No.",DATABASE::"Sales Line");
            EDIRecDocField.SETRANGE("Nav Field No.",SalesLine.FIELDNO("Variant Code"));
            IF EDIRecDocField.FIND('-') THEN
              PartnerVariantCode :=
                EDILoadTextFields.LoadTextFields(PartnerVariantCode,EDIRecDocField);
            CrossRefFound := TRUE;
            END;
            IF (EDIRecDocFields.Trigger = TRUE) AND (CrossRefFound = TRUE) THEN BEGIN
              IF ((SDQFound = TRUE) AND
                  (EDIRecDocFields.Segment = 'SDQ') AND
                  (MultiLocation = FALSE) AND
                  (SLNFound = FALSE)) OR
                 ((SDQFound = TRUE) AND
                 (EDIRecDocFields.Segment <> 'SDQ') AND
                  (MultiLocation = TRUE) AND
                  (SLNFound = FALSE)) OR
                 ((SDQFound = TRUE) AND
                  (SLNFound = TRUE) AND
                  (EDIRecDocFields.Segment = SLNSegmentID)) OR
                 ((MultipleSellTo = TRUE) AND (EDIRecDocFields.Segment = 'SDQ')) OR
                 (SDQFound = FALSE)
              THEN BEGIN
                CrossRefFound := FALSE;
                IF NOT TradePtnrItem.GET(
                  "Trade Partner No.",COPYSTR(EDIItemCrossRef,1,40),PartnerVariantCode)
                THEN BEGIN
                  TradePtnrItem.INIT;
                  TradePtnrItem."Trade Partner No." := "Trade Partner No.";
                  TradePtnrItem."Partner Item No." := COPYSTR(EDIItemCrossRef,1,40);
                  TradePtnrItem."Partner Variant Code" := PartnerVariantCode;
                  TradePtnrItem."EDI Item Description" := EDIItemDesc;
                  TradePtnrItem.Unassigned := TRUE;
                  TradePtnrItem.INSERT;
                END;
                IF (MultipleSellTo = FALSE) AND (SDQFound = FALSE) THEN BEGIN
                  PartnerVariantCode := '';
                  EDIItemCrossRef := '';
                  EDIItemDesc := '';
                END;
              END;
            END;
            PrevSegmentGroup := EDIRecDocFields."Segment Group";
        UNTIL EDIRecDocFields.NEXT = 0;

      COMMIT;

      TradePtnrItem.RESET;
      TradePtnrItem.SETCURRENTKEY(Unassigned);
      TradePtnrItem.SETRANGE("Trade Partner No.","Trade Partner No.");
      TradePtnrItem.SETRANGE(Unassigned,TRUE);
      PAGE.RUN(PAGE::"E.D.I. Trade Partner Items",TradePtnrItem);
    END;

    PROCEDURE ProcessReceiveDocument@1240030000(Batch@1240030006 : Boolean) : Boolean;
    VAR
      EDICreateSalesOrder@1240030000 : Codeunit 14002365;
      EDISalesOrderUpdate@1240030001 : Codeunit 14002362;
      EDIFunctAckUpdate@1240030002 : Codeunit 14002364;
      EDIUpdateOrgRelationships@1240030003 : Codeunit 14002401;
      EDIUpdateRouteReq@1240030004 : Codeunit 14002404;
      EDIUpdatePurchaseOrder@1240030005 : Codeunit 14002363;
      ProcessWhseShipNotice@1240030008 : Codeunit 14050701;
      EDICreatePurchaseDoc@1240020001 : Codeunit 14002382;
      ReceiveInventoryAdvice@1240020000 : Codeunit 14002410;
      EDICreateTransferOrder@1240020002 : Codeunit 14050902;
      EDICreateFreightInvoice@1240020003 : Codeunit 14050805;
      EDIUpdateTransferOrder@1240020004 : Codeunit 14050909;
      EDICreatePaymentAdvice@1240020006 : Codeunit 14050914;
      EDIRecDocHdr2@1240020005 : Record 14002358;
    BEGIN
      GetEDISetup;

      CASE "Navision Document" OF
        'I_SLSORD','I_SLSQUO','I_SLSINV','I_SLSCRM':
          BEGIN
            CLEARLASTERROR;
            CLEAR(EDICreateSalesOrder);
            IF Batch THEN BEGIN
              IF NOT EDICreateSalesOrder.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
              END ELSE
                EXIT(TRUE);
            END ELSE
              IF NOT EDICreateSalesOrder.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
                ERROR(GETLASTERRORTEXT);
              END;
          END;
        'U_SLSORD','U_SLSWSA':
          BEGIN
            CLEARLASTERROR;
            CLEAR(EDISalesOrderUpdate);
            IF Batch THEN BEGIN
              IF NOT EDISalesOrderUpdate.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
              END ELSE
                EXIT(TRUE);
            END ELSE
              IF NOT EDISalesOrderUpdate.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
                ERROR(GETLASTERRORTEXT);
              END;
          END;
        'U_PURWSA','I_PURINV','U_PURORD','I_PURORD':
          BEGIN
            CLEARLASTERROR;
            CLEAR(EDIUpdatePurchaseOrder);
            IF Batch THEN BEGIN
              IF NOT EDIUpdatePurchaseOrder.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
              END ELSE
                EXIT(TRUE);
            END ELSE
              IF NOT EDIUpdatePurchaseOrder.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
                ERROR(GETLASTERRORTEXT);
              END;
          END;
        'I_SLSCUS':
          BEGIN
            CLEARLASTERROR;
            CLEAR(EDIUpdateOrgRelationships);
            IF Batch THEN BEGIN
              IF NOT EDIUpdateOrgRelationships.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
              END ELSE
                EXIT(TRUE);
            END ELSE
              IF NOT EDIUpdateOrgRelationships.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
                ERROR(GETLASTERRORTEXT);
              END;
          END;
        'U_ROUTEREQ':
          BEGIN
            CLEARLASTERROR;
            CLEAR(EDIUpdateRouteReq);
            IF Batch THEN BEGIN
              IF NOT EDIUpdateRouteReq.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
              END ELSE
                EXIT(TRUE);
            END ELSE
              IF NOT EDIUpdateRouteReq.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
                ERROR(GETLASTERRORTEXT);
              END;
          END;
        'I_FUNCTACK':
          BEGIN
            CLEARLASTERROR;
            CLEAR(EDIFunctAckUpdate);
            IF Batch THEN BEGIN
              IF NOT EDIFunctAckUpdate.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
              END ELSE
                EXIT(TRUE);
            END ELSE
              IF NOT EDIFunctAckUpdate.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
                ERROR(GETLASTERRORTEXT);
              END;
          END;
        'I_SLSASN','I_SLSWSA':
          BEGIN
            CLEARLASTERROR;
            CLEAR(ProcessWhseShipNotice);
            IF Batch THEN BEGIN
              IF NOT ProcessWhseShipNotice.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
              END ELSE
                EXIT(TRUE);
            END ELSE
              IF NOT ProcessWhseShipNotice.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
                ERROR(GETLASTERRORTEXT);
              END;
          END;
        'I_PURDOC':
          BEGIN
            CLEARLASTERROR;
            CLEAR(EDICreatePurchaseDoc);
            IF Batch THEN BEGIN
              IF NOT EDICreatePurchaseDoc.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
              END ELSE
                EXIT(TRUE);
            END ELSE
              IF NOT EDICreatePurchaseDoc.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
                ERROR(GETLASTERRORTEXT);
              END;
          END;
        'I_FGTINV':
          BEGIN
            CLEARLASTERROR;
            CLEAR(EDICreateFreightInvoice);
            IF Batch THEN BEGIN
              IF NOT EDICreateFreightInvoice.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
              END ELSE
                EXIT(TRUE);
            END ELSE
              IF NOT EDICreateFreightInvoice.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
                ERROR(GETLASTERRORTEXT);
              END;
          END;
        'I_INVRPT','I_INVADJ':
          BEGIN
            CLEARLASTERROR;
            CLEAR(ReceiveInventoryAdvice);
            IF Batch THEN BEGIN
              IF NOT ReceiveInventoryAdvice.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
              END ELSE
                EXIT(TRUE);
            END ELSE
              IF NOT ReceiveInventoryAdvice.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
                ERROR(GETLASTERRORTEXT);
              END;
          END;
        'I_TFRORD':
          BEGIN
            CLEARLASTERROR;
            CLEAR(EDICreateTransferOrder);
            IF Batch THEN BEGIN
              IF NOT EDICreateTransferOrder.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
              END ELSE
                EXIT(TRUE);
            END ELSE
              IF NOT EDICreateTransferOrder.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
                ERROR(GETLASTERRORTEXT);
              END;
          END;
        'U_TFRORD':
          BEGIN
            CLEARLASTERROR;
            CLEAR(EDIUpdateTransferOrder);
            IF Batch THEN BEGIN
              IF NOT EDIUpdateTransferOrder.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
              END ELSE
                EXIT(TRUE);
            END ELSE
              IF NOT EDIUpdateTransferOrder.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
                ERROR(GETLASTERRORTEXT);
              END;
          END;
        'I_PMTADV':
          BEGIN
            CLEARLASTERROR;
            CLEAR(EDICreatePaymentAdvice);
            IF Batch THEN BEGIN
              IF NOT EDICreatePaymentAdvice.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
              END ELSE
                EXIT(TRUE);
            END ELSE
              IF NOT EDICreatePaymentAdvice.RUN(Rec) THEN BEGIN
                EDIRecDocHdr2.GET("Internal Doc. No.");
                EDIRecDocHdr2."Error Message Text" := COPYSTR(GETLASTERRORTEXT,1,250);
                EDIRecDocHdr2.MODIFY;
                COMMIT;
                ERROR(GETLASTERRORTEXT);
              END;
          END;
      END;
    END;

    PROCEDURE CreateSalesOrdersAll@1240030002(NavDoc@1240030003 : Code[10]);
    BEGIN
      EDISetup.GET;

      Created := 0;
      Errors := 0;
      EDIRecDocHdr.RESET;
      EDIRecDocHdr.SETCURRENTKEY(
        "Company Name","Navision Document","EDI Document No.","Trade Partner No.","Internal Doc. No.");
      EDIRecDocHdr.SETRANGE("Company Name",COMPANYNAME);
      EDIRecDocHdr.SETRANGE("Navision Document",NavDoc);
      EDIRecDocHdr.SETRANGE("Sales Doc. Created",FALSE);
      EDIRecDocHdr.SETRANGE("Sales Order Created",FALSE);
      EDIRecDocHdr.SETRANGE("Data Error",FALSE);
      IF EDIRecDocHdr.FIND('-') THEN
        REPEAT
          EDIRecDocHdr."Data Error" := TRUE;
          EDIRecDocHdr."Error Message Text" := '';
          EDIRecDocHdr.MODIFY;
          COMMIT;
          Rec := EDIRecDocHdr;
          IF NOT ProcessReceiveDocument(TRUE) THEN BEGIN
            Errors := Errors + 1;
            IF EDISetup."Receive Document Error" THEN BEGIN
              CLEAR(CreateEDIAlert);
              CreateEDIAlert.CreateAlertRecDocError(EDIRecDocHdr."Internal Doc. No.",1,FALSE);
            END;
          END ELSE
            Created := Created + 1;
        UNTIL EDIRecDocHdr.NEXT = 0;
      COMMIT;
    END;

    PROCEDURE SalesOrderUpdateAll@1240030003(NavDoc@1240030001 : Code[10]);
    BEGIN
      EDISetup.GET;

      Updated := 0;
      Errors := 0;
      EDIRecDocHdr.RESET;
      EDIRecDocHdr.SETCURRENTKEY(
        "Company Name","Navision Document","EDI Document No.","Trade Partner No.","Internal Doc. No.");
      EDIRecDocHdr.SETRANGE("Company Name",COMPANYNAME);
      EDIRecDocHdr.SETRANGE("Navision Document",NavDoc);
      EDIRecDocHdr.SETRANGE("Sales Order Updated",FALSE);
      EDIRecDocHdr.SETRANGE("Data Error",FALSE);
      IF EDIRecDocHdr.FIND('-') THEN
        REPEAT
          EDIRecDocHdr."Data Error" := TRUE;
          EDIRecDocHdr."Error Message Text" := '';
          EDIRecDocHdr.MODIFY;
          COMMIT;
          Rec := EDIRecDocHdr;
          IF NOT ProcessReceiveDocument(TRUE) THEN BEGIN
            Errors := Errors + 1;
            IF EDISetup."Receive Document Error" THEN BEGIN
              CLEAR(CreateEDIAlert);
              CreateEDIAlert.CreateAlertRecDocError(EDIRecDocHdr."Internal Doc. No.",1,FALSE);
            END;
          END ELSE
            Updated := Updated + 1;
        UNTIL EDIRecDocHdr.NEXT = 0;
      COMMIT;
    END;

    PROCEDURE PurchaseOrderUpdateAll@1240030004(NavDoc@1240030000 : Code[10]);
    BEGIN
      EDISetup.GET;

      Updated := 0;
      Errors := 0;
      EDIRecDocHdr.RESET;
      EDIRecDocHdr.SETCURRENTKEY(
        "Company Name","Navision Document","EDI Document No.","Trade Partner No.","Internal Doc. No.");
      EDIRecDocHdr.SETRANGE("Company Name",COMPANYNAME);
      EDIRecDocHdr.SETRANGE("Navision Document",NavDoc);
      EDIRecDocHdr.SETRANGE("Purchase Order Updated",FALSE);
      EDIRecDocHdr.SETRANGE("Data Error",FALSE);
      IF EDIRecDocHdr.FIND('-') THEN
        REPEAT
          EDIRecDocHdr."Data Error" := TRUE;
          EDIRecDocHdr."Error Message Text" := '';
          EDIRecDocHdr.MODIFY;
          COMMIT;
          Rec := EDIRecDocHdr;
          IF NOT ProcessReceiveDocument(TRUE) THEN BEGIN
            Errors := Errors + 1;
            IF EDISetup."Receive Document Error" THEN BEGIN
              CLEAR(CreateEDIAlert);
              CreateEDIAlert.CreateAlertRecDocError(EDIRecDocHdr."Internal Doc. No.",1,FALSE);
            END;
          END ELSE
            Updated := Updated + 1;
        UNTIL EDIRecDocHdr.NEXT = 0;
      COMMIT;
    END;

    PROCEDURE OrgRelationshipUpdateAll@1240030005(NavDoc@1240030000 : Code[10]);
    BEGIN
      EDISetup.GET;

      Updated := 0;
      Errors := 0;
      EDIRecDocHdr.RESET;
      EDIRecDocHdr.SETCURRENTKEY(
        "Company Name","Navision Document","EDI Document No.","Trade Partner No.","Internal Doc. No.");
      EDIRecDocHdr.SETRANGE("Company Name",COMPANYNAME);
      EDIRecDocHdr.SETRANGE("Navision Document",NavDoc);
      EDIRecDocHdr.SETRANGE("Org. Relationships Updated",FALSE);
      EDIRecDocHdr.SETRANGE("Data Error",FALSE);
      IF EDIRecDocHdr.FIND('-') THEN
        REPEAT
          EDIRecDocHdr."Data Error" := TRUE;
          EDIRecDocHdr."Error Message Text" := '';
          EDIRecDocHdr.MODIFY;
          COMMIT;
          Rec := EDIRecDocHdr;
          IF NOT ProcessReceiveDocument(TRUE) THEN BEGIN
            Errors := Errors + 1;
            IF EDISetup."Receive Document Error" THEN BEGIN
              CLEAR(CreateEDIAlert);
              CreateEDIAlert.CreateAlertRecDocError(EDIRecDocHdr."Internal Doc. No.",1,FALSE);
            END;
          END ELSE
            Updated := Updated + 1;
        UNTIL EDIRecDocHdr.NEXT = 0;
      COMMIT;
    END;

    PROCEDURE ProcessWarehouseShipNoticeAll@1240030008(NavDoc@1240030000 : Code[10]);
    BEGIN
      EDISetup.GET;

      Processed := 0;
      Errors := 0;
      EDIRecDocHdr.RESET;
      EDIRecDocHdr.SETCURRENTKEY(
        "Company Name","Navision Document","EDI Document No.","Trade Partner No.","Internal Doc. No.");
      EDIRecDocHdr.SETRANGE("Company Name",COMPANYNAME);
      EDIRecDocHdr.SETRANGE("Navision Document",NavDoc);
      EDIRecDocHdr.SETRANGE("ASN Processed",FALSE);
      EDIRecDocHdr.SETRANGE("Data Error",FALSE);
      IF EDIRecDocHdr.FIND('-') THEN
        REPEAT
          EDIRecDocHdr."Data Error" := TRUE;
          EDIRecDocHdr."Error Message Text" := '';
          EDIRecDocHdr.MODIFY;
          COMMIT;
          Rec := EDIRecDocHdr;
          IF NOT ProcessReceiveDocument(TRUE) THEN BEGIN
            Errors := Errors + 1;
            IF EDISetup."Receive Document Error" THEN BEGIN
              CLEAR(CreateEDIAlert);
              CreateEDIAlert.CreateAlertRecDocError(EDIRecDocHdr."Internal Doc. No.",1,FALSE);
            END;
          END ELSE
            Processed := Processed + 1;
        UNTIL EDIRecDocHdr.NEXT = 0;
      COMMIT;
    END;

    PROCEDURE ProcessInventoryAdviceAll@1240020002(NavDoc@1240020000 : Code[10]);
    BEGIN
      Processed := 0;
      Errors := 0;
      EDIRecDocHdr.RESET;
      EDIRecDocHdr.SETCURRENTKEY(
        "Company Name","Navision Document","EDI Document No.","Trade Partner No.","Internal Doc. No.");
      EDIRecDocHdr.SETRANGE("Company Name",COMPANYNAME);
      EDIRecDocHdr.SETRANGE("Navision Document",NavDoc);
      EDIRecDocHdr.SETRANGE("Inventory Advice Processed",FALSE);
      EDIRecDocHdr.SETRANGE("Data Error",FALSE);
      IF EDIRecDocHdr.FIND('-') THEN
        REPEAT
          EDIRecDocHdr."Data Error" := TRUE;
          EDIRecDocHdr."Error Message Text" := '';
          EDIRecDocHdr.MODIFY;
          COMMIT;
          Rec := EDIRecDocHdr;
          IF NOT ProcessReceiveDocument(TRUE) THEN BEGIN
            Errors := Errors + 1;
            IF EDISetup."Receive Document Error" THEN BEGIN
              CLEAR(CreateEDIAlert);
              CreateEDIAlert.CreateAlertRecDocError(EDIRecDocHdr."Internal Doc. No.",1,FALSE);
            END;
          END ELSE
            Processed := Processed + 1;
        UNTIL EDIRecDocHdr.NEXT = 0;
      COMMIT;
    END;

    PROCEDURE CreateTransferOrderAll@1240020005(NavDoc@1240020000 : Code[10]);
    BEGIN
      Created := 0;
      Errors := 0;
      EDIRecDocHdr.RESET;
      EDIRecDocHdr.SETCURRENTKEY(
        "Company Name","Navision Document","EDI Document No.","Trade Partner No.","Internal Doc. No.");
      EDIRecDocHdr.SETRANGE("Company Name",COMPANYNAME);
      EDIRecDocHdr.SETRANGE("Navision Document",NavDoc);
      EDIRecDocHdr.SETRANGE("Transfer Order Created",FALSE);
      EDIRecDocHdr.SETRANGE("Data Error",FALSE);
      IF EDIRecDocHdr.FIND('-') THEN
        REPEAT
          EDIRecDocHdr."Data Error" := TRUE;
          EDIRecDocHdr."Error Message Text" := '';
          EDIRecDocHdr.MODIFY;
          COMMIT;
          Rec := EDIRecDocHdr;
          IF NOT ProcessReceiveDocument(TRUE) THEN BEGIN
            Errors := Errors + 1;
            IF EDISetup."Receive Document Error" THEN BEGIN
              CLEAR(CreateEDIAlert);
              CreateEDIAlert.CreateAlertRecDocError(EDIRecDocHdr."Internal Doc. No.",1,FALSE);
            END;
          END ELSE
            Created := Created + 1;
        UNTIL EDIRecDocHdr.NEXT = 0;
      COMMIT;
    END;

    PROCEDURE CreatePurchDocsAll@1240020004(NavDoc@1240030003 : Code[10]);
    BEGIN
      Created := 0;
      Errors := 0;
      EDIRecDocHdr.RESET;
      EDIRecDocHdr.SETCURRENTKEY(
        "Company Name","Navision Document","EDI Document No.","Trade Partner No.","Internal Doc. No.");
      EDIRecDocHdr.SETRANGE("Company Name",COMPANYNAME);
      EDIRecDocHdr.SETRANGE("Navision Document",NavDoc);
      EDIRecDocHdr.SETRANGE("Purch. Doc. Created",FALSE);
      EDIRecDocHdr.SETRANGE("Data Error",FALSE);
      IF EDIRecDocHdr.FIND('-') THEN
        REPEAT
          EDIRecDocHdr."Data Error" := TRUE;
          EDIRecDocHdr."Error Message Text" := '';
          EDIRecDocHdr.MODIFY;
          COMMIT;
          Rec := EDIRecDocHdr;
          IF NOT ProcessReceiveDocument(TRUE) THEN BEGIN
            Errors := Errors + 1;
            IF EDISetup."Receive Document Error" THEN BEGIN
              CLEAR(CreateEDIAlert);
              CreateEDIAlert.CreateAlertRecDocError(EDIRecDocHdr."Internal Doc. No.",1,FALSE);
            END;
          END ELSE
            Created := Created + 1;
        UNTIL EDIRecDocHdr.NEXT = 0;
      COMMIT;
    END;

    PROCEDURE CreateOrderStatusDoc@1240020000(EDIRecDocHdr@1240020000 : Record 14002358;NAVDoc@1240020001 : Code[10]);
    VAR
      EDITemplate@1240020002 : Record 14002350;
      OrderDoc@1240020003 : Boolean;
    BEGIN
      EDITemplate.GET(EDIRecDocHdr."EDI Template Code");
      IF (EDITemplate."File Format" = EDITemplate."File Format"::XML) AND
         (EDITemplate."Interface File Type" <> EDITemplate."Interface File Type"::cXML)
      THEN BEGIN
        OrderDoc := GetDocumentType(EDIRecDocHdr);
        IF EDIRecDocHdr.Original AND OrderDoc THEN
          EDISalesOrderStatSend.AutoCreOrderStatDoc(EDIRecDocHdr,NAVDoc)
        ELSE
          ERROR(Text001);
        EXIT;
      END;

      OrderDoc := GetDocumentType(EDIRecDocHdr);
      IF (EDIRecDocHdr."EDI Document No." = '850') OR
         (EDIRecDocHdr."EDI Document No." = '875') OR
         (EDIRecDocHdr."EDI Document No." = 'ORDERS') OR
         (EDIRecDocHdr."EDI Document No." = 'ORDERREQUEST') OR
         (OrderDoc)
      THEN BEGIN
        CASE EDIRecDocHdr."EDI Document No." OF
         '850':
            BEGIN
              EDIRecDocField.RESET;
              EDIRecDocField.SETCURRENTKEY("Internal Doc. No.",Segment,"Line No.");
              EDIRecDocField.SETRANGE("Internal Doc. No.",EDIRecDocHdr."Internal Doc. No.");
              EDIRecDocField.SETRANGE(Segment,'BEG');
              EDIRecDocField.SETRANGE(Element,'01');
              IF EDIRecDocField.FIND('-') THEN
                IF EDIRecDocField."Field Text Value" = '00' THEN BEGIN
                  "Manual Process" := TRUE;
                  EDISalesOrderStatSend.AutoCreOrderStatDoc(EDIRecDocHdr,NAVDoc);
                END;
            END;
          '875':
            BEGIN
              EDIRecDocField.RESET;
              EDIRecDocField.SETCURRENTKEY("Internal Doc. No.",Segment,"Line No.");
              EDIRecDocField.SETRANGE("Internal Doc. No.",EDIRecDocHdr."Internal Doc. No.");
              EDIRecDocField.SETRANGE(Segment,'G50');
              EDIRecDocField.SETFILTER(Element,'01');
              IF EDIRecDocField.FIND('-') THEN
                IF EDIRecDocField."Field Text Value" = 'N' THEN
                  EDISalesOrderStatSend.AutoCreOrderStatDoc(EDIRecDocHdr,NAVDoc);
            END;
          'ORDERS':
            BEGIN
              EDIRecDocField.RESET;
              EDIRecDocField.SETCURRENTKEY("Internal Doc. No.",Segment,"Line No.");
              EDIRecDocField.SETRANGE("Internal Doc. No.",EDIRecDocHdr."Internal Doc. No.");
              EDIRecDocField.SETRANGE(Segment,'BGM');
              EDIRecDocField.SETFILTER(Element,'%1|%2','03','1225');
              IF EDIRecDocField.FIND('-') THEN
                IF EDIRecDocField."Field Text Value" = '9' THEN
                  EDISalesOrderStatSend.AutoCreOrderStatDoc(EDIRecDocHdr,NAVDoc);
            END;
          'ORDERREQUEST':
            BEGIN
              EDIRecDocFields.RESET;
              EDIRecDocFields.SETCURRENTKEY("Internal Doc. No.","NAV Table No.","Nav Field No.");
              EDIRecDocFields.SETRANGE("Internal Doc. No.",EDIRecDocHdr."Internal Doc. No.");
              EDIRecDocFields.SETRANGE("NAV Table No.",DATABASE::"E.D.I. Receive Document Hdr.");
              EDIRecDocFields.SETRANGE("Nav Field No.",EDIRecDocHdr.FIELDNO("PO Change Purpose Code"));
              IF EDIRecDocFields.FIND('-') THEN
                IF EDIRecDocFields."Field Text Value" = 'new' THEN
                  EDISalesOrderStatSend.AutoCreOrderStatDoc(EDIRecDocHdr,NAVDoc);
            END;
          ELSE BEGIN
            IF (OrderDoc) AND (EDIRecDocHdr."PO Change Purpose Code" = '00') THEN
              IF EDITemplate."Create Order Stat on P.O. Rec." THEN
                EDISalesOrderStatSend.AutoCreOrderStatDoc(EDIRecDocHdr,NAVDoc);
          END;
        END;
      END ELSE
        ERROR(Text001);
    END;

    PROCEDURE CreateOrderChangeStatus@1240020001(EDIRecDocHdr@1240020000 : Record 14002358);
    VAR
      EDITemplate@1240020002 : Record 14002350;
      OrderDoc@1240020001 : Boolean;
    BEGIN
      EDITemplate.GET(EDIRecDocHdr."EDI Template Code");
      IF (EDITemplate."File Format" = EDITemplate."File Format"::XML) AND
         (EDITemplate."Interface File Type" <> EDITemplate."Interface File Type"::cXML)
      THEN BEGIN
        OrderDoc := GetDocumentType(EDIRecDocHdr);
        IF EDIRecDocHdr.Original AND OrderDoc THEN
          IF EDITemplate."Create Order Change Status" THEN
            EDISalesOrderStatSend.AutoCreOrderStatDoc(EDIRecDocHdr,'E_SLSPOC')
          ELSE
            ERROR(Text001);
        EXIT;
      END;

      OrderDoc := GetDocumentType(EDIRecDocHdr);
      IF (EDIRecDocHdr."EDI Document No." = '850') OR
         (EDIRecDocHdr."EDI Document No." = '875') OR
         (EDIRecDocHdr."EDI Document No." = 'ORDERS') OR
         (EDIRecDocHdr."EDI Document No." = 'ORDERREQUEST') OR
         (OrderDoc)
      THEN BEGIN
        CASE EDIRecDocHdr."EDI Document No." OF
         '850':
            BEGIN
              EDIRecDocField.RESET;
              EDIRecDocField.SETCURRENTKEY("Internal Doc. No.",Segment,"Line No.");
              EDIRecDocField.SETRANGE("Internal Doc. No.",EDIRecDocHdr."Internal Doc. No.");
              EDIRecDocField.SETRANGE(Segment,'BEG');
              EDIRecDocField.SETRANGE(Element,'01');
              IF EDIRecDocField.FIND('-') THEN
                IF EDIRecDocField."Field Text Value" = '00' THEN BEGIN
                  "Manual Process" := TRUE;
                  EDISalesOrderStatSend.AutoCreOrderStatDoc(EDIRecDocHdr,'E_SLSPOC');
                END;
            END;
          '875':
            BEGIN
              EDIRecDocField.RESET;
              EDIRecDocField.SETCURRENTKEY("Internal Doc. No.",Segment,"Line No.");
              EDIRecDocField.SETRANGE("Internal Doc. No.",EDIRecDocHdr."Internal Doc. No.");
              EDIRecDocField.SETRANGE(Segment,'G50');
              EDIRecDocField.SETFILTER(Element,'01');
              IF EDIRecDocField.FIND('-') THEN
                IF EDIRecDocField."Field Text Value" = 'N' THEN
                  EDISalesOrderStatSend.AutoCreOrderStatDoc(EDIRecDocHdr,'E_SLSPOC');
            END;
          'ORDERS':
            BEGIN
              EDIRecDocField.RESET;
              EDIRecDocField.SETCURRENTKEY("Internal Doc. No.",Segment,"Line No.");
              EDIRecDocField.SETRANGE("Internal Doc. No.",EDIRecDocHdr."Internal Doc. No.");
              EDIRecDocField.SETRANGE(Segment,'BGM');
              EDIRecDocField.SETFILTER(Element,'%1|%2','03','1225');
              IF EDIRecDocField.FIND('-') THEN
                IF EDIRecDocField."Field Text Value" = '9' THEN
                  EDISalesOrderStatSend.AutoCreOrderStatDoc(EDIRecDocHdr,'E_SLSPOC');
            END;
          'ORDERREQUEST':
            BEGIN
              EDIRecDocFields.RESET;
              EDIRecDocFields.SETCURRENTKEY("Internal Doc. No.","NAV Table No.","Nav Field No.");
              EDIRecDocFields.SETRANGE("Internal Doc. No.",EDIRecDocHdr."Internal Doc. No.");
              EDIRecDocFields.SETRANGE("NAV Table No.",DATABASE::"E.D.I. Receive Document Hdr.");
              EDIRecDocFields.SETRANGE("Nav Field No.",EDIRecDocHdr.FIELDNO("PO Change Purpose Code"));
              IF EDIRecDocFields.FIND('-') THEN
                IF EDIRecDocFields."Field Text Value" = 'new' THEN
                  EDISalesOrderStatSend.AutoCreOrderStatDoc(EDIRecDocHdr,'E_SLSPOC');
            END;
          ELSE BEGIN
            IF (OrderDoc) AND (EDIRecDocHdr."PO Change Purpose Code" = '00') THEN
              EDISalesOrderStatSend.AutoCreOrderStatDoc(EDIRecDocHdr,'E_SLSPOC');
          END;
        END;
      END ELSE
        ERROR(Text001);
    END;

    PROCEDURE CreateFreightInvoiceAll@1240020007(NavDoc@1240030003 : Code[10]);
    BEGIN
      Created := 0;
      Errors := 0;
      EDIRecDocHdr.RESET;
      EDIRecDocHdr.SETCURRENTKEY(
        "Company Name","Navision Document","EDI Document No.","Trade Partner No.","Internal Doc. No.");
      EDIRecDocHdr.SETRANGE("Company Name",COMPANYNAME);
      EDIRecDocHdr.SETRANGE("Navision Document",NavDoc);
      EDIRecDocHdr.SETRANGE("Freight Invoice Created",FALSE);
      EDIRecDocHdr.SETRANGE("Data Error",FALSE);
      IF EDIRecDocHdr.FIND('-') THEN
        REPEAT
          EDIRecDocHdr."Data Error" := TRUE;
          EDIRecDocHdr."Error Message Text" := '';
          EDIRecDocHdr.MODIFY;
          COMMIT;
          Rec := EDIRecDocHdr;
          IF NOT ProcessReceiveDocument(TRUE) THEN BEGIN
            Errors := Errors + 1;
            IF EDISetup."Receive Document Error" THEN BEGIN
              CLEAR(CreateEDIAlert);
              CreateEDIAlert.CreateAlertRecDocError(EDIRecDocHdr."Internal Doc. No.",1,FALSE);
            END;
          END ELSE
            Created := Created + 1;
        UNTIL EDIRecDocHdr.NEXT = 0;
      COMMIT;
    END;

    PROCEDURE TransferOrderUpdateAll@1240020003(NavDoc@1240020000 : Code[10]);
    BEGIN
      EDISetup.GET;

      Updated := 0;
      Errors := 0;
      EDIRecDocHdr.RESET;
      EDIRecDocHdr.SETCURRENTKEY(
        "Company Name","Navision Document","EDI Document No.","Trade Partner No.","Internal Doc. No.");
      EDIRecDocHdr.SETRANGE("Company Name",COMPANYNAME);
      EDIRecDocHdr.SETRANGE("Navision Document",NavDoc);
      EDIRecDocHdr.SETRANGE("Transfer Order Updated",FALSE);
      EDIRecDocHdr.SETRANGE("Data Error",FALSE);
      IF EDIRecDocHdr.FIND('-') THEN
        REPEAT
          EDIRecDocHdr."Data Error" := TRUE;
          EDIRecDocHdr."Error Message Text" := '';
          EDIRecDocHdr.MODIFY;
          COMMIT;
          Rec := EDIRecDocHdr;
          IF NOT ProcessReceiveDocument(TRUE) THEN BEGIN
            Errors := Errors + 1;
            IF EDISetup."Receive Document Error" THEN BEGIN
              CLEAR(CreateEDIAlert);
              CreateEDIAlert.CreateAlertRecDocError(EDIRecDocHdr."Internal Doc. No.",1,FALSE);
            END;
          END ELSE
            Updated := Updated + 1;
        UNTIL EDIRecDocHdr.NEXT = 0;
      COMMIT;
    END;

    PROCEDURE RoutingReqUpdateAll@1240020008(NavDoc@1240030001 : Code[10]);
    BEGIN
      EDISetup.GET;

      Updated := 0;
      Errors := 0;
      EDIRecDocHdr.RESET;
      EDIRecDocHdr.SETCURRENTKEY(
        "Company Name","Navision Document","EDI Document No.","Trade Partner No.","Internal Doc. No.");
      EDIRecDocHdr.SETRANGE("Company Name",COMPANYNAME);
      EDIRecDocHdr.SETRANGE("Navision Document",NavDoc);
      EDIRecDocHdr.SETRANGE("Routing Req. Updated",FALSE);
      EDIRecDocHdr.SETRANGE("Data Error",FALSE);
      IF EDIRecDocHdr.FIND('-') THEN
        REPEAT
          EDIRecDocHdr."Data Error" := TRUE;
          EDIRecDocHdr."Error Message Text" := '';
          EDIRecDocHdr.MODIFY;
          COMMIT;
          Rec := EDIRecDocHdr;
          IF NOT ProcessReceiveDocument(TRUE) THEN BEGIN
            Errors := Errors + 1;
            IF EDISetup."Receive Document Error" THEN BEGIN
              CLEAR(CreateEDIAlert);
              CreateEDIAlert.CreateAlertRecDocError(EDIRecDocHdr."Internal Doc. No.",1,FALSE);
            END;
          END ELSE
            Updated := Updated + 1;
        UNTIL EDIRecDocHdr.NEXT = 0;
      COMMIT;
    END;

    PROCEDURE CreatePaymentAdviceAll@1240020010(NavDoc@1240020000 : Code[10]);
    BEGIN
      Created := 0;
      Errors := 0;
      EDIRecDocHdr.RESET;
      EDIRecDocHdr.SETCURRENTKEY(
        "Company Name","Navision Document","EDI Document No.","Trade Partner No.","Internal Doc. No.");
      EDIRecDocHdr.SETRANGE("Company Name",COMPANYNAME);
      EDIRecDocHdr.SETRANGE("Navision Document",NavDoc);
      EDIRecDocHdr.SETRANGE("Payment Remit Advice Created",FALSE);
      EDIRecDocHdr.SETRANGE("Data Error",FALSE);
      IF EDIRecDocHdr.FIND('-') THEN
        REPEAT
          EDIRecDocHdr."Data Error" := TRUE;
          EDIRecDocHdr."Error Message Text" := '';
          EDIRecDocHdr.MODIFY;
          COMMIT;
          Rec := EDIRecDocHdr;
          IF NOT ProcessReceiveDocument(TRUE) THEN BEGIN
            Errors := Errors + 1;
            IF EDISetup."Receive Document Error" THEN BEGIN
              CLEAR(CreateEDIAlert);
              CreateEDIAlert.CreateAlertRecDocError(EDIRecDocHdr."Internal Doc. No.",1,FALSE);
            END;
          END ELSE
            Created := Created + 1;
        UNTIL EDIRecDocHdr.NEXT = 0;
      COMMIT;
    END;

    PROCEDURE GetSublineSegment@1240020006(LocEDIRecDocHdr@1240020001 : Record 14002358);
    VAR
      EDIDocument@1240020004 : Record 14002353;
      EDISegment@1240020000 : Record 14002354;
      LocEDIRecDocField@1240020006 : Record 14002359;
      LocEDIRecDocField2@1240020005 : Record 14002359;
      Finished@1240020002 : Boolean;
      ProcessingSubLine@1240020003 : Boolean;
      SLNGroup@1240020007 : Integer;
    BEGIN
      SLNFound := FALSE;

      LocEDIRecDocField.RESET;
      LocEDIRecDocField.SETCURRENTKEY("Internal Doc. No.","Field Name");
      LocEDIRecDocField.SETRANGE("Internal Doc. No.",LocEDIRecDocHdr."Internal Doc. No.");
      LocEDIRecDocField.SETFILTER(Segment,'%1','SLN');
      IF LocEDIRecDocField.FIND('-') THEN
      REPEAT
        IF LocEDIRecDocField.Trigger = TRUE THEN BEGIN
          SLNFound := TRUE;
          SLNSegmentID := 'SLN'
        END;
      UNTIL (LocEDIRecDocField.NEXT = 0) OR (SLNFound = TRUE);
      IF SLNFound = FALSE THEN BEGIN
        Finished := FALSE;
        EDISegment.SETRANGE("Trade Partner No.",LocEDIRecDocHdr."Trade Partner No.");
        EDISegment.SETRANGE("Navision Document",LocEDIRecDocHdr."Navision Document");
        EDISegment.SETRANGE("EDI Document No.",LocEDIRecDocHdr."EDI Document No.");
        EDISegment.SETRANGE(Version,LocEDIRecDocHdr."EDI Version");
        EDISegment.SETRANGE(Type,EDIDocument.Type::Import);
        IF EDISegment.FIND('-') THEN BEGIN
          REPEAT
            CASE EDISegment."Segment Type" OF
              EDISegment."Segment Type"::Command:
                BEGIN
                  IF EDISegment.Segment = 'SUB LINE BEGIN' THEN
                    ProcessingSubLine := TRUE;
                  IF EDISegment.Segment = 'SUB LINE END' THEN
                    Finished := TRUE;
                END;
              EDISegment."Segment Type"::Segment:
                BEGIN
                  IF ProcessingSubLine THEN BEGIN
                    LocEDIRecDocField.RESET;
                    LocEDIRecDocField.SETCURRENTKEY("Internal Doc. No.","Field Name");
                    LocEDIRecDocField.SETRANGE("Internal Doc. No.",LocEDIRecDocHdr."Internal Doc. No.");
                    LocEDIRecDocField.SETRANGE(Segment,EDISegment.Segment);
                    IF LocEDIRecDocField.FIND('-') THEN
                      REPEAT
                        IF LocEDIRecDocField.Trigger = TRUE THEN BEGIN
                          SLNFound := TRUE;
                          SLNSegmentID := EDISegment.Segment;
                        END;
                      UNTIL (LocEDIRecDocField.NEXT = 0) OR (SLNFound = TRUE);
                  END;
                END;
            END;
          UNTIL (EDISegment.NEXT= 0) OR (Finished);
        END;
      END;
      IF SLNFound THEN BEGIN
        LocEDIRecDocField2.RESET;
        LocEDIRecDocField2.SETCURRENTKEY("Internal Doc. No.","Segment Group");
        LocEDIRecDocField2.SETRANGE("Internal Doc. No.",LocEDIRecDocHdr."Internal Doc. No.");
        LocEDIRecDocField2.SETRANGE("Segment Group",LocEDIRecDocField."Segment Group");
        LocEDIRecDocField2.SETRANGE(Segment,SLNSegmentID);
        IF LocEDIRecDocField2.FIND('-') THEN BEGIN
          SLNGroup := 0;
          REPEAT
            IF (LocEDIRecDocField2."New Segment") AND
               (LocEDIRecDocField2.Segment = SLNSegmentID)
            THEN
              SLNGroup := SLNGroup + 1;
            LocEDIRecDocField2."SLN Group" := SLNGroup;
            LocEDIRecDocField2.MODIFY;
          UNTIL LocEDIRecDocField2.NEXT = 0;
        END;
      END;
    END;

    LOCAL PROCEDURE GetDocumentType@1240020009(EDIRecDocHdr@1240020000 : Record 14002358) : Boolean;
    VAR
      EDIDocument@1240020002 : Record 14002353;
      OrderDoc@1240020001 : Boolean;
    BEGIN
      OrderDoc := FALSE;
      EDIRecDocFields.RESET;
      EDIRecDocFields.SETCURRENTKEY("Internal Doc. No.","NAV Table No.","Nav Field No.");
      EDIRecDocFields.SETRANGE("Internal Doc. No.",EDIRecDocHdr."Internal Doc. No.");
      EDIRecDocFields.SETRANGE("NAV Table No.",DATABASE::"E.D.I. Receive Document Hdr.");
      EDIRecDocFields.SETRANGE("Nav Field No.",EDIRecDocHdr.FIELDNO("Document Type"));
      IF EDIRecDocFields.FIND('-') THEN BEGIN
        CASE EDIRecDocFields."Data Type" OF
          EDIRecDocFields."Data Type"::Integer:
            BEGIN
              EDIRecDocHdr."Document Type" := EDIRecDocFields."Field Integer Value";
                IF EDIRecDocFields."Field Integer Value" = 1 THEN
                  OrderDoc := TRUE
                ELSE
                  OrderDoc := FALSE;
            END;
          EDIRecDocFields."Data Type"::Text:
            IF UPPERCASE(EDIRecDocFields."Field Text Value")  = 'ORDER' THEN
              OrderDoc := TRUE
            ELSE
              OrderDoc := FALSE;
        END;
      END ELSE BEGIN
        WITH EDIRecDocHdr DO
          EDIDocument.GET(
            "Trade Partner No.","Navision Document","EDI Document No.","EDI Version",EDIDocument.Type::Import);
        IF EDIDocument."Document Type" = EDIDocument."Document Type"::Order THEN
          OrderDoc := TRUE
        ELSE
          OrderDoc := FALSE;
      END;
      EXIT(OrderDoc);
    END;

    BEGIN
    {
      2019-03-01 TPZ2499 AKUMAR
        Added new field ISR Code.
    }
    END.
  }
}

