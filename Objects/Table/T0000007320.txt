OBJECT Table 7320 Warehouse Shipment Header
{
  OBJECT-PROPERTIES
  {
    Date=07/02/20;
    Time=[ 7:52:55 AM];
    Modified=Yes;
    Version List=NAVW110.00.00.20784,RF1.20.29,NAVEVENT;
  }
  PROPERTIES
  {
    DataCaptionFields=No.;
    OnInsert=BEGIN
               WhseSetup.GET;
               IF "No." = '' THEN BEGIN
                 WhseSetup.TESTFIELD("Whse. Ship Nos.");
                 NoSeriesMgt.InitSeries(WhseSetup."Whse. Ship Nos.",xRec."No. Series","Posting Date","No.","No. Series");
               END;

               NoSeriesMgt.SetDefaultSeries("Shipping No. Series",WhseSetup."Posted Whse. Shipment Nos.");

               GetLocation("Location Code");
               // >> RF
               // VALIDATE("Bin Code",Location."Shipment Bin Code");
               IF NOT WhseEmployee.GET(USERID,"Location Code") THEN
                 CLEAR(WhseEmployee);
               IF WhseEmployee."Shipment Bin Code" <> '' THEN
                 VALIDATE("Bin Code",WhseEmployee."Shipment Bin Code")
               ELSE
               VALIDATE("Bin Code",Location."Shipment Bin Code");
               // << RF
               "Posting Date" := WORKDATE;
               "Shipment Date" := WORKDATE;
             END;

    OnDelete=BEGIN
               TESTFIELD(Status,Status::Open);
               DeleteWarehouseShipmentLines;
               DeleteRelatedLines;
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    CaptionML=[ENU=Warehouse Shipment Header;
               ESM=Cabecera env¡o almac‚n;
               FRC=En-tˆte livraison magasin;
               ENC=Warehouse Shipment Header];
    LookupPageID=Page7339;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                                WhseSetup.GET;
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  NoSeriesMgt.TestManual(WhseSetup."Whse. Ship Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ESM=N§;
                                                              FRC=Nø;
                                                              ENC=No.] }
    { 2   ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   OnValidate=VAR
                                                                WhseShptLine@1002 : Record 7321;
                                                              BEGIN
                                                                IF NOT WmsManagement.LocationIsAllowed("Location Code") THEN
                                                                  ERROR(Text003,"Location Code");

                                                                IF "Location Code" <> xRec."Location Code" THEN BEGIN
                                                                  "Zone Code" := '';
                                                                  "Bin Code" := '';
                                                                  WhseShptLine.SETRANGE("No.","No.");
                                                                  IF NOT WhseShptLine.ISEMPTY THEN
                                                                    ERROR(
                                                                      Text001,
                                                                      FIELDCAPTION("Location Code"));
                                                                END;

                                                                GetLocation("Location Code");
                                                                Location.TESTFIELD("Require Shipment");
                                                                IF Location."Directed Put-away and Pick" OR Location."Bin Mandatory" THEN
                                                                  VALIDATE("Bin Code",Location."Shipment Bin Code");

                                                                IF USERID <> '' THEN BEGIN
                                                                  FILTERGROUP := 2;
                                                                  SETRANGE("Location Code","Location Code");
                                                                  FILTERGROUP := 0;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Location Code;
                                                              ESM=C¢d. almac‚n;
                                                              FRC=Code d'emplacement;
                                                              ENC=Location Code] }
    { 3   ;   ;Assigned User ID    ;Code50        ;TableRelation="Warehouse Employee" WHERE (Location Code=FIELD(Location Code));
                                                   OnValidate=BEGIN
                                                                IF "Assigned User ID" <> '' THEN BEGIN
                                                                  "Assignment Date" := TODAY;
                                                                  "Assignment Time" := TIME;
                                                                END ELSE BEGIN
                                                                  "Assignment Date" := 0D;
                                                                  "Assignment Time" := 0T;
                                                                END;
                                                              END;

                                                   DataClassification=EndUserIdentifiableInformation;
                                                   CaptionML=[ENU=Assigned User ID;
                                                              ESM=Id. usuario asignado;
                                                              FRC=Code utilisateur affect‚;
                                                              ENC=Assigned User ID] }
    { 4   ;   ;Assignment Date     ;Date          ;CaptionML=[ENU=Assignment Date;
                                                              ESM=Fecha asignaci¢n;
                                                              FRC=Date affectation;
                                                              ENC=Assignment Date];
                                                   Editable=No }
    { 5   ;   ;Assignment Time     ;Time          ;CaptionML=[ENU=Assignment Time;
                                                              ESM=Hora asignaci¢n;
                                                              FRC=Heure affectation;
                                                              ENC=Assignment Time];
                                                   Editable=No }
    { 6   ;   ;Sorting Method      ;Option        ;OnValidate=BEGIN
                                                                IF "Sorting Method" <> xRec."Sorting Method" THEN
                                                                  SortWhseDoc;
                                                              END;

                                                   CaptionML=[ENU=Sorting Method;
                                                              ESM=M‚todo ordenaci¢n;
                                                              FRC=M‚thode de tri;
                                                              ENC=Sorting Method];
                                                   OptionCaptionML=[ENU=" ,Item,Document,Shelf or Bin,Due Date,Destination";
                                                                    ESM=" ,Prod.,Documento,Estant. o ubic.,Fecha vto.,Destino";
                                                                    FRC=" ,Article,Document,Tablette ou Zone,Date d'‚ch‚ance,Destination";
                                                                    ENC=" ,Item,Document,Shelf or Bin,Due Date,Destination"];
                                                   OptionString=[ ,Item,Document,Shelf or Bin,Due Date,Destination] }
    { 7   ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              ESM=Nos. serie;
                                                              FRC=S‚ries de nø;
                                                              ENC=No. Series] }
    { 11  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Warehouse Comment Line" WHERE (Table Name=CONST(Whse. Shipment),
                                                                                                     Type=CONST(" "),
                                                                                                     No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              ESM=Comentario;
                                                              FRC=Commentaire;
                                                              ENC=Comment];
                                                   Editable=No }
    { 12  ;   ;Bin Code            ;Code20        ;TableRelation=IF (Zone Code=FILTER('')) Bin.Code WHERE (Location Code=FIELD(Location Code))
                                                                 ELSE IF (Zone Code=FILTER(<>'')) Bin.Code WHERE (Location Code=FIELD(Location Code),
                                                                                                                  Zone Code=FIELD(Zone Code));
                                                   OnValidate=VAR
                                                                Bin@1000 : Record 7354;
                                                                WhseIntegrationMgt@1001 : Codeunit 7317;
                                                              BEGIN
                                                                IF (xRec."Bin Code" <> "Bin Code") OR ("Zone Code" = '') THEN BEGIN
                                                                  TESTFIELD(Status,Status::Open);
                                                                  IF "Bin Code" <> '' THEN BEGIN
                                                                    GetLocation("Location Code");
                                                                    WhseIntegrationMgt.CheckBinTypeCode(DATABASE::"Warehouse Shipment Header",
                                                                      FIELDCAPTION("Bin Code"),
                                                                      "Location Code",
                                                                      "Bin Code",0);
                                                                    IF Location."Directed Put-away and Pick" THEN BEGIN
                                                                      Bin.GET("Location Code","Bin Code");
                                                                      "Zone Code" := Bin."Zone Code";
                                                                    END;
                                                                  END;
                                                                  MessageIfShptLinesExist(FIELDCAPTION("Bin Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Bin Code;
                                                              ESM=C¢d. ubicaci¢n;
                                                              FRC=Code de zone;
                                                              ENC=Bin Code] }
    { 13  ;   ;Zone Code           ;Code10        ;TableRelation=Zone.Code WHERE (Location Code=FIELD(Location Code));
                                                   OnValidate=BEGIN
                                                                IF "Zone Code" <> xRec."Zone Code" THEN BEGIN
                                                                  TESTFIELD(Status,Status::Open);
                                                                  IF "Zone Code" <> '' THEN BEGIN
                                                                    GetLocation("Location Code");
                                                                    Location.TESTFIELD("Directed Put-away and Pick");
                                                                  END;
                                                                  "Bin Code" := '';
                                                                  MessageIfShptLinesExist(FIELDCAPTION("Zone Code"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Zone Code;
                                                              ESM=C¢d. zona;
                                                              FRC=Code zone;
                                                              ENC=Zone Code] }
    { 34  ;   ;Document Status     ;Option        ;OnValidate=VAR
                                                                WhsePickRqst@1000 : Record 7325;
                                                              BEGIN
                                                                CALCFIELDS("Completely Picked");
                                                                IF "Completely Picked" <> xRec."Completely Picked" THEN BEGIN
                                                                  WhsePickRqst.SETRANGE("Document Type",WhsePickRqst."Document Type"::Shipment);
                                                                  WhsePickRqst.SETRANGE("Document No.","No.");
                                                                  IF NOT WhsePickRqst.ISEMPTY THEN
                                                                    WhsePickRqst.MODIFYALL("Completely Picked","Completely Picked");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Document Status;
                                                              ESM=Estado documento;
                                                              FRC=tat document;
                                                              ENC=Document Status];
                                                   OptionCaptionML=[ENU=" ,Partially Picked,Partially Shipped,Completely Picked,Completely Shipped";
                                                                    ESM=" ,Picking parcial,Enviado parcial,Picking completo,Enviado completo";
                                                                    FRC=" ,Partiellement pr‚lev‚,Partiellement livr‚,EntiŠrement pr‚lev‚,EntiŠrement livr‚";
                                                                    ENC=" ,Partially Picked,Partially Shipped,Completely Picked,Completely Shipped"];
                                                   OptionString=[ ,Partially Picked,Partially Shipped,Completely Picked,Completely Shipped];
                                                   Editable=No }
    { 39  ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ESM=Fecha registro;
                                                              FRC=Date de report;
                                                              ENC=Posting Date] }
    { 41  ;   ;Shipping Agent Code ;Code10        ;TableRelation="Shipping Agent";
                                                   OnValidate=BEGIN
                                                                IF xRec."Shipping Agent Code" = "Shipping Agent Code" THEN
                                                                  EXIT;

                                                                "Shipping Agent Service Code" := '';
                                                              END;

                                                   AccessByPermission=TableData 5790=R;
                                                   CaptionML=[ENU=Shipping Agent Code;
                                                              ESM=C¢d. transportista;
                                                              FRC=Code agent de livraison;
                                                              ENC=Shipping Agent Code] }
    { 42  ;   ;Shipping Agent Service Code;Code10 ;TableRelation="Shipping Agent Services".Code WHERE (Shipping Agent Code=FIELD(Shipping Agent Code));
                                                   CaptionML=[ENU=Shipping Agent Service Code;
                                                              ESM=C¢d. servicio transportista;
                                                              FRC=Code prestation agent de livraison;
                                                              ENC=Shipping Agent Service Code] }
    { 43  ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   CaptionML=[ENU=Shipment Method Code;
                                                              ESM=C¢d. m‚todo de env¡o;
                                                              FRC=Code m‚thode de livraison;
                                                              ENC=Shipment Method Code] }
    { 45  ;   ;Shipment Date       ;Date          ;OnValidate=VAR
                                                                WhseShptLine@1000 : Record 7321;
                                                              BEGIN
                                                                IF "Shipment Date" <> xRec."Shipment Date" THEN BEGIN
                                                                  WhseShptLine.SETRANGE("No.","No.");
                                                                  IF NOT WhseShptLine.ISEMPTY THEN
                                                                    IF CONFIRM(
                                                                         STRSUBSTNO(Text008,FIELDCAPTION("Shipment Date")),FALSE)
                                                                    THEN
                                                                      WhseShptLine.MODIFYALL("Shipment Date","Shipment Date");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Shipment Date;
                                                              ESM=Fecha env¡o;
                                                              FRC=Date de livraison;
                                                              ENC=Shipment Date] }
    { 46  ;   ;Completely Picked   ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Min("Warehouse Shipment Line"."Completely Picked" WHERE (No.=FIELD(No.)));
                                                   CaptionML=[ENU=Completely Picked;
                                                              ESM=Picking completo;
                                                              FRC=EntiŠrement pr‚l‚v‚;
                                                              ENC=Completely Picked];
                                                   Editable=No }
    { 47  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              ESM=Estado;
                                                              FRC=tat;
                                                              ENC=Status];
                                                   OptionCaptionML=[ENU=Open,Released;
                                                                    ESM=Abierto,Lanzado;
                                                                    FRC=Ouvert,Lib‚r‚;
                                                                    ENC=Open,Released];
                                                   OptionString=Open,Released;
                                                   Editable=No }
    { 48  ;   ;External Document No.;Code35       ;CaptionML=[ENU=External Document No.;
                                                              ESM=N§ documento externo;
                                                              FRC=Nø document externe;
                                                              ENC=External Document No.] }
    { 50  ;   ;Create Posted Header;Boolean       ;CaptionML=[ENU=Create Posted Header;
                                                              ESM=Crear cabecera regist.;
                                                              FRC=Cr‚er un en-tˆte Report‚;
                                                              ENC=Create Posted Header] }
    { 61  ;   ;Shipping No.        ;Code20        ;CaptionML=[ENU=Shipping No.;
                                                              ESM=N§ env¡o venta;
                                                              FRC=Nø livraison;
                                                              ENC=Shipping No.] }
    { 62  ;   ;Last Shipping No.   ;Code20        ;TableRelation="Posted Whse. Shipment Header";
                                                   CaptionML=[ENU=Last Shipping No.;
                                                              ESM=élt. n§ env¡o venta;
                                                              FRC=Nø dern. bon de livraison;
                                                              ENC=Last Shipping No.];
                                                   Editable=No }
    { 63  ;   ;Shipping No. Series ;Code20        ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                IF "Shipping No. Series" <> '' THEN BEGIN
                                                                  WhseSetup.GET;
                                                                  WhseSetup.TESTFIELD("Posted Whse. Shipment Nos.");
                                                                  NoSeriesMgt.TestSeries(WhseSetup."Posted Whse. Shipment Nos.","Shipping No. Series");
                                                                END;
                                                                TESTFIELD("Shipping No.",'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              WITH WhseShptHeader DO BEGIN
                                                                WhseShptHeader := Rec;
                                                                WhseSetup.GET;
                                                                WhseSetup.TESTFIELD("Posted Whse. Shipment Nos.");
                                                                IF NoSeriesMgt.LookupSeries(WhseSetup."Posted Whse. Shipment Nos.","Shipping No. Series") THEN
                                                                  VALIDATE("Shipping No. Series");
                                                                Rec := WhseShptHeader;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Shipping No. Series;
                                                              ESM=N§  serie de env¡os;
                                                              FRC=S‚ries de nø livraison;
                                                              ENC=Shipping No. Series] }
    { 50000;  ;Source Type         ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Warehouse Shipment Line"."Source Type" WHERE (No.=FIELD(No.)));
                                                   CaptionML=[ENU=Source Type;
                                                              FRC=Type origine;
                                                              ENC=Source Type];
                                                   Editable=No }
    { 50001;  ;Source Subtype      ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Warehouse Shipment Line"."Source Subtype" WHERE (No.=FIELD(No.)));
                                                   CaptionML=[ENU=Source Subtype;
                                                              FRC=Sous-type origine;
                                                              ENC=Source Subtype];
                                                   OptionCaptionML=[ENU=0,1,2,3,4,5,6,7,8,9,10;
                                                                    FRC=0,1,2,3,4,5,6,7,8,9,10;
                                                                    ENC=0,1,2,3,4,5,6,7,8,9,10];
                                                   OptionString=0,1,2,3,4,5,6,7,8,9,10;
                                                   Editable=No }
    { 50002;  ;Source No.          ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Warehouse Shipment Line"."Source No." WHERE (No.=FIELD(No.)));
                                                   CaptionML=[ENU=Source No.;
                                                              FRC=Nø origine;
                                                              ENC=Source No.];
                                                   Editable=No }
    { 50003;  ;Combined To         ;Code20        ;DataClassification=ToBeClassified;
                                                   Description=TPZ2895 }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Location Code                            }
    {    ;Location Code,Document Status,Shipment Date }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Location@1002 : Record 14;
      WhseSetup@1003 : Record 5769;
      WhseShptHeader@1013 : Record 7320;
      WhseEmployee@14002801 : Record 7301;
      NoSeriesMgt@1001 : Codeunit 396;
      Text000@1011 : TextConst 'ENU=You cannot rename a %1.;ESM=No se puede cambiar el nombre a %1.;FRC=Vous ne pouvez pas renommer un %1.;ENC=You cannot rename a %1.';
      Text001@1010 : TextConst 'ENU=You cannot change the %1, because the document has one or more lines.;ESM=No puede cambiar el %1, porque el documento tiene una o m s l¡neas.;FRC=Vous ne pouvez pas modifier le %1 car le document contient une ou plusieurs ligne(s).;ENC=You cannot change the %1, because the document has one or more lines.';
      Text002@1000 : TextConst 'ENU=You must first set up user %1 as a warehouse employee.;ESM=Primero debe configurar usuario %1 como empleado almac‚n.;FRC=Vous devez d''abord ‚tablir l''utilisateur %1 … titre de magasinier.;ENC=You must first set up user %1 as a warehouse employee.';
      WmsManagement@1004 : Codeunit 7302;
      Text003@1005 : TextConst 'ENU=You are not allowed to use location code %1.;ESM=No le est  permitido utilizar %1 c¢d. almac‚n.;FRC=Vous n''ˆtes pas autoris‚ … utiliser le code emplacement %1.;ENC=You are not allowed to use location code %1.';
      ItemTrackingMgt@1006 : Codeunit 6500;
      HideValidationDialog@1007 : Boolean;
      Text006@1012 : TextConst 'ENU=You have changed %1 on the %2, but it has not been changed on the existing Warehouse Shipment Lines.\;ESM=Ha modificado %1 en la %2, pero no ha sido modificado en las l¡neas de env¡o de recep. almac‚n actuales.\;FRC=Vous avez modifi‚ l''enregistrement %1 dans la table %2, mais il n''a pas ‚t‚ modifi‚ sur les lignes Livraison de l''entrep“t existantes.\;ENC=You have changed %1 on the %2, but it has not been changed on the existing Warehouse Shipment Lines.\';
      Text007@1009 : TextConst 'ENU=You must update the existing Warehouse Shipment Lines manually.;ESM=Debe actualizar las l¡neas de env¡o de recep. almac‚n actuales manualmente.;FRC=Vous devez mettre manuellement … jour les lignes Livraison de l''entrep“t existantes.;ENC=You must update the existing Warehouse Shipment Lines manually.';
      Text008@1014 : TextConst 'ENU=You have modified the %1.\\Do you want to update the lines?;ESM=Ha modificado el %1.\\¨Desea actualizar las l¡neas?;FRC=Vous avez modifi‚ l''enregistrement %1.\\Souhaitez-vous mettre … jour les lignes ?;ENC=You have modified the %1.\\Do you want to update the lines?';

      Text009@1008 : TextConst
        'ENU=The items have been picked. If you delete the warehouse shipment, then the items will remain in the shipping area until you put them away.\Related item tracking information that is defined during the pick will be deleted.\Are you sure that you want to delete the warehouse shipment?',
        'ESM=Se han preparado los productos. Si elimina el env¡o de almac‚n, los productos permanecer n en el  rea de env¡o hasta que los ubique.\Se eliminar  la informaci¢n de seguimiento de productos definida durante la preparaci¢n.\¨Est  seguro de que desea eliminar el env¡o de almac‚n?',
        'FRC=Les articles ont ‚t‚ pr‚lev‚s. Si vous supprimez la livraison entrep“t, les articles vont rester dans la zone d''exp‚dition jusqu''a ce que vous les rangiez.\Les informations de tra‡abilit‚ associ‚es d‚finies lors du pr‚lŠvement seront supprim‚es.\Voulez-vous vraiment supprimer la livraison entrep“tÿ?',
        'ENC=The items have been picked. If you delete the warehouse shipment, then the items will remain in the shipping area until you put them away.\Related item tracking information that is defined during the pick will be deleted.\Are you sure that you want to delete the warehouse shipment?';

    [External]
    PROCEDURE AssistEdit@8(OldWhseShptHeader@1000 : Record 7320) : Boolean;
    VAR
      WhseShptHeader@1001 : Record 7320;
    BEGIN
      WhseSetup.GET;
      WITH WhseShptHeader DO BEGIN
        WhseShptHeader := Rec;
        WhseSetup.TESTFIELD("Whse. Ship Nos.");
        IF NoSeriesMgt.SelectSeries(
             WhseSetup."Whse. Ship Nos.",OldWhseShptHeader."No. Series","No. Series")
        THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := WhseShptHeader;
          EXIT(TRUE);
        END;
      END;
    END;

    [External]
    PROCEDURE SortWhseDoc@3();
    VAR
      WhseShptLine@1001 : Record 7321;
      SequenceNo@1000 : Integer;
    BEGIN
      WhseShptLine.SETRANGE("No.","No.");
      CASE "Sorting Method" OF
        "Sorting Method"::Item:
          WhseShptLine.SETCURRENTKEY("No.","Item No.");
        "Sorting Method"::Document:
          WhseShptLine.SETCURRENTKEY("No.","Source Document","Source No.");
        "Sorting Method"::"Shelf or Bin":
          BEGIN
            GetLocation("Location Code");
            IF Location."Bin Mandatory" THEN
              WhseShptLine.SETCURRENTKEY("No.","Bin Code")
            ELSE
              WhseShptLine.SETCURRENTKEY("No.","Shelf No.");
          END;
        "Sorting Method"::"Due Date":
          WhseShptLine.SETCURRENTKEY("No.","Due Date");
        "Sorting Method"::Destination:
          WhseShptLine.SETCURRENTKEY("No.","Destination Type","Destination No.");
      END;

      IF WhseShptLine.FIND('-') THEN BEGIN
        SequenceNo := 10000;
        REPEAT
          WhseShptLine."Sorting Sequence No." := SequenceNo;
          WhseShptLine.MODIFY;
          SequenceNo := SequenceNo + 10000;
        UNTIL WhseShptLine.NEXT = 0;
      END;
    END;

    [External]
    PROCEDURE GetDocumentStatus@15(LineNo@1003 : Integer) : Integer;
    VAR
      WhseShptLine@1001 : Record 7321;
    BEGIN
      WhseShptLine.SETRANGE("No.","No.");
      IF LineNo <> 0 THEN
        WhseShptLine.SETFILTER("Line No.",'<>%1',LineNo);
      IF NOT WhseShptLine.FINDFIRST THEN
        EXIT(WhseShptLine.Status::" ");

      WhseShptLine.SETRANGE(Status,WhseShptLine.Status::"Partially Shipped");
      IF WhseShptLine.FINDFIRST THEN
        EXIT(WhseShptLine.Status);

      WhseShptLine.SETRANGE(Status,WhseShptLine.Status::"Partially Picked");
      IF WhseShptLine.FINDFIRST THEN
        EXIT(WhseShptLine.Status);

      WhseShptLine.SETRANGE(Status,WhseShptLine.Status::"Completely Picked");
      IF WhseShptLine.FINDFIRST THEN BEGIN
        WhseShptLine.SETFILTER(Status,'<%1',WhseShptLine.Status::"Completely Picked");
        IF WhseShptLine.FINDFIRST THEN
          EXIT(WhseShptLine.Status::"Partially Picked");

        EXIT(WhseShptLine.Status);
      END;

      WhseShptLine.SETRANGE(Status,WhseShptLine.Status::"Completely Shipped");
      IF WhseShptLine.FINDFIRST THEN BEGIN
        WhseShptLine.SETFILTER(Status,'<%1',WhseShptLine.Status::"Completely Shipped");
        IF WhseShptLine.FINDFIRST THEN
          EXIT(WhseShptLine.Status::"Partially Shipped");

        EXIT(WhseShptLine.Status);
      END;

      EXIT(WhseShptLine.Status);
    END;

    LOCAL PROCEDURE MessageIfShptLinesExist@7(ChangedFieldName@1000 : Text[80]);
    VAR
      WhseShptLine@1001 : Record 7321;
    BEGIN
      WhseShptLine.SETRANGE("No.","No.");
      IF NOT WhseShptLine.ISEMPTY THEN
        IF NOT HideValidationDialog THEN
          MESSAGE(
            STRSUBSTNO(
              Text006,ChangedFieldName,TABLECAPTION) + Text007);
    END;

    LOCAL PROCEDURE GetLocation@10(LocationCode@1000 : Code[10]);
    BEGIN
      IF LocationCode = '' THEN
        Location.GetLocationSetup(LocationCode,Location)
      ELSE
        IF Location.Code <> LocationCode THEN
          Location.GET(LocationCode);
    END;

    [External]
    PROCEDURE LookupWhseShptHeader@1(VAR WhseShptHeader@1001 : Record 7320);
    BEGIN
      COMMIT;
      IF USERID <> '' THEN BEGIN
        WhseShptHeader.FILTERGROUP := 2;
        WhseShptHeader.SETRANGE("Location Code");
      END;
      IF PAGE.RUNMODAL(0,WhseShptHeader) = ACTION::LookupOK THEN;
      IF USERID <> '' THEN BEGIN
        WhseShptHeader.FILTERGROUP := 2;
        WhseShptHeader.SETRANGE("Location Code",WhseShptHeader."Location Code");
        WhseShptHeader.FILTERGROUP := 0;
      END;
    END;

    [External]
    PROCEDURE LookupLocation@4(VAR WhseShptHeader@1001 : Record 7320);
    VAR
      Location@1000 : Record 14;
    BEGIN
      COMMIT;
      Location.FILTERGROUP := 2;
      Location.SETRANGE(Code);
      IF PAGE.RUNMODAL(PAGE::"Locations with Warehouse List",Location) = ACTION::LookupOK THEN
        WhseShptHeader.VALIDATE("Location Code",Location.Code);
      Location.FILTERGROUP := 0;
    END;

    [External]
    PROCEDURE SetHideValidationDialog@14(NewHideValidationDialog@1000 : Boolean);
    BEGIN
      HideValidationDialog := NewHideValidationDialog;
    END;

    [External]
    PROCEDURE DeleteRelatedLines@5();
    VAR
      WhsePickRqst@1001 : Record 7325;
      WhseComment@1000 : Record 5770;
    BEGIN
      WhsePickRqst.SETRANGE("Document Type",WhsePickRqst."Document Type"::Shipment);
      WhsePickRqst.SETRANGE("Document No.","No.");
      IF NOT WhsePickRqst.ISEMPTY THEN
        WhsePickRqst.DELETEALL;

      WhseComment.SETRANGE("Table Name",WhseComment."Table Name"::"Whse. Shipment");
      WhseComment.SETRANGE(Type,WhseComment.Type::" ");
      WhseComment.SETRANGE("No.","No.");
      WhseComment.DELETEALL;
    END;

    LOCAL PROCEDURE DeleteWarehouseShipmentLines@6();
    VAR
      WhseShptLine@1001 : Record 7321;
      Confirmed@1002 : Boolean;
      TPZWhseValidationMgt@111002 : Codeunit 50037;
    BEGIN
      WhseShptLine.SETRANGE("No.","No.");
      IF WhseShptLine.FIND('-') THEN
        REPEAT
          IF WhseShptLine."Qty. Shipped" < WhseShptLine."Qty. Picked" THEN BEGIN
            IF NOT CONFIRM(Text009) THEN
              ERROR('');
            Confirmed := TRUE;
          END;
        UNTIL (WhseShptLine.NEXT = 0) OR Confirmed;

      ItemTrackingMgt.SetDeleteReservationEntries(Confirmed);

      IF WhseShptLine.FIND('-') THEN
        REPEAT
          IF WhseShptLine."Assemble to Order" THEN
            WhseShptLine.VALIDATE("Qty. to Ship",0);
          ItemTrackingMgt.DeleteWhseItemTrkgLines(DATABASE::"Warehouse Shipment Line",0,WhseShptLine."No.",
            '',0,WhseShptLine."Line No.",WhseShptLine."Location Code",TRUE);
          OnBeforeWhseShptLineDelete(WhseShptLine);//NAVEVENT
          WhseShptLine.DELETE;
        UNTIL WhseShptLine.NEXT = 0;
    END;

    [External]
    PROCEDURE FindFirstAllowedRec@2(Which@1000 : Text[1024]) : Boolean;
    VAR
      WhseShptHeader@1001 : Record 7320;
      WMSManagement@1002 : Codeunit 7302;
    BEGIN
      IF FIND(Which) THEN BEGIN
        WhseShptHeader := Rec;
        WHILE TRUE DO BEGIN
          IF WMSManagement.LocationIsAllowedToView("Location Code") THEN
            EXIT(TRUE);

          IF NEXT(1) = 0 THEN BEGIN
            Rec := WhseShptHeader;
            IF FIND(Which) THEN
              WHILE TRUE DO BEGIN
                IF WMSManagement.LocationIsAllowedToView("Location Code") THEN
                  EXIT(TRUE);

                IF NEXT(-1) = 0 THEN
                  EXIT(FALSE);
              END;
          END;
        END;
      END;
      EXIT(FALSE);
    END;

    [External]
    PROCEDURE FindNextAllowedRec@11(Steps@1000 : Integer) : Integer;
    VAR
      WhseShptHeader@1002 : Record 7320;
      WMSManagement@1001 : Codeunit 7302;
      RealSteps@1003 : Integer;
      NextSteps@1004 : Integer;
    BEGIN
      RealSteps := 0;
      IF Steps <> 0 THEN BEGIN
        WhseShptHeader := Rec;
        REPEAT
          NextSteps := NEXT(Steps / ABS(Steps));
          IF WMSManagement.LocationIsAllowedToView("Location Code") THEN BEGIN
            RealSteps := RealSteps + NextSteps;
            WhseShptHeader := Rec;
          END;
        UNTIL (NextSteps = 0) OR (RealSteps = Steps);
        Rec := WhseShptHeader;
        IF NOT FIND THEN;
      END;
      EXIT(RealSteps);
    END;

    [External]
    PROCEDURE ErrorIfUserIsNotWhseEmployee@13();
    VAR
      WhseEmployee@1000 : Record 7301;
    BEGIN
      IF USERID <> '' THEN BEGIN
        WhseEmployee.SETRANGE("User ID",USERID);
        IF WhseEmployee.ISEMPTY THEN
          ERROR(Text002,USERID);
      END;
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeWhseShptLineDelete@16(VAR WarehouseShipmentLine@1000 : Record 7321);
    BEGIN
    END;

    BEGIN
    {
      001 TPZ2895 PKS 07232020 Added new field Combined To for combned shipment
    }
    END.
  }
}

