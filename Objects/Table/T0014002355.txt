OBJECT Table 14002355 E.D.I. Element
{
  OBJECT-PROPERTIES
  {
    Date=07/13/20;
    Time=12:00:00 PM;
    Version List=SE0.62;
  }
  PROPERTIES
  {
    DataPerCompany=Yes;
    OnInsert=BEGIN
               IF Origin = Origin::" " THEN
                 "NAV Data Type" := "NAV Data Type"::Text;
               "Date Changed" := TODAY;
               "User ID" := USERID;

               IF InsertByPage THEN BEGIN
                 GetDocument;
                 IF EDIDocument."XML Document" THEN BEGIN
                   EDISegment.RESET;
                   EDISegment.SETRANGE("Trade Partner No.", "Trade Partner No.");
                   EDISegment.SETRANGE("Navision Document","Navision Document");
                   EDISegment.SETRANGE("EDI Document No.","EDI Document No.");
                   EDISegment.SETRANGE(Version,Version);
                   EDISegment.SETRANGE(Type,Type);
                   EDISegment.SETRANGE(Segment,Segment);
                   IF EDISegment.FIND('-') THEN
                     "Node Name" := EDISegment."Node Name";
                   IF "Attribute Name" = '' THEN
                     "Node Text" := TRUE
                   ELSE
                     "Node Text" := FALSE;
                 END;
                 InsertByPage := FALSE;
               END;
             END;

    OnModify=VAR
               EDIConditional@1240020001 : Record 14002363;
               EDIConditional2@1240020000 : Record 14002363;
               EDIDocument@1240020002 : Record 14002353;
             BEGIN
               IF InsertByPage THEN
                 EDIDocument.GET("Trade Partner No.","Navision Document","EDI Document No.",Version,Type);

               xRec.CALCFIELDS(Conditional);
               IF xRec.Conditional THEN BEGIN
                 EDIConditional.RESET;
                 EDIConditional.SETRANGE(EDIConditional."Trade Partner No.","Trade Partner No.");
                 EDIConditional.SETRANGE(EDIConditional."Navision Document","Navision Document");
                 EDIConditional.SETRANGE(EDIConditional."EDI Document No.","EDI Document No.");
                 EDIConditional.SETRANGE(EDIConditional.Version,Version);
                 EDIConditional.SETRANGE(EDIConditional.Type,Type);
                 EDIConditional.SETRANGE(EDIConditional.Segment,Segment);
                 EDIConditional.SETRANGE(EDIConditional.Element,xRec.Element);
                 IF EDIConditional.FIND('-') THEN
                   REPEAT
                     EDIConditional2 := EDIConditional;
                     EDIConditional2.RENAME(
                       EDIConditional2."Trade Partner No.",EDIConditional2."Navision Document",
                       EDIConditional2."EDI Document No.",EDIConditional2.Version,EDIConditional2.Type,
                       EDIConditional2."Processing Sequence",EDIConditional2.Segment,Element,
                       EDIConditional2."Cond. Element",EDIConditional2."Cond. Value",
                       EDIConditional2."Cond. Sequence");
                   UNTIL EDIConditional.NEXT = 0;
               END;

               "Date Changed" := TODAY;
               "User ID" := USERID;
             END;

    OnDelete=VAR
               EDIDocument@1240020000 : Record 14002353;
             BEGIN
               EDIConditional.RESET;
               EDIConditional.SETRANGE(EDIConditional."Trade Partner No.","Trade Partner No.");
               EDIConditional.SETRANGE(EDIConditional."Navision Document","Navision Document");
               EDIConditional.SETRANGE(EDIConditional."EDI Document No.","EDI Document No.");
               EDIConditional.SETRANGE(EDIConditional.Version,Version);
               EDIConditional.SETRANGE(EDIConditional.Type,Type);
               EDIConditional.SETRANGE(EDIConditional.Segment,Segment);
               EDIConditional.SETRANGE(EDIConditional.Element,Element);
               EDIConditional.DELETEALL;
             END;

    IncludeDataInDesc=No;
    CaptionML=ENU=E.D.I. Element;
    LookupPageID=Page14002355;
  }
  FIELDS
  {
    { 1   ;   ;Trade Partner No.   ;Code20        ;TableRelation="E.D.I. Segment"."Trade Partner No.";
                                                   CaptionML=ENU=Trade Partner No. }
    { 2   ;   ;Navision Document   ;Code10        ;TableRelation="E.D.I. Segment"."Navision Document" WHERE (Trade Partner No.=FIELD(Trade Partner No.));
                                                   CaptionML=ENU=Navision Document }
    { 3   ;   ;EDI Document No.    ;Code30        ;TableRelation="E.D.I. Segment"."EDI Document No." WHERE (Trade Partner No.=FIELD(Trade Partner No.),
                                                                                                            Navision Document=FIELD(Navision Document));
                                                   CaptionML=ENU=EDI Document No. }
    { 4   ;   ;Version             ;Code12        ;TableRelation="E.D.I. Segment".Version WHERE (Trade Partner No.=FIELD(Trade Partner No.),
                                                                                                 Navision Document=FIELD(Navision Document),
                                                                                                 EDI Document No.=FIELD(EDI Document No.));
                                                   CaptionML=ENU=Version }
    { 5   ;   ;Type                ;Option        ;TableRelation="E.D.I. Segment".Type WHERE (Trade Partner No.=FIELD(Trade Partner No.),
                                                                                              Navision Document=FIELD(Navision Document),
                                                                                              EDI Document No.=FIELD(EDI Document No.),
                                                                                              Version=FIELD(Version));
                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=" ,Import,Export";
                                                   OptionString=[ ,Import,Export] }
    { 6   ;   ;Segment             ;Code15        ;TableRelation="E.D.I. Segment".Segment WHERE (Trade Partner No.=FIELD(Trade Partner No.),
                                                                                                 Navision Document=FIELD(Navision Document),
                                                                                                 EDI Document No.=FIELD(EDI Document No.),
                                                                                                 Version=FIELD(Version),
                                                                                                 Type=FIELD(Type));
                                                   CaptionML=ENU=Segment }
    { 7   ;   ;Processing Sequence ;Integer       ;CaptionML=ENU=Processing Sequence }
    { 11  ;   ;Element             ;Code5         ;CaptionML=ENU=Element }
    { 12  ;   ;NAV Table No.       ;Integer       ;TableRelation="E.D.I. NAV Tables"."NAV Table No.";
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=NAV Table No. }
    { 13  ;   ;NAV Table Name      ;Text40        ;TableRelation=IF (Origin=FILTER(Navision)) "E.D.I. NAV Tables"."NAV Table Name";
                                                   OnValidate=BEGIN
                                                                EDIDocument.GET("Trade Partner No.","Navision Document","EDI Document No.",Version,Type);

                                                                IF "NAV Table Name" = '' THEN
                                                                  "NAV Table No." := 0;
                                                                EDINAVTables.SETRANGE(EDINAVTables."NAV Table Name","NAV Table Name");
                                                                IF EDINAVTables.FIND('-') THEN
                                                                  VALIDATE("NAV Table No.",EDINAVTables."NAV Table No.");

                                                                IF xRec."NAV Table Name" <> "NAV Table Name" THEN BEGIN
                                                                  xRec.Origin := Origin;
                                                                  xRec."NAV Table No." := "NAV Table No.";
                                                                  xRec."NAV Table Name" := "NAV Table Name";
                                                                  xRec.Element := Element;
                                                                  CASE EDIDocument."Mapping Mode" OF
                                                                    EDIDocument."Mapping Mode"::XML:
                                                                      BEGIN
                                                                        xRec."Attribute Name" := "Attribute Name";
                                                                        xRec.Attribute := Attribute;
                                                                        xRec."Node Text" := "Node Text";
                                                                        xRec."Node Name" := "Node Name";
                                                                        xRec.Length := Length
                                                                      END;
                                                                    ELSE
                                                                      xRec."Node Name" := "Node Name";
                                                                  END;
                                                                  Rec.INIT;
                                                                  Origin := xRec.Origin;
                                                                  "NAV Table No." := xRec."NAV Table No.";
                                                                  "NAV Table Name" := xRec."NAV Table Name";
                                                                  Element := xRec.Element;
                                                                  CASE EDIDocument."Mapping Mode" OF
                                                                    EDIDocument."Mapping Mode"::XML:
                                                                      BEGIN
                                                                        "Attribute Name" := xRec."Attribute Name";
                                                                        Attribute := xRec.Attribute;
                                                                        "Node Text" := xRec."Node Text";
                                                                        "Node Name" := xRec."Node Name";
                                                                        Length := xRec.Length;
                                                                      END;
                                                                    ELSE
                                                                      "Node Name" := xRec."Node Name";
                                                                  END;
                                                                END;
                                                              END;

                                                   TestTableRelation=No;
                                                   CaptionML=ENU=NAV Table Name }
    { 14  ;   ;Origin              ;Option        ;OnValidate=BEGIN
                                                                EDIDocument.GET("Trade Partner No.","Navision Document","EDI Document No.",Version,Type);

                                                                IF xRec.Origin <> Rec.Origin THEN BEGIN
                                                                  xRec.Origin := Rec.Origin;
                                                                  xRec.Element := Element;
                                                                  CASE EDIDocument."Mapping Mode" OF
                                                                    EDIDocument."Mapping Mode"::XML:
                                                                      BEGIN
                                                                        xRec."Attribute Name" := "Attribute Name";
                                                                        xRec.Attribute := Attribute;
                                                                        xRec."Node Text" := "Node Text";
                                                                        xRec."Node Name" := "Node Name";
                                                                        xRec.Length := Length;
                                                                      END;
                                                                    ELSE
                                                                      xRec."Node Name" := "Node Name";
                                                                  END;
                                                                  Rec.INIT;
                                                                  Rec.Origin := xRec.Origin;
                                                                  Element := xRec.Element;
                                                                  CASE EDIDocument."Mapping Mode" OF
                                                                    EDIDocument."Mapping Mode"::XML:
                                                                      BEGIN
                                                                        "Attribute Name" := xRec."Attribute Name";
                                                                        Attribute := xRec.Attribute;
                                                                        "Node Text" := xRec."Node Text";
                                                                        "Node Name" := xRec."Node Name";
                                                                        Length := xRec.Length;
                                                                      END;
                                                                    ELSE
                                                                      "Node Name" := xRec."Node Name";
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Origin;
                                                   OptionCaptionML=ENU=" ,Navision,EDI Out,EDI In,SDQ";
                                                   OptionString=[ ,Navision,EDI Out,EDI In,SDQ] }
    { 15  ;   ;NAV Field No.       ;Integer       ;TableRelation="E.D.I. NAV Fields"."NAV Field No." WHERE (NAV Table No.=FIELD(NAV Table No.));
                                                   OnValidate=BEGIN
                                                                IF "NAV Field No." <> 0 THEN BEGIN
                                                                  EDINAVFields.GET("NAV Table No.","Field Name");
                                                                  "NAV Data Type" := EDINAVFields.Type;
                                                                END ELSE
                                                                  "NAV Data Type" := "NAV Data Type"::"N/A";
                                                              END;

                                                   TestTableRelation=No;
                                                   CaptionML=ENU=NAV Field No. }
    { 16  ;   ;Field Name          ;Text40        ;TableRelation=IF (Origin=FILTER(Navision)) "E.D.I. NAV Fields"."NAV Field Name" WHERE (NAV Table No.=FIELD(NAV Table No.))
                                                                 ELSE IF (Origin=FILTER(EDI Out)) "E.D.I. Fields"."EDI Field Code" WHERE (Navision Document=FIELD(Navision Document),
                                                                                                                                          Field Type=CONST(EDI Out))
                                                                                                                                          ELSE IF (Origin=FILTER(EDI In)) "E.D.I. Fields"."EDI Field Code" WHERE (Field Type=FILTER(EDI In));
                                                   OnValidate=VAR
                                                                EDITemplate@1240020000 : Record 14002350;
                                                              BEGIN
                                                                EDIDocument.GET("Trade Partner No.","Navision Document","EDI Document No.",Version,Type);
                                                                EDITemplate.GET(EDIDocument."EDI Template Code");

                                                                IF xRec."Field Name" <> "Field Name" THEN BEGIN
                                                                  xRec.Origin := Origin;
                                                                  xRec."NAV Table No." := "NAV Table No.";
                                                                  xRec."NAV Table Name" := "NAV Table Name";
                                                                  xRec."Field Name" := "Field Name";
                                                                  xRec.Element := Element;
                                                                  CASE EDIDocument."Mapping Mode" OF
                                                                    EDIDocument."Mapping Mode"::XML:
                                                                      BEGIN
                                                                        xRec."Attribute Name" := "Attribute Name";
                                                                        xRec.Attribute := Attribute;
                                                                        xRec."Node Text" := "Node Text";
                                                                        xRec."Node Name" := "Node Name";
                                                                        xRec.Length := Length;
                                                                      END;
                                                                    ELSE
                                                                      xRec."Node Name" := "Node Name";
                                                                  END;
                                                                  Rec.INIT;
                                                                  Origin := xRec.Origin;
                                                                  "NAV Table No." := xRec."NAV Table No.";
                                                                  "NAV Table Name" := xRec."NAV Table Name";
                                                                  "Field Name" := xRec."Field Name";
                                                                  Element := xRec.Element;
                                                                  CASE EDIDocument."Mapping Mode" OF
                                                                    EDIDocument."Mapping Mode"::XML:
                                                                      BEGIN
                                                                        "Attribute Name" := xRec."Attribute Name";
                                                                        Attribute := xRec.Attribute;
                                                                        "Node Text" := xRec."Node Text";
                                                                        "Node Name" := xRec."Node Name";
                                                                        Length := xRec.Length;
                                                                      END;
                                                                    ELSE
                                                                      "Node Name" := xRec."Node Name";
                                                                  END;
                                                                END;
                                                                //
                                                                CASE Origin OF
                                                                  Origin::Navision:
                                                                    BEGIN
                                                                      EDINAVFields.GET("NAV Table No.","Field Name");
                                                                      "NAV Field No." := EDINAVFields."NAV Field No.";
                                                                      "NAV Data Type" := EDINAVFields.Type;
                                                                      CASE EDINAVFields.Type OF
                                                                        EDINAVFields.Type::Decimal:
                                                                          "Data Type" := "Data Type"::"Dec Implied";
                                                                        EDINAVFields.Type::Integer:
                                                                          "Data Type" := "Data Type"::Integer;
                                                                        EDINAVFields.Type::Text:
                                                                          BEGIN
                                                                            "Data Type" := "Data Type"::Text;
                                                                            CASE "Field Name" OF
                                                                              'Time':
                                                                                BEGIN
                                                                                  IF EDITemplate."File Format" = EDITemplate."File Format"::XML THEN
                                                                                    VALIDATE(Length,5)
                                                                                  ELSE
                                                                                    VALIDATE(Length,4);
                                                                                END;
                                                                            END;
                                                                          END;
                                                                        EDINAVFields.Type::Code:
                                                                          "Data Type" := "Data Type"::Text;
                                                                        EDINAVFields.Type::Date:
                                                                          BEGIN
                                                                            "Data Type" := "Data Type"::"Date YYYYMMDD";
                                                                            IF EDIDocument.GET(
                                                                              "Trade Partner No.","Navision Document","EDI Document No.",Version,Type)
                                                                            THEN BEGIN
                                                                              IF (EDITemplate.GET(EDIDocument."EDI Template Code")) AND
                                                                                 (EDITemplate."File Format" = EDITemplate."File Format"::XML)
                                                                              THEN
                                                                                VALIDATE(Length,10)
                                                                              ELSE
                                                                                VALIDATE(Length,8);
                                                                            END ELSE
                                                                              VALIDATE(Length,8);
                                                                          END;
                                                                        EDINAVFields.Type::Time:
                                                                          BEGIN
                                                                            "Data Type" := "Data Type"::"Time HHMM";
                                                                            VALIDATE(Length,4);
                                                                          END;
                                                                        EDINAVFields.Type::DateTime:
                                                                          BEGIN
                                                                            "Data Type" := "Data Type"::"DateTime YYYYMMDDHHMM";
                                                                            VALIDATE(Length,12);
                                                                          END;
                                                                      END;
                                                                    END;
                                                                  Origin::"EDI Out":
                                                                    BEGIN
                                                                      EDIFields.GET("Navision Document",EDIFields."Field Type"::"EDI Out","Field Name");
                                                                      "NAV Field No." := 0;
                                                                      "NAV Data Type" := EDIFields."Data Type";
                                                                      CASE EDIFields."Data Type" OF
                                                                        EDIFields."Data Type"::Decimal:
                                                                          "Data Type" := "Data Type"::"Dec Implied";
                                                                        EDIFields."Data Type"::Integer:
                                                                          "Data Type" := "Data Type"::Integer;
                                                                        EDIFields."Data Type"::Text:
                                                                          "Data Type" := "Data Type"::Text;
                                                                        EDIFields."Data Type"::Code:
                                                                          "Data Type" := "Data Type"::Text;
                                                                        EDIFields."Data Type"::Date:
                                                                          BEGIN
                                                                            "Data Type" := "Data Type"::"Date YYYYMMDD";
                                                                            VALIDATE(Length,8);
                                                                          END;
                                                                        EDINAVFields.Type::Time:
                                                                          "Data Type" := "Data Type"::"Time HHMM";
                                                                        EDINAVFields.Type::DateTime:
                                                                          "Data Type" := "Data Type"::"DateTime YYYYMMDDHHMM";
                                                                      END;
                                                                    END;
                                                                  Origin::SDQ:
                                                                    IF ("Field Name" <> '') AND
                                                                       ("Field Name" <> 'SDQ SHIP TO') AND
                                                                       ("Field Name" <> 'SDQ SELL TO') AND
                                                                       ("Field Name" <> 'SDQ SHIP FOR')
                                                                    THEN
                                                                      ERROR(
                                                                        Text001 +
                                                                        '  SDQ SHIP TO\' +
                                                                        '  SDQ SELL TO\' +
                                                                        '  SDQ SHIP FOR\');
                                                                ELSE BEGIN
                                                                    "NAV Field No." := 0;
                                                                    "NAV Data Type" := "NAV Data Type"::"N/A";
                                                                  END;
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              FieldName@1240020000 : Text[40];
                                                            BEGIN
                                                              CASE Origin OF
                                                                Origin::Navision:
                                                                  BEGIN
                                                                    FieldName := LookupNavisionField;
                                                                    IF FieldName <> '' THEN
                                                                      VALIDATE("Field Name",FieldName);
                                                                  END;
                                                                Origin::"EDI In":
                                                                  VALIDATE("Field Name",LookupEDIIn);
                                                                Origin::"EDI Out":
                                                                  BEGIN
                                                                    FieldName := LookupEDIOut;
                                                                    IF FieldName <> '' THEN
                                                                      VALIDATE("Field Name",FieldName);
                                                                  END;
                                                              END;
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Field Name;
                                                   Editable=Yes }
    { 17  ;   ;NAV Data Type       ;Option        ;InitValue=Text;
                                                   CaptionML=ENU=NAV Data Type;
                                                   OptionCaptionML=ENU=Integer,Text,Code,Decimal,Option,Boolean,Date,Time,Binary,BLOB,N/A,DateTime;
                                                   OptionString=Integer,Text,Code,Decimal,Option,Boolean,Date,Time,Binary,BLOB,N/A,DateTime;
                                                   Editable=No }
    { 18  ;   ;Length              ;Integer       ;OnValidate=BEGIN
                                                                IF Length > 250 THEN
                                                                  ERROR(Text002);
                                                                BegPos := 1;
                                                                xEDIElement.RESET;
                                                                xEDIElement.SETRANGE(xEDIElement."Trade Partner No.","Trade Partner No.");
                                                                xEDIElement.SETRANGE(xEDIElement."EDI Document No.","EDI Document No.");
                                                                xEDIElement.SETRANGE(xEDIElement.Version,Version);
                                                                xEDIElement.SETRANGE(xEDIElement.Type,Type);
                                                                xEDIElement.SETRANGE(xEDIElement.Segment,Segment);
                                                                IF xEDIElement.FIND('-') THEN
                                                                  REPEAT
                                                                    IF ("Processing Sequence" = xEDIElement."Processing Sequence") THEN BEGIN
                                                                      "Beginning Position" := BegPos;
                                                                      BegPos := BegPos + Length;
                                                                      "End Position" := BegPos - 1;
                                                                    END ELSE BEGIN
                                                                      xEDIElement."Beginning Position" := BegPos;
                                                                      BegPos := BegPos + xEDIElement.Length;
                                                                      xEDIElement."End Position" := BegPos - 1;
                                                                      xEDIElement.MODIFY;
                                                                    END;
                                                                  UNTIL xEDIElement.NEXT = 0;

                                                                IF "Node Name" <> '' THEN
                                                                  IF "Element Mapping Error" THEN
                                                                    "Element Mapping Error" := FALSE;
                                                              END;

                                                   CaptionML=ENU=Length }
    { 19  ;   ;Beginning Position  ;Integer       ;CaptionML=ENU=Beginning Position;
                                                   Editable=No }
    { 20  ;   ;End Position        ;Integer       ;CaptionML=ENU=End Position;
                                                   Editable=No }
    { 21  ;   ;Minimum Length      ;Integer       ;CaptionML=ENU=Minimum Length }
    { 22  ;   ;Data Type           ;Option        ;OnValidate=BEGIN
                                                                CASE "Data Type" OF
                                                                  "Data Type"::"Dec Implied":
                                                                    "NAV Data Type" := "NAV Data Type"::Decimal;
                                                                  "Data Type"::"Dec Explicit":
                                                                    "NAV Data Type" := "NAV Data Type"::Decimal;
                                                                  "Data Type"::Integer:
                                                                    "NAV Data Type" := "NAV Data Type"::Integer;
                                                                  "Data Type"::"Date YYMMDD","Data Type"::"Date YYYYMMDD","Data Type"::"Date DDMMYY","Data Type"::"Date DDMMYYYY",
                                                                  "Data Type"::"Date YYYYDDMM","Data Type"::"Date MMDDYY","Data Type"::"Date MMDDYYYY":
                                                                    "NAV Data Type" := "NAV Data Type"::Date;
                                                                  "Data Type"::"Time HHMM":
                                                                    "NAV Data Type" := "NAV Data Type"::Time;
                                                                  "Data Type"::"DateTime YYYYMMDDHHMM":
                                                                    "NAV Data Type" := "NAV Data Type"::DateTime;
                                                                  "Data Type"::"Date XML DateTime":
                                                                    "NAV Data Type" := "NAV Data Type"::Date;
                                                                  "Data Type"::"DateTime XML":
                                                                    "NAV Data Type" := "NAV Data Type"::DateTime;
                                                                  "Data Type"::"Date UTC":
                                                                    "NAV Data Type" := "NAV Data Type"::Date;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Data Type;
                                                   OptionCaptionML=ENU=Text,Dec Implied,Dec Explicit,Integer,Date YYMMDD,Date YYYYMMDD,Date DDMMYY,Date DDMMYYYY,Date YYYYDDMM,Date MMDDYY,Time HHMM,DateTime YYYYMMDDHHMM,Date MMDDYYYY,Date XML DateTime,DateTime XML,Date UTC;
                                                   OptionString=Text,Dec Implied,Dec Explicit,Integer,Date YYMMDD,Date YYYYMMDD,Date DDMMYY,Date DDMMYYYY,Date YYYYDDMM,Date MMDDYY,Time HHMM,DateTime YYYYMMDDHHMM,Date MMDDYYYY,Date XML DateTime,DateTime XML,Date UTC }
    { 23  ;   ;Decimals            ;Integer       ;CaptionML=ENU=Decimals }
    { 24  ;   ;Justify             ;Option        ;CaptionML=ENU=Justify;
                                                   OptionCaptionML=ENU=" ,Left,Right,Right Zero Fill";
                                                   OptionString=[ ,Left,Right,Right Zero Fill] }
    { 25  ;   ;Fixed Value         ;Code80        ;OnValidate=BEGIN
                                                                IF Origin <> Origin::" " THEN BEGIN
                                                                  "Fixed Value" := '';
                                                                  MESSAGE(Text003);
                                                                END ELSE BEGIN
                                                                  IF Length = 0 THEN
                                                                    VALIDATE(Length,STRLEN("Fixed Value"));
                                                                  Decimals := 0;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Fixed Value }
    { 26  ;   ;Trigger             ;Boolean       ;CaptionML=ENU=Trigger }
    { 27  ;   ;Viewable            ;Boolean       ;CaptionML=ENU=Viewable }
    { 28  ;   ;Item Description    ;Boolean       ;CaptionML=ENU=Item Description }
    { 29  ;   ;Conditional         ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("E.D.I. Conditional" WHERE (Trade Partner No.=FIELD(Trade Partner No.),
                                                                                                 Navision Document=FIELD(Navision Document),
                                                                                                 EDI Document No.=FIELD(EDI Document No.),
                                                                                                 Version=FIELD(Version),
                                                                                                 Type=FIELD(Type),
                                                                                                 Processing Sequence=FIELD(Processing Sequence),
                                                                                                 Segment=FIELD(Segment),
                                                                                                 Element=FIELD(Element)));
                                                   CaptionML=ENU=Conditional;
                                                   Editable=No }
    { 30  ;   ;Print               ;Boolean       ;CaptionML=ENU=Print }
    { 31  ;   ;Column              ;Integer       ;CaptionML=ENU=Column }
    { 32  ;   ;Columns Per Line    ;Integer       ;CaptionML=ENU=Columns Per Line }
    { 33  ;   ;New Line            ;Boolean       ;CaptionML=ENU=New Line }
    { 34  ;   ;Bypass Segment if Blank;Boolean    ;CaptionML=ENU=Bypass Segment if Blank }
    { 35  ;   ;Element Mapping Error;Boolean      ;CaptionML=ENU=Element Mapping Error }
    { 36  ;   ;Conditional Mapping Error;Boolean  ;FieldClass=FlowField;
                                                   CalcFormula=Exist("E.D.I. Conditional" WHERE (Trade Partner No.=FIELD(Trade Partner No.),
                                                                                                 Navision Document=FIELD(Navision Document),
                                                                                                 EDI Document No.=FIELD(EDI Document No.),
                                                                                                 Version=FIELD(Version),
                                                                                                 Type=FIELD(Type),
                                                                                                 Segment=FIELD(Segment),
                                                                                                 Element=FIELD(Element),
                                                                                                 Conditional Mapping Error=CONST(Yes)));
                                                   CaptionML=ENU=Conditional Mapping Error;
                                                   Editable=No }
    { 37  ;   ;Use Component Delimiter;Boolean    ;CaptionML=ENU=Use Component Delimiter }
    { 38  ;   ;Bypass Segment if Not Blank;Boolean;CaptionML=ENU=Bypass Segment if Not Blank }
    { 39  ;   ;Bypass Blank Trailing Element;Boolean;
                                                   CaptionML=ENU=Bypass Blank Trailing Element }
    { 40  ;   ;Copy String Position;Integer       ;CaptionML=ENU=Copy String Position }
    { 41  ;   ;Copy String Length  ;Integer       ;CaptionML=ENU=Copy String Length }
    { 42  ;   ;Append to Field Contents;Boolean   ;CaptionML=ENU=Append to Field Contents }
    { 43  ;   ;Insert into Field Contents;Boolean ;CaptionML=ENU=Insert into Field Contents }
    { 44  ;   ;Insert Position     ;Integer       ;CaptionML=ENU=Insert Position }
    { 45  ;   ;Reverse Sign        ;Boolean       ;CaptionML=ENU=Reverse Sign }
    { 47  ;   ;Forecast Date Formula;DateFormula  ;CaptionML=ENU=Date Formula }
    { 48  ;   ;Reverse Cross Reference;Boolean    ;OnValidate=BEGIN
                                                                TESTFIELD("General Cross Reference No.");
                                                              END;

                                                   CaptionML=ENU=Reverse Cross Reference }
    { 49  ;   ;General Cross Reference No.;Integer;OnLookup=BEGIN
                                                              EDIGeneralCrossRefType.RESET;
                                                              IF PAGE.RUNMODAL(0,EDIGeneralCrossRefType)IN [ACTION::LookupOK,ACTION::OK] THEN
                                                                "General Cross Reference No." := EDIGeneralCrossRefType."Cross Reference";
                                                            END;

                                                   CaptionML=ENU=General Cross Reference No. }
    { 50  ;   ;Wrap Text           ;Boolean       ;CaptionML=ENU=Wrap Text }
    { 51  ;   ;Round Value         ;Boolean       ;OnValidate=BEGIN
                                                                IF "Round Direction" = "Round Direction"::" " THEN
                                                                  ERROR(Text004);
                                                              END;

                                                   CaptionML=ENU=Round Value }
    { 52  ;   ;Round Direction     ;Option        ;CaptionML=ENU=Round Direction;
                                                   OptionCaptionML=ENU=" ,Nearest Value,Up,Down";
                                                   OptionString=[ ,Nearest Value,Up,Down] }
    { 53  ;   ;Line Type           ;Option        ;CaptionML=ENU=Line Type;
                                                   OptionCaptionML=ENU=" ,G/L Account,Resource";
                                                   OptionString=[ ,G/L Account,Resource] }
    { 54  ;   ;Separator Type      ;Option        ;CaptionML=ENU=Separator Type;
                                                   OptionCaptionML=ENU=" ,Space,Hyphen";
                                                   OptionString=[ ,Space,Hyphen] }
    { 55  ;   ;Format Numeric      ;Boolean       ;CaptionML=ENU=Format Numeric }
    { 56  ;   ;Format AlphaNumeric ;Boolean       ;CaptionML=ENU=Format AlphaNumeric }
    { 57  ;   ;Validation Type     ;Option        ;CaptionML=ENU=Validation Type;
                                                   OptionCaptionML=ENU=" ,Purchase Order No.,Payment Terms";
                                                   OptionString=[ ,Purchase Order No.,Payment Terms] }
    { 58  ;   ;Substitution Value  ;Text250       ;CaptionML=ENU=Substitution Value }
    { 59  ;   ;Multiplier          ;Boolean       ;CaptionML=ENU=Multiplier }
    { 60  ;   ;Lowercase           ;Boolean       ;CaptionML=ENU=Lowercase }
    { 61  ;   ;Blank Zero          ;Boolean       ;CaptionML=ENU=Blank Zero }
    { 62  ;   ;Cross Reference ID Type;Option     ;CaptionML=ENU=Cross Reference ID Type;
                                                   OptionCaptionML=ENU=" ,Cust,Item,UOM,Shipping Agent,Payment Terms,Shipping Payment Type,Shipment Method,Shipping Advice,Return Reason";
                                                   OptionString=[ ,Cust,Item,UOM,Shipping Agent,Payment Terms,Shipping Payment Type,Shipment Method,Shipping Advice,Return Reason] }
    { 63  ;   ;Blank Prev. Element if Blank;Boolean;
                                                   CaptionML=ENU=Blank Prev. Element if Blank }
    { 64  ;   ;Format String       ;Text100       ;CaptionML=ENU=Format String }
    { 66  ;   ;Disable General Cross Ref.;Boolean ;CaptionML=ENU=Disable General Cross Reference }
    { 200 ;   ;Date Changed        ;Date          ;CaptionML=ENU=Date Changed }
    { 201 ;   ;User ID             ;Code50        ;CaptionML=ENU=User ID }
    { 300 ;   ;XML Fixed Value     ;Text250       ;OnValidate=BEGIN
                                                                IF Origin <> Origin::" " THEN BEGIN
                                                                  "Fixed Value" := '';
                                                                  MESSAGE(Text003);
                                                                END ELSE BEGIN
                                                                  IF Length = 0 THEN
                                                                    VALIDATE(Length,STRLEN("Fixed Value"));
                                                                  Decimals := 0;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Fixed Value }
    { 303 ;   ;Node Text           ;Boolean       ;OnValidate=BEGIN
                                                                IF ("Attribute Name" <> '') AND ("Node Text" = TRUE) THEN
                                                                  ERROR(Text005);
                                                              END;

                                                   CaptionML=ENU=Node Text }
    { 304 ;   ;Node Name           ;Text250       ;CaptionML=ENU=Node Name;
                                                   Editable=No }
    { 305 ;   ;Attribute Name      ;Text250       ;OnValidate=BEGIN
                                                                IF "Attribute Name" = '' THEN BEGIN
                                                                  Attribute := FALSE;
                                                                  "Node Text" := TRUE;
                                                                END ELSE BEGIN
                                                                  Attribute := TRUE;
                                                                  "Node Text" := FALSE;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Attribute Name }
    { 306 ;   ;Attribute           ;Boolean       ;CaptionML=ENU=Attribute;
                                                   Editable=No }
    { 307 ;   ;Time Zone           ;Option        ;OnValidate=BEGIN
                                                                IF "Time Zone" <> "Time Zone"::" " THEN
                                                                  IF ("Data Type" <> "Data Type"::"Date UTC") AND
                                                                     ("Data Type" <> "Data Type"::"Date XML DateTime") AND
                                                                     ("Data Type" <> "Data Type"::"DateTime XML")
                                                                  THEN
                                                                    ERROR(Text14099300);
                                                              END;

                                                   CaptionML=ENU=Time Zone;
                                                   OptionCaptionML=ENU=" ,Z,Offset";
                                                   OptionString=[ ,Z,Offset] }
    { 308 ;   ;Response ID Substitution;Option    ;CaptionML=ENU=Response ID Substitution;
                                                   OptionCaptionML=ENU=" ,ResponseID 1,ResponseID 2,ResponseID 3,ResponseID 4,ResponseID 5";
                                                   OptionString=[ ,ResponseID 1,ResponseID 2,ResponseID 3,ResponseID 4,ResponseID 5] }
    { 309 ;   ;Document Namespace  ;Boolean       ;OnValidate=VAR
                                                                EDISegment@1240020000 : Record 14002354;
                                                              BEGIN
                                                                IF "Document Namespace" THEN BEGIN
                                                                  EDISegment.GET(
                                                                    "Trade Partner No.","Navision Document","EDI Document No.",Version,Type,
                                                                    Segment,Segment);
                                                                  EDISegment.Namespace := "XML Fixed Value";
                                                                  EDISegment.MODIFY;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Document Namespace }
  }
  KEYS
  {
    {    ;Trade Partner No.,Navision Document,EDI Document No.,Version,Type,Segment,Processing Sequence;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      EDINAVTables@1240030001 : Record 14002351;
      EDINAVFields@1240030002 : Record 14002352;
      EDIFields@1240030003 : Record 14002356;
      xEDIElement@1240030004 : Record 14002355;
      EDISegment@1240020001 : Record 14002354;
      EDIConditional@1240030005 : Record 14002363;
      EDIGeneralCrossRefType@1240020000 : Record 14000376;
      EDIDocument@1240020002 : Record 14002353;
      BegPos@1240030006 : Integer;
      Text001@1001 : TextConst 'ENU=If Origin is SDQ the Field Name must be one of the following:\';
      Text002@1002 : TextConst 'ENU=Maximum length for an element is 250 characters.';
      Text003@1003 : TextConst 'ENU=Origin must be blank to enter a fixed value.';
      Text004@1004 : TextConst 'ENU=Round Direction must not be blank.';
      Text005@1240020004 : TextConst 'ENU=Node Text cannot be enabled when Attribute Name has a value.';
      InsertByPage@1240020003 : Boolean;
      Text14099300@1240020005 : TextConst 'ENU=Data Type must be Date UTC, Date XML DateTime or DateTime XML.';

    PROCEDURE LookupEDIIn@1240020000() : Text[40];
    BEGIN
      EDIFields.RESET;
      EDIFields.SETCURRENTKEY("Field Type","EDI Field Code");
      EDIFields.SETRANGE("Field Type",EDIFields."Field Type"::"EDI In");
      IF PAGE.RUNMODAL(0,EDIFields) IN [ACTION::LookupOK,ACTION::OK] THEN
        EXIT(EDIFields."EDI Field Code")
      ELSE
        EXIT("Field Name");
    END;

    PROCEDURE LookupEDIOut@1240020001() : Text[40];
    BEGIN
      EDIFields.RESET;
      EDIFields.SETCURRENTKEY("Field Type","EDI Field Code");
      EDIFields.SETRANGE("Field Type",EDIFields."Field Type"::"EDI Out");
      EDIFields.SETRANGE("Navision Document","Navision Document");
      IF PAGE.RUNMODAL(0,EDIFields) IN [ACTION::LookupOK,ACTION::OK] THEN
        EXIT(EDIFields."EDI Field Code")
      ELSE
        EXIT("Field Name");
    END;

    PROCEDURE LookupNavisionField@1240020002() : Text[40];
    BEGIN
      EDINAVFields.RESET;
      EDINAVFields.SETCURRENTKEY("NAV Table No.","NAV Field No.");
      EDINAVFields.SETRANGE("NAV Table No.","NAV Table No.");
      IF PAGE.RUNMODAL(0,EDINAVFields) IN [ACTION::LookupOK,ACTION::OK] THEN
        EXIT(EDINAVFields."NAV Field Name")
      ELSE
        EXIT("Field Name");
    END;

    LOCAL PROCEDURE GetDocument@14099302();
    BEGIN
      EDIDocument.GET("Trade Partner No.","Navision Document","EDI Document No.",Version,Type);
    END;

    PROCEDURE InsertedByPage@1240020003(ByPage@1240020000 : Boolean);
    BEGIN
      InsertByPage := ByPage;
    END;

    BEGIN
    END.
  }
}

