OBJECT Table 14000602 Receive Line
{
  OBJECT-PROPERTIES
  {
    Date=06/28/17;
    Time=12:00:00 PM;
    Version List=SE0.53.20;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CheckModify;
               GetReceive;
               "Source Type" := Receive."Source Type";
               "Source Subtype" := Receive."Source Subtype";
               "Source ID" := Receive."Source ID";
               "Location Code" := Receive."Location Code";
               CalcValue(FALSE,FALSE);
             END;

    OnModify=BEGIN
               CheckModify;
             END;

    OnDelete=BEGIN
               CheckModify;
             END;

    CaptionML=ENU=Receive Line;
    LookupPageID=Page14000609;
    DrillDownPageID=Page14000609;
  }
  FIELDS
  {
    { 1   ;   ;Receive No.         ;Code20        ;TableRelation=Receive;
                                                   CaptionML=ENU=Receive No. }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 11  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                GetReceive;
                                                                IF Type <> xRec.Type THEN BEGIN
                                                                  xRec.Type := Type;
                                                                  xRec."Source Type" := "Source Type";
                                                                  xRec."Source Subtype" := "Source Subtype";
                                                                  xRec."Source ID" := "Source ID";
                                                                  INIT;
                                                                  Type := xRec.Type;
                                                                  "Source Type" := xRec."Source Type";
                                                                  "Source Subtype" := xRec."Source Subtype";
                                                                  "Source ID" := xRec."Source ID";
                                                                END;
                                                                "Location Code" := Receive."Location Code";
                                                              END;

                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=" ,Account (G/L),Item,,,,,,,,Receive";
                                                   OptionString=[ ,Account (G/L),Item,,,,,,,,Receive] }
    { 12  ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST("Account (G/L)")) "G/L Account"
                                                                 ELSE IF (Type=CONST(Receive)) Receive;
                                                   OnValidate=BEGIN
                                                                GetReceive;
                                                                "Source Type" := Receive."Source Type";
                                                                "Source Subtype" := Receive."Source Subtype";
                                                                "Source ID" := Receive."Source ID";

                                                                IF ("No." <> xRec."No.") AND (xRec."No." <> '') THEN BEGIN
                                                                  xRec.Type := Type;
                                                                  xRec."No." := "No.";
                                                                  INIT;
                                                                  Type := xRec.Type;
                                                                  "No." := xRec."No.";
                                                                  "Source Type" := Receive."Source Type";
                                                                  "Source Subtype" := Receive."Source Subtype";
                                                                  "Source ID" := Receive."Source ID";
                                                                END;
                                                                "Location Code" := Receive."Location Code";

                                                                IF "No." <> '' THEN BEGIN
                                                                  CASE Type OF
                                                                    Type::"Account (G/L)":
                                                                      BEGIN
                                                                        GLAccount.GET("No.");
                                                                        Description := GLAccount.Name;

                                                                        CalcValue(FALSE,FALSE);
                                                                      END;
                                                                    Type::Item:
                                                                      BEGIN
                                                                        Item.GET("No.");
                                                                        Description := Item.Description;
                                                                        EShipTrackingCode.GetEShipTrackingCodeItem(Item);
                                                                        "Receive Serial Number" := EShipTrackingCode."Receive Serial Number";
                                                                        "Receive Lot Number" := EShipTrackingCode."Receive Lot Number";
                                                                        "Receive Warranty Date" := EShipTrackingCode."Receive Warranty Date";
                                                                        "Receive Expiration Date" := EShipTrackingCode."Receive Expiration Date";

                                                                        "LTL Freight Type" := Item."LTL Freight Type";
                                                                        "Use Unit of measure Dimensions" := Item."Use Unit of Measure Dimensions";
                                                                        VALIDATE("Item UPC/EAN Number",Item."Item UPC/EAN Number");

                                                                        ReceiveRule.GetReceiveRule("No.");
                                                                        "Action Required" := ReceiveRule.ActionRequired(Item);

                                                                        CalcValue(FALSE,FALSE);
                                                                      END;
                                                                    Type::Receive:
                                                                      BEGIN
                                                                        IF Receive."Multi Document Receive" THEN BEGIN
                                                                          Receive2.GET("No.");
                                                                          Receive2.TESTFIELD(Closed,TRUE);
                                                                          IF Receive2."Original Receive No." <> '' THEN
                                                                            IF Receive2."Original Receive No." <> Receive2."No." THEN
                                                                              Receive2.GET(Receive2."Original Receive No.");
                                                                          Receive2.TESTFIELD("Multi Document Receive",TRUE);
                                                                          Receive2.TESTFIELD("Multi Document No.",Receive."Multi Document No.");
                                                                        END ELSE BEGIN
                                                                          Receive2.GET("No.");
                                                                          Receive2.TESTFIELD("Source Type","Source Type");
                                                                          Receive2.TESTFIELD("Source Subtype","Source Subtype");
                                                                          Receive2.TESTFIELD("Source ID","Source ID");
                                                                          Receive2.TESTFIELD("Multi Document Receive",FALSE);
                                                                        END;
                                                                        Receive2.TESTFIELD(Closed,TRUE);
                                                                        Receive2.TESTFIELD("Receive No.",1);
                                                                        Receive2.TESTFIELD("Total Receives",1);
                                                                        Receive2.TESTFIELD("External Tracking No.",'');

                                                                        IF Receive2.Description <> '' THEN
                                                                          Description := Receive2.Description
                                                                        ELSE
                                                                          Description := Receive2."No.";
                                                                        VALIDATE(Quantity,1);
                                                                        "LTL Freight Type" := Receive2."LTL Freight Type";
                                                                      END;
                                                                  END;
                                                                END ELSE
                                                                  INIT;
                                                              END;

                                                   OnLookup=BEGIN
                                                              GetReceive;
                                                              "Source Type" := Receive."Source Type";
                                                              "Source Subtype" := Receive."Source Subtype";
                                                              "Source ID" := Receive."Source ID";

                                                              CASE Type OF
                                                                Type::"Account (G/L)",Type::Item:
                                                                  BEGIN
                                                                    IF "Source ID" <> '' THEN BEGIN
                                                                      IF ReceiveControl.LookupSourceLine(
                                                                           Receive."Multi Document Receive",Receive."Multi Document No.",
                                                                           Type,'',"Source Type","Source Subtype","Source ID")
                                                                      THEN BEGIN
                                                                        VALIDATE("No.",ReceiveControl."Input No.");
                                                                        VALIDATE("Variant Code",ReceiveControl."Input Variant Code");
                                                                        VALIDATE("Unit of Measure Code",ReceiveControl."Input Unit of Measure Code");
                                                                      END;
                                                                    END ELSE
                                                                      CASE Type OF
                                                                        Type::"Account (G/L)":
                                                                          IF PAGE.RUNMODAL(0,GLAccount) = ACTION::LookupOK THEN
                                                                            VALIDATE("No.",GLAccount."No.");
                                                                        Type::Item:
                                                                          IF PAGE.RUNMODAL(0,Item) = ACTION::LookupOK THEN
                                                                            VALIDATE("No.",Item."No.");
                                                                      END;
                                                                  END;
                                                                Type::Receive:
                                                                  BEGIN
                                                                    Receive.TESTFIELD("Source ID");
                                                                    Receive.TESTFIELD("Multi Document Receive",FALSE);

                                                                    Receive2.RESET;
                                                                    Receive2.SETCURRENTKEY("Source Type","Source Subtype","Source ID");
                                                                    Receive2.SETRANGE("Source Type","Source Type");
                                                                    Receive2.SETRANGE("Source Subtype","Source Subtype");
                                                                    Receive2.SETRANGE("Source ID","Source ID");
                                                                    Receive2.SETRANGE(Closed,TRUE);
                                                                    IF PAGE.RUNMODAL(0,Receive2) = ACTION::LookupOK THEN
                                                                      VALIDATE("No.",Receive2."No.");
                                                                  END;
                                                              END;
                                                            END;

                                                   CaptionML=ENU=No. }
    { 13  ;   ;Variant Code        ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Variant".Code WHERE (Item No.=FIELD(No.));
                                                   OnValidate=BEGIN
                                                                IF "Variant Code" <> '' THEN BEGIN
                                                                  TESTFIELD(Type,Type::Item);
                                                                  TESTFIELD("No.");
                                                                END;

                                                                CalcValue(FALSE,TRUE);
                                                              END;

                                                   OnLookup=BEGIN
                                                              TESTFIELD(Type,Type::Item);
                                                              TESTFIELD("No.");

                                                              GetReceive;
                                                              "Source Type" := Receive."Source Type";
                                                              "Source Subtype" := Receive."Source Subtype";
                                                              "Source ID" := Receive."Source ID";

                                                              CASE Type OF
                                                                Type::Item:
                                                                  BEGIN
                                                                    IF "Source ID" <> '' THEN BEGIN
                                                                      IF ReceiveControl.LookupSourceLine(
                                                                           Receive."Multi Document Receive",Receive."Multi Document No.",
                                                                           Type,"No.","Source Type","Source Subtype","Source ID")
                                                                      THEN BEGIN
                                                                        VALIDATE("Variant Code",ReceiveControl."Input Variant Code");
                                                                        VALIDATE("Unit of Measure Code",ReceiveControl."Input Unit of Measure Code");
                                                                      END;
                                                                    END;
                                                                  END;
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Variant Code }
    { 14  ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                IF Type = Type::Receive THEN
                                                                  TESTFIELD(Quantity,1);

                                                                CalcBaseQty;
                                                                CalcValue(FALSE,TRUE);
                                                              END;

                                                   CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 15  ;   ;Quantity (Base)     ;Decimal       ;CaptionML=ENU=Quantity (Base);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 16  ;   ;Unit of Measure Code;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.))
                                                                 ELSE IF (Type=FILTER(<>Item)) "Unit of Measure";
                                                   OnValidate=BEGIN
                                                                IF Type = Type::Item THEN BEGIN
                                                                  ItemUnitOfMeasure.GET("No.","Unit of Measure Code");

                                                                  VALIDATE("Std. Pack UPC/EAN Number",ItemUnitOfMeasure."Std. Pack UPC/EAN Number");
                                                                  "Unit Length" := ItemUnitOfMeasure.Length;
                                                                  "Unit Width" := ItemUnitOfMeasure.Width;
                                                                  "Unit Height" := ItemUnitOfMeasure.Height;
                                                                  "Unit Cubage" := ItemUnitOfMeasure.Cubage;
                                                                  "Unit Weight" := ItemUnitOfMeasure.Weight;
                                                                END;

                                                                CalcBaseQty;
                                                                CalcValue(TRUE,FALSE);
                                                              END;

                                                   CaptionML=ENU=Unit of Measure Code }
    { 17  ;   ;Qty. per Unit of Measure;Decimal   ;CaptionML=ENU=Qty. per Unit of Measure;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 18  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 21  ;   ;Net Weight          ;Decimal       ;CaptionML=ENU=Net Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 22  ;   ;Gross Weight        ;Decimal       ;CaptionML=ENU=Gross Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 23  ;   ;Dimmed Weight       ;Decimal       ;CaptionML=ENU=Dimmed Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 24  ;   ;Serial No.          ;Code20        ;OnValidate=BEGIN
                                                                //LookupSN.CheckPackedSerialNo("Item No.","Serial No.",FALSE);
                                                              END;

                                                   CaptionML=ENU=Serial No. }
    { 25  ;   ;Volume              ;Decimal       ;CaptionML=ENU=Volume;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 26  ;   ;Receive Serial Number;Boolean      ;CaptionML=ENU=Receive Serial Number;
                                                   Editable=No }
    { 27  ;   ;Lot No.             ;Code20        ;CaptionML=ENU=Lot No. }
    { 28  ;   ;Receive Lot Number  ;Boolean       ;CaptionML=ENU=Receive Lot Number;
                                                   Editable=No }
    { 31  ;   ;Action Required     ;Boolean       ;CaptionML=ENU=Action Required }
    { 32  ;   ;Scanned No.         ;Text30        ;CaptionML=ENU=Scanned No.;
                                                   Editable=No }
    { 41  ;   ;Multi Document Quantity;Decimal    ;CaptionML=ENU=Multi Document Quantity;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 42  ;   ;Multi Document Qty. (Base);Decimal ;CaptionML=ENU=Multi Document Qty. (Base);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 43  ;   ;Distribution Factor ;Decimal       ;CaptionML=ENU=Distribution Factor;
                                                   Editable=No }
    { 44  ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=ENU=Location Code;
                                                   Editable=No }
    { 51  ;   ;Warranty Date       ;Date          ;CaptionML=ENU=Warranty Date }
    { 52  ;   ;Receive Warranty Date;Boolean      ;CaptionML=ENU=Receive Warranty Date;
                                                   Editable=No }
    { 53  ;   ;Expiration Date     ;Date          ;CaptionML=ENU=Expiration Date }
    { 54  ;   ;Receive Expiration Date;Boolean    ;CaptionML=ENU=Receive Expiration Date;
                                                   Editable=No }
    { 55  ;   ;Source Type         ;Integer       ;CaptionML=ENU=Source Type;
                                                   Editable=No }
    { 56  ;   ;Source Subtype      ;Option        ;CaptionML=ENU=Source Subtype;
                                                   OptionCaptionML=ENU=0,1,2,3,4,5,6,7,8,9,10;
                                                   OptionString=0,1,2,3,4,5,6,7,8,9,10;
                                                   Editable=No }
    { 57  ;   ;Source ID           ;Code20        ;CaptionML=ENU=Source ID;
                                                   Editable=No }
    { 58  ;   ;Selected Source ID  ;Code20        ;OnValidate=BEGIN
                                                                GetReceive;
                                                                ReceiveControl.TransferFromReceive(Receive);
                                                                ReceiveControl."Multi Document Receive" := Receive."Multi Document Receive";
                                                                ReceiveControl."Multi Document No." := Receive."Multi Document No.";
                                                                ReceiveControl.ValidateSelectedSourceID(Receive,Rec);
                                                              END;

                                                   OnLookup=BEGIN
                                                              GetReceive;
                                                              ReceiveControl.TransferFromReceive(Receive);
                                                              ReceiveControl."Multi Document Receive" := Receive."Multi Document Receive";
                                                              ReceiveControl."Multi Document No." := Receive."Multi Document No.";
                                                              ReceiveControl.LookupSelectedSourceID2(Receive,Rec);
                                                            END;

                                                   CaptionML=ENU=Selected Source ID }
    { 59  ;   ;Over Receive        ;Boolean       ;CaptionML=ENU=Over Receive;
                                                   Editable=No }
    { 5400;   ;Put-away Location Code;Code10      ;TableRelation=Location;
                                                   CaptionML=ENU=Put-away Location Code }
    { 5401;   ;Put-away Zone Code  ;Code10        ;TableRelation=Zone.Code WHERE (Location Code=FIELD(Put-away Location Code));
                                                   CaptionML=ENU=Put-away Zone Code }
    { 5402;   ;Put-away Bin Code   ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Put-away Location Code));
                                                   CaptionML=ENU=Put-away Bin Code }
    { 7300;   ;Unit Length         ;Decimal       ;OnValidate=BEGIN
                                                                IF "Use Unit of measure Dimensions" THEN
                                                                  IF Quantity <> 0 THEN
                                                                    Length := "Unit Length";
                                                              END;

                                                   CaptionML=ENU=Unit Length;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 7301;   ;Unit Width          ;Decimal       ;OnValidate=BEGIN
                                                                IF "Use Unit of measure Dimensions" THEN
                                                                  IF Quantity <> 0 THEN
                                                                    Width := "Unit Width";
                                                              END;

                                                   CaptionML=ENU=Unit Width;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 7302;   ;Unit Height         ;Decimal       ;OnValidate=BEGIN
                                                                IF "Use Unit of measure Dimensions" THEN
                                                                  Height := Quantity * "Unit Height";
                                                              END;

                                                   CaptionML=ENU=Unit Height;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 7303;   ;Unit Cubage         ;Decimal       ;CaptionML=ENU=Unit Cubage;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 7304;   ;Unit Weight         ;Decimal       ;CaptionML=ENU=Unit Weight;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 7305;   ;Use Unit of measure Dimensions;Boolean;
                                                   CaptionML=ENU=Use Unit of measure Dimensions }
    { 7306;   ;Length              ;Decimal       ;CaptionML=ENU=Length;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 7307;   ;Width               ;Decimal       ;CaptionML=ENU=Width;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 7308;   ;Height              ;Decimal       ;CaptionML=ENU=Height;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 7309;   ;Cubage              ;Decimal       ;CaptionML=ENU=Cubage;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 7310;   ;Unit of Measure Weight;Decimal     ;CaptionML=ENU=Unit of Measure Weight;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 14000801;;LTL Freight Type   ;Code10        ;TableRelation="LTL Freight Type";
                                                   CaptionML=ENU=LTL Freight Type }
    { 14000821;;Item UPC/EAN Number;Code20        ;OnValidate=BEGIN
                                                                IF "Item UPC/EAN Number" <> '' THEN BEGIN
                                                                  GetReceive;

                                                                  GetReceiveSetup;
                                                                  IF ReceiveSetup."Enable Label Printing" THEN
                                                                    "Item UPC/EAN Number (Print)" :=
                                                                      LabelMgt.FormatItemEANNumberReceive(Receive,"Item UPC/EAN Number");
                                                                END ELSE
                                                                  "Item UPC/EAN Number (Print)" := '';
                                                              END;

                                                   OnLookup=BEGIN
                                                              CASE Type OF
                                                                Type::"Account (G/L)":
                                                                  ;
                                                                Type::Item:
                                                                  BEGIN
                                                                    CLEAR(Item);
                                                                    IF Item.GET("No.") THEN
                                                                      ;
                                                                    IF PAGE.RUNMODAL(0,Item) = ACTION::LookupOK THEN
                                                                      VALIDATE("Item UPC/EAN Number",Item."Item UPC/EAN Number");
                                                                  END;
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Item UPC/EAN Number }
    { 14000822;;Item UPC/EAN Number (Print);Code50;CaptionML=ENU=Item UPC/EAN Number (Print);
                                                   Editable=No }
    { 14000823;;Std. Pack UPC/EAN Number;Code20   ;OnValidate=BEGIN
                                                                IF "Std. Pack UPC/EAN Number" <> '' THEN BEGIN
                                                                  GetReceive;

                                                                  GetReceiveSetup;
                                                                  IF ReceiveSetup."Enable Label Printing" THEN
                                                                    "Std. Pack UPC/EAN No. (Print)" :=
                                                                      LabelMgt.FormatStdPackageEANNumberRec(Receive,"Std. Pack UPC/EAN Number");
                                                                END ELSE
                                                                  "Std. Pack UPC/EAN No. (Print)" := '';
                                                              END;

                                                   OnLookup=BEGIN
                                                              CASE Type OF
                                                                Type::"Account (G/L)":
                                                                  ;
                                                                Type::Item:
                                                                  BEGIN
                                                                    CLEAR(ItemUnitOfMeasure);
                                                                    IF "No." <> '' THEN
                                                                      ItemUnitOfMeasure.SETRANGE("Item No.","No.");
                                                                    IF ItemUnitOfMeasure.GET("No.","Unit of Measure Code") THEN
                                                                      ;
                                                                    IF PAGE.RUNMODAL(0,ItemUnitOfMeasure) = ACTION::LookupOK THEN
                                                                      VALIDATE("Std. Pack UPC/EAN Number",ItemUnitOfMeasure."Std. Pack UPC/EAN Number");
                                                                  END;
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Std. Pack UPC/EAN Number }
    { 14000824;;Std. Pack UPC/EAN No. (Print);Code50;
                                                   CaptionML=ENU=Std. Pack UPC/EAN No. (Print);
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Receive No.,Line No.                    ;SumIndexFields=Net Weight,Quantity,Dimmed Weight,Gross Weight,Volume,Unit of Measure Weight,Cubage,Height;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Source Type,Source Subtype,Source ID,No.,Variant Code,Type,Location Code;
                                                   SumIndexFields=Quantity (Base),Quantity;
                                                   MaintainSIFTIndex=No }
    {    ;No.,Serial No.                           }
    {    ;Type,No.                                 }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Receive@1240030000 : Record 14000601;
      Receive2@1240030001 : Record 14000601;
      ReceiveLine@1240030002 : Record 14000602;
      Item@1240030003 : Record 27;
      ItemUnitOfMeasure@1240030004 : Record 5404;
      ReceiveControl@1240030015 : Record 14000611;
      GLAccount@1240030006 : Record 15;
      ReceiveRule@1240030009 : Record 14000612;
      EShipTrackingCode@1240030010 : Record 14000721;
      ReceiveSetup@1240030007 : Record 14000607;
      LabelMgt@1240030011 : Codeunit 14000841;
      QtyToReceive@1240030012 : Decimal;
      ReceiveSetupRetrieved@1240030014 : Boolean;
      Text001@1001 : TextConst 'ENU=You are attempting to receive more of %1 %2 %3 than is scheduled.';
      Text002@1002 : TextConst 'ENU=Receive is already in another Receive %1.';
      Text003@1003 : TextConst 'ENU=No quantities found on document.';

    PROCEDURE CalcBaseQty@2();
    BEGIN
      CASE Type OF
        Type::Item:
          BEGIN
            IF "Unit of Measure Code" = '' THEN BEGIN
              "Qty. per Unit of Measure" := 1;
              VALIDATE("Item UPC/EAN Number",Item."Item UPC/EAN Number");
            END ELSE BEGIN
              ItemUnitOfMeasure.GET("No.","Unit of Measure Code");
              "Qty. per Unit of Measure" := ItemUnitOfMeasure."Qty. per Unit of Measure";
              VALIDATE("Std. Pack UPC/EAN Number",ItemUnitOfMeasure."Std. Pack UPC/EAN Number");
            END;
            "Quantity (Base)" := Quantity * "Qty. per Unit of Measure";

            Item.GET("No.");
            "Net Weight" := Item."Net Weight" * "Quantity (Base)";
            "Gross Weight" := Item."Gross Weight" * "Quantity (Base)";
            "Dimmed Weight" := Item."Dimmed Weight" * "Quantity (Base)";
            Volume := Item."Unit Volume" * "Quantity (Base)";
            IF "Use Unit of measure Dimensions" THEN BEGIN
              Length := "Unit Length";
              Width := "Unit Width";
              Height := Quantity * "Unit Height";
            END;
            Cubage := Quantity * "Unit Cubage";
            "Unit of Measure Weight" := Quantity * "Unit Weight";
          END;
        Type::Receive:
          BEGIN
            "Qty. per Unit of Measure" := 1;
            "Quantity (Base)" := Quantity;

            Receive2.GET("No.");
            Receive2.ClearTotalValueFields;
            "Net Weight" := Receive2."Calculation Weight";
            "Gross Weight" := Receive2."Calculation Weight";
            "Dimmed Weight" := Receive2."Calculation Weight";
            Volume := Receive2."Calculation Volume";
            Length := Receive2."Calculation Length";
            Width := Receive2."Calculation Width";
            Height := Receive2."Calculation Height";
            Cubage := Receive2."Calculation Volume";
            "Unit of Measure Weight" := Receive2."Calculation Weight";
            "Use Unit of measure Dimensions" := FALSE;
          END;
      END;
    END;

    PROCEDURE GetReceive@1();
    BEGIN
      IF Receive."No." <> "Receive No." THEN
        Receive.GET("Receive No.");
    END;

    PROCEDURE CalcValue@3(FromUnitOfMeasureCode@1240030000 : Boolean;FilterVariant@1240030001 : Boolean);
    VAR
      TotalQuantityBase@1240030003 : Decimal;
      NewUnitOfMeasureCode@1240030002 : Code[10];
    BEGIN
      GetReceive;

      IF OverReceiveError AND (CurrFieldNo <> 0) THEN
        CASE Type OF
          Type::"Account (G/L)",Type::Item:
            IF CurrFieldNo <> 0 THEN
              MESSAGE(
                Text001,
                Type,"No.","Variant Code");
          Type::Receive:
            BEGIN
              ReceiveLine.RESET;
              ReceiveLine.SETCURRENTKEY(Type,"No.");
              ReceiveLine.SETRANGE(Type,Type);
              ReceiveLine.SETRANGE("No.","No.");
              ReceiveLine.FIND('-');
              IF (ReceiveLine."Receive No." = "Receive No.") AND
                 (ReceiveLine."Line No." = "Line No.")
              THEN
                ReceiveLine.NEXT;
              ERROR(Text002,ReceiveLine."Receive No.");
            END;
        END;

      CASE Type OF
        Type::"Account (G/L)",Type::Item:
          BEGIN
            IF "No." = '' THEN
              EXIT;

            ReceiveControl.CalculateTotalValue(
              TotalQuantityBase,NewUnitOfMeasureCode,
              Receive."Multi Document Receive",Receive."Multi Document No.",
              Type,"No.","Variant Code",FilterVariant,"Unit of Measure Code",FromUnitOfMeasureCode,
              "Source Type","Source Subtype","Source ID");

            IF NewUnitOfMeasureCode <> '' THEN
              VALIDATE("Unit of Measure Code",NewUnitOfMeasureCode);

            IF TotalQuantityBase = 0 THEN
              ERROR(Text003);
          END;
        Type::Receive:
          BEGIN
            IF "No." = '' THEN
              EXIT;

            Receive2.GET("No.");
            Receive2.ClearTotalValueFields;
          END;
      END;
    END;

    PROCEDURE OverReceiveError@4() : Boolean;
    VAR
      QtyToReceive@1240030000 : Decimal;
      QtyPacked@1240030001 : Decimal;
    BEGIN
      IF ("Source ID" = '') OR ("No." = '') THEN
        EXIT(FALSE);

      GetReceive;

      CASE Type OF
        Type::"Account (G/L)",Type::Item:
          BEGIN
            GetReceiveSetup;

            QtyToReceive :=
              ReceiveControl.CalculateQtyToReceive(
                Receive."Multi Document Receive",Receive."Multi Document No.",
                Type,"No.","Variant Code","Source Type","Source Subtype","Source ID");

            QtyPacked := 0;
            ReceiveLine.RESET;
            ReceiveLine.SETCURRENTKEY("Source Type","Source Subtype","Source ID","No.","Variant Code");
            ReceiveLine.SETRANGE("Source Type","Source Type");
            ReceiveLine.SETRANGE("Source Subtype","Source Subtype");
            IF Receive."Multi Document Receive" THEN
              ReceiveLine.SETFILTER("Source ID",Receive."Multi Document No.")
            ELSE
              ReceiveLine.SETRANGE("Source ID","Source ID");
            ReceiveLine.SETRANGE("No.","No.");
            ReceiveLine.SETRANGE("Variant Code","Variant Code");
            IF ReceiveSetup."Location Receiving" THEN
              ReceiveLine.SETRANGE("Location Code",Receive."Location Code");
            ReceiveLine.CALCSUMS("Quantity (Base)");
            QtyPacked := ReceiveLine."Quantity (Base)";
            IF ReceiveLine.GET("Receive No.","Line No.") THEN
              QtyPacked := QtyPacked - ReceiveLine."Quantity (Base)";
            QtyPacked := QtyPacked + "Quantity (Base)";

            EXIT(QtyPacked > QtyToReceive);
          END;
        Type::Receive:
          BEGIN
            ReceiveLine.RESET;
            ReceiveLine.SETCURRENTKEY(Type,"No.");
            ReceiveLine.SETRANGE(Type,Type);
            ReceiveLine.SETRANGE("No.","No.");
            IF ReceiveLine.FIND('-') THEN
              IF (ReceiveLine."Receive No." = "Receive No.") AND
                 (ReceiveLine."Line No." = "Line No.")
              THEN
                EXIT(ReceiveLine.NEXT <> 0)
              ELSE
                EXIT(TRUE);

            EXIT(FALSE);
          END;
      END;
    END;

    PROCEDURE CheckModify@6();
    BEGIN
      GetReceive;
      Receive.TESTFIELD(Closed,FALSE);
    END;

    PROCEDURE DivideQuantityAndValueFields@9(MultiDocReceiveLine@1240030000 : Record 14000602;VAR TotalReceiveLine@1240030001 : Record 14000602;CorrectionFactor@1240030002 : Decimal;UseRemainingAmounts@1240030003 : Boolean);
    BEGIN
      IF UseRemainingAmounts THEN BEGIN
        Quantity := MultiDocReceiveLine.Quantity - TotalReceiveLine.Quantity;
        "Quantity (Base)" :=
          MultiDocReceiveLine."Quantity (Base)" - TotalReceiveLine."Quantity (Base)";
        "Net Weight" := MultiDocReceiveLine."Net Weight" - TotalReceiveLine."Net Weight";
        "Gross Weight" := MultiDocReceiveLine."Gross Weight" - TotalReceiveLine."Gross Weight";
        "Dimmed Weight" := MultiDocReceiveLine."Dimmed Weight" - TotalReceiveLine."Dimmed Weight";
        Volume := MultiDocReceiveLine.Volume - TotalReceiveLine.Volume;
      END ELSE BEGIN
        Quantity := ROUND(CorrectionFactor * MultiDocReceiveLine.Quantity,0.0001);
        "Quantity (Base)" := ROUND(CorrectionFactor * MultiDocReceiveLine."Quantity (Base)",0.0001);
        "Net Weight" := ROUND(CorrectionFactor * MultiDocReceiveLine."Net Weight",0.0001);
        "Gross Weight" := ROUND(CorrectionFactor * MultiDocReceiveLine."Gross Weight",0.0001);
        "Dimmed Weight" := ROUND(CorrectionFactor * MultiDocReceiveLine."Dimmed Weight",0.0001);
        Volume := ROUND(CorrectionFactor * MultiDocReceiveLine.Volume,0.0001);
      END;
      "Distribution Factor" := CorrectionFactor;

      TotalReceiveLine.Quantity := TotalReceiveLine.Quantity + Quantity;
      TotalReceiveLine."Quantity (Base)" := TotalReceiveLine."Quantity (Base)" + "Quantity (Base)";
      TotalReceiveLine."Net Weight" := TotalReceiveLine."Net Weight" + "Net Weight";
      TotalReceiveLine."Gross Weight" := TotalReceiveLine."Gross Weight" + "Gross Weight";
      TotalReceiveLine."Dimmed Weight" := TotalReceiveLine."Dimmed Weight" + "Dimmed Weight";
      TotalReceiveLine.Volume := TotalReceiveLine.Volume + Volume;
    END;

    LOCAL PROCEDURE GetReceiveSetup@22();
    BEGIN
      IF NOT ReceiveSetupRetrieved THEN BEGIN
        ReceiveSetup.GET;
        ReceiveSetupRetrieved := TRUE;
      END;
    END;

    PROCEDURE ViewItemAction@1240030000() : Boolean;
    VAR
      ReceiveRule@1240030000 : Record 14000612;
    BEGIN
      Item."No." := "No.";
      Item.FILTERGROUP(2);
      Item.SETRECFILTER;
      Item.FILTERGROUP(0);
      IF PAGE.RUNMODAL(PAGE::"Verify Item Card",Item) <> ACTION::LookupOK THEN
        EXIT(FALSE);

      IF FIND THEN BEGIN
        Item.GET("No.");
        ReceiveRule.GetReceiveRule("No.");
        "Action Required" := ReceiveRule.ActionRequired(Item);
        MODIFY;
      END;

      EXIT(TRUE);
    END;

    BEGIN
    END.
  }
}

