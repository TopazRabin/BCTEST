OBJECT Table 14000607 Receive Setup
{
  OBJECT-PROPERTIES
  {
    Date=06/28/17;
    Time=12:00:00 PM;
    Version List=SE0.60.06;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               PurchSetup.GET;
               PurchSetup.TESTFIELD("Enable Receive");
             END;

    CaptionML=ENU=Receive Setup;
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key }
    { 11  ;   ;Receive Nos.        ;Code10        ;TableRelation="No. Series".Code;
                                                   OnValidate=BEGIN
                                                                IF "Receive Nos." <> '' THEN BEGIN
                                                                  CALCFIELDS("Last Receive No.");
                                                                  TESTFIELD("Last Receive No.",'');
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Receive Nos. }
    { 12  ;   ;Default Receive Station;Code10     ;TableRelation="Receive Station";
                                                   CaptionML=ENU=Default Receive Station }
    { 13  ;   ;No Shipping Cost on Order;Boolean  ;CaptionML=ENU=No Shipping Cost on Order }
    { 14  ;   ;Actual Weight as    ;Option        ;CaptionML=ENU=Actual Weight as;
                                                   OptionCaptionML=ENU=" ,Net Weight,Gross Weight,Dimmed Weight,Unit of Measure Weight";
                                                   OptionString=[ ,Net Weight,Gross Weight,Dimmed Weight,Unit of Measure Weight] }
    { 15  ;   ;Default Weight Units;Option        ;CaptionML=ENU=Default Weight Units;
                                                   OptionCaptionML=ENU=LBS,KGS;
                                                   OptionString=LBS,KGS }
    { 17  ;   ;Shipping Agent Required;Boolean    ;CaptionML=ENU=Shipping Agent Required }
    { 18  ;   ;Default Size Units  ;Option        ;CaptionML=ENU=Default Size Units;
                                                   OptionCaptionML=ENU=IN,CM;
                                                   OptionString=IN,CM }
    { 19  ;   ;Item No. Delimiter  ;Code1         ;CaptionML=ENU=Item No. Delimiter }
    { 20  ;   ;Item No. Includes Ser. No.;Boolean ;CaptionML=ENU=Item No. Includes Ser. No. }
    { 21  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Receive Comment Line" WHERE (Table ID=CONST(14000607),
                                                                                                   Code=FIELD(Primary Key)));
                                                   CaptionML=ENU=Comment;
                                                   Editable=No }
    { 22  ;   ;Item Priority       ;Integer       ;CaptionML=ENU=Item Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 23  ;   ;Barcode Conversion Priority;Integer;CaptionML=ENU=Barcode Conversion Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 24  ;   ;Item Cross Reference Priority;Integer;
                                                   CaptionML=ENU=Item Cross Reference Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 25  ;   ;Close Receive Report ID;Integer    ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Report));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Close Receive Report Name");
                                                              END;

                                                   CaptionML=ENU=Close Receive Report ID }
    { 26  ;   ;Close Receive Report Name;Text30   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObj."Object Name" WHERE (Object Type=CONST(Report),
                                                                                                  Object ID=FIELD(Close Receive Report ID)));
                                                   CaptionML=ENU=Close Receive Report Name;
                                                   Editable=No }
    { 27  ;   ;Close Purchase Report ID;Integer   ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Report));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Close Purchase Report Name");
                                                              END;

                                                   CaptionML=ENU=Close Purchase Report ID }
    { 28  ;   ;Close Purchase Report Name;Text30  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObj."Object Name" WHERE (Object Type=CONST(Report),
                                                                                                  Object ID=FIELD(Close Purchase Report ID)));
                                                   CaptionML=ENU=Close Purchase Report Name;
                                                   Editable=No }
    { 29  ;   ;Custom Priority     ;Integer       ;CaptionML=ENU=Custom Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 30  ;   ;Default Item Receive Rule Code;Code10;
                                                   TableRelation="Receive Rule";
                                                   CaptionML=ENU=Default Item Receive Rule Code }
    { 31  ;   ;Qty. to Receive as  ;Option        ;InitValue=Outstanding Quantity;
                                                   CaptionML=ENU=Qty. to Receive as;
                                                   OptionCaptionML=ENU=Quantity to Receive,Outstanding Quantity;
                                                   OptionString=Quantity to Receive,Outstanding Quantity }
    { 32  ;   ;Close Sales Report ID;Integer      ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Report));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Close Sales Report Name");
                                                              END;

                                                   CaptionML=ENU=Close Sales Report ID }
    { 33  ;   ;Close Sales Report Name;Text30     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObj."Object Name" WHERE (Object Type=CONST(Report),
                                                                                                  Object ID=FIELD(Close Sales Report ID)));
                                                   CaptionML=ENU=Close Sales Report Name;
                                                   Editable=No }
    { 34  ;   ;Close Transfer Report ID;Integer   ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Report));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Close Transfer Report Name");
                                                              END;

                                                   CaptionML=ENU=Close Transfer Report ID }
    { 35  ;   ;Close Transfer Report Name;Text30  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObj."Object Name" WHERE (Object Type=CONST(Report),
                                                                                                  Object ID=FIELD(Close Transfer Report ID)));
                                                   CaptionML=ENU=Close Transfer Report Name;
                                                   Editable=No }
    { 36  ;   ;Last Receive No.    ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Receive Numbering"."Last No. Used" WHERE (Table No.=CONST(14000607),
                                                                                                                 Code=FIELD(Primary Key),
                                                                                                                 Field No.=CONST(36)));
                                                   CaptionML=ENU=Last Receive No.;
                                                   Editable=No }
    { 41  ;   ;Prepaid Freight Type;Option        ;OnValidate=BEGIN
                                                                "Prepaid Freight Code" := '';
                                                              END;

                                                   CaptionML=ENU=Prepaid Freight Type;
                                                   OptionCaptionML=ENU=" ,Account (G/L),Item";
                                                   OptionString=[ ,Account (G/L),Item] }
    { 42  ;   ;Prepaid Freight Code;Code20        ;TableRelation=IF (Prepaid Freight Type=FILTER('Account (G/L)')) "G/L Account"
                                                                 ELSE IF (Prepaid Freight Type=FILTER(Item)) Item;
                                                   CaptionML=ENU=Prepaid Freight Code }
    { 43  ;   ;Item UPC/EAN Printing Mask;Code50  ;InitValue=#  ##### #####  #;
                                                   OnValidate=BEGIN
                                                                Numbers := 0;
                                                                FOR i := 1 TO STRLEN("Item UPC/EAN Printing Mask") DO
                                                                  IF COPYSTR("Item UPC/EAN Printing Mask",i,1) = '#' THEN
                                                                    Numbers := Numbers + 1;

                                                                IF NOT (Numbers IN [0,12]) THEN
                                                                  IF NOT CONFIRM(Text001,FALSE) THEN
                                                                    ERROR(Text002);
                                                              END;

                                                   CaptionML=ENU=Item UPC/EAN Printing Mask }
    { 44  ;   ;Std. Pack UPC/EAN Print. Mask;Code50;
                                                   InitValue=##  #  ##### #####  #;
                                                   OnValidate=BEGIN
                                                                Numbers := 0;
                                                                FOR i := 1 TO STRLEN("Std. Pack UPC/EAN Print. Mask") DO
                                                                  IF COPYSTR("Std. Pack UPC/EAN Print. Mask",i,1) = '#' THEN
                                                                    Numbers := Numbers + 1;

                                                                IF NOT (Numbers IN [0,14]) THEN
                                                                  IF NOT CONFIRM(Text003,FALSE)
                                                                  THEN
                                                                    ERROR(Text002);
                                                              END;

                                                   CaptionML=ENU=Std. Pack UPC/EAN Print. Mask }
    { 45  ;   ;UCC 128 Printing Mask;Code50       ;InitValue=(##) # ####### ######### #;
                                                   OnValidate=BEGIN
                                                                Numbers := 0;
                                                                FOR i := 1 TO STRLEN("UCC 128 Printing Mask") DO
                                                                  IF COPYSTR("UCC 128 Printing Mask",i,1) = '#' THEN
                                                                    Numbers := Numbers + 1;

                                                                IF NOT (Numbers IN [0,20]) THEN
                                                                  IF NOT CONFIRM(Text004,FALSE)
                                                                  THEN
                                                                    ERROR(Text002);
                                                              END;

                                                   CaptionML=ENU=UCC 128 Printing Mask }
    { 46  ;   ;Allow Action Required Posting;Boolean;
                                                   CaptionML=ENU=Allow Action Required Posting }
    { 47  ;   ;Item No. Delimiter Type;Option     ;CaptionML=ENU=Item No. Delimiter Type;
                                                   OptionCaptionML=ENU=Serial No.,Lot No.,Serial No.-Lot No.,Lot No.-Serial No.;
                                                   OptionString=Serial No.,Lot No.,Serial No.-Lot No.,Lot No.-Serial No. }
    { 48  ;   ;Location Receiving  ;Boolean       ;OnValidate=BEGIN
                                                                IF "Location Receiving" THEN BEGIN
                                                                  TESTFIELD("Purchase Order Receive Detail");
                                                                  TESTFIELD("Purch. Invoice Receive Detail");
                                                                  TESTFIELD("Sales Cr. Memo Receive Detail");
                                                                  TESTFIELD("Sales Ret.Order Receive Detail");
                                                                  TESTFIELD("Transfer Order Receive Detail");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Location Receiving }
    { 49  ;   ;Select Multi Document Source;Boolean;
                                                   CaptionML=ENU=Select Multi Document Source }
    { 51  ;   ;Purchase Order Priority;Integer    ;InitValue=1;
                                                   CaptionML=ENU=Purchase Order Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 52  ;   ;Purchase Invoice Priority;Integer  ;InitValue=1;
                                                   CaptionML=ENU=Purchase Invoice Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 53  ;   ;Sales Credit Memo Priority;Integer ;InitValue=1;
                                                   CaptionML=ENU=Sales Credit Memo Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 54  ;   ;Transfer Order Priority;Integer    ;InitValue=1;
                                                   CaptionML=ENU=Transfer Order Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 55  ;   ;Sales Return Order Priority;Integer;InitValue=1;
                                                   CaptionML=ENU=Sales Return Order Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 56  ;   ;Common Item No. Priority;Integer   ;CaptionML=ENU=Common Item No. Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 57  ;   ;Vendor Item No. Priority;Integer   ;CaptionML=ENU=Vendor Item No. Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 58  ;   ;Require Unique Identifier;Boolean  ;CaptionML=ENU=Require Unique Identifier }
    { 59  ;   ;Item UPC/EAN Number Priority;Integer;
                                                   CaptionML=ENU=Item UPC/EAN Number Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 60  ;   ;Std. Pack UPC/EAN No. Priority;Integer;
                                                   CaptionML=ENU=Std. Pack UPC/EAN No. Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 61  ;   ;Purchase Order Receive Detail;Boolean;
                                                   OnValidate=BEGIN
                                                                IF NOT "Purchase Order Receive Detail" THEN
                                                                  TESTFIELD("Location Receiving",FALSE);
                                                              END;

                                                   CaptionML=ENU=Purchase Order Receive Detail }
    { 62  ;   ;Purch. Invoice Receive Detail;Boolean;
                                                   OnValidate=BEGIN
                                                                IF NOT "Purch. Invoice Receive Detail" THEN
                                                                  TESTFIELD("Location Receiving",FALSE);
                                                              END;

                                                   CaptionML=ENU=Purch. Invoice Receive Detail }
    { 63  ;   ;Sales Cr. Memo Receive Detail;Boolean;
                                                   OnValidate=BEGIN
                                                                IF NOT "Sales Cr. Memo Receive Detail" THEN
                                                                  TESTFIELD("Location Receiving",FALSE);
                                                              END;

                                                   CaptionML=ENU=Sales Cr. Memo Receive Detail }
    { 64  ;   ;Sales Ret.Order Receive Detail;Boolean;
                                                   OnValidate=BEGIN
                                                                IF NOT "Sales Ret.Order Receive Detail" THEN
                                                                  TESTFIELD("Location Receiving",FALSE);
                                                              END;

                                                   CaptionML=ENU=Sales Ret.Order Receive Detail }
    { 65  ;   ;Transfer Order Receive Detail;Boolean;
                                                   OnValidate=BEGIN
                                                                IF NOT "Transfer Order Receive Detail" THEN
                                                                  TESTFIELD("Location Receiving",FALSE);
                                                              END;

                                                   CaptionML=ENU=Transfer Order Receive Detail }
    { 66  ;   ;Verify Over Receive (Receive);Boolean;
                                                   CaptionML=ENU=Verify Over Receive (Receive) }
    { 67  ;   ;Verify Over Receive (Invoice);Boolean;
                                                   CaptionML=ENU=Verify Over Receive (Invoice) }
    { 68  ;   ;Autom. Delete Over Receive;Boolean ;CaptionML=ENU=Autom. Delete Over Receive }
    { 69  ;   ;Receive Subcontracting Order;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=ENU=Receive Subcontracting Order }
    { 70  ;   ;Receive No. Details Priority;Integer;
                                                   CaptionML=ENU=Receive No. Details Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 71  ;   ;Package No. Details Priority;Integer;
                                                   CaptionML=ENU=Package No. Details Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 72  ;   ;Use Item Tracking Details;Boolean  ;CaptionML=ENU=Use Item Tracking Details }
    { 73  ;   ;Rec. Ext. Track. Det. Priority;Integer;
                                                   CaptionML=ENU=Rec. Ext. Track. Det. Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 74  ;   ;Pack. Ext. Track. Det Priority;Integer;
                                                   CaptionML=ENU=Pack. Ext. Track. Det Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 75  ;   ;Receive UCC No. Det. Priority;Integer;
                                                   CaptionML=ENU=Receive UCC No. Det. Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 76  ;   ;Package UCC No. Det. Priority;Integer;
                                                   CaptionML=ENU=Package UCC No. Det. Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 77  ;   ;Actual Volume as    ;Option        ;CaptionML=ENU=Actual Volume as;
                                                   OptionCaptionML=ENU=Unit Volume,Cubage;
                                                   OptionString=Unit Volume,Cubage }
    { 78  ;   ;Update Setup after Close Order;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=ENU=Update Setup after Close Order }
    { 14000821;;Distribute Cost on Purch.Order;Option;
                                                   CaptionML=ENU=Distribute Cost on Purch.Order;
                                                   OptionCaptionML=ENU=" ,Equal,by Weight,by Value,by Volume";
                                                   OptionString=[ ,Equal,by Weight,by Value,by Volume] }
    { 14000841;;Receive Label Code ;Code10        ;TableRelation="Label Header" WHERE (Label Usage=CONST(Receive));
                                                   CaptionML=ENU=Receive Label Code }
    { 14000842;;Object File Name   ;Text250       ;CaptionML=ENU=Object File Name }
    { 14000843;;Enable Label Printing;Boolean     ;OnValidate=BEGIN
                                                                IF xRec."Enable Label Printing" AND NOT "Enable Label Printing" THEN
                                                                  IF NOT CONFIRM(Text005,FALSE) THEN
                                                                    "Enable Label Printing" := TRUE;
                                                              END;

                                                   CaptionML=ENU=Enable Label Printing }
    { 14000844;;Max Record No.     ;Integer       ;InitValue=5;
                                                   CaptionML=ENU=Max Record No.;
                                                   MinValue=0;
                                                   MaxValue=20 }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PurchSetup@1240030000 : Record 312;
      i@1240030003 : Integer;
      Numbers@1240030004 : Integer;
      Text001@1001 : TextConst 'ENU=Item UPC/EAN Number is normally 12 digit, use this string anyway?';
      Text002@1002 : TextConst 'ENU=Nothing Changed.';
      Text003@1003 : TextConst 'ENU=Std. Pack. UPC/EAN Number is normally 14 digit, use this string anyway?';
      Text004@1004 : TextConst 'ENU=UCC 128 Number is normally 20 digit, use this string anyway?';
      Text005@1005 : TextConst 'ENU=Are you sure you want to turn Label Printing off.';
      Text006@1240030005 : TextConst 'ENU=Purchase Order';
      Text007@1240030006 : TextConst 'ENU=Purchase Invoice';
      Text008@1240030007 : TextConst 'ENU=Sales Credit Memo';
      Text009@1240030008 : TextConst 'ENU=Sales Return Order';
      Text010@1240030009 : TextConst 'ENU=Transfer Order';

    PROCEDURE PoundToKilo@1(Value@1240030000 : Decimal) : Decimal;
    BEGIN
      EXIT(0.45359237 * Value);
    END;

    PROCEDURE KiloToPound@2(Value@1240030000 : Decimal) : Decimal;
    BEGIN
      EXIT(2.20462262 * Value);
    END;

    PROCEDURE InchToCentimenter@3(Value@1240030000 : Decimal) : Decimal;
    BEGIN
      EXIT(2.54 * Value);
    END;

    PROCEDURE CentimeterToInch@4(Value@1240030000 : Decimal) : Decimal;
    BEGIN
      EXIT(0.393700787 * Value);
    END;

    PROCEDURE AboutEReceive@9();
    VAR
      Object@1240030000 : Record 2000000001;
      ApplicationManagement@1240030001 : Codeunit 1;
      SEVersion@1240020001 : Codeunit 37031003;
      HighestVersion@1240030002 : Text[250];
      OSVersionText@1240030003 : Text[250];
      ReleaseVersion@1240020000 : Text[250];
    BEGIN
      HighestVersion := '';
      ReleaseVersion := SEVersion.GetSEVersion;

      Object.RESET;
      Object.SETFILTER("Version List",'SE0*');
      IF Object.FIND('-') THEN
        REPEAT
          IF Object."Version List" > HighestVersion THEN
            HighestVersion := Object."Version List";
        UNTIL Object.NEXT = 0;

      IF NOT ISSERVICETIER THEN
        OSVersionText := OSVERSION;

      MESSAGE(
        '%1\\' + '%2\\' + 'Version (%3)(E-Ship 3.17 (%5))\\' + '%4',
        COMPANYNAME,SERIALNUMBER,ApplicationManagement.ApplicationVersion,
        OSVersionText,HighestVersion + ' (' + ReleaseVersion +')');
    END;

    PROCEDURE ReceiveDetail@1240030000(SourceType@1240030000 : Integer;SourceSubtype@1240030001 : Integer) : Boolean;
    VAR
      SalesHeader@1240030002 : Record 36;
      PurchHeader@1240030003 : Record 38;
    BEGIN
      CASE SourceType OF
        DATABASE::"Sales Header":
          CASE SourceSubtype OF
            SalesHeader."Document Type"::"Credit Memo":
              EXIT("Sales Cr. Memo Receive Detail");
            SalesHeader."Document Type"::"Return Order":
              EXIT("Sales Ret.Order Receive Detail");
          END;
        DATABASE::"Purchase Header":
          CASE SourceSubtype OF
            PurchHeader."Document Type"::Order:
              EXIT("Purchase Order Receive Detail");
            PurchHeader."Document Type"::Invoice:
              EXIT("Purch. Invoice Receive Detail");
          END;
        DATABASE::"Transfer Header":
          EXIT("Transfer Order Receive Detail");
      END;

      EXIT(FALSE);
    END;

    PROCEDURE TestReceiveAllowed@1240030001(SourceType@1240030000 : Integer;SourceSubtype@1240030001 : Integer);
    VAR
      ReceiveControl@1240030002 : Record 14000611;
    BEGIN
      CASE SourceType OF
        DATABASE::"Sales Header":
          CASE SourceSubtype OF
            3:
              TESTFIELD("Sales Credit Memo Priority");
            5:
              TESTFIELD("Sales Return Order Priority");
            ELSE
              ReceiveControl.ErrorUnknownSourceType(SourceType,SourceSubtype,'');
          END;
        DATABASE::"Purchase Header":
          CASE SourceSubtype OF
            1:
              TESTFIELD("Purchase Order Priority");
            2:
              TESTFIELD("Purchase Invoice Priority");
            ELSE
              ReceiveControl.ErrorUnknownSourceType(SourceType,SourceSubtype,'');
          END;
        DATABASE::"Transfer Header":
          TESTFIELD("Transfer Order Priority");
        ELSE
          ReceiveControl.ErrorUnknownSourceType(SourceType,SourceSubtype,'');
      END;
    END;

    PROCEDURE SelectSourceType@1240030002(VAR SourceType@1240030000 : Integer;VAR SourceSubtype@1240030001 : '0,1,2,3,4,5,6,7,8,9,10') : Boolean;
    VAR
      SalesHeader@1240030006 : Record 36;
      PurchHeader@1240030007 : Record 38;
      SelectedSourceType@1240030002 : Integer;
      SelectedSourceSubtype@1240030003 : Integer;
      Selection@1240030004 : Integer;
      SelectionString@1240030005 : Text[250];
    BEGIN
      Selection := 0;

      IF "Purchase Order Priority" > 0 THEN BEGIN
        SelectionString := Text006;
        Selection := Selection + 1;

        SelectedSourceType := DATABASE::"Purchase Header";
        SelectedSourceSubtype := PurchHeader."Document Type"::Order;
      END ELSE
        SelectionString := '';

      IF "Purchase Invoice Priority" > 0 THEN BEGIN
        SelectionString := SelectionString + ',' + Text007;
        Selection := Selection + 1;

        SelectedSourceType := DATABASE::"Purchase Header";
        SelectedSourceSubtype := PurchHeader."Document Type"::Invoice;
      END ELSE
        SelectionString := SelectionString + ',';

      IF "Sales Credit Memo Priority" > 0 THEN BEGIN
        SelectionString := SelectionString + ',' + Text008;
        Selection := Selection + 1;

        SelectedSourceType := DATABASE::"Sales Header";
        SelectedSourceSubtype := SalesHeader."Document Type"::"Credit Memo";
      END ELSE
        SelectionString := SelectionString + ',';

      IF "Sales Return Order Priority" > 0 THEN BEGIN
        SelectionString := SelectionString + ',' + Text009;
        Selection := Selection + 1;

        SelectedSourceType := DATABASE::"Sales Header";
        SelectedSourceSubtype := SalesHeader."Document Type"::"Return Order";
      END ELSE
        SelectionString := SelectionString + ',';

      IF "Transfer Order Priority" > 0 THEN BEGIN
        SelectionString := SelectionString + ',' + Text010;
        Selection := Selection + 1;

        SelectedSourceType := DATABASE::"Transfer Header";
        SelectedSourceSubtype := 0;
      END ELSE
        SelectionString := SelectionString + ',';

      IF Selection > 1 THEN BEGIN
        Selection := STRMENU(SelectionString);

        CASE Selection OF
          1:
            BEGIN
              SelectedSourceType := DATABASE::"Purchase Header";
              SelectedSourceSubtype := PurchHeader."Document Type"::Order;
            END;
          2:
            BEGIN
              SelectedSourceType := DATABASE::"Purchase Header";
              SelectedSourceSubtype := PurchHeader."Document Type"::Invoice;
            END;
          3:
            BEGIN
              SelectedSourceType := DATABASE::"Sales Header";
              SelectedSourceSubtype := SalesHeader."Document Type"::"Credit Memo";
            END;
          4:
            BEGIN
              SelectedSourceType := DATABASE::"Sales Header";
              SelectedSourceSubtype := SalesHeader."Document Type"::"Return Order";
            END;
          5:
            BEGIN
              SelectedSourceType := DATABASE::"Transfer Header";
              SelectedSourceSubtype := 0;
            END;
          ELSE
            EXIT(FALSE);
        END;
      END;

      SourceType := SelectedSourceType;
      SourceSubtype := SelectedSourceSubtype;
      EXIT(TRUE);
    END;

    BEGIN
    END.
  }
}

