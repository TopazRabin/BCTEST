OBJECT Table 14123506 ES Role Permission
{
  OBJECT-PROPERTIES
  {
    Date=05/04/16;
    Time=12:00:00 PM;
    Version List=ES1.41.18;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               ESRole.GET("Role ID");
               IF NOT AllowZeroNoQuestion THEN BEGIN
                 ESSecuritySetup.GET;
                 ESSecuritySetup.InFREERoles("Role ID",TRUE);

                 IF ("Object ID" = 0) AND NOT ESSecuritySetup."Allow 0 Permission" THEN
                   IF NOT CONFIRM(Text001,FALSE) THEN
                     ERROR(Text002,FIELDCAPTION("Object ID"));

                 ESRolePerm.RESET;
                 ESRolePerm.SETRANGE("Role ID","Role ID");
                 ESRolePerm.SETRANGE("Object Type","Object Type");
                 ESRolePerm.SETRANGE("Object ID",0);
                 IF ESRolePerm.FIND('-') THEN
                   MESSAGE(Text009,FIELDCAPTION("Object Type"),"Object Type");

                 SetDefaultPermission;

                 IF ESRoleDetail.GET("Role ID") THEN
                   ERROR(Test010,"Role ID");
               END;

               IF NOT ChangeWithNoComment THEN
                 ESRole.Comment(1,STRSUBSTNO(Text003,TABLECAPTION,"Object Type","Object ID"));

               "Created By User" := USERID;
               "Created Date Time" := CURRENTDATETIME;
             END;

    OnModify=BEGIN
               ESSecuritySetup.GET;
               ESSecuritySetup.InFREERoles("Role ID",TRUE);

               IF ESRoleDetail.GET("Role ID") THEN
                 ERROR(Test010,"Role ID");

               ESRole.GET("Role ID");
               IF NOT ChangeWithNoComment THEN
                 ESRole.Comment(1,STRSUBSTNO(Text004,TABLECAPTION,"Object Type","Object ID"));
             END;

    OnDelete=BEGIN
               ESSecuritySetup.GET;
               ESSecuritySetup.InFREERoles("Role ID",TRUE);

               IF ESRoleDetail.GET("Role ID") THEN
                 ERROR(Test010,"Role ID");

               ESRole.GET("Role ID");
               IF NOT ChangeWithNoComment THEN BEGIN
                 ESRole.Comment(1,STRSUBSTNO(Text005,TABLECAPTION,"Object Type","Object ID"));

                 Comment(4,'');
               END;
             END;

    OnRename=BEGIN
               ERROR(Text006);
             END;

    CaptionML=ENU=Permission;
    LookupPageID=Page14123588;
    DrillDownPageID=Page14123588;
  }
  FIELDS
  {
    { 1   ;   ;Role ID             ;Code20        ;TableRelation="ES Role"."Role ID";
                                                   CaptionML=ENU=Permission Set ID;
                                                   NotBlank=Yes }
    { 2   ;   ;Role Name           ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ES Role".Name WHERE (Role ID=FIELD(Role ID)));
                                                   CaptionML=ENU=Permission Set Name;
                                                   Editable=No }
    { 3   ;   ;Object Type         ;Option        ;CaptionML=ENU=Object Type;
                                                   OptionCaptionML=ENU=TableData,Table,,Report,,Codeunit,XMLport,MenuSuite,Page,Query,System;
                                                   OptionString=TableData,Table,,Report,,Codeunit,XMLport,MenuSuite,Page,Query,System }
    { 4   ;   ;Object ID           ;Integer       ;TableRelation="ES Object Information"."Object ID" WHERE (Object Type=FIELD(Object Type));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Object ID }
    { 5   ;   ;Object Caption      ;Text249       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ES Object Information"."Object Caption" WHERE (Object Type=FIELD(Object Type),
                                                                                                                      Object ID=FIELD(Object ID)));
                                                   CaptionML=ENU=Object Caption;
                                                   Editable=No }
    { 6   ;   ;Read Permission     ;Option        ;InitValue=Yes;
                                                   CaptionML=ENU=Read Permission;
                                                   OptionCaptionML=ENU=" ,Yes,Indirect";
                                                   OptionString=[ ,Yes,Indirect] }
    { 7   ;   ;Insert Permission   ;Option        ;InitValue=Yes;
                                                   CaptionML=ENU=Insert Permission;
                                                   OptionCaptionML=ENU=" ,Yes,Indirect";
                                                   OptionString=[ ,Yes,Indirect] }
    { 8   ;   ;Modify Permission   ;Option        ;InitValue=Yes;
                                                   CaptionML=ENU=Modify Permission;
                                                   OptionCaptionML=ENU=" ,Yes,Indirect";
                                                   OptionString=[ ,Yes,Indirect] }
    { 9   ;   ;Delete Permission   ;Option        ;InitValue=Yes;
                                                   CaptionML=ENU=Delete Permission;
                                                   OptionCaptionML=ENU=" ,Yes,Indirect";
                                                   OptionString=[ ,Yes,Indirect] }
    { 10  ;   ;Execute Permission  ;Option        ;InitValue=Yes;
                                                   CaptionML=ENU=Execute Permission;
                                                   OptionCaptionML=ENU=" ,Yes,Indirect";
                                                   OptionString=[ ,Yes,Indirect] }
    { 11  ;   ;Security Filter     ;TableFilter   ;TableIDExpr="Object ID";
                                                   CaptionML=ENU=Security Filter }
    { 1002;   ;Origin              ;Option        ;CaptionML=ENU=Origin;
                                                   OptionCaptionML=ENU=" ,Recorded,Additional,Object Information,Relation,Copied,History Table,Security Table,Builder";
                                                   OptionString=[ ,Recorded,Additional,Object Information,Relation,Copied,History Table,Security Table,Builder] }
    { 1003;   ;Do not include Additional;Boolean  ;CaptionML=ENU=Do not include Additional }
    { 1004;   ;Source/DataItem Table ID;Integer   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ES Relation"."Relation Object ID" WHERE (Object Type=FIELD(Object Type),
                                                                                                                Object ID=FIELD(Object ID),
                                                                                                                Type=FILTER(Source Table|Data Item)));
                                                   CaptionML=ENU=Source/DataItem Table ID;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 1005;   ;Limited Access Object;Boolean      ;FieldClass=FlowField;
                                                   CalcFormula=Exist("ES Object Property" WHERE (Object Type=FIELD(Object Type),
                                                                                                 Object ID=FIELD(Object ID),
                                                                                                 Object Level Permissions=CONST(Yes)));
                                                   CaptionML=ENU=Limited Access Object;
                                                   Editable=No }
    { 1006;   ;Limited License Object;Boolean     ;FieldClass=FlowField;
                                                   CalcFormula=Exist("ES Object Property" WHERE (Object Type=FIELD(Object Type),
                                                                                                 Object ID=FIELD(Object ID),
                                                                                                 Limited License Object=CONST(Yes)));
                                                   CaptionML=ENU=Limited License Object;
                                                   Editable=No }
    { 1007;   ;Created By User     ;Code50        ;CaptionML=ENU=Created By User;
                                                   Editable=No }
    { 1008;   ;Created Date Time   ;DateTime      ;CaptionML=ENU=Created Date Time;
                                                   Editable=No }
    { 1009;   ;Free Access Object  ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("ES Object Property" WHERE (Object Type=FIELD(Object Type),
                                                                                                 Object ID=FIELD(Object ID),
                                                                                                 Object Level Permissions=CONST(No),
                                                                                                 Limited License Object=CONST(No)));
                                                   CaptionML=ENU=Free Access Object;
                                                   Editable=No }
    { 1010;   ;Role Exists         ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("ES Role" WHERE (Role ID=FIELD(Role ID)));
                                                   CaptionML=ENU=Permission Set Exists;
                                                   Editable=No }
    { 1011;   ;Security Filter Object;Boolean     ;FieldClass=FlowField;
                                                   CalcFormula=Exist("ES Object Property" WHERE (Object Type=FIELD(Object Type),
                                                                                                 Object ID=FIELD(Object ID),
                                                                                                 Security Filter Table=CONST(Yes)));
                                                   CaptionML=ENU=Security Filter Object;
                                                   Editable=No }
    { 1012;   ;Limited User Included Object;Boolean;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Exist("ES Object Property" WHERE (Object Type=FIELD(Object Type),
                                                                                                 Object ID=FIELD(Object ID),
                                                                                                 Limited User Table Access=CONST(Included)));
                                                   CaptionML=ENU=Limited User Included Object;
                                                   Editable=No }
    { 1013;   ;Exists in Parent Role;Boolean      ;CaptionML=ENU=Exists in Parent Permission Set;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Role ID,Object Type,Object ID           ;Clustered=Yes }
    {    ;Object Type,Object ID                    }
    {    ;Created Date Time                        }
    {    ;Created By User,Created Date Time        }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ESSecuritySetup@1240520008 : Record 14123521;
      ESRole@1240520009 : Record 14123505;
      ESRolePerm@1240520011 : Record 14123506;
      ESRoleDetail@1240520012 : Record 14123653;
      AllowZeroNoQuestion@1240520010 : Boolean;
      Text001@1001 : TextConst 'ENU=Insert Permission for 0?';
      Text002@1002 : TextConst 'ENU=%1 must be entered';
      Text003@1003 : TextConst 'ENU=Inserted %1 %2 %3';
      Text004@1004 : TextConst 'ENU=Modified %1 %2 %3';
      Text005@1005 : TextConst 'ENU=Deleted %1 %2 %3';
      Text006@1006 : TextConst 'ENU=Rename not allowed.';
      Text007@1007 : TextConst 'ENU=%1 must be filtered.';
      Text008@1008 : TextConst 'ENU=Filter on %1 must be a simple filter.';
      Text009@1009 : TextConst 'ENU=0 permission for %1 %2 exists.';
      Test010@1240520013 : TextConst 'ENU=Permission Set %1 is maintained with the Permission Set Builder.';
      Text011@1240520014 : TextConst 'ENU=Permissions';
      ChangeWithNoComment@1240520001 : Boolean;

    PROCEDURE FormatPermissionString@1240520009() : Text[30];
    VAR
      ESFormatPermssion@1240520008 : Codeunit 14123506;
    BEGIN
      EXIT(
        ESFormatPermssion.FormatPermissionString(
          "Read Permission","Insert Permission","Modify Permission","Delete Permission",
          "Execute Permission"));
    END;

    PROCEDURE SetAllowZeroNoQuestion@1240520010(NoQuestion@1240520008 : Boolean;NoComments@1240520001 : Boolean);
    BEGIN
      AllowZeroNoQuestion := NoQuestion;
      ChangeWithNoComment := NoComments;
    END;

    PROCEDURE UpdateObjectCaption@1240520015();
    VAR
      AllObjWithCaption@1240520008 : Record 2000000058;
    BEGIN
      IF "Object Caption" <> '' THEN
        EXIT;

      IF AllObjWithCaption.GET("Object Type","Object ID") THEN
        "Object Caption" := AllObjWithCaption."Object Caption";
    END;

    PROCEDURE ObjectWhereUsed@1240520012();
    VAR
      ESObjectWhereUsed@1240520008 : Page 14123562;
    BEGIN
      CLEAR(ESObjectWhereUsed);
      ESObjectWhereUsed.InitObject("Object Type","Object ID");
      ESObjectWhereUsed.RUN;
    END;

    PROCEDURE AddPermissionsFrom@1240520011(VAR ESRolePerm@1240520008 : Record 14123506;TableNo@1240520009 : Integer);
    VAR
      ESRole@1240520010 : Record 14123505;
    BEGIN
      IF ESRolePerm."Role ID" = '' THEN BEGIN
        IF ESRolePerm.GETFILTER("Role ID") = '' THEN BEGIN
          ESRolePerm.FILTERGROUP(4);
          IF ESRolePerm.GETFILTER("Role ID") = '' THEN
            ERROR(Text007,ESRolePerm.FIELDCAPTION("Role ID"));
        END;

        IF ESRolePerm.GETRANGEMIN("Role ID") <> ESRolePerm.GETRANGEMAX("Role ID") THEN
          ERROR(Text008,ESRolePerm.FIELDCAPTION("Role ID"));

        ESRole.GET(ESRolePerm.GETRANGEMIN("Role ID"));

        ESRolePerm.FILTERGROUP(0);
      END ELSE
        ESRole.GET(ESRolePerm."Role ID");

      CASE TableNo OF
        DATABASE::"ES Object Information":
          ESRole.AddPermsFromObjectInfo;
        DATABASE::"ES Relation":
          ESRole.AddPermsFromRelation;
      END;
    END;

    PROCEDURE SetDefaultPermission@1240520013();
    BEGIN
      IF ("Read Permission" = "Read Permission"::Yes) AND
         ("Insert Permission" = "Insert Permission"::Yes) AND
         ("Modify Permission" = "Modify Permission"::Yes) AND
         ("Delete Permission" = "Delete Permission"::Yes) AND
         ("Execute Permission" = "Execute Permission"::Yes)
      THEN BEGIN
        ESSecuritySetup.GET;
        IF "Object Type" = "Object Type"::TableData THEN BEGIN
          "Read Permission" := ESSecuritySetup."TableData Read Perm. Default";
          "Insert Permission" := ESSecuritySetup."TableData Insert Perm. Default";
          "Modify Permission" := ESSecuritySetup."TableData Modify Perm. Default";
          "Delete Permission" := ESSecuritySetup."TableData Delete Perm. Default";
          "Execute Permission" := ESSecuritySetup."TableData Execute Perm Default";
        END ELSE BEGIN
          "Read Permission" := ESSecuritySetup."Object Read Perm. Default";
          "Insert Permission" := ESSecuritySetup."Object Insert Perm. Default";
          "Modify Permission" := ESSecuritySetup."Object Modify Perm. Default";
          "Delete Permission" := ESSecuritySetup."Object Delete Perm. Default";
          "Execute Permission" := ESSecuritySetup."Object Execute Perm. Default";
        END;
      END;
    END;

    PROCEDURE RoleLessThanOrEqual@1240520014(ComparedToESRolePerm@1240520008 : Record 14123506) : Boolean;
    BEGIN
      IF ("Read Permission" = "Read Permission"::Yes) AND
         (ComparedToESRolePerm."Read Permission" IN
          [ComparedToESRolePerm."Read Permission"::" ",
           ComparedToESRolePerm."Read Permission"::Indirect])
      THEN
        EXIT(FALSE);
      IF ("Read Permission" = "Read Permission"::Indirect) AND
         (ComparedToESRolePerm."Read Permission" =
          ComparedToESRolePerm."Read Permission"::" ")
      THEN
        EXIT(FALSE);

      IF ("Insert Permission" = "Insert Permission"::Yes) AND
         (ComparedToESRolePerm."Insert Permission" IN
          [ComparedToESRolePerm."Insert Permission"::" ",
           ComparedToESRolePerm."Insert Permission"::Indirect])
      THEN
        EXIT(FALSE);
      IF ("Insert Permission" = "Insert Permission"::Indirect) AND
         (ComparedToESRolePerm."Insert Permission" =
          ComparedToESRolePerm."Insert Permission"::" ")
      THEN
        EXIT(FALSE);

      IF ("Modify Permission" = "Modify Permission"::Yes) AND
         (ComparedToESRolePerm."Modify Permission" IN
          [ComparedToESRolePerm."Modify Permission"::" ",
           ComparedToESRolePerm."Modify Permission"::Indirect])
      THEN
        EXIT(FALSE);
      IF ("Modify Permission" = "Modify Permission"::Indirect) AND
         (ComparedToESRolePerm."Modify Permission" =
          ComparedToESRolePerm."Modify Permission"::" ")
      THEN
        EXIT(FALSE);

      IF ("Delete Permission" = "Delete Permission"::Yes) AND
         (ComparedToESRolePerm."Delete Permission" IN
          [ComparedToESRolePerm."Delete Permission"::" ",
           ComparedToESRolePerm."Delete Permission"::Indirect])
      THEN
        EXIT(FALSE);
      IF ("Delete Permission" = "Delete Permission"::Indirect) AND
         (ComparedToESRolePerm."Delete Permission" =
          ComparedToESRolePerm."Delete Permission"::" ")
      THEN
        EXIT(FALSE);

      IF ("Execute Permission" = "Execute Permission"::Yes) AND
         (ComparedToESRolePerm."Execute Permission" IN
          [ComparedToESRolePerm."Execute Permission"::" ",
           ComparedToESRolePerm."Execute Permission"::Indirect])
      THEN
        EXIT(FALSE);
      IF ("Execute Permission" = "Execute Permission"::Indirect) AND
         (ComparedToESRolePerm."Execute Permission" =
          ComparedToESRolePerm."Execute Permission"::" ")
      THEN
        EXIT(FALSE);

      IF FORMAT("Security Filter") <> FORMAT(ComparedToESRolePerm."Security Filter") THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE FormatAsTextLine@1240520016(ShortPermissionText@1240520009 : Boolean;VAR ESTextLine@1240520011 : Record 14123520;NoOfRelatedKeyFields@1240520012 : Integer;CalcFlowFields@1240520013 : Boolean;UserDateTimeDetails@1240520014 : Boolean;OriginDetails@1240520015 : Boolean) : Boolean;
    VAR
      ESFormatMgt@1240520016 : Codeunit 14123505;
      RecRef@1240520010 : RecordRef;
    BEGIN
      ESFormatMgt.NewRecord(
        TABLECAPTION,"Role ID",FORMAT("Object Type"),FORMAT("Object ID"),'','','','','','','',3,
        NoOfRelatedKeyFields);
      IF NOT ShortPermissionText THEN BEGIN
        ESFormatMgt.AddField(FIELDCAPTION("Read Permission"),FORMAT("Read Permission"));
        ESFormatMgt.AddField(FIELDCAPTION("Insert Permission"),FORMAT("Insert Permission"));
        ESFormatMgt.AddField(FIELDCAPTION("Modify Permission"),FORMAT("Modify Permission"));
        ESFormatMgt.AddField(FIELDCAPTION("Delete Permission"),FORMAT("Delete Permission"));
        ESFormatMgt.AddField(FIELDCAPTION("Execute Permission"),FORMAT("Execute Permission"));
      END ELSE
        ESFormatMgt.AddField(Text011,FormatPermissionString);
      ESFormatMgt.AddField(FIELDCAPTION("Security Filter"),FORMAT("Security Filter"));

      IF OriginDetails THEN BEGIN
        ESFormatMgt.AddField(FIELDCAPTION(Origin),FORMAT(Origin));
        IF "Do not include Additional" THEN
          ESFormatMgt.AddField(FIELDCAPTION("Do not include Additional"),FORMAT("Do not include Additional"));
      END;

      IF UserDateTimeDetails THEN BEGIN
        ESFormatMgt.AddField(FIELDCAPTION("Created By User"),FORMAT("Created By User"));
        IF "Created Date Time" <> 0DT THEN
          ESFormatMgt.AddField(FIELDCAPTION("Created Date Time"),FORMAT("Created Date Time"));
      END;

      IF CalcFlowFields THEN BEGIN
        CALCFIELDS(
          "Role Name","Object Caption","Source/DataItem Table ID","Limited Access Object",
          "Limited License Object","Free Access Object","Role Exists");

        ESFormatMgt.AddFlowField(FIELDCAPTION("Role Name"),FORMAT("Role Name"));
        ESFormatMgt.AddFlowField(FIELDCAPTION("Object Caption"),FORMAT("Object Caption"));
        IF "Source/DataItem Table ID" <> 0 THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Source/DataItem Table ID"),FORMAT("Source/DataItem Table ID"));
        IF "Limited Access Object" THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Limited Access Object"),FORMAT("Limited Access Object"));
        IF "Limited License Object" THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Limited License Object"),FORMAT("Limited License Object"));
        IF "Free Access Object" THEN
          ESFormatMgt.AddFlowField(FIELDCAPTION("Free Access Object"),FORMAT("Free Access Object"));
        IF "Role Exists" THEN
          ESFormatMgt.AddFlowField(FIELDCAPTION("Role Exists"),FORMAT("Role Exists"));
      END;

      RecRef.OPEN(DATABASE::"ES Role Permission");
      RecRef.GETTABLE(Rec);
      ESFormatMgt.FormatNewESTextLine(ESTextLine,DATABASE::"ES Role Permission",RecRef.RECORDID);

      EXIT(ESFormatMgt.NoTextOverflow);
    END;

    PROCEDURE Comment@1240520008(FunctionNo@1240520008 : ' ,Insert,Show,Exist,DeleteAll';NewText@1240520010 : Text[250]) : Boolean;
    VAR
      ESComment@1240520009 : Record 14123524;
    BEGIN
      ESComment.RESET;
      ESComment.SETRANGE("Table ID",DATABASE::"ES Role Permission");
      ESComment.SETRANGE("Role ID","Role ID");
      ESComment.SETRANGE(Type,"Object Type");
      ESComment.SETRANGE("Object ID","Object ID");
      EXIT(ESComment.Functions(FunctionNo,NewText));
    END;

    BEGIN
    END.
  }
}

