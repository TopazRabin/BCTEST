OBJECT Table 23044506 IWX License Plate Line
{
  OBJECT-PROPERTIES
  {
    Date=08/14/19;
    Time=[ 1:21:28 PM];
    Version List=IWX2.4.7684.0;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF( recLPHeader.GET("License Plate No.") ) THEN BEGIN
                 recLPHeader.CALCFIELDS("Source Document");

                 IF (recLPHeader."Permission Required" = recLPHeader."Permission Required"::Yes) THEN BEGIN
                   IF( NOT cuFunctionPerms.isAllowed('Manage License Plates') ) THEN BEGIN
                     recLPHeader.TESTFIELD("Source Document Type",recLPHeader."Source Document Type"::" ");

                     IF (recLPHeader.Locked) THEN
                       ERROR(tcIsLocked,recLPHeader."No.");

                     IF( (recLPHeader.Status = recLPHeader.Status::Unbuilt) OR
                         (recLPHeader.Status = recLPHeader.Status::Shipped) OR
                         (recLPHeader.Status = recLPHeader.Status::Quarantined) ) THEN
                       ERROR(tcCannotInsert,recLPHeader."No.",recLPHeader.Status);
                   END;
                 END;
                 cuLPCommon.generateLPDescription(recLPHeader,Rec,FALSE);

                 cuLPCommon.updateCharacteristics( recLPHeader, Rec, FALSE,'');
                 IF (GUIALLOWED) THEN BEGIN
                   cuLPCommon.testLPCharacteristicsInGUI(recLPHeader);
                 END;

                 IF (NOT GUIALLOWED) THEN BEGIN
                   recLPHeader.MODIFY(TRUE);
                 END; // IF NOT GUIALLOWED

               END;
             END;

    OnModify=BEGIN
               IF( recLPHeader.GET("License Plate No.") ) THEN BEGIN
                 recLPHeader.CALCFIELDS("Source Document");

                 IF (recLPHeader."Permission Required" = recLPHeader."Permission Required"::Yes) THEN BEGIN
                   IF( NOT cuFunctionPerms.isAllowed('Manage License Plates') ) THEN BEGIN

                     IF (recLPHeader.Locked) THEN
                       ERROR(tcIsLocked,recLPHeader."No.");

                     IF (recLPHeader."Source Document Type" <> recLPHeader."Source Document Type"::" " ) THEN BEGIN
                       IF( (recLPHeader.Status = recLPHeader.Status::Unbuilt) OR
                          (recLPHeader.Status = recLPHeader.Status::Shipped) ) THEN  BEGIN
                         ERROR(tcCannotModify,recLPHeader."No.",recLPHeader.Status);
                       END; // ensure that the LP is not unbuild and not shipped if there is a source document.
                     END;// if the lp has a source document
                   END;
                  END;
                 cuLPCommon.generateLPDescription(recLPHeader,Rec,FALSE);

                 cuLPCommon.updateCharacteristics( recLPHeader, Rec, FALSE,'');
                 IF (GUIALLOWED) THEN
                   cuLPCommon.testLPCharacteristicsInGUI(recLPHeader);

                 IF (NOT GUIALLOWED) THEN BEGIN
                   recLPHeader.MODIFY(TRUE);
                 END; // IF NOT GUIALLOWED
               END;
             END;

    OnDelete=VAR
               lrecLPLineUsage@1000000000 : Record 23044507;
             BEGIN
               IF( recLPHeader.GET("License Plate No.") ) THEN BEGIN
                 recLPHeader.CALCFIELDS("Source Document");

                 IF (recLPHeader."Permission Required" = recLPHeader."Permission Required"::Yes) THEN BEGIN
                   IF( NOT cuFunctionPerms.isAllowed('Manage License Plates') ) THEN BEGIN
                     IF (recLPHeader.Locked) THEN
                       ERROR(tcIsLocked,recLPHeader."No.");

                     IF (recLPHeader."Source Document Type" <> recLPHeader."Source Document Type"::" " ) THEN BEGIN
                       IF( (recLPHeader.Status = recLPHeader.Status::Unbuilt) OR
                          (recLPHeader.Status = recLPHeader.Status::Shipped) ) THEN  BEGIN
                        ERROR(tcCannotModify,recLPHeader."No.",recLPHeader.Status);
                       END; // ensure that the LP is not unbuild and not shipped if there is a source document.
                     END;// if the lp has a source document
                   END;
                 END;

                 lrecLPLineUsage.SETRANGE("License Plate No.","License Plate No.");
                 lrecLPLineUsage.SETRANGE("License Plate Line No.","Line No.");
                 lrecLPLineUsage.DELETEALL;

                 cuLPCommon.generateLPDescription(recLPHeader,Rec,TRUE);

                 cuLPCommon.updateCharacteristics( recLPHeader, Rec, TRUE,'');
                 IF (GUIALLOWED) THEN
                   cuLPCommon.testLPCharacteristicsInGUI(recLPHeader);
                 //
                 IF (NOT GUIALLOWED) THEN BEGIN
                   recLPHeader.MODIFY(TRUE);
                 END; // IF NOT GUIALLOWED

               END;
             END;

    CaptionML=[ENU=License Plate Line;
               ESM=L¡nea de placa;
               FRC=Ligne de plaque d'immatriculation;
               ENC=License Plate Line];
  }
  FIELDS
  {
    { 1   ;   ;License Plate No.   ;Code20        ;TableRelation="IWX License Plate Header";
                                                   CaptionML=[ENU=License Plate No.;
                                                              ESM=Placa de matr¡cula N§;
                                                              FRC=Plaque d'immatriculation No.;
                                                              ENC=License Plate No.] }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              ESM=L¡nea Nø;
                                                              FRC=Ligne Nø;
                                                              ENC=Line No.] }
    { 3   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=BEGIN
                                                                VALIDATE(Type,Type::Item);
                                                                VALIDATE("No.", "Item No.");
                                                              END;

                                                   CaptionML=[ENU=Item No.;
                                                              ESM=N§ producto;
                                                              FRC=Nø d'article;
                                                              ENC=Item No.] }
    { 4   ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(No.));
                                                   CaptionML=[ENU=Variant Code;
                                                              ESM=C¢digo variante;
                                                              FRC=code de la variante;
                                                              ENC=Variant Code] }
    { 5   ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                IF( ("Serial No." <> '') AND (Quantity > 1) ) THEN
                                                                  ERROR(tcInvalidSNQty);

                                                                VALIDATE("Quantity (Base)", Quantity * "Qty. per Unit of Measure");
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              ESM=Cantidad;
                                                              FRC=Quantit‚;
                                                              ENC=Quantity];
                                                   DecimalPlaces=0:5 }
    { 6   ;   ;Quantity (Base)     ;Decimal       ;OnValidate=BEGIN

                                                                Quantity := "Quantity (Base)" / "Qty. per Unit of Measure";
                                                              END;

                                                   CaptionML=[ENU=Quantity (Base);
                                                              ESM=Cantidad (Base);
                                                              FRC=Quantit‚ (base);
                                                              ENC=Quantity (Base)] }
    { 7   ;   ;Serial No.          ;Code100       ;OnValidate=BEGIN
                                                                IF( ("Serial No." <> '') AND (Quantity > 1) ) THEN BEGIN
                                                                  ERROR(tcInvalidSNQty);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Serial No.;
                                                              ESM=N§ serie;
                                                              FRC=Nø de s‚rie;
                                                              ENC=Serial No.] }
    { 8   ;   ;Lot No.             ;Code100       ;CaptionML=[ENU=Lot No.;
                                                              ESM=N§ lote;
                                                              FRC=Nø de lot;
                                                              ENC=Lot No.] }
    { 9   ;   ;Barcode             ;Text250       ;CaptionML=[ENU=Barcode;
                                                              ESM=C¢digo de barras;
                                                              FRC=code … barre;
                                                              ENC=Barcode] }
    { 10  ;   ;Unit of Measure Code;Code10        ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(No.));
                                                   OnValidate=VAR
                                                                ldOldQtyPer@1000000000 : Decimal;
                                                              BEGIN
                                                                //<IW author="R.Trudeau" date="01/07/19" issue="TFS4388">
                                                                IF Type <> Type::Item THEN
                                                                  EXIT;


                                                                ldOldQtyPer := "Qty. per Unit of Measure";

                                                                IF "Unit of Measure Code" = '' THEN BEGIN
                                                                  "Qty. per Unit of Measure" := 1;
                                                                END ELSE BEGIN
                                                                  getItemUOM("No.", "Unit of Measure Code");
                                                                  "Qty. per Unit of Measure" := recItemUOM."Qty. per Unit of Measure";
                                                                  IF "Qty. per Unit of Measure"= 0 THEN BEGIN
                                                                    "Qty. per Unit of Measure" := 1;
                                                                  END;
                                                                END;//if

                                                                IF (ldOldQtyPer <> "Qty. per Unit of Measure") AND (Quantity <> 0) AND (xRec."No."<>'') THEN BEGIN
                                                                  VALIDATE(Quantity);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              ESM=Unidad de Medida C¢digo;
                                                              FRC=Unit‚ de Code de mesure;
                                                              ENC=Unit of Measure Code] }
    { 11  ;   ;Qty. per Unit of Measure;Decimal   ;CaptionML=[ENU=Qty. per Unit of Measure;
                                                              ESM=Cant. por unidad de medida;
                                                              FRC=Qt‚. par unit‚ de mesure;
                                                              ENC=Qty. per Unit of Measure];
                                                   Editable=No }
    { 12  ;   ;Expiration Date     ;Date          ;CaptionML=[ENU=Expiration Date;
                                                              ESM=Fecha de caducidad;
                                                              FRC=Date d'expiration;
                                                              ENC=Expiration Date] }
    { 13  ;   ;Usage Quantity      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("IWX License Plate Line Usage".Quantity WHERE (License Plate No.=FIELD(License Plate No.),
                                                                                                                  License Plate Line No.=FIELD(Line No.),
                                                                                                                  Posting Date=CONST()));
                                                   CaptionML=[ENU=Usage Quantity;
                                                              ESM=Uso Cantidad;
                                                              FRC=Utilisation Quantit‚;
                                                              ENC=Usage Quantity];
                                                   Editable=No }
    { 14  ;   ;Type                ;Option        ;InitValue=Item;
                                                   CaptionML=[ENU=Type;
                                                              ESM=Tipo;
                                                              FRC=Type;
                                                              ENC=Type];
                                                   OptionCaptionML=[ENU=Item,License Plate;
                                                                    ESM=Producto,Placa;
                                                                    FRC=Article,Plaque d'immatriculation;
                                                                    ENC=Item,License Plate];
                                                   OptionString=Item,License Plate }
    { 15  ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Item)) Item.No.
                                                                 ELSE IF (Type=CONST(License Plate)) "IWX License Plate Header".No.;
                                                   OnValidate=VAR
                                                                lrecLPHeader@1000000000 : Record 23044505;
                                                                lrecLPHeaderParent@1000000001 : Record 23044505;
                                                                lrecLPSetup@1000000002 : Record 23044523;
                                                              BEGIN
                                                                IF Type = Type::Item THEN BEGIN
                                                                  "Item No." := "No.";

                                                                  CALCFIELDS(Description,"Description 2");

                                                                  IF "No."<> xRec."No." THEN BEGIN
                                                                    getItem("No.");
                                                                    "Unit of Measure Code" := recItem."Base Unit of Measure";
                                                                    "Qty. per Unit of Measure" := 1;
                                                                  END;
                                                                END ELSE BEGIN
                                                                  lrecLPSetup.GET;
                                                                  lrecLPSetup.TESTFIELD("Allow Embedded License Plates",lrecLPSetup."Allow Embedded License Plates"::Yes);

                                                                  IF lrecLPHeader.GET("No.") THEN BEGIN
                                                                    lrecLPHeader.CALCFIELDS("Parent License Plate No.");
                                                                    lrecLPHeader.TESTFIELD("Parent License Plate No.",'');
                                                                    lrecLPHeaderParent.GET("License Plate No.");
                                                                    lrecLPHeader.TESTFIELD("Location Code", lrecLPHeaderParent."Location Code");
                                                                    lrecLPHeader.TESTFIELD("Bin Code",lrecLPHeaderParent."Bin Code");

                                                                    CheckInfiniteEmbeddedLP("No.","License Plate No.");
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ESM=N§;
                                                              FRC=Nø;
                                                              ENC=No.] }
    { 16  ;   ;Parent License Plate No.;Code20    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("IWX License Plate Line"."License Plate No." WHERE (Type=CONST(License Plate),
                                                                                                                          No.=FIELD(License Plate No.)));
                                                   CaptionML=[ENU=Parent License Plate No.;
                                                              ESM=Matr¡cula de los padres No.;
                                                              FRC=Num‚ro de plaque d'immatriculation parent;
                                                              ENC=Parent License Plate No.];
                                                   Editable=No }
    { 17  ;   ;Parent License Plate Line No.;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("IWX License Plate Line"."Line No." WHERE (Type=CONST(License Plate),
                                                                                                                 No.=FIELD(License Plate No.)));
                                                   CaptionML=[ENU=Parent License Plate Line No.;
                                                              ESM=N£mero de l¡nea de placa de matr¡cula de los padres;
                                                              FRC=Num‚ro de ligne de la plaque d'immatriculation parent;
                                                              ENC=Parent License Plate Line No.];
                                                   Editable=No }
    { 20  ;   ;Description         ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Item.Description WHERE (No.=FIELD(No.)));
                                                   CaptionML=[ENU=Description;
                                                              ESM=Descripci¢n;
                                                              FRC=Description;
                                                              ENC=Description];
                                                   Editable=No }
    { 21  ;   ;Description 2       ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Item."Description 2" WHERE (No.=FIELD(No.)));
                                                   CaptionML=[ENU=Description 2;
                                                              ESM=Descripci¢n 2;
                                                              FRC=Description 2;
                                                              ENC=Description 2];
                                                   Editable=No }
    { 40  ;   ;LP Status           ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("IWX License Plate Header".Status WHERE (No.=FIELD(License Plate No.)));
                                                   CaptionML=[ENU=LP Status;
                                                              ESM=LP Estado;
                                                              FRC=LP Statut;
                                                              ENC=LP Status];
                                                   OptionString=[ ,Quarantined,Unbuilt,Shipped];
                                                   Editable=No }
    { 41  ;   ;Consumption Status  ;Option        ;CaptionML=[ENU=Consumption Status;
                                                              ESM=Estado del consumo;
                                                              FRC=‚tat de la consommation;
                                                              ENC=Consumption Status];
                                                   OptionCaptionML=[ENU=" ,,,Partially Consumed,,,Fully Consumed";
                                                                    FRC=" ,,, Partiellement consommùÝe,,, entiùùrement consommùÝe";
                                                                    ENC=" ,,,Partially Consumed,,,Fully Consumed"];
                                                   OptionString=[ ,,,Partially Consumed,,,Fully Consumed];
                                                   Editable=No }
    { 100 ;   ;Quantity (Alt.)     ;Decimal       ;CaptionML=[ENU=Quantity (Alt.);
                                                              ESM=Cantidad (Alt.);
                                                              FRC=Quantit‚ (Alt.);
                                                              ENC=Quantity (Alt.)] }
    { 101 ;   ;Unit of Measure (Alt.);Code10      ;CaptionML=[ENU=Unit of Measure (Alt.);
                                                              ESM=Unidad de medida (Alt.);
                                                              FRC=Unit‚ de mesure (Alt.);
                                                              ENC=Unit of Measure (Alt.)] }
    { 23044600;;Scanned Quantity   ;Decimal       ;CaptionML=[ENU=Scanned Quantity;
                                                              ESM=escaneada Cantidad;
                                                              FRC=Quantit‚ Scann‚e;
                                                              ENC=Scanned Quantity];
                                                   Editable=No }
    { 23044601;;Catch Alternate Qtys.;Boolean     ;OnValidate=BEGIN
                                                                // Used in the food industry.
                                                                // Lookup(Item."Catch Alternate Qtys." WHERE (No.=FIELD(No.)))
                                                              END;

                                                   CaptionML=[ENU=Catch Alternate Qtys.;
                                                              ESM=Coger alternativo qtys.;
                                                              FRC=attraper autre Qt‚.;
                                                              ENC=Catch Alternate Qtys.];
                                                   Editable=No }
    { 23044610;;Scanned UOM        ;Code10        ;CaptionML=[ENU=Scanned Unit of Measure;
                                                              ESM=Unidad de Medida escaneado;
                                                              FRC=Unit‚ de mesure num‚ris‚e;
                                                              ENC=Scanned Unit of Measure];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;License Plate No.,Line No.              ;SumIndexFields=Quantity;
                                                   Clustered=Yes }
    {    ;Item No.,Lot No.,Serial No.             ;SumIndexFields=Quantity,Quantity (Alt.) }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      tcInvalidSNQty@1000000000 : TextConst 'ENC=The maximum quantity for serialized items is 1.';
      recLPHeader@1000000001 : Record 23044505;
      tcCannotModify@1000000002 : TextConst 'ENC=The License Plate: %1 cannot be changed while the status is: %2.';
      tcCannotInsert@1000000004 : TextConst 'ENU=Items cannot be added to the License Plate: %1 while the status is: %2.;FRC=Des articles ne peuvent ˆtre ajout‚s … la palette: %1 lorsque le statut est: %2.;ENC=Items cannot be added to the License Plate: %1 while the status is: %2.';
      cuFunctionPerms@1000000005 : Codeunit 23044523;
      tcIsLocked@1000000006 : TextConst 'ENU=License Plate: %1 cannot be modified or deleted while it''s locked;FRC=Palette : %1ne peut ˆtre modifi‚ ou supprim‚ lorsqu''il est v‚rouill‚.;ENC=License Plate: %1 cannot be modified or deleted while it''s locked';
      recItemUOM@1000000009 : Record 5404;
      recItem@1000000010 : Record 27;
      cuLPCommon@1000000007 : Codeunit 23044541;

    PROCEDURE showLineUsage@1000000012();
    VAR
      lrecLineUsage@1000000001 : Record 23044507;
      lpgLPLineUsage@1000000000 : Page 23044514;
    BEGIN
      //////////////////////////////////////////////
      //<Summary>
      // Launches the Line Usage form for the License Plate line.
      //</Summary>
      //<Author>R.Trudeau</Author>
      //<Date>5/17/2011</Date>
      //<Issue></Issue>
      //<Version>IW1.0</Version>
      //////////////////////////////////////////////

      lrecLineUsage.FILTERGROUP(2);
      lrecLineUsage.SETRANGE("License Plate No.","License Plate No.");
      lrecLineUsage.SETRANGE("License Plate Line No.","Line No.");
      //lrecLineUsage.SETRANGE("Posting Date",0D);
      lrecLineUsage.FILTERGROUP(0);
      lpgLPLineUsage.SETTABLEVIEW(lrecLineUsage);
      lpgLPLineUsage.RUNMODAL;
    END;

    PROCEDURE getItemUOM@1000000013(pcodItemNo@1000000000 : Text;pcodUOM@1000000001 : Code[10]);
    BEGIN
      IF (recItemUOM."Item No." <> pcodItemNo) OR (recItemUOM.Code <> pcodUOM) THEN
        IF NOT recItemUOM.GET(pcodItemNo, pcodUOM) THEN
          CLEAR(recItemUOM);
    END;

    PROCEDURE getItem@1000000005(pcodItem@1000000000 : Text);
    BEGIN

      IF recItem."No." <> pcodItem THEN
        recItem.GET(pcodItem);
    END;

    PROCEDURE CheckInfiniteEmbeddedLP@1000000000(pcodEmbeddedLPNumber@1000000000 : Code[20];pcodParentLPNumber@1000000001 : Code[20]);
    VAR
      lrecEmbeddedLPLines@1000000002 : Record 23044506;
    BEGIN
      //<FUNC>
      //  Description: Ensure that the LPs are only ever embedded once.
      //               Recurses through embedded license plates
      //</FUNC>

      lrecEmbeddedLPLines.SETRANGE("License Plate No.",pcodEmbeddedLPNumber);
      lrecEmbeddedLPLines.SETRANGE(Type,lrecEmbeddedLPLines.Type::"License Plate");

      IF lrecEmbeddedLPLines.FINDSET(FALSE) THEN BEGIN
        REPEAT
          IF lrecEmbeddedLPLines."No." = pcodParentLPNumber THEN
            ERROR('%1 has already been added to %2.',pcodParentLPNumber,lrecEmbeddedLPLines."License Plate No.");

          CheckInfiniteEmbeddedLP(lrecEmbeddedLPLines."No.",pcodParentLPNumber);
        UNTIL(lrecEmbeddedLPLines.NEXT=0);
      END;
    END;

    BEGIN
    {
      ************************
      Copyright Notice
      This objects content is copyright of Insight Works 2011.  All rights reserved.
      Any redistribution or reproduction of part or all of the contents in any form is prohibited.
      ************************
    }
    END.
  }
}

