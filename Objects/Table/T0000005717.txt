OBJECT Table 5717 Item Cross Reference
{
  OBJECT-PROPERTIES
  {
    Date=11/22/17;
    Time=12:00:00 PM;
    Version List=NAVW111.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF ("Cross-Reference Type No." <> '') AND
                  ("Cross-Reference Type" = "Cross-Reference Type"::" ")
               THEN
                 ERROR(Text000,FIELDCAPTION("Cross-Reference Type No."));

               Item.GET("Item No.");
               IF "Unit of Measure" = '' THEN
                 VALIDATE("Unit of Measure",Item."Base Unit of Measure");
               CreateItemVendor;
             END;

    OnDelete=BEGIN
               IF "Cross-Reference Type" = "Cross-Reference Type"::Vendor THEN
                 DeleteItemVendor(Rec)
             END;

    OnRename=BEGIN
               IF ("Cross-Reference Type No." <> '') AND
                  ("Cross-Reference Type" = "Cross-Reference Type"::" ")
               THEN
                 ERROR(Text000,FIELDCAPTION("Cross-Reference Type No."));

               IF ("Cross-Reference Type" = "Cross-Reference Type"::Vendor) AND NOT ItemVendorResetRequired(xRec,Rec) THEN
                 UpdateItemVendorNo(xRec,"Cross-Reference No.")
               ELSE BEGIN
                 IF xRec."Cross-Reference Type" = "Cross-Reference Type"::Vendor THEN
                   DeleteItemVendor(xRec);
                 IF "Cross-Reference Type" = "Cross-Reference Type"::Vendor THEN
                   CreateItemVendor;
               END;
             END;

    CaptionML=[ENU=Item Cross Reference;
               ESM=Referencia cruzada producto;
               FRC=Article r‚f‚rence;
               ENC=Item Cross Reference];
    LookupPageID=Page5724;
  }
  FIELDS
  {
    { 1   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[ENU=Item No.;
                                                              ESM=N§ producto;
                                                              FRC=Nø d'article;
                                                              ENC=Item No.] }
    { 2   ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[ENU=Variant Code;
                                                              ESM=C¢d. variante;
                                                              FRC=Code variante;
                                                              ENC=Variant Code] }
    { 3   ;   ;Unit of Measure     ;Code10        ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[ENU=Unit of Measure;
                                                              ESM=Unidad medida;
                                                              FRC=Unit‚ de mesure;
                                                              ENC=Unit of Measure] }
    { 4   ;   ;Cross-Reference Type;Option        ;OnValidate=BEGIN
                                                                IF ("Cross-Reference Type" <> xRec."Cross-Reference Type") AND
                                                                   (xRec."Cross-Reference Type" <> xRec."Cross-Reference Type"::" ") OR
                                                                   ("Cross-Reference Type" = "Cross-Reference Type"::"Bar Code")
                                                                THEN
                                                                  "Cross-Reference Type No." := '';
                                                              END;

                                                   CaptionML=[ENU=Cross-Reference Type;
                                                              ESM=Tipo referencia cruzada;
                                                              FRC=Type r‚f‚rence externe;
                                                              ENC=Cross-Reference Type];
                                                   OptionCaptionML=[ENU=" ,Customer,Vendor,Bar Code";
                                                                    ESM=" ,Cliente,Prov.,C¢d. barra";
                                                                    FRC=" ,Client,Fournisseur,Code … barres";
                                                                    ENC=" ,Customer,Vendor,Bar Code"];
                                                   OptionString=[ ,Customer,Vendor,Bar Code] }
    { 5   ;   ;Cross-Reference Type No.;Code30    ;TableRelation=IF (Cross-Reference Type=CONST(Customer)) Customer.No.
                                                                 ELSE IF (Cross-Reference Type=CONST(Vendor)) Vendor.No.;
                                                   CaptionML=[ENU=Cross-Reference Type No.;
                                                              ESM=N§ tipo referencia cruzada;
                                                              FRC=Nø type r‚f‚rence externe;
                                                              ENC=Cross-Reference Type No.] }
    { 6   ;   ;Cross-Reference No. ;Code20        ;CaptionML=[ENU=Cross-Reference No.;
                                                              ESM=N§ referencia cruzada;
                                                              FRC=R‚f‚rence externe;
                                                              ENC=Cross-Reference No.];
                                                   NotBlank=Yes }
    { 7   ;   ;Description         ;Text50        ;OnValidate=BEGIN
                                                                //<TPZ2508>
                                                                // <TPZ135>
                                                                // IF "Cross-Reference Type" = "Cross-Reference Type"::Vendor THEN BEGIN
                                                                //  PurchLine.RESET;
                                                                //  PurchLine.SETRANGE(Type,PurchLine.Type::Item);
                                                                //  PurchLine.SETRANGE("No.","Item No.");
                                                                //  PurchLine.SETRANGE("Variant Code","Variant Code");
                                                                //  PurchLine.SETRANGE("Buy-from Vendor No.","Cross-Reference Type No.");
                                                                //  IF PurchLine.FIND('-') THEN
                                                                //    REPEAT
                                                                //      IF NOT
                                                                //           ((PurchLine."Document Type" = ExclDocType) AND
                                                                //            (PurchLine."Document No." = ExclDocNo) AND
                                                                //            (PurchLine."Line No." = ExclDocLineNo))
                                                                //      THEN BEGIN
                                                                //        PurchLine."Vendor Item Description" := Description;
                                                                //        PurchLine.MODIFY;
                                                                //      END;
                                                                //    UNTIL PurchLine.NEXT = 0;
                                                                //
                                                                //  ReqLine.RESET;
                                                                //  ReqLine.SETRANGE(Type,ReqLine.Type::Item);
                                                                //  ReqLine.SETRANGE("No.","Item No.");
                                                                //  ReqLine.SETRANGE("Variant Code","Variant Code");
                                                                //  ReqLine.SETRANGE("Vendor No.","Cross-Reference Type No.");
                                                                //  IF ReqLine.FIND('-') THEN
                                                                //    REPEAT
                                                                //      IF NOT
                                                                //           ((ReqLine."Worksheet Template Name" = ExclWkshTemplateName) AND
                                                                //            (ReqLine."Journal Batch Name" = ExclWkshBatchName) AND
                                                                //            (ReqLine."Line No." = ExclWkshLineNo))
                                                                //      THEN BEGIN
                                                                //        ReqLine."Vendor Item Description" := Description;
                                                                //        ReqLine.MODIFY;
                                                                //      END;
                                                                //    UNTIL ReqLine.NEXT = 0;
                                                                //
                                                                //  PurchPrice.RESET;
                                                                //  PurchPrice.SETRANGE("Item No.","Item No.");
                                                                //  PurchPrice.SETRANGE("Vendor No.","Cross-Reference Type No.");
                                                                //  PurchPrice.SETRANGE("Variant Code","Variant Code");
                                                                //  IF PurchPrice.FIND('-') THEN
                                                                //    REPEAT
                                                                //      IF NOT
                                                                //           ((PurchPrice."Item No." = ExclItemNo) AND
                                                                //            (PurchPrice."Vendor No." = ExclVendorNo) AND
                                                                //            (PurchPrice."Starting Date" = ExclStartingDate) AND
                                                                //            (PurchPrice."Currency Code" = ExclCurrencyCode) AND
                                                                //            (PurchPrice."Variant Code" = ExclVariantCode) AND
                                                                //            (PurchPrice."Unit of Measure Code" = ExclUOMCode) AND
                                                                //            (PurchPrice."Minimum Quantity" = ExclMinQty))
                                                                //      THEN BEGIN
                                                                //        PurchPrice."Vendor Item Description" := Description;
                                                                //        PurchPrice.MODIFY;
                                                                //      END;
                                                                //    UNTIL PurchPrice.NEXT = 0;
                                                                // END;
                                                                // </TPZ135>
                                                                //</TPZ2508>
                                                              END;

                                                   CaptionML=[ENU=Description;
                                                              ESM=Descripci¢n;
                                                              FRC=Description;
                                                              ENC=Description] }
    { 8   ;   ;Discontinue Bar Code;Boolean       ;OnValidate=BEGIN
                                                                IF "Discontinue Bar Code" AND
                                                                   ("Cross-Reference Type" <> "Cross-Reference Type"::"Bar Code")
                                                                THEN
                                                                  ERROR(Text001,TABLECAPTION);
                                                              END;

                                                   CaptionML=[ENU=Discontinue Bar Code;
                                                              ESM=Descontinuar c¢d. barra;
                                                              FRC=Code barre obsolŠte;
                                                              ENC=Discontinue Bar Code] }
    { 50000;  ;Vendor Priority     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Item Vendor"."Vendor Priority" WHERE (Item No.=FIELD(Item No.),
                                                                                                             Vendor No.=FIELD(Cross-Reference Type No.)));
                                                   CaptionML=ENU=Vendor Priority;
                                                   Description=TOP160;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Item No.,Variant Code,Unit of Measure,Cross-Reference Type,Cross-Reference Type No.,Cross-Reference No.;
                                                   Clustered=Yes }
    {    ;Cross-Reference No.                      }
    {    ;Cross-Reference No.,Cross-Reference Type,Cross-Reference Type No.,Discontinue Bar Code }
    {    ;Cross-Reference Type,Cross-Reference No. }
    {    ;Item No.,Variant Code,Unit of Measure,Cross-Reference Type,Cross-Reference No.,Discontinue Bar Code }
    {    ;Cross-Reference Type,Cross-Reference Type No. }
    {    ;Item No.,Cross-Reference Type,Cross-Reference Type No.,Unit of Measure,Cross-Reference No.,Variant Code }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot enter a %1 for a blank Cross-Reference Type.;ESM=No puede introducir un %1 para tipo de ref. cruz. en blanco.;FRC=Vous ne pouvez pas entrer un %1 pour un type de renvoi vide;ENC=You cannot enter a %1 for a blank Cross-Reference Type.';
      Text001@1001 : TextConst 'ENU=This %1 is not a bar code.;ESM=Este %1 no es un c¢d. barra.;FRC=Cette %1 n''est pas un code barre.;ENC=This %1 is not a bar code.';
      Item@1002 : Record 27;
      ItemVend@1003 : Record 99;
      PurchLine@1000000015 : Record 39;
      ReqLine@1000000014 : Record 246;
      PurchPrice@1000000013 : Record 7012;
      ExclDocType@1000000012 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order';
      ExclDocNo@1000000011 : Code[20];
      ExclDocLineNo@1000000010 : Integer;
      ExclWkshTemplateName@1000000009 : Code[10];
      ExclWkshBatchName@1000000008 : Code[10];
      ExclWkshLineNo@1000000007 : Integer;
      ExclItemNo@1000000006 : Code[20];
      ExclVendorNo@1000000005 : Code[20];
      ExclStartingDate@1000000004 : Date;
      ExclCurrencyCode@1000000003 : Code[10];
      ExclVariantCode@1000000002 : Code[10];
      ExclUOMCode@1000000001 : Code[10];
      ExclMinQty@1000000000 : Decimal;

    LOCAL PROCEDURE CreateItemVendor@1();
    BEGIN
      IF ("Cross-Reference Type" = "Cross-Reference Type"::Vendor) AND
         ItemVend.WRITEPERMISSION
      THEN BEGIN
        ItemVend.RESET;
        ItemVend.SETRANGE("Item No.","Item No.");
        ItemVend.SETRANGE("Vendor No.","Cross-Reference Type No.");
        ItemVend.SETRANGE("Variant Code","Variant Code");
        IF ItemVend.ISEMPTY THEN BEGIN
          ItemVend."Item No." := "Item No.";
          ItemVend."Vendor No." := "Cross-Reference Type No.";
          ItemVend.VALIDATE("Vendor No.");
          ItemVend."Variant Code" := "Variant Code";
          ItemVend."Vendor Item No." := "Cross-Reference No.";
          ItemVend.INSERT;
        END;
      END;
    END;

    LOCAL PROCEDURE DeleteItemVendor@2(ItemCrossReference@1000 : Record 5717);
    BEGIN
      IF NOT MultipleCrossReferencesExist(ItemCrossReference) THEN
        IF ItemVend.GET(ItemCrossReference."Cross-Reference Type No.",ItemCrossReference."Item No.",ItemCrossReference."Variant Code") THEN
          IF UPPERCASE(DELCHR(ItemVend."Vendor Item No.",'<',' ')) = ItemCrossReference."Cross-Reference No." THEN
            ItemVend.DELETE;
    END;

    LOCAL PROCEDURE UpdateItemVendorNo@3(ItemCrossReference@1000 : Record 5717;NewCrossRefNo@1002 : Code[20]);
    BEGIN
      IF NOT MultipleCrossReferencesExist(ItemCrossReference) THEN
        IF ItemVend.GET(ItemCrossReference."Cross-Reference Type No.",ItemCrossReference."Item No.",ItemCrossReference."Variant Code") THEN BEGIN
          ItemVend.VALIDATE("Vendor Item No.",NewCrossRefNo);
          ItemVend.MODIFY;
        END;
    END;

    LOCAL PROCEDURE ItemVendorResetRequired@5(OldItemCrossRef@1000 : Record 5717;NewItemCrossRef@1001 : Record 5717) : Boolean;
    BEGIN
      EXIT(
        (OldItemCrossRef."Item No." <> NewItemCrossRef."Item No.") OR
        (OldItemCrossRef."Variant Code" <> NewItemCrossRef."Variant Code") OR
        (OldItemCrossRef."Cross-Reference Type" <> NewItemCrossRef."Cross-Reference Type") OR
        (OldItemCrossRef."Cross-Reference Type No." <> NewItemCrossRef."Cross-Reference Type No."));
    END;

    LOCAL PROCEDURE MultipleCrossReferencesExist@8(ItemCrossReference@1000 : Record 5717) : Boolean;
    VAR
      ItemCrossReference2@1001 : Record 5717;
    BEGIN
      ItemCrossReference2.SETRANGE("Item No.",ItemCrossReference."Item No.");
      ItemCrossReference2.SETRANGE("Variant Code",ItemCrossReference."Variant Code");
      ItemCrossReference2.SETRANGE("Cross-Reference Type",ItemCrossReference."Cross-Reference Type");
      ItemCrossReference2.SETRANGE("Cross-Reference Type No.",ItemCrossReference."Cross-Reference Type No.");
      ItemCrossReference2.SETRANGE("Cross-Reference No.",ItemCrossReference."Cross-Reference No.");
      ItemCrossReference2.SETFILTER("Unit of Measure",'<>%1',ItemCrossReference."Unit of Measure");

      EXIT(NOT ItemCrossReference2.ISEMPTY);
    END;

    PROCEDURE GetItemDescription@4(VAR ItemDescription@1006 : Text;ItemNo@1000 : Code[20];VariantCode@1001 : Code[10];UnitOfMeasureCode@1002 : Code[10];CrossRefType@1003 : Option;CrossRefTypeNo@1004 : Code[20]) : Boolean;
    VAR
      ItemCrossReference@1005 : Record 5717;
    BEGIN
      ItemCrossReference.SETRANGE("Item No.",ItemNo);
      ItemCrossReference.SETRANGE("Variant Code",VariantCode);
      ItemCrossReference.SETRANGE("Unit of Measure",UnitOfMeasureCode);
      ItemCrossReference.SETRANGE("Cross-Reference Type",CrossRefType);
      ItemCrossReference.SETRANGE("Cross-Reference Type No.",CrossRefTypeNo);
      IF ItemCrossReference.FINDFIRST THEN BEGIN
        IF ItemCrossReference.Description = '' THEN
          EXIT(FALSE);
        ItemDescription := ItemCrossReference.Description;
        EXIT(TRUE);
      END;

      EXIT(FALSE);
    END;

    [External]
    PROCEDURE HasValidUnitOfMeasure@38() : Boolean;
    VAR
      ItemUnitOfMeasure@1000 : Record 5404;
    BEGIN
      IF "Unit of Measure" = '' THEN
        EXIT(TRUE);
      ItemUnitOfMeasure.SETRANGE("Item No.","Item No.");
      ItemUnitOfMeasure.SETRANGE(Code,"Unit of Measure");
      EXIT(ItemUnitOfMeasure.FINDFIRST);
    END;

    BEGIN
    {
      TOP160 KT ABCSI Purchase Order Fields 03312015
        - Addded field 50000 Vendor Priority

      2015-05-27 TPZ135 VCHERNYA
        Vendor Priority field has been changed to a FlowField
        SetPurchLineException, SetReqWkshLineException, SetPurchPriceException functions have been created
      2016-12-20 TPZ1759 EBAGIM
        route UPC Code to Item Cross Ref Table
      2018-12-18 SQLPERFORM AKB
        Added key ÃItem No.Ä,ÄCross-Reference TypeÄ,ÄCross-Reference Type No.Ä,ÄUnit of MeasureÄ,ÄCross-Reference No.Ä,"Variant Code"
      2019-05-08 TPZ2508 RTIWARI
        Custom Code Blocked and moved the custom code to Events
        SetPurchLineException, SetReqWkshLineException, SetPurchPriceException,CreateUPC functions moved from table to events
    }
    END.
  }
}

