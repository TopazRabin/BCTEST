OBJECT Table 14000790 FedEx Label Replace
{
  OBJECT-PROPERTIES
  {
    Date=06/28/17;
    Time=12:00:00 PM;
    Version List=SE0.55.12;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               "Creation Date" := TODAY;
               "Creation Time" := TIME;
               "Created By" := USERID;
             END;

    CaptionML=ENU=FedEx Label Replace;
  }
  FIELDS
  {
    { 1   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 11  ;   ;Version             ;Option        ;CaptionML=ENU=Version;
                                                   OptionCaptionML=ENU=All,6.21.001,6.80.003;
                                                   OptionString=All,6.21.001,6.80.003 }
    { 12  ;   ;Usage               ;Option        ;CaptionML=ENU=Usage;
                                                   OptionCaptionML=ENU=" ,Blind Ship,Package No.";
                                                   OptionString=[ ,Blind Ship,Package No.] }
    { 13  ;   ;Service Type        ;Option        ;CaptionML=ENU=Service Type;
                                                   OptionCaptionML=ENU=" ,Ground with Doc Tab,Ground W/O Doc Tab,Express,World Wide,Ground";
                                                   OptionString=[ ,Ground with Doc Tab,Ground W/O Doc Tab,Express,World Wide,Ground] }
    { 14  ;   ;Active              ;Boolean       ;CaptionML=ENU=Active }
    { 15  ;   ;Search String       ;Text80        ;CaptionML=ENU=Search String }
    { 16  ;   ;Additional Data     ;Option        ;CaptionML=ENU=Additional Data;
                                                   OptionCaptionML=ENU=" ,Company,Address1,Address2,City,State,ZIP Code,City State,City State ZIP,City State ZIP (US),Phone,Contact,Blank,ORIGIN ID: MULA + Phone,Space + Phone,Package No.,Total Packages,Package No./Total Packages";
                                                   OptionString=[ ,Company,Address1,Address2,City,State,ZIP Code,City State,City State ZIP,City State ZIP (US),Phone,Contact,Blank,ORIGIN ID: MULA + Phone,Space + Phone,Package No.,Total Packages,Package No./Total Packages] }
    { 17  ;   ;Comment             ;Text30        ;CaptionML=ENU=Comment }
    { 21  ;   ;Creation Date       ;Date          ;CaptionML=ENU=Creation Date;
                                                   Editable=No }
    { 22  ;   ;Creation Time       ;Time          ;CaptionML=ENU=Creation Time;
                                                   Editable=No }
    { 23  ;   ;Created By          ;Code50        ;TableRelation=User;
                                                   CaptionML=ENU=Created By;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Line No.                                ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE InsertDefaultLabelReplaces@1();
    BEGIN
      // Ground, Address, Eltron
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::Ground,
        'A35,28,0,2,1,1,N,"',"Additional Data"::Contact);
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::Ground,
        'A35,48,0,2,1,1,N,"',"Additional Data"::Company);
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::Ground,
        'A35,68,0,2,1,1,N,"',"Additional Data"::Address1);
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::Ground,
        'A35,89,0,2,1,1,N,"',"Additional Data"::Address2);
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::Ground,
        'A35,109,0,2,1,1,N,"',"Additional Data"::"City State ZIP");
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::Ground,
        'A35,129,0,2,1,1,N,"',"Additional Data"::Phone);

      // Ground, Address, Zebra
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::Ground,
        '^FO35,31^AdN,0,0^FWN^FH^FD',"Additional Data"::Contact);
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::Ground,
        '^FO35,51^AdN,0,0^FWN^FH^FD',"Additional Data"::Company);
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::Ground,
        '^FO35,71^AdN,0,0^FWN^FH^FD',"Additional Data"::Address1);
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::Ground,
        '^FO35,92^AdN,0,0^FWN^FH^FD',"Additional Data"::Address2);
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::Ground,
        '^FO35,112^AdN,0,0^FWN^FH^FD',"Additional Data"::"City State ZIP");
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::Ground,
        '^FO35,132^AdN,0,0^FWN^FH^FD',"Additional Data"::Phone);

      // Air Domestic, Address, Eltron
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::Express,
        'A35,4,0,2,1,1,N,"ORIGIN ID: PDKA',"Additional Data"::"Space + Phone");
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::Express,
        'A35,23,0,2,1,1,N,"',"Additional Data"::Contact);
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::Express,
        'A35,43,0,2,1,1,N,"',"Additional Data"::Company);
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::Express,
        'A35,63,0,2,1,1,N,"',"Additional Data"::Address1);
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::Express,
        'A35,84,0,2,1,1,N,"',"Additional Data"::Address2);
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::Express,
        'A35,104,0,2,1,1,N,"',"Additional Data"::"City State ZIP");

      // Air Domestic, Address, Zebra
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::Express,
        '^FO35,7^AdN,0,0^FWN^FH^FDORIGIN ID: PDKA',"Additional Data"::"Space + Phone");
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::Express,
        '^FO35,26^AdN,0,0^FWN^FH^FD',"Additional Data"::Contact);
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::Express,
        '^FO35,46^AdN,0,0^FWN^FH^FD',"Additional Data"::Company);
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::Express,
        '^FO35,66^AdN,0,0^FWN^FH^FD',"Additional Data"::Address1);
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::Express,
        '^FO35,87^AdN,0,0^FWN^FH^FD',"Additional Data"::Address2);
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::Express,
        '^FO35,107^AdN,0,0^FWN^FH^FD',"Additional Data"::"City State ZIP");

      // World Wide, Address, Eltron
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::"World Wide",
        'A35,4,0,2,1,1,N,"ORIGIN ID: PDKA',"Additional Data"::"Space + Phone");
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::"World Wide",
        'A35,23,0,2,1,1,N,"',"Additional Data"::Contact);
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::"World Wide",
        'A35,43,0,2,1,1,N,"',"Additional Data"::Company);
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::"World Wide",
        'A35,63,0,2,1,1,N,"',"Additional Data"::Address1);
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::"World Wide",
        'A35,84,0,2,1,1,N,"',"Additional Data"::Address2);
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::"World Wide",
        'A35,104,0,2,1,1,N,"',"Additional Data"::"City State ZIP");
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::"World Wide",
        'A35,124,0,2,1,1,N,"',"Additional Data"::" ");

      // World Wide, Address, Zebra
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::"World Wide",
        '^FO35,7^AdN,0,0^FWN^FH^FDORIGIN ID: PDKA',"Additional Data"::"Space + Phone");
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::"World Wide",
        '^FO35,26^AdN,0,0^FWN^FH^FD',"Additional Data"::Contact);
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::"World Wide",
        '^FO35,46^AdN,0,0^FWN^FH^FD',"Additional Data"::Company);
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::"World Wide",
        '^FO35,66^AdN,0,0^FWN^FH^FD',"Additional Data"::Address1);
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::"World Wide",
        '^FO35,87^AdN,0,0^FWN^FH^FD',"Additional Data"::Address2);
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::"World Wide",
        '^FO35,107^AdN,0,0^FWN^FH^FD',"Additional Data"::"City State ZIP");
      InsertLabelReplace(
        Version::All,Usage::"Blind Ship","Service Type"::"World Wide",
        '^FO35,127^AdN,0,0^FWN^FH^FD',"Additional Data"::" ");
    END;

    LOCAL PROCEDURE InsertLabelReplace@2(NewVersion@1240030000 : Integer;NewUsage@1240030001 : Integer;NewServiceType@1240030002 : Integer;NewSearchString@1240030003 : Text[80];NewAdditionalData@1240030004 : Integer);
    VAR
      FedExLabelReplace@1240030005 : Record 14000790;
    BEGIN
      FedExLabelReplace.RESET;
      IF NOT FedExLabelReplace.FIND('+') THEN
        CLEAR(FedExLabelReplace);

      FedExLabelReplace.INIT;
      FedExLabelReplace."Line No." := FedExLabelReplace."Line No." + 10000;
      FedExLabelReplace.Version := NewVersion;
      FedExLabelReplace.Usage := NewUsage;
      FedExLabelReplace."Service Type" := NewServiceType;
      FedExLabelReplace.Active := TRUE;
      FedExLabelReplace."Search String" := NewSearchString;
      FedExLabelReplace."Additional Data" := NewAdditionalData;
      FedExLabelReplace.INSERT(TRUE);
    END;

    BEGIN
    END.
  }
}

