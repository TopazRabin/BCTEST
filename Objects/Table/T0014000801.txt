OBJECT Table 14000801 LTL Option Page
{
  OBJECT-PROPERTIES
  {
    Date=06/28/17;
    Time=12:00:00 PM;
    Version List=SE0.53.67;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CASE Type OF
                 Type::Package:
                   BEGIN
                     Package.TESTFIELD("No.");

                     DocumentOptionPageFound := FALSE;
                     IF Package."Source ID" <> '' THEN
                       IF LTLOptionPage.GET(
                            LTLOptionPage.Type::Document,Package."Source ID",
                            Package."Source Type",Package."Source Subtype")
                       THEN BEGIN
                         DocumentOptionPageFound := TRUE;

                         Rec := LTLOptionPage;
                       END;

                     "Shipping Agent Code" := Package."Shipping Agent Code";
                     "Shipping Agent Service" := Package."Shipping Agent Service";
                     "World Wide Service" := Package."World Wide Service";

                     IF NOT DocumentOptionPageFound THEN BEGIN
                       LTLOptionPage.RESET;
                       LTLOptionPage.SETCURRENTKEY(
                         Type,"Shipping Agent Code","Shipping Agent Service","World Wide Service");
                       LTLOptionPage.SETRANGE(Type,LTLOptionPage.Type::Setup);
                       LTLOptionPage.SETRANGE("Shipping Agent Code",Package."Shipping Agent Code");
                       LTLOptionPage.SETRANGE("Shipping Agent Service",Package."Shipping Agent Service");
                       LTLOptionPage.SETRANGE("World Wide Service",Package."World Wide Service");
                       IF LTLOptionPage.FIND('-') THEN
                         Rec := LTLOptionPage;

                       IF Package."Source Type" <> 0 THEN BEGIN
                         PackingControl.TransferFromSource(
                           Package."Source Type",Package."Source Subtype",Package."Source ID");

                         TransferFromPackingControl(PackingControl);
                       END;
                     END;

                     Type := Type::Package;
                     "Source ID" := Package."No.";
                     "Source Type" := 0;
                     "Source Subtype" := 0;
                     "Second Source ID" := '';

                     IF (Package."Ship-to No." <> '') AND
                        ((Package."Source ID" = '') OR NOT DocumentOptionPageFound)
                     THEN BEGIN
                       CLEAR(LTLOptionPage);
                       CASE TRUE OF
                         Package."Ship-to Type" = Package."Ship-to Type"::Customer:
                           IF LTLOptionPage.GET(
                                LTLOptionPage.Type::"Master Data",Package."Ship-to No.",DATABASE::Customer,
                                0,Package."Ship-to Code")
                           THEN
                             ;
                         Package."Ship-to Type" = Package."Ship-to Type"::Vendor:
                           IF LTLOptionPage.GET(
                                LTLOptionPage.Type::"Master Data",Package."Ship-to No.",DATABASE::Vendor,
                                0,Package."Ship-to Code")
                           THEN
                             ;
                         Package."Ship-to Type" = Package."Ship-to Type"::Location:
                           IF LTLOptionPage.GET(
                                LTLOptionPage.Type::"Master Data",Package."Ship-to No.",DATABASE::Location,
                                0,'')
                           THEN
                             ;
                       END;

                       IF LTLOptionPage."Source ID" <> '' THEN
                         MergeOptionPage(LTLOptionPage);
                     END;

                     IF GetShippingAccount(
                          Package."Ship-to Type",Package."Ship-to No.",Package."Ship-to Code",
                          Package."Shipping Agent Code",Package."Third Party Ship. Account No.")
                     THEN
                       TransferFromShippingAccount(ShippingAccount);
                   END;
                 Type::Document:
                   BEGIN
                     TESTFIELD("Source ID");
                     TESTFIELD("Source Type");

                     PackingControl.TransferFromSource("Source Type","Source Subtype","Source ID");
                     TransferFromPackingControl(PackingControl);

                     IF GetShippingAccount(
                          PackingControl."Ship-to Type",PackingControl."Ship-to No.",PackingControl."Ship-to Code",
                          PackingControl."Shipping Agent Code",PackingControl."Third Party Ship. Account No.")
                     THEN
                       TransferFromShippingAccount(ShippingAccount);
                   END;
                 Type::"Bill of Lading":
                   BEGIN

                     TESTFIELD("Source ID");

                     BillOfLading.GET("Source ID");
                     BillOfLading.TESTFIELD(Released,FALSE);
                     TransferFromBillOfLading(BillOfLading);

                     IF BillOfLading."Ship-to Type" = BillOfLading."Ship-to Type" :: Customer THEN
                       IF GetShippingAccount(
                            BillOfLading."Ship-to Type",BillOfLading."Ship-to No.",BillOfLading."Ship-to Code",
                            BillOfLading."Shipping Agent Code",BillOfLading."Third Party Ship. Account No.")
                       THEN
                         TransferFromShippingAccount(ShippingAccount);
                   END;
                 Type::"Master Data":
                    BEGIN
                     TESTFIELD("Source ID");
                     TESTFIELD("Source Type");
                    END;
                 ELSE
                   TESTFIELD("Source ID");
               END;
             END;

    OnModify=BEGIN
               CASE Type OF
                 Type::Package:
                   BEGIN
                     Package.GET("Source ID");
                     Package.TESTFIELD(Closed,FALSE);
                   END;
                 Type::"Bill of Lading":
                   BEGIN
                     BillOfLading.GET("Source ID");
                     BillOfLading.TESTFIELD(Released,FALSE);
                   END;
               END;
             END;

    OnDelete=BEGIN
               CASE Type OF
                 Type::Package:
                   BEGIN
                     IF Package.GET("Source ID") THEN
                       Package.TESTFIELD(Closed,FALSE);
                   END;
                 Type::"Bill of Lading":
                   BEGIN
                     BillOfLading.GET("Source ID");
                     BillOfLading.TESTFIELD(Released,FALSE);
                   END;
               END;
             END;

    CaptionML=ENU=LTL Option Page;
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Package,Document,Setup,Rate Shop,Item,Resource,Standard Option,Bill of Lading,Master Data;
                                                   OptionString=Package,Document,Setup,Rate Shop,Item,Resource,Standard Option,Bill of Lading,Master Data;
                                                   Editable=No }
    { 2   ;   ;Source ID           ;Code20        ;TableRelation=IF (Type=CONST(Package)) Package
                                                                 ELSE IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(Resource)) Resource
                                                                 ELSE IF (Type=CONST(Standard Option)) "Standard Option Setup";
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Source ID;
                                                   NotBlank=No;
                                                   Editable=No }
    { 3   ;   ;Source Type         ;Integer       ;CaptionML=ENU=Source Type }
    { 4   ;   ;Source Subtype      ;Integer       ;CaptionML=ENU=Source Subtype }
    { 5   ;   ;Second Source ID    ;Code20        ;CaptionML=ENU=Second Source ID;
                                                   Editable=No }
    { 11  ;   ;Shipping Agent Code ;Code10        ;TableRelation="Shipping Agent".Code;
                                                   OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Shipping Agent Code"));
                                                              END;

                                                   CaptionML=ENU=Shipping Agent Code;
                                                   Editable=No }
    { 12  ;   ;World Wide Service  ;Boolean       ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("World Wide Service"));
                                                              END;

                                                   CaptionML=ENU=World Wide Service;
                                                   Editable=No }
    { 13  ;   ;Shipping Agent Service;Code30      ;TableRelation="E-Ship Agent Service".Code WHERE (Shipping Agent Code=FIELD(Shipping Agent Code));
                                                   OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Shipping Agent Service"));
                                                              END;

                                                   CaptionML=ENU=Shipping Agent Service;
                                                   Editable=No }
    { 23  ;   ;Ship Notification   ;Boolean       ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Ship Notification"));

                                                                IF NOT "Ship Notification" THEN BEGIN
                                                                  "Ship Notification Type" := "Ship Notification Type"::None;
                                                                  "Ship Notification Email" := '';
                                                                  "Ship Notification Fax No." := '';
                                                                  "Ship Notification Phone" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Ship Notification }
    { 24  ;   ;Ship Notification Type;Option      ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Ship Notification Type"));
                                                              END;

                                                   CaptionML=ENU=Ship Notification Type;
                                                   OptionCaptionML=ENU=None,Email,Fax,Phone;
                                                   OptionString=None,Email,Fax,Phone }
    { 25  ;   ;Ship Notification Email;Text50     ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Ship Notification Email"));
                                                              END;

                                                   CaptionML=ENU=Ship Notification Email }
    { 26  ;   ;Ship Notification Fax No.;Code15   ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Ship Notification Fax No."));
                                                              END;

                                                   CaptionML=ENU=Ship Notification Fax No. }
    { 27  ;   ;Ship Notification Phone;Code15     ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Ship Notification Phone"));
                                                              END;

                                                   CaptionML=ENU=Ship Notification Phone }
    { 31  ;   ;Construction Site Delivery;Boolean ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Construction Site Delivery"));
                                                              END;

                                                   CaptionML=ENU=Construction Site Delivery }
    { 32  ;   ;Inside Delivery     ;Boolean       ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Inside Delivery"));
                                                              END;

                                                   CaptionML=ENU=Inside Delivery }
    { 33  ;   ;Liftgate Delivery   ;Boolean       ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Liftgate Delivery"));
                                                              END;

                                                   CaptionML=ENU=Liftgate Delivery }
    { 34  ;   ;Notify Prior to Delivery;Boolean   ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Notify Prior to Delivery"));
                                                              END;

                                                   CaptionML=ENU=Notify Prior to Delivery }
    { 36  ;   ;Dangerous Goods     ;Boolean       ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Dangerous Goods"));
                                                              END;

                                                   CaptionML=ENU=Dangerous Goods }
    { 37  ;   ;Single Shipment     ;Boolean       ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Single Shipment"));
                                                              END;

                                                   CaptionML=ENU=Single Shipment }
    { 38  ;   ;Additional Handling ;Boolean       ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Additional Handling"));
                                                              END;

                                                   CaptionML=ENU=Additional Handling }
  }
  KEYS
  {
    {    ;Type,Source ID,Source Type,Source Subtype,Second Source ID;
                                                   Clustered=Yes }
    {    ;Type,Shipping Agent Code,Shipping Agent Service,World Wide Service }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Package@1000000000 : Record 14000701;
      LTLOptionPage@1000000001 : Record 14000801;
      PackingControl@1240030000 : Record 14000717;
      ShippingAccount@1000000004 : Record 14000714;
      BillOfLading@1000000005 : Record 14000822;
      Text001@1001 : TextConst 'ENU=Cannot be changed when %1 is %2';
      DocumentOptionPageFound@1240030001 : Boolean;
      Text002@1002 : TextConst 'ENU=Unkown field No. %1.';
      Text003@1003 : TextConst 'ENU=Unknown type %1.';

    PROCEDURE TransferFromPackingControl@12(FromPackingControl@1240030000 : Record 14000717);
    BEGIN
    END;

    PROCEDURE TransferFromBillOfLading@3(FromBillOfLading@1000000000 : Record 14000822);
    BEGIN
    END;

    PROCEDURE TransferFromShippingAccount@6(CurrentShippingAccount@1000000000 : Record 14000714);
    BEGIN
    END;

    PROCEDURE SetPackage@4(CurrentPackage@1000000000 : Record 14000701);
    BEGIN
      Package := CurrentPackage;
    END;

    LOCAL PROCEDURE GetShippingAccount@5(ShipToType@1240030000 : 'Customer,Vendor,Bank,Prospect,Resource,Employee,,Location';ShipToNo@1240030001 : Code[20];ShipToCode@1240030002 : Code[20];ShippingAgentCode@1240030004 : Code[10];ThirdPartyAccountNo@1240030003 : Code[20]) : Boolean;
    BEGIN
      EXIT(
        ShippingAccount.GetShippingAccountOptionPage(
          ShipToType,ShipToNo,ShipToCode,ShippingAgentCode,ThirdPartyAccountNo));
    END;

    PROCEDURE MergeOptionPage@1240030006(MergeOptionPage@1240030000 : Record 14000801);
    VAR
      InitOptionPage@1240030001 : Record 14000801;
    BEGIN
      InitOptionPage.INIT;

      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Shipping Agent Code")) THEN
        IF MergeOptionPage."Shipping Agent Code" <> InitOptionPage."Shipping Agent Code" THEN
          VALIDATE("Shipping Agent Code",MergeOptionPage."Shipping Agent Code");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("World Wide Service")) THEN
        IF MergeOptionPage."World Wide Service" <> InitOptionPage."World Wide Service" THEN
          VALIDATE("World Wide Service",MergeOptionPage."World Wide Service");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Shipping Agent Service")) THEN
        IF MergeOptionPage."Shipping Agent Service" <> InitOptionPage."Shipping Agent Service" THEN
          VALIDATE("Shipping Agent Service",MergeOptionPage."Shipping Agent Service");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Ship Notification")) THEN
        IF MergeOptionPage."Ship Notification" <> InitOptionPage."Ship Notification" THEN
          VALIDATE("Ship Notification",MergeOptionPage."Ship Notification");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Ship Notification Type")) THEN
        IF MergeOptionPage."Ship Notification Type" <> InitOptionPage."Ship Notification Type" THEN
          VALIDATE("Ship Notification Type",MergeOptionPage."Ship Notification Type");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Ship Notification Email")) THEN
        IF MergeOptionPage."Ship Notification Email" <> InitOptionPage."Ship Notification Email" THEN
          VALIDATE("Ship Notification Email",MergeOptionPage."Ship Notification Email");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Ship Notification Fax No.")) THEN
        IF MergeOptionPage."Ship Notification Fax No." <> InitOptionPage."Ship Notification Fax No." THEN
          VALIDATE("Ship Notification Fax No.",MergeOptionPage."Ship Notification Fax No.");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Ship Notification Phone")) THEN
        IF MergeOptionPage."Ship Notification Phone" <> InitOptionPage."Ship Notification Phone" THEN
          VALIDATE("Ship Notification Phone",MergeOptionPage."Ship Notification Phone");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Construction Site Delivery")) THEN
        IF MergeOptionPage."Construction Site Delivery" <> InitOptionPage."Construction Site Delivery" THEN
          VALIDATE("Construction Site Delivery",MergeOptionPage."Construction Site Delivery");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Inside Delivery")) THEN
        IF MergeOptionPage."Inside Delivery" <> InitOptionPage."Inside Delivery" THEN
          VALIDATE("Inside Delivery",MergeOptionPage."Inside Delivery");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Liftgate Delivery")) THEN
        IF MergeOptionPage."Liftgate Delivery" <> InitOptionPage."Liftgate Delivery" THEN
          VALIDATE("Liftgate Delivery",MergeOptionPage."Liftgate Delivery");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Notify Prior to Delivery")) THEN
        IF MergeOptionPage."Notify Prior to Delivery" <> InitOptionPage."Notify Prior to Delivery" THEN
          VALIDATE("Notify Prior to Delivery",MergeOptionPage."Notify Prior to Delivery");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Dangerous Goods")) THEN
        IF MergeOptionPage."Dangerous Goods" <> InitOptionPage."Dangerous Goods" THEN
          VALIDATE("Dangerous Goods",MergeOptionPage."Dangerous Goods");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Single Shipment")) THEN
        IF MergeOptionPage."Single Shipment" <> InitOptionPage."Single Shipment" THEN
          VALIDATE("Single Shipment",MergeOptionPage."Single Shipment");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Additional Handling")) THEN
        IF MergeOptionPage."Additional Handling" <> InitOptionPage."Additional Handling" THEN
          VALIDATE("Additional Handling",MergeOptionPage."Additional Handling");
    END;

    LOCAL PROCEDURE TestFieldIsEditable@1240030005(TestFieldNo@1240030000 : Integer);
    BEGIN
      IF NOT FieldIsAvailable(TestFieldNo) THEN
        ERROR(Text001,FIELDNAME(Type),Type);
    END;

    PROCEDURE FieldIsAvailable@1240030002(TestFieldNo@1240030000 : Integer) : Boolean;
    BEGIN
      CASE TestFieldNo OF
        FIELDNO("Shipping Agent Code"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("World Wide Service"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Shipping Agent Service"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Ship Notification"):
          EXIT(TypeIsAvailable(TRUE,TRUE,TRUE,FALSE,TRUE,TRUE));
        FIELDNO("Ship Notification Type"):
          EXIT(TypeIsAvailable(TRUE,TRUE,TRUE,FALSE,TRUE,TRUE));
        FIELDNO("Ship Notification Email"):
          EXIT(TypeIsAvailable(TRUE,TRUE,TRUE,FALSE,TRUE,TRUE));
        FIELDNO("Ship Notification Fax No."):
          EXIT(TypeIsAvailable(TRUE,TRUE,TRUE,FALSE,TRUE,TRUE));
        FIELDNO("Ship Notification Phone"):
          EXIT(TypeIsAvailable(TRUE,TRUE,TRUE,FALSE,TRUE,TRUE));
        FIELDNO("Construction Site Delivery"):
          EXIT(TypeIsAvailable(TRUE,TRUE,TRUE,FALSE,TRUE,TRUE));
        FIELDNO("Inside Delivery"):
          EXIT(TypeIsAvailable(TRUE,TRUE,TRUE,FALSE,TRUE,TRUE));
        FIELDNO("Liftgate Delivery"):
          EXIT(TypeIsAvailable(TRUE,TRUE,TRUE,FALSE,TRUE,TRUE));
        FIELDNO("Notify Prior to Delivery"):
          EXIT(TypeIsAvailable(TRUE,TRUE,TRUE,FALSE,TRUE,TRUE));
        FIELDNO("Dangerous Goods"):
          EXIT(TypeIsAvailable(TRUE,FALSE,FALSE,TRUE,TRUE,FALSE));
        FIELDNO("Single Shipment"):
          EXIT(TypeIsAvailable(TRUE,TRUE,TRUE,FALSE,TRUE,FALSE));
        FIELDNO("Additional Handling"):
          EXIT(TypeIsAvailable(TRUE,FALSE,FALSE,TRUE,TRUE,FALSE));
        ELSE
          ERROR(Text002,TestFieldNo);
      END;
    END;

    LOCAL PROCEDURE TypeIsAvailable@1240030003(RegularOptionPage@1240030004 : Boolean;SetupOptionPage@1240030000 : Boolean;DocumentOptionPage@1240030005 : Boolean;ItemResourceOptionPage@1240030001 : Boolean;StandardOptionPage@1240030002 : Boolean;MasterDataOptionPage@1240030003 : Boolean) : Boolean;
    BEGIN
      CASE Type OF
        Type::Package,
        Type::"Bill of Lading":
          EXIT(RegularOptionPage);
        Type::Document,
        Type::"Rate Shop":
          EXIT(DocumentOptionPage);
        Type::Setup:
          EXIT(SetupOptionPage);
        Type::Item,
        Type::Resource:
          EXIT(ItemResourceOptionPage);
        Type::"Standard Option":
          EXIT(StandardOptionPage);
        Type::"Master Data":
          EXIT(MasterDataOptionPage);
        ELSE
          ERROR(Text003,Type);
      END;
    END;

    PROCEDURE CaptionText@1240030000() : Text[250];
    VAR
      PackingControl@1240030000 : Record 14000717;
    BEGIN
      EXIT(
        PackingControl.FormatOptionPageCaption(
          Type,"Source Type","Source Subtype","Source ID","Second Source ID",
          FORMAT(Type),"Shipping Agent Code","Shipping Agent Service"));
    END;

    BEGIN
    END.
  }
}

