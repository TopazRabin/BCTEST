OBJECT Table 14000786 FedEx Global Registration
{
  OBJECT-PROPERTIES
  {
    Date=06/28/17;
    Time=12:00:00 PM;
    Version List=SE0.54.18;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               VALIDATE("Shipper Account No.");


               "Transaction Type" := 211;
               IF "Transaction ID" = '' THEN BEGIN
                 ShippingSetup.GET;
                 IF ShippingNumbering.GET(
                      DATABASE::"Shipping Setup",ShippingSetup."Primary Key",
                      ShippingSetup.FIELDNO("Last FedEx Transaction No."))
                 THEN BEGIN
                   ShippingNumbering.GetNextNumber;
                   "Transaction ID" := ShippingNumbering."Last No. Used";
                 END ELSE BEGIN
                   ShippingSetup.TESTFIELD("FedEx Transaction Nos.");
                   NoSeriesMgt.InitSeries(
                     ShippingSetup."FedEx Transaction Nos.",xRec."No. Series",
                     WORKDATE,"Transaction ID","No. Series");
                 END;
               END;

               ShippingSetup.GET;
               CompanyInfo.GET;

               "Billing Company Name" := CompanyInfo.Name;
               "Billing Address 1" := CompanyInfo.Address;
               "Billing Address 2" := CompanyInfo."Address 2";
               "Billing City" := CompanyInfo.City;
               "Billing State" := CompanyInfo.County;
               "Billing ZIP Code" := ShippingSetup.AdjustZIPCode(CompanyInfo."Post Code");
               "Billing Country Code" := CompanyInfo."Country/Region Code";
             END;

    CaptionML=ENU=FedEx Global Registration;
    LookupPageID=Page14000784;
  }
  FIELDS
  {
    { 1   ;   ;Transaction Type    ;Integer       ;CaptionML=ENU=Transaction Type }
    { 2   ;   ;Transaction ID      ;Code40        ;CaptionML=ENU=Transaction ID }
    { 11  ;   ;Error Code          ;Code4         ;CaptionML=ENU=Error Code }
    { 12  ;   ;Error Message       ;Text250       ;CaptionML=ENU=Error Message }
    { 13  ;   ;Shipper Company Name;Text35        ;CaptionML=ENU=Shipper Company Name }
    { 14  ;   ;Shipper Address 1   ;Text35        ;CaptionML=ENU=Shipper Address 1 }
    { 15  ;   ;Shipper Address 2   ;Text35        ;CaptionML=ENU=Shipper Address 2 }
    { 16  ;   ;Shipper City        ;Text35        ;CaptionML=ENU=Shipper City }
    { 17  ;   ;Shipper State       ;Text30        ;CaptionML=ENU=Shipper State }
    { 18  ;   ;Shipper ZIP Code    ;Code20        ;CaptionML=ENU=Shipper ZIP Code }
    { 19  ;   ;Shipper Account No. ;Code12        ;TableRelation="FedEx Shipping Agent Account";
                                                   OnValidate=BEGIN
                                                                IF ("Shipper Account No." <> '') AND ("Shipper Address 1" = '') THEN BEGIN
                                                                  CarrierPackingStation.RESET;
                                                                  CarrierPackingStation.SETRANGE("FedEx Shipping Agent Acc. No.","Shipper Account No.");
                                                                  IF CarrierPackingStation.FIND('+') THEN BEGIN
                                                                    PackingStation.RESET;
                                                                    PackingStation.SETRANGE("Carrier Packing Station Code",CarrierPackingStation.Code);
                                                                    PackingStation.FIND('-');

                                                                    "Shipper Company Name" := PackingStation."Ship-from Company";
                                                                    "Shipper Address 1" := PackingStation."Ship-from Address";
                                                                    "Shipper Address 2" := PackingStation."Ship-from Address2";
                                                                    "Shipper City" := PackingStation."Ship-from City";
                                                                    "Shipper State" := PackingStation."Ship-from State";
                                                                    "Shipper ZIP Code" := PackingStation."Ship-from ZIP Code";
                                                                    "Shipper Contact" := PackingStation."Ship-from Contact";
                                                                    IF PackingStation."Ship-from Country Code" = '' THEN
                                                                      "Shipper Country Code" := 'US'
                                                                    ELSE
                                                                      "Shipper Country Code" := PackingStation."Ship-from Country Code";
                                                                    "Shipper Phone Number" := PackingStation."Ship-from Phone No.";
                                                                    "Shipper FAX Number" := PackingStation."Ship-from Fax No.";
                                                                    "Email Address" := PackingStation."Ship-from E-Mail";
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Shipper Account No. }
    { 20  ;   ;Shipper Contact     ;Text30        ;CaptionML=ENU=Shipper Contact }
    { 21  ;   ;Shipper Country Code;Code10        ;InitValue=US;
                                                   TableRelation=Country/Region.Code;
                                                   CaptionML=ENU=Shipper Country Code;
                                                   NotBlank=Yes }
    { 22  ;   ;Shipper Phone Number;Code20        ;CaptionML=ENU=Shipper Phone Number }
    { 23  ;   ;Meter Number        ;Code10        ;CaptionML=ENU=Meter Number }
    { 24  ;   ;Shipper FAX Number  ;Code20        ;CaptionML=ENU=Shipper FAX Number }
    { 25  ;   ;New Meter Number    ;Code10        ;CaptionML=ENU=New Meter Number }
    { 26  ;   ;Email Address       ;Text80        ;CaptionML=ENU=Email Address }
    { 27  ;   ;Subscription Service 1;Code30      ;CaptionML=ENU=Subscription Service 1 }
    { 28  ;   ;Subscription Service 2;Code30      ;CaptionML=ENU=Subscription Service 2 }
    { 29  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series }
    { 30  ;   ;Packing Station Code;Code10        ;TableRelation=Location.Code;
                                                   CaptionML=ENU=Packing Station Code }
    { 31  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Shipping Comment Line" WHERE (Table ID=CONST(14000786),
                                                                                                    Code=FIELD(Transaction ID)));
                                                   CaptionML=ENU=Comment;
                                                   Editable=No }
    { 32  ;   ;Live Registration   ;Boolean       ;CaptionML=ENU=Live Registration }
    { 33  ;   ;User Key            ;Text100       ;CaptionML=ENU=User Key }
    { 34  ;   ;User Password       ;Text100       ;CaptionML=ENU=User Password }
    { 35  ;   ;Billing Company Name;Text35        ;CaptionML=ENU=Billing Company Name }
    { 36  ;   ;Billing Address 1   ;Text35        ;CaptionML=ENU=Billing Address 1 }
    { 37  ;   ;Billing Address 2   ;Text35        ;CaptionML=ENU=Billing Address 2 }
    { 38  ;   ;Billing City        ;Text35        ;CaptionML=ENU=Billing City }
    { 39  ;   ;Billing State       ;Text30        ;CaptionML=ENU=Billing State }
    { 40  ;   ;Billing ZIP Code    ;Code20        ;CaptionML=ENU=Billing ZIP Code }
    { 41  ;   ;Billing Country Code;Code10        ;TableRelation=Country/Region.Code;
                                                   CaptionML=ENU=Billing Country Code }
    { 42  ;   ;Billing Contact First Name;Text30  ;CaptionML=ENU=Billing Contact First Name }
    { 43  ;   ;Billing Contact Last Name;Text30   ;CaptionML=ENU=Billing Contact Last Name }
    { 44  ;   ;FedEx EULA Accepted ;Boolean       ;CaptionML=ENU=FedEx EULA Accepted }
  }
  KEYS
  {
    {    ;Transaction Type,Transaction ID         ;Clustered=Yes }
    {    ;Packing Station Code                     }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ShippingSetup@1000000000 : Record 14000707;
      ShippingNumbering@1240030001 : Record 14000725;
      NoSeriesMgt@1000000001 : Codeunit 396;
      PackingStation@1240030000 : Record 14000709;
      CarrierPackingStation@1240030002 : Record 14000729;
      CompanyInfo@1240030003 : Record 79;
      Text001@1001 : TextConst 'ENU=EULA not required to use this version of the FedEx API.';
      Text002@1002 : TextConst 'ENU=I accept the terms and conditions in the FedEx End User License Agreement.';

    PROCEDURE ReadAcceptEULA@1240030000();
    BEGIN
      ShippingSetup.GET;

      CASE ShippingSetup."FedEx API Version" OF
        ShippingSetup."FedEx API Version"::"6.21.001":
          ERROR(Text001);
        ShippingSetup."FedEx API Version"::"6.80.003":
          ERROR(Text001);
        ShippingSetup."FedEx API Version"::"Web Services":
          BEGIN
            REPORT.RUNMODAL(REPORT::"FedEx WS EULA");

            IF CONFIRM(Text002,FALSE) THEN
              "FedEx EULA Accepted" := TRUE
            ELSE
              "FedEx EULA Accepted" := FALSE;
            MODIFY;
          END;
      END;
    END;

    BEGIN
    END.
  }
}

