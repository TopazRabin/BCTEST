OBJECT Table 14123527 ES Login
{
  OBJECT-PROPERTIES
  {
    Date=12/14/18;
    Time=12:00:00 PM;
    Version List=ES1.41.56;
  }
  PROPERTIES
  {
    DataCaptionFields=User ID,User Name;
    OnInsert=BEGIN
               IF (Type = Type::Windows) AND NOT ISNULLGUID("Login SID") THEN
                 CheckUniqueWindowsID(TRUE);

               IF NOT NoComment THEN
                 Comment(1,STRSUBSTNO(Text040,TABLECAPTION,"User ID"));
             END;

    OnModify=BEGIN
               IF (Type = Type::Windows) AND NOT ISNULLGUID("Login SID") THEN
                 CheckUniqueWindowsID(TRUE);

               IF NOT NoComment THEN
                 Comment(1,STRSUBSTNO(Text041,TABLECAPTION,"User ID"));
             END;

    OnDelete=BEGIN
               ESLogin.RESET;
               ESLogin.SETRANGE("Permissions as Type",Type);
               ESLogin.SETRANGE("Permissions as User ID","User ID");
               IF ESLogin.FIND('-') THEN
                 ESLogin.TESTFIELD("Permissions as User ID",'');

               DeleteRelatedEntries;

               IF NOT NoComment THEN
                 Comment(1,STRSUBSTNO(Text042,TABLECAPTION,"User ID"));
             END;

    OnRename=BEGIN
               ERROR(Text001);
             END;

    CaptionML=ENU=Login;
    LookupPageID=Page14123530;
    DrillDownPageID=Page14123530;
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=" ,Database,Windows";
                                                   OptionString=[ ,Database,Windows];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 2   ;   ;User ID             ;Code50        ;OnValidate=BEGIN
                                                                IF "User ID" = '' THEN BEGIN
                                                                  "User Name" := '';
                                                                  CLEAR("Login SID");
                                                                END ELSE
                                                                  ValidateUserID;
                                                              END;

                                                   CaptionML=ENU=User ID;
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 3   ;   ;User Name           ;Text208       ;CaptionML=ENU=User Name;
                                                   Editable=No }
    { 4   ;   ;Login SID           ;GUID          ;CaptionML=ENU=User Security ID;
                                                   Editable=No }
    { 5   ;   ;Full Name           ;Text80        ;CaptionML=ENU=Full Name;
                                                   Editable=No }
    { 6   ;   ;State               ;Option        ;CaptionML=ENU=State;
                                                   OptionCaptionML=ENU=Enabled,Disabled;
                                                   OptionString=Enabled,Disabled;
                                                   Editable=No }
    { 7   ;   ;License Type        ;Option        ;CaptionML=ENU=License Type;
                                                   OptionCaptionML=ENU=Full User,Limited User,Device Only User,Windows Group,External User;
                                                   OptionString=Full User,Limited User,Device Only User,Windows Group,External User;
                                                   Editable=No }
    { 8   ;   ;Permissions as Type ;Option        ;CaptionML=ENU=Permissions as Type;
                                                   OptionCaptionML=ENU=" ,Database,Windows";
                                                   OptionString=[ ,Database,Windows] }
    { 9   ;   ;Permissions as User ID;Code50      ;TableRelation="ES Login"."User ID" WHERE (Type=FIELD(Permissions as Type));
                                                   OnValidate=BEGIN
                                                                IF "Permissions as User ID" <> '' THEN BEGIN
                                                                  IF (Type = "Permissions as Type") AND ("User ID" = "Permissions as User ID") THEN
                                                                    ERROR(Text008);

                                                                  ESLoginAccessControl.RESET;
                                                                  ESLoginAccessControl.SETRANGE("Login Type",Type);
                                                                  ESLoginAccessControl.SETRANGE("Login User ID","User ID");
                                                                  IF ESLoginAccessControl.FIND('-') THEN
                                                                    ERROR(Text009,ESLoginAccessControl.TABLECAPTION);

                                                                  ESLogin.GET("Permissions as Type","Permissions as User ID");
                                                                  ESLogin.TESTFIELD("Permissions as User ID",'');

                                                                  ESLogin.RESET;
                                                                  ESLogin.SETRANGE("Permissions as Type",Type);
                                                                  ESLogin.SETRANGE("Permissions as User ID","User ID");
                                                                  IF ESLogin.FIND('-') THEN
                                                                    ERROR(Text010,ESLogin.Type,ESLogin."User ID");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              ESLoginAccessControl.RESET;
                                                              ESLoginAccessControl.SETRANGE("Login Type",Type);
                                                              ESLoginAccessControl.SETRANGE("Login User ID","User ID");
                                                              IF ESLoginAccessControl.FIND('-') THEN
                                                                ERROR(Text009,ESLoginAccessControl.TABLECAPTION);

                                                              ESLogin.Type := "Permissions as Type";
                                                              ESLogin."User ID" := "Permissions as User ID";
                                                              IF ESLogin.FIND('=') THEN
                                                                ;

                                                              ESLogin.RESET;
                                                              ESLogin.SETRANGE("Permissions as User ID",'');
                                                              IF PAGE.RUNMODAL(0,ESLogin) = ACTION::LookupOK THEN BEGIN
                                                                VALIDATE("Permissions as Type",ESLogin.Type);
                                                                VALIDATE("Permissions as User ID",ESLogin."User ID");
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Permissions as User ID }
    { 10  ;   ;Permissions as User Name;Text208   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ES Login"."User Name" WHERE (Type=FIELD(Permissions as Type),
                                                                                                    User ID=FIELD(Permissions as User ID)));
                                                   CaptionML=ENU=Permissions as User Name;
                                                   Editable=No }
    { 11  ;   ;Roles               ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Login Access Control" WHERE (Login Type=FIELD(Type),
                                                                                                      Login User ID=FIELD(User ID),
                                                                                                      Role Type=CONST(Role)));
                                                   CaptionML=ENU=Permission Sets;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 12  ;   ;Role Groups         ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Login Access Control" WHERE (Login Type=FIELD(Type),
                                                                                                      Login User ID=FIELD(User ID),
                                                                                                      Role Type=CONST(Group)));
                                                   CaptionML=ENU=Permission Groups;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 13  ;   ;No Permissions      ;Boolean       ;CaptionML=ENU=No Permissions }
    { 14  ;   ;Deleted Live Login  ;Boolean       ;CaptionML=ENU=Deleted Live Login;
                                                   Editable=No }
    { 15  ;   ;Login Updated Date Time;DateTime   ;CaptionML=ENU=Login Updated Date Time;
                                                   Editable=No }
    { 16  ;   ;Windows Group       ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("ES Windows Group Member" WHERE (Group SID=FIELD(Login SID),
                                                                                                      Group Login User ID=FILTER(<>'')));
                                                   CaptionML=ENU=Windows Group;
                                                   Editable=No }
    { 17  ;   ;Member of Windows Group;Boolean    ;FieldClass=FlowField;
                                                   CalcFormula=Exist("ES Windows Group Member" WHERE (Member SID=FIELD(Login SID),
                                                                                                      Group Login User ID=FILTER(<>''),
                                                                                                      Member Login User ID=FILTER(<>'')));
                                                   CaptionML=ENU=Member of Windows Group;
                                                   Editable=No }
    { 19  ;   ;Windows Access Controls;Integer    ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Windows Access Control" WHERE (Login SID=FIELD(Login SID)));
                                                   CaptionML=ENU=User Access Controls;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 20  ;   ;Access Controls     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Login Access Control" WHERE (Login Type=FIELD(Type),
                                                                                                      Login User ID=FIELD(User ID)));
                                                   CaptionML=ENU=Access Controls;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 21  ;   ;Access Controls (No Perm.);Integer ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Login Access Control" WHERE (Login Type=FIELD(Type),
                                                                                                      Login User ID=FIELD(User ID),
                                                                                                      No Permissions=CONST(Yes)));
                                                   CaptionML=ENU=Access Controls (No Perm.);
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 22  ;   ;Summary Permissions ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Summary Permission" WHERE (Type=FILTER(Database Login|Windows Login),
                                                                                                    Code=FIELD(User ID)));
                                                   CaptionML=ENU=Summary Permissions;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 23  ;   ;Expiry Date         ;Date          ;CaptionML=ENU=Expiry Date }
    { 24  ;   ;Exported Date Time  ;DateTime      ;CaptionML=ENU=Exported Date Time;
                                                   Editable=No }
    { 25  ;   ;Imported Date Time  ;DateTime      ;CaptionML=ENU=Imported Date Time;
                                                   Editable=No }
    { 26  ;   ;Summary Results (Access Comp);Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("ES Summary Result" WHERE (Type=FILTER(Database Login|Windows Login),
                                                                                                Code=FIELD(User ID),
                                                                                                Access Complete=CONST(Yes)));
                                                   CaptionML=ENU=Summary Results (Access Complete);
                                                   BlankZero=Yes;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Type,User ID                            ;Clustered=Yes }
    {    ;Login Updated Date Time                  }
    {    ;Expiry Date                              }
    {    ;Login SID                                }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ESWindowsLogin@1240520009 : Record 14123503;
      ESLoginAccessControl@1240520010 : Record 14123528;
      ESLogin@1240520012 : Record 14123527;
      Text001@1001 : TextConst 'ENU=Rename not allowed.';
      Text002@1002 : TextConst 'ENU=User %1 is not unique.';
      Text008@1008 : TextConst 'ENU=Cannot be set for same Login.';
      Text009@1009 : TextConst 'ENU=%1 exists for this Login.';
      Text010@1010 : TextConst 'ENU=%1 %2 is already used as Permission as User ID.';
      Text011@1011 : TextConst 'ENU=Nothing added.';
      Text012@1012 : TextConst 'ENU=Add for all Company Groups?';
      Text013@1013 : TextConst 'ENU=Only %1 existing Login Access Controls selected.';
      Text014@1014 : TextConst 'ENU=Add %1 Login Access Controls to Login %2 %3?\';
      Text015@1015 : TextConst 'ENU=%4 Login Access Control already exists';
      Text016@1016 : TextConst 'ENU=%1 Login Access Controls added (%2 existing). %3 removed.';
      Text017@1017 : TextConst 'ENU=%1 Login Access Controls added (%2 existing).';
      Text018@1018 : TextConst 'ENU=Nothing copied.';
      Text019@1019 : TextConst 'ENU=%1 Login Access Controls added. %2 deleted.';
      Text020@1020 : TextConst 'ENU=Get New Logins';
      Text021@1021 : TextConst 'ENU=Update All Logins';
      Text003@1003 : TextConst 'ENU=%1 %2 %3 is already using %4 %5 and cannot be assigned to %6 %7.';
      ESFileMgt@1240520001 : Codeunit 14123502;
      Text004@1004 : TextConst 'ENU=Add Permission Groups?';
      Text005@1005 : TextConst 'ENU=Replace existing Access Controls (set No Permissions in existing)?';
      Text006@1006 : TextConst 'ENU=Add %1 Access Controls? %2 already exists.';
      Text007@1007 : TextConst 'ENU=" (%3 set with No Permissions)"';
      Text023@1240520002 : TextConst 'ENU=Added %1 Access Controls %2 already existed.';
      Text024@1024 : TextConst 'ENU=Nothing has been exported.';
      Text025@1025 : TextConst 'ENU=File %1 already exists, overwrite?';
      Text026@1026 : TextConst 'ENU=%1 %2 exported to %3 with %4 records.';
      Text027@1027 : TextConst 'ENU=Exporting %1 to file\';
      Text028@1028 : TextConst 'ENU=Process #1################################################';
      Text029@1029 : TextConst 'ENU=Updating Version';
      Text030@1030 : TextConst 'ENU=Creating File';
      Text031@1031 : TextConst 'ENU=Closing File';
      Text032@1032 : TextConst 'ENU=Login %1 exported to %2 with %3 records.';
      Text033@1033 : TextConst 'ENU=Nothing imported.';
      Text034@1034 : TextConst 'ENU=File Name must be entered.';
      Text035@1035 : TextConst 'ENU=Importing %1 from file\';
      Text036@1036 : TextConst 'ENU=Process #1################################################\';
      Text037@1037 : TextConst 'ENU=Opening file';
      Text038@1038 : TextConst 'ENU=%1 is not valid content for this filetype.';
      Text039@1039 : TextConst 'ENU=%1 records have been imported from %2.';
      Text022@1022 : TextConst 'ENU=Imported %1 %2';
      Text040@1023 : TextConst 'ENU=Inserted %1 %2';
      Text041@1040 : TextConst 'ENU=Modified %1 %2';
      Text042@1041 : TextConst 'ENU=Deleted %1 %2';
      Text043@1042 : TextConst 'ENU=Updated in Live with Direct Integration.';
      Text044@1043 : TextConst 'ENU=Update Login?';
      NoComment@1240520003 : Boolean;
      Text045@1044 : TextConst 'ENU=Deleted %1 Duplicate %2';
      Text046@1045 : TextConst 'ENU=Get New Data from Live';
      Text101@1100 : TextConst 'ENU=Downloading File.';
      Text102@1123 : TextConst 'ENU=Uploading file.';

    PROCEDURE ValidateUserID@1240520008();
    VAR
      ESWindowsLoginMapping@1240520008 : Record 14123529;
      ESSecuritySetup@1000 : Record 14123521;
    BEGIN
      CASE Type OF
        Type::Windows:
          BEGIN
            ESSecuritySetup.GET;
            IF NOT ESSecuritySetup."Use Complete User ID" THEN BEGIN
              ESWindowsLoginMapping.RESET;
              ESWindowsLoginMapping.SETRANGE("User ID","User ID");
              IF ESWindowsLoginMapping.FIND('-') THEN BEGIN
                ESWindowsLogin.GET(ESWindowsLoginMapping.SID);
              END ELSE BEGIN
                ESWindowsLogin.RESET;
                ESWindowsLogin.SETRANGE("User ID","User ID");
                ESWindowsLogin.FIND('-');
                IF ESWindowsLogin.NEXT <> 0 THEN
                  ERROR(Text002,ESWindowsLogin."User ID");
              END;
            END ELSE BEGIN
              ESWindowsLogin.RESET;
              ESWindowsLogin.SETRANGE(ID,"User ID");
              ESWindowsLogin.FIND('-');
              IF ESWindowsLogin.NEXT <> 0 THEN
                ERROR(Text002,ESWindowsLogin."User ID");
            END;

            ESWindowsLogin.TESTFIELD(SID);
            "User Name" := ESWindowsLogin."User Name";
            "Login SID" := ESWindowsLogin.SID;
          END;
      END;
    END;

    PROCEDURE DeleteRelatedEntries@1240520009();
    BEGIN
      ESLoginAccessControl.RESET;
      ESLoginAccessControl.SETRANGE("Login Type",Type);
      ESLoginAccessControl.SETRANGE("Login User ID","User ID");
      ESLoginAccessControl.DELETEALL(TRUE);
    END;

    PROCEDURE GetNewLogins@1240520010(ShowStatus@1240520008 : Boolean;CreateRestPnt@1240520010 : Boolean;IncludeAccessControl@1240520011 : Boolean);
    VAR
      ESMgt@1240520009 : Codeunit 14123501;
    BEGIN
      CLEAR(ESMgt);

      IF CreateRestPnt THEN
        ESMgt.Live2ES(ShowStatus,Text020,TRUE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE);

      ESMgt.CreateNewLogins(ShowStatus,TRUE,FALSE,IncludeAccessControl);
    END;

    PROCEDURE GetNewData@1240520019(ShowStatus@1240520002 : Boolean);
    VAR
      ESMgt@1240520001 : Codeunit 14123501;
    BEGIN
      CLEAR(ESMgt);

      ESMgt.SynchronizeLiveToEasySecurity(Text046,TRUE,TRUE,TRUE,ShowStatus);
    END;

    PROCEDURE CheckUniqueWindowsID@1240520002(ShowError@1240520001 : Boolean) : Boolean;
    BEGIN
      IF Type <> Type::Windows THEN
        EXIT(TRUE);

      IF ISNULLGUID("Login SID") THEN
        EXIT(TRUE);

      ESLogin.RESET;
      ESLogin.SETRANGE(Type,ESLogin.Type::Windows);
      ESLogin.SETRANGE("Login SID","Login SID");
      IF ESLogin.FIND('-') THEN BEGIN
        IF ESLogin."User ID" = "User ID" THEN
          IF ESLogin.NEXT = 0 THEN
            EXIT(TRUE);
      END ELSE
        EXIT(TRUE);

      IF ShowError THEN
        ERROR(
          Text003,
          TABLECAPTION,ESLogin.Type,ESLogin."User ID",FIELDCAPTION("Login SID"),"Login SID",
          Type,"User ID")
      ELSE
        EXIT(FALSE);
    END;

    PROCEDURE UpdateLogin@1240520001(UpdateWindowsSummaryPerms@1240520003 : Boolean;UpdateSummaryPermManual@1240520004 : Boolean);
    VAR
      ESSecuritySetup@1240520002 : Record 14123521;
      ESMgt@1240520001 : Codeunit 14123501;
    BEGIN
      ESSecuritySetup.GET;

      IF UpdateWindowsSummaryPerms THEN
        ESMgt.UpdateESLogin(Rec,FALSE,TRUE,TRUE,TRUE,TRUE)
      ELSE
        IF UpdateSummaryPermManual THEN
          ESMgt.UpdateESLogin(Rec,TRUE,TRUE,FALSE,TRUE,TRUE)
        ELSE
          ESMgt.UpdateESLogin(
            Rec,TRUE,NOT ESSecuritySetup."Manual Update of Summary Perm.",FALSE,TRUE,TRUE);
    END;

    PROCEDURE UpdateAllLogins@1240520011(ShowStatus@1240520012 : Boolean;WriteToLive@1240520013 : Boolean);
    VAR
      ESSecuritySetup@1240520001 : Record 14123521;
      ESMgt@1240520010 : Codeunit 14123501;
    BEGIN
      ESSecuritySetup.GET;

      CLEAR(ESMgt);

      IF WriteToLive THEN
        ESMgt.TestSUPERUser('');

      ESMgt.UpdateAllLogins(
        TRUE,NOT ESSecuritySetup."Manual Update of Summary Perm.",FALSE,ShowStatus);

      IF WriteToLive THEN
        ESMgt.ES2Live(ShowStatus,Text021,FALSE,TRUE,FALSE,FALSE);
    END;

    PROCEDURE RemoveDuplicateRoles@1240520018(ShowStatus@1240520001 : Boolean) : Integer;
    VAR
      ESLoginAccessControl2@1240520003 : Record 14123528;
      ESRoleTmp@1240520002 : TEMPORARY Record 14123505;
      ESMgt@1240520004 : Codeunit 14123501;
      DeletedAccessControls@1240520005 : Integer;
    BEGIN
      ESLoginAccessControl.RESET;
      ESLoginAccessControl.SETRANGE("Login Type",Type);
      ESLoginAccessControl.SETRANGE("Login User ID","User ID");
      ESLoginAccessControl.SETRANGE("Role Type",ESLoginAccessControl."Role Type"::Group);
      IF ESLoginAccessControl.FIND('-') THEN
        REPEAT
          ESRoleTmp.DELETEALL;
          ESMgt.CalculateRoleGroupRoles(ESRoleTmp,ESLoginAccessControl."Role ID",FALSE);
          IF ESRoleTmp.FIND('-') THEN
            REPEAT
              IF ESLoginAccessControl2.GET(
                   ESLoginAccessControl."Login Type",ESLoginAccessControl."Login User ID",
                   ESLoginAccessControl."Role Type"::Role,ESRoleTmp."Role ID",
                   ESLoginAccessControl."Company Group ID")
              THEN BEGIN
                ESLoginAccessControl2.DELETE(TRUE);

                DeletedAccessControls := DeletedAccessControls + 1;
              END;
            UNTIL ESRoleTmp.NEXT = 0;
        UNTIL ESLoginAccessControl.NEXT = 0;

      IF ShowStatus THEN
        MESSAGE(Text045,DeletedAccessControls,ESLoginAccessControl.TABLECAPTION);
      Comment(1,STRSUBSTNO(Text045,DeletedAccessControls,ESLoginAccessControl.TABLECAPTION));

      EXIT(DeletedAccessControls);
    END;

    PROCEDURE AddAccessControlFromRoles@1240520015();
    VAR
      ESRoleTmp@1240520008 : TEMPORARY Record 14123505;
      ESCompanyGroupTmp@1240520014 : TEMPORARY Record 14123530;
      ESLoginAccessControl@1240520012 : Record 14123528;
      ESRolesForm@1240520009 : Page 14123505;
      ESCompanyGroupsForm@1240520015 : Page 14123535;
      ExistingRoles@1240520010 : Integer;
      NewRoles@1240520011 : Integer;
      AddedRoles@1240520013 : Integer;
      DeletedRoles@1240520016 : Integer;
    BEGIN
      TESTFIELD("User ID");
      TESTFIELD("Permissions as User ID",'');

      CLEAR(ESRolesForm);
      ESRolesForm.LOOKUPMODE(TRUE);
      IF ESRolesForm.RUNMODAL <> ACTION::LookupOK THEN
        EXIT;

      ESRoleTmp.RESET;
      ESRoleTmp.DELETEALL;
      ESRolesForm.GetSelection(ESRoleTmp);
      IF NOT ESRoleTmp.FIND('-') THEN
        ERROR(Text011);

      IF NOT CONFIRM(Text012,TRUE) THEN BEGIN
        CLEAR(ESCompanyGroupsForm);
        ESCompanyGroupsForm.LOOKUPMODE(TRUE);
        IF ESCompanyGroupsForm.RUNMODAL <> ACTION::LookupOK THEN
          ERROR(Text011);

        ESCompanyGroupTmp.RESET;
        ESCompanyGroupTmp.DELETEALL;
        ESCompanyGroupsForm.GetSelection(ESCompanyGroupTmp);
        IF NOT ESCompanyGroupTmp.FIND('-') THEN
          ERROR(Text011);
      END ELSE BEGIN
        CLEAR(ESCompanyGroupTmp);
        ESCompanyGroupTmp.INSERT;
      END;

      ExistingRoles := 0;
      NewRoles := 0;
      ESRoleTmp.FIND('-');
      REPEAT
        ESCompanyGroupTmp.FIND('-');
        REPEAT
          IF ESLoginAccessControl.GET(
               Type,"User ID",ESLoginAccessControl."Role Type"::Role,ESRoleTmp."Role ID",
               ESCompanyGroupTmp."Group ID")
          THEN
            ExistingRoles := ExistingRoles + 1
          ELSE
            IF ESCompanyGroupTmp."Group ID" <> '' THEN
              IF ESLoginAccessControl.GET(
                   Type,"User ID",ESLoginAccessControl."Role Type"::Role,ESRoleTmp."Role ID",'')
              THEN
                ExistingRoles := ExistingRoles + 1
              ELSE
                NewRoles := NewRoles + 1
            ELSE
              NewRoles := NewRoles + 1;
        UNTIL ESCompanyGroupTmp.NEXT = 0;
      UNTIL ESRoleTmp.NEXT = 0;

      IF NewRoles = 0 THEN
        ERROR(Text013,ExistingRoles);

      IF NOT CONFIRM(
               Text014 +
               Text015,
               FALSE,NewRoles,Type,"User ID",ExistingRoles)
      THEN
        ERROR(Text011);

      ExistingRoles := 0;
      AddedRoles := 0;
      DeletedRoles := 0;
      ESRoleTmp.FIND('-');
      REPEAT
        ESCompanyGroupTmp.FIND('-');
        REPEAT
          IF NOT ESLoginAccessControl.GET(
                   Type,"User ID",ESLoginAccessControl."Role Type"::Role,ESRoleTmp."Role ID",
                   ESCompanyGroupTmp."Group ID")
          THEN BEGIN
            IF (ESCompanyGroupTmp."Group ID" = '') OR
               NOT ESLoginAccessControl.GET(
                     Type,"User ID",ESLoginAccessControl."Role Type"::Role,ESRoleTmp."Role ID",'')
            THEN BEGIN
              ESLoginAccessControl.INIT;
              ESLoginAccessControl."Login Type" := Type;
              ESLoginAccessControl."Login User ID" := "User ID";
              ESLoginAccessControl."Role Type" := ESLoginAccessControl."Role Type"::Role;
              ESLoginAccessControl."Role ID" := ESRoleTmp."Role ID";
              ESLoginAccessControl."Company Group ID" := ESCompanyGroupTmp."Group ID";
              ESLoginAccessControl.INSERT(TRUE);

              AddedRoles := AddedRoles + 1;
            END;

            IF ESCompanyGroupTmp."Group ID" = '' THEN BEGIN
              ESLoginAccessControl.RESET;
              ESLoginAccessControl.SETRANGE("Login Type",Type);
              ESLoginAccessControl.SETRANGE("Login User ID","User ID");
              ESLoginAccessControl.SETRANGE("Role Type",ESLoginAccessControl."Role Type"::Role);
              ESLoginAccessControl.SETRANGE("Role ID",ESRoleTmp."Role ID");
              ESLoginAccessControl.SETFILTER("Company Group ID",'<>%1','');
              IF ESLoginAccessControl.FIND('-') THEN
                REPEAT
                  ESLoginAccessControl.DELETE(TRUE);

                  DeletedRoles := DeletedRoles + 1;
                UNTIL ESLoginAccessControl.NEXT = 0;
            END;
          END;
        UNTIL ESCompanyGroupTmp.NEXT = 0;
      UNTIL ESRoleTmp.NEXT = 0;

      IF DeletedRoles <> 0 THEN
        MESSAGE(
          Text016,
          AddedRoles,ExistingRoles,DeletedRoles)
      ELSE
        MESSAGE(Text017,AddedRoles,ExistingRoles);
    END;

    PROCEDURE AddAccessControlFromRoleGroups@1240520012();
    VAR
      ESRoleGroupTmp@1240520008 : TEMPORARY Record 14123525;
      ESCompanyGroupTmp@1240520014 : TEMPORARY Record 14123530;
      ESLoginAccessControl@1240520012 : Record 14123528;
      ESRoleGroupsForm@1240520009 : Page 14123532;
      ESCompanyGroupsForm@1240520015 : Page 14123535;
      ExistingRoles@1240520010 : Integer;
      NewRoles@1240520011 : Integer;
      AddedRoles@1240520013 : Integer;
      DeletedRoles@1240520016 : Integer;
    BEGIN
      TESTFIELD("User ID");
      TESTFIELD("Permissions as User ID",'');

      CLEAR(ESRoleGroupsForm);
      ESRoleGroupsForm.LOOKUPMODE(TRUE);
      IF ESRoleGroupsForm.RUNMODAL <> ACTION::LookupOK THEN
        EXIT;

      ESRoleGroupTmp.RESET;
      ESRoleGroupTmp.DELETEALL;
      ESRoleGroupsForm.GetSelection(ESRoleGroupTmp);
      IF NOT ESRoleGroupTmp.FIND('-') THEN
        ERROR(Text011);

      IF NOT CONFIRM(Text012,TRUE) THEN BEGIN
        CLEAR(ESCompanyGroupsForm);
        ESCompanyGroupsForm.LOOKUPMODE(TRUE);
        IF ESCompanyGroupsForm.RUNMODAL <> ACTION::LookupOK THEN
          ERROR(Text011);

        ESCompanyGroupTmp.RESET;
        ESCompanyGroupTmp.DELETEALL;
        ESCompanyGroupsForm.GetSelection(ESCompanyGroupTmp);
        IF NOT ESCompanyGroupTmp.FIND('-') THEN
          ERROR(Text011);
      END ELSE BEGIN
        CLEAR(ESCompanyGroupTmp);
        ESCompanyGroupTmp.INSERT;
      END;

      ExistingRoles := 0;
      NewRoles := 0;
      ESRoleGroupTmp.FIND('-');
      REPEAT
        ESCompanyGroupTmp.FIND('-');
        REPEAT
          IF ESLoginAccessControl.GET(
               Type,"User ID",ESLoginAccessControl."Role Type"::Group,ESRoleGroupTmp."Group ID",
               ESCompanyGroupTmp."Group ID")
          THEN
            ExistingRoles := ExistingRoles + 1
          ELSE
            IF ESCompanyGroupTmp."Group ID" <> '' THEN
              IF ESLoginAccessControl.GET(
                   Type,"User ID",ESLoginAccessControl."Role Type"::Group,ESRoleGroupTmp."Group ID",'')
              THEN
                ExistingRoles := ExistingRoles + 1
              ELSE
                NewRoles := NewRoles + 1
            ELSE
              NewRoles := NewRoles + 1;
        UNTIL ESCompanyGroupTmp.NEXT = 0;
      UNTIL ESRoleGroupTmp.NEXT = 0;

      IF NewRoles = 0 THEN
        ERROR(Text013,ExistingRoles);

      IF NOT CONFIRM(
               Text014 +
               Text015,
               FALSE,NewRoles,Type,"User ID",ExistingRoles)
      THEN
        ERROR(Text011);

      ExistingRoles := 0;
      AddedRoles := 0;
      DeletedRoles := 0;
      ESRoleGroupTmp.FIND('-');
      REPEAT
        ESCompanyGroupTmp.FIND('-');
        REPEAT
          IF NOT ESLoginAccessControl.GET(
                   Type,"User ID",ESLoginAccessControl."Role Type"::Group,ESRoleGroupTmp."Group ID",
                   ESCompanyGroupTmp."Group ID")
          THEN BEGIN
            IF (ESCompanyGroupTmp."Group ID" = '') OR
               NOT ESLoginAccessControl.GET(
                     Type,"User ID",ESLoginAccessControl."Role Type"::Group,ESRoleGroupTmp."Group ID",'')
            THEN BEGIN
              ESLoginAccessControl.INIT;
              ESLoginAccessControl."Login Type" := Type;
              ESLoginAccessControl."Login User ID" := "User ID";
              ESLoginAccessControl."Role Type" := ESLoginAccessControl."Role Type"::Group;
              ESLoginAccessControl."Role ID" := ESRoleGroupTmp."Group ID";
              ESLoginAccessControl."Company Group ID" := ESCompanyGroupTmp."Group ID";
              ESLoginAccessControl.INSERT(TRUE);

              AddedRoles := AddedRoles + 1;
            END;

            IF ESCompanyGroupTmp."Group ID" = '' THEN BEGIN
              ESLoginAccessControl.RESET;
              ESLoginAccessControl.SETRANGE("Login Type",Type);
              ESLoginAccessControl.SETRANGE("Login User ID","User ID");
              ESLoginAccessControl.SETRANGE("Role Type",ESLoginAccessControl."Role Type"::Group);
              ESLoginAccessControl.SETRANGE("Role ID",ESRoleGroupTmp."Group ID");
              ESLoginAccessControl.SETFILTER("Company Group ID",'<>%1','');
              IF ESLoginAccessControl.FIND('-') THEN
                REPEAT
                  ESLoginAccessControl.DELETE(TRUE);

                  DeletedRoles := DeletedRoles + 1;
                UNTIL ESLoginAccessControl.NEXT = 0;
            END;
          END;
        UNTIL ESCompanyGroupTmp.NEXT = 0;
      UNTIL ESRoleGroupTmp.NEXT = 0;

      IF DeletedRoles <> 0 THEN
        MESSAGE(
          Text016,
          AddedRoles,ExistingRoles,DeletedRoles)
      ELSE
        MESSAGE(Text017,AddedRoles,ExistingRoles);
    END;

    PROCEDURE AddAccessControlsToSelected@1240520004(VAR ESLogin@1240520001 : Record 14123527);
    VAR
      ESRoleTmp@1240520015 : TEMPORARY Record 14123505;
      ESRoleGroupTmp@1240520011 : TEMPORARY Record 14123525;
      ESCompanyGroupTmp@1240520010 : TEMPORARY Record 14123530;
      ESLoginAccessControl@1240520009 : Record 14123528;
      ESRolesForm@1240520012 : Page 14123505;
      ESRoleGroupsForm@1240520008 : Page 14123532;
      ESCompanyGroupsForm@1240520007 : Page 14123535;
      ExistingRoles@1240520006 : Integer;
      AddedRoles@1240520004 : Integer;
      DeletedRoles@1240520003 : Integer;
      RoleGroup@1240520002 : Boolean;
      SetNoPermissions@1240520013 : Boolean;
    BEGIN
      IF NOT ESLogin.FIND('-') THEN
        EXIT;

      RoleGroup := CONFIRM(Text004,TRUE);

      IF RoleGroup THEN BEGIN
        CLEAR(ESRoleGroupsForm);
        ESRoleGroupsForm.LOOKUPMODE(TRUE);
        IF ESRoleGroupsForm.RUNMODAL <> ACTION::LookupOK THEN
          EXIT;

        ESRoleGroupTmp.RESET;
        ESRoleGroupTmp.DELETEALL;
        ESRoleGroupsForm.GetSelection(ESRoleGroupTmp);
        IF NOT ESRoleGroupTmp.FIND('-') THEN
          ERROR(Text011);
      END ELSE BEGIN
        CLEAR(ESRolesForm);
        ESRolesForm.LOOKUPMODE(TRUE);
        IF ESRolesForm.RUNMODAL <> ACTION::LookupOK THEN
          EXIT;

        ESRoleTmp.RESET;
        ESRoleTmp.DELETEALL;
        ESRolesForm.GetSelection(ESRoleTmp);
        IF NOT ESRoleTmp.FIND('-') THEN
          ERROR(Text011);
      END;

      IF NOT CONFIRM(Text012,TRUE) THEN BEGIN
        CLEAR(ESCompanyGroupsForm);
        ESCompanyGroupsForm.LOOKUPMODE(TRUE);
        IF ESCompanyGroupsForm.RUNMODAL <> ACTION::LookupOK THEN
          ERROR(Text011);

        ESCompanyGroupTmp.RESET;
        ESCompanyGroupTmp.DELETEALL;
        ESCompanyGroupsForm.GetSelection(ESCompanyGroupTmp);
        IF NOT ESCompanyGroupTmp.FIND('-') THEN
          ERROR(Text011);
      END ELSE BEGIN
        CLEAR(ESCompanyGroupTmp);
        ESCompanyGroupTmp.INSERT;
      END;

      SetNoPermissions := CONFIRM(Text005,FALSE);

      ESLogin.FIND('-');
      REPEAT
        IF SetNoPermissions THEN BEGIN
          ESLoginAccessControl.RESET;
          ESLoginAccessControl.SETRANGE("Login Type",ESLogin.Type);
          ESLoginAccessControl.SETRANGE("Login User ID",ESLogin."User ID");
          DeletedRoles := DeletedRoles + ESLoginAccessControl.COUNT;
        END;

        IF RoleGroup THEN BEGIN
          ESRoleGroupTmp.FIND('-');
          REPEAT
            ESCompanyGroupTmp.FIND('-');
            REPEAT
              IF ESLoginAccessControl.GET(
                   ESLogin.Type,ESLogin."User ID",1,ESRoleGroupTmp."Group ID",
                   ESCompanyGroupTmp."Group ID")
              THEN BEGIN
                ExistingRoles := ExistingRoles + 1;
                DeletedRoles := DeletedRoles - 1;
              END ELSE
                AddedRoles := AddedRoles + 1;
            UNTIL ESCompanyGroupTmp.NEXT = 0;
          UNTIL ESRoleGroupTmp.NEXT = 0;
        END ELSE BEGIN
          ESRoleTmp.FIND('-');
          REPEAT
            ESCompanyGroupTmp.FIND('-');
            REPEAT
              IF ESLoginAccessControl.GET(
                   ESLogin.Type,ESLogin."User ID",0,ESRoleTmp."Role ID",
                   ESCompanyGroupTmp."Group ID")
              THEN BEGIN
                ExistingRoles := ExistingRoles + 1;
                DeletedRoles := DeletedRoles - 1;
              END ELSE
                AddedRoles := AddedRoles + 1;
            UNTIL ESCompanyGroupTmp.NEXT = 0;
          UNTIL ESRoleTmp.NEXT = 0;
        END;
      UNTIL ESLogin.NEXT = 0;

      IF SetNoPermissions THEN BEGIN
        IF NOT CONFIRM(Text006 + Text007,FALSE,AddedRoles,ExistingRoles,DeletedRoles) THEN
          ERROR(Text011);
      END ELSE
        IF NOT CONFIRM(Text006,FALSE,AddedRoles,ExistingRoles) THEN
          ERROR(Text011);

      ExistingRoles := 0;
      AddedRoles := 0;
      DeletedRoles := 0;

      ESLogin.FIND('-');
      REPEAT
        IF SetNoPermissions THEN BEGIN
          ESLoginAccessControl.RESET;
          ESLoginAccessControl.SETRANGE("Login Type",ESLogin.Type);
          ESLoginAccessControl.SETRANGE("Login User ID",ESLogin."User ID");
          DeletedRoles := DeletedRoles + ESLoginAccessControl.COUNT;
          ESLoginAccessControl.MODIFYALL("No Permissions",TRUE,TRUE);
        END;

        IF RoleGroup THEN BEGIN
          ESRoleGroupTmp.FIND('-');
          REPEAT
            ESCompanyGroupTmp.FIND('-');
            REPEAT
              IF ESLoginAccessControl.GET(
                   ESLogin.Type,ESLogin."User ID",1,ESRoleGroupTmp."Group ID",
                   ESCompanyGroupTmp."Group ID")
              THEN BEGIN
                IF ESLoginAccessControl."No Permissions" THEN BEGIN
                  ESLoginAccessControl.VALIDATE("No Permissions",FALSE);
                  ESLoginAccessControl.MODIFY(TRUE);
                END;
                ExistingRoles := ExistingRoles + 1;
                DeletedRoles := DeletedRoles - 1;
              END ELSE BEGIN
                ESLoginAccessControl.INIT;
                ESLoginAccessControl.VALIDATE("Login Type",ESLogin.Type);
                ESLoginAccessControl.VALIDATE("Login User ID",ESLogin."User ID");
                ESLoginAccessControl.VALIDATE("Role Type",1);
                ESLoginAccessControl.VALIDATE("Role ID",ESRoleGroupTmp."Group ID");
                ESLoginAccessControl.VALIDATE("Company Group ID",ESCompanyGroupTmp."Group ID");
                ESLoginAccessControl.INSERT(TRUE);
                AddedRoles := AddedRoles + 1;
              END;
            UNTIL ESCompanyGroupTmp.NEXT = 0;
          UNTIL ESRoleGroupTmp.NEXT = 0;
        END ELSE BEGIN
          ESRoleTmp.FIND('-');
          REPEAT
            ESCompanyGroupTmp.FIND('-');
            REPEAT
              IF ESLoginAccessControl.GET(
                   ESLogin.Type,ESLogin."User ID",0,ESRoleTmp."Role ID",
                   ESCompanyGroupTmp."Group ID")
              THEN BEGIN
                IF ESLoginAccessControl."No Permissions" THEN BEGIN
                  ESLoginAccessControl.VALIDATE("No Permissions",FALSE);
                  ESLoginAccessControl.MODIFY(TRUE);
                END;
                ExistingRoles := ExistingRoles + 1;
                DeletedRoles := DeletedRoles - 1;
              END ELSE BEGIN
                ESLoginAccessControl.INIT;
                ESLoginAccessControl.VALIDATE("Login Type",ESLogin.Type);
                ESLoginAccessControl.VALIDATE("Login User ID",ESLogin."User ID");
                ESLoginAccessControl.VALIDATE("Role Type",0);
                ESLoginAccessControl.VALIDATE("Role ID",ESRoleTmp."Role ID");
                ESLoginAccessControl.VALIDATE("Company Group ID",ESCompanyGroupTmp."Group ID");
                ESLoginAccessControl.INSERT(TRUE);
                AddedRoles := AddedRoles + 1;
              END;
            UNTIL ESCompanyGroupTmp.NEXT = 0;
          UNTIL ESRoleTmp.NEXT = 0;
        END;
      UNTIL ESLogin.NEXT = 0;

      IF SetNoPermissions THEN BEGIN
        MESSAGE(Text023 + Text007,AddedRoles,ExistingRoles,DeletedRoles)
      END ELSE
        MESSAGE(Text023,AddedRoles,ExistingRoles);
    END;

    PROCEDURE CopyAccessControlFrom@1240520013();
    VAR
      ESLogin@1240520010 : Record 14123527;
      ESLoginAccessControl@1240520008 : Record 14123528;
      ESLoginAccessControl2@1240520009 : Record 14123528;
      AddedRoles@1240520011 : Integer;
      DeletedRoles@1240520012 : Integer;
    BEGIN
      TESTFIELD("Permissions as User ID",'');

      ESLogin.RESET;
      ESLogin.SETRANGE("Permissions as User ID",'');
      IF PAGE.RUNMODAL(0,ESLogin) <> ACTION::LookupOK THEN
        ERROR(Text018);

      AddedRoles := 0;
      DeletedRoles := 0;

      ESLoginAccessControl.RESET;
      ESLoginAccessControl.SETRANGE("Login Type",ESLogin.Type);
      ESLoginAccessControl.SETRANGE("Login User ID",ESLogin."User ID");
      IF ESLoginAccessControl.FIND('-') THEN
        REPEAT
          IF NOT ESLoginAccessControl2.GET(
                   Type,"User ID",ESLoginAccessControl."Role Type",ESLoginAccessControl."Role ID",
                   ESLoginAccessControl."Company Group ID")
          THEN BEGIN
            IF (ESLoginAccessControl."Company Group ID" = '') OR
               NOT ESLoginAccessControl2.GET(
                     Type,"User ID",ESLoginAccessControl."Role Type",ESLoginAccessControl."Role ID",'')
            THEN BEGIN
              ESLoginAccessControl2.INIT;
              ESLoginAccessControl2."Login Type" := Type;
              ESLoginAccessControl2."Login User ID" := "User ID";
              ESLoginAccessControl2."Role Type" := ESLoginAccessControl."Role Type";
              ESLoginAccessControl2."Role ID" := ESLoginAccessControl."Role ID";
              ESLoginAccessControl2."Company Group ID" := ESLoginAccessControl."Company Group ID";
              ESLoginAccessControl2.INSERT(TRUE);

              AddedRoles := AddedRoles + 1;
            END;

            IF ESLoginAccessControl."Company Group ID" = '' THEN BEGIN
              ESLoginAccessControl2.RESET;
              ESLoginAccessControl2.SETRANGE("Login Type",Type);
              ESLoginAccessControl2.SETRANGE("Login User ID","User ID");
              ESLoginAccessControl2.SETRANGE("Role Type",ESLoginAccessControl."Role Type");
              ESLoginAccessControl2.SETRANGE("Role ID",ESLoginAccessControl."Role ID");
              ESLoginAccessControl2.SETFILTER("Company Group ID",'<>%1','');
              IF ESLoginAccessControl2.FIND('-') THEN
                REPEAT
                  ESLoginAccessControl2.DELETE(TRUE);

                  DeletedRoles := DeletedRoles + 1;
                UNTIL ESLoginAccessControl2.NEXT = 0;
            END;
          END;
        UNTIL ESLoginAccessControl.NEXT = 0;

      MESSAGE(Text019,AddedRoles,DeletedRoles);
    END;

    PROCEDURE UpdateNoPermBasedOnExpiryDate@1240520016();
    VAR
      ESMgt@1240520008 : Codeunit 14123501;
    BEGIN
      ESMgt.UpdateNoPermsFromExpiryDate(0,'',TODAY,FALSE,TRUE);
    END;

    PROCEDURE UpdateLoginInLive@1240520003(ShowStatus@1240520003 : Boolean);
    VAR
      ESSecuritySetup@1240520004 : Record 14123521;
      ESLoginSetup@1240520005 : Record 14123540;
      ESWindowsLogin@1240520002 : Record 14123503;
    BEGIN
      ESSecuritySetup.GET;
      ESSecuritySetup.TestPublishCompany;
      ESSecuritySetup.TESTFIELD("Direct Login Integration");

      ESLoginSetup.GET(USERID);
      ESLoginSetup.TESTFIELD("Direct Login Integration");

      IF CONFIRM(Text044) THEN
        UpdateLogin(FALSE,FALSE);

      CASE Type OF
        Type::Windows:
          BEGIN
            ESWindowsLogin.GET("Login SID");
            ESWindowsLogin.UpdateWindowsLoginInLive(ShowStatus);
          END;
      END;

      Comment(1,Text043);
    END;

    PROCEDURE ExportMultipleLogins@1240520007(VAR ESLogin@1240520004 : Record 14123527;ShowStatus@1240520021 : Boolean;ExportFileName@1240520001 : Text[250]);
    VAR
      ESEnterFileName@1240520002 : Page 14123560;
      FileMgt@1003 : Codeunit 419;
      TempServerFile@1002 : File;
      Window@1001 : Dialog;
      TempServerFileName@1000 : Text[1000];
      TotalRecords@1240520008 : Integer;
      TotalCodes@1240520003 : Integer;
    BEGIN
      IF ExportFileName = '' THEN BEGIN
        CLEAR(ESEnterFileName);
        ESEnterFileName.LOOKUPMODE(TRUE);
        ESEnterFileName.SelectNewFile(TRUE);
        IF ESEnterFileName.RUNMODAL <> ACTION::LookupOK THEN
          ERROR(Text024);
        ExportFileName := ESEnterFileName.GetFileName;
      END;

      TempServerFile.WRITEMODE(TRUE);
      TempServerFile.TEXTMODE(TRUE);
      TempServerFile.CREATETEMPFILE;
      TempServerFileName := TempServerFile.NAME;
      TempServerFile.CLOSE;

      IF GUIALLOWED THEN
        Window.OPEN(Text036);

      IF ESLogin.FIND('-') THEN
        REPEAT
          IF GUIALLOWED THEN
            Window.UPDATE(1,STRSUBSTNO('%1',ESLogin."User ID"));

          TotalCodes := TotalCodes + 1;

          TotalRecords :=
            TotalRecords + ESLogin.ExportLogin(FALSE,TRUE,TRUE,TempServerFileName,FALSE);
        UNTIL ESLogin.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text101);
      FileMgt.DownloadToFile(TempServerFileName,ExportFileName);

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text026,TotalCodes,TABLECAPTION,ExportFileName,TotalRecords);
    END;

    PROCEDURE ExportLogin@1240520006(ShowStatus@1240520021 : Boolean;ConfirmOverwrite@1240520020 : Boolean;AppendToFile@1240520001 : Boolean;ExportFileName@1240520002 : Text[250];ShowProgress@1240520004 : Boolean) : Integer;
    VAR
      ESSecuritySetup@1240520005 : Record 14123521;
      ESEnterFileName@1240520003 : Page 14123560;
      FileMgt@1004 : Codeunit 419;
      Window@1003 : Dialog;
      OutputFile@1002 : File;
      Value@1001 : ARRAY [100] OF Text[1000];
      LocalFileName@1000 : Text[1000];
      TotalRecords@1240520008 : Integer;
    BEGIN
      IF NOT AppendToFile THEN BEGIN
        IF ExportFileName = '' THEN BEGIN
          CLEAR(ESEnterFileName);
          ESEnterFileName.LOOKUPMODE(TRUE);
          ESEnterFileName.SelectNewFile(TRUE);
          IF ESEnterFileName.RUNMODAL <> ACTION::LookupOK THEN
            ERROR(Text024);
          ExportFileName := ESEnterFileName.GetFileName;
        END;

        IF ConfirmOverwrite THEN
          IF EXISTS(ExportFileName) THEN
            IF NOT CONFIRM(Text025,FALSE,ExportFileName) THEN
              ERROR(Text024);

        LocalFileName := ExportFileName;
        OutputFile.WRITEMODE(TRUE);
        OutputFile.TEXTMODE(TRUE);
        OutputFile.CREATETEMPFILE;
        ExportFileName := OutputFile.NAME;
        OutputFile.CLOSE;
      END;

      IF GUIALLOWED AND ShowProgress THEN
        Window.OPEN(STRSUBSTNO(ESSecuritySetup.ExtendProgressText(Text027),TABLECAPTION) + Text028);

      IF GUIALLOWED AND ShowProgress THEN
        Window.UPDATE(1,Text029);
      "Exported Date Time" := CREATEDATETIME(TODAY,TIME);
      MODIFY(TRUE);

      IF GUIALLOWED AND ShowProgress THEN
        Window.UPDATE(1,Text030);
      OutputFile.WRITEMODE(TRUE);
      OutputFile.TEXTMODE(TRUE);
      IF EXISTS(ExportFileName) AND AppendToFile THEN BEGIN
        OutputFile.OPEN(ExportFileName);
        OutputFile.SEEK(OutputFile.LEN);
      END ELSE
        OutputFile.CREATE(ExportFileName);

      CLEAR(ESFileMgt);
      ESFileMgt.SetDelimiters('~"','"~',',');

      IF GUIALLOWED AND ShowProgress THEN
        Window.UPDATE(1,'HEADER');
      Value[1] := ESFileMgt.FormatInteger(0) +'V1';
      Value[2] := 'HEADER';
      Value[3] := FORMAT(Type);
      Value[4] := "User ID";
      Value[5] := USERID;
      Value[6] := ESFileMgt.FormatDate(TODAY);
      Value[7] := ESFileMgt.FormatTime(TIME);
      OutputFile.WRITE(ESFileMgt.FormatValues(Value,7));

      Value[1] := ESFileMgt.FormatInteger(DATABASE::"ES Login") + 'V1';
      Value[2] := ESFileMgt.FormatInteger(Type);
      Value[3] := "User ID";
      Value[4] := "User Name";
      Value[5] := "Login SID";
      Value[6] := ESFileMgt.FormatInteger("Permissions as Type");
      Value[7] := "Permissions as User ID";
      Value[8] := ESFileMgt.FormatBoolean("No Permissions");
      Value[9] := ESFileMgt.FormatBoolean("Deleted Live Login");
      Value[10] := ESFileMgt.FormatDateTime("Login Updated Date Time");
      Value[11] := ESFileMgt.FormatDate("Expiry Date");

      OutputFile.WRITE(ESFileMgt.FormatValues(Value,11));

      TotalRecords := TotalRecords + 1;

      ESLoginAccessControl.RESET;
      ESLoginAccessControl.SETRANGE("Login Type",Type);
      ESLoginAccessControl.SETRANGE("Login User ID","User ID");
      IF ESLoginAccessControl.FIND('-') THEN
        REPEAT
          Value[1] := ESFileMgt.FormatInteger(DATABASE::"ES Login Access Control") + 'V1';
          Value[2] := ESFileMgt.FormatInteger(ESLoginAccessControl."Login Type");
          Value[3] := ESLoginAccessControl."Login User ID";
          Value[4] := ESFileMgt.FormatInteger(ESLoginAccessControl."Role Type");
          Value[5] := ESLoginAccessControl."Role ID";
          Value[6] := ESLoginAccessControl."Company Group ID";
          Value[7] := ESLoginAccessControl."Created By User";
          Value[8] := ESFileMgt.FormatDateTime(ESLoginAccessControl."Created Date Time");
          Value[9] := ESFileMgt.FormatBoolean(ESLoginAccessControl."No Permissions");
          Value[10] := ESFileMgt.FormatDate(ESLoginAccessControl."Expiry Date");
          OutputFile.WRITE(ESFileMgt.FormatValues(Value,10));

          TotalRecords := TotalRecords + 1;
        UNTIL ESLoginAccessControl.NEXT = 0;

      IF GUIALLOWED AND ShowProgress THEN
        Window.UPDATE(1,'TOTALS');
      Value[1] := ESFileMgt.FormatInteger(0) + 'V1';
      Value[2] := 'TOTALS';
      Value[3] := FORMAT(Type);
      Value[4] := "User ID";
      Value[5] := USERID;
      Value[6] := ESFileMgt.FormatDate(TODAY);
      Value[7] := ESFileMgt.FormatTime(TIME);
      Value[8] := ESFileMgt.FormatInteger(TotalRecords);
      OutputFile.WRITE(ESFileMgt.FormatValues(Value,8));

      IF GUIALLOWED AND ShowProgress THEN
        Window.UPDATE(1,Text031);
      OutputFile.CLOSE;

      IF NOT AppendToFile THEN BEGIN
        IF GUIALLOWED AND ShowProgress THEN
          Window.UPDATE(1,Text101);
         FileMgt.DownloadToFile(ExportFileName,LocalFileName);
      END;

      IF GUIALLOWED AND ShowProgress THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text032,"User ID",LocalFileName,TotalRecords);

      EXIT(TotalRecords);
    END;

    PROCEDURE ImportLogin@1240520005(ShowStatus@1240520011 : Boolean;ImportFileName@1240520018 : Text[250];OverWriteExisting@1240520001 : Boolean);
    VAR
      ESLogin@1240520004 : Record 14123527;
      ESRole@1240520002 : Record 14123505;
      ESRoleGroup@1240520015 : Record 14123525;
      ESCompanyGroup@1240520003 : Record 14123530;
      ESSecuritySetup@1240520005 : Record 14123521;
      ESEnterFileName@1240520019 : Page 14123560;
      FileMgt@1000 : Codeunit 419;
      InputFile@1240520009 : File;
      Window@1240520012 : Dialog;
      TempText@1240520010 : Text[1000];
      Value@1240520008 : ARRAY [100] OF Text[1000];
      ServerFileName@1001 : Text[1000];
      NextUpdatePos@1240520022 : Integer;
      TotalRecords@1240520023 : Integer;
    BEGIN
      IF ImportFileName = '' THEN BEGIN
        CLEAR(ESEnterFileName);
        ESEnterFileName.LOOKUPMODE(TRUE);
        IF ESEnterFileName.RUNMODAL <> ACTION::LookupOK THEN
          ERROR(Text033);
        ImportFileName := ESEnterFileName.GetFileName;
      END;

      IF ImportFileName = '' THEN
        ERROR(Text034);

      IF GUIALLOWED THEN
        Window.OPEN(
          STRSUBSTNO(ESSecuritySetup.ExtendProgressText(Text035),TABLECAPTION) +
          Text036 + '        @2@@@@@@@@@@@@@@@@@@@@@@@@@@@@');

      CLEAR(ESFileMgt);
      ESFileMgt.SetDelimiters('~"','"~',',');

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text037);
      InputFile.WRITEMODE(FALSE);
      InputFile.TEXTMODE(TRUE);
      IF NOT InputFile.OPEN(ImportFileName) THEN BEGIN
        IF GUIALLOWED THEN
          Window.UPDATE(1,Text102);
        ServerFileName := FileMgt.UploadFileSilent(ImportFileName);
        IF GUIALLOWED THEN
          Window.UPDATE(1,Text037);

        IF NOT InputFile.OPEN(ServerFileName) THEN
          InputFile.OPEN(ImportFileName);
      END;
      WHILE InputFile.POS < InputFile.LEN DO BEGIN
        IF NextUpdatePos < InputFile.POS THEN BEGIN
          IF GUIALLOWED THEN
            Window.UPDATE(2,ROUND(10000 * (InputFile.POS / InputFile.LEN),1));
          NextUpdatePos := ROUND(InputFile.POS + InputFile.LEN / 500,1);
        END;

        InputFile.READ(TempText);
        ESFileMgt.SplitInValues(Value,TempText);

        CASE Value[1] OF
          '','0V1':
            ;
          '14123527V1':
            BEGIN
              IF GUIALLOWED THEN
                Window.UPDATE(1,Value[3]);

              ESLogin.GET(ESFileMgt.EvaluateInteger(Value[2]),Value[3]);
              ESLogin."Permissions as Type" := ESFileMgt.EvaluateInteger(Value[6]);
              ESLogin."Permissions as User ID" := Value[7];
              IF ESLogin."Permissions as User ID" <> '' THEN
                ESLogin.VALIDATE("Permissions as User ID");
              ESLogin."No Permissions" := ESFileMgt.EvaluateBoolean(Value[8]);
              ESLogin."Expiry Date" := ESFileMgt.EvaluateDate(Value[11]);
              ESLogin."Imported Date Time" := CREATEDATETIME(TODAY,TIME);
              ESLogin.MODIFY(TRUE);

              ESLoginAccessControl.RESET;
              ESLoginAccessControl.SETRANGE("Login Type",ESLogin.Type);
              ESLoginAccessControl.SETRANGE("Login User ID",ESLogin."User ID");
              ESLoginAccessControl.DELETEALL(TRUE);

              ESLogin.Comment(1,STRSUBSTNO(Text022,ESLogin.TABLECAPTION,ESLogin."User ID"));

              TotalRecords := TotalRecords + 1;
            END;
          '14123528V1':
            BEGIN
              ESLoginAccessControl.INIT;
              ESLoginAccessControl.SetAllowBlankNoQuestion(TRUE,FALSE);
              ESLoginAccessControl."Login Type" := ESFileMgt.EvaluateInteger(Value[2]);
              ESLoginAccessControl."Login User ID" := Value[3];
              ESLoginAccessControl."Role Type" := ESFileMgt.EvaluateInteger(Value[4]);
              ESLoginAccessControl."Role ID" := Value[5];
              IF ESLoginAccessControl."Role Type" = ESLoginAccessControl."Role Type"::Role THEN
                ESRole.GET(ESLoginAccessControl."Role ID")
              ELSE
                ESRoleGroup.GET(ESLoginAccessControl."Role ID");
              ESLoginAccessControl."Company Group ID" := Value[6];
              IF ESLoginAccessControl."Company Group ID" <> '' THEN
                ESCompanyGroup.GET(ESLoginAccessControl."Company Group ID");
              ESLoginAccessControl."Created By User" := Value[7];
              ESLoginAccessControl."Created Date Time" := ESFileMgt.EvaluateDateTime(Value[8]);
              ESLoginAccessControl."No Permissions" := ESFileMgt.EvaluateBoolean(Value[9]);
              ESLoginAccessControl."Expiry Date" := ESFileMgt.EvaluateDate(Value[10]);
              ESLoginAccessControl.INSERT(TRUE);

              TotalRecords := TotalRecords + 1;
            END;
          ELSE
            ERROR(Text038,Value[1]);
        END;
      END;

      InputFile.CLOSE;

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text039,TotalRecords,ImportFileName);

      ESSecuritySetup.Comment(
        1,ESLogin.TABLECAPTION + ': ' + STRSUBSTNO(Text039,TotalRecords,ImportFileName));
    END;

    PROCEDURE CreateTextLines@1240520014();
    VAR
      ESLogin@1240520008 : Record 14123527;
      ESPrintLogin@1240520009 : Report 14123503;
    BEGIN
      ESLogin := Rec;
      ESLogin.SETRECFILTER;

      CLEAR(ESPrintLogin);
      ESPrintLogin.SETTABLEVIEW(ESLogin);
      ESPrintLogin.RUN;
    END;

    PROCEDURE FormatAsTextLine@1240520047(VAR ESTextLine@1240520011 : Record 14123520;NoOfRelatedKeyFields@1240520009 : Integer;CalcFlowFields@1240520012 : Boolean;UserDateTimeDetails@1240520013 : Boolean) : Boolean;
    VAR
      ESFormatMgt@1240520014 : Codeunit 14123505;
      RecRef@1240520010 : RecordRef;
    BEGIN
      ESFormatMgt.NewRecord(
        TABLECAPTION,"User ID",'','','','','','','','','',1,NoOfRelatedKeyFields);
      ESFormatMgt.AddField(FIELDCAPTION("User Name"),FORMAT("User Name"));
      ESFormatMgt.AddField(FIELDCAPTION("Login SID"),FORMAT("Login SID"));
      IF "Permissions as User ID" <> '' THEN BEGIN
        ESFormatMgt.AddField(FIELDCAPTION("Permissions as Type"),FORMAT("Permissions as Type"));
        ESFormatMgt.AddField(FIELDCAPTION("Permissions as User ID"),FORMAT("Permissions as User ID"));
      END;
      IF "Deleted Live Login" THEN
        ESFormatMgt.AddField(FIELDCAPTION("Deleted Live Login"),FORMAT("Deleted Live Login"));

      IF "No Permissions" THEN
        ESFormatMgt.AddField(FIELDCAPTION("No Permissions"),FORMAT("No Permissions"));
      IF "Expiry Date" <> 0D THEN
        ESFormatMgt.AddField(FIELDCAPTION("Expiry Date"),FORMAT("Expiry Date"));

      IF UserDateTimeDetails THEN BEGIN
        IF "Login Updated Date Time" <> 0DT THEN
          ESFormatMgt.AddField(
            FIELDCAPTION("Login Updated Date Time"),FORMAT("Login Updated Date Time"));
        IF "Exported Date Time" <> 0DT THEN
          ESFormatMgt.AddField(
            FIELDCAPTION("Exported Date Time"),FORMAT("Exported Date Time"));
        IF "Imported Date Time" <> 0DT THEN
          ESFormatMgt.AddField(
            FIELDCAPTION("Imported Date Time"),FORMAT("Imported Date Time"));
      END;

      IF CalcFlowFields THEN BEGIN
        CALCFIELDS(
          "Permissions as User Name",Roles,"Role Groups","Windows Group","Member of Windows Group",
          "Windows Access Controls","Access Controls",
          "Access Controls (No Perm.)","Summary Permissions","Summary Results (Access Comp)");

        IF "Permissions as User ID" <> '' THEN
          ESFormatMgt.AddFlowField(FIELDCAPTION(
            "Permissions as User Name"),FORMAT("Permissions as User Name"));
        IF Roles <> 0 THEN
          ESFormatMgt.AddFlowField(FIELDCAPTION(Roles),FORMAT(Roles));
        IF "Role Groups" <> 0 THEN
          ESFormatMgt.AddFlowField(FIELDCAPTION("Role Groups"),FORMAT("Role Groups"));
        IF "Windows Group" THEN
          ESFormatMgt.AddFlowField(FIELDCAPTION("Windows Group"),FORMAT("Windows Group"));
        IF "Member of Windows Group" THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Member of Windows Group"),FORMAT("Member of Windows Group"));
        IF "Windows Access Controls" <> 0 THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Windows Access Controls"),FORMAT("Windows Access Controls"));
        IF "Access Controls" <> 0 THEN
          ESFormatMgt.AddFlowField(FIELDCAPTION("Access Controls"),FORMAT("Access Controls"));
        IF "Access Controls (No Perm.)" <> 0 THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Access Controls (No Perm.)"),FORMAT("Access Controls (No Perm.)"));
        IF "Summary Permissions" <> 0 THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Summary Permissions"),FORMAT("Summary Permissions"));
        IF "Summary Results (Access Comp)" <> 0 THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Summary Results (Access Comp)"),FORMAT("Summary Results (Access Comp)"));
      END;

      RecRef.OPEN(DATABASE::"ES Login");
      RecRef.GETTABLE(Rec);
      ESFormatMgt.FormatNewESTextLine(ESTextLine,DATABASE::"ES Login",RecRef.RECORDID);

      EXIT(ESFormatMgt.NoTextOverflow);
    END;

    PROCEDURE SetNoComment@1240520017(NewValue@1240520001 : Boolean);
    BEGIN
      NoComment := NewValue;
    END;

    PROCEDURE Comment@1240520020(FunctionNo@1240520008 : ' ,Insert,Show,Exist,DeleteAll';NewText@1240520010 : Text[250]) : Boolean;
    VAR
      ESComment@1240520009 : Record 14123524;
    BEGIN
      ESComment.RESET;
      ESComment.SETRANGE("Table ID",DATABASE::"ES Login");
      ESComment.SETRANGE(Type,Type);
      ESComment.SETRANGE("User ID","User ID");
      EXIT(ESComment.Functions(FunctionNo,NewText));
    END;

    BEGIN
    END.
  }
}

