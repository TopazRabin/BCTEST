OBJECT Table 14000807 LTL Weight Distribution
{
  OBJECT-PROPERTIES
  {
    Date=06/28/17;
    Time=12:00:00 PM;
    Version List=SE0.53.08;
  }
  PROPERTIES
  {
    CaptionML=ENU=LTL Weight Distribution;
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Package,Document,Bill of Lading,Rate Shop;
                                                   OptionString=Package,Document,Bill of Lading,Rate Shop;
                                                   Editable=No }
    { 2   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Package)) Package
                                                                 ELSE IF (Type=CONST(Document)) "Sales Header".No. WHERE (Document Type=CONST(Order));
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=No.;
                                                   NotBlank=No;
                                                   Editable=No }
    { 31  ;   ;Multi Freight Type Calculation;Boolean;
                                                   CaptionML=ENU=Multi Freight Type Calculation }
    { 32  ;   ;Default Freight Type Weight;Decimal;CaptionML=ENU=Default Freight Type Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 33  ;   ;Class 50 Weight     ;Decimal       ;CaptionML=ENU=Class 50 Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 34  ;   ;Class 55 Weight     ;Decimal       ;CaptionML=ENU=Class 55 Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 35  ;   ;Class 60 Weight     ;Decimal       ;CaptionML=ENU=Class 60 Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 36  ;   ;Class 65 Weight     ;Decimal       ;CaptionML=ENU=Class 65 Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 37  ;   ;Class 70 Weight     ;Decimal       ;CaptionML=ENU=Class 70 Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 38  ;   ;Class 77.5 Weight   ;Decimal       ;CaptionML=ENU=Class 77.5 Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 39  ;   ;Class 85 Weight     ;Decimal       ;CaptionML=ENU=Class 85 Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 40  ;   ;Class 92.5 Weight   ;Decimal       ;CaptionML=ENU=Class 92.5 Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 41  ;   ;Class 100 Weight    ;Decimal       ;CaptionML=ENU=Class 100 Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 42  ;   ;Class 110 Weight    ;Decimal       ;CaptionML=ENU=Class 110 Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 43  ;   ;Class 125 Weight    ;Decimal       ;CaptionML=ENU=Class 125 Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 44  ;   ;Class 150 Weight    ;Decimal       ;CaptionML=ENU=Class 150 Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 45  ;   ;Class 175 Weight    ;Decimal       ;CaptionML=ENU=Class 175 Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 46  ;   ;Class 200 Weight    ;Decimal       ;CaptionML=ENU=Class 200 Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 47  ;   ;Class 250 Weight    ;Decimal       ;CaptionML=ENU=Class 250 Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 48  ;   ;Class 300 Weight    ;Decimal       ;CaptionML=ENU=Class 300 Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 49  ;   ;Class 350 Weight    ;Decimal       ;CaptionML=ENU=Class 350 Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 50  ;   ;Class 400 Weight    ;Decimal       ;CaptionML=ENU=Class 400 Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 51  ;   ;Class 500 Weight    ;Decimal       ;CaptionML=ENU=Class 500 Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 61  ;   ;Default Freight Type Volume;Decimal;CaptionML=ENU=Default Freight Type Volume;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 62  ;   ;Class 50 Volume     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 50 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 50 Volume;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 63  ;   ;Class 55 Volume     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 55 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 55 Volume;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 64  ;   ;Class 60 Volume     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 60 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 60 Volume;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 65  ;   ;Class 65 Volume     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 65 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 65 Volume;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 66  ;   ;Class 70 Volume     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 70 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 70 Volume;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 67  ;   ;Class 77.5 Volume   ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 77.5 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 77.5 Volume;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 68  ;   ;Class 85 Volume     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 85 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 85 Volume;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 69  ;   ;Class 92.5 Volume   ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 92.5 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 92.5 Volume;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 70  ;   ;Class 100 Volume    ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 100 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 100 Volume;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 71  ;   ;Class 110 Volume    ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 110 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 110 Volume;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 72  ;   ;Class 125 Volume    ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 125 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 125 Volume;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 73  ;   ;Class 150 Volume    ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 150 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 150 Volume;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 74  ;   ;Class 175 Volume    ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 175 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 175 Volume;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 75  ;   ;Class 200 Volume    ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 200 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 200 Volume;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 76  ;   ;Class 250 Volume    ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 250 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 250 Volume;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 77  ;   ;Class 300 Volume    ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 300 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 300 Volume;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 78  ;   ;Class 350 Volume    ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 350 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 350 Volume;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 79  ;   ;Class 400 Volume    ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 400 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 400 Volume;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 80  ;   ;Class 500 Volume    ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 500 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 500 Volume;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 81  ;   ;Default Freight Type Value;Decimal ;CaptionML=ENU=Default Freight Type Value;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 82  ;   ;Class 50 Value      ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 50 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 50 Value;
                                                   BlankZero=Yes }
    { 83  ;   ;Class 55 Value      ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 55 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 55 Value;
                                                   BlankZero=Yes }
    { 84  ;   ;Class 60 Value      ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 60 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 60 Value;
                                                   BlankZero=Yes }
    { 85  ;   ;Class 65 Value      ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 65 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 65 Value;
                                                   BlankZero=Yes }
    { 86  ;   ;Class 70 Value      ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 70 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 70 Value;
                                                   BlankZero=Yes }
    { 87  ;   ;Class 77.5 Value    ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 77.5 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 77.5 Value;
                                                   BlankZero=Yes }
    { 88  ;   ;Class 85 Value      ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 85 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 85 Value;
                                                   BlankZero=Yes }
    { 89  ;   ;Class 92.5 Value    ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 92.5 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 92.5 Value;
                                                   BlankZero=Yes }
    { 90  ;   ;Class 100 Value     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 100 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 100 Value;
                                                   BlankZero=Yes }
    { 91  ;   ;Class 110 Value     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 110 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 110 Value;
                                                   BlankZero=Yes }
    { 92  ;   ;Class 125 Value     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 125 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 125 Value;
                                                   BlankZero=Yes }
    { 93  ;   ;Class 150 Value     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 150 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 150 Value;
                                                   BlankZero=Yes }
    { 94  ;   ;Class 175 Value     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 175 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 175 Value;
                                                   BlankZero=Yes }
    { 95  ;   ;Class 200 Value     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 200 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 200 Value;
                                                   BlankZero=Yes }
    { 96  ;   ;Class 250 Value     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 250 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 250 Value;
                                                   BlankZero=Yes }
    { 97  ;   ;Class 300 Value     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 300 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 300 Value;
                                                   BlankZero=Yes }
    { 98  ;   ;Class 350 Value     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 350 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 350 Value;
                                                   BlankZero=Yes }
    { 99  ;   ;Class 400 Value     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 400 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 400 Value;
                                                   BlankZero=Yes }
    { 100 ;   ;Class 500 Value     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Class 500 Weight");
                                                              END;

                                                   CaptionML=ENU=Class 500 Value;
                                                   BlankZero=Yes }
  }
  KEYS
  {
    {    ;Type,No.                                ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Package@1000000000 : Record 14000701;
      ShippingSetup@1000000003 : Record 14000707;
      LTLFreightType@1000000005 : Record 14000806;
      LTLFreightTypeTmp@1000000006 : TEMPORARY Record 14000806;
      Text001@1001 : TextConst 'ENU=Wrong adjustment.';

    PROCEDURE ClearFreightType@9();
    BEGIN
      "Default Freight Type Weight" := 0;
      "Class 50 Weight" := 0;
      "Class 55 Weight" := 0;
      "Class 60 Weight" := 0;
      "Class 65 Weight" := 0;
      "Class 70 Weight" := 0;
      "Class 77.5 Weight" := 0;
      "Class 85 Weight" := 0;
      "Class 92.5 Weight" := 0;
      "Class 100 Weight" := 0;
      "Class 110 Weight" := 0;
      "Class 125 Weight" := 0;
      "Class 150 Weight" := 0;
      "Class 175 Weight" := 0;
      "Class 200 Weight" := 0;
      "Class 250 Weight" := 0;
      "Class 300 Weight" := 0;
      "Class 350 Weight" := 0;
      "Class 400 Weight" := 0;
      "Class 500 Weight" := 0;

      "Default Freight Type Volume" := 0;
      "Class 50 Volume" := 0;
      "Class 55 Volume" := 0;
      "Class 60 Volume" := 0;
      "Class 65 Volume" := 0;
      "Class 70 Volume" := 0;
      "Class 77.5 Volume" := 0;
      "Class 85 Volume" := 0;
      "Class 92.5 Volume" := 0;
      "Class 100 Volume" := 0;
      "Class 110 Volume" := 0;
      "Class 125 Volume" := 0;
      "Class 150 Volume" := 0;
      "Class 175 Volume" := 0;
      "Class 200 Volume" := 0;
      "Class 250 Volume" := 0;
      "Class 300 Volume" := 0;
      "Class 350 Volume" := 0;
      "Class 400 Volume" := 0;
      "Class 500 Volume" := 0;

      "Default Freight Type Value" := 0;
      "Class 50 Value" := 0;
      "Class 55 Value" := 0;
      "Class 60 Value" := 0;
      "Class 65 Value" := 0;
      "Class 70 Value" := 0;
      "Class 77.5 Value" := 0;
      "Class 85 Value" := 0;
      "Class 92.5 Value" := 0;
      "Class 100 Value" := 0;
      "Class 110 Value" := 0;
      "Class 125 Value" := 0;
      "Class 150 Value" := 0;
      "Class 175 Value" := 0;
      "Class 200 Value" := 0;
      "Class 250 Value" := 0;
      "Class 300 Value" := 0;
      "Class 350 Value" := 0;
      "Class 400 Value" := 0;
      "Class 500 Value" := 0;
    END;

    PROCEDURE AddFreightTypeWeight@3(FreightType@1000000000 : Code[10];WeightLbs@1000000001 : Decimal);
    BEGIN
      IF FreightType <> '' THEN BEGIN
        IF LTLFreightTypeTmp.GET(FreightType) THEN BEGIN
          LTLFreightType := LTLFreightTypeTmp;
        END ELSE BEGIN
          LTLFreightType.GET(FreightType);
          LTLFreightTypeTmp := LTLFreightType;
          LTLFreightTypeTmp.INSERT;
        END;
      END ELSE
        CLEAR(LTLFreightType);

      CASE LTLFreightType."Standard Freight Type" OF
        LTLFreightType."Standard Freight Type"::" ":
          "Default Freight Type Weight" := "Default Freight Type Weight" + WeightLbs;
        LTLFreightType."Standard Freight Type"::"50":
          "Class 50 Weight" := "Class 50 Weight" + WeightLbs;
        LTLFreightType."Standard Freight Type"::"55":
          "Class 55 Weight" := "Class 55 Weight" + WeightLbs;
        LTLFreightType."Standard Freight Type"::"60":
          "Class 60 Weight" := "Class 60 Weight" + WeightLbs;
        LTLFreightType."Standard Freight Type"::"65":
          "Class 65 Weight" := "Class 65 Weight" + WeightLbs;
        LTLFreightType."Standard Freight Type"::"70":
          "Class 70 Weight" := "Class 70 Weight" + WeightLbs;
        LTLFreightType."Standard Freight Type"::"77.5":
          "Class 77.5 Weight" := "Class 77.5 Weight" + WeightLbs;
        LTLFreightType."Standard Freight Type"::"85":
          "Class 85 Weight" := "Class 85 Weight" + WeightLbs;
        LTLFreightType."Standard Freight Type"::"92.5":
          "Class 92.5 Weight" := "Class 92.5 Weight" + WeightLbs;
        LTLFreightType."Standard Freight Type"::"100":
          "Class 100 Weight" := "Class 100 Weight" + WeightLbs;
        LTLFreightType."Standard Freight Type"::"110":
          "Class 110 Weight" := "Class 110 Weight" + WeightLbs;
        LTLFreightType."Standard Freight Type"::"125":
          "Class 125 Weight" := "Class 125 Weight" + WeightLbs;
        LTLFreightType."Standard Freight Type"::"150":
          "Class 150 Weight" := "Class 150 Weight" + WeightLbs;
        LTLFreightType."Standard Freight Type"::"175":
          "Class 175 Weight" := "Class 175 Weight" + WeightLbs;
        LTLFreightType."Standard Freight Type"::"200":
          "Class 200 Weight" := "Class 200 Weight" + WeightLbs;
        LTLFreightType."Standard Freight Type"::"250":
          "Class 250 Weight" := "Class 250 Weight" + WeightLbs;
        LTLFreightType."Standard Freight Type"::"300":
          "Class 300 Weight" := "Class 300 Weight" + WeightLbs;
        LTLFreightType."Standard Freight Type"::"350":
          "Class 350 Weight" := "Class 350 Weight" + WeightLbs;
        LTLFreightType."Standard Freight Type"::"400":
          "Class 400 Weight" := "Class 400 Weight" + WeightLbs;
        LTLFreightType."Standard Freight Type"::"500":
          "Class 500 Weight" := "Class 500 Weight" + WeightLbs;
      END;
    END;

    PROCEDURE AddFreightTypeVolume@2(FreightType@1240030000 : Code[10];Volume@1240030001 : Decimal);
    BEGIN
      IF FreightType <> '' THEN BEGIN
        IF LTLFreightTypeTmp.GET(FreightType) THEN BEGIN
          LTLFreightType := LTLFreightTypeTmp;
        END ELSE BEGIN
          LTLFreightType.GET(FreightType);
          LTLFreightTypeTmp := LTLFreightType;
          LTLFreightTypeTmp.INSERT;
        END;
      END ELSE
        CLEAR(LTLFreightType);

      CASE LTLFreightType."Standard Freight Type" OF
        LTLFreightType."Standard Freight Type"::" ":
          "Default Freight Type Volume" := "Default Freight Type Volume" + Volume;
        LTLFreightType."Standard Freight Type"::"50":
          "Class 50 Volume" := "Class 50 Volume" + Volume;
        LTLFreightType."Standard Freight Type"::"55":
          "Class 55 Volume" := "Class 55 Volume" + Volume;
        LTLFreightType."Standard Freight Type"::"60":
          "Class 60 Volume" := "Class 60 Volume" + Volume;
        LTLFreightType."Standard Freight Type"::"65":
          "Class 65 Volume" := "Class 65 Volume" + Volume;
        LTLFreightType."Standard Freight Type"::"70":
          "Class 70 Volume" := "Class 70 Volume" + Volume;
        LTLFreightType."Standard Freight Type"::"77.5":
          "Class 77.5 Volume" := "Class 77.5 Volume" + Volume;
        LTLFreightType."Standard Freight Type"::"85":
          "Class 85 Volume" := "Class 85 Volume" + Volume;
        LTLFreightType."Standard Freight Type"::"92.5":
          "Class 92.5 Volume" := "Class 92.5 Volume" + Volume;
        LTLFreightType."Standard Freight Type"::"100":
          "Class 100 Volume" := "Class 100 Volume" + Volume;
        LTLFreightType."Standard Freight Type"::"110":
          "Class 110 Volume" := "Class 110 Volume" + Volume;
        LTLFreightType."Standard Freight Type"::"125":
          "Class 125 Volume" := "Class 125 Volume" + Volume;
        LTLFreightType."Standard Freight Type"::"150":
          "Class 150 Volume" := "Class 150 Volume" + Volume;
        LTLFreightType."Standard Freight Type"::"175":
          "Class 175 Volume" := "Class 175 Volume" + Volume;
        LTLFreightType."Standard Freight Type"::"200":
          "Class 200 Volume" := "Class 200 Volume" + Volume;
        LTLFreightType."Standard Freight Type"::"250":
          "Class 250 Volume" := "Class 250 Volume" + Volume;
        LTLFreightType."Standard Freight Type"::"300":
          "Class 300 Volume" := "Class 300 Volume" + Volume;
        LTLFreightType."Standard Freight Type"::"350":
          "Class 350 Volume" := "Class 350 Volume" + Volume;
        LTLFreightType."Standard Freight Type"::"400":
          "Class 400 Volume" := "Class 400 Volume" + Volume;
        LTLFreightType."Standard Freight Type"::"500":
          "Class 500 Volume" := "Class 500 Volume" + Volume;
      END;
    END;

    PROCEDURE AddFreightTypeValue@1(FreightType@1240030000 : Code[10];Value@1240030001 : Decimal);
    BEGIN
      IF FreightType <> '' THEN BEGIN
        IF LTLFreightTypeTmp.GET(FreightType) THEN BEGIN
          LTLFreightType := LTLFreightTypeTmp;
        END ELSE BEGIN
          LTLFreightType.GET(FreightType);
          LTLFreightTypeTmp := LTLFreightType;
          LTLFreightTypeTmp.INSERT;
        END;
      END ELSE
        CLEAR(LTLFreightType);

      CASE LTLFreightType."Standard Freight Type" OF
        LTLFreightType."Standard Freight Type"::" ":
          "Default Freight Type Value" := "Default Freight Type Value" + Value;
        LTLFreightType."Standard Freight Type"::"50":
          "Class 50 Value" := "Class 50 Value" + Value;
        LTLFreightType."Standard Freight Type"::"55":
          "Class 55 Value" := "Class 55 Value" + Value;
        LTLFreightType."Standard Freight Type"::"60":
          "Class 60 Value" := "Class 60 Value" + Value;
        LTLFreightType."Standard Freight Type"::"65":
          "Class 65 Value" := "Class 65 Value" + Value;
        LTLFreightType."Standard Freight Type"::"70":
          "Class 70 Value" := "Class 70 Value" + Value;
        LTLFreightType."Standard Freight Type"::"77.5":
          "Class 77.5 Value" := "Class 77.5 Value" + Value;
        LTLFreightType."Standard Freight Type"::"85":
          "Class 85 Value" := "Class 85 Value" + Value;
        LTLFreightType."Standard Freight Type"::"92.5":
          "Class 92.5 Value" := "Class 92.5 Value" + Value;
        LTLFreightType."Standard Freight Type"::"100":
          "Class 100 Value" := "Class 100 Value" + Value;
        LTLFreightType."Standard Freight Type"::"110":
          "Class 110 Value" := "Class 110 Value" + Value;
        LTLFreightType."Standard Freight Type"::"125":
          "Class 125 Value" := "Class 125 Value" + Value;
        LTLFreightType."Standard Freight Type"::"150":
          "Class 150 Value" := "Class 150 Value" + Value;
        LTLFreightType."Standard Freight Type"::"175":
          "Class 175 Value" := "Class 175 Value" + Value;
        LTLFreightType."Standard Freight Type"::"200":
          "Class 200 Value" := "Class 200 Value" + Value;
        LTLFreightType."Standard Freight Type"::"250":
          "Class 250 Value" := "Class 250 Value" + Value;
        LTLFreightType."Standard Freight Type"::"300":
          "Class 300 Value" := "Class 300 Value" + Value;
        LTLFreightType."Standard Freight Type"::"350":
          "Class 350 Value" := "Class 350 Value" + Value;
        LTLFreightType."Standard Freight Type"::"400":
          "Class 400 Value" := "Class 400 Value" + Value;
        LTLFreightType."Standard Freight Type"::"500":
          "Class 500 Value" := "Class 500 Value" + Value;
      END;
    END;

    PROCEDURE UpdateFromPackage@10(CurrentPackage@1240030000 : Record 14000701;ShippingSetup@1240030001 : Record 14000707);
    VAR
      PackageLine@1240030002 : Record 14000702;
      WeightFactor@1240030003 : Decimal;
    BEGIN
      PackageLine.RESET;
      PackageLine.SETRANGE("Package No.",CurrentPackage."No.");

      IF CurrentPackage."Calculation Weight" <> 0 THEN BEGIN
        CASE ShippingSetup."Actual Weight as" OF
          ShippingSetup."Actual Weight as"::"Net Weight":
            BEGIN
              PackageLine.CALCSUMS("Net Weight");
              IF (PackageLine."Net Weight" <> CurrentPackage."Calculation Weight") AND
                 (PackageLine."Net Weight" <>0)
              THEN
                WeightFactor := CurrentPackage."Calculation Weight" / PackageLine."Net Weight"
              ELSE
                WeightFactor := 1;
            END;
          ShippingSetup."Actual Weight as"::"Gross Weight":
            BEGIN
              PackageLine.CALCSUMS("Gross Weight");
              IF (PackageLine."Gross Weight" <> CurrentPackage."Calculation Weight") AND
                 (PackageLine."Gross Weight" <>0)
              THEN
                WeightFactor := PackageLine."Gross Weight" / CurrentPackage."Calculation Weight"
              ELSE
                WeightFactor := 1;
            END;
          ShippingSetup."Actual Weight as"::"Dimmed Weight":
            BEGIN
              PackageLine.CALCSUMS("Dim. Weight");
              IF (PackageLine."Dim. Weight" <> CurrentPackage."Calculation Weight") AND
                 (PackageLine."Dim. Weight" <> 0)
              THEN
                WeightFactor := PackageLine."Dim. Weight" / CurrentPackage."Calculation Weight"
              ELSE
                WeightFactor := 1;
            END;
        END;
      END ELSE
        WeightFactor := 1;

      ClearFreightType;
      IF PackageLine.FIND('-') THEN
        REPEAT
          CASE ShippingSetup."Actual Weight as" OF
            ShippingSetup."Actual Weight as"::"Net Weight":
              AddFreightTypeWeight(
                PackageLine."LTL Freight Type",
                ROUND(WeightFactor * PackageLine."Net Weight",0.00001));
            ShippingSetup."Actual Weight as"::"Gross Weight":
              AddFreightTypeWeight(
                PackageLine."LTL Freight Type",
                ROUND(WeightFactor * PackageLine."Gross Weight",0.00001));
            ShippingSetup."Actual Weight as"::"Dimmed Weight":
              AddFreightTypeWeight(
                PackageLine."LTL Freight Type",
                ROUND(WeightFactor * PackageLine."Dim. Weight",0.00001));
          END;

          AddFreightTypeVolume(PackageLine."LTL Freight Type",PackageLine.Volume);

          CASE ShippingSetup."Declare Value As" OF
            ShippingSetup."Declare Value As"::Cost:
              AddFreightTypeValue(PackageLine."LTL Freight Type",PackageLine."Value (Cost)");
            ShippingSetup."Declare Value As"::Price:
              AddFreightTypeValue(PackageLine."LTL Freight Type",PackageLine."Value (Price)");
          END;
        UNTIL PackageLine.NEXT = 0;

      IF CurrentPackage."LTL Freight Type" <> '' THEN BEGIN
        AddFreightTypeWeight(CurrentPackage."LTL Freight Type","Default Freight Type Weight");
        "Default Freight Type Weight" := 0;
        AddFreightTypeVolume(CurrentPackage."LTL Freight Type","Default Freight Type Volume");
        "Default Freight Type Volume" := 0;
        AddFreightTypeValue(CurrentPackage."LTL Freight Type","Default Freight Type Value");
        "Default Freight Type Value" := 0;
      END;
    END;

    PROCEDURE TotalFreightTypeWeight@11() : Decimal;
    BEGIN
      EXIT(
        "Default Freight Type Weight" +
        "Class 50 Weight" + "Class 55 Weight" + "Class 60 Weight" + "Class 65 Weight" +
        "Class 70 Weight" + "Class 77.5 Weight" + "Class 85 Weight" + "Class 92.5 Weight" +
        "Class 100 Weight" + "Class 110 Weight" + "Class 125 Weight" + "Class 150 Weight" +
        "Class 175 Weight" + "Class 200 Weight" + "Class 250 Weight" + "Class 300 Weight" +
        "Class 350 Weight" + "Class 400 Weight" + "Class 500 Weight");
    END;

    PROCEDURE TotalFreightTypeVolume@7() : Decimal;
    BEGIN
      EXIT(
        "Default Freight Type Volume" +
        "Class 50 Volume" + "Class 55 Volume" + "Class 60 Volume" + "Class 65 Volume" +
        "Class 70 Volume" + "Class 77.5 Volume" + "Class 85 Volume" + "Class 92.5 Volume" +
        "Class 100 Volume" + "Class 110 Volume" + "Class 125 Volume" + "Class 150 Volume" +
        "Class 175 Volume" + "Class 200 Volume" + "Class 250 Volume" + "Class 300 Volume" +
        "Class 350 Volume" + "Class 400 Volume" + "Class 500 Volume");
    END;

    PROCEDURE TotalFreightTypeValue@6() : Decimal;
    BEGIN
      EXIT(
        "Default Freight Type Value" +
        "Class 50 Value" + "Class 55 Value" + "Class 60 Value" + "Class 65 Value" +
        "Class 70 Value" + "Class 77.5 Value" + "Class 85 Value" + "Class 92.5 Value" +
        "Class 100 Value" + "Class 110 Value" + "Class 125 Value" + "Class 150 Value" +
        "Class 175 Value" + "Class 200 Value" + "Class 250 Value" + "Class 300 Value" +
        "Class 350 Value" + "Class 400 Value" + "Class 500 Value");
    END;

    PROCEDURE AdjustTotalFreightType@13(NewTotalWeight@1240030000 : Decimal;NewTotalVolume@1240030001 : Decimal;NewTotalValue@1240030002 : Decimal) : Boolean;
    VAR
      OldTotalWeight@1240030003 : Decimal;
      OldTotalVolume@1240030004 : Decimal;
      OldTotalValue@1240030005 : Decimal;
      AdjustedOldTotal@1240030006 : Decimal;
      AdjustedNewTotal@1240030007 : Decimal;
      CorrectionFactor@1240030008 : Decimal;
      i@1240030009 : Integer;
    BEGIN
      IF NewTotalWeight = 0 THEN
        EXIT(FALSE);

      OldTotalWeight := TotalFreightTypeWeight;
      OldTotalVolume := TotalFreightTypeVolume;
      OldTotalValue := TotalFreightTypeValue;
      IF (NewTotalWeight = OldTotalWeight) AND
         (NewTotalVolume = OldTotalVolume) AND
         (NewTotalValue = OldTotalValue)
      THEN
        EXIT(FALSE);

      IF NewTotalWeight <> OldTotalWeight THEN BEGIN
        IF OldTotalWeight = 0 THEN BEGIN
          "Default Freight Type Weight" := NewTotalWeight;
        END ELSE BEGIN
          CorrectionFactor := NewTotalWeight / OldTotalWeight;
          AdjustedOldTotal := 0;
          AdjustedNewTotal := 0;
          FOR i := 1 TO 20 DO
            CASE i OF
              1:
                AdjustWeight(
                  "Default Freight Type Weight",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalWeight,NewTotalWeight,CorrectionFactor);
              2:
                AdjustWeight(
                  "Class 50 Weight",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalWeight,NewTotalWeight,CorrectionFactor);
              3:
                AdjustWeight(
                  "Class 55 Weight",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalWeight,NewTotalWeight,CorrectionFactor);
              4:
                AdjustWeight(
                  "Class 60 Weight",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalWeight,NewTotalWeight,CorrectionFactor);
              5:
                AdjustWeight(
                  "Class 65 Weight",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalWeight,NewTotalWeight,CorrectionFactor);
              6:
                AdjustWeight(
                  "Class 70 Weight",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalWeight,NewTotalWeight,CorrectionFactor);
              7:
                AdjustWeight(
                  "Class 77.5 Weight",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalWeight,NewTotalWeight,CorrectionFactor);
              8:
                AdjustWeight(
                  "Class 85 Weight",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalWeight,NewTotalWeight,CorrectionFactor);
              9:
                AdjustWeight(
                  "Class 92.5 Weight",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalWeight,NewTotalWeight,CorrectionFactor);
              10:
                AdjustWeight(
                  "Class 100 Weight",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalWeight,NewTotalWeight,CorrectionFactor);
              11:
                AdjustWeight(
                  "Class 110 Weight",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalWeight,NewTotalWeight,CorrectionFactor);
              12:
                AdjustWeight(
                  "Class 125 Weight",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalWeight,NewTotalWeight,CorrectionFactor);
              13:
                AdjustWeight(
                  "Class 150 Weight",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalWeight,NewTotalWeight,CorrectionFactor);
              14:
                AdjustWeight(
                  "Class 175 Weight",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalWeight,NewTotalWeight,CorrectionFactor);
              15:
                AdjustWeight(
                  "Class 200 Weight",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalWeight,NewTotalWeight,CorrectionFactor);
              16:
                AdjustWeight(
                  "Class 250 Weight",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalWeight,NewTotalWeight,CorrectionFactor);
              17:
                AdjustWeight(
                  "Class 300 Weight",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalWeight,NewTotalWeight,CorrectionFactor);
              18:
                AdjustWeight(
                  "Class 350 Weight",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalWeight,NewTotalWeight,CorrectionFactor);
              19:
                AdjustWeight(
                  "Class 400 Weight",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalWeight,NewTotalWeight,CorrectionFactor);
              20:
                AdjustWeight(
                  "Class 500 Weight",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalWeight,NewTotalWeight,CorrectionFactor);
            END;

          IF (AdjustedOldTotal <> OldTotalWeight) OR
             (AdjustedNewTotal <> NewTotalWeight)
          THEN
            ERROR(Text001);
        END;
      END;

      IF NewTotalVolume <> OldTotalVolume THEN BEGIN
        IF OldTotalVolume = 0 THEN BEGIN
          "Default Freight Type Volume" := NewTotalVolume;
        END ELSE BEGIN
          CorrectionFactor := NewTotalVolume / OldTotalVolume;
          AdjustedOldTotal := 0;
          AdjustedNewTotal := 0;
          FOR i := 1 TO 20 DO
            CASE i OF
              1:
                AdjustVolume(
                  "Default Freight Type Volume",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalVolume,NewTotalVolume,CorrectionFactor);
              2:
                AdjustVolume(
                  "Class 50 Volume",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalVolume,NewTotalVolume,CorrectionFactor);
              3:
                AdjustVolume(
                  "Class 55 Volume",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalVolume,NewTotalVolume,CorrectionFactor);
              4:
                AdjustVolume(
                  "Class 60 Volume",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalVolume,NewTotalVolume,CorrectionFactor);
              5:
                AdjustVolume(
                  "Class 65 Volume",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalVolume,NewTotalVolume,CorrectionFactor);
              6:
                AdjustVolume(
                  "Class 70 Volume",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalVolume,NewTotalVolume,CorrectionFactor);
              7:
                AdjustVolume(
                  "Class 77.5 Volume",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalVolume,NewTotalVolume,CorrectionFactor);
              8:
                AdjustVolume(
                  "Class 85 Volume",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalVolume,NewTotalVolume,CorrectionFactor);
              9:
                AdjustVolume(
                  "Class 92.5 Volume",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalVolume,NewTotalVolume,CorrectionFactor);
              10:
                AdjustVolume(
                  "Class 100 Volume",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalVolume,NewTotalVolume,CorrectionFactor);
              11:
                AdjustVolume(
                  "Class 110 Volume",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalVolume,NewTotalVolume,CorrectionFactor);
              12:
                AdjustVolume(
                  "Class 125 Volume",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalVolume,NewTotalVolume,CorrectionFactor);
              13:
                AdjustVolume(
                  "Class 150 Volume",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalVolume,NewTotalVolume,CorrectionFactor);
              14:
                AdjustVolume(
                  "Class 175 Volume",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalVolume,NewTotalVolume,CorrectionFactor);
              15:
                AdjustVolume(
                  "Class 200 Volume",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalVolume,NewTotalVolume,CorrectionFactor);
              16:
                AdjustVolume(
                  "Class 250 Volume",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalVolume,NewTotalVolume,CorrectionFactor);
              17:
                AdjustVolume(
                  "Class 300 Volume",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalVolume,NewTotalVolume,CorrectionFactor);
              18:
                AdjustVolume(
                  "Class 350 Volume",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalVolume,NewTotalVolume,CorrectionFactor);
              19:
                AdjustVolume(
                  "Class 400 Volume",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalVolume,NewTotalVolume,CorrectionFactor);
              20:
                AdjustVolume(
                  "Class 500 Volume",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalVolume,NewTotalVolume,CorrectionFactor);
            END;

          IF (AdjustedOldTotal <> OldTotalVolume) OR
             (AdjustedNewTotal <> NewTotalVolume)
          THEN
            ERROR(Text001);
        END;
      END;

      IF NewTotalValue <> OldTotalValue THEN BEGIN
        IF OldTotalValue = 0 THEN BEGIN
          "Default Freight Type Value" := NewTotalValue;
        END ELSE BEGIN
          CorrectionFactor := NewTotalValue / OldTotalValue;
          AdjustedOldTotal := 0;
          AdjustedNewTotal := 0;
          FOR i := 1 TO 20 DO
            CASE i OF
              1:
                AdjustValue(
                  "Default Freight Type Value",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalValue,NewTotalValue,CorrectionFactor);
              2:
                AdjustValue(
                  "Class 50 Value",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalValue,NewTotalValue,CorrectionFactor);
              3:
                AdjustValue(
                  "Class 55 Value",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalValue,NewTotalValue,CorrectionFactor);
              4:
                AdjustValue(
                  "Class 60 Value",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalValue,NewTotalValue,CorrectionFactor);
              5:
                AdjustValue(
                  "Class 65 Value",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalValue,NewTotalValue,CorrectionFactor);
              6:
                AdjustValue(
                  "Class 70 Value",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalValue,NewTotalValue,CorrectionFactor);
              7:
                AdjustValue(
                  "Class 77.5 Value",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalValue,NewTotalValue,CorrectionFactor);
              8:
                AdjustValue(
                  "Class 85 Value",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalValue,NewTotalValue,CorrectionFactor);
              9:
                AdjustValue(
                  "Class 92.5 Value",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalValue,NewTotalValue,CorrectionFactor);
              10:
                AdjustValue(
                  "Class 100 Value",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalValue,NewTotalValue,CorrectionFactor);
              11:
                AdjustValue(
                  "Class 110 Value",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalValue,NewTotalValue,CorrectionFactor);
              12:
                AdjustValue(
                  "Class 125 Value",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalValue,NewTotalValue,CorrectionFactor);
              13:
                AdjustValue(
                  "Class 150 Value",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalValue,NewTotalValue,CorrectionFactor);
              14:
                AdjustValue(
                  "Class 175 Value",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalValue,NewTotalValue,CorrectionFactor);
              15:
                AdjustValue(
                  "Class 200 Value",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalValue,NewTotalValue,CorrectionFactor);
              16:
                AdjustValue(
                  "Class 250 Value",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalValue,NewTotalValue,CorrectionFactor);
              17:
                AdjustValue(
                  "Class 300 Value",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalValue,NewTotalValue,CorrectionFactor);
              18:
                AdjustValue(
                  "Class 350 Value",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalValue,NewTotalValue,CorrectionFactor);
              19:
                AdjustValue(
                  "Class 400 Value",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalValue,NewTotalValue,CorrectionFactor);
              20:
                AdjustValue(
                  "Class 500 Value",AdjustedOldTotal,AdjustedNewTotal,
                  OldTotalValue,NewTotalValue,CorrectionFactor);
            END;

          IF (AdjustedOldTotal <> OldTotalValue) OR
             (AdjustedNewTotal <> NewTotalValue)
          THEN
            ERROR(Text001);
        END;
      END;

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE AdjustWeight@14(VAR Weight@1240030000 : Decimal;VAR AdjustedOldTotal@1240030001 : Decimal;VAR AdjustedNewTotal@1240030002 : Decimal;OldTotal@1240030003 : Decimal;NewTotal@1240030004 : Decimal;CorrectionFactor@1240030005 : Decimal);
    BEGIN
      AdjustedOldTotal := AdjustedOldTotal + Weight;

      IF AdjustedOldTotal = OldTotal THEN
        Weight := NewTotal - AdjustedNewTotal
      ELSE
        Weight := ROUND(CorrectionFactor * Weight,0.00001);

      AdjustedNewTotal := AdjustedNewTotal + Weight;
    END;

    LOCAL PROCEDURE AdjustVolume@5(VAR Volume@1240030000 : Decimal;VAR AdjustedOldTotal@1240030001 : Decimal;VAR AdjustedNewTotal@1240030002 : Decimal;OldTotal@1240030003 : Decimal;NewTotal@1240030004 : Decimal;CorrectionFactor@1240030005 : Decimal);
    BEGIN
      AdjustedOldTotal := AdjustedOldTotal + Volume;

      IF AdjustedOldTotal = OldTotal THEN
        Volume := NewTotal - AdjustedNewTotal
      ELSE
        Volume := ROUND(CorrectionFactor * Volume,0.00001);

      AdjustedNewTotal := AdjustedNewTotal + Volume;
    END;

    LOCAL PROCEDURE AdjustValue@4(VAR Value@1240030000 : Decimal;VAR AdjustedOldTotal@1240030001 : Decimal;VAR AdjustedNewTotal@1240030002 : Decimal;OldTotal@1240030003 : Decimal;NewTotal@1240030004 : Decimal;CorrectionFactor@1240030005 : Decimal);
    BEGIN
      AdjustedOldTotal := AdjustedOldTotal + Value;

      IF AdjustedOldTotal = OldTotal THEN
        Value := NewTotal - AdjustedNewTotal
      ELSE
        Value := ROUND(CorrectionFactor * Value);

      AdjustedNewTotal := AdjustedNewTotal + Value;
    END;

    BEGIN
    END.
  }
}

