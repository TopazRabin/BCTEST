OBJECT Table 23044304 IWX Inventory Count Header
{
  OBJECT-PROPERTIES
  {
    Date=01/03/20;
    Time=[ 3:01:32 PM];
    Version List=IWX2.4.7684.0;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 recInvCountSetup.GET;
                 recInvCountSetup.TESTFIELD("Inventory Count Nos.");
                 cuNoSeriesMgt.InitSeries(recInvCountSetup."Inventory Count Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               "Created On" := TODAY;
               "Created By" := USERID;

               IF "Inventory As of Date"=0D THEN BEGIN  // new record - not from "duplicate"
                 "Post Zero Differences" := TRUE;
                 "Update Next Count Period" := TRUE;
               END;//if

               "Inventory As of Date" := WORKDATE;
             END;

    OnDelete=VAR
               lrecCountSheetConfig@1000000000 : Record 23044300;
             BEGIN

               lrecCountSheetConfig.SETRANGE("Count No.","No.");
               lrecCountSheetConfig.DELETEALL(TRUE);
             END;

    CaptionML=[ENU=Inventory Count Header;
               ESM=R£brica de la cuenta de inventario;
               FRC=En-tˆte de l'inventaire;
               ENC=Inventory Count Header];
    LookupPageID=Page23044306;
    DrillDownPageID=Page23044306;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  recInvCountSetup.GET;
                                                                  cuNoSeriesMgt.TestManual(recInvCountSetup."Inventory Count Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ESM=No.;
                                                              FRC=No.;
                                                              ENC=No.] }
    { 10  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              ESM=Descripci¢n;
                                                              FRC=Description;
                                                              ENC=Description] }
    { 12  ;   ;Created On          ;Date          ;CaptionML=[ENU=Created On;
                                                              ESM=Creado en;
                                                              FRC=Cr‚‚ le;
                                                              ENC=Created On] }
    { 13  ;   ;Created By          ;Code50        ;CaptionML=[ENU=Created By;
                                                              ESM=Creado por;
                                                              FRC=Cr‚‚ par;
                                                              ENC=Created By] }
    { 15  ;   ;Active              ;Boolean       ;OnValidate=VAR
                                                                lrecCountHeader@1000000000 : Record 23044304;
                                                                ltcOnlyOneActive@1000000001 : TextConst 'ENU=Count No.: %1 is already active for location: %2.;FRC=No. d‚compte: %1 est d‚j… actif pour l''emplacement: %2.';
                                                              BEGIN
                                                                // there can only be one active count card per location
                                                                IF( Active ) THEN BEGIN
                                                                  lrecCountHeader.SETRANGE("Location Code","Location Code");
                                                                  lrecCountHeader.SETRANGE(Active,TRUE);
                                                                  lrecCountHeader.SETFILTER("No.",'<>%1',"No.");

                                                                  IF( lrecCountHeader.FINDFIRST ) THEN BEGIN
                                                                    ERROR(ltcOnlyOneActive,lrecCountHeader."No.","Location Code");
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Active;
                                                              ESM=Activo;
                                                              FRC=Actif;
                                                              ENC=Active] }
    { 17  ;   ;Location Code       ;Code20        ;TableRelation=Location;
                                                   OnValidate=VAR
                                                                lrecCountCfg@1000000000 : Record 23044300;
                                                                ltcUpdateLines@1000000001 : TextConst 'ENC=Update the configuration lines with the new location code?';
                                                              BEGIN
                                                                // Updates lines when header changed
                                                                IF "Location Code"<>xRec."Location Code" THEN BEGIN
                                                                  VALIDATE(Active);
                                                                  lrecCountCfg.SETRANGE("Count No.", "No.");
                                                                  IF lrecCountCfg.FINDSET(TRUE) THEN BEGIN
                                                                    IF CONFIRM(ltcUpdateLines, TRUE) THEN
                                                                      REPEAT
                                                                        lrecCountCfg.VALIDATE("Location Code", "Location Code");
                                                                        lrecCountCfg.MODIFY;
                                                                      UNTIL lrecCountCfg.NEXT = 0;
                                                                  END;//if
                                                                END;//if
                                                              END;

                                                   CaptionML=[ENU=Location Code;
                                                              ESM=C¢d. almac‚n;
                                                              FRC=Code d'emplacement;
                                                              ENC=Location Code] }
    { 20  ;   ;Inventory As of Date;Date          ;CaptionML=[ENU=Inventory As of Date;
                                                              ESM=Inventario En la Fecha;
                                                              FRC=Inventaire En Date;
                                                              ENC=Inventory As of Date] }
    { 22  ;   ;Post Zero Differences;Boolean      ;CaptionML=[ENU=Post Zero Differences;
                                                              ESM=Las diferencias de post Cero;
                                                              FRC=Publier z‚ro Diff‚rences;
                                                              ENC=Post Zero Differences] }
    { 24  ;   ;Update Next Count Period;Boolean   ;CaptionML=[ENU=Update Next Count Period;
                                                              ESM=Actualizaci¢n pr¢ximo per¡odo Conde;
                                                              FRC=Mettre … jour P‚riode de comptage suivante;
                                                              ENC=Update Next Count Period] }
    { 26  ;   ;Post Reason Codes   ;Boolean       ;CaptionML=[ENU=Post Reason Codes;
                                                              ESM=C¢digos de motivo de correos;
                                                              FRC=Codes de motif de poste;
                                                              ENC=Post Reason Codes] }
    { 28  ;   ;Count Sheets        ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("IWX Count Sheet Configuration" WHERE (Count No.=FIELD(No.)));
                                                   CaptionML=[ENU=Count Sheets;
                                                              ESM=hojas de recuento;
                                                              FRC=Feuilles de comptage;
                                                              ENC=Count Sheets];
                                                   Description=# of count sheets in count;
                                                   Editable=No }
    { 29  ;   ;Count Sheet Lines   ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("IWX Count Sheet Line" WHERE (Sheet Name=FIELD(Count Sheet Filter),
                                                                                                   Count No.=FIELD(No.)));
                                                   CaptionML=[ENU=Count Sheet Lines;
                                                              ESM=L¡neas de contar;
                                                              FRC=Nombre de lignes de feuille;
                                                              ENC=Count Sheet Lines];
                                                   Description=# of count sheet lines in count;
                                                   Editable=No }
    { 30  ;   ;Count Sheet Filter  ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation="IWX Count Sheet Configuration"."Sheet Name" WHERE (Count No.=FIELD(No.));
                                                   CaptionML=[ENU=Count Sheet Filter;
                                                              ESM=Filtro de hoja de conteo;
                                                              FRC=Filtre de la feuille de comptage;
                                                              ENC=Count Sheet Filter] }
    { 32  ;   ;Counted Lines       ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("IWX Count Sheet Line" WHERE (Count No.=FIELD(No.),
                                                                                                   Sheet Name=FIELD(Count Sheet Filter),
                                                                                                   Counted=CONST(Yes)));
                                                   CaptionML=[ENU=Counted Lines;
                                                              ESM=L¡neas contados;
                                                              FRC=Lignes compt‚es;
                                                              ENC=Counted Lines];
                                                   Editable=No }
    { 34  ;   ;Uncounted Lines     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("IWX Count Sheet Line" WHERE (Count No.=FIELD(No.),
                                                                                                   Sheet Name=FIELD(Count Sheet Filter),
                                                                                                   Counted=CONST(No)));
                                                   CaptionML=[ENU=Uncounted Lines;
                                                              ESM=L¡neas incontables;
                                                              FRC=Lignes non Comptabilis‚s;
                                                              ENC=Uncounted Lines];
                                                   Editable=No }
    { 40  ;   ;Last Count Sheet Generation;DateTime;
                                                   CaptionML=[ENU=Last Count Sheet Generation;
                                                              ESM=Generaci¢n de la hoja de la cuenta pasada;
                                                              FRC=G‚n‚ration de la derniŠre feuille de comptage;
                                                              ENC=Last Count Sheet Generation] }
    { 41  ;   ;Generated By        ;Code50        ;CaptionML=[ENU=Generated By;
                                                              ESM=Generado por;
                                                              FRC=G‚n‚r‚e par;
                                                              ENC=Generated By] }
    { 42  ;   ;Last Reconcilliation Report;DateTime;
                                                   CaptionML=[ENU=Last Reconcilliation Report;
                                                              ESM=ðltimo informe de conciliaci¢n;
                                                              FRC=Dernier rapport de r‚conciliation;
                                                              ENC=Last Reconcilliation Report] }
    { 43  ;   ;Reported By         ;Code50        ;CaptionML=[ENU=Reported By;
                                                              ESM=Reportado por;
                                                              FRC=Rapport‚ par;
                                                              ENC=Reported By] }
    { 44  ;   ;Last Difference Amt.;Decimal       ;CaptionML=[ENU=Last Difference Amt.;
                                                              ESM=ðltima Diferencia Amt.;
                                                              FRC=DerniŠre diff‚rence Amt.;
                                                              ENC=Last Difference Amt.] }
    { 46  ;   ;Last Difference Qty.;Decimal       ;CaptionML=[ENU=Last Difference Qty.;
                                                              ESM=ðltima Diferencia Cant.;
                                                              FRC=DerniŠre diff‚rence Qt‚.;
                                                              ENC=Last Difference Qty.] }
    { 48  ;   ;Last Abs. Difference Amt.;Decimal  ;CaptionML=[ENU=Last Abs. Difference Amt.;
                                                              ESM=ðltima Abs. Diferencia Amt.;
                                                              FRC=DerniŠre Abs. Diff‚rence Amt.;
                                                              ENC=Last Abs. Difference Amt.] }
    { 49  ;   ;Last Abs. Difference Qty.;Decimal  ;CaptionML=[ENU=Last Abs. Difference Qty.;
                                                              ESM=ðltima Abs. Diferencia Cant.;
                                                              FRC=DerniŠre Abs. Diff‚rence Qt‚.;
                                                              ENC=Last Abs. Difference Qty.] }
    { 50  ;   ;Last Difference Pct.;Decimal       ;CaptionML=[ENU=Last Difference Pct.;
                                                              ESM=ðltima Diferencia Pct.;
                                                              FRC=DerniŠre diff‚rence Pct.;
                                                              ENC=Last Difference Pct.];
                                                   DecimalPlaces=2:2 }
    { 60  ;   ;Last Copy to Journals;DateTime     ;CaptionML=[ENU=Last Copy to Journals;
                                                              ESM=ðltima copia a revistas;
                                                              FRC=DerniŠre Copie aux Journaux;
                                                              ENC=Last Copy to Journals] }
    { 61  ;   ;Copied By           ;Code50        ;CaptionML=[ENU=Copied By;
                                                              ESM=Copiado Por;
                                                              FRC=Copi‚ par;
                                                              ENC=Copied By] }
    { 62  ;   ;Copied Difference Amt.;Decimal     ;CaptionML=[ENU=Copied Difference Amt.;
                                                              ESM=Diferencia copiado Amt.;
                                                              FRC=Diff‚rence Copi‚ Amt.;
                                                              ENC=Copied Difference Amt.] }
    { 64  ;   ;Copied Difference Qty.;Decimal     ;CaptionML=[ENU=Copied Difference Qty.;
                                                              ESM=Diferencia copiado Cant.;
                                                              FRC=Diff‚rence Copi‚ Qt‚.;
                                                              ENC=Copied Difference Qty.] }
    { 66  ;   ;Copied Difference Pct.;Decimal     ;CaptionML=[ENU=Copied Difference Pct.;
                                                              ESM=Diferencia copiado Pct.;
                                                              FRC=Diff‚rence Copi‚e Pct.;
                                                              ENC=Copied Difference Pct.];
                                                   DecimalPlaces=2:2 }
    { 70  ;   ;Consumption Journal Batch;Code10   ;OnLookup=BEGIN
                                                              lookupJournalBatch(PAGE::"Consumption Journal", 4, "Consumption Journal Batch");
                                                            END;

                                                   CaptionML=[ENU=Consumption Journal Batch;
                                                              ESM=Consumo Diario de lotes;
                                                              FRC=Lot de Journal de Consommation;
                                                              ENC=Consumption Journal Batch] }
    { 71  ;   ;Phys. Inv. Journal Batch;Code10    ;OnLookup=BEGIN
                                                              lookupJournalBatch(PAGE::"Phys. Inventory Journal",2, "Phys. Inv. Journal Batch");
                                                            END;

                                                   CaptionML=[ENU=Phys. Inv. Journal Batch;
                                                              ESM=Phys. Inv. Diario de lotes;
                                                              FRC=Lot de Journal d'Inv. Phys.;
                                                              ENC=Phys. Inv. Journal Batch] }
    { 72  ;   ;Whse. Phys. Inv. Jnl. Batch;Code10 ;OnLookup=VAR
                                                              lrecWhseJnl@1000000000 : Record 7311;
                                                              ltcErrNoJournal@1000000001 : TextConst 'ENC=No journal found.';
                                                              lbJnlSelected@1000000004 : Boolean;
                                                              lcodLocation@1000000003 : Code[20];
                                                              lcodTempBatch@1000000002 : Code[20];
                                                            BEGIN
                                                              lcodLocation := "Location Code";
                                                              lrecWhseJnl.TemplateSelection(PAGE::"Whse. Phys. Invt. Journal",1, lrecWhseJnl, lbJnlSelected);


                                                              IF NOT lbJnlSelected THEN
                                                                ERROR('');

                                                              lcodTempBatch := "Whse. Phys. Inv. Jnl. Batch";
                                                              IF lcodTempBatch='' THEN
                                                                lcodTempBatch := 'DEFAULT';

                                                              lrecWhseJnl.OpenJnl(lcodTempBatch, lcodLocation, lrecWhseJnl);
                                                              lrecWhseJnl.LookupName("Whse. Phys. Inv. Jnl. Batch", lcodLocation, lrecWhseJnl);
                                                            END;

                                                   CaptionML=[ENU=Whse. Phys. Inv. Jnl. Batch;
                                                              ESM=Dep¢sito Phys. Inv. Diario de lotes;
                                                              FRC=Entrep“t de Lot de Journal d'Inv. Phys.;
                                                              ENC=Whse. Phys. Inv. Jnl. Batch] }
    { 73  ;   ;Reclass. Journal Batch;Code10      ;OnLookup=BEGIN
                                                              lookupJournalBatch(PAGE::"Item Reclass. Journal",1, "Reclass. Journal Batch");
                                                            END;

                                                   CaptionML=[ENU=Reclass. Journal Batch;
                                                              ESM=Reclasif. Diario de lotes;
                                                              FRC=Reclass. Journal lot;
                                                              ENC=Reclass. Journal Batch] }
    { 74  ;   ;Set Item Tracking Lines;Boolean    ;CaptionML=[ENU=Set Item Tracking Lines;
                                                              ESM=Establecer l¡neas de seguimiento de productos;
                                                              FRC=d‚finir les lignes de suivi de l'Article;
                                                              ENC=Set Item Tracking Lines] }
    { 75  ;   ;Use Batch Document Nos.;Boolean    ;CaptionML=[ENU=Use Batch Document Nos.;
                                                              ESM=Uso de lotes de documentos Nos.;
                                                              FRC=Utiliser de No. du Document du Lot;
                                                              ENC=Use Batch Document Nos.] }
    { 76  ;   ;Dimension Set ID    ;Integer       ;CaptionML=[ENU=Dimension Set ID;
                                                              ESM=Identificaci¢n conjunto dimensi¢n;
                                                              FRC=ID du Jeu de Dimension;
                                                              ENC=Dimension Set ID] }
    { 77  ;   ;Use Default Dimensions;Boolean     ;InitValue=Yes;
                                                   CaptionML=[ENU=Use Default Dimensions;
                                                              ESM=Utilice dimensiones predeterminadas;
                                                              FRC=Utiliser Dimensions par d‚faut;
                                                              ENC=Use Default Dimensions];
                                                   Description=IW14.10 - if true, jnl dims retained }
    { 100 ;   ;No. Series          ;Code10        ;CaptionML=[ENU=No. Series;
                                                              ESM=Nos. serie;
                                                              FRC=S‚ries de nø;
                                                              ENC=No. Series] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Location Code,Active                     }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      recInvCountSetup@1000000000 : Record 23044305;
      cuNoSeriesMgt@1000000001 : Codeunit 396;
      recInvCountHeader@1000000002 : Record 23044304;
      cuItemJnlMgmt@1000000003 : Codeunit 240;

    PROCEDURE AssistEdit@1000000000(precOldCountHeader@1000000000 : Record 23044304) : Boolean;
    BEGIN
      recInvCountHeader := Rec;
      recInvCountSetup.GET;
      recInvCountSetup.TESTFIELD("Inventory Count Nos.");
      IF cuNoSeriesMgt.SelectSeries(recInvCountSetup."Inventory Count Nos.",precOldCountHeader."No. Series","No. Series") THEN BEGIN
        recInvCountSetup.GET;
        recInvCountSetup.TESTFIELD("Inventory Count Nos.");
        cuNoSeriesMgt.SetSeries("No.");
        Rec := recInvCountHeader;
        EXIT(TRUE);
      END;
    END;

    PROCEDURE duplicateCount@1000000001() pcodOutNewCount : Code[20];
    VAR
      ltcMakeDuplicate@1000000000 : TextConst 'ENC=Create a duplicate of this count configuration?';
      lrecNewCount@1000000001 : Record 23044304;
      lrecOrigConfig@1000000002 : Record 23044300;
      lrecNewConfig@1000000003 : Record 23044300;
      ltcCreated@1000000004 : TextConst 'ENC=Created count %1';
    BEGIN
      // Makes a duplicate of this count

      IF ( GUIALLOWED) THEN BEGIN
        IF NOT CONFIRM(ltcMakeDuplicate) THEN
          EXIT;
      END; // if GUIALLOWED

      lrecNewCount."No." := '';
      lrecNewCount.Description := Description;
      lrecNewCount.Active := FALSE;
      lrecNewCount."Location Code" := "Location Code";
      lrecNewCount."Inventory As of Date" := "Inventory As of Date";
      lrecNewCount."Post Zero Differences" := "Post Zero Differences";
      lrecNewCount."Update Next Count Period" := "Update Next Count Period";
      lrecNewCount."Post Reason Codes" := "Post Reason Codes";
      lrecNewCount."Phys. Inv. Journal Batch" := "Phys. Inv. Journal Batch";
      lrecNewCount."Consumption Journal Batch" := "Consumption Journal Batch";
      lrecNewCount."Whse. Phys. Inv. Jnl. Batch" := "Whse. Phys. Inv. Jnl. Batch";
      lrecNewCount."Reclass. Journal Batch" := "Reclass. Journal Batch";
      lrecNewCount."Set Item Tracking Lines" := "Set Item Tracking Lines";
      lrecNewCount."Use Batch Document Nos." := "Use Batch Document Nos.";
      lrecNewCount."No. Series" := "No. Series";
      lrecNewCount."Dimension Set ID" := "Dimension Set ID";
      lrecNewCount.INSERT(TRUE);

      lrecOrigConfig.SETRANGE("Count No.", "No.");
      IF lrecOrigConfig.FINDSET(FALSE) THEN
        REPEAT
          lrecNewConfig := lrecOrigConfig;
          lrecNewConfig."Count No." := lrecNewCount."No.";
          lrecNewConfig."Posted by Device" := '';
          lrecNewConfig.INSERT;
        UNTIL lrecOrigConfig.NEXT = 0;

      IF ( GUIALLOWED ) THEN BEGIN
        MESSAGE(ltcCreated, lrecNewCount."No.");
      END;

      pcodOutNewCount := lrecNewCount."No.";
    END;

    PROCEDURE lookupJournalBatch@1000000002(pnFormID@1000000000 : Integer;pnTypeID@1000000001 : Integer;VAR pcodBatch@1000000006 : Code[10]);
    VAR
      lrecItemJnl@1000000002 : Record 83;
      lbJnlSelected@1000000004 : Boolean;
      ltcErrNoJournal@1000000005 : TextConst 'ENC=No journal found.';
      lcodTmpBatch@1000000003 : Code[10];
    BEGIN
      // Looks up a batch for the journal identified by the form ID

      cuItemJnlMgmt.TemplateSelection(pnFormID,pnTypeID,FALSE, lrecItemJnl, lbJnlSelected);
      IF NOT lbJnlSelected THEN
        ERROR(ltcErrNoJournal);

      lcodTmpBatch := pcodBatch;
      cuItemJnlMgmt.OpenJnl(lcodTmpBatch, lrecItemJnl);
      cuItemJnlMgmt.LookupName(pcodBatch, lrecItemJnl);
    END;

    BEGIN
    {
      ************************
      Copyright Notice
      This objects content is copyright of Insight Works 2011.  All rights reserved.
      Any redistribution or reproduction of part or all of the contents in any form is prohibited.
      ************************
    }
    END.
  }
}

