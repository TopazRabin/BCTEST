OBJECT Table 14000711 Fast Pack Line
{
  OBJECT-PROPERTIES
  {
    Date=06/28/17;
    Time=12:00:00 PM;
    Version List=SE0.60.06;
  }
  PROPERTIES
  {
    CaptionML=ENU=Fast Pack Line;
    PasteIsValid=No;
    LookupPageID=Page516;
    DrillDownPageID=Page516;
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=" ,Account (G/L),Item,Resource";
                                                   OptionString=[ ,Account (G/L),Item,Resource];
                                                   Editable=No }
    { 2   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(" ")) "Standard Text"
                                                                 ELSE IF (Type=CONST("Account (G/L)")) "G/L Account"
                                                                 ELSE IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(Resource)) Resource;
                                                   CaptionML=ENU=No.;
                                                   Editable=No }
    { 3   ;   ;Variant Code        ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Variant".Code WHERE (Item No.=FIELD(No.));
                                                   CaptionML=ENU=Variant Code;
                                                   Editable=No }
    { 4   ;   ;From Source ID      ;Code20        ;CaptionML=ENU=From Source ID }
    { 11  ;   ;Description         ;Text50        ;CaptionML=ENU=Description;
                                                   Editable=No }
    { 12  ;   ;Quantity            ;Decimal       ;CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 13  ;   ;Qty. to Ship        ;Decimal       ;CaptionML=ENU=Qty. to Ship;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 14  ;   ;Unit of Measure Code;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.))
                                                                 ELSE "Unit of Measure";
                                                   CaptionML=ENU=Unit of Measure Code;
                                                   Editable=No }
    { 15  ;   ;Quantity (Base)     ;Decimal       ;CaptionML=ENU=Quantity (Base);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 16  ;   ;Qty. to Ship (Base) ;Decimal       ;CaptionML=ENU=Qty. to Ship (Base);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 17  ;   ;Qty. per Unit of Measure;Decimal   ;InitValue=1;
                                                   CaptionML=ENU=Qty. per Unit of Measure;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 19  ;   ;Outstanding Quantity;Decimal       ;CaptionML=ENU=Outstanding Quantity;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 20  ;   ;Outstanding Qty. (Base);Decimal    ;CaptionML=ENU=Outstanding Qty. (Base);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 21  ;   ;Qty. to Pack        ;Decimal       ;OnValidate=BEGIN
                                                                IF "Qty. to Pack" < 0 THEN
                                                                  ERROR(Text001,FIELDNAME("Qty. to Pack"));

                                                                "Qty. to Pack (Base)" := "Qty. to Pack" * "Qty. to Pack per Unit of Meas.";

                                                                IF "Remaining Qty. to Pack (Base)" < "Qty. to Pack (Base)" THEN
                                                                  ERROR(Text002);
                                                              END;

                                                   CaptionML=ENU=Qty. to Pack;
                                                   DecimalPlaces=0:5 }
    { 22  ;   ;Qty. to Pack (Base) ;Decimal       ;CaptionML=ENU=Qty. to Pack (Base);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 23  ;   ;Qty. to Pack Unit of Meas Code;Code10;
                                                   TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.))
                                                                 ELSE "Unit of Measure";
                                                   OnValidate=BEGIN
                                                                IF Type = Type::Item THEN BEGIN
                                                                  GetItem("No.");
                                                                  "Qty. to Pack per Unit of Meas." :=
                                                                     UnitOfMeasureMgt.GetQtyPerUnitOfMeasure(Item,"Qty. to Pack Unit of Meas Code");

                                                                  IF "Qty. to Pack per Unit of Meas." = 0 THEN
                                                                    "Qty. to Pack per Unit of Meas." := 1;

                                                                  "Rem. Qty. to Pack (Pack. UOM)" :=
                                                                    ROUND("Remaining Qty. to Pack (Base)" / "Qty. to Pack per Unit of Meas.",0.00001);
                                                                END ELSE BEGIN
                                                                  "Qty. to Pack per Unit of Meas." := 1;
                                                                  "Rem. Qty. to Pack (Pack. UOM)" := "Remaining Qty. to Pack (Base)";
                                                                END;

                                                                VALIDATE("Qty. to Pack");
                                                              END;

                                                   CaptionML=ENU=Qty. to Pack Unit of Meas Code }
    { 24  ;   ;Qty. to Pack per Unit of Meas.;Decimal;
                                                   InitValue=1;
                                                   CaptionML=ENU=Qty. to Pack per Unit of Meas.;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 25  ;   ;Remaining Qty. to Pack;Decimal     ;CaptionML=ENU=Remaining Qty. to Pack;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 26  ;   ;Remaining Qty. to Pack (Base);Decimal;
                                                   CaptionML=ENU=Remaining Qty. to Pack (Base);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 27  ;   ;Qty. Packed         ;Decimal       ;CaptionML=ENU=Qty. Packed;
                                                   DecimalPlaces=0:5 }
    { 28  ;   ;Qty. Packed (Base)  ;Decimal       ;CaptionML=ENU=Qty. Packed (Base);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 29  ;   ;Rem. Qty. to Pack (Pack. UOM);Decimal;
                                                   CaptionML=ENU=Rem. Qty. to Pack (Pack. UOM);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 30  ;   ;Std. Packs per Package;Decimal     ;CaptionML=ENU=Std. Packs per Package;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 31  ;   ;Pack Serial Number  ;Boolean       ;CaptionML=ENU=Pack Serial Number;
                                                   Editable=No }
    { 32  ;   ;Pack Lot Number     ;Boolean       ;CaptionML=ENU=Pack Lot Number }
    { 33  ;   ;Pack Warranty Date  ;Boolean       ;CaptionML=ENU=Pack Warranty Date }
    { 34  ;   ;Pack Expiration Date;Boolean       ;CaptionML=ENU=Pack Expiration Date }
    { 35  ;   ;Source Type         ;Integer       ;CaptionML=ENU=Source Type }
    { 36  ;   ;Source Subtype      ;Option        ;CaptionML=ENU=Source Subtype;
                                                   OptionCaptionML=ENU=0,1,2,3,4,5,6,7,8,9,10;
                                                   OptionString=0,1,2,3,4,5,6,7,8,9,10 }
    { 37  ;   ;Source ID           ;Code20        ;CaptionML=ENU=Source ID }
    { 38  ;   ;Item Cross Reference No.;Code20    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Item Cross Reference"."Cross-Reference No." WHERE (Item No.=FIELD(No.),
                                                                                                                          Variant Code=FIELD(Variant Code),
                                                                                                                          Unit of Measure=FIELD(Unit of Measure Code)));
                                                   CaptionML=ENU=Item Cross Reference No.;
                                                   Editable=No }
    { 41  ;   ;Net Weight          ;Decimal       ;CaptionML=ENU=Net Weight;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 42  ;   ;Gross Weight        ;Decimal       ;CaptionML=ENU=Gross Weight;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 43  ;   ;Dimmed Weight       ;Decimal       ;CaptionML=ENU=Dimmed Weight;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 44  ;   ;Unit Volume         ;Decimal       ;CaptionML=ENU=Unit Volume;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 48  ;   ;Units per Parcel    ;Decimal       ;CaptionML=ENU=Units per Parcel;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 49  ;   ;No. of Labels       ;Integer       ;CaptionML=ENU=No. of Labels }
    { 51  ;   ;Required Shipping Agent Code;Code10;TableRelation="Shipping Agent";
                                                   CaptionML=ENU=Required Shipping Agent Code;
                                                   Editable=No }
    { 52  ;   ;Required E-Ship Agent Service;Code30;
                                                   CaptionML=ENU=Required E-Ship Agent Service;
                                                   Editable=No }
    { 53  ;   ;Allow Other Ship. Agent/Serv.;Boolean;
                                                   CaptionML=ENU=Allow Other Ship. Agent/Serv.;
                                                   Editable=No }
    { 54  ;   ;Value (Cost)        ;Decimal       ;CaptionML=ENU=Value (Cost) }
    { 55  ;   ;Value (Price)       ;Decimal       ;CaptionML=ENU=Value (Price) }
  }
  KEYS
  {
    {    ;Type,No.,Variant Code,From Source ID    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Item@1000000000 : Record 27;
      UnitOfMeasureMgt@1000000001 : Codeunit 5402;
      Text001@1001 : TextConst 'ENU=%1 cannot be less than 0.';
      Text002@1002 : TextConst 'ENU=You cannot receive more than the P.O. quantity.';

    PROCEDURE GetItem@2(ItemNo@1000000000 : Code[20]);
    BEGIN
      IF Item."No." <> ItemNo THEN
        Item.GET(ItemNo);
    END;

    PROCEDURE UpdatePackedQty@1();
    BEGIN
      IF Type = Type::Item THEN BEGIN
        IF "Qty. per Unit of Measure" = 0 THEN
          "Qty. per Unit of Measure" := 1;
        IF "Qty. to Pack per Unit of Meas." = 0 THEN
          "Qty. to Pack per Unit of Meas." := 1;

        "Qty. Packed" := ROUND("Qty. Packed (Base)" / "Qty. to Pack per Unit of Meas.",0.00001);
        "Remaining Qty. to Pack" :=
          ROUND("Remaining Qty. to Pack (Base)" / "Qty. per Unit of Measure",0.00001);
      END ELSE BEGIN
        "Qty. Packed" := "Qty. Packed (Base)";
        "Remaining Qty. to Pack" := "Remaining Qty. to Pack (Base)";
      END;
    END;

    BEGIN
    END.
  }
}

