OBJECT Table 23044621 DSHIP Miscellaneous Shipment
{
  OBJECT-PROPERTIES
  {
    Date=03/26/19;
    Time=[ 2:22:26 PM];
    Version List=DSHIP2.2.2;
  }
  PROPERTIES
  {
    OnInsert=VAR
               lrecDShipConfig@1000000000 : Record 23044600;
               lrecPackOrderBuffer@1000000002 : Record 23044601;
               lrecWhseEmployee@1000000003 : Record 7301;
               lcuNoSeries@1000000001 : Codeunit 396;
             BEGIN
               IF ( "No." = '' ) THEN BEGIN
                 lrecDShipConfig.GET;
                 "No." := lcuNoSeries.GetNextNo(lrecDShipConfig."Miscellaneous Shipment Nos.", TODAY, TRUE);
               END;

               "Created On" := TODAY;
               "Created By" := COPYSTR(USERID, 1, MAXSTRLEN("Created By"));

               lrecWhseEmployee.SETRANGE("User ID", USERID);
               lrecWhseEmployee.SETRANGE(Default, TRUE);
               IF ( lrecWhseEmployee.FINDFIRST ) THEN
                 "Location Code" := lrecWhseEmployee."Location Code";

               cuPackMgmt.createShipOptions(lrecPackOrderBuffer."Document Type"::"Misc. Shipment", Rec."No.");
             END;

    CaptionML=[ENU=Dynamic Ship Miscellaneous Shipment;
               ESM=Env¡o varios Dynamic Ship;
               FRC=Livraison de Divers Dynamic Ship;
               ENC=Dynamic Ship Miscellaneous Shipment];
    LookupPageID=Page23044638;
    DrillDownPageID=Page23044637;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              ESM=N.§;
                                                              FRC=Nø;
                                                              ENC=No.] }
    { 2   ;   ;Description         ;Text250       ;CaptionML=[ENU=Description;
                                                              ESM=Descripci¢n;
                                                              FRC=Description;
                                                              ENC=Description] }
    { 3   ;   ;Ship-To Type        ;Option        ;OnValidate=BEGIN
                                                                IF ( xRec."Ship-To Type" <> Rec."Ship-To Type" ) THEN BEGIN
                                                                  VALIDATE("Ship-To No.", '');
                                                                  Rec."Ship-To Code" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Ship-To Type;
                                                              ESM=Tipo env¡o;
                                                              FRC=Type de Livraison;
                                                              ENC=Ship-To Type];
                                                   OptionCaptionML=[ENU=Choose,Customer,Vendor,Location,Manual Entry,Contact;
                                                                    ESM=Escoger,Cliente,proveedor,almac‚n,movimiento Manual,contacto;
                                                                    FRC=Choisir,Client,Fournisseur,Emplacement,Manuelle,Contact;
                                                                    ENC=Choose,Customer,Vendor,Location,Manual Entry,Contact];
                                                   OptionString=Choose,Customer,Vendor,Location,Manual Entry,Contact }
    { 4   ;   ;Ship-To No.         ;Code20        ;TableRelation=IF (Ship-To Type=CONST(Customer)) Customer.No.
                                                                 ELSE IF (Ship-To Type=CONST(Vendor)) Vendor.No.
                                                                 ELSE IF (Ship-To Type=CONST(Location)) Location.Code
                                                                 ELSE IF (Ship-To Type=CONST(Contact)) Contact.No.;
                                                   OnValidate=BEGIN
                                                                IF ( xRec."Ship-To No." <> Rec."Ship-To No." ) THEN
                                                                  Rec."Ship-To Code" := '';

                                                                updateAddress;
                                                              END;

                                                   CaptionML=[ENU=Ship-To No.;
                                                              ESM=Env¡a a-n§;
                                                              FRC=N ø Livraison;
                                                              ENC=Ship-To No.] }
    { 5   ;   ;Ship-To Code        ;Code20        ;TableRelation=IF (Ship-To Type=CONST(Customer)) "Ship-to Address".Code WHERE (Customer No.=FIELD(Ship-To No.))
                                                                 ELSE IF (Ship-To Type=CONST(Contact)) "Contact Alt. Address".Code WHERE (Contact No.=FIELD(Ship-To No.))
                                                                 ELSE IF (Ship-To Type=CONST(Vendor)) "Order Address".Code WHERE (Vendor No.=FIELD(Ship-To No.));
                                                   OnValidate=BEGIN
                                                                updateAddress;
                                                              END;

                                                   CaptionML=[ENU=Ship-To Code;
                                                              ESM=Env¡o a-C¢digo;
                                                              FRC=Code de livraison;
                                                              ENC=Ship-To Code] }
    { 6   ;   ;Company             ;Text50        ;CaptionML=[ENU=Company;
                                                              ESM=Empresa;
                                                              FRC=Compagnie;
                                                              ENC=Company];
                                                   NotBlank=Yes;
                                                   Description=company }
    { 7   ;   ;Address             ;Text50        ;CaptionML=[ENU=Address;
                                                              ESM=Direcci¢n;
                                                              FRC=Adresse;
                                                              ENC=Address];
                                                   NotBlank=Yes;
                                                   Description=street1 }
    { 8   ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              ESM=Colonia 2;
                                                              FRC=Adresse (2Šme ligne);
                                                              ENC=Address 2];
                                                   Description=street2 }
    { 9   ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                recPostCode.ValidateCity(Rec.City, Rec."Post Code", Rec.County, Rec."Country/Region Code", (CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=City;
                                                              ESM=Municipio/Ciudad;
                                                              FRC=Ville;
                                                              ENC=City];
                                                   NotBlank=Yes;
                                                   Description=city }
    { 10  ;   ;County              ;Text30        ;CaptionML=[ENU=State;
                                                              ESM=Provincia;
                                                              FRC=Comt‚;
                                                              ENC=Province/State];
                                                   NotBlank=Yes;
                                                   Description=state }
    { 11  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   OnValidate=BEGIN
                                                                IF ( (Rec."Country/Region Code" <> xRec."Country/Region Code") AND (xRec."Country/Region Code" <> '') ) THEN BEGIN
                                                                  Rec.City := '';
                                                                  Rec."Post Code" := '';
                                                                  Rec.County := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Country/Region Code;
                                                              ESM=C¢digo de pa¡s/regi¢n;
                                                              FRC=Code pays/r‚gion;
                                                              ENC=Country/Region Code];
                                                   NotBlank=Yes;
                                                   Description=country }
    { 12  ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                recPostCode.ValidatePostCode(Rec.City, Rec."Post Code", Rec.County, Rec."Country/Region Code", (CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Zip Code;
                                                              ESM=C¢digo postal;
                                                              FRC=Code postal;
                                                              ENC=Postal/ZIP Code];
                                                   NotBlank=Yes;
                                                   Description=zip }
    { 13  ;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No.;
                                                              ESM=N.§ tel‚fono;
                                                              FRC=Nø t‚l‚phone;
                                                              ENC=Phone No.];
                                                   NotBlank=Yes;
                                                   Description=phone }
    { 14  ;   ;Shipping Agent Code ;Code20        ;TableRelation="Shipping Agent".Code;
                                                   OnValidate=BEGIN
                                                                IF ( xRec."Shipping Agent Code" <> "Shipping Agent Code" ) THEN
                                                                  VALIDATE("Shipping Agent Service Code", '');
                                                              END;

                                                   CaptionML=[ENU=Shipping Agent Code;
                                                              ESM=C¢d. transportista;
                                                              FRC=Code agent de livraison;
                                                              ENC=Shipping Agent Code] }
    { 15  ;   ;Shipping Agent Service Code;Code20 ;TableRelation="Shipping Agent Services".Code WHERE (Shipping Agent Code=FIELD(Shipping Agent Code));
                                                   CaptionML=[ENU=Shipping Agent Service Code;
                                                              ESM=C¢d. servicio transportista;
                                                              FRC=Code prestation agent de livraison;
                                                              ENC=Shipping Agent Service Code] }
    { 16  ;   ;Package Tracking No.;Text30        ;CaptionML=[ENU=Package Tracking No.;
                                                              ESM=N§ seguimiento bulto;
                                                              FRC=Nø de tra‡abilit‚;
                                                              ENC=Package Tracking No.] }
    { 17  ;   ;Shipped             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("IWX License Plate Header" WHERE (Shipped Source No.=FIELD(No.)));
                                                   CaptionML=[ENU=Shipped;
                                                              ESM=Enviado;
                                                              FRC=Exp‚di‚;
                                                              ENC=Shipped];
                                                   Editable=No }
    { 18  ;   ;Created On          ;Date          ;CaptionML=[ENU=Created On;
                                                              ESM=Creado el;
                                                              FRC=Cr‚‚ le;
                                                              ENC=Created On];
                                                   Editable=No }
    { 19  ;   ;Created By          ;Code80        ;TableRelation=User;
                                                   CaptionML=[ENU=Created By;
                                                              ESM=Creado por;
                                                              FRC=Cr‚‚ par;
                                                              ENC=Created By];
                                                   Editable=No }
    { 20  ;   ;Shipping Cost       ;Decimal       ;CaptionML=[ENU=Shipping Cost;
                                                              ESM=Costo de env¡o;
                                                              FRC=Co–t de livraison;
                                                              ENC=Shipping Cost];
                                                   Editable=No }
    { 21  ;   ;Location Code       ;Code20        ;TableRelation=Location;
                                                   OnValidate=VAR
                                                                lrecLocation@1000000001 : Record 14;
                                                                lcuWMSMgmt@1000000000 : Codeunit 7302;
                                                              BEGIN
                                                                IF ( lrecLocation.RequirePicking(Rec."Location Code") OR
                                                                     lrecLocation.RequirePutaway(Rec."Location Code") OR
                                                                     lrecLocation.RequireReceive(Rec."Location Code") OR
                                                                     lrecLocation.RequireShipment(Rec."Location Code") ) THEN BEGIN
                                                                  IF ( NOT lcuWMSMgmt.LocationIsAllowed("Location Code") ) THEN
                                                                    ERROR('User is not configured as a warehouse employee of %1', "Location Code");
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              lrecWhseEmployee@1000000001 : Record 7301;
                                                              lrecLocation@1000000000 : Record 14;
                                                            BEGIN
                                                              IF ( lrecWhseEmployee.FINDFIRST ) THEN BEGIN
                                                                IF ( PAGE.RUNMODAL(PAGE::"Locations with Warehouse List", lrecLocation) = ACTION::LookupOK ) THEN
                                                                  Rec.VALIDATE("Location Code", lrecLocation.Code);
                                                              END ELSE BEGIN
                                                                IF ( PAGE.RUNMODAL(PAGE::"Location List", lrecLocation) = ACTION::LookupOK ) THEN
                                                                  Rec.VALIDATE("Location Code", lrecLocation.Code);
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Location Code;
                                                              ESM=C¢d. almac‚n;
                                                              FRC=Code d'emplacement;
                                                              ENC=Location Code] }
    { 22  ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              ESM=Nombre;
                                                              FRC=Nom;
                                                              ENC=Name];
                                                   Description=name }
    { 23  ;   ;E-Mail              ;Text250       ;Description=email }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      recPostCode@1000000000 : Record 225;
      recDShipSetup@1000000001 : Record 23044600;
      cuPackMgmt@1000000002 : Codeunit 23044601;

    LOCAL PROCEDURE updateAddress@1000000008();
    VAR
      lrecCustomer@1000000000 : Record 18;
      lrecVendor@1000000001 : Record 23;
      lrecLocation@1000000002 : Record 14;
      lrecContact@1000000007 : Record 5050;
      lrecContactAltAddr@1000000008 : Record 5051;
      lrecVendorOrderAddress@1000000009 : Record 224;
      lcuDShipPackRateMngmt@1000000005 : Codeunit 23044602;
      lasToAddress@1000000004 : ARRAY [12] OF Text[100];
      lbValidDestination@1000000003 : Boolean;
      lcodCountry@1000000006 : Code[20];
    BEGIN
      //<FUNC>
      //  Description: Sets address related fields based on Ship-To fields
      //  Called From: This table (T23044621)
      //  Side Effect: None
      //</FUNC>

      // do not alter address data if manual entry is selected
      IF ( Rec."Ship-To Type" = Rec."Ship-To Type"::"Manual Entry" ) THEN
        EXIT;

      CASE Rec."Ship-To Type" OF
        Rec."Ship-To Type"::Customer:
          BEGIN
            IF ( Rec."Ship-To Code" <> '' ) THEN BEGIN
              lcuDShipPackRateMngmt.getShipToAddressFromShipToCode(Rec."Ship-To No.", Rec."Ship-To Code", TRUE, lasToAddress);
              lbValidDestination := TRUE;
            END ELSE IF ( lrecCustomer.GET(Rec."Ship-To No.") ) THEN BEGIN
              lrecCustomer.TESTFIELD(Name);
              lrecCustomer.TESTFIELD(Address);
              lrecCustomer.TESTFIELD(City);
              lcodCountry := lrecCustomer."Country/Region Code";
              IF ( lcodCountry <> '' ) THEN
                lrecCustomer.TESTFIELD("Country/Region Code")
              ELSE BEGIN
                recDShipSetup.GET;
                lcodCountry := recDShipSetup."Ship-To Country/Region Code";
              END;
              lrecCustomer.TESTFIELD("Post Code");
              lrecCustomer.TESTFIELD("Phone No.");

              lasToAddress[1] := COPYSTR(lrecCustomer.Name, 1, 30);
              lasToAddress[2] := lrecCustomer.Address;
              lasToAddress[3] := lrecCustomer."Address 2";
              lasToAddress[4] := lrecCustomer.City;
              lasToAddress[5] := lrecCustomer.County;
              lasToAddress[6] := lrecCustomer."Country/Region Code";
              lasToAddress[7] := lrecCustomer."Post Code";
              lasToAddress[8] := lrecCustomer."Phone No.";
              lasToAddress[9] := lrecCustomer."E-Mail";
              lasToAddress[10] := lrecCustomer.Contact;

              lbValidDestination := TRUE;
            END;
          END;
        Rec."Ship-To Type"::Vendor:
          BEGIN
            IF ( Rec."Ship-To Code" <> '' ) THEN BEGIN
              IF ( lrecVendorOrderAddress.GET(Rec."Ship-To No.", Rec."Ship-To Code") ) THEN BEGIN
                lrecVendorOrderAddress.TESTFIELD(Name);
                lrecVendorOrderAddress.TESTFIELD(Address);
                lrecVendorOrderAddress.TESTFIELD(City);
                lcodCountry := lrecVendorOrderAddress."Country/Region Code";
                IF ( lcodCountry <> '' ) THEN
                  lrecVendorOrderAddress.TESTFIELD("Country/Region Code")
                ELSE BEGIN
                  recDShipSetup.GET;
                  lcodCountry := recDShipSetup."Ship-To Country/Region Code";
                END;
                lrecVendorOrderAddress.TESTFIELD("Post Code");
                lrecVendorOrderAddress.TESTFIELD("Phone No.");

                lasToAddress[1] := COPYSTR(lrecVendorOrderAddress.Name, 1, 30);
                lasToAddress[2] := lrecVendorOrderAddress.Address;
                lasToAddress[3] := lrecVendorOrderAddress."Address 2";
                lasToAddress[4] := lrecVendorOrderAddress.City;
                lasToAddress[5] := lrecVendorOrderAddress.County;
                lasToAddress[6] := lrecVendorOrderAddress."Country/Region Code";
                lasToAddress[7] := lrecVendorOrderAddress."Post Code";
                lasToAddress[8] := lrecVendorOrderAddress."Phone No.";
                lasToAddress[9] := lrecVendorOrderAddress."E-Mail";
                lasToAddress[10] := lrecVendorOrderAddress.Contact;

                lbValidDestination := TRUE;
              END;
            END ELSE IF ( lrecVendor.GET(Rec."Ship-To No.") ) THEN BEGIN
              lrecVendor.TESTFIELD(Name);
              lrecVendor.TESTFIELD(Address);
              lrecVendor.TESTFIELD(City);
              lrecVendor.TESTFIELD(County);
              lcodCountry := lrecVendor."Country/Region Code";
              IF ( lcodCountry <> '' ) THEN
                lrecVendor.TESTFIELD("Country/Region Code")
              ELSE BEGIN
                recDShipSetup.GET;
                lcodCountry := recDShipSetup."Ship-To Country/Region Code";
              END;
              //lrecVendor.TESTFIELD("Country/Region Code");
              lrecVendor.TESTFIELD("Post Code");
              lrecVendor.TESTFIELD("Phone No.");

              lasToAddress[1] := COPYSTR(lrecVendor.Name, 1, 30);
              lasToAddress[2] := lrecVendor.Address;
              lasToAddress[3] := lrecVendor."Address 2";
              lasToAddress[4] := lrecVendor.City;
              lasToAddress[5] := lrecVendor.County;
              lasToAddress[6] := lrecVendor."Country/Region Code";
              lasToAddress[7] := lrecVendor."Post Code";
              lasToAddress[8] := lrecVendor."Phone No.";
              lasToAddress[9] := lrecVendor."E-Mail";
              lasToAddress[10] := lrecVendor.Contact;

              lbValidDestination := TRUE;
            END;
          END;
        Rec."Ship-To Type"::Location:
          BEGIN
            IF ( Rec."Ship-To No." <> '' ) THEN BEGIN
              lcuDShipPackRateMngmt.getShipFromAddress(Rec."Ship-To No.", lasToAddress);
              lbValidDestination := TRUE;
            END;
          END;
        Rec."Ship-To Type"::Contact:
          BEGIN
            IF (lrecContact.GET(Rec."Ship-To No.")) THEN BEGIN
              lrecContact.TESTFIELD(Name);
              lrecContact.TESTFIELD(Address);
              lrecContact.TESTFIELD(City);
              lcodCountry := lrecContact."Country/Region Code";
              IF ( lcodCountry <> '' ) THEN
                lrecContact.TESTFIELD("Country/Region Code")
              ELSE BEGIN
                recDShipSetup.GET;
                lcodCountry := recDShipSetup."Ship-To Country/Region Code";
              END;
              lrecContact.TESTFIELD("Post Code");
              lrecContact.TESTFIELD("Phone No.");

              lasToAddress[1] := COPYSTR(lrecContact.Name, 1, 30);
              lasToAddress[2] := lrecContact.Address;
              lasToAddress[3] := lrecContact."Address 2";
              lasToAddress[4] := lrecContact.City;
              lasToAddress[5] := lrecContact.County;
              lasToAddress[6] := lrecContact."Country/Region Code";
              lasToAddress[7] := lrecContact."Post Code";
              lasToAddress[8] := lrecContact."Phone No.";
              lasToAddress[9] := lrecContact."E-Mail";
              lasToAddress[10] := lrecContact."Company Name";

              lbValidDestination := TRUE;
            END;

            IF ( Rec."Ship-To Code" <> '' ) THEN BEGIN
              lbValidDestination := FALSE;
              IF (lrecContactAltAddr.GET(Rec."Ship-To No.", Rec."Ship-To Code")) THEN BEGIN
                lrecContactAltAddr.TESTFIELD("Company Name");
                lrecContactAltAddr.TESTFIELD(Address);
                lrecContactAltAddr.TESTFIELD(City);
                lcodCountry := lrecContactAltAddr."Country/Region Code";
                IF ( lcodCountry <> '' ) THEN
                  lrecContactAltAddr.TESTFIELD("Country/Region Code")
                ELSE BEGIN
                  recDShipSetup.GET;
                  lcodCountry := recDShipSetup."Ship-To Country/Region Code";
                END;
                lrecContactAltAddr.TESTFIELD("Post Code");
                lrecContactAltAddr.TESTFIELD("Phone No.");

                lasToAddress[1] := COPYSTR(lrecContactAltAddr."Company Name", 1, 30);
                lasToAddress[2] := lrecContactAltAddr.Address;
                lasToAddress[3] := lrecContactAltAddr."Address 2";
                lasToAddress[4] := lrecContactAltAddr.City;
                lasToAddress[5] := lrecContactAltAddr.County;
                lasToAddress[6] := lrecContactAltAddr."Country/Region Code";
                lasToAddress[7] := lrecContactAltAddr."Post Code";
                lasToAddress[8] := lrecContactAltAddr."Phone No.";
                lasToAddress[9] := lrecContactAltAddr."E-Mail";
                lasToAddress[10] := lrecContact.Name;

                lbValidDestination := TRUE;
              END;
            END; //if ship-to <> ''
          END;
      END;

      IF ( NOT lbValidDestination ) THEN BEGIN
        lasToAddress[1] := '';
        lasToAddress[2] := '';
        lasToAddress[3] := '';
        lasToAddress[4] := '';
        lasToAddress[5] := '';
        lasToAddress[6] := '';
        lasToAddress[7] := '';
        lasToAddress[8] := '';
        lasToAddress[9] := '';
        lasToAddress[10] := '';
      END;


      Rec.Company := lasToAddress[1];
      Rec.Address := lasToAddress[2];
      Rec."Address 2" := lasToAddress[3];
      Rec.City := lasToAddress[4];
      Rec.County := lasToAddress[5];
      Rec."Country/Region Code" := lasToAddress[6];
      Rec."Post Code" := lasToAddress[7];
      Rec."Phone No." := lasToAddress[8];
      Rec."E-Mail" := lasToAddress[9];
      Rec.Name := lasToAddress[10];
    END;

    PROCEDURE LocationAllowedOnFindRecord@1000000015(pWhich@1000000001 : Text) : Boolean;
    VAR
      lrecLocation@1000000003 : Record 14;
      lcuWMSMgmt@1000000002 : Codeunit 7302;
    BEGIN
      //<FUNC>
      //  Description: Used to identify if a user can view a specific record
      //  Called From: PAGE DSHIP Misc. Shipment Card (P23044637)
      //  Side Effect: None
      //</FUNC>

      // This function is mirrored from T23044618
      // Please see there for additional details
      IF ( Rec.FIND(pWhich) ) THEN
        IF ( lrecLocation.RequirePicking(Rec."Location Code") OR
             lrecLocation.RequirePutaway(Rec."Location Code") OR
             lrecLocation.RequireReceive(Rec."Location Code") OR
             lrecLocation.RequireShipment(Rec."Location Code") ) THEN
          EXIT(lcuWMSMgmt.LocationIsAllowedToView(Rec."Location Code"));
        EXIT(TRUE);
      EXIT(FALSE);
    END;

    PROCEDURE LocationAllowedOnNextRecord@1000000016(piSteps@1000000004 : Integer) : Integer;
    VAR
      lrecLocation@1000000005 : Record 14;
      lcuWMSMgmt@1000000001 : Codeunit 7302;
      liRealSteps@1000000002 : Integer;
      liNextSteps@1000000003 : Integer;
    BEGIN
      //<FUNC>
      //  Description: Used to identify if a user can view a specific record
      //  Called From: PAGE DSHIP Misc. Shipment Card (P23044637)
      //               PAGE DSHIP Misc. Shipment List (P23044638)
      //  Side Effect: None
      //</FUNC>

      // This function is mirrored from T23044618
      // Please see there for additional details
      liRealSteps := 0;
      IF ( piSteps <> 0 ) THEN BEGIN
        REPEAT
          liNextSteps := Rec.NEXT(piSteps / ABS(piSteps));
          IF ( lrecLocation.RequirePicking(Rec."Location Code") OR
               lrecLocation.RequirePutaway(Rec."Location Code") OR
               lrecLocation.RequireReceive(Rec."Location Code") OR
               lrecLocation.RequireShipment(Rec."Location Code") ) THEN BEGIN
            IF ( lcuWMSMgmt.LocationIsAllowedToView(Rec."Location Code") ) THEN BEGIN
              liRealSteps += liNextSteps;
            END;
          END ELSE BEGIN
            liRealSteps += liNextSteps;
          END;
        UNTIL (liNextSteps = 0) OR (liRealSteps = piSteps);
      END;
      EXIT(liRealSteps);
    END;

    BEGIN
    {
      ************************
      Copyright Notice
      This objects content is copyright of Insight Works 2011.  All rights reserved.
      Any redistribution or reproduction of part or all of the contents in any form is prohibited.
      ************************
    }
    END.
  }
}

