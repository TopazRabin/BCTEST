OBJECT Table 14123505 ES Role
{
  OBJECT-PROPERTIES
  {
    Date=12/14/18;
    Time=12:00:00 PM;
    Version List=ES1.41.56;
  }
  PROPERTIES
  {
    DataCaptionFields=Role ID,Name;
    OnInsert=BEGIN
               ESSecuritySetup.GET;
               ESSecuritySetup.TestPublishCompany;

               IF NOT AllowZeroNoQuestion THEN BEGIN
                 ESSecuritySetup.InFREERoles("Role ID",TRUE);

                 IF ESSecuritySetup."Permission Recorder Licensed" THEN
                   IF NOT ESRoleDetail.GET("Role ID") THEN BEGIN
                     ESRoleDetail.INIT;
                     ESRoleDetail."Role ID" := "Role ID";
                     ESRoleDetail."Role Name" := Name;
                     ESRoleDetail.INSERT(TRUE);
                   END;
               END;

               Comment(1,STRSUBSTNO(Text012,TABLECAPTION,"Role ID"));

               "Created By User" := USERID;
               "Created Date Time" := CURRENTDATETIME;
             END;

    OnModify=BEGIN
               Comment(1,STRSUBSTNO(Text013,TABLECAPTION,"Role ID"));
             END;

    OnDelete=BEGIN
               ESSecuritySetup.GET;
               ESSecuritySetup.InFREERoles("Role ID",TRUE);

               TestDeleteAllowed;

               ESRoleDetail.RESET;
               ESRoleDetail.SETRANGE("Role ID","Role ID");
               IF ESRoleDetail.FIND('-') THEN
                 ESRoleDetail.DELETE(TRUE);

               ESRolePerm.RESET;
               ESRolePerm.SETRANGE("Role ID","Role ID");
               ESRolePerm.DELETEALL(TRUE);

               Comment(1,STRSUBSTNO(Text014,TABLECAPTION,"Role ID"));
             END;

    OnRename=BEGIN
               ESSecuritySetup.GET;
               ESSecuritySetup.InFREERoles("Role ID",TRUE);

               Comment(1,STRSUBSTNO(Text015,TABLECAPTION,xRec."Role ID","Role ID"));
             END;

    CaptionML=ENU=Permission Set;
    LookupPageID=Page14123505;
    DrillDownPageID=Page14123505;
  }
  FIELDS
  {
    { 1   ;   ;Role ID             ;Code20        ;CaptionML=ENU=Permission Set ID;
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text30        ;OnValidate=BEGIN
                                                                IF (CurrFieldNo = FIELDNO(Name)) AND (Name <> xRec.Name) THEN
                                                                  IF ESRoleDetail.GET("Role ID") THEN BEGIN
                                                                    ESRoleDetail.VALIDATE("Role Name",Name);
                                                                    ESRoleDetail.MODIFY(TRUE);
                                                                  END;
                                                              END;

                                                   CaptionML=ENU=Name }
    { 1002;   ;TableData Role Permissions;Integer ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Role Permission" WHERE (Role ID=FIELD(Role ID),
                                                                                                 Object Type=CONST(TableData)));
                                                   CaptionML=ENU=TableData Permissions;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 1003;   ;Table Role Permissions;Integer     ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Role Permission" WHERE (Role ID=FIELD(Role ID),
                                                                                                 Object Type=CONST(Table)));
                                                   CaptionML=ENU=Table Permissions;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 1005;   ;Report Role Permissions;Integer    ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Role Permission" WHERE (Role ID=FIELD(Role ID),
                                                                                                 Object Type=CONST(Report)));
                                                   CaptionML=ENU=Report Permissions;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 1007;   ;Codeunit Role Permissions;Integer  ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Role Permission" WHERE (Role ID=FIELD(Role ID),
                                                                                                 Object Type=CONST(Codeunit)));
                                                   CaptionML=ENU=Codeunit Permissions;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 1008;   ;XMLPort Role Permissions;Integer   ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Role Permission" WHERE (Role ID=FIELD(Role ID),
                                                                                                 Object Type=CONST(XMLport)));
                                                   CaptionML=ENU=XMLPort Permissions;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 1009;   ;MenuSuite Role Permissions;Integer ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Role Permission" WHERE (Role ID=FIELD(Role ID),
                                                                                                 Object Type=CONST(MenuSuite)));
                                                   CaptionML=ENU=MenuSuite Permissions;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 1010;   ;Page Role Permissions;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Role Permission" WHERE (Role ID=FIELD(Role ID),
                                                                                                 Object Type=CONST(Page)));
                                                   CaptionML=ENU=Page Permissions;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 1011;   ;System Role Permissions;Integer    ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Role Permission" WHERE (Role ID=FIELD(Role ID),
                                                                                                 Object Type=CONST(System)));
                                                   CaptionML=ENU=System Permissions;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 1012;   ;Role Permissions    ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Role Permission" WHERE (Role ID=FIELD(Role ID)));
                                                   CaptionML=ENU=Permissions;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 1014;   ;Windows Access Controls;Integer    ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Windows Access Control" WHERE (Role ID=FIELD(Role ID)));
                                                   CaptionML=ENU=User Access Controls;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 1015;   ;Login Access Controls;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Login Access Control" WHERE (Role Type=CONST(Role),
                                                                                                      Role ID=FIELD(Role ID)));
                                                   CaptionML=ENU=Login Access Controls;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 1016;   ;Role Groups         ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Role Group Line" WHERE (Role Type=CONST(Role),
                                                                                                 Role ID=FIELD(Role ID)));
                                                   CaptionML=ENU=Permission Groups;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 1017;   ;Role Detail Exists  ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("ES Role Detail" WHERE (Role ID=FIELD(Role ID)));
                                                   CaptionML=ENU=Permission Set Detail Exists;
                                                   Editable=No }
    { 1018;   ;Created By User     ;Code50        ;CaptionML=ENU=Created By User;
                                                   Editable=No }
    { 1019;   ;Created Date Time   ;DateTime      ;CaptionML=ENU=Created Date Time;
                                                   Editable=No }
    { 1020;   ;Role Builder Permissions;Integer   ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Role Builder Permission" WHERE (Role ID=FIELD(Role ID)));
                                                   CaptionML=ENU=Builder Permissions;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 1021;   ;Role Recordings     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Role Recording" WHERE (Role ID=FIELD(Role ID)));
                                                   CaptionML=ENU=Permission Set Recordings;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 1022;   ;No Permissions      ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ES Role Detail"."No Permissions" WHERE (Role ID=FIELD(Role ID)));
                                                   CaptionML=ENU=No Permissions;
                                                   Editable=No }
    { 1023;   ;Remove ALL Permissions;Boolean     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ES Role Detail"."Remove ALL Permissions" WHERE (Role ID=FIELD(Role ID)));
                                                   CaptionML=ENU=Remove ALL Permissions;
                                                   Editable=No }
    { 1024;   ;Remove BASIC Permissions;Boolean   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ES Role Detail"."Remove BASIC Permissions" WHERE (Role ID=FIELD(Role ID)));
                                                   CaptionML=ENU=Remove BASIC Permissions;
                                                   Editable=No }
    { 1025;   ;Summary Permissions ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Summary Permission" WHERE (Type=CONST(Role),
                                                                                                    Code=FIELD(Role ID)));
                                                   CaptionML=ENU=Summary Permissions;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 1026;   ;Query Role Permissions;Integer     ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Role Permission" WHERE (Role ID=FIELD(Role ID),
                                                                                                 Object Type=CONST(Query)));
                                                   CaptionML=ENU=Query Permissions;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 1027;   ;Parent Role ID      ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ES Role Detail"."Parent Role ID" WHERE (Role ID=FIELD(Role ID)));
                                                   CaptionML=ENU=Parent Permission Set ID;
                                                   Editable=No }
    { 1028;   ;Not in Parent Role Permissions;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("ES Role Permission" WHERE (Role ID=FIELD(Role ID),
                                                                                                 Exists in Parent Role=CONST(No)));
                                                   CaptionML=ENU=Not in Parent Permissions;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 1029;   ;Object Role Permissions;Integer    ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Role Permission" WHERE (Role ID=FIELD(Role ID),
                                                                                                 Object Type=FILTER(Table..Query)));
                                                   CaptionML=ENU=Object Permissions;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 1030;   ;Summary Results     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Summary Result" WHERE (Type=CONST(Role),
                                                                                                Code=FIELD(Role ID)));
                                                   CaptionML=ENU=Summary Results;
                                                   BlankZero=Yes;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Role ID                                 ;Clustered=Yes }
    {    ;Created Date Time                        }
    {    ;Created By User,Created Date Time        }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ESSecuritySetup@1240520008 : Record 14123521;
      ESRolePerm@1240520009 : Record 14123506;
      Text001@1001 : TextConst 'ENU=Only %1 existing permissions selected.';
      Text002@1002 : TextConst 'ENU=Add %1 permissions to Permission Set %2?';
      Text003@1003 : TextConst 'ENU=Nothing added.';
      Text004@1004 : TextConst 'ENU=%1 records added.';
      Text005@1005 : TextConst 'ENU=Nothing copied.';
      Text006@1006 : TextConst 'ENU=%1 Permissions added and %2 modified. %3 already existed.';
      ESRoleDetail@1240520013 : Record 14123653;
      AllowZeroNoQuestion@1240520010 : Boolean;
      Text007@1240520011 : TextConst 'ENU=Get New Object Information';
      Text008@1240520012 : TextConst 'ENU=Permission Set %1 is maintained with the Permission Set Builder.';
      Text009@1007 : TextConst 'ENU=%1 updated in %2 %3.';
      Text010@1008 : TextConst 'ENU=Update Permission Set?';
      Text011@1009 : TextConst 'ENU=%1 records were updated.';
      Text012@1010 : TextConst 'ENU=Inserted %1 %2';
      Text013@1011 : TextConst 'ENU=Modified %1 %2';
      Text014@1012 : TextConst 'ENU=Deleted %1 %2';
      Text015@1013 : TextConst 'ENU=Renamed %1 %2 to %3';
      Text016@1014 : TextConst 'ENU=Updated in Live with Direct Integration.';
      Text017@1015 : TextConst 'ENU=Get New Data from Live';

    PROCEDURE AddRelatedPermissions@1240520009(ShowStatus@1240520010 : Boolean);
    VAR
      ESRolePerm@1240520008 : Record 14123506;
      ESSourceCodeMgt@1240520009 : Codeunit 14123602;
    BEGIN
      TestNotRoleBuilder;

      ESRolePerm.RESET;
      ESRolePerm.SETRANGE("Role ID","Role ID");
      ESSourceCodeMgt.AddRelatedPermsToRole(ESRolePerm,ShowStatus,TRUE);
    END;

    PROCEDURE AddRecordedPermissions@1240520008(ShowStatus@1240520008 : Boolean);
    VAR
      ESRoleRecordingMgt@1240520009 : Codeunit 14123651;
    BEGIN
      TestNotRoleBuilder;

      ESRoleRecordingMgt.AddRecordingToRolePerm(Rec,'',ShowStatus);
    END;

    PROCEDURE AddPermsFromObjectInfo@1240520015();
    VAR
      ESObjectInfoTmp@1240520008 : TEMPORARY Record 14123509;
      ESRolePerm@1240520012 : Record 14123506;
      ESObjectInfosForm@1240520009 : Page 14123509;
      ExistingPermissions@1240520010 : Integer;
      NewPermissions@1240520011 : Integer;
      AddedPermissions@1240520013 : Integer;
    BEGIN
      TestNotRoleBuilder;

      CLEAR(ESObjectInfosForm);
      ESObjectInfosForm.LOOKUPMODE(TRUE);
      IF ESObjectInfosForm.RUNMODAL <> ACTION::LookupOK THEN
        EXIT;

      ESObjectInfoTmp.RESET;
      ESObjectInfoTmp.DELETEALL;

      ESObjectInfosForm.GetSelection(ESObjectInfoTmp);

      ExistingPermissions := 0;
      NewPermissions := 0;
      IF ESObjectInfoTmp.FIND('-') THEN
        REPEAT
          IF ESRolePerm.GET("Role ID",ESObjectInfoTmp."Object Type",ESObjectInfoTmp."Object ID") THEN
            ExistingPermissions := ExistingPermissions + 1
          ELSE
            NewPermissions := NewPermissions + 1;
        UNTIL ESObjectInfoTmp.NEXT = 0;

      IF NewPermissions = 0 THEN
        ERROR(Text001,ExistingPermissions);

      IF NOT CONFIRM(Text002,FALSE,NewPermissions,"Role ID") THEN
        ERROR(Text003);

      ESObjectInfoTmp.FIND('-');
      REPEAT
        IF NOT ESRolePerm.GET("Role ID",ESObjectInfoTmp."Object Type",ESObjectInfoTmp."Object ID") THEN BEGIN
          ESRolePerm.INIT;
          ESRolePerm."Role ID" := "Role ID";
          ESRolePerm."Object Type" := ESObjectInfoTmp."Object Type";
          ESRolePerm."Object ID" := ESObjectInfoTmp."Object ID";
          ESRolePerm.Origin := ESRolePerm.Origin::"Object Information";
          ESRolePerm.INSERT(TRUE);

          AddedPermissions := AddedPermissions + 1;
        END;
      UNTIL ESObjectInfoTmp.NEXT = 0;

      MESSAGE(Text004,AddedPermissions);
    END;

    PROCEDURE AddPermsFromRelation@1240520014();
    VAR
      ESRelationTmp@1240520008 : TEMPORARY Record 14123601;
      ESRolePerm@1240520012 : Record 14123506;
      ESRelationsForm@1240520009 : Page 14123601;
      ExistingPermissions@1240520010 : Integer;
      NewPermissions@1240520011 : Integer;
      AddedPermissions@1240520013 : Integer;
    BEGIN
      TestNotRoleBuilder;

      CLEAR(ESRelationsForm);
      ESRelationsForm.LOOKUPMODE(TRUE);
      IF ESRelationsForm.RUNMODAL <> ACTION::LookupOK THEN
        EXIT;

      ESRelationTmp.RESET;
      ESRelationTmp.DELETEALL;

      ESRelationsForm.GetSelection(ESRelationTmp);

      ExistingPermissions := 0;
      NewPermissions := 0;
      IF ESRelationTmp.FIND('-') THEN
        REPEAT
          IF ESRolePerm.GET("Role ID",ESRelationTmp."Object Type",ESRelationTmp."Object ID") THEN
            ExistingPermissions := ExistingPermissions + 1
          ELSE
            NewPermissions := NewPermissions + 1;
        UNTIL ESRelationTmp.NEXT = 0;

      IF NewPermissions = 0 THEN
        ERROR(Text001,ExistingPermissions);

      IF NOT CONFIRM(Text002,FALSE,NewPermissions,"Role ID") THEN
        ERROR(Text003);

      ESRelationTmp.FIND('-');
      REPEAT
        IF NOT ESRolePerm.GET("Role ID",ESRelationTmp."Object Type",ESRelationTmp."Object ID") THEN BEGIN
          ESRolePerm.INIT;
          ESRolePerm."Role ID" := "Role ID";
          ESRolePerm."Object Type" := ESRelationTmp."Object Type";
          ESRolePerm."Object ID" := ESRelationTmp."Object ID";
          ESRolePerm.Origin := ESRolePerm.Origin::Relation;
          ESRolePerm.INSERT(TRUE);

          AddedPermissions := AddedPermissions + 1;
        END;
      UNTIL ESRelationTmp.NEXT = 0;

      MESSAGE(Text004,AddedPermissions);
    END;

    PROCEDURE CopyPermsFrom@1240520016();
    VAR
      ESRole@1240520010 : Record 14123505;
      ESRolePerm@1240520008 : Record 14123506;
      ESRolePerm2@1240520009 : Record 14123506;
      AddedPerms@1240520011 : Integer;
      ExistingPerms@1240520012 : Integer;
      ModifiedPerms@1240520014 : Integer;
      ModifyRecord@1240520013 : Boolean;
    BEGIN
      TestNotRoleBuilder;

      IF PAGE.RUNMODAL(0,ESRole) <> ACTION::LookupOK THEN
        ERROR(Text005);

      AddedPerms := 0;
      ExistingPerms := 0;
      ModifiedPerms := 0;
      ESRolePerm.RESET;
      ESRolePerm.SETRANGE("Role ID",ESRole."Role ID");
      IF ESRolePerm.FIND('-') THEN
        REPEAT
          IF NOT ESRolePerm2.GET("Role ID",ESRolePerm."Object Type",ESRolePerm."Object ID") THEN BEGIN
            ESRolePerm2 := ESRolePerm;
            ESRolePerm2."Role ID" := "Role ID";
            ESRolePerm2.Origin := ESRolePerm2.Origin::Copied;
            ESRolePerm2.INSERT(TRUE);

            AddedPerms := AddedPerms + 1;
          END ELSE BEGIN
            ModifyRecord := FALSE;

            IF ((ESRolePerm."Read Permission" = ESRolePerm."Read Permission"::Yes) AND
                (ESRolePerm2."Read Permission" <> ESRolePerm2."Read Permission"::Yes)) OR
               ((ESRolePerm."Read Permission" = ESRolePerm."Read Permission"::Indirect) AND
                (ESRolePerm2."Read Permission" = ESRolePerm2."Read Permission"::" "))
            THEN BEGIN
              ESRolePerm2."Read Permission" := ESRolePerm."Read Permission";

              ModifyRecord := TRUE;
            END;

            IF ((ESRolePerm."Insert Permission" = ESRolePerm."Insert Permission"::Yes) AND
                (ESRolePerm2."Insert Permission" <> ESRolePerm2."Insert Permission"::Yes)) OR
               ((ESRolePerm."Insert Permission" = ESRolePerm."Insert Permission"::Indirect) AND
                (ESRolePerm2."Insert Permission" = ESRolePerm2."Insert Permission"::" "))
            THEN BEGIN
              ESRolePerm2."Insert Permission" := ESRolePerm."Insert Permission";

              ModifyRecord := TRUE;
            END;

            IF ((ESRolePerm."Modify Permission" = ESRolePerm."Modify Permission"::Yes) AND
                (ESRolePerm2."Modify Permission" <> ESRolePerm2."Modify Permission"::Yes)) OR
               ((ESRolePerm."Modify Permission" = ESRolePerm."Modify Permission"::Indirect) AND
                (ESRolePerm2."Modify Permission" = ESRolePerm2."Modify Permission"::" "))
            THEN BEGIN
              ESRolePerm2."Modify Permission" := ESRolePerm."Modify Permission";

              ModifyRecord := TRUE;
            END;

            IF ((ESRolePerm."Delete Permission" = ESRolePerm."Delete Permission"::Yes) AND
                (ESRolePerm2."Delete Permission" <> ESRolePerm2."Delete Permission"::Yes)) OR
               ((ESRolePerm."Delete Permission" = ESRolePerm."Delete Permission"::Indirect) AND
                (ESRolePerm2."Delete Permission" = ESRolePerm2."Delete Permission"::" "))
            THEN BEGIN
              ESRolePerm2."Delete Permission" := ESRolePerm."Delete Permission";

              ModifyRecord := TRUE;
            END;

            IF ((ESRolePerm."Execute Permission" = ESRolePerm."Execute Permission"::Yes) AND
                (ESRolePerm2."Execute Permission" <> ESRolePerm2."Execute Permission"::Yes)) OR
               ((ESRolePerm."Execute Permission" = ESRolePerm."Execute Permission"::Indirect) AND
                (ESRolePerm2."Execute Permission" = ESRolePerm2."Execute Permission"::" "))
            THEN BEGIN
              ESRolePerm2."Execute Permission" := ESRolePerm."Execute Permission";

              ModifyRecord := TRUE;
            END;

            IF ModifyRecord THEN BEGIN
              ESRolePerm2.MODIFY(TRUE);

              ModifiedPerms := ModifiedPerms + 1;
            END ELSE
              ExistingPerms := ExistingPerms + 1;
          END;
        UNTIL ESRolePerm.NEXT = 0;

      MESSAGE(
        Text006,
        AddedPerms,ModifiedPerms,ExistingPerms);
    END;

    PROCEDURE CopyFromRoleDetail@1240520033(ShowStatus@1240520002 : Boolean);
    VAR
      ESRoleDetail@1240520001 : Record 14123653;
    BEGIN
      ESRoleDetail.GET("Role ID");

      ESRoleDetail.CopyFromRoleDetail(ShowStatus);
    END;

    PROCEDURE CreateRoleDetail@1240520011(ShowStatus@1240520009 : Boolean);
    VAR
      ESRoleRecordingMgt@1240520008 : Codeunit 14123651;
    BEGIN
      ESRoleRecordingMgt.CreateRoleDetailFromRole(Rec,ShowStatus,TRUE);
    END;

    PROCEDURE UpdateAllToRoleDetail@1240520012(ShowStatus@1240520008 : Boolean);
    VAR
      ESRoleRecordingMgt@1240520010 : Codeunit 14123651;
    BEGIN
      ESRoleRecordingMgt.CreateAllRoleDetailsFromRoles(ShowStatus);
    END;

    PROCEDURE RoleWhereUsed@1240520013();
    VAR
      ESRoleWhereUsed@1240520008 : Page 14123565;
    BEGIN
      CLEAR(ESRoleWhereUsed);
      ESRoleWhereUsed.InitRole("Role ID");
      ESRoleWhereUsed.RUN;
    END;

    PROCEDURE SetAllowZeroNoQuestion@1240520017(NewValue@1240520008 : Boolean);
    BEGIN
      AllowZeroNoQuestion := NewValue;
    END;

    PROCEDURE GetNewRoles@1240520027(ShowStatus@1240520009 : Boolean);
    VAR
      ESMgt@1240520008 : Codeunit 14123501;
    BEGIN
      ESMgt.CreateNewRoles(ShowStatus);
    END;

    PROCEDURE GetNewObjects@1240520018(ShowStatus@1240520008 : Boolean);
    VAR
      ESMgt@1240520009 : Codeunit 14123501;
    BEGIN
      CLEAR(ESMgt);

      ESMgt.Live2ES(ShowStatus,Text007,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,TRUE);
    END;

    PROCEDURE GetNewData@1240520034(ShowStatus@1240520002 : Boolean);
    VAR
      ESMgt@1240520001 : Codeunit 14123501;
    BEGIN
      CLEAR(ESMgt);

      ESMgt.SynchronizeLiveToEasySecurity(Text017,TRUE,TRUE,TRUE,ShowStatus);
    END;

    PROCEDURE UpdateFromRoleDetail@1240520020(ShowStatus@1240520010 : Boolean);
    VAR
      ESRoleDetail@1240520008 : Record 14123653;
      ESRoleRecordingMgt@1240520009 : Codeunit 14123651;
    BEGIN
      ESRoleDetail.GET("Role ID");

      ESRoleRecordingMgt.UpdateRoleFromRoleDetail(ESRoleDetail,ShowStatus,TRUE);
    END;

    PROCEDURE UpdateAllFromRoleDetail@1240520019(ShowStatus@1240520010 : Boolean);
    VAR
      ESRoleRecordingMgt@1240520009 : Codeunit 14123651;
    BEGIN
      ESRoleRecordingMgt.UpdateAllRolesFromRoleDetails(ShowStatus);
    END;

    PROCEDURE UpdateExistsInParentRole@1240520001(ShowStatus@1240520001 : Boolean);
    BEGIN
      ESRoleDetail.GET("Role ID");
      ESRoleDetail.UpdateExistsInParentRole(ShowStatus);
    END;

    PROCEDURE UpdateAllExistsInParentRole@1240520002(ShowStatus@1240520001 : Boolean);
    VAR
      ModifiedRoles@1240520002 : Integer;
    BEGIN
      ESRoleDetail.RESET;
      ESRoleDetail.SETFILTER("Parent Role ID",'<>%1','');
      IF ESRoleDetail.FIND('-') THEN
        REPEAT
          ModifiedRoles := ModifiedRoles + 1;

          ESRoleDetail.UpdateExistsInParentRole(FALSE);
        UNTIL ESRoleDetail.NEXT = 0;

      MESSAGE(
        Text009,
        ESRolePerm.FIELDCAPTION("Exists in Parent Role"),ModifiedRoles,TABLECAPTION);
    END;

    PROCEDURE UpdateRoleInLive@1240520031(ShowStatus@1240520005 : Boolean);
    VAR
      ESLoginSetup@1240520006 : Record 14123540;
      ESRestorePoint@1240520007 : Record 14123523;
      Role@1240520001 : Record 2000000004;
      RolePermission@1240520002 : Record 2000000005;
      ESRolePermission@1240520003 : Record 14123506;
      AllObj@1240520008 : Record 2000000038;
      ESObjectInfo@1000 : Record 14123509;
      InsertedRecords@1240520004 : Integer;
    BEGIN
      ESSecuritySetup.GET;
      ESSecuritySetup.TestPublishCompany;
      ESSecuritySetup.TESTFIELD("Direct Role Integration");

      ESLoginSetup.GET(USERID);
      ESLoginSetup.TESTFIELD("Direct Role Integration");

      IF CONFIRM(Text010,TRUE) THEN
        UpdateFromRoleDetail(TRUE);

      IF NOT ESSecuritySetup."Direct Int. No Restore Point" THEN BEGIN
        ESRestorePoint.INSERT(TRUE);
        ESRestorePoint.CreateRestPntFromLive(ShowStatus);
      END;

      Role.GET("Role ID");

      RolePermission.RESET;
      RolePermission.SETRANGE("Role ID","Role ID");
      RolePermission.DELETEALL;

      ESRolePermission.RESET;
      ESRolePermission.SETRANGE("Role ID","Role ID");
      IF ESRolePermission.FIND('-') THEN
        REPEAT
          IF ESRolePermission."Object ID" > 0 THEN
            IF ESRolePermission."Object ID" < 2000000000 THEN BEGIN
              IF ESRolePermission."Object Type" = ESRolePermission."Object Type"::TableData THEN
                AllObj.GET(AllObj."Object Type"::Table,ESRolePermission."Object ID")
              ELSE
                IF ESRolePermission."Object Type" <> ESRolePermission."Object Type"::System THEN
                  AllObj.GET(ESRolePermission."Object Type",ESRolePermission."Object ID");
            END ELSE BEGIN
              IF ESRolePermission."Object Type" <> ESRolePermission."Object Type"::TableData THEN
                ESObjectInfo.GET(ESRolePermission."Object Type",ESRolePermission."Object ID");
            END;

          RolePermission.TRANSFERFIELDS(ESRolePermission);
          RolePermission."Role ID" := Role."Role ID";
          RolePermission.INSERT;

          InsertedRecords := InsertedRecords + 1;
        UNTIL ESRolePermission.NEXT = 0;

      IF ShowStatus THEN
        MESSAGE(Text011,InsertedRecords);

      Comment(1,Text016);
    END;

    PROCEDURE UpdateSummaryPermissions@1240520035(ShowStatus@1240520002 : Boolean;ShowProgress@1240520003 : Boolean);
    VAR
      ESMgt@1240520001 : Codeunit 14123501;
    BEGIN
      ESMgt.UpdateRoleSummaryPerm(Rec,TRUE,ShowStatus,ShowProgress);
    END;

    PROCEDURE TestNotRoleBuilder@1240520021();
    VAR
      ESRoleDetail@1240520008 : Record 14123653;
    BEGIN
      IF ESRoleDetail.GET("Role ID") THEN
        ERROR(Text008,"Role ID");
    END;

    PROCEDURE AddNewRecording@1240520024();
    VAR
      ESSecuritySetup@1240520008 : Record 14123521;
      ESRecording@1240520009 : Record 14123651;
      ESRoleRecording@1240520010 : Record 14123654;
      ESRoleDetail@1240520001 : Record 14123653;
      ESLoginSetup@1240520002 : Record 14123540;
      AddRecording@1240520003 : Boolean;
    BEGIN
      ESSecuritySetup.GET;
      ESSecuritySetup.TESTFIELD("Permission Recorder Licensed");

      IF NOT ESLoginSetup.GET(USERID) THEN
        ESLoginSetup.INIT;

      ESRoleDetail.GET("Role ID");
      ESRoleDetail.TESTFIELD("Role Group ID",'');

      ESRecording.INIT;
      ESRecording.INSERT(TRUE);
      ESRecording.SETRECFILTER;
      COMMIT;

      IF ISSERVICETIER THEN BEGIN
        ESRecording.ImportSQLProfilerTrace;
        COMMIT;
      END;

      IF NOT ESLoginSetup."No Confirm on Import Recording" THEN
        AddRecording := PAGE.RUNMODAL(0,ESRecording) = ACTION::LookupOK
      ELSE
        AddRecording := TRUE;

      IF AddRecording THEN BEGIN
        ESRoleRecording.INIT;

        ESRoleRecording.VALIDATE("Role ID","Role ID");
        ESRoleRecording.VALIDATE("Recording Code",ESRecording.Code);
        ESRoleRecording.INSERT(TRUE);
        COMMIT;

        IF CONFIRM(Text010,TRUE) THEN
          UpdateFromRoleDetail(TRUE);
      END;
    END;

    PROCEDURE ExportRole@1240520029();
    VAR
      ESRoleDetail@1240520001 : Record 14123653;
    BEGIN
      ESRoleDetail.GET("Role ID");
      ESRoleDetail.TESTFIELD("File Name");
      ESRoleDetail.ExportRoleDetail(TRUE,TRUE,FALSE,ESRoleDetail."File Name",TRUE);
    END;

    PROCEDURE ExportMultipleRoles@1240520028(VAR ESRole@1240520003 : Record 14123505);
    VAR
      ESRoleDetail@1240520002 : Record 14123653;
      ESRoleDetailTmp@1240520001 : TEMPORARY Record 14123653;
    BEGIN
      IF ESRole.FIND('-') THEN BEGIN
        REPEAT
          ESRoleDetail.GET(ESRole."Role ID");
          ESRoleDetailTmp := ESRoleDetail;
          ESRoleDetailTmp.INSERT;
        UNTIL ESRole.NEXT = 0;

        ESRoleDetail.ExportMultipleRoleDetails(ESRoleDetailTmp,TRUE,'');
      END;
    END;

    PROCEDURE ImportRole@1240520007();
    VAR
      ESRoleDetail@1240520001 : Record 14123653;
    BEGIN
      IF NOT ESRoleDetail.GET("Role ID") THEN
        ;
      ESRoleDetail.ImportRoleDetail(TRUE,'',FALSE,FALSE);
    END;

    PROCEDURE ImportRoleOverwrite@1240520006();
    VAR
      ESRoleDetail@1240520001 : Record 14123653;
    BEGIN
      IF NOT ESRoleDetail.GET("Role ID") THEN
        ;
      ESRoleDetail.ImportRoleDetail(TRUE,'',TRUE,FALSE);
    END;

    PROCEDURE ImportRoleAddNewRecordings@1240520032();
    VAR
      ESRoleDetail@1240520001 : Record 14123653;
    BEGIN
      IF NOT ESRoleDetail.GET("Role ID") THEN
        ;
      ESRoleDetail.ImportRoleDetail(TRUE,'',FALSE,TRUE);
    END;

    PROCEDURE CreateRoleAndRecording@1240520005();
    VAR
      ESRoleDetail@1240520001 : Record 14123653;
    BEGIN
      ESRoleDetail.GET("Role ID");
      ESRoleDetail.CreateRoleAndRecording;
    END;

    PROCEDURE LaunchObjects@1240520004(ObjectTypeFilter@1240520002 : Text[30]);
    VAR
      ESRoleDetail@1240520001 : Record 14123653;
    BEGIN
      ESRoleDetail.GET("Role ID");
      ESRoleDetail.LaunchObjectsMenuItem(ObjectTypeFilter,FALSE);
    END;

    PROCEDURE LaunchObjectsShowErrors@1240520003(ObjectTypeFilter@1240520002 : Text[30]);
    VAR
      ESRoleDetail@1240520001 : Record 14123653;
    BEGIN
      ESRoleDetail.GET("Role ID");
      ESRoleDetail.LaunchObjectsMenuItem(ObjectTypeFilter,TRUE);
    END;

    PROCEDURE TestDeleteAllowed@1240520025();
    VAR
      ESLoginAccessControl@1240520008 : Record 14123528;
      ESWindowsAccessControl@1240520010 : Record 14123504;
      ESRoleGroupLine@1240520011 : Record 14123526;
    BEGIN
      ESLoginAccessControl.RESET;
      ESLoginAccessControl.SETRANGE("Role Type",ESLoginAccessControl."Role Type"::Role);
      ESLoginAccessControl.SETRANGE("Role ID","Role ID");
      IF ESLoginAccessControl.FIND('-') THEN
        ESLoginAccessControl.TESTFIELD("Role ID",'');

      ESWindowsAccessControl.RESET;
      ESWindowsAccessControl.SETRANGE("Role ID","Role ID");
      IF ESWindowsAccessControl.FIND('-') THEN
        ESWindowsAccessControl.TESTFIELD("Role ID",'');

      ESRoleGroupLine.RESET;
      ESRoleGroupLine.SETRANGE("Role Type",ESRoleGroupLine."Role Type"::Role);
      ESRoleGroupLine.SETRANGE("Role ID","Role ID");
      IF ESRoleGroupLine.FIND('-') THEN
        ESRoleGroupLine.TESTFIELD("Role ID",'');
    END;

    PROCEDURE PrintTextLines@1240520022();
    VAR
      ESRole@1240520008 : Record 14123505;
      ESPrintRole@1240520009 : Report 14123502;
    BEGIN
      ESRole := Rec;
      ESRole.SETRECFILTER;

      CLEAR(ESPrintRole);
      ESPrintRole.SETTABLEVIEW(ESRole);
      ESPrintRole.RUN;
    END;

    PROCEDURE CountLimitedUserAccess@1240520030();
    VAR
      ESRolePermission@1240520001 : Record 14123506;
      ESObjectProperty@1240520002 : Record 14123522;
    BEGIN
      ESObjectProperty.CountAccessClearCount;

      ESRolePermission.RESET;
      ESRolePermission.SETRANGE("Role ID","Role ID");
      ESRolePermission.SETRANGE("Object Type",ESRolePermission."Object Type"::TableData);
      ESRolePermission.SETFILTER("Object ID",'>0');
      IF ESRolePermission.FIND('-') THEN
        REPEAT
          ESObjectProperty.CountAccessAddTable(
            ESRolePermission."Object ID",
            (ESRolePermission."Insert Permission" <> ESRolePermission."Insert Permission"::" ") OR
            (ESRolePermission."Modify Permission" <> ESRolePermission."Modify Permission"::" ") OR
            (ESRolePermission."Delete Permission" <> ESRolePermission."Delete Permission"::" "));
        UNTIL ESRolePermission.NEXT = 0;

      ESObjectProperty.CountAccessMessage;
    END;

    PROCEDURE FormatAsTextLine@1240520023(VAR ESTextLine@1240520011 : Record 14123520;NoOfRelatedKeyFields@1240520009 : Integer;CalcFlowFields@1240520012 : Boolean;UserDateTimeDetails@1240520013 : Boolean) : Boolean;
    VAR
      ESFormatMgt@1240520014 : Codeunit 14123505;
      RecRef@1240520010 : RecordRef;
    BEGIN
      ESFormatMgt.NewRecord(TABLECAPTION,"Role ID",'','','','','','','','','',1,NoOfRelatedKeyFields);
      ESFormatMgt.AddField(FIELDCAPTION(Name),FORMAT(Name));

      IF UserDateTimeDetails THEN BEGIN
        ESFormatMgt.AddField(FIELDCAPTION("Created By User"),FORMAT("Created By User"));
        IF "Created Date Time" <> 0DT THEN
          ESFormatMgt.AddField(FIELDCAPTION("Created Date Time"),FORMAT("Created Date Time"));
      END;

      IF CalcFlowFields THEN BEGIN
        CALCFIELDS(
          "TableData Role Permissions","Table Role Permissions",
          "Report Role Permissions","Codeunit Role Permissions",
          "XMLPort Role Permissions","MenuSuite Role Permissions","Page Role Permissions",
          "System Role Permissions","Role Permissions");
        CALCFIELDS(
          "Windows Access Controls","Login Access Controls","Role Groups",
          "Role Detail Exists","Role Builder Permissions","Role Recordings","No Permissions",
          "Remove ALL Permissions","Remove BASIC Permissions","Summary Permissions",
          "Query Role Permissions","Summary Results");

        IF "TableData Role Permissions" <> 0 THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("TableData Role Permissions"),FORMAT("TableData Role Permissions"));
        IF "Table Role Permissions" <> 0 THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Table Role Permissions"),FORMAT("Table Role Permissions"));
        IF "Report Role Permissions" <> 0 THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Report Role Permissions"),FORMAT("Report Role Permissions"));
        IF "Codeunit Role Permissions" <> 0 THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Codeunit Role Permissions"),FORMAT("Codeunit Role Permissions"));
        IF "XMLPort Role Permissions" <> 0 THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("XMLPort Role Permissions"),FORMAT("XMLPort Role Permissions"));
        IF "MenuSuite Role Permissions" <> 0 THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("MenuSuite Role Permissions"),FORMAT("MenuSuite Role Permissions"));
        IF "Page Role Permissions" <> 0 THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Page Role Permissions"),FORMAT("Page Role Permissions"));
        IF "Query Role Permissions" <> 0 THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Query Role Permissions"),FORMAT("Query Role Permissions"));
        IF "System Role Permissions" <> 0 THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("System Role Permissions"),FORMAT("System Role Permissions"));
        IF "Role Permissions" <> 0 THEN
          ESFormatMgt.AddFlowField(FIELDCAPTION("Role Permissions"),FORMAT("Role Permissions"));
        IF "Windows Access Controls" <> 0 THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Windows Access Controls"),FORMAT("Windows Access Controls"));
        IF "Login Access Controls" <> 0 THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Login Access Controls"),FORMAT("Login Access Controls"));
        IF "Role Groups" <> 0 THEN
          ESFormatMgt.AddFlowField(FIELDCAPTION("Role Groups"),FORMAT("Role Groups"));
        IF "Role Detail Exists" THEN
          ESFormatMgt.AddFlowField(FIELDCAPTION("Role Detail Exists"),FORMAT("Role Detail Exists"));
        IF "Role Builder Permissions" <> 0 THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Role Builder Permissions"),FORMAT("Role Builder Permissions"));
        IF "Role Recordings" <> 0 THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Role Recordings"),FORMAT("Role Recordings"));
        IF "No Permissions" THEN
          ESFormatMgt.AddFlowField(FIELDCAPTION("No Permissions"),FORMAT("No Permissions"));
        IF "Remove ALL Permissions" THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Remove ALL Permissions"),FORMAT("Remove ALL Permissions"));
        IF "Remove BASIC Permissions" THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Remove BASIC Permissions"),FORMAT("Remove BASIC Permissions"));
        IF "Summary Permissions" <> 0 THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Summary Permissions"),FORMAT("Summary Permissions"));
        IF "Summary Results" <> 0 THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Summary Results"),FORMAT("Summary Results"));
      END;

      RecRef.OPEN(DATABASE::"ES Role");
      RecRef.GETTABLE(Rec);
      ESFormatMgt.FormatNewESTextLine(ESTextLine,DATABASE::"ES Role",RecRef.RECORDID);

      EXIT(ESFormatMgt.NoTextOverflow);
    END;

    PROCEDURE RoleDetailComment@1240520026();
    VAR
      ESRoleDetail@1240520008 : Record 14123653;
    BEGIN
      ESRoleDetail.GET("Role ID");
      ESRoleDetail.Comment(2,'');
    END;

    PROCEDURE Comment@1240520010(FunctionNo@1240520008 : ' ,Insert,Show,Exist,DeleteAll';NewText@1240520010 : Text[250]) : Boolean;
    VAR
      ESComment@1240520009 : Record 14123524;
    BEGIN
      ESComment.RESET;
      ESComment.SETRANGE("Table ID",DATABASE::"ES Role");
      ESComment.SETRANGE("Role ID","Role ID");
      EXIT(ESComment.Functions(FunctionNo,NewText));
    END;

    BEGIN
    END.
  }
}

