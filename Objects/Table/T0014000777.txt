OBJECT Table 14000777 UPS WS Registration
{
  OBJECT-PROPERTIES
  {
    Date=06/28/17;
    Time=12:00:00 PM;
    Version List=SE0.60.13;
  }
  PROPERTIES
  {
    CaptionML=ENU=UPS WS Registration;
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key }
    { 4   ;   ;External IP Address ;Text250       ;CaptionML=ENU=External IP Address }
    { 5   ;   ;Username            ;Text16        ;CaptionML=ENU=Username }
    { 6   ;   ;Password            ;Text26        ;CaptionML=ENU=Password }
    { 7   ;   ;Access License      ;Text16        ;CaptionML=ENU=Access License }
    { 8   ;   ;Get Terms and Conditions;Boolean   ;CaptionML=ENU=Get Terms and Conditions;
                                                   Editable=No }
    { 9   ;   ;Read/Accept Terms and Cond.;Boolean;CaptionML=ENU=Read/Accept Terms and Cond.;
                                                   Editable=No }
    { 10  ;   ;Create Access License;Boolean      ;CaptionML=ENU=Create Access License;
                                                   Editable=No }
    { 11  ;   ;Create UPS WS Profile;Boolean      ;CaptionML=ENU=Create UPS WS Profile;
                                                   Editable=No }
    { 12  ;   ;Ready For License   ;Boolean       ;CaptionML=ENU=Ready For License }
    { 13  ;   ;Ready To Create Profile;Boolean    ;CaptionML=ENU=Ready To Create Profile }
    { 14  ;   ;Registration Complete;Boolean      ;CaptionML=ENU=Registration Complete }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1240020000 : TextConst 'ENU=PerleqYW57';
      Text002@1240020001 : TextConst 'ENU=Ytwpmro%57';
      Text003@1240020002 : TextConst 'ENU="EGHG84:7:FH;4E=9"';
      Text004@1240020003 : TextConst 'ENU=I accept the terms and conditions in the UPS Technology Agreement.';
      Text007@1240020008 : TextConst 'ENU=Please make sure you have received the UPS Terms and Conditions.';
      Text009@1240020011 : TextConst 'ENU=Do you want to recreate the UPS Web Services profile?';
      Text010@1240020012 : TextConst 'ENU=This is only available for UPSlink/Web Services in Shipping Setup. Please contact your Lanham Partner.';
      Text011@1240020013 : TextConst 'ENU=Are you sure you want to reset UPS WS Registration?';
      Text012@1240020014 : TextConst 'ENU=Reset successful.';
      Text013@1240020015 : TextConst 'ENU=Please make sure that you have the UPS Terms and Conditions and they have been read and accepted.';
      Text014@1240020016 : TextConst 'ENU=Please make sure that you have created the access license.';
      Text017@1240020018 : TextConst 'ENU=Add shipping accounts now.';
      Text018@1240020020 : TextConst 'ENU=Please make sure you create the UPS Web Services profile before adding an account.';
      ShippingSetup@1240020010 : Record 14000707;

    PROCEDURE CreateLicenseAgreementRequest@1240020000();
    VAR
      UPSWSTransaction@1240020000 : Codeunit 14000766;
    BEGIN
      IF NOT UTACheck THEN
        UPSWSTransaction.CreateLicenseAgreementRequest;
    END;

    PROCEDURE ViewLicenseAgreement@1240020001();
    VAR
      UPSInfo@1240020000 : Record 14000778;
      LicenseAgreement@1240020001 : BigText;
      UPSLicenseAgreement@1240020002 : Report 14000766;
      AgreementInstream@1240020003 : InStream;
    BEGIN
      IF UTACheck THEN BEGIN
        UPSInfo.CALCFIELDS("License Agreement");
        UPSInfo."License Agreement".CREATEINSTREAM(AgreementInstream);
        LicenseAgreement.READ(AgreementInstream);
        UPSLicenseAgreement.Initialize(LicenseAgreement);
        COMMIT;
        UPSLicenseAgreement.RUNMODAL;
        GET;
        ReadyForLicense;
      END ELSE
        ERROR(Text007);
    END;

    PROCEDURE CreateLicenseRequest@1240020002();
    VAR
      UPSWSTransaction@1240020000 : Codeunit 14000766;
    BEGIN
      ReadyForLicense;

      IF "Ready For License" THEN BEGIN
        IF NOT("Create Access License") THEN
          UPSWSTransaction.CreateLicenseRequest(Rec)
      END ELSE
        ERROR(Text013);

      ReadyToCreateProfile;
    END;

    PROCEDURE CreateRegisterRequest@1240020005();
    VAR
      UPSWSTransaction@1240020000 : Codeunit 14000766;
    BEGIN
      ReadyForLicense;
      ReadyToCreateProfile;

      IF "Create UPS WS Profile" THEN
        IF CONFIRM(Text009) THEN BEGIN
          Username := '';
          Password := '';
          "Create UPS WS Profile" := FALSE;
          ResetShippingAccounts;
          MODIFY;
        END ELSE
          EXIT;

      TESTFIELD("External IP Address");

      IF "Ready To Create Profile" THEN BEGIN
        UPSWSTransaction.CreateRegisterRequest(Rec);
        InsertUPSWSServices(FALSE);
        MESSAGE(Text017);
        PAGE.RUN(PAGE::"UPS WS Shipping Accounts");
      END ELSE BEGIN
        ERROR('%1 %2',Text013,Text014);
      END;
    END;

    PROCEDURE AddAccountRequest@1240020011();
    VAR
      UPSWSShippingAccount@1240020000 : Record 14000779;
    BEGIN
      IF "Registration Complete" THEN
        UPSWSShippingAccount.AddAccountRequest
      ELSE
        ERROR(Text018);
    END;

    PROCEDURE RetrieveInfo@1240020003(InfoType@1240020000 : Integer) Info : Text[50];
    BEGIN
      CASE InfoType OF
        1:
          Info := Text001;
        2:
          Info := Text002;
        3:
          Info := Text003;
        ELSE
          Info := '';
      END;
    END;

    PROCEDURE AcceptUTA@1240020004();
    BEGIN
      IF CONFIRM(Text004,FALSE) THEN BEGIN
        "Read/Accept Terms and Cond." := TRUE;
         IF "Get Terms and Conditions" AND "Create Access License" AND "Create UPS WS Profile" THEN
           "Registration Complete" := TRUE;
      END ELSE BEGIN
        "Read/Accept Terms and Cond." := FALSE;
        "Registration Complete" := FALSE;
      END;
      MODIFY;

      ReadyForLicense;
    END;

    PROCEDURE UTACheck@1240020006() : Boolean;
    VAR
      UPSInfo@1240020000 : Record 14000778;
    BEGIN
      IF UPSInfo.GET THEN BEGIN
        UPSInfo.CALCFIELDS("License Agreement");
        IF UPSInfo."License Agreement".HASVALUE THEN BEGIN
           "Get Terms and Conditions" := TRUE;
           EXIT(TRUE)
        END ELSE BEGIN
          "Get Terms and Conditions" := FALSE;
          MODIFY;
          EXIT(FALSE)
        END;
      END ELSE BEGIN
        "Get Terms and Conditions" := FALSE;
        EXIT(FALSE);
      END;
    END;

    PROCEDURE ReadyForLicense@1240020009();
    BEGIN
      IF "Get Terms and Conditions" AND "Read/Accept Terms and Cond." AND UTACheck THEN BEGIN
        IF "Ready For License" <> TRUE THEN BEGIN
          "Ready For License" := TRUE;
          MODIFY;
        END;
      END ELSE BEGIN
        "Ready For License" := FALSE;
        "Registration Complete" := FALSE;
        MODIFY;
      END;
    END;

    PROCEDURE ReadyToCreateProfile@1240020007();
    BEGIN
      IF UTACheck AND "Read/Accept Terms and Cond." AND
         ("External IP Address" <> '') AND
         ("Access License"<> '') AND
         "Ready For License"
      THEN
        "Ready To Create Profile" := TRUE
      ELSE
        "Ready To Create Profile" := FALSE;

      MODIFY;
    END;

    PROCEDURE InsertUPSWSServices@1240020008(ShowMessage@1240020001 : Boolean);
    VAR
      UPSWSMgmt@1240020000 : Codeunit 14000767;
    BEGIN
      ShippingSetup.GET;
      TESTFIELD("Registration Complete",TRUE);
      IF ShippingSetup."UPS Version" = ShippingSetup."UPS Version"::"UPSlink/UPS Web Service" THEN
        UPSWSMgmt.InsertUPSWSServices(ShowMessage)
      ELSE
        ERROR(Text010);
    END;

    PROCEDURE UPSWSServicesVisible@1240020010() : Boolean;
    BEGIN
      ShippingSetup.GET;
      IF NOT(ShippingSetup."UPS Version" = ShippingSetup."UPS Version"::"UPSlink/UPS Web Service") THEN BEGIN
        ERROR(Text010);
        EXIT(FALSE);
      END ELSE
        EXIT(TRUE);
    END;

    PROCEDURE ResetRegistration@1240020012() : Boolean;
    VAR
      UPSInfo@1240020000 : Record 14000778;
    BEGIN
      IF CONFIRM(Text011) THEN BEGIN
        Username := '';
        Password := '';
        "Access License" := '';
        "Get Terms and Conditions" := FALSE;
        "Read/Accept Terms and Cond." := FALSE;
        "Create Access License" := FALSE;
        "Create UPS WS Profile" := FALSE;
        "Ready For License" := FALSE;
        "Ready To Create Profile" := FALSE;
        "Registration Complete" := FALSE;
        MODIFY;

        ResetShippingAccounts;

        IF UPSInfo.GET THEN BEGIN
          UPSInfo.DELETE;
        END;
        MESSAGE(Text012);
      END;
    END;

    PROCEDURE ResetShippingAccounts@1240020013();
    VAR
      UPSWSShippingAccount@1240020000 : Record 14000779;
    BEGIN
      UPSWSShippingAccount.RESET;
      UPSWSShippingAccount.SETCURRENTKEY("Account No.");
      UPSWSShippingAccount.SETFILTER("Account Added",'%1',TRUE);
      IF UPSWSShippingAccount.FIND('-') THEN BEGIN
        REPEAT
          UPSWSShippingAccount."Account Added" := FALSE;
        UNTIL UPSWSShippingAccount.NEXT = 0;
        UPSWSShippingAccount.MODIFY;
      END;
    END;

    BEGIN
    END.
  }
}

