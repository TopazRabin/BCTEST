OBJECT Table 14000903 E-Mail Element
{
  OBJECT-PROPERTIES
  {
    Date=09/24/20;
    Time=[ 5:44:05 AM];
    Modified=Yes;
    Version List=SE0.50.32;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "Line No." > 0 THEN BEGIN
                 EMailLine.GET("E-Mail Code","Line No.");
                 "Line Type" := EMailLine.Type;
               END;
             END;

    OnDelete=BEGIN
               EMailCommentLine.RESET;
               EMailCommentLine.SETRANGE("Table ID",DATABASE::"E-Mail Element");
               EMailCommentLine.SETRANGE(Code,"E-Mail Code");
               EMailCommentLine.SETRANGE("Integer 1","Line No.");
               EMailCommentLine.SETRANGE("Integer 2","Element No.");
               EMailCommentLine.DELETEALL;
             END;

    CaptionML=ENU=E-Mail Element;
    LookupPageID=Page14000903;
    DrillDownPageID=Page14000903;
  }
  FIELDS
  {
    { 1   ;   ;E-Mail Code         ;Code10        ;TableRelation="E-Mail Header";
                                                   CaptionML=ENU=E-Mail Code }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 3   ;   ;Element No.         ;Integer       ;CaptionML=ENU=Element No.;
                                                   MinValue=1;
                                                   MaxValue=10;
                                                   NotBlank=Yes }
    { 11  ;   ;Table ID            ;Integer       ;TableRelation="E-Mail Mapping Table";
                                                   OnValidate=BEGIN
                                                                IF "Table ID" <> 0 THEN BEGIN
                                                                  TESTFIELD("Virtual Field","Virtual Field"::" ");

                                                                  GetEMailHeader;
                                                                  IF TableFilter <> '' THEN
                                                                    IF STRPOS('|' + TableFilter,'|' + DELCHR(FORMAT("Table ID"),'=',',.')) = 0 THEN
                                                                      ERROR(
                                                                        Text001,
                                                                        TableFilter,EMailHeader."E-Mail Usage");
                                                                END;

                                                                CALCFIELDS("Table Name");

                                                                IF "Table ID" <> xRec."Table ID" THEN
                                                                  VALIDATE("Field ID",0);
                                                              END;

                                                   OnLookup=BEGIN
                                                              GetEMailHeader;

                                                              EMailMappingTable.RESET;
                                                              IF TableFilter <> '' THEN
                                                                EMailMappingTable.SETFILTER("Table No.",TableFilter);
                                                              IF PAGE.RUNMODAL(0,EMailMappingTable) = ACTION::LookupOK THEN
                                                                VALIDATE("Table ID",EMailMappingTable."Table No.");
                                                            END;

                                                   CaptionML=ENU=Table ID }
    { 12  ;   ;Field ID            ;Integer       ;TableRelation=Field.No. WHERE (TableNo=FIELD(Table ID));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Field Name");

                                                                IF "Field ID" <> 0 THEN BEGIN
                                                                  TESTFIELD("Virtual Field","Virtual Field"::" ");
                                                                  TESTFIELD("Table ID");

                                                                  Field.GET("Table ID","Field ID");
                                                                  CASE Field.Type OF
                                                                    Field.Type::Text:
                                                                      "Field Type" := "Field Type"::Text;
                                                                    Field.Type::Code:
                                                                      "Field Type" := "Field Type"::Code;
                                                                    Field.Type::Date:
                                                                      "Field Type" := "Field Type"::Date;
                                                                    Field.Type::Time:
                                                                      "Field Type" := "Field Type"::Time;
                                                                    Field.Type::DateFormula:
                                                                      "Field Type" := "Field Type"::DateFormula;
                                                                    Field.Type::Decimal:
                                                                      "Field Type" := "Field Type"::Decimal;
                                                                    Field.Type::Integer:
                                                                      "Field Type" := "Field Type"::Integer;
                                                                    Field.Type::Boolean:
                                                                      "Field Type" := "Field Type"::Boolean;
                                                                    Field.Type::Option:
                                                                      "Field Type" := "Field Type"::Option;
                                                                    ELSE
                                                                      "Field Type" := "Field Type"::Other;
                                                                  END;
                                                                END ELSE
                                                                  "Field Type" := "Field Type"::Integer;

                                                                IF ("Field Type" <> "Field Type"::Decimal) AND ("Field Type" <> "Field Type"::Integer) THEN
                                                                  "Create Total" := FALSE;
                                                              END;

                                                   CaptionML=ENU=Field ID }
    { 13  ;   ;Table Name          ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Table),
                                                                                         ID=FIELD(Table ID)));
                                                   CaptionML=ENU=Table Name;
                                                   Editable=No }
    { 14  ;   ;Field Name          ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field.FieldName WHERE (TableNo=FIELD(Table ID),
                                                                                             No.=FIELD(Field ID)));
                                                   CaptionML=ENU=Field Name;
                                                   Editable=No }
    { 15  ;   ;Field Type          ;Option        ;CaptionML=ENU=Field Type;
                                                   OptionCaptionML=ENU=" ,Text,Code,Date,Time,DateFormula,Decimal,Integer,Boolean,Option,Other";
                                                   OptionString=[ ,Text,Code,Date,Time,DateFormula,Decimal,Integer,Boolean,Option,Other];
                                                   Editable=No }
    { 16  ;   ;Line Type           ;Option        ;OnValidate=BEGIN
                                                                IF "Line Type" <> "Line Type"::Loop THEN
                                                                  "Create Total" := FALSE;
                                                              END;

                                                   CaptionML=ENU=Line Type;
                                                   OptionCaptionML=ENU=" ,Header,Loop,Total";
                                                   OptionString=[ ,Header,Loop,Total];
                                                   Editable=No }
    { 17  ;   ;Virtual Field       ;Option        ;OnValidate=BEGIN
                                                                TESTFIELD("Table ID",0);
                                                                TESTFIELD("Field ID",0);
                                                                IF "Virtual Field" <> "Virtual Field"::" " THEN BEGIN
                                                                  "Create Total" := FALSE;
                                                                  "Clear Total" := FALSE;
                                                                  "Show Total" := FALSE;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Virtual Field;
                                                   OptionCaptionML=ENU=" ,,,WorkDate,Today,Time,,,,,,Custom 1,Custom 2,Custom 3,Custom 4,Custom 5";
                                                   OptionString=[ ,,,WorkDate,Today,Time,,,,,,Custom 1,Custom 2,Custom 3,Custom 4,Custom 5] }
    { 18  ;   ;Record No.          ;Integer       ;OnValidate=BEGIN
                                                                IF "Record No." <> 0 THEN BEGIN
                                                                  TESTFIELD("Table ID");

                                                                  GetRecordNoSelectionStrMenu;

                                                                  IF "Record No." > MaxRecordNo THEN
                                                                    ERROR(Text002,MaxRecordNo);
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              TESTFIELD("Table ID");

                                                              GetRecordNoSelectionStrMenu;

                                                              IF RecordNoSelectionStrMenu = '' THEN BEGIN
                                                                MESSAGE(Text003);
                                                                VALIDATE("Record No.",0);
                                                              END ELSE BEGIN
                                                                Selection := STRMENU(RecordNoSelectionStrMenu);

                                                                IF Selection > 0 THEN
                                                                  VALIDATE("Record No.",Selection - 1);
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Record No. }
    { 21  ;   ;Format Length       ;Integer       ;CaptionML=ENU=Format Length;
                                                   BlankZero=Yes }
    { 22  ;   ;Format Number       ;Integer       ;CaptionML=ENU=Format Number;
                                                   BlankZero=Yes }
    { 23  ;   ;Format String       ;Text100       ;ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Format String }
    { 24  ;   ;Create Total        ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD("Line Type","Line Type"::Loop);
                                                                TESTFIELD("Virtual Field","Virtual Field"::" ");

                                                                IF "Create Total" AND ("Line No." <= 0) THEN
                                                                  ERROR(Text004);

                                                                IF "Create Total" AND
                                                                   ("Field Type" <> "Field Type"::Decimal) AND ("Field Type" <> "Field Type"::Integer)
                                                                THEN
                                                                  ERROR(Text005,FIELDNAME("Field Type"));
                                                              END;

                                                   CaptionML=ENU=Create Total }
    { 25  ;   ;Clear Total         ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD("Line Type","Line Type"::Header);
                                                                TESTFIELD("Virtual Field","Virtual Field"::" ");

                                                                IF "Clear Total" AND ("Line No." <= 0) THEN
                                                                  ERROR(Text004);

                                                                IF "Clear Total" AND
                                                                   ("Field Type" <> "Field Type"::Decimal) AND ("Field Type" <> "Field Type"::Integer)
                                                                THEN
                                                                  ERROR(Text005,FIELDNAME("Field Type"));
                                                              END;

                                                   CaptionML=ENU=Clear Total }
    { 26  ;   ;Show Total          ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD("Virtual Field","Virtual Field"::" ");

                                                                IF "Show Total" AND ("Line No." <= 0) THEN
                                                                  ERROR(Text004);

                                                                IF "Show Total" AND
                                                                   ("Field Type" <> "Field Type"::Decimal) AND ("Field Type" <> "Field Type"::Integer)
                                                                THEN
                                                                  ERROR(Text005,FIELDNAME("Field Type"));
                                                              END;

                                                   CaptionML=ENU=Show Total }
    { 27  ;   ;Pre Substitution    ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD("Element No.",10);
                                                              END;

                                                   CaptionML=ENU=Pre Substitution }
    { 28  ;   ;Skip Line If Element Blank;Boolean ;OnValidate=BEGIN
                                                                TESTFIELD("Skip Line If Element Not Blank",FALSE);

                                                                IF "Skip Line If Element Blank" AND ("Line No." <= 0) THEN
                                                                  ERROR(Text004);
                                                              END;

                                                   CaptionML=ENU=Skip Line If Element Blank }
    { 29  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("E-Mail Comment Line" WHERE (Table ID=CONST(14000903),
                                                                                                  Code=FIELD(E-Mail Code),
                                                                                                  Integer 1=FIELD(Line No.),
                                                                                                  Integer 2=FIELD(Element No.)));
                                                   OnLookup=BEGIN
                                                              LookupComment;
                                                            END;

                                                   CaptionML=ENU=Comment;
                                                   Editable=No }
    { 30  ;   ;Skip Line If Element Not Blank;Boolean;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Skip Line If Element Blank",FALSE);

                                                                IF "Skip Line If Element Blank" AND ("Line No." <= 0) THEN
                                                                  ERROR(Text004);
                                                              END;

                                                   CaptionML=ENU=Skip Line If Element Not Blank }
  }
  KEYS
  {
    {    ;E-Mail Code,Line No.,Element No.        ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Field@1000000000 : Record 2000000041;
      EMailLine@1000000001 : Record 14000902;
      EMailHeader@1000000002 : Record 14000901;
      EMailMappingTable@1000000003 : Record 14000904;
      EMailCommentLine@1000000013 : Record 14000910;
      EMailComment@1000000014 : Page 14000921;
      SalesOrderEMail@1000000004 : Report 14000901;
      SalesShipmentEMail@1000000005 : Report 14000902;
      SalesInvoiceEMail@1000000006 : Report 14000903;
      BillOfLadingEMail@1000000007 : Report 14000908;
      CustomerStatementEMail@1000000008 : Report 14000910;
      ContactEMail@1000000010 : Report 14000912;
      EMailListEntryEMail@1000000011 : Report 14000913;
      PurchaseEMail@1000000012 : Report 14000914;
      IssuedReminderEMail@1000000015 : Report 14000916;
      IssuedFinChargeMemoEMail@1000000016 : Report 14000918;
      PurchaseReceiptEMail@1240030000 : Report 14000920;
      PurchaseInvoiceEMail@1240030001 : Report 14000921;
      MfrRepStatementEmail@1000000020 : Report 51706;
      LocHdlgStatementEMail@1000000021 : Report 51707;
      SalesCrMemoEMail@1000000022 : Report 51020;
      TableFilter@1000000009 : Text[250];
      RecordNoSelectionStrMenu@1000000017 : Text[250];
      MaxRecordNo@1000000019 : Integer;
      Selection@1000000018 : Integer;
      Text001@1001 : TextConst 'ENU=Only table %1 are available for mapping in a %2 E-Mail.';
      Text002@1002 : TextConst 'ENU=Maximum Record No. is %1.';
      Text003@1003 : TextConst 'ENU=Only 1 is available.';
      Text004@1004 : TextConst 'ENU=This can only be set for E-Mail Line Elements.';
      Text005@1005 : TextConst 'ENU=%1 must be Decimal or Integer.';
      Text006@1006 : TextConst 'ENU=%1.COUNTER';

    PROCEDURE FieldDescription@1() : Text[250];
    BEGIN
      CASE TRUE OF
        "Virtual Field" <> "Virtual Field"::" ":
          EXIT(FORMAT("Virtual Field"));
        "Table ID" = 0:
          EXIT('');
        "Field ID" = 0:
          BEGIN
            IF "Table Name" = '' THEN
              CALCFIELDS("Table Name");
            EXIT(STRSUBSTNO(Text006,"Table Name"));
          END;
        ELSE BEGIN
          IF "Table Name" = '' THEN
            CALCFIELDS("Table Name");
          IF "Field Name" = '' THEN
            CALCFIELDS("Field Name");
          EXIT(STRSUBSTNO('"%1"."%2" (%3)',"Table Name","Field Name","Record No."));
        END;
      END;
    END;

    PROCEDURE GetEMailHeader@2();
    BEGIN
      IF EMailHeader.Code <> "E-Mail Code" THEN BEGIN
        EMailHeader.GET("E-Mail Code");

        CASE EMailHeader."E-Mail Usage" OF
          EMailHeader."E-Mail Usage"::"Sales Order":
            TableFilter := SalesOrderEMail.GetTableFilter;
          EMailHeader."E-Mail Usage"::"Sales Shipment":
            TableFilter := SalesShipmentEMail.GetTableFilter;
          EMailHeader."E-Mail Usage"::"Sales Invoice":
            TableFilter := SalesInvoiceEMail.GetTableFilter;
          EMailHeader."E-Mail Usage"::"Bill of Lading":
            TableFilter := BillOfLadingEMail.GetTableFilter;
          EMailHeader."E-Mail Usage"::"Customer Statement":
            TableFilter := CustomerStatementEMail.GetTableFilter;
          EMailHeader."E-Mail Usage"::"E-Mail List Mailing":
            TableFilter := EMailListEntryEMail.GetTableFilter;
          EMailHeader."E-Mail Usage"::"Contact Mailing":
            TableFilter := ContactEMail.GetTableFilter;
          EMailHeader."E-Mail Usage"::Purchase:
            TableFilter := PurchaseEMail.GetTableFilter;
          EMailHeader."E-Mail Usage"::"Issued Reminder":
            TableFilter := IssuedReminderEMail.GetTableFilter;
          EMailHeader."E-Mail Usage"::"Issued Fin. Charge Memo":
            TableFilter := IssuedFinChargeMemoEMail.GetTableFilter;
          EMailHeader."E-Mail Usage"::"Purchase Receipt":
            TableFilter := PurchaseReceiptEMail.GetTableFilter;
          EMailHeader."E-Mail Usage"::"Purchase Invoice":
            TableFilter := PurchaseInvoiceEMail.GetTableFilter;
          // <TPZ92, TPZ143>
          EMailHeader."E-Mail Usage"::"Mfr. Rep. Statement":
            TableFilter := MfrRepStatementEmail.GetTableFilter;
          EMailHeader."E-Mail Usage"::"Location Hdlg. Statement":
            TableFilter := LocHdlgStatementEMail.GetTableFilter;
          EMailHeader."E-Mail Usage"::"Sales Credit Memo":
            TableFilter := SalesCrMemoEMail.GetTableFilter;
          // </TPZ92, TPZ143>
          ELSE
            TableFilter := '';
        END;
      END;
    END;

    PROCEDURE LookupComment@3();
    BEGIN
      EMailCommentLine.RESET;
      EMailCommentLine.SETRANGE("Table ID",DATABASE::"E-Mail Element");
      EMailCommentLine.SETRANGE(Code,"E-Mail Code");
      EMailCommentLine.SETRANGE("Integer 1","Line No.");
      EMailCommentLine.SETRANGE("Integer 2","Element No.");
      CLEAR(EMailComment);
      EMailComment.SETTABLEVIEW(EMailCommentLine);
      EMailComment.RUNMODAL;
    END;

    PROCEDURE GetRecordNoSelectionStrMenu@8();
    VAR
      Text@1000000000 : Text[250];
    BEGIN
      GetEMailHeader;

      CASE EMailHeader."E-Mail Usage" OF
        EMailHeader."E-Mail Usage"::"Sales Order":
         RecordNoSelectionStrMenu := SalesOrderEMail.GetRecordNoStrMenu("Table ID");
        EMailHeader."E-Mail Usage"::"Sales Shipment":
         RecordNoSelectionStrMenu := SalesShipmentEMail.GetRecordNoStrMenu("Table ID");
        EMailHeader."E-Mail Usage"::"Sales Invoice":
         RecordNoSelectionStrMenu := SalesInvoiceEMail.GetRecordNoStrMenu("Table ID");
        EMailHeader."E-Mail Usage"::"Bill of Lading":
         RecordNoSelectionStrMenu := BillOfLadingEMail.GetRecordNoStrMenu("Table ID");
        EMailHeader."E-Mail Usage"::"Customer Statement":
         RecordNoSelectionStrMenu := CustomerStatementEMail.GetRecordNoStrMenu("Table ID");
        EMailHeader."E-Mail Usage"::"E-Mail List Mailing":
         RecordNoSelectionStrMenu := EMailListEntryEMail.GetRecordNoStrMenu("Table ID");
        EMailHeader."E-Mail Usage"::"Contact Mailing":
         RecordNoSelectionStrMenu := ContactEMail.GetRecordNoStrMenu("Table ID");
        EMailHeader."E-Mail Usage"::Purchase:
         RecordNoSelectionStrMenu := PurchaseEMail.GetRecordNoStrMenu("Table ID");
        EMailHeader."E-Mail Usage"::"Issued Reminder":
         RecordNoSelectionStrMenu := IssuedReminderEMail.GetRecordNoStrMenu("Table ID");
        EMailHeader."E-Mail Usage"::"Issued Fin. Charge Memo":
         RecordNoSelectionStrMenu := IssuedFinChargeMemoEMail.GetRecordNoStrMenu("Table ID");
        EMailHeader."E-Mail Usage"::"Purchase Receipt":
         RecordNoSelectionStrMenu := PurchaseReceiptEMail.GetRecordNoStrMenu("Table ID");
        EMailHeader."E-Mail Usage"::"Purchase Invoice":
         RecordNoSelectionStrMenu := PurchaseInvoiceEMail.GetRecordNoStrMenu("Table ID");
        // <TPZ92, TPZ143>
        EMailHeader."E-Mail Usage"::"Mfr. Rep. Statement":
          RecordNoSelectionStrMenu := MfrRepStatementEmail.GetRecordNoStrMenu("Table ID");
        EMailHeader."E-Mail Usage"::"Location Hdlg. Statement":
          RecordNoSelectionStrMenu := LocHdlgStatementEMail.GetRecordNoStrMenu("Table ID");
        EMailHeader."E-Mail Usage"::"Sales Credit Memo":
          RecordNoSelectionStrMenu := SalesCrMemoEMail.GetRecordNoStrMenu("Table ID");
        // </TPZ92, TPZ143>
        ELSE
          RecordNoSelectionStrMenu := '';
      END;

      MaxRecordNo := 0;

      IF RecordNoSelectionStrMenu <> '' THEN BEGIN
        Text := RecordNoSelectionStrMenu;
        WHILE STRPOS(Text,',') <> 0 DO BEGIN
          MaxRecordNo := MaxRecordNo + 1;
          Text := COPYSTR(Text,STRPOS(Text,',') + 1);
        END;
      END;
    END;

    BEGIN
    {
      2015-06-11 TPZ92 TAKHMETO
        Handling of Mfr. Rep. Statement, Location Hdlg. Statement have been added
      2015-06-11 TPZ92 TAKHMETO
        Handling of Sales Credit Memo has been added
    }
    END.
  }
}

