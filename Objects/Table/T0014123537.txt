OBJECT Table 14123537 ES Summary Permission
{
  OBJECT-PROPERTIES
  {
    Date=09/14/17;
    Time=12:00:00 PM;
    Version List=ES1.41.42;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               UpdateObjectAccess;
             END;

    OnRename=BEGIN
               UpdateObjectAccess;
             END;

    CaptionML=ENU=Summary Permission;
    LookupPageID=Page14123569;
    DrillDownPageID=Page14123569;
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=" ,Database Login,User,Permission Group,Permission Set,Windows Group,Recording,Live Database Login,Live User,Live Permission Set";
                                                   OptionString=[ ,Database Login,Windows Login,Role Group,Role,Windows Group,Recording,Live Database Login,Live Windows Login,Live Role];
                                                   NotBlank=Yes }
    { 2   ;   ;Code                ;Code50        ;CaptionML=ENU=Code;
                                                   NotBlank=Yes }
    { 3   ;   ;Object Type         ;Option        ;OnValidate=BEGIN
                                                                UpdateObjectAccess;
                                                              END;

                                                   CaptionML=ENU=Object Type;
                                                   OptionCaptionML=ENU=TableData,Table,Form,Report,Dataport,Codeunit,XMLport,MenuSuite,Page,Query,System;
                                                   OptionString=TableData,Table,Form,Report,Dataport,Codeunit,XMLport,MenuSuite,Page,Query,System }
    { 4   ;   ;Object ID           ;Integer       ;TableRelation="ES Object Information"."Object ID" WHERE (Object Type=FIELD(Object Type));
                                                   OnValidate=BEGIN
                                                                UpdateObjectAccess;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Object ID }
    { 5   ;   ;Company Name        ;Text30        ;TableRelation="ES Company".Name;
                                                   CaptionML=ENU=Company Name }
    { 7   ;   ;Object Caption      ;Text249       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ES Object Information"."Object Caption" WHERE (Object Type=FIELD(Object Type),
                                                                                                                      Object ID=FIELD(Object ID)));
                                                   CaptionML=ENU=Object Caption;
                                                   Editable=No }
    { 8   ;   ;Read Permission     ;Option        ;InitValue=Yes;
                                                   CaptionML=ENU=Read Permission;
                                                   OptionCaptionML=ENU=" ,Yes,Indirect";
                                                   OptionString=[ ,Yes,Indirect] }
    { 9   ;   ;Insert Permission   ;Option        ;InitValue=Yes;
                                                   CaptionML=ENU=Insert Permission;
                                                   OptionCaptionML=ENU=" ,Yes,Indirect";
                                                   OptionString=[ ,Yes,Indirect] }
    { 10  ;   ;Modify Permission   ;Option        ;InitValue=Yes;
                                                   CaptionML=ENU=Modify Permission;
                                                   OptionCaptionML=ENU=" ,Yes,Indirect";
                                                   OptionString=[ ,Yes,Indirect] }
    { 11  ;   ;Delete Permission   ;Option        ;InitValue=Yes;
                                                   CaptionML=ENU=Delete Permission;
                                                   OptionCaptionML=ENU=" ,Yes,Indirect";
                                                   OptionString=[ ,Yes,Indirect] }
    { 12  ;   ;Execute Permission  ;Option        ;InitValue=Yes;
                                                   CaptionML=ENU=Execute Permission;
                                                   OptionCaptionML=ENU=" ,Yes,Indirect";
                                                   OptionString=[ ,Yes,Indirect] }
    { 13  ;   ;Security Filter     ;TableFilter   ;TableIDExpr="Object ID";
                                                   CaptionML=ENU=Security Filter }
    { 14  ;   ;Limited Access Object;Boolean      ;FieldClass=FlowField;
                                                   CalcFormula=Exist("ES Object Property" WHERE (Object Type=FIELD(Object Type),
                                                                                                 Object ID=FIELD(Object ID),
                                                                                                 Object Level Permissions=CONST(Yes)));
                                                   CaptionML=ENU=Limited Access Object;
                                                   Editable=No }
    { 15  ;   ;Limited License Object;Boolean     ;FieldClass=FlowField;
                                                   CalcFormula=Exist("ES Object Property" WHERE (Object Type=FIELD(Object Type),
                                                                                                 Object ID=FIELD(Object ID),
                                                                                                 Limited License Object=CONST(Yes)));
                                                   CaptionML=ENU=Limited License Object;
                                                   Editable=No }
    { 16  ;   ;Free Access Object  ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("ES Object Property" WHERE (Object Type=FIELD(Object Type),
                                                                                                 Object ID=FIELD(Object ID),
                                                                                                 Object Level Permissions=CONST(No),
                                                                                                 Limited License Object=CONST(No)));
                                                   CaptionML=ENU=Free Access Object;
                                                   Editable=No }
    { 17  ;   ;Security Filter Object;Boolean     ;FieldClass=FlowField;
                                                   CalcFormula=Exist("ES Object Property" WHERE (Object Type=FIELD(Object Type),
                                                                                                 Object ID=FIELD(Object ID),
                                                                                                 Security Filter Table=CONST(Yes)));
                                                   CaptionML=ENU=Security Filter Object;
                                                   Editable=No }
    { 18  ;   ;Limited User Included Object;Boolean;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Exist("ES Object Property" WHERE (Object Type=FIELD(Object Type),
                                                                                                 Object ID=FIELD(Object ID),
                                                                                                 Limited User Table Access=CONST(Included)));
                                                   CaptionML=ENU=Limited User Included Object;
                                                   Editable=No }
    { 19  ;   ;Segregation of Duties Object;Boolean;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Exist("ES Object Property" WHERE (Object Type=FIELD(Object Type),
                                                                                                 Object ID=FIELD(Object ID),
                                                                                                 Segregation of Duties=CONST(Yes)));
                                                   CaptionML=ENU=Segregation of Duties Object;
                                                   Editable=No }
    { 20  ;   ;From Role Group ID  ;Code20        ;TableRelation="ES Role Group";
                                                   CaptionML=ENU=From Permission Group ID }
    { 21  ;   ;From Role ID        ;Code20        ;TableRelation="ES Role";
                                                   OnLookup=VAR
                                                              ESRole@1000000000 : Record 14123505;
                                                              Role@1000000001 : Record 2000000004;
                                                            BEGIN
                                                              TESTFIELD("From Role ID");

                                                              CASE Type OF
                                                                Type::"Live Database Login",Type::"Live Windows Login",Type::"Live Role":
                                                                  BEGIN
                                                                    Role.RESET;
                                                                    Role.SETRANGE("Role ID","From Role ID");
                                                                    PAGE.RUNMODAL(PAGE::"ES Live Roles",Role);
                                                                  END;
                                                                ELSE BEGIN
                                                                  ESRole.RESET;
                                                                  ESRole.SETRANGE("Role ID","From Role ID");
                                                                  PAGE.RUNMODAL(0,ESRole);
                                                                END;
                                                              END;
                                                            END;

                                                   CaptionML=ENU=From Permission Set ID }
    { 22  ;   ;No. of Times Assigned;Integer      ;CaptionML=ENU=No. of Times Assigned }
    { 23  ;   ;From Company Group ID;Text30       ;TableRelation="ES Company Group";
                                                   CaptionML=ENU=From Company Group ID }
    { 24  ;   ;Quick Security Type ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ES Object Property"."Quick Security Type" WHERE (Object Type=FIELD(Object Type),
                                                                                                                        Object ID=FIELD(Object ID)));
                                                   CaptionML=ENU=Quick Security Type;
                                                   OptionCaptionML=ENU=" ,Read Only,No Access";
                                                   OptionString=[ ,Read Only,No Access];
                                                   Editable=No }
    { 25  ;   ;Object Code         ;Code20        ;CaptionML=ENU=Object Code;
                                                   Editable=No }
    { 26  ;   ;Object Access       ;Text20        ;CaptionML=ENU=Object Access;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Type,Code,Object Type,Object ID,Company Name,From Role Group ID,From Role ID,From Company Group ID;
                                                   Clustered=Yes }
    {    ;Type,Code,Company Name                   }
    {    ;Company Name,Object Type,Object ID       }
    {    ;Object Access                            }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1240520008 : TextConst 'ENU=Permissions';
      Text002@1001 : TextConst 'ENU=Wrong Data %1.';
      ESLogin@1000 : Record 14123527;
      ESWindowsLogin@1240520001 : Record 14123503;
      WindowsLogin@1240520002 : Record 2000000120;

    PROCEDURE CalculateFromPermissions@1000000002(VAR ESSummaryPerm@1000000005 : Record 14123537;ForType@1000000004 : Integer;ForCode@1000000003 : Code[50];ForObjectType@1000000002 : Integer;ForObjectID@1000000001 : Integer;ForZeroObject@1240520002 : Boolean;ForCompanyName@1000000000 : Text[30]);
    VAR
      ESLoginAccessControl@1000000006 : Record 14123528;
      ESLoginAccessControlTmp@1000000009 : TEMPORARY Record 14123528;
      ESCompanyGroupLine@1000000008 : Record 14123531;
      ESRoleGroupLine@1240520001 : Record 14123526;
      WindowsAccessControl@1000000011 : Record 2000000053;
      ExistsForCompany@1000000007 : Boolean;
    BEGIN
      CASE ForType OF
        Type::"Database Login",Type::"Windows Login":
          BEGIN
            ESLoginAccessControlTmp.RESET;
            ESLoginAccessControlTmp.DELETEALL;

            ESLoginAccessControl.RESET;
            ESLoginAccessControl.SETRANGE("Login Type",ForType);
            ESLoginAccessControl.SETRANGE("Login User ID",ForCode);
            ESLoginAccessControl.SETRANGE("No Permissions",FALSE);
            IF ESLoginAccessControl.FIND('-') THEN BEGIN
              REPEAT
                IF ESLoginAccessControl."Company Group ID" <> '' THEN BEGIN
                  ESCompanyGroupLine.RESET;
                  ESCompanyGroupLine.SETRANGE(
                    "Company Group ID",ESLoginAccessControl."Company Group ID");
                  ESCompanyGroupLine.SETRANGE("Company Name",ForCompanyName);
                  ExistsForCompany := ESCompanyGroupLine.FIND('-');
                END ELSE
                  ExistsForCompany := TRUE;

                IF ExistsForCompany THEN BEGIN
                  ESLoginAccessControlTmp := ESLoginAccessControl;
                  ESLoginAccessControlTmp.INSERT;
                END;
              UNTIL ESLoginAccessControl.NEXT = 0;
            END;

            IF ESLoginAccessControlTmp.FIND('-') THEN BEGIN
              REPEAT
                CASE ESLoginAccessControlTmp."Role Type" OF
                  ESLoginAccessControlTmp."Role Type"::Group:
                    CalcFromESRoleGroup(
                      ESSummaryPerm,ESLoginAccessControlTmp,ForType,ForCode,ForObjectType,
                      ForObjectID,ForZeroObject,ForCompanyName,ESLoginAccessControlTmp."Role ID");
                  ESLoginAccessControlTmp."Role Type"::Role:
                    CalcFromESRole(
                      ESSummaryPerm,ESLoginAccessControlTmp,ForType,ForCode,ForObjectType,
                      ForObjectID,ForZeroObject,ForCompanyName,ESLoginAccessControlTmp."Role ID");
                END;
              UNTIL ESLoginAccessControlTmp.NEXT = 0;
            END;
          END;
        Type::"Role Group":
          BEGIN
            ESRoleGroupLine.RESET;
            ESRoleGroupLine.SETRANGE("Role Group ID",ForCode);
            IF ESRoleGroupLine.FIND('-') THEN
              REPEAT
                CASE ESRoleGroupLine."Role Type" OF
                  ESRoleGroupLine."Role Type"::Role:
                    BEGIN
                      CLEAR(ESLoginAccessControlTmp);
                      ESLoginAccessControlTmp."Role Type" := ESLoginAccessControlTmp."Role Type"::Role;
                      ESLoginAccessControlTmp."Role ID" := ESRoleGroupLine."Role ID";
                      CalcFromESRole(
                        ESSummaryPerm,ESLoginAccessControlTmp,ForType,ForCode,ForObjectType,
                        ForObjectID,ForZeroObject,ForCompanyName,ESRoleGroupLine."Role ID");
                    END;
                  ESRoleGroupLine."Role Type"::Group:
                    BEGIN
                      CLEAR(ESLoginAccessControlTmp);
                      ESLoginAccessControlTmp."Role Type" := ESLoginAccessControlTmp."Role Type"::Group;
                      ESLoginAccessControlTmp."Role ID" := ESRoleGroupLine."Role ID";
                      CalcFromESRoleGroup(
                        ESSummaryPerm,ESLoginAccessControlTmp,ForType,ForCode,ForObjectType,
                        ForObjectID,ForZeroObject,ForCompanyName,ESRoleGroupLine."Role ID");
                    END;
                END;
              UNTIL ESRoleGroupLine.NEXT = 0;
          END;
        Type::"Live Windows Login":
          BEGIN
            WindowsAccessControl.RESET;
            WindowsAccessControl.SETRANGE("User Security ID",ForCode);
            WindowsAccessControl.SETFILTER("Company Name",'%1|%2','',ForCompanyName);
            IF WindowsAccessControl.FIND('-') THEN
              REPEAT
                CalcFromRole(
                  ESSummaryPerm,ForType,ForCode,ForObjectType,
                  ForObjectID,ForZeroObject,ForCompanyName,WindowsAccessControl."Role ID",
                  WindowsAccessControl."Company Name");
              UNTIL WindowsAccessControl.NEXT = 0;
          END;
        ELSE BEGIN
          Type := ForType;
          ERROR(Text002,STRSUBSTNO('%1=%2',FIELDCAPTION(Type),Type));
        END;
      END;
    END;

    LOCAL PROCEDURE CalcFromESRoleGroup@1000000003(VAR ESSummaryPerm@1000000006 : Record 14123537;ESLoginAccessControl@1000000007 : Record 14123528;ForType@1000000005 : Integer;ForCode@1000000004 : Code[50];ForObjectType@1000000003 : Integer;ForObjectID@1000000002 : Integer;ForZeroObject@1240520001 : Boolean;ForCompanyName@1000000001 : Text[30];CalcRoleID@1000000008 : Code[20]);
    VAR
      ESRoleGroupLine@1000000000 : Record 14123526;
    BEGIN
      ESRoleGroupLine.RESET;
      ESRoleGroupLine.SETRANGE("Role Group ID",CalcRoleID);
      IF ESRoleGroupLine.FIND('-') THEN
        REPEAT
          CASE ESRoleGroupLine."Role Type" OF
            ESRoleGroupLine."Role Type"::Group:
              CalcFromESRoleGroup(
                ESSummaryPerm,ESLoginAccessControl,ForType,ForCode,ForObjectType,
                ForObjectID,ForZeroObject,ForCompanyName,ESRoleGroupLine."Role ID");
            ESRoleGroupLine."Role Type"::Role:
              CalcFromESRole(
                ESSummaryPerm,ESLoginAccessControl,ForType,ForCode,ForObjectType,
                ForObjectID,ForZeroObject,ForCompanyName,ESRoleGroupLine."Role ID");
          END;
        UNTIL ESRoleGroupLine.NEXT = 0;
    END;

    LOCAL PROCEDURE CalcFromESRole@1000000001(VAR ESSummaryPerm@1000000006 : Record 14123537;ESLoginAccessControl@1000000007 : Record 14123528;ForType@1000000005 : Integer;ForCode@1000000004 : Code[50];ForObjectType@1000000003 : Integer;ForObjectID@1000000002 : Integer;ForZeroObject@1240520001 : Boolean;ForCompanyName@1000000001 : Text[30];CalcRoleID@1000000008 : Code[20]);
    VAR
      ESRolePermission@1000000000 : Record 14123506;
    BEGIN
      ESRolePermission.RESET;
      ESRolePermission.SETRANGE("Role ID",CalcRoleID);
      ESRolePermission.SETRANGE("Object Type",ForObjectType);
      IF ForZeroObject THEN
        ESRolePermission.SETFILTER("Object ID",'0|%1',ForObjectID)
      ELSE
        ESRolePermission.SETRANGE("Object ID",ForObjectID);
      IF ESRolePermission.FIND('-') THEN BEGIN
        ESSummaryPerm.INIT;
        ESSummaryPerm.Type := ForType;
        ESSummaryPerm.Code := ForCode;
        ESSummaryPerm."Object Type" := ForObjectType;
        ESSummaryPerm."Object ID" := ESRolePermission."Object ID";
        ESSummaryPerm."Company Name" := ForCompanyName;
        IF ESLoginAccessControl."Role Type" = ESLoginAccessControl."Role Type"::Group THEN
          ESSummaryPerm."From Role Group ID" := ESLoginAccessControl."Role ID"
        ELSE
          ESSummaryPerm."From Role Group ID" := '';
        ESSummaryPerm."From Role ID" := CalcRoleID;
        IF ESLoginAccessControl."Company Group ID" <> '' THEN
          ESSummaryPerm."From Company Group ID" := ESLoginAccessControl."Company Group ID"
        ELSE
          ESSummaryPerm."From Company Group ID" := '';
        ESSummaryPerm."Read Permission" := ESRolePermission."Read Permission";
        ESSummaryPerm."Insert Permission" := ESRolePermission."Insert Permission";
        ESSummaryPerm."Modify Permission" := ESRolePermission."Modify Permission";
        ESSummaryPerm."Delete Permission" := ESRolePermission."Delete Permission";
        ESSummaryPerm."Execute Permission" := ESRolePermission."Execute Permission";
        ESSummaryPerm."Security Filter" := ESRolePermission."Security Filter";
        ESSummaryPerm."No. of Times Assigned" := 1;
        IF NOT ESSummaryPerm.INSERT THEN BEGIN
          ESSummaryPerm.FIND('=');
          ESSummaryPerm."No. of Times Assigned" := ESSummaryPerm."No. of Times Assigned" + 1;
          ESSummaryPerm.MODIFY;
        END;
      END;
    END;

    LOCAL PROCEDURE CalcFromRole@1000000000(VAR ESSummaryPerm@1000000006 : Record 14123537;ForType@1000000005 : Integer;ForCode@1000000004 : Code[50];ForObjectType@1000000003 : Integer;ForObjectID@1000000002 : Integer;ForZeroObject@1240520001 : Boolean;ForCompanyName@1000000001 : Text[30];CalcRoleID@1000000008 : Code[20];CalcCompanyName@1000000007 : Text[30]);
    VAR
      RolePermission@1000000000 : Record 2000000005;
    BEGIN
      RolePermission.RESET;
      RolePermission.SETRANGE("Role ID",CalcRoleID);
      RolePermission.SETRANGE("Object Type",ForObjectType);
      IF ForZeroObject THEN
        RolePermission.SETFILTER("Object ID",'0|%1',ForObjectID)
      ELSE
        RolePermission.SETRANGE("Object ID",ForObjectID);
      IF RolePermission.FIND('-') THEN BEGIN
        ESSummaryPerm.INIT;
        ESSummaryPerm.Type := ForType;
        ESSummaryPerm.Code := ForCode;
        ESSummaryPerm."Object Type" := ForObjectType;
        ESSummaryPerm."Object ID" := RolePermission."Object ID";
        ESSummaryPerm."Company Name" := ForCompanyName;
        ESSummaryPerm."From Role Group ID" := '';
        ESSummaryPerm."From Role ID" := CalcRoleID;
        ESSummaryPerm."From Company Group ID" := CalcCompanyName;
        ESSummaryPerm."Read Permission" := RolePermission."Read Permission";
        ESSummaryPerm."Insert Permission" := RolePermission."Insert Permission";
        ESSummaryPerm."Modify Permission" := RolePermission."Modify Permission";
        ESSummaryPerm."Delete Permission" := RolePermission."Delete Permission";
        ESSummaryPerm."Execute Permission" := RolePermission."Execute Permission";
        ESSummaryPerm."Security Filter" := RolePermission."Security Filter";
        ESSummaryPerm."No. of Times Assigned" := 1;
        IF NOT ESSummaryPerm.INSERT THEN BEGIN
          ESSummaryPerm.FIND('=');
          ESSummaryPerm."No. of Times Assigned" := ESSummaryPerm."No. of Times Assigned" + 1;
          ESSummaryPerm.MODIFY;
        END;
      END;
    END;

    PROCEDURE FormatPermissionString@1240520009() : Text[30];
    VAR
      ESFormatPermssion@1240520008 : Codeunit 14123506;
    BEGIN
      EXIT(
        ESFormatPermssion.FormatPermissionString(
          "Read Permission","Insert Permission","Modify Permission","Delete Permission",
          "Execute Permission"));
    END;

    PROCEDURE UpdateCode@1240520004() : Text[250];
    BEGIN
      IF Type = Type::"Windows Login" THEN BEGIN
        IF Code <> ESLogin."User ID" THEN
          IF ESLogin.GET(ESLogin.Type::Windows,Code) THEN
            IF NOT ESWindowsLogin.GET(ESLogin."Login SID") THEN
              ESWindowsLogin."User Name" := ESLogin."User ID";

        EXIT(ESWindowsLogin."User Name");
      END;

      IF Type = Type::"Live Windows Login" THEN BEGIN
        IF Code <> FORMAT(WindowsLogin."User Security ID") THEN
          IF NOT WindowsLogin.GET(Code) THEN BEGIN
            WindowsLogin."User Security ID" := Code;
            WindowsLogin."User Name" := Code;
          END;

        EXIT(WindowsLogin."User Name");
      END;

      EXIT(Code);
    END;

    PROCEDURE UpdateObjectCaption@1240520008();
    VAR
      AllObjWithCaption@1240520008 : Record 2000000058;
    BEGIN
      IF "Object Caption" <> '' THEN
        EXIT;

      IF AllObjWithCaption.GET("Object Type","Object ID") THEN
        "Object Caption" := AllObjWithCaption."Object Caption";
    END;

    PROCEDURE UpdateObjectAccess@1240520003() : Code[20];
    VAR
      ESFormatPerm@1240520002 : Codeunit 14123506;
      ObjectID@1240520001 : Code[10];
    BEGIN
      ObjectID := DELCHR(FORMAT("Object ID"),'=',',.');

      CASE "Object Type" OF
        "Object Type"::TableData:
          "Object Access" := 'TD' + ObjectID;
        "Object Type"::Table:
          "Object Access" := 'TA' + ObjectID;
        "Object Type"::Form:
          "Object Access" := 'FO' + ObjectID;
        "Object Type"::Report:
          "Object Access" := 'RE' + ObjectID;
        "Object Type"::Dataport:
          "Object Access" := 'DA' + ObjectID;
        "Object Type"::Codeunit:
          "Object Access" := 'CO' + ObjectID;
        "Object Type"::XMLport:
          "Object Access" := 'XM' + ObjectID;
        "Object Type"::MenuSuite:
          "Object Access" := 'ME' + ObjectID;
        "Object Type"::Page:
          "Object Access" := 'PA' + ObjectID;
        "Object Type"::Query:
          "Object Access" := 'QU' + ObjectID;
        "Object Type"::System:
          "Object Access" := 'SY' + ObjectID;
      END;

      "Object Access" :=
        "Object Access" + ' ' +
        ESFormatPerm.FormatPermissionStringENU(
          "Read Permission","Insert Permission","Modify Permission","Delete Permission",
          "Execute Permission");
    END;

    PROCEDURE ObjectWhereUsed@1240520012();
    VAR
      ESObjectWhereUsed@1240520008 : Page 14123562;
    BEGIN
      CLEAR(ESObjectWhereUsed);
      ESObjectWhereUsed.InitObject("Object Type","Object ID");
      ESObjectWhereUsed.RUN;
    END;

    PROCEDURE FormatFromReference@1240520001() : Text[250];
    VAR
      ESWindowsLogin@1240520001 : Record 14123503;
      WindowsLogin@1240520002 : Record 2000000120;
    BEGIN
      CASE Type OF
        Type::"Windows Login":
          IF ESWindowsLogin.GET(Code) THEN
            EXIT(STRSUBSTNO('%1 %2',Type,ESWindowsLogin.ID))
          ELSE
            EXIT(STRSUBSTNO('%1 %2',Type,Code));
        Type::"Live Windows Login":
          IF WindowsLogin.GET(Code) THEN
            EXIT(STRSUBSTNO('%1 %2',Type,WindowsLogin."User Name"))
          ELSE
            EXIT(STRSUBSTNO('%1 %2',Type,Code));
        ELSE
          EXIT(STRSUBSTNO('%1 %2',Type,Code));
      END;
    END;

    PROCEDURE OpenFromReference@1240520002();
    VAR
      ESLogin@1240520001 : Record 14123527;
      ESRoleGroup@1240520002 : Record 14123525;
      ESRole@1240520003 : Record 14123505;
      ESRecording@1240520004 : Record 14123651;
      WindowsLogin@1240520006 : Record 2000000120;
      Role@1240520007 : Record 2000000004;
    BEGIN
      CASE Type OF
        Type::"Database Login":
          BEGIN
            ESLogin.RESET;
            ESLogin.SETRANGE(Type,ESLogin.Type::Database);
            ESLogin.SETRANGE("User ID",Code);
            ESLogin.FIND('-');
            PAGE.RUNMODAL(0,ESLogin);
          END;
        Type::"Windows Login":
          BEGIN
            ESLogin.RESET;
            ESLogin.SETRANGE(Type,ESLogin.Type::Windows);
            ESLogin.SETRANGE("User ID",Code);
            ESLogin.FIND('-');
            PAGE.RUNMODAL(0,ESLogin);
          END;
        Type::"Role Group":
          BEGIN
            ESRoleGroup.GET(Code);
            PAGE.RUNMODAL(0,ESRoleGroup);
          END;
        Type::Role:
          BEGIN
            ESRole.GET(Code);
            PAGE.RUNMODAL(0,ESRole);
          END;
        Type::"Windows Group":
          ;
        Type::Recording:
          BEGIN
            ESRecording.GET(Code);
            PAGE.RUNMODAL(0,ESRecording);
          END;
        Type::"Live Database Login":
          ;
        Type::"Live Windows Login":
          BEGIN
            WindowsLogin.GET(Code);
            PAGE.RUNMODAL(PAGE::"ES Live Windows Logins",WindowsLogin);
          END;
        Type::"Live Role":
          BEGIN
            Role.GET(Code);
            PAGE.RUNMODAL(PAGE::"ES Live Roles",Role);
          END;
        ELSE
          ;
      END;
    END;

    PROCEDURE FormatAsTextLine@1240520025(ShortPermissionText@1240520009 : Boolean;VAR ESTextLine@1240520011 : Record 14123520;NoOfRelatedKeyFields@1240520012 : Integer;CalcFlowFields@1240520013 : Boolean) : Boolean;
    VAR
      ESFormatMgt@1240520014 : Codeunit 14123505;
      RecRef@1240520010 : RecordRef;
    BEGIN
      ESFormatMgt.NewRecord(
        TABLECAPTION,FORMAT(Type),Code,FORMAT("Object Type"),FORMAT("Object ID"),
        "Company Name",'','','','','',5,NoOfRelatedKeyFields);
      IF NOT ShortPermissionText THEN BEGIN
        ESFormatMgt.AddField(FIELDCAPTION("Read Permission"),FORMAT("Read Permission"));
        ESFormatMgt.AddField(FIELDCAPTION("Insert Permission"),FORMAT("Insert Permission"));
        ESFormatMgt.AddField(FIELDCAPTION("Modify Permission"),FORMAT("Modify Permission"));
        ESFormatMgt.AddField(FIELDCAPTION("Delete Permission"),FORMAT("Delete Permission"));
        ESFormatMgt.AddField(FIELDCAPTION("Execute Permission"),FORMAT("Execute Permission"));
      END ELSE
        ESFormatMgt.AddField(Text001,FormatPermissionString);
      ESFormatMgt.AddField(FIELDCAPTION("Security Filter"),FORMAT("Security Filter"));

      IF CalcFlowFields THEN BEGIN
        CALCFIELDS(
          "Object Caption","Limited Access Object","Limited License Object",
          "Free Access Object");

        ESFormatMgt.AddFlowField(FIELDCAPTION("Object Caption"),FORMAT("Object Caption"));
        IF "Limited Access Object" THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Limited Access Object"),FORMAT("Limited Access Object"));
        IF "Limited License Object" THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Limited License Object"),FORMAT("Limited License Object"));
        IF "Free Access Object" THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Free Access Object"),FORMAT("Free Access Object"));
      END;

      RecRef.OPEN(DATABASE::"ES Summary Permission");
      RecRef.GETTABLE(Rec);
      ESFormatMgt.FormatNewESTextLine(ESTextLine,DATABASE::"ES Summary Permission",RecRef.RECORDID);

      EXIT(ESFormatMgt.NoTextOverflow);
    END;

    BEGIN
    END.
  }
}

