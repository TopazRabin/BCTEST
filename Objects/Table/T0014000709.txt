OBJECT Table 14000709 Packing Station
{
  OBJECT-PROPERTIES
  {
    Date=08/18/21;
    Time=[ 3:55:43 AM];
    Modified=Yes;
    Version List=SE0.60.15,3264;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               GetShippingSetup;
               IF "Ship-from Company" = '' THEN BEGIN
                 CompanyInfo.GET;
                 "Ship-from Company" := CompanyInfo."Ship-to Name";
                 "Ship-from Address" := CompanyInfo."Ship-to Address";
                 "Ship-from Address2" := CompanyInfo."Ship-to Address 2";
                 "Ship-from City" := CompanyInfo."Ship-to City";
                 "Ship-from State" := CompanyInfo."Ship-to County";
                 "Ship-from ZIP Code" := ShippingSetup.AdjustZIPCode(CompanyInfo."Ship-to Post Code");
                 "Ship-from Country Code" := '';
                 ShippingSetup.AdjustZIPStateCityCode(
                   "Ship-from ZIP Code","Ship-from State","Ship-from City","Ship-from Country Code");
                 "Ship-from Phone No." := CompanyInfo."Phone No.";
                 "Ship-from Contact" := CompanyInfo."Ship-to Contact";
                 "Ship-from Fax No." := CompanyInfo."Fax No.";

                 SetAllCommands(TRUE);
               END;
             END;

    CaptionML=ENU=Packing Station;
    LookupPageID=Page14000722;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=ENU=Code;
                                                   NotBlank=Yes }
    { 11  ;   ;Description         ;Text30        ;CaptionML=ENU=Description }
    { 13  ;   ;Print Shipment Report on Close;Boolean;
                                                   CaptionML=ENU=Print Shipment Report on Close }
    { 14  ;   ;Print Invoice Report on Close;Boolean;
                                                   CaptionML=ENU=Print Invoice Report on Close }
    { 15  ;   ;Show Order Comments if Exists;Boolean;
                                                   CaptionML=ENU=Show Order Comments if Exists }
    { 16  ;   ;Enter Quantities    ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT "Enter Quantities" THEN
                                                                  "Do Not Enter Quantity of One" := FALSE;
                                                              END;

                                                   CaptionML=ENU=Enter Quantities }
    { 17  ;   ;Always Enter Total Packages;Boolean;CaptionML=ENU=Always Enter Total Packages }
    { 18  ;   ;Create Barcode Conversion;Boolean  ;CaptionML=ENU=Create Barcode Conversion }
    { 19  ;   ;No Label Printer    ;Boolean       ;CaptionML=ENU=No Label Printer }
    { 20  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Shipping Comment Line" WHERE (Table ID=CONST(14000709),
                                                                                                    Code=FIELD(Code)));
                                                   CaptionML=ENU=Comment;
                                                   Editable=No }
    { 21  ;   ;Confirm on Errors   ;Boolean       ;CaptionML=ENU=Confirm on Errors }
    { 22  ;   ;Test Package No. on Close Ord.;Boolean;
                                                   CaptionML=ENU=Test Package No. on Close Ord. }
    { 23  ;   ;Do Not Enter Quantity of One;Boolean;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Enter Quantities");
                                                              END;

                                                   CaptionML=ENU=Do Not Enter Quantity of One }
    { 24  ;   ;Create Item Cross Reference;Boolean;CaptionML=ENU=Create Item Cross Reference }
    { 25  ;   ;Auto Post Pick      ;Boolean       ;CaptionML=ENU=Auto Post Pick }
    { 26  ;   ;Allow Item/Resource Lookup;Boolean ;CaptionML=ENU=Allow Item/Resource Lookup }
    { 27  ;   ;Change Posting Date on Close;Boolean;
                                                   CaptionML=ENU=Change Posting Date on Close }
    { 28  ;   ;Editable Address in Package;Boolean;CaptionML=ENU=Editable Address in Package }
    { 29  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Date Filter }
    { 31  ;   ;Manually Enter Weight;Boolean      ;CaptionML=ENU=Manually Enter Weight }
    { 32  ;   ;Manually Enter Value;Boolean       ;CaptionML=ENU=Manually Enter Value }
    { 33  ;   ;Rateshop Enter Weight;Boolean      ;CaptionML=ENU=Rateshop Enter Weight }
    { 34  ;   ;Rateshop Enter Value;Boolean       ;CaptionML=ENU=Rateshop Enter Value }
    { 35  ;   ;Rateshop Enter No. of Packages;Boolean;
                                                   CaptionML=ENU=Rateshop Enter No. of Packages }
    { 36  ;   ;Add Shipping to Document on;Option ;InitValue=Close Order;
                                                   CaptionML=ENU=Add Shipping to Document on;
                                                   OptionCaptionML=ENU=Close Package and Order,Close Order;
                                                   OptionString=Close Package and Order,Close Order }
    { 37  ;   ;Auto Create Pack. When No Det.;Boolean;
                                                   CaptionML=ENU=Auto Create Pack. When No Det. }
    { 38  ;   ;Reset Order Qty. When Opened;Boolean;
                                                   CaptionML=ENU=Reset Order Qty. When Opened }
    { 39  ;   ;Auto Fill Qty. to Handle;Boolean   ;CaptionML=ENU=Auto Fill Qty. to Handle }
    { 61  ;   ;Ship-from Company   ;Text50        ;CaptionML=ENU=Ship-from Company }
    { 62  ;   ;Ship-from Address   ;Text50        ;CaptionML=ENU=Ship-from Address }
    { 63  ;   ;Ship-from Address2  ;Text50        ;CaptionML=ENU=Ship-from Address2 }
    { 64  ;   ;Ship-from City      ;Text30        ;CaptionML=ENU=Ship-from City }
    { 65  ;   ;Ship-from State     ;Text30        ;CaptionML=ENU=Ship-from State }
    { 66  ;   ;Ship-from ZIP Code  ;Code20        ;TableRelation="Post Code".Code;
                                                   OnValidate=BEGIN
                                                                IF PostCode.GET("Ship-from ZIP Code") THEN
                                                                  "Ship-from City" := PostCode.City;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Ship-from ZIP Code }
    { 67  ;   ;Ship-from Country Code;Code10      ;TableRelation=Country/Region.Code;
                                                   CaptionML=ENU=Ship-from Country Code }
    { 68  ;   ;Ship-from Phone No. ;Text30        ;CaptionML=ENU=Ship-from Phone No. }
    { 69  ;   ;Ship-from Contact   ;Text50        ;CaptionML=ENU=Ship-from Contact }
    { 70  ;   ;Ship-from Fax No.   ;Text30        ;CaptionML=ENU=Ship-from Fax No. }
    { 71  ;   ;Scale Interface Code;Code10        ;TableRelation="Scale Interface";
                                                   CaptionML=ENU=Scale Interface Code }
    { 72  ;   ;Scale Update Interval (second);Integer;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Scale Interface Code");
                                                              END;

                                                   CaptionML=ENU=Scale Update Interval (second) }
    { 73  ;   ;Show What During Packing;Option    ;OnValidate=BEGIN
                                                                IF "Show What During Packing" = "Show What During Packing"::"Scale Weight" THEN BEGIN
                                                                  TESTFIELD("Scale Interface Code");
                                                                  TESTFIELD("Scale Update Interval (second)");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Show What During Packing;
                                                   OptionCaptionML=ENU=Net Weight,Gross Weight,Dimmed Weight,Volume,Scale Weight;
                                                   OptionString=Net Weight,Gross Weight,Dimmed Weight,Volume,Scale Weight }
    { 74  ;   ;Default Package Description;Text30 ;CaptionML=ENU=Default Package Description }
    { 75  ;   ;Accumulate Qty when Entered;Boolean;CaptionML=ENU=Accumulate Qty when Entered }
    { 76  ;   ;Open with Prepack   ;Boolean       ;CaptionML=ENU=Open with Prepack }
    { 77  ;   ;Ship-from E-Mail    ;Text80        ;CaptionML=ENU=Ship-from E-Mail }
    { 78  ;   ;Ship-from Airport Code;Code10      ;CaptionML=ENU=Ship-from Airport Code }
    { 79  ;   ;Open BOL on Close Order;Boolean    ;CaptionML=ENU=Open BOL on Close Order }
    { 80  ;   ;Open Bill of Lading Form;Option    ;CaptionML=ENU=Open Bill of Lading Form;
                                                   OptionCaptionML=ENU=Bill of Lading,Worksheet,Bill of Lading Scanning;
                                                   OptionString=Bill of Lading,Worksheet,Bill of Lading Scanning }
    { 81  ;   ;Phone No. to use If Blank;Text30   ;CaptionML=ENU=Phone No. to use If Blank }
    { 82  ;   ;Open Order after Close;Boolean     ;CaptionML=ENU=Open Order after Close }
    { 83  ;   ;SHELL Command Type  ;Option        ;InitValue=.NET Automation;
                                                   OnValidate=BEGIN
                                                                IF ("Label Printing" = "Label Printing"::"Printer Name") AND
                                                                   ("SHELL Command Type" <> "SHELL Command Type"::".NET Automation") THEN BEGIN
                                                                   Rec."SHELL Command Type" := xRec."SHELL Command Type";
                                                                   MESSAGE(Text005,
                                                                     FIELDCAPTION("SHELL Command Type"),'.NET Automation',
                                                                     FIELDCAPTION("Label Printing"), "Label Printing");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=SHELL Command Type;
                                                   OptionCaptionML=ENU=One String,With Parameters,Oyster OCX,.NET Automation;
                                                   OptionString=One String,With Parameters,Oyster OCX,.NET Automation }
    { 84  ;   ;Sales Order Close Action;Option    ;OnValidate=BEGIN
                                                                IF "Sales Order Close Action" <> xRec."Sales Order Close Action" THEN BEGIN
                                                                  GetShippingSetup;
                                                                  IF ShippingSetup."Location Packing" THEN BEGIN
                                                                    PackingStation.RESET;
                                                                    PackingStation.SETFILTER(Code,'<>%1',Code);
                                                                    PackingStation.SETFILTER(
                                                                      "Sales Order Close Action",'<>0&<>%1',"Sales Order Close Action");
                                                                    IF PackingStation.FIND('-') THEN
                                                                      MESSAGE(Text001);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Sales Order Close Action;
                                                   OptionCaptionML=ENU=" ,Ship,Ship and Invoice";
                                                   OptionString=[ ,Ship,Ship and Invoice] }
    { 85  ;   ;Sales Invoice Close Action;Option  ;OnValidate=BEGIN
                                                                IF "Sales Invoice Close Action" <> xRec."Sales Invoice Close Action" THEN BEGIN
                                                                  GetShippingSetup;
                                                                  IF ShippingSetup."Location Packing" THEN BEGIN
                                                                    PackingStation.RESET;
                                                                    PackingStation.SETFILTER(Code,'<>%1',Code);
                                                                    PackingStation.SETFILTER(
                                                                      "Sales Invoice Close Action",'<>0&<>%1',"Sales Invoice Close Action");
                                                                    IF PackingStation.FIND('-') THEN
                                                                      MESSAGE(Text001);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Sales Invoice Close Action;
                                                   OptionCaptionML=ENU=" ,Invoice";
                                                   OptionString=[ ,Invoice] }
    { 86  ;   ;Purchase Cr. Memo Close Action;Option;
                                                   OnValidate=BEGIN
                                                                IF "Purchase Cr. Memo Close Action" <> xRec."Purchase Cr. Memo Close Action" THEN BEGIN
                                                                  GetShippingSetup;
                                                                  IF ShippingSetup."Location Packing" THEN BEGIN
                                                                    PackingStation.RESET;
                                                                    PackingStation.SETFILTER(Code,'<>%1',Code);
                                                                    PackingStation.SETFILTER(
                                                                      "Purchase Cr. Memo Close Action",'<>0&<>%1',"Purchase Cr. Memo Close Action");
                                                                    IF PackingStation.FIND('-') THEN
                                                                      MESSAGE(Text001);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Purchase Cr. Memo Close Action;
                                                   OptionCaptionML=ENU=" ,Invoice";
                                                   OptionString=[ ,Invoice] }
    { 87  ;   ;Return Order Close Action;Option   ;OnValidate=BEGIN
                                                                IF "Return Order Close Action" <> xRec."Return Order Close Action" THEN BEGIN
                                                                  GetShippingSetup;
                                                                  IF ShippingSetup."Location Packing" THEN BEGIN
                                                                    PackingStation.RESET;
                                                                    PackingStation.SETFILTER(Code,'<>%1',Code);
                                                                    PackingStation.SETFILTER(
                                                                      "Return Order Close Action",'<>0&<>%1',"Return Order Close Action");
                                                                    IF PackingStation.FIND('-') THEN
                                                                      MESSAGE(Text001);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Return Order Close Action;
                                                   OptionCaptionML=ENU=" ,Ship,Ship and Invoice";
                                                   OptionString=[ ,Ship,Ship and Invoice] }
    { 88  ;   ;Transfer Order Close Action;Option ;OnValidate=BEGIN
                                                                IF "Transfer Order Close Action" <> xRec."Transfer Order Close Action" THEN BEGIN
                                                                  GetShippingSetup;
                                                                  IF ShippingSetup."Location Packing" THEN BEGIN
                                                                    PackingStation.RESET;
                                                                    PackingStation.SETFILTER(Code,'<>%1',Code);
                                                                    PackingStation.SETFILTER(
                                                                      "Transfer Order Close Action",'<>0&<>%1',"Transfer Order Close Action");
                                                                    IF PackingStation.FIND('-') THEN
                                                                      MESSAGE(Text001);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Transfer Order Close Action;
                                                   OptionCaptionML=ENU=" ,Ship";
                                                   OptionString=[ ,Ship] }
    { 89  ;   ;Simple Multi Document Posting;Boolean;
                                                   CaptionML=ENU=Simple Multi Document Posting }
    { 90  ;   ;Register Pick on Future Close;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Register Pick on Future Close" THEN
                                                                  TESTFIELD("Auto Post Pick");
                                                              END;

                                                   CaptionML=ENU=Register Pick on Future Close }
    { 91  ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   OnValidate=BEGIN
                                                                IF "Location Code" <> '' THEN BEGIN
                                                                  GetShippingSetup;
                                                                  ShippingSetup.TESTFIELD("Location Packing");

                                                                  IF "Location Code" <> xRec."Location Code" THEN BEGIN
                                                                    Location.GET("Location Code");
                                                                    "Ship-from Company" := Location.Name;
                                                                    "Ship-from Address" := Location.Address;
                                                                    "Ship-from Address2" := Location."Address 2";
                                                                    "Ship-from City" := Location.City;
                                                                    "Ship-from State" := Location.County;
                                                                    "Ship-from ZIP Code" := Location."Post Code";
                                                                    "Ship-from Country Code" := Location."Country/Region Code";
                                                                    "Ship-from Phone No." := Location."Phone No.";
                                                                    "Ship-from Contact" := Location.Contact;
                                                                    "Ship-from Fax No." := Location."Fax No.";
                                                                    "Ship-from E-Mail" := Location."E-Mail";
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Location Code }
    { 92  ;   ;Default F3 Option   ;Option        ;CaptionML=ENU=Default F3 Option;
                                                   OptionCaptionML=ENU=" ,Create Package,Create Package Print,Create Standard Pack,Create Standard Pack Print,Pack All,Pack All Print,Pack Remaining,Pack Remaining Print,,,,,,,,,,,,,Custom 1,Custom 2,Custom 3";
                                                   OptionString=[ ,Create Package,Create Package Print,Create Standard Pack,Create Standard Pack Print,Pack All,Pack All Print,Pack Remaining,Pack Remaining Print,,,,,,,,,,,,,Custom 1,Custom 2,Custom 3] }
    { 93  ;   ;Default Shift+F3 Option;Option     ;CaptionML=ENU=Default Shift+F3 Option;
                                                   OptionCaptionML=ENU=" ,Create Package,Create Package Print,Create Standard Pack,Create Standard Pack Print,Pack All,Pack All Print,Pack Remaining,Pack Remaining Print,,,,,,,,,,,,,Custom 1,Custom 2,Custom 3";
                                                   OptionString=[ ,Create Package,Create Package Print,Create Standard Pack,Create Standard Pack Print,Pack All,Pack All Print,Pack Remaining,Pack Remaining Print,,,,,,,,,,,,,Custom 1,Custom 2,Custom 3] }
    { 94  ;   ;Default Ctrl+F3 Option;Option      ;CaptionML=ENU=Default Ctrl+F3 Option;
                                                   OptionCaptionML=ENU=" ,Create Package,Create Package Print,Create Standard Pack,Create Standard Pack Print,Pack All,Pack All Print,Pack Remaining,Pack Remaining Print,,,,,,,,,,,,,Custom 1,Custom 2,Custom 3";
                                                   OptionString=[ ,Create Package,Create Package Print,Create Standard Pack,Create Standard Pack Print,Pack All,Pack All Print,Pack Remaining,Pack Remaining Print,,,,,,,,,,,,,Custom 1,Custom 2,Custom 3] }
    { 95  ;   ;Default Alt+F3 Option;Option       ;CaptionML=ENU=Default Alt+F3 Option;
                                                   OptionCaptionML=ENU=" ,Create Package,Create Package Print,Create Standard Pack,Create Standard Pack Print,Pack All,Pack All Print,Pack Remaining,Pack Remaining Print,,,,,,,,,,,,,Custom 1,Custom 2,Custom 3";
                                                   OptionString=[ ,Create Package,Create Package Print,Create Standard Pack,Create Standard Pack Print,Pack All,Pack All Print,Pack Remaining,Pack Remaining Print,,,,,,,,,,,,,Custom 1,Custom 2,Custom 3] }
    { 96  ;   ;Renumber not Requiring Prepack;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=ENU=Renumber not Requiring Prepack }
    { 97  ;   ;View Opt on Close in Fast Pack;Boolean;
                                                   CaptionML=ENU=View Opt on Close in Fast Pack }
    { 98  ;   ;Auto Post Pick with No Action;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=ENU=Auto Post Pick with No Action }
    { 99  ;   ;Check Name Addr. on Open Order;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=ENU=Check Name Addr. on Open Order }
    { 100 ;   ;Confirm Pack Line Scan. Close;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=ENU=Confirm Pack Line Scan. Close }
    { 101 ;   ;Add Package Command ;Boolean       ;CaptionML=ENU=Add Package Command }
    { 102 ;   ;Close Package Command;Boolean      ;CaptionML=ENU=Close Package Command }
    { 103 ;   ;Close Package Print Command;Boolean;CaptionML=ENU=Close Package Print Command }
    { 104 ;   ;Close Order Command ;Boolean       ;CaptionML=ENU=Close Order Command }
    { 105 ;   ;Close Order Print Command;Boolean  ;CaptionML=ENU=Close Order Print Command }
    { 106 ;   ;Close Order Force Command;Boolean  ;CaptionML=ENU=Close Order Force Command }
    { 107 ;   ;Fix Package Address Command;Boolean;CaptionML=ENU=Fix Package Address Command }
    { 108 ;   ;Pack All Command    ;Boolean       ;CaptionML=ENU=Pack All Command }
    { 110 ;   ;Print Std. Package Labels Cmd.;Boolean;
                                                   CaptionML=ENU=Print Std. Package Labels Cmd. }
    { 111 ;   ;Print UCC Labels Command;Boolean   ;CaptionML=ENU=Print UCC Labels Command }
    { 112 ;   ;Rate Shop Package Command;Boolean  ;CaptionML=ENU=Rate Shop Package Command }
    { 113 ;   ;Rate Shop Order Command;Boolean    ;CaptionML=ENU=Rate Shop Order Command }
    { 114 ;   ;Total Package Count Command;Boolean;CaptionML=ENU=Total Package Count Command }
    { 115 ;   ;Override Package Value Command;Boolean;
                                                   CaptionML=ENU=Override Package Value Command }
    { 116 ;   ;Override Package Volume Cmd.;Boolean;
                                                   CaptionML=ENU=Override Package Volume Cmd. }
    { 117 ;   ;Override Package Weight Cmd.;Boolean;
                                                   CaptionML=ENU=Override Package Weight Cmd. }
    { 118 ;   ;View Order Command  ;Boolean       ;CaptionML=ENU=View Order Command }
    { 119 ;   ;View Order Options Cmd.;Boolean    ;CaptionML=ENU=View Order Options Cmd. }
    { 120 ;   ;Copy Last Package Command;Boolean  ;CaptionML=ENU=Copy Last Package Command }
    { 121 ;   ;Copy Last Package Print Cmd.;Boolean;
                                                   CaptionML=ENU=Copy Last Package Print Cmd. }
    { 122 ;   ;Close Order Print Force Cmd.;Boolean;
                                                   CaptionML=ENU=Close Order Print Force Cmd. }
    { 123 ;   ;Add All Packages Command;Boolean   ;CaptionML=ENU=Add All Packages Command }
    { 124 ;   ;View Order Comments Cmd.;Boolean   ;CaptionML=ENU=View Order Comments Cmd. }
    { 126 ;   ;Delete All Packages Command;Boolean;CaptionML=ENU=Delete All Packages Command }
    { 127 ;   ;Print All Shipping Labels Cmd.;Boolean;
                                                   CaptionML=ENU=Print All Shipping Labels Cmd. }
    { 128 ;   ;Zero Scale Command  ;Boolean       ;CaptionML=ENU=Zero Scale Command }
    { 129 ;   ;Create Std. Packages Cmd.;Boolean  ;CaptionML=ENU=Create Std. Packages Cmd. }
    { 130 ;   ;Create Std. Packages Print Cmd;Boolean;
                                                   CaptionML=ENU=Create Std. Packages Print Cmd }
    { 131 ;   ;Create Extra Package Command;Boolean;
                                                   CaptionML=ENU=Create Extra Package Command }
    { 132 ;   ;Missing Order Lines Command;Boolean;CaptionML=ENU=Missing Order Lines Command }
    { 133 ;   ;Create Misc. Package Command;Boolean;
                                                   CaptionML=ENU=Create Misc. Package Command }
    { 134 ;   ;Create Manifest Command;Boolean    ;CaptionML=ENU=Create Manifest Command }
    { 135 ;   ;Add Multiple Packages Command;Boolean;
                                                   CaptionML=ENU=Add Multiple Packages Command }
    { 136 ;   ;Xtra Option Command ;Boolean       ;CaptionML=ENU=Xtra Option Command }
    { 137 ;   ;Set Prepack Command ;Boolean       ;CaptionML=ENU=Set Prepack Command }
    { 138 ;   ;Open Package Command;Boolean       ;CaptionML=ENU=Open Package Command }
    { 139 ;   ;Change Shipping Agent Command;Boolean;
                                                   CaptionML=ENU=Change Shipping Agent Command }
    { 140 ;   ;Change Ship. Agent Print Cmd.;Boolean;
                                                   CaptionML=ENU=Change Ship. Agent Print Cmd. }
    { 141 ;   ;Bill of Lading Command;Boolean     ;CaptionML=ENU=Bill of Lading Command }
    { 142 ;   ;Add Selected Packages Command;Boolean;
                                                   CaptionML=ENU=Add Selected Packages Command }
    { 143 ;   ;Pack Remaining Command;Boolean     ;CaptionML=ENU=Pack Remaining Command }
    { 144 ;   ;Reset Order Quantity Command;Boolean;
                                                   CaptionML=ENU=Reset Order Quantity Command }
    { 145 ;   ;Toggle Always Enter Qty. Cmd.;Boolean;
                                                   CaptionML=ENU=Toggle Always Enter Qty. Cmd. }
    { 146 ;   ;List Orders Command ;Boolean       ;CaptionML=ENU=List Orders Command }
    { 147 ;   ;View Item Command   ;Boolean       ;CaptionML=ENU=View Item Command }
    { 148 ;   ;Main Menu Command   ;Boolean       ;CaptionML=ENU=Main Menu Command }
    { 149 ;   ;Set Order Quantity Command;Boolean ;CaptionML=ENU=Set Order Quantity Command }
    { 150 ;   ;Copy Last Label(s) Command;Boolean ;CaptionML=ENU=Copy Last Label(s) Command }
    { 151 ;   ;View Whse. Activity Lines Cmd.;Boolean;
                                                   CaptionML=ENU=View Whse. Activity Lines Cmd. }
    { 152 ;   ;View Whse. Shipment Lines Cmd.;Boolean;
                                                   CaptionML=ENU=View Whse. Shipment Lines Cmd. }
    { 153 ;   ;Fast Pack Command   ;Boolean       ;CaptionML=ENU=Fast Pack Command }
    { 154 ;   ;View Invt. Activity Lines Cmd.;Boolean;
                                                   CaptionML=ENU=View Invt. Activity Lines Cmd. }
    { 155 ;   ;Print All Labels Command;Boolean   ;CaptionML=ENU=Print All Labels Command }
    { 156 ;   ;Print All labels And Docs. Cmd;Boolean;
                                                   CaptionML=ENU=Print All labels And Docs. Cmd }
    { 157 ;   ;Renumber All Packages Command;Boolean;
                                                   CaptionML=ENU=Renumber All Packages Command }
    { 158 ;   ;Renumber All Pcks. Print Cmd.;Boolean;
                                                   CaptionML=ENU=Renumber All Pcks. Print Cmd. }
    { 159 ;   ;Scan Missing Serial Lot Cmd.;Boolean;
                                                   CaptionML=ENU=Scan Missing Serial Lot Cmd. }
    { 160 ;   ;Scan All Serial Lot Command;Boolean;CaptionML=ENU=Scan All Serial Lot Command }
    { 161 ;   ;Enter Tote Command  ;Boolean       ;CaptionML=ENU=Enter Tote Command }
    { 162 ;   ;Select Tote Command ;Boolean       ;CaptionML=ENU=Select Tote Command }
    { 163 ;   ;Fedex Master Label Command;Boolean ;CaptionML=ENU=Fedex Master Label Command }
    { 164 ;   ;Fedex Master Label Print Cmd.;Boolean;
                                                   CaptionML=ENU=Fedex Master Label Print Cmd. }
    { 165 ;   ;Export All Shipping Labels;Boolean ;CaptionML=ENU=Export All Shipping Labels }
    { 166 ;   ;Print Item/Resource Label;Boolean  ;CaptionML=ENU=Print Item/Resource Label }
    { 167 ;   ;Export All Item/Res. Labels;Boolean;CaptionML=ENU=Export All Item/Res. Labels }
    { 168 ;   ;Export All Labels   ;Boolean       ;CaptionML=ENU=Export All Labels }
    { 169 ;   ;Future Close Order Command;Boolean ;CaptionML=ENU=Future Close Order Command }
    { 170 ;   ;View Bill of Lading Command;Boolean;CaptionML=ENU=View Bill of Lading Command }
    { 171 ;   ;Future Close Order Force Cmd.;Boolean;
                                                   CaptionML=ENU=Future Close Order Force Cmd. }
    { 172 ;   ;Print Bill of Lading Label Cmd;Boolean;
                                                   CaptionML=ENU=Print Bill of Lading Label Cmd }
    { 173 ;   ;Print RF-ID Label Command;Boolean  ;CaptionML=ENU=Print RF-ID Label Command }
    { 174 ;   ;Register Whse. Pick Command;Boolean;CaptionML=ENU=Register Whse. Pick Command }
    { 175 ;   ;View Warehouse Statistics Cmd.;Boolean;
                                                   CaptionML=ENU=View Warehouse Statistics Cmd. }
    { 176 ;   ;Select Wave Pick Order Command;Boolean;
                                                   CaptionML=ENU=Select Wave Pick Order Command }
    { 201 ;   ;Auto Delete Label Buffer File;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=ENU=Auto Delete Label Buffer File }
    { 202 ;   ;Carrier Packing Station Code;Code10;TableRelation="Carrier Packing Station";
                                                   CaptionML=ENU=Carrier Packing Station Code }
    { 203 ;   ;Do Not Import Label File;Boolean   ;CaptionML=ENU=Do Not Import Label File }
    { 204 ;   ;Scanning Form ID    ;Integer       ;InitValue=14000716;
                                                   TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Page));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Scanning Form Name");
                                                              END;

                                                   CaptionML=ENU=Scanning Form ID }
    { 205 ;   ;Scanning Form Name  ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObj."Object Name" WHERE (Object Type=CONST(Page),
                                                                                                  Object ID=FIELD(Scanning Form ID)));
                                                   CaptionML=ENU=Scanning Form Name;
                                                   Editable=No }
    { 206 ;   ;Show Warehouse Stat. on Open;Boolean;
                                                   CaptionML=ENU=Show Warehouse Stat. on Open }
    { 207 ;   ;Do not Show BOL on Create;Boolean  ;CaptionML=ENU=Do not Show BOL on Create }
    { 208 ;   ;RTC Scanning Form ID;Integer       ;InitValue=14050138;
                                                   TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Page));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Scanning Form Name");
                                                              END;

                                                   CaptionML=ENU=RTC Scanning Form ID }
    { 209 ;   ;RTC Scanning Form Name;Text30      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObj."Object Name" WHERE (Object Type=CONST(Page),
                                                                                                  Object ID=FIELD(RTC Scanning Form ID)));
                                                   CaptionML=ENU=RTC Scanning Form Name;
                                                   Editable=No }
    { 210 ;   ;Text Editor         ;Text100       ;InitValue=C:\Windows\Notepad.exe;
                                                   CaptionML=ENU=Text Editor }
    { 211 ;   ;Manually Enter Dimensions;Boolean  ;CaptionML=ENU=Manually Enter Dimensions }
    { 50000;  ;Label Printer Type  ;Option        ;CaptionML=ENU=UPS Label Printer Type;
                                                   OptionCaptionML=ENU=" ,Eltron Orion,Zebra";
                                                   OptionString=[ ,Eltron Orion,Zebra];
                                                   Description=TM 073015 }
    { 50001;  ;CubiScan Connected  ;Boolean       ;Description=EB 052616 TPZ1296 }
    { 50002;  ;Print Inner Label   ;Boolean       ;DataClassification=ToBeClassified;
                                                   Description=TPZ3264 }
    { 14000720;;Multi Document Command;Boolean    ;CaptionML=ENU=Multi Document Command }
    { 14000721;;Multi Document Lookup Cmd;Boolean ;CaptionML=ENU=Multi Document Lookup Cmd }
    { 14000781;;Export License No. ;Code20        ;CaptionML=ENU=Export License No. }
    { 14000782;;Export License Expiration Date;Date;
                                                   CaptionML=ENU=Export License Expiration Date }
    { 14000783;;Export License Exception;Code4    ;CaptionML=ENU=Export License Exception }
    { 14000784;;Create FedEx Freight BOL;Boolean  ;CaptionML=ENU=Create FedEx Freight BOL }
    { 14000785;;FedEx Freight Palletized;Boolean  ;CaptionML=ENU=FedEx Freight Palletized }
    { 14000821;;Add Sales Orders BOL Command;Boolean;
                                                   CaptionML=ENU=Add Sales Orders BOL Command }
    { 14000822;;Add Sales Shipments BOL Cmd.;Boolean;
                                                   CaptionML=ENU=Add Sales Shipments BOL Cmd. }
    { 14000823;;Add Posted Packages BOL Cmd.;Boolean;
                                                   CaptionML=ENU=Add Posted Packages BOL Cmd. }
    { 14000824;;Close Bill of Lading BOL Cmd.;Boolean;
                                                   CaptionML=ENU=Close Bill of Lading BOL Cmd. }
    { 14000825;;Close BillOfLad Print BOL Cmd.;Boolean;
                                                   CaptionML=ENU=Close BillOfLad Print BOL Cmd. }
    { 14000826;;New Bill of Lading BOL Command;Boolean;
                                                   CaptionML=ENU=New Bill of Lading BOL Command }
    { 14000827;;Close Bill of Lading Action;Option;CaptionML=ENU=Close Bill of Lading Action;
                                                   OptionCaptionML=ENU=" ,Release,Summary Release,Post";
                                                   OptionString=[ ,Release,Summary Release,Post] }
    { 14000828;;Show Document BOL Warnings;Boolean;CaptionML=ENU=Show Document BOL Warnings }
    { 14000829;;Show Posted Doc. BOL Warnings;Boolean;
                                                   CaptionML=ENU=Show Posted Doc. BOL Warnings }
    { 14000830;;Show Package BOL Warnings;Boolean ;CaptionML=ENU=Show Package BOL Warnings }
    { 14000831;;Change Shipping Agent BOL Cmd.;Boolean;
                                                   CaptionML=ENU=Change Shipping Agent BOL Cmd. }
    { 14000832;;Show Worksheet BOL Command;Boolean;CaptionML=ENU=Show Worksheet BOL Command }
    { 14000841;;Std. Pack. Label Printer Port;Code100;
                                                   CaptionML=ENU=Std. Pack. Label Printer }
    { 14000842;;UCC/UPC Label Printer Port;Code100;CaptionML=ENU=UCC/UPC Label Printer }
    { 14000844;;Label Buffer File  ;Text100       ;CaptionML=ENU=Label Buffer File }
    { 14000961;;RF-ID Label Printer Port;Code100  ;CaptionML=ENU=RF-ID Label Printer }
    { 14000981;;Export Document Command;Boolean   ;CaptionML=ENU=Export Document Command }
    { 14000982;;View Export Document Command;Boolean;
                                                   CaptionML=ENU=View Export Document Command }
    { 14000984;;No Preview on AES Submit;Boolean  ;CaptionML=ENU=No Preview on AES Submit }
    { 14000985;;No AES Required Command;Boolean   ;CaptionML=ENU=No AES Required Command }
    { 14000986;;Export License Type;Code10        ;TableRelation="Export Document Validation".Code WHERE (Table=CONST(License));
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Export License Type }
    { 14000987;;Export Information Code;Code10    ;TableRelation="Export Document Validation".Code WHERE (Table=CONST(Export));
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Export Information Code }
    { 14000988;;Do Not Show Exp Doc On Create;Boolean;
                                                   CaptionML=ENU=Do Not Show Exp Doc On Create }
    { 14000989;;Export Doc. Temp. Files Dir.;Text200;
                                                   CaptionML=ENU=Export Doc. Temp. Files Dir. }
    { 14000990;;Federal ID No.     ;Text30        ;CaptionML=ENU=Federal ID No. }
    { 14000993;;Require AES ITN for Export;Boolean;CaptionML=ENU=Require AES ITN for Export }
    { 14000995;;Update Export Doc Detail Cmd.;Boolean;
                                                   CaptionML=ENU=Update Export Doc Detail Cmd. }
    { 14000996;;Label Printing     ;Option        ;OnValidate=BEGIN
                                                                IF ("Label Printing" = "Label Printing"::"Printer Name") AND
                                                                   ("SHELL Command Type" <> "SHELL Command Type"::".NET Automation") THEN BEGIN
                                                                   MESSAGE(Text005,
                                                                     FIELDCAPTION("SHELL Command Type"),'.NET Automation',
                                                                     FIELDCAPTION("Label Printing"), "Label Printing");
                                                                   "Label Printing" := "Label Printing"::Ports;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Label Printing;
                                                   OptionCaptionML=ENU=Ports,Printer Name;
                                                   OptionString=Ports,Printer Name }
    { 14050501;;Local US Post Office Zip Code;Code20;
                                                   CaptionML=ENU=Local US Post Office Zip Code }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Code,Description,Location Code           }
  }
  CODE
  {
    VAR
      PostCode@1000000000 : Record 225;
      CompanyInfo@1000000001 : Record 79;
      ShippingSetup@1240030000 : Record 14000707;
      PackingStation@1240030001 : Record 14000709;
      Text001@1001 : TextConst 'ENU=When using Location Packing is it recommended to use the same Close Action.';
      Location@1240030002 : Record 14;
      Text002@1240030004 : TextConst 'ENU=Printing Label.';
      ShipperTypeMgt@1240030007 : Codeunit 14000711;
      DotNETAutomationMgt@1240030003 : Codeunit 37031001;
      ShippingSetupRetrieved@1240030006 : Boolean;
      Text003@1002 : TextConst 'ENU=cannot be %1 when using this command.';
      Text101@1240030009 : TextConst 'ENU=Cannot be used on the Service Tier';
      Text102@1240030008 : TextConst 'ENU=%1 must be %2 when used on the Service Tier';
      Text004@1240020000 : TextConst 'ENU=The Label Printer Port cannot be set to the shared printer name, %1. The Label Printer Port needs to be an LPT port when using %2, %3.';
      Text005@1240020001 : TextConst 'ENU=The %1 must be %2 when %3 is set to %4.';
      PrintFrom@1240020002 : 'PACKING,RECEIVE';

    PROCEDURE SetAllCommands@1(NewValue@1240030000 : Boolean);
    BEGIN
      "Add Package Command" := NewValue;
      "Close Package Command" := NewValue;
      "Close Package Print Command" := NewValue;
      "Close Order Command" := NewValue;
      "Close Order Print Command" := NewValue;
      "Close Order Force Command" := NewValue;
      "Fix Package Address Command" := NewValue;
      "Pack All Command" := NewValue;
      "Print Std. Package Labels Cmd." := NewValue;
      "Print UCC Labels Command" := NewValue;
      "Rate Shop Package Command" := NewValue;
      "Rate Shop Order Command" := NewValue;
      "Total Package Count Command" := NewValue;
      "Override Package Value Command" := NewValue;
      "Override Package Value Command" := NewValue;
      "Override Package Volume Cmd." := NewValue;
      "Override Package Weight Cmd." := NewValue;
      "View Order Command" := NewValue;
      "View Order Options Cmd." := NewValue;
      "Copy Last Package Command" := NewValue;
      "Copy Last Package Print Cmd." := NewValue;
      "Close Order Print Force Cmd." := NewValue;
      "Add All Packages Command" := NewValue;
      "View Order Comments Cmd." := NewValue;
      "Delete All Packages Command" := NewValue;
      "Print All Shipping Labels Cmd." := NewValue;
      "Zero Scale Command" := NewValue;
      "Create Std. Packages Cmd." := NewValue;
      "Create Std. Packages Print Cmd" := NewValue;
      "Create Extra Package Command" := NewValue;
      "Missing Order Lines Command" := NewValue;
      "Create Misc. Package Command" := NewValue;
      "Create Manifest Command" := NewValue;
      "Add Multiple Packages Command" := NewValue;
      "Multi Document Command" := NewValue;
      "Xtra Option Command" := NewValue;
      "Set Prepack Command" := NewValue;
      "Open Package Command" := NewValue;
      "Change Shipping Agent Command" := NewValue;
      "Change Ship. Agent Print Cmd." := NewValue;
      "Bill of Lading Command" := NewValue;
      "Add Selected Packages Command" := NewValue;
      "Pack Remaining Command" := NewValue;
      "Reset Order Quantity Command" := NewValue;
      "Toggle Always Enter Qty. Cmd." := NewValue;
      "List Orders Command" := NewValue;
      "View Item Command":= NewValue;
      "Main Menu Command" := NewValue;
      "Set Order Quantity Command" := NewValue;
      "Copy Last Label(s) Command" := NewValue;
      "View Whse. Activity Lines Cmd." := NewValue;
      "View Whse. Shipment Lines Cmd." := NewValue;
      "Fast Pack Command" := NewValue;
      "View Invt. Activity Lines Cmd." := NewValue;
      "Print All Labels Command" := NewValue;
      "Print All labels And Docs. Cmd" := NewValue;
      "Renumber All Packages Command" := NewValue;
      "Renumber All Pcks. Print Cmd." := NewValue;
      "Fedex Master Label Command" := NewValue;
      "Fedex Master Label Print Cmd." := NewValue;
      "Scan Missing Serial Lot Cmd." := NewValue;
      "Scan All Serial Lot Command" := NewValue;
      "Enter Tote Command" := NewValue;
      "Select Tote Command" := NewValue;
      "Export All Shipping Labels" := NewValue;
      "Print Item/Resource Label" := NewValue;
      "Export All Item/Res. Labels" := NewValue;
      "Export All Labels" := NewValue;
      "Future Close Order Command" := NewValue;
      "View Bill of Lading Command" := NewValue;
      "Multi Document Lookup Cmd" := NewValue;
      "Future Close Order Force Cmd." := NewValue;
      "Print Bill of Lading Label Cmd" := NewValue;
      "Print RF-ID Label Command" := NewValue;
      "Export Document Command" := NewValue;
      "View Export Document Command" := NewValue;
      "No AES Required Command" := NewValue;
      "Register Whse. Pick Command" := NewValue;
      "View Warehouse Statistics Cmd." := NewValue;
      "Select Wave Pick Order Command" := NewValue;
      "Update Export Doc Detail Cmd." := NewValue;

      "Add Sales Orders BOL Command" := NewValue;
      "Add Sales Shipments BOL Cmd." := NewValue;
      "Add Posted Packages BOL Cmd." := NewValue;
      "Close Bill of Lading BOL Cmd." := NewValue;
      "Close BillOfLad Print BOL Cmd." := NewValue;
      "New Bill of Lading BOL Command" := NewValue;
      "Change Shipping Agent BOL Cmd." := NewValue;
      "Show Worksheet BOL Command" := NewValue;
      "Create FedEx Freight BOL" := NewValue;
      "FedEx Freight Palletized" := NewValue;
    END;

    PROCEDURE GetPackingStation@2();
    VAR
      UserSetup@1000000000 : Record 91;
      ComputerUserSetup@1240030000 : Record 14000724;
    BEGIN
      IF Code <> '' THEN
        EXIT;

      GetShippingSetup;

      ComputerUserSetup.RESET;
      ComputerUserSetup.SETRANGE("Computer Name",ComputerUserSetup.GetComputerName);
      ComputerUserSetup.SETFILTER("User ID",'%1|%2','',USERID);
      IF ComputerUserSetup.FIND('+') THEN BEGIN
        ComputerUserSetup.TESTFIELD("Packing Station Code");
        GET(ComputerUserSetup."Packing Station Code");
      END ELSE
        IF UserSetup.GET(USERID) THEN BEGIN
          UserSetup.TESTFIELD("Packing Station");
          GET(UserSetup."Packing Station");
        END ELSE BEGIN
          ShippingSetup.TESTFIELD("Default Packing Station");
          GET(ShippingSetup."Default Packing Station");
        END;

      IF ShippingSetup."Location Packing" THEN
        TESTFIELD("Location Code");
    END;

    PROCEDURE GetUserPackingStation@1000000001(NewUserID@1000000000 : Code[50]);
    VAR
      UserSetup@1000000002 : Record 91;
      ComputerUserSetup@1000000001 : Record 14000724;
    BEGIN
      // <TPZ162>
      IF Code <> '' THEN
        EXIT;

      GetShippingSetup;

      ComputerUserSetup.RESET;
      ComputerUserSetup.SETRANGE("Computer Name",ComputerUserSetup.GetComputerName);
      ComputerUserSetup.SETFILTER("Computer Name",'<>%1','');
      ComputerUserSetup.SETFILTER("User ID",'%1|%2','',NewUserID);
      IF ComputerUserSetup.FIND('+') THEN BEGIN
        ComputerUserSetup.TESTFIELD("Packing Station Code");
        GET(ComputerUserSetup."Packing Station Code");
      END ELSE
        IF UserSetup.GET(NewUserID) THEN BEGIN
          UserSetup.TESTFIELD("Packing Station");
          GET(UserSetup."Packing Station");
        END ELSE BEGIN
          ShippingSetup.TESTFIELD("Default Packing Station");
          GET(ShippingSetup."Default Packing Station");
        END;

      IF ShippingSetup."Location Packing" THEN
        TESTFIELD("Location Code");
      // </TPZ162>
    END;

    PROCEDURE GetCODRule@3(ShippingAgent@1240030000 : Record 291) : Integer;
    BEGIN
      GetShippingSetup;
      EXIT(ShipperTypeMgt.PackingStationGetCODRule(Rec,ShippingAgent,ShippingSetup));
    END;

    PROCEDURE GetAlwaysConfirmCODAmount@4(ShippingAgent@1240030000 : Record 291) : Boolean;
    BEGIN
      GetShippingSetup;
      EXIT(ShipperTypeMgt.PackStationGetAlwaysConfCODAmt(Rec,ShippingAgent,ShippingSetup));
    END;

    PROCEDURE PrintLabelFile@1240030001(BufferFileName@1240030008 : Text[250];PrinterPort@1240030007 : Code[100];NoLabelPrinter@1240030001 : Boolean;AutoDeleteLabelBufferFile@1240030000 : Boolean);
    VAR
      ReturnCode@1240030002 : Integer;
    BEGIN
      IF NOT NoLabelPrinter THEN BEGIN
        CASE "SHELL Command Type" OF
          "SHELL Command Type"::".NET Automation":
            DotNETAutomationMgt.PrintLabel(BufferFileName,PrinterPort,PrintFrom::PACKING);
          ELSE
            IF ISSERVICETIER THEN
              ERROR(
                Text102,FIELDCAPTION("SHELL Command Type"),
                "SHELL Command Type"::".NET Automation");
        END;
      END;

      IF AutoDeleteLabelBufferFile THEN
        ERASE(BufferFileName);
    END;

    PROCEDURE PrintPDFFile@1240030007(BufferFileName@1240030008 : Text[250];PrinterPort@1240030007 : Code[100];NoLabelPrinter@1240030001 : Boolean);
    VAR
      PDFMgt@1240030003 : Codeunit 14000716;
    BEGIN
      IF NOT NoLabelPrinter THEN BEGIN
        PDFMgt.PrintPDFFile(BufferFileName);
      END;
    END;

    PROCEDURE PrintLabel@1240030003(BufferFileName@1240030008 : Text[250];PrinterPort@1240030007 : Code[100];NoLabelPrinter@1240030003 : Boolean;AutoDeleteLabelBufferFile@1240030002 : Boolean;ReferenceNo@1240030001 : Code[20];LabelHeader@1240030000 : Record 14000841);
    VAR
      ReturnCode@1240030004 : Integer;
    BEGIN
      IF NOT NoLabelPrinter THEN BEGIN
        CASE "SHELL Command Type" OF
          "SHELL Command Type"::".NET Automation":
            DotNETAutomationMgt.PrintLabel(BufferFileName,PrinterPort,PrintFrom::PACKING);
          ELSE
            ERROR(
              Text102,FIELDCAPTION("SHELL Command Type"),
              "SHELL Command Type"::".NET Automation");
        END;
      END;

      IF AutoDeleteLabelBufferFile THEN
        ERASE(BufferFileName);
    END;

    PROCEDURE ViewFile@1240030005(FileName@1240030000 : Text[250]);
    VAR
      Parameters@1240030001 : Text[250];
      ToFolder@1000000000 : Text[250];
      ToFilter@1000000001 : Text[250];
      ToFile@1000000002 : Text[250];
    BEGIN
      IF ISSERVICETIER THEN BEGIN
        ToFolder := 'C:\';
        ToFilter := 'Text file(*.txt)|*.txt';
        ToFile := FileName;
        DOWNLOAD(FileName,'Open file',ToFolder,ToFilter,ToFile);
      END ELSE BEGIN
        TESTFIELD("Text Editor");
        Parameters := STRSUBSTNO('"%1"', FileName);
        SHELL("Text Editor", Parameters);
      END;
    END;

    PROCEDURE HyperlinkToFile@1240030006(FileName@1240030000 : Text[250]);
    VAR
      ReturnCode@1240030001 : Integer;
    BEGIN
      HYPERLINK(FileName);
    END;

    LOCAL PROCEDURE GetShippingSetup@22();
    BEGIN
      IF NOT ShippingSetupRetrieved THEN BEGIN
        ShippingSetup.GET;
        ShippingSetupRetrieved := TRUE;
      END;
    END;

    PROCEDURE CalcLabelFileName@1240030004(FilenameTemplate@1240030000 : Text[250]) : Text[250];
    VAR
      ActiveSession@1240020000 : Record 2000000110;
      NoOfParameters@1240030002 : Integer;
      ReplaceValues@1240030001 : ARRAY [9] OF Text[30];
    BEGIN
      IF STRPOS(FilenameTemplate,'%1') > 0 THEN BEGIN
        NoOfParameters := 1;
        ReplaceValues[1] := DELCHR(USERID,'=','\');
      END;

      IF STRPOS(FilenameTemplate,'%2') > 0 THEN BEGIN
        ActiveSession.RESET;
        ActiveSession.SETRANGE("User ID",USERID);
        ActiveSession.FIND('-');

        NoOfParameters := 2;
        ReplaceValues[2] := DELCHR(FORMAT(ActiveSession."Session ID"),'=',',.');
      END;

      CASE NoOfParameters OF
        1:
          EXIT(STRSUBSTNO(FilenameTemplate,ReplaceValues[1]));
        2:
          EXIT(STRSUBSTNO(FilenameTemplate,ReplaceValues[1],ReplaceValues[2]));
        ELSE
          EXIT(FilenameTemplate);
      END;
    END;

    PROCEDURE DisplayMap@1240031001();
    VAR
      MapPoint@1001 : Record 800;
      MapMgt@1000 : Codeunit 802;
    BEGIN
      IF MapPoint.FIND('-') THEN
        MapMgt.MakeSelection(DATABASE::"Packing Station",GETPOSITION);
    END;

    PROCEDURE GetAvailablePrinterNames@1240020027();
    VAR
      WSHNetwork@1240020004 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{093FF999-1EA0-4079-9525-9614C3504B74}:'Windows Script Host Object Model'.WshNetwork";
      i@1240020003 : Integer;
      j@1240020002 : Integer;
      Printernames@1240020001 : ARRAY [10] OF Text[1024];
      CRLF@1240020000 : Text[2];
      k@1240020005 : Integer;
    BEGIN
      CLEAR(WSHNetwork);
      CREATE(WSHNetwork,FALSE,TRUE);

      CRLF[1] := 13;
      CRLF[2] := 10;

      i := 1;  //Odd # items are printer unc names
      k := 1;

      IF WSHNetwork.EnumPrinterConnections.Count > 0 THEN BEGIN
        REPEAT
          IF (STRLEN(Printernames[k]) + STRLEN(FORMAT(WSHNetwork.EnumPrinterConnections.Item(i))) + 4) >
            MAXSTRLEN(Printernames[k]) THEN
            k += 1;

          Printernames[k] := Printernames[k] + FORMAT(WSHNetwork.EnumPrinterConnections.Item(i)) + CRLF;
          i += 2;
        UNTIL (i > WSHNetwork.EnumPrinterConnections.Count) OR (k = 10)
      END;

      MESSAGE('%1%2%3%4%5%6%7%8%9%10',
        Printernames[1],Printernames[2],Printernames[3],Printernames[4],Printernames[5],Printernames[6],
        Printernames[7],Printernames[8],Printernames[9],Printernames[10]);
    END;

    BEGIN
    {
      2015-09-29 TPZ162 TAKHMETO
        GetUserPackingStation function has been added
      001 TPZ3264 PKS 08182021 Added new field to print inner label.
    }
    END.
  }
}

