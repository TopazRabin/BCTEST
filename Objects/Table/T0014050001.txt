OBJECT Table 14050001 UPSlink Setup
{
  OBJECT-PROPERTIES
  {
    Date=07/13/20;
    Time=12:00:00 PM;
    Version List=SE0.62;
  }
  PROPERTIES
  {
    OnInsert=VAR
               CompanyInfo@1240030000 : Record 79;
               CarrierPackingStation@1240030001 : Record 14000729;
             BEGIN
               CompanyInfo.GET;

               "Billing Company Name" := COPYSTR(CompanyInfo.Name,1,MAXSTRLEN("Billing Company Name"));
               "Billing Address" := COPYSTR(CompanyInfo.Address,1,MAXSTRLEN("Billing Address"));
               "Billing Address 2" := COPYSTR(CompanyInfo."Address 2",1,MAXSTRLEN("Billing Address 2"));
               "Billing City" := COPYSTR(CompanyInfo.City,1,MAXSTRLEN("Billing City"));
               "Billing Zip Code" := COPYSTR(CompanyInfo."Post Code",1,MAXSTRLEN("Billing Zip Code"));
               "Billing State" := COPYSTR(CompanyInfo.County,1,MAXSTRLEN("Billing State"));
               "Rate Version" := COPYSTR(UPSlinkVersion,STRLEN(UPSlinkVersion)-3,4);

               CarrierPackingStation.RESET;
               CarrierPackingStation.SETFILTER("UPS Shipping Agent Account No.",'<>%1','');
               IF CarrierPackingStation.FIND('-') THEN
                 "Primary Account No." := CarrierPackingStation."UPS Shipping Agent Account No.";
             END;

    CaptionML=ENU=UPSlink Setup;
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key }
    { 10  ;   ;Primary Account No. ;Code20        ;TableRelation="UPSlink Shipping Agent Account"."Account No.";
                                                   CaptionML=ENU=Primary Account No. }
    { 11  ;   ;UPSlink EULA Accepted;Boolean      ;CaptionML=ENU=UPSlink EULA Accepted }
    { 12  ;   ;Commissioned        ;Boolean       ;CaptionML=ENU=Commissioned;
                                                   Editable=No }
    { 14  ;   ;Mailbox ID          ;Text50        ;CaptionML=ENU=Mailbox ID;
                                                   Editable=No }
    { 20  ;   ;Rate Version        ;Text10        ;OnValidate=VAR
                                                                UPSlinkMgt@1240030000 : Codeunit 14050002;
                                                                Window@1240030001 : Dialog;
                                                                MsgType@1240030003 : 'Create,Set,Delete,Info,InfoDelete';
                                                                MsgSection@1240030002 : 'Installation,Shipper,Workstation';
                                                              BEGIN
                                                                IF Commissioned AND
                                                                   ("Rate Version" <> xRec."Rate Version")
                                                                THEN BEGIN
                                                                  UPSlinkMgt.CheckUPSlinkInstall(Demo);
                                                                  Window.OPEN(STRSUBSTNO(Text005,FIELDCAPTION("Rate Version"),"Rate Version"));
                                                                  UPSlinkMgt.SendPCConfig(
                                                                    "Primary Account No.","Primary Account No." + 'RV' + "Rate Version",'rateVersion',"Rate Version",
                                                                    MsgSection::Installation,MsgType::Set);
                                                                  Window.CLOSE;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Rate Version;
                                                   Editable=Yes }
    { 21  ;   ;PhoneList Version   ;Text10        ;CaptionML=ENU=PhoneList Version;
                                                   Editable=No }
    { 22  ;   ;Manifest Version    ;Option        ;InitValue=UPSlink 1.00;
                                                   CaptionML=ENU=Manifest Version;
                                                   OptionCaptionML=ENU=UPSlink 1.00;
                                                   OptionString=UPSlink 1.00 }
    { 23  ;   ;WW Validation Data Version;Text10  ;CaptionML=ENU=WW Validation Data Version;
                                                   Editable=No }
    { 30  ;   ;Billing Company Name;Text35        ;CaptionML=ENU=Billing Company Name }
    { 31  ;   ;Billing Address     ;Text35        ;CaptionML=ENU=Billing Address }
    { 32  ;   ;Billing Address 2   ;Text35        ;CaptionML=ENU=Billing Address 2 }
    { 33  ;   ;Billing Address 3   ;Text35        ;CaptionML=ENU=Billing Address 3 }
    { 34  ;   ;Billing City        ;Text30        ;CaptionML=ENU=Billing City }
    { 35  ;   ;Billing Contact     ;Text35        ;CaptionML=ENU=Billing Contact }
    { 36  ;   ;Billing UPS Country Code;Code10    ;TableRelation=Country/Region.Code;
                                                   CaptionML=ENU=Billing UPS Country Code }
    { 37  ;   ;Billing Phone       ;Text30        ;CaptionML=ENU=Billing Phone }
    { 38  ;   ;Billing Zip Code    ;Code20        ;TableRelation="Post Code".Code;
                                                   OnValidate=VAR
                                                                PostCode@1240030000 : Record 225;
                                                              BEGIN
                                                                IF PostCode.GET("Billing Zip Code") THEN
                                                                  "Billing City" := PostCode.City;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Billing Zip Code }
    { 39  ;   ;Billing State       ;Code5         ;CaptionML=ENU=Billing State }
    { 40  ;   ;Manual Commercial Invoice;Boolean  ;CaptionML=ENU=Manual Commercial Invoice }
    { 41  ;   ;ISC Alc. Bev. Serial No.;Code20    ;CaptionML=ENU=ISC Alc. Bev. Serial No.;
                                                   Editable=No }
    { 42  ;   ;Air Fuel Surcharge  ;Decimal       ;CaptionML=ENU=Air Fuel Surcharge;
                                                   BlankZero=Yes }
    { 43  ;   ;Ground Fuel Surcharge;Decimal      ;CaptionML=ENU=Ground Fuel Surcharge;
                                                   BlankZero=Yes }
    { 44  ;   ;Surcharge Type      ;Option        ;InitValue=Percent;
                                                   CaptionML=ENU=Surcharge Type;
                                                   OptionCaptionML=ENU=" ,Amount,Percent";
                                                   OptionString=[ ,Amount,Percent] }
    { 45  ;   ;Online Address Validation;Boolean  ;CaptionML=ENU=Online Address Validation;
                                                   Editable=No }
    { 46  ;   ;Process Val. Resp. Upon Rcpt.;Boolean;
                                                   CaptionML=ENU=Process Val. Resp. Upon Rcpt. }
    { 47  ;   ;Online Addr. Val. Result;Option    ;CaptionML=ENU=Online Addr. Val. Result;
                                                   OptionCaptionML=ENU=Notify,Discard,Auto Update;
                                                   OptionString=Notify,Discard,Auto Update }
    { 48  ;   ;Paperless Inv. Country Version;Text20;
                                                   CaptionML=ENU=Paperless Inv. Country Version }
    { 49  ;   ;UPS Comm. Software Version;Text10  ;CaptionML=ENU=UPS Comm. Software Version;
                                                   Editable=No }
    { 50  ;   ;Lanham UPSlink Version;Text10      ;CaptionML=ENU=Lanham UPSlink Version }
    { 100 ;   ;UPS Label Cert. Submission;Boolean ;CaptionML=ENU=UPS Label Cert. Submission }
    { 101 ;   ;Demo                ;Boolean       ;CaptionML=ENU=Demo }
    { 102 ;   ;UPSlink Password    ;Text30        ;CaptionML=ENU=UPSlink Password }
    { 103 ;   ;Manually Apply Files Over 1M;Boolean;
                                                   CaptionML=ENU=Manually Apply Files Over 1M }
    { 104 ;   ;Set Registry Before OCX Call;Boolean;
                                                   CaptionML=ENU=Set Registry Before OCX Call }
    { 105 ;   ;UPSlink Integration ;Option        ;InitValue=.NET Automation;
                                                   CaptionML=ENU=UPSlink Integration;
                                                   OptionCaptionML=ENU=OCX,.NET Automation;
                                                   OptionString=OCX,.NET Automation }
    { 106 ;   ;Dim. Weight Divisor Version;Text10 ;CaptionML=ENU=Dim. Weight Divisor Version }
    { 107 ;   ;3Party Bill-to Country Version;Text10;
                                                   CaptionML=ENU=3Party Bill-to Country Version }
    { 108 ;   ;Letter Limits Version;Text10       ;CaptionML=ENU=Letter Limits Version }
    { 109 ;   ;Comm. Inv. Removal Ctry Ver.;Text8 ;CaptionML=ENU=Comm. Inv. Removal Ctry Ver.;
                                                   Editable=No }
    { 110 ;   ;Billable Wgt Ctry Exempt Ver.;Text8;CaptionML=ENU=Billable Wgt Ctry Exempt Ver.;
                                                   Editable=No }
    { 111 ;   ;Terms and Conditions Version;Text10;CaptionML=ENU=Terms and Conditions Version;
                                                   Editable=No }
    { 112 ;   ;Manually Read UPSlink Mail;Boolean ;CaptionML=ENU=Manually Read UPSlink Mail }
    { 113 ;   ;Peak Surcharge Version;Text8       ;CaptionML=ENU=Peak Surcharge Version }
    { 114 ;   ;Peak Surcharge Date Range Ver.;Text8;
                                                   CaptionML=ENU=Peak Surcharge Date Range Ver. }
    { 115 ;   ;Peak Surcharge Rate Version;Text8  ;CaptionML=ENU=Peak Surcharge Rate Version }
    { 116 ;   ;Fuel Surcharge Effective Date;Date ;CaptionML=ENU=Fuel Surcharge Effective Date }
    { 117 ;   ;Fuel Surcharge Updated Date;Date   ;CaptionML=ENU=Fuel Surcharge Updated Date }
    { 14050601;;World Ease Nos.    ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=World Ease Nos. }
    { 14050602;;Port Of Entry Serial No.;Text10   ;CaptionML=ENU=Port Of Entry Serial No.;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text003@1003 : TextConst 'ENU=I accept the terms and conditions in the UPS License Agreement.';
      Text005@1240030002 : TextConst 'ENU=Sending %1 %2 to UPS.  Please wait...';
      Text006@1240020000 : TextConst 'ENU=Install the "UPSlink Components .NET Automation" external component on this computer. Or contact your Lanham Partner.';
      Text007@1240020001 : TextConst 'ENU=Install the "Dot NET Automation Print and Scale" external component on this computer. Or contact your Lanham Partner.';
      Text008@1240020002 : TextConst 'ENU=The UPS Rate Version is unavailable. Please contact your Lanham Partner.';
      Text009@1240020004 : TextConst 'ENU=UPSlink Debugging: %1. Please contact your Lanham Partner.';
      Text010@1240020006 : TextConst 'ENU=Check UPS Setup is successful.';
      Text011@1240020003 : TextConst 'ENU=\\Make sure that USERS have FULL permissions to the following: \- UPS folder in Program Files (x86)\- Directories setup on the Carrier Packing Station\- Registry: HKEY_LOCAL_MACHINE-SOFTWARE-Wow6432Node-UPS';
      Text012@1240020005 : TextConst 'ENU=Install the "UPSlink Components .NET Automation" external component on the NAV Server. Or contact your Lanham Partner.';

    PROCEDURE AcceptEULA@1240030000();
    BEGIN
      IF CONFIRM(Text003,FALSE) THEN
        "UPSlink EULA Accepted" := TRUE
      ELSE
        "UPSlink EULA Accepted" := FALSE;
      MODIFY;
    END;

    PROCEDURE UPSlinkVersion@1240030001() : Code[10];
    BEGIN
      EXIT('ESH 2020');
    END;

    PROCEDURE CheckUPSSetup@1240020000();
    VAR
      UPSlinkMgmt@1240020009 : Codeunit 14050002;
      UPSlinkDotNet@1240020010 : Codeunit 14050008;
      Printing@1240020000 : Codeunit 37031001;
      UPSlinkComponent@1240020002 : Boolean;
      PrintingComponent@1240020003 : Boolean;
    BEGIN
      UPSlinkComponent := TRUE;
      PrintingComponent := TRUE;

      IF NOT UPSlinkDotNet.TestUPSlinkCreatedNoError THEN
        UPSlinkComponent := FALSE;

      IF NOT Printing.CheckInstallNoError THEN
        PrintingComponent := FALSE;

      CLEARLASTERROR;
      IF UPSlinkComponent THEN BEGIN
        UPSlinkDotNet.SetFunctionID(3);  //UPSlinkLogDirectory
        IF NOT UPSlinkDotNet.RUN THEN BEGIN
          IF STRPOS(GETLASTERRORTEXT,'This message') > 0 THEN
            UPSlinkComponent := FALSE
        END;
      END;

      IF NOT(UPSlinkComponent) AND NOT(PrintingComponent) THEN
        ERROR(Text006 + '\\' + Text007)
      ELSE IF NOT(UPSlinkComponent) AND PrintingComponent THEN
        ERROR(Text006 + '\\' + GETLASTERRORTEXT)
      ELSE IF UPSlinkComponent AND NOT(PrintingComponent) THEN
        ERROR(Text007);

      UPSlinkMgmt.CommunicationSetup;

      MESSAGE(Text010 + Text011);
    END;

    PROCEDURE UPSlinkDebugging@1240020001(TurnOn@1240020000 : Boolean);
    VAR
      UPSlinkDotNet@1240020001 : Codeunit 14050008;
      Text100@1240020002 : TextConst 'ENU=0';
      Text101@1240020003 : TextConst 'ENU=99';
      Text102@1240020010 : TextConst 'ENU="UPSlink debugging is %1. "';
      Text103@1240020004 : TextConst 'ENU=HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\UPS\UPSlinkHTTP\Clients\Microsoft.Dynamics.Nav.Client\LogLevel';
      Text104@1240020005 : TextConst 'ENU=REG_SZ';
      Text105@1240020012 : TextConst 'ENU=on';
      Text106@1240020013 : TextConst 'ENU=off';
    BEGIN
      IF TurnOn THEN
        UPSlinkDotNet.SetFunctionID(1)  //UPSlinkDebug(TRUE)
      ELSE
        UPSlinkDotNet.SetFunctionID(2); //UPSlinkDebug(FALSE)

      IF NOT UPSlinkDotNet.RUN THEN
        ERROR(Text009, GETLASTERRORTEXT);
    END;

    PROCEDURE GetUPSRateVersion@1240020002() : Text[30];
    VAR
      UPSAccessorialCharge@1240020000 : Record 14000767;
    BEGIN
      CLEAR(UPSAccessorialCharge);
      UPSAccessorialCharge.SETRANGE(UPSAccessorialCharge.Type,UPSAccessorialCharge.Type::UPS);
      UPSAccessorialCharge.SETRANGE(UPSAccessorialCharge."From Zip Code",'VERSION');
      IF UPSAccessorialCharge.FIND('-') THEN
        EXIT(DELCHR(FORMAT(UPSAccessorialCharge.Fee),'=',','))
      ELSE
        ERROR(Text008);
    END;

    PROCEDURE CreateUPSlinkLicenseAgreement@1240020003();
    VAR
      UPSWSRegistration@1240020000 : Record 14000777;
      UPSInfo@1240020001 : Record 14000778;
    BEGIN
      IF UPSInfo.GET THEN BEGIN
        UPSInfo.CALCFIELDS("License Agreement");
        IF UPSInfo."License Agreement".HASVALUE THEN
          ViewUPSlinkLicenseAgreement
      END ELSE BEGIN
        UPSWSRegistration.CreateLicenseAgreementRequest;
        ViewUPSlinkLicenseAgreement;
      END;
    END;

    PROCEDURE ViewUPSlinkLicenseAgreement@1240020004();
    VAR
      UPSInfo@1240020003 : Record 14000778;
      UPSLicenseAgreement@1240020002 : Report 14000766;
      LicenseAgreement@1240020000 : BigText;
      AgreementInstream@1240020001 : InStream;
    BEGIN
      UPSInfo.CALCFIELDS("License Agreement");
      UPSInfo."License Agreement".CREATEINSTREAM(AgreementInstream);
      LicenseAgreement.READ(AgreementInstream);
      UPSLicenseAgreement.Initialize(LicenseAgreement);
      COMMIT;
      UPSLicenseAgreement.SetUPSlink;
      UPSLicenseAgreement.RUNMODAL;
    END;

    BEGIN
    END.
  }
}

