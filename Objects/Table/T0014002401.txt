OBJECT Table 14002401 Order Status Line
{
  OBJECT-PROPERTIES
  {
    Date=07/07/17;
    Time=12:00:00 PM;
    Version List=SE0.60.14;
  }
  PROPERTIES
  {
    CaptionML=ENU=Order Status Line;
  }
  FIELDS
  {
    { 1   ;   ;Internal Doc. No.   ;Code10        ;CaptionML=ENU=Internal Doc. No. }
    { 2   ;   ;Export Version      ;Integer       ;CaptionML=ENU=Export Version }
    { 4   ;   ;Source Doc. Type    ;Option        ;CaptionML=ENU=Source Doc. Type;
                                                   OptionCaptionML=ENU=Quote,Order,Invoice,Credit Memo,Blanket Order;
                                                   OptionString=Quote,Order,Invoice,Credit Memo,Blanket Order }
    { 5   ;   ;Source Doc. No.     ;Code20        ;CaptionML=ENU=Source Doc. No. }
    { 6   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 8   ;   ;EDI Document No.    ;Code30        ;CaptionML=ENU=EDI Document No. }
    { 9   ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=" ,Order Change Status,Advance P.O. Ack.";
                                                   OptionString=[ ,Order Change Status,Advance P.O. Ack.] }
    { 11  ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=" ,Account (G/L),Item,Resource";
                                                   OptionString=[ ,Account (G/L),Item,Resource] }
    { 12  ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(" ")) "Standard Text"
                                                                 ELSE IF (Type=CONST("Account (G/L)")) "G/L Account"
                                                                 ELSE IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(Resource)) Resource;
                                                   CaptionML=ENU=No. }
    { 13  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 14  ;   ;Original Order Qty. ;Decimal       ;CaptionML=ENU=Original Order Qty.;
                                                   DecimalPlaces=0:5 }
    { 15  ;   ;Order Quantity      ;Decimal       ;CaptionML=ENU=Order Quantity;
                                                   DecimalPlaces=0:5 }
    { 16  ;   ;Quantity To Ship    ;Decimal       ;CaptionML=ENU=Quantity To Ship;
                                                   DecimalPlaces=0:5 }
    { 17  ;   ;EDI Segment Group   ;Integer       ;CaptionML=ENU=EDI Segment Group }
    { 18  ;   ;Trade Partner Code  ;Code20        ;TableRelation="E.D.I. Trade Partner".No.;
                                                   CaptionML=ENU=Trade Partner Code }
    { 19  ;   ;EDI Status Code     ;Code10        ;OnLookup=BEGIN
                                                              GetOrderStatusHdr;

                                                              CASE "Document Type" OF
                                                                "Document Type"::" ":
                                                                  NavisionDocument := 'E_SLSSTA';
                                                                "Document Type"::"Order Change Status":
                                                                  NavisionDocument := 'E_SLSPOC';
                                                                "Document Type"::"Advance P.O. Ack.":
                                                                  NavisionDocument := 'E_ADVPOA';
                                                              END;
                                                              EDIDocument.RESET;
                                                              EDIDocument.SETRANGE("Trade Partner No.",OrderStatusHeader."Trade Partner Code");
                                                              EDIDocument.SETFILTER(Status,'%1|%2',EDIDocument.Status::Test,EDIDocument.Status::Production);
                                                              EDIDocument.SETRANGE("Navision Document",NavisionDocument);
                                                              IF NOT EDIDocument.FIND('-') THEN
                                                                ERROR(
                                                                  Text001,NavisionDocument,"Trade Partner Code");

                                                              EDIStatusCode.RESET;
                                                              EDIStatusCode.SETRANGE("Trade Partner No.","Trade Partner Code");
                                                              EDIStatusCode.SETRANGE("EDI Document No.",EDIDocument."EDI Document No.");
                                                              EDIStatusCode.SETRANGE(Type,EDIStatusCode.Type::Status);
                                                              EDIStatusCode.SETRANGE(Line,TRUE);
                                                              IF NOT EDIStatusCode.FIND('-') THEN
                                                                ERROR(Text002,"Trade Partner Code",EDIDocument."EDI Document No.");
                                                              IF PAGE.RUNMODAL(PAGE::"E.D.I. Status Codes",EDIStatusCode) = ACTION::LookupOK THEN
                                                                VALIDATE("EDI Status Code",EDIStatusCode.Code);
                                                            END;

                                                   CaptionML=ENU=EDI Status Code }
    { 20  ;   ;EDI Reason Code     ;Code10        ;OnLookup=BEGIN
                                                              CASE "Document Type" OF
                                                                "Document Type"::" ":
                                                                  NavisionDocument := 'E_SLSSTA';
                                                                "Document Type"::"Order Change Status":
                                                                  NavisionDocument := 'E_SLSPOC';
                                                                "Document Type"::"Advance P.O. Ack.":
                                                                  NavisionDocument := 'E_ADVPOA';
                                                              END;
                                                              GetOrderStatusHdr;

                                                              EDIDocument.RESET;
                                                              EDIDocument.SETRANGE("Trade Partner No.",OrderStatusHeader."Trade Partner Code");
                                                              EDIDocument.SETFILTER(Status,'%1|%2',EDIDocument.Status::Test,EDIDocument.Status::Production);
                                                              EDIDocument.SETRANGE("Navision Document",NavisionDocument);
                                                              IF NOT EDIDocument.FIND('-') THEN
                                                                ERROR(
                                                                  Text001,NavisionDocument,"Trade Partner Code");

                                                              EDIStatusCode.RESET;
                                                              EDIStatusCode.SETRANGE("Trade Partner No.","Trade Partner Code");
                                                              EDIStatusCode.SETRANGE("EDI Document No.",EDIDocument."EDI Document No.");
                                                              EDIStatusCode.SETRANGE(Type,EDIStatusCode.Type::Reason);
                                                              EDIStatusCode.SETRANGE(Line,TRUE);
                                                              IF NOT EDIStatusCode.FIND('-') THEN
                                                                ERROR(Text003,"Trade Partner Code",EDIDocument."EDI Document No.");
                                                              IF PAGE.RUNMODAL(PAGE::"E.D.I. Status Codes",EDIStatusCode) = ACTION::LookupOK THEN
                                                                VALIDATE("EDI Reason Code",EDIStatusCode.Code);
                                                            END;

                                                   CaptionML=ENU=EDI Reason Code }
    { 21  ;   ;Expected Date       ;Date          ;CaptionML=ENU=Expected Date }
    { 22  ;   ;Date Archived       ;Date          ;CaptionML=ENU=Date Archived;
                                                   Editable=No }
    { 23  ;   ;Time Archived       ;Time          ;CaptionML=ENU=Time Archived;
                                                   Editable=No }
    { 24  ;   ;Archived By         ;Code50        ;CaptionML=ENU=Archived By;
                                                   Editable=No }
    { 25  ;   ;Archive Version No. ;Integer       ;CaptionML=ENU=Archive Version No.;
                                                   Editable=No }
    { 26  ;   ;Prev. Order Qty.    ;Decimal       ;CaptionML=ENU=Prev. Order Qty. }
    { 27  ;   ;EDI Code            ;Code35        ;CaptionML=ENU=EDI Code }
    { 28  ;   ;EDI Line Status     ;Option        ;CaptionML=ENU=EDI Line Status;
                                                   OptionCaptionML=ENU=" ,New,Order Exists,Shipment Exists,Release Created,Change Made,Cancellation,Add Item,Closed";
                                                   OptionString=[ ,New,Order Exists,Shipment Exists,Release Created,Change Made,Cancellation,Add Item,Closed] }
    { 29  ;   ;Prev. EDI Unit Price;Decimal       ;CaptionML=ENU=Prev. EDI Unit Price;
                                                   BlankZero=Yes }
    { 30  ;   ;Previous Unit Price ;Decimal       ;CaptionML=ENU=Previous Unit Price;
                                                   BlankZero=Yes }
    { 31  ;   ;Pricing Discrepancy ;Boolean       ;CaptionML=ENU=Pricing Discrepancy }
    { 32  ;   ;Unit Price          ;Decimal       ;CaptionML=ENU=Unit Price;
                                                   BlankZero=Yes }
    { 33  ;   ;EDI Unit Price      ;Decimal       ;CaptionML=ENU=EDI Unit Price;
                                                   BlankZero=Yes }
    { 34  ;   ;EDI Item Cross Ref. ;Code40        ;TableRelation="E.D.I. Trade Partner Item" WHERE (Trade Partner No.=FIELD(Trade Partner Code));
                                                   OnLookup=BEGIN
                                                              LookUpEDIPartnerItem;
                                                            END;

                                                   CaptionML=ENU=EDI Item Cross Ref. }
    { 35  ;   ;EDI Variant Code    ;Code40        ;CaptionML=ENU=EDI Variant Code }
    { 36  ;   ;Variant Code        ;Code10        ;CaptionML=ENU=Variant Code }
    { 37  ;   ;EDI Unit of Measure ;Code10        ;CaptionML=ENU=EDI Unit of Measure }
    { 38  ;   ;Unit of Measure Code;Code10        ;CaptionML=ENU=Unit of Measure Code }
  }
  KEYS
  {
    {    ;Internal Doc. No.,Export Version,Source Doc. Type,Source Doc. No.,Line No.,Document Type;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1240020002 : TextConst 'ENU=An active EDI Document %1 was not found for Trading Partner %2.';
      Text002@1240020001 : TextConst 'ENU=EDI Status Code, type Line not found for Trade Partner %1 EDI Document No. %2';
      Text003@1240020000 : TextConst 'ENU=EDI Reason Code, type Line not found for Trade Partner %1 EDI Document No. %2';
      EDIDocument@1240020003 : Record 14002353;
      EDIStatusCode@1240020004 : Record 14002406;
      OrderStatusHeader@1240020005 : Record 14002400;
      NavisionDocument@1240020006 : Code[10];

    PROCEDURE UpdateLines@1240020000(InternalDocNo@1240020000 : Code[10];SourceDocType@1240020001 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order';SourceDocNo@1240020002 : Code[20];TradePartnerNo@1240020003 : Code[20];DocumentType@1240020004 : ' ,Order Change Status,Advance P.O. Ack.') : Boolean;
    VAR
      CurrOrderStatusLine@1240020005 : Record 14002401;
      SalesHdr@1240020006 : Record 36;
      SalesLine@1240020007 : Record 37;
      EDIDocument@1240020008 : Record 14002353;
      Text001@1240020009 : TextConst 'ENU=Sales Order %1 not found.';
      Text002@1240020010 : TextConst 'ENU=%1 document not found for Trade Partner %2.';
      Text003@1240020011 : TextConst 'ENU=Lines not found.';
      Text004@1240020012 : TextConst 'ENU=Sales line %2 not found for item %2 on sales order %3.';
      DiscountUnitPrice@1240020013 : Decimal;
    BEGIN
      IF NOT SalesHdr.GET(SourceDocType,SourceDocNo) THEN
        ERROR(Text001,SourceDocNo);
      CASE DocumentType OF
        DocumentType::" ":
          NavisionDocument := 'E_SLSSTA';
        DocumentType::"Order Change Status":
          NavisionDocument := 'E_SLSPOC';
        DocumentType::"Advance P.O. Ack.":
          NavisionDocument := 'E_ADVPOA';
      END;
      EDIDocument.RESET;
      EDIDocument.SETRANGE("Trade Partner No.",TradePartnerNo);
      EDIDocument.SETRANGE("Navision Document",NavisionDocument);
      EDIDocument.SETRANGE(Type,EDIDocument.Type::Export);
      IF NOT EDIDocument.FIND('-') THEN
        ERROR(Text002,NavisionDocument,TradePartnerNo);

      WITH CurrOrderStatusLine DO BEGIN
        RESET;
        SETRANGE("Internal Doc. No.",InternalDocNo);
        SETRANGE("Source Doc. Type",SourceDocType);
        SETRANGE("Source Doc. No.",SourceDocNo);
        SETRANGE("Document Type",DocumentType);
        IF NOT FIND('-') THEN
          ERROR(Text003);
        REPEAT
          IF SalesLine.GET(SourceDocType,SourceDocNo,"Line No.") THEN BEGIN
            "Quantity To Ship" := SalesLine."Qty. to Ship";
            "Prev. Order Qty." := "Order Quantity";
            "Order Quantity" := SalesLine.Quantity;
            "Prev. EDI Unit Price" := "EDI Unit Price";
            "EDI Unit Price" := SalesLine."EDI Unit Price";
            "Previous Unit Price" := "Unit Price";
            "Unit Price" := SalesLine."Unit Price";
            IF "EDI Unit Price" <> 0 THEN BEGIN
              CASE TRUE OF
                SalesLine."Line Discount %" = 0:
                  BEGIN
                    CASE TRUE OF
                      "Unit Price" <> "EDI Unit Price":
                        "Pricing Discrepancy" := TRUE;
                      "Unit Price" = "EDI Unit Price":
                        "Pricing Discrepancy" := FALSE;
                    END;
                  END;
                ELSE BEGIN
                  DiscountUnitPrice :=
                    "Unit Price" - "Unit Price" * (SalesLine."Line Discount %" / 100);
                  DiscountUnitPrice := ROUND(DiscountUnitPrice,0.01);
                  IF DiscountUnitPrice <> "EDI Unit Price" THEN
                    "Pricing Discrepancy" := TRUE
                  ELSE
                    "Pricing Discrepancy" := FALSE;
                END;
              END;
            END;
            "EDI Unit of Measure" := SalesLine."EDI Unit of Measure";
            "EDI Item Cross Ref." := SalesLine."EDI Item Cross Ref.";
            "EDI Variant Code" := SalesLine."EDI Variant Code";
            "Variant Code" := SalesLine."Variant Code";
            "Unit of Measure Code" := SalesLine."Unit of Measure Code";
            MODIFY;
          END ELSE
            ERROR(Text004,"Line No.","No.","Source Doc. No.");
        UNTIL NEXT = 0;
      END;

      EXIT(TRUE);
    END;

    PROCEDURE LookUpEDIPartnerItem@1240020001();
    VAR
      EDITradePartnerItem@1240020000 : Record 14002364;
    BEGIN
      GetOrderStatusHdr;
      EDITradePartnerItem.RESET;
      EDITradePartnerItem.SETRANGE("Trade Partner No.",OrderStatusHeader."Trade Partner Code");
      EDITradePartnerItem.SETRANGE("Partner Item No.","EDI Item Cross Ref.");
      IF EDITradePartnerItem.FIND('-') THEN
        EDITradePartnerItem.SETRANGE("Partner Item No.")
      ELSE
        EDITradePartnerItem.SETRANGE("Partner Item No.");
      PAGE.RUNMODAL(PAGE::"E.D.I. Trade Partner Items",EDITradePartnerItem,EDITradePartnerItem."Partner Item No.");
    END;

    PROCEDURE GetOrderStatusHdr@1240020002() TradePartner : Code[20];
    BEGIN
      OrderStatusHeader.RESET;
      OrderStatusHeader.SETRANGE("Internal Doc. No.","Internal Doc. No.");
      OrderStatusHeader.SETRANGE("Source Doc. Type","Source Doc. Type");
      OrderStatusHeader.SETRANGE("Source Doc. No.","Source Doc. No.");
      OrderStatusHeader.SETRANGE("Document Type","Document Type");
      OrderStatusHeader.FIND('-');
    END;

    BEGIN
    END.
  }
}

