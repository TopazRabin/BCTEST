OBJECT Table 14099021 Pick Request Line
{
  OBJECT-PROPERTIES
  {
    Date=08/21/18;
    Time=12:00:00 PM;
    Version List=RF1.50.13;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Pick Request No.    ;Code20        ;CaptionML=ENU=Pick Request No. }
    { 2   ;   ;Pick Request Type   ;Option        ;CaptionML=ENU=Pick Request Type;
                                                   OptionString=,Shipment,Assembly }
    { 3   ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=ENU=Location Code }
    { 8   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 13  ;   ;Source Type         ;Integer       ;CaptionML=ENU=Source Type }
    { 14  ;   ;Source Subtype      ;Option        ;CaptionML=ENU=Source Subtype;
                                                   OptionString=0,1,2,3,4,5,6,7,8,9,10 }
    { 15  ;   ;Source No.          ;Code20        ;CaptionML=ENU=Source No. }
    { 16  ;   ;Source Line No.     ;Integer       ;CaptionML=ENU=Source Line No. }
    { 17  ;   ;Source Subline No.  ;Integer       ;CaptionML=ENU=Source Subline No. }
    { 18  ;   ;Order No.           ;Code20        ;CaptionML=ENU=Order No. }
    { 20  ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=ENU=Item No. }
    { 21  ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=ENU=Variant Code }
    { 22  ;   ;Unit of Measure Code;Code10        ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=ENU=Unit of Measure Code }
    { 23  ;   ;Qty. per Unit of Measure;Decimal   ;CaptionML=ENU=Qty. per Unit of Measure }
    { 24  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 30  ;   ;Shelf No.           ;Code10        ;CaptionML=ENU=Shelf No. }
    { 32  ;   ;Bin Code            ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Location Code));
                                                   CaptionML=ENU=Bin Code }
    { 40  ;   ;Pick Quantity       ;Decimal       ;OnValidate=BEGIN
                                                                "Pick Qty. (Base)" := CalcBaseQty("Pick Quantity");
                                                              END;

                                                   CaptionML=ENU=Pick Quantity }
    { 42  ;   ;Pick Qty. (Base)    ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Qty. per Unit of Measure",1);
                                                                VALIDATE("Pick Quantity","Pick Qty. (Base)");
                                                              END;

                                                   CaptionML=ENU=Pick Qty. (Base) }
    { 44  ;   ;Applied Quantity    ;Decimal       ;OnValidate=BEGIN
                                                                CheckStatus;

                                                                IF "Applied Quantity" > "Pick Quantity" THEN
                                                                  ERROR(STRSUBSTNO(Text001,"Pick Quantity"));

                                                                IF NOT ValidateInBaseUnits THEN BEGIN
                                                                  "Applied Qty. (Base)" := CalcBaseQty("Applied Quantity");
                                                                  IF "Applied Qty. (Base)" > "Pick Qty. (Base)" THEN
                                                                    "Applied Qty. (Base)" := "Pick Qty. (Base)";
                                                                END;

                                                                IF ("Applied Quantity" = "Pick Quantity") OR
                                                                   ("Applied Qty. (Base)" = "Pick Qty. (Base)")
                                                                THEN
                                                                  VALIDATE("Completely Picked",TRUE)
                                                                ELSE
                                                                  VALIDATE("Completely Picked",FALSE);
                                                              END;

                                                   CaptionML=ENU=Applied Quantity }
    { 45  ;   ;Applied Qty. (Base) ;Decimal       ;OnValidate=BEGIN
                                                                CheckStatus;

                                                                IF "Applied Qty. (Base)" > "Pick Qty. (Base)" THEN
                                                                  ERROR(STRSUBSTNO(Text002,"Pick Qty. (Base)"));

                                                                ValidateInBaseUnits := TRUE;
                                                                IF "Qty. per Unit of Measure" = 1 THEN
                                                                  VALIDATE("Applied Quantity","Applied Qty. (Base)")
                                                                ELSE
                                                                  VALIDATE("Applied Quantity",CalcQty("Applied Qty. (Base)"));
                                                              END;

                                                   CaptionML=ENU=Applied Qty. (Base) }
    { 50  ;   ;Qty. Shipped        ;Decimal       ;OnValidate=BEGIN
                                                                "Qty. Shipped (Base)" := CalcBaseQty("Qty. Shipped");
                                                              END;

                                                   CaptionML=ENU=Qty. Shipped }
    { 51  ;   ;Qty. Shipped (Base) ;Decimal       ;CaptionML=ENU=Qty. Shipped (Base) }
    { 56  ;   ;Completely Picked   ;Boolean       ;CaptionML=ENU=Completely Picked }
    { 60  ;   ;Created By User     ;Code50        ;CaptionML=ENU=Created By User }
    { 70  ;   ;Creation Date       ;Date          ;CaptionML=ENU=Creation Date }
    { 71  ;   ;Creation Time       ;Time          ;CaptionML=ENU=Creation Time }
    { 72  ;   ;Creation Date/Time  ;DateTime      ;CaptionML=ENU=Creation Date/Time }
  }
  KEYS
  {
    {    ;Pick Request No.,Pick Request Type,Location Code,Line No.;
                                                   Clustered=Yes }
    {    ;Pick Request No.,Pick Request Type,Item No.,Variant Code,Unit of Measure Code }
    {    ;Pick Request No.,Location Code,Source Type,Source Subtype,Source No.,Source Line No.,Source Subline No.,Order No.,Item No.,Variant Code,Unit of Measure Code }
    {    ;Location Code,Source Type,Source Subtype,Source No.,Source Line No.,Source Subline No. }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1240020000 : TextConst 'ENU=You cannot apply more than %1 units.';
      Text002@1240020001 : TextConst 'ENU=You cannot apply more than %1 base units.';
      ValidateInBaseUnits@1240020002 : Boolean;
      Text003@1240020003 : TextConst 'ENU=Pick Request must be reopened before making changes to this field.';

    [External]
    PROCEDURE CalcBaseQty@14(Qty@1000 : Decimal) : Decimal;
    BEGIN
      TESTFIELD("Qty. per Unit of Measure");
      EXIT(ROUND(Qty * "Qty. per Unit of Measure",0.00001));
    END;

    [External]
    PROCEDURE CalcQty@5(QtyBase@1000 : Decimal) : Decimal;
    BEGIN
      TESTFIELD("Qty. per Unit of Measure");
      EXIT(ROUND(QtyBase / "Qty. per Unit of Measure",0.00001));
    END;

    [External]
    PROCEDURE CheckStatus@1240020000();
    VAR
      PickRqstHeader@1240020000 : Record 14099020;
    BEGIN
      PickRqstHeader.RESET;
      IF PickRqstHeader.GET("Pick Request No.") THEN
        IF (PickRqstHeader.Status = PickRqstHeader.Status::Picked) OR
           (PickRqstHeader.Status = PickRqstHeader.Status::"Picked Short")
        THEN
          ERROR(Text003);
    END;

    BEGIN
    END.
  }
}

