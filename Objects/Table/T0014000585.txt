OBJECT Table 14000585 Forecast Summary View
{
  OBJECT-PROPERTIES
  {
    Date=03/27/19;
    Time=12:00:00 PM;
    Version List=UBP3.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               ForcAdjust.RESET;
               ForcAdjust.SETCURRENTKEY("Forecast Summary Code");
               ForcAdjust.SETRANGE("Forecast Summary Code","Forecast Summary Code");
               IF ForcAdjust.FIND('-') THEN
                 IF NOT CONFIRM(Text006,FALSE) THEN
                   ERROR(Text007);

               "Sporadic Forecast Method" := "Sporadic Forecast Method"::Zero;
             END;

    OnDelete=BEGIN
               ForcAdjust.RESET;
               ForcAdjust.SETCURRENTKEY("Forecast Summary Code");
               ForcAdjust.SETRANGE("Forecast Summary Code","Forecast Summary Code");
               IF ForcAdjust.FIND('-') THEN
                 IF NOT CONFIRM(Text004,FALSE) THEN
                   ERROR(Text005);

               ForSumOrig.RESET;
               ForSumOrig.SETRANGE("Forecast View Code","Forecast Summary Code");
               ForSumOrig.DELETEALL;

               ForSumEntry.RESET;
               ForSumEntry.SETRANGE("Forecast View Code","Forecast Summary Code");
               ForSumEntry.DELETEALL;

               ForSum.RESET;
               ForSum.SETRANGE("Forecast View Code","Forecast Summary Code");
               ForSum.DELETEALL;
             END;

    CaptionML=ENU=Forecast Summary View;
    LookupPageID=Page14000535;
    DrillDownPageID=Page14000535;
  }
  FIELDS
  {
    { 1   ;   ;Forecast Summary Code;Code10       ;CaptionML=ENU=Forecast Summary Code;
                                                   NotBlank=Yes }
    { 11  ;   ;Summary Code 1 Type ;Option        ;OnValidate=BEGIN
                                                                IF "Summary Code 1 Type" <> xRec."Summary Code 1 Type" THEN
                                                                  "Summary Code 1 Filter" := '';
                                                              END;

                                                   CaptionML=ENU=Summary Code 1 Type;
                                                   OptionCaptionML=ENU=" ,Company,Location,Item,Item Category,Product Group,Item Class,Item Ranking,Gen. Prod. Posting Group,Inv. Posting Group,Item Summary Code 1,Item Summary Code 2,Item Summary Code 3";
                                                   OptionString=[ ,Company,Location,Item,Item Category,Product Group,Item Class,Item Ranking,Gen. Prod. Posting Group,Inv. Posting Group,Item Summary Code 1,Item Summary Code 2,Item Summary Code 3] }
    { 12  ;   ;Summary Code 2 Type ;Option        ;OnValidate=BEGIN
                                                                IF "Summary Code 2 Type" <> xRec."Summary Code 2 Type" THEN
                                                                  "Summary Code 2 Filter" := '';
                                                              END;

                                                   CaptionML=ENU=Summary Code 2 Type;
                                                   OptionCaptionML=ENU=" ,Company,Location,Item,Item Category,Product Group,Item Class,Item Ranking,Gen. Prod. Posting Group,Inv. Posting Group,Item Summary Code 1,Item Summary Code 2,Item Summary Code 3";
                                                   OptionString=[ ,Company,Location,Item,Item Category,Product Group,Item Class,Item Ranking,Gen. Prod. Posting Group,Inv. Posting Group,Item Summary Code 1,Item Summary Code 2,Item Summary Code 3] }
    { 13  ;   ;Summary Code 3 Type ;Option        ;OnValidate=BEGIN
                                                                IF "Summary Code 3 Type" <> xRec."Summary Code 3 Type" THEN
                                                                  "Summary Code 3 Filter" := '';
                                                              END;

                                                   CaptionML=ENU=Summary Code 3 Type;
                                                   OptionCaptionML=ENU=" ,Company,Location,Item,Item Category,Product Group,Item Class,Item Ranking,Gen. Prod. Posting Group,Inv. Posting Group,Item Summary Code 1,Item Summary Code 2,Item Summary Code 3";
                                                   OptionString=[ ,Company,Location,Item,Item Category,Product Group,Item Class,Item Ranking,Gen. Prod. Posting Group,Inv. Posting Group,Item Summary Code 1,Item Summary Code 2,Item Summary Code 3] }
    { 14  ;   ;Summary Code 4 Type ;Option        ;OnValidate=BEGIN
                                                                IF "Summary Code 4 Type" <> xRec."Summary Code 4 Type" THEN
                                                                  "Summary Code 4 Filter" := '';
                                                              END;

                                                   CaptionML=ENU=Summary Code 4 Type;
                                                   OptionCaptionML=ENU=" ,Company,Location,Item,Item Category,Product Group,Item Class,Item Ranking,Gen. Prod. Posting Group,Inv. Posting Group,Item Summary Code 1,Item Summary Code 2,Item Summary Code 3";
                                                   OptionString=[ ,Company,Location,Item,Item Category,Product Group,Item Class,Item Ranking,Gen. Prod. Posting Group,Inv. Posting Group,Item Summary Code 1,Item Summary Code 2,Item Summary Code 3] }
    { 15  ;   ;Summary Code 5 Type ;Option        ;OnValidate=BEGIN
                                                                IF "Summary Code 5 Type" <> xRec."Summary Code 5 Type" THEN
                                                                  "Summary Code 5 Filter" := '';
                                                              END;

                                                   CaptionML=ENU=Summary Code 5 Type;
                                                   OptionCaptionML=ENU=" ,Company,Location,Item,Item Category,Product Group,Item Class,Item Ranking,Gen. Prod. Posting Group,Inv. Posting Group,Item Summary Code 1,Item Summary Code 2,Item Summary Code 3";
                                                   OptionString=[ ,Company,Location,Item,Item Category,Product Group,Item Class,Item Ranking,Gen. Prod. Posting Group,Inv. Posting Group,Item Summary Code 1,Item Summary Code 2,Item Summary Code 3] }
    { 16  ;   ;Summary Code 6 Type ;Option        ;OnValidate=BEGIN
                                                                IF "Summary Code 6 Type" <> xRec."Summary Code 6 Type" THEN
                                                                  "Summary Code 6 Filter" := '';
                                                              END;

                                                   CaptionML=ENU=Summary Code 6 Type;
                                                   OptionCaptionML=ENU=" ,Company,Location,Item,Item Category,Product Group,Item Class,Item Ranking,Gen. Prod. Posting Group,Inv. Posting Group,Item Summary Code 1,Item Summary Code 2,Item Summary Code 3";
                                                   OptionString=[ ,Company,Location,Item,Item Category,Product Group,Item Class,Item Ranking,Gen. Prod. Posting Group,Inv. Posting Group,Item Summary Code 1,Item Summary Code 2,Item Summary Code 3] }
    { 17  ;   ;Summary Code 1 Filter;Code250      ;CaptionML=ENU=Summary Code 1 Filter }
    { 18  ;   ;Summary Code 2 Filter;Code250      ;CaptionML=ENU=Summary Code 2 Filter }
    { 19  ;   ;Summary Code 3 Filter;Code250      ;CaptionML=ENU=Summary Code 3 Filter }
    { 20  ;   ;Summary Code 4 Filter;Code250      ;CaptionML=ENU=Summary Code 4 Filter }
    { 21  ;   ;Summary Code 5 Filter;Code250      ;CaptionML=ENU=Summary Code 5 Filter }
    { 22  ;   ;Summary Code 6 Filter;Code250      ;CaptionML=ENU=Summary Code 6 Filter }
    { 40  ;   ;Name                ;Text50        ;CaptionML=ENU=Name }
    { 41  ;   ;Last Date Updated   ;Date          ;CaptionML=ENU=Last Date Updated;
                                                   Editable=No }
    { 42  ;   ;Blocked             ;Boolean       ;CaptionML=ENU=Blocked }
    { 43  ;   ;Last Version No.    ;Integer       ;CaptionML=ENU=Last Version No.;
                                                   Editable=No }
    { 44  ;   ;Forecast Periods    ;Integer       ;CaptionML=ENU=Forecast Periods }
    { 45  ;   ;Forecast Unit       ;Option        ;OnValidate=BEGIN
                                                                CASE "Forecast Unit" OF
                                                                  "Forecast Unit"::Cost:
                                                                    ShowCost;
                                                                  "Forecast Unit"::Price:
                                                                    ShowPrice;
                                                                  "Forecast Unit"::Quantity:
                                                                    ShowQuantity;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Forecast Unit;
                                                   OptionCaptionML=ENU=Cost,Price,Quantity;
                                                   OptionString=Cost,Price,Quantity }
    { 46  ;   ;Sporadic Forecast Method;Option    ;OnValidate=BEGIN
                                                                IF ("Sporadic Forecast Method" <> xRec."Sporadic Forecast Method") AND
                                                                   ("Sporadic Forecast Method" = "Sporadic Forecast Method"::Zero)
                                                                THEN BEGIN
                                                                  ForSumEntry.RESET;
                                                                  ForSumEntry.SETCURRENTKEY("Forecast View Code");
                                                                  ForSumEntry.SETRANGE("Forecast View Code","Forecast Summary Code");
                                                                  ForSumEntry.SETFILTER(Status,'<>%1',ForSumEntry.Status::Reoccuring);
                                                                  IF ForSumEntry.FIND('-') THEN
                                                                    ERROR(Text008);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Sporadic Forecast Method;
                                                   OptionCaptionML=ENU=Average Usage,Zero;
                                                   OptionString=Average Usage,Zero }
    { 47  ;   ;Summary Adj. Pending;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Forecast Summary Original" WHERE (Forecast View Code=FIELD(Forecast Summary Code)));
                                                   CaptionML=ENU=Summary Adj. Pending;
                                                   Editable=No }
    { 48  ;   ;Forecast Adj. Pending;Boolean      ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Forecast Summary Entry" WHERE (Forecast View Code=FIELD(Forecast Summary Code),
                                                                                                     Adjust Pending=CONST(Yes)));
                                                   CaptionML=ENU=Forecast Adj. Pending;
                                                   Editable=No }
    { 50  ;   ;Updated By          ;Code60        ;CaptionML=ENU=Updated By;
                                                   Editable=No }
    { 51  ;   ;Re-Calculate Required;Boolean      ;CaptionML=ENU=Re-Calculate Required;
                                                   Editable=No }
    { 52  ;   ;View Only Summary   ;Boolean       ;OnValidate=BEGIN
                                                                ForSumEntry.RESET;
                                                                ForSumEntry.SETRANGE("Forecast View Code","Forecast Summary Code");
                                                                IF ForSumEntry.FIND('-') THEN
                                                                  ERROR(Text001);

                                                                ForcAdjust.RESET;
                                                                ForcAdjust.SETRANGE("Forecast Summary Code","Forecast Summary Code");
                                                                IF ForSumEntry.FIND('-') THEN
                                                                  ERROR(Text002);
                                                              END;

                                                   CaptionML=ENU=View Only Summary }
    { 53  ;   ;Item Review Pending ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Forecast Summary Entry" WHERE (Forecast View Code=FIELD(Forecast Summary Code),
                                                                                                     Review Pending=CONST(Yes)));
                                                   CaptionML=ENU=Item Review Pending;
                                                   Editable=No }
    { 54  ;   ;Process Via Job Queue;Boolean      ;OnValidate=BEGIN
                                                                IF "Process Via Job Queue" <> xRec."Process Via Job Queue" THEN
                                                                  IF "Process Via Job Queue" THEN BEGIN
                                                                    "Job Queue Start Date" := TODAY;
                                                                    "Summary Status" := "Summary Status"::Pending
                                                                  END ELSE
                                                                    "Summary Status" := "Summary Status"::" ";
                                                                IF ("Job Queue Start Date" = 0D) OR
                                                                   (FORMAT("Job Queue Start Time") = '')
                                                                THEN
                                                                  ERROR(Text003);
                                                              END;

                                                   CaptionML=ENU=Process Via Job Queue }
    { 55  ;   ;Job Queue Start Date;Date          ;CaptionML=ENU=Job Queue Start Date }
    { 56  ;   ;Job Queue Start Time;Time          ;CaptionML=ENU=Job Queue Start Time }
    { 57  ;   ;Summary Status      ;Option        ;CaptionML=ENU=Summary Status;
                                                   OptionCaptionML=ENU=" ,Pending,Processing,Complete";
                                                   OptionString=[ ,Pending,Processing,Complete];
                                                   Editable=No }
    { 58  ;   ;Summary Completed Time;Time        ;CaptionML=ENU=Summary Completed Time;
                                                   Editable=No }
    { 59  ;   ;Sumary Completed Date;Date         ;CaptionML=ENU=Sumary Completed Date;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Forecast Summary Code                   ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ForSumEntry@1240030001 : Record 14000587;
      ForSum@1240030000 : Record 14000586;
      ForSumOrig@1240030002 : Record 14000588;
      Location@1240030003 : Record 14;
      Item@1240030005 : Record 27;
      ItemCategory@1240030006 : Record 5722;
      ProductGroup@1240030007 : Record 5723;
      ItemClass@1240030008 : Record 14000554;
      ItemRanking@1240030009 : Record 14002656;
      GenProductPostingGroup@1240030010 : Record 251;
      InventoryPostingGroup@1240030011 : Record 94;
      ForcAdjust@1240030012 : Record 14002707;
      ItemSummaryCode@1240030016 : Record 14002669;
      ForecastSummaryAdjust@1240030015 : Codeunit 14000579;
      LocText@1240030004 : Text[250];
      Text001@1240030013 : TextConst 'ENU=Summary can not be changed to or from View Only because Forecast Summary Entries exist with this Summary Code.';
      Text002@1240030014 : TextConst 'ENU=Summary can not be changed to or from View Only because Forecast Adjustments Exist with this Summary Code.';
      Text003@1240020000 : TextConst 'ENU=You must specify a Start Date and Time.';
      Text004@1240020001 : TextConst 'ENU=Forecast Adjustments exist for this Summary and they willl remain after the summary is deleted.  Do you wish to continue?';
      Text005@1240020002 : TextConst 'ENU=You can roll the adjustments back and then delete the summary if you would like.';
      Text006@1240020003 : TextConst 'ENU=Forecast Adjustments already exist for this Summary Code.  Do you wish to continue?';
      Text007@1240020004 : TextConst 'ENU=Summary not created.';
      Text008@1240020005 : TextConst 'ENU=You can not set the Sporadic Forecast Method to Zero because the Summary contains Sporadic Items.';

    PROCEDURE ShowCost@1240030000();
    BEGIN
      ForSum.RESET;
      ForSum.SETRANGE("Forecast View Code","Forecast Summary Code");
      ForSum.SETRANGE(Summary,TRUE);
      IF ForSum.FIND('-') THEN
        REPEAT
          ForSum."Period 1" := FORMAT(ForSum."Period 1 Cost");
          ForSum."Period 2" := FORMAT(ForSum."Period 2 Cost");
          ForSum."Period 3" := FORMAT(ForSum."Period 3 Cost");
          ForSum."Period 4" := FORMAT(ForSum."Period 4 Cost");
          ForSum."Period 5" := FORMAT(ForSum."Period 5 Cost");
          ForSum."Period 6" := FORMAT(ForSum."Period 6 Cost");
          ForSum."Period 7" := FORMAT(ForSum."Period 7 Cost");
          ForSum."Period 8" := FORMAT(ForSum."Period 8 Cost");
          ForSum."Period 9" := FORMAT(ForSum."Period 9 Cost");
          ForSum."Period 10" := FORMAT(ForSum."Period 10 Cost");
          ForSum."Period 11" := FORMAT(ForSum."Period 11 Cost");
          ForSum."Period 12" := FORMAT(ForSum."Period 12 Cost");
          ForSum."Period 13" := FORMAT(ForSum."Period 13 Cost");
          ForSum."Period 14" := FORMAT(ForSum."Period 14 Cost");
          ForSum."Period 15" := FORMAT(ForSum."Period 15 Cost");
          ForSum."Forecast Unit" := "Forecast Unit";
          ForSum.MODIFY;
        UNTIL ForSum.NEXT = 0;
    END;

    PROCEDURE ShowPrice@1240030001();
    BEGIN
      ForSum.RESET;
      ForSum.SETRANGE("Forecast View Code","Forecast Summary Code");
      ForSum.SETRANGE(Summary,TRUE);
      IF ForSum.FIND('-') THEN
        REPEAT
          ForSum."Period 1" := FORMAT(ForSum."Period 1 Price");
          ForSum."Period 2" := FORMAT(ForSum."Period 2 Price");
          ForSum."Period 3" := FORMAT(ForSum."Period 3 Price");
          ForSum."Period 4" := FORMAT(ForSum."Period 4 Price");
          ForSum."Period 5" := FORMAT(ForSum."Period 5 Price");
          ForSum."Period 6" := FORMAT(ForSum."Period 6 Price");
          ForSum."Period 7" := FORMAT(ForSum."Period 7 Price");
          ForSum."Period 8" := FORMAT(ForSum."Period 8 Price");
          ForSum."Period 9" := FORMAT(ForSum."Period 9 Price");
          ForSum."Period 10" := FORMAT(ForSum."Period 10 Price");
          ForSum."Period 11" := FORMAT(ForSum."Period 11 Price");
          ForSum."Period 12" := FORMAT(ForSum."Period 12 Price");
          ForSum."Period 13" := FORMAT(ForSum."Period 13 Price");
          ForSum."Period 14" := FORMAT(ForSum."Period 14 Price");
          ForSum."Period 15" := FORMAT(ForSum."Period 15 Price");
          ForSum."Forecast Unit" := "Forecast Unit";
          ForSum.MODIFY;
        UNTIL ForSum.NEXT = 0;
    END;

    PROCEDURE ShowQuantity@1240030002();
    BEGIN
      ForSum.RESET;
      ForSum.SETRANGE("Forecast View Code","Forecast Summary Code");
      ForSum.SETRANGE(Summary,TRUE);
      IF ForSum.FIND('-') THEN
        REPEAT
          ForSum."Period 1" := FORMAT(ForSum."Period 1 Qty.");
          ForSum."Period 2" := FORMAT(ForSum."Period 2 Qty.");
          ForSum."Period 3" := FORMAT(ForSum."Period 3 Qty.");
          ForSum."Period 4" := FORMAT(ForSum."Period 4 Qty.");
          ForSum."Period 5" := FORMAT(ForSum."Period 5 Qty.");
          ForSum."Period 6" := FORMAT(ForSum."Period 6 Qty.");
          ForSum."Period 7" := FORMAT(ForSum."Period 7 Qty.");
          ForSum."Period 8" := FORMAT(ForSum."Period 8 Qty.");
          ForSum."Period 9" := FORMAT(ForSum."Period 9 Qty.");
          ForSum."Period 10" := FORMAT(ForSum."Period 10 Qty.");
          ForSum."Period 11" := FORMAT(ForSum."Period 11 Qty.");
          ForSum."Period 12" := FORMAT(ForSum."Period 12 Qty.");
          ForSum."Period 13" := FORMAT(ForSum."Period 13 Qty.");
          ForSum."Period 14" := FORMAT(ForSum."Period 14 Qty.");
          ForSum."Period 15" := FORMAT(ForSum."Period 15 Qty.");
          ForSum."Forecast Unit" := "Forecast Unit";
          ForSum.MODIFY;
        UNTIL ForSum.NEXT = 0;
    END;

    PROCEDURE GetFilter@1240030003(CurrSummaryTypeCode@1240030001 : ' ,Company,Location,Item,Item Category,Product Group,Item Class,Item Ranking,Gen. Prod. Posting Group,Inv. Posting Group,Item Summary Code 1,Item Summary Code 2,Item Summary Code 3';CurrText@1240030000 : Text[250]) Resp : Text[250];
    BEGIN
      LocText := CurrText;
      CASE CurrSummaryTypeCode OF
        CurrSummaryTypeCode::Location:
          IF PAGE.RUNMODAL(PAGE::"Location List",Location) = ACTION::LookupOK THEN
            LocText := LocText + Location.Code;
        CurrSummaryTypeCode::Item:
          IF PAGE.RUNMODAL(PAGE::"Item List",Item) = ACTION::LookupOK THEN
            LocText := LocText + Item."No.";
        CurrSummaryTypeCode::"Item Category":
          IF PAGE.RUNMODAL(PAGE::"Item Categories",ItemCategory) = ACTION::LookupOK THEN
            LocText := LocText + ItemCategory.Code;
        CurrSummaryTypeCode::"Product Group":
          IF PAGE.RUNMODAL(PAGE::"Product Groups",ProductGroup) = ACTION::LookupOK THEN
            LocText := LocText + ProductGroup.Code;
        CurrSummaryTypeCode::"Item Class":
          IF PAGE.RUNMODAL(PAGE::"Item Classes",ItemClass) = ACTION::LookupOK THEN
            LocText := LocText + FORMAT(ItemClass.Ranking);
        CurrSummaryTypeCode::"Item Ranking":
          IF PAGE.RUNMODAL(PAGE::"Item Ranking",ItemRanking) = ACTION::LookupOK THEN
            LocText := LocText + ItemRanking.Code;
        CurrSummaryTypeCode::"Gen. Prod. Posting Group":
          IF PAGE.RUNMODAL(
            PAGE::"Gen. Product Posting Groups",GenProductPostingGroup) = ACTION::LookupOK THEN
              LocText := LocText + GenProductPostingGroup.Code;
        CurrSummaryTypeCode::"Inv. Posting Group":
          IF PAGE.RUNMODAL(
            PAGE::"Inventory Posting Groups",InventoryPostingGroup) = ACTION::LookupOK THEN
              LocText := LocText + InventoryPostingGroup.Code;
        CurrSummaryTypeCode::"Item Summary Code 1":
          BEGIN
            ItemSummaryCode.SETRANGE(Type,ItemSummaryCode.Type::"Code 1");
            IF PAGE.RUNMODAL(
              PAGE::"Item Summary Codes",ItemSummaryCode) = ACTION::LookupOK THEN
                LocText := LocText + ItemSummaryCode.Code;
          END;
        CurrSummaryTypeCode::"Item Summary Code 2":
          BEGIN
            ItemSummaryCode.SETRANGE(Type,ItemSummaryCode.Type::"Code 2");
            IF PAGE.RUNMODAL(
              PAGE::"Item Summary Codes",ItemSummaryCode) = ACTION::LookupOK THEN
                LocText := LocText + ItemSummaryCode.Code;
          END;
        CurrSummaryTypeCode::"Item Summary Code 3":
          BEGIN
            ItemSummaryCode.SETRANGE(Type,ItemSummaryCode.Type::"Code 3");
            IF PAGE.RUNMODAL(
              PAGE::"Item Summary Codes",ItemSummaryCode) = ACTION::LookupOK THEN
                LocText := LocText + ItemSummaryCode.Code;
          END;
      END;
      EXIT(LocText);
    END;

    BEGIN
    END.
  }
}

