OBJECT Table 14123544 ES Summary Result
{
  OBJECT-PROPERTIES
  {
    Date=09/14/17;
    Time=12:00:00 PM;
    Version List=ES1.41.42;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               InsertLines;

               "Created Date Time" := CURRENTDATETIME;
             END;

    OnDelete=VAR
               ESSummaryResultLine@1240520001 : Record 14123545;
             BEGIN
               ESSummaryResultLine.RESET;
               ESSummaryResultLine.SETRANGE(Type,Type);
               ESSummaryResultLine.SETRANGE(Code,Code);
               ESSummaryResultLine.SETRANGE("Company Name","Company Name");
               ESSummaryResultLine.SETRANGE("Summary Calculation Type","Summary Calculation Type");
               ESSummaryResultLine.SETRANGE("Summary Calculation Code","Summary Calculation Code");
               ESSummaryResultLine.DELETEALL;
             END;

    CaptionML=ENU=Summary Result;
    LookupPageID=Page14123704;
    DrillDownPageID=Page14123704;
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=" ,Database Login,User,Permission Group,Permission Set,Windows Group,Recording,Live Database Login,Live User,Live Permission Set";
                                                   OptionString=[ ,Database Login,Windows Login,Role Group,Role,Windows Group,Recording,Live Database Login,Live Windows Login,Live Role];
                                                   NotBlank=Yes }
    { 2   ;   ;Code                ;Code50        ;CaptionML=ENU=Code;
                                                   NotBlank=Yes }
    { 3   ;   ;Company Name        ;Text30        ;TableRelation="ES Company".Name;
                                                   CaptionML=ENU=Company Name }
    { 4   ;   ;Summary Calculation Type;Option    ;CaptionML=ENU=Summary Calculation Type;
                                                   OptionCaptionML=ENU=" ,Violation,Ability";
                                                   OptionString=[ ,Violation,Ability] }
    { 5   ;   ;Summary Calculation Code;Code20    ;TableRelation="ES Summary Calculation".Code WHERE (Type=FIELD(Type));
                                                   CaptionML=ENU=Summary Calculation Code }
    { 11  ;   ;Access Complete     ;Boolean       ;CaptionML=ENU=Access Complete;
                                                   Editable=No }
    { 12  ;   ;Access Percentage   ;Integer       ;CaptionML=ENU=Access Percentage;
                                                   Editable=No }
    { 13  ;   ;Created Date Time   ;DateTime      ;CaptionML=ENU=Created Date Time;
                                                   Editable=No }
    { 21  ;   ;Description         ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ES Summary Calculation".Description WHERE (Type=FIELD(Summary Calculation Type),
                                                                                                                  Code=FIELD(Summary Calculation Code)));
                                                   CaptionML=ENU=Description;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Type,Code,Company Name,Summary Calculation Type,Summary Calculation Code;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ESLogin@1002 : Record 14123527;
      ESWindowsLogin@1001 : Record 14123503;
      WindowsLogin@1000 : Record 2000000120;

    PROCEDURE InsertLines@1240520001();
    VAR
      ESSummaryCalc@1240520003 : Record 14123542;
      ESSummaryCalcLine@1240520002 : Record 14123543;
      ESSummaryCalcLine2@1240520007 : Record 14123543;
      ESSummaryResultLine@1240520001 : Record 14123545;
      LinesFound@1240520004 : Integer;
      LinesTotal@1240520005 : Integer;
      NewLineNumber@1240520006 : Integer;
      AccessComplete@1240520008 : Boolean;
    BEGIN
      ESSummaryResultLine.RESET;
      ESSummaryResultLine.SETRANGE(Type,Type);
      ESSummaryResultLine.SETRANGE(Code,Code);
      ESSummaryResultLine.SETRANGE("Company Name","Company Name");
      ESSummaryResultLine.SETRANGE("Summary Calculation Type","Summary Calculation Type");
      ESSummaryResultLine.SETRANGE("Summary Calculation Code","Summary Calculation Code");
      ESSummaryResultLine.DELETEALL;

      ESSummaryCalc.GET("Summary Calculation Type","Summary Calculation Code");

      ESSummaryCalcLine.RESET;
      ESSummaryCalcLine.SETRANGE("Summary Calculation Type","Summary Calculation Type");
      ESSummaryCalcLine.SETRANGE("Summary Calculation Code","Summary Calculation Code");
      IF ESSummaryCalcLine.FIND('+') THEN
        NewLineNumber := ESSummaryCalcLine."Line No.";
      ESSummaryCalcLine.FIND('-');
      REPEAT
        ESSummaryResultLine.INIT;
        ESSummaryResultLine.Type := Type;
        ESSummaryResultLine.Code := Code;
        ESSummaryResultLine."Company Name" := "Company Name";
        ESSummaryResultLine."Summary Calculation Type" := "Summary Calculation Type";
        ESSummaryResultLine."Summary Calculation Code" := "Summary Calculation Code";
        ESSummaryResultLine."Line No." := ESSummaryCalcLine."Line No.";
        ESSummaryResultLine."FlowField Summary Calc. Type" :=
          ESSummaryCalcLine."Summary Calculation Type";
        ESSummaryResultLine."FlowField Summary Calc. Code" :=
          ESSummaryCalcLine."Summary Calculation Code";
        ESSummaryResultLine."FlowField Line No." := ESSummaryCalcLine."Line No.";
        ESSummaryResultLine."Ability Summ. Calculation Code" :=
          ESSummaryCalcLine."Ability Summ. Calculation Code";
        ESSummaryResultLine.INSERT(TRUE);

        IF ESSummaryCalcLine."Ability Summ. Calculation Code" = '' THEN BEGIN
          LinesTotal := LinesTotal + 1;
          IF ESSummaryResultLine."Access Complete" THEN
            LinesFound := LinesFound + 1;
        END ELSE BEGIN
          AccessComplete := TRUE;

          ESSummaryCalcLine2.RESET;
          ESSummaryCalcLine2.SETRANGE(
            "Summary Calculation Type",ESSummaryCalcLine2."Summary Calculation Type"::Ability);
          ESSummaryCalcLine2.SETRANGE(
            "Summary Calculation Code",ESSummaryCalcLine."Ability Summ. Calculation Code");
          ESSummaryCalcLine2.FIND('-');
          REPEAT
            NewLineNumber := NewLineNumber + 1;
            ESSummaryResultLine."Line No." := NewLineNumber;
            ESSummaryResultLine."Access Complete" := FALSE;
            ESSummaryResultLine."FlowField Summary Calc. Type" :=
              ESSummaryCalcLine2."Summary Calculation Type";
            ESSummaryResultLine."FlowField Summary Calc. Code" :=
              ESSummaryCalcLine2."Summary Calculation Code";
            ESSummaryResultLine."FlowField Line No." := ESSummaryCalcLine2."Line No.";
            ESSummaryResultLine."Ability Summ. Calculation Code" :=
              ESSummaryCalcLine."Ability Summ. Calculation Code";
            ESSummaryResultLine.INSERT(TRUE);

            LinesTotal := LinesTotal + 1;
            IF ESSummaryResultLine."Access Complete" THEN
              LinesFound := LinesFound + 1;
            AccessComplete := AccessComplete AND ESSummaryResultLine."Access Complete";
          UNTIL ESSummaryCalcLine2.NEXT = 0;

          IF AccessComplete THEN BEGIN
            ESSummaryResultLine."Line No." := ESSummaryCalcLine."Line No.";
            ESSummaryResultLine.FIND;
            ESSummaryResultLine."Access Complete" := TRUE;
            ESSummaryResultLine.MODIFY;
          END;
        END;
      UNTIL ESSummaryCalcLine.NEXT = 0;

      IF LinesTotal > 0 THEN BEGIN
        "Access Complete" := LinesFound = LinesTotal;
        "Access Percentage" := ROUND(100 * (LinesFound / LinesTotal),1)
      END ELSE BEGIN
        "Access Complete" := FALSE;
        "Access Percentage" := 0;
      END;
    END;

    PROCEDURE UpdateCode@1240520004() : Text[250];
    BEGIN
      IF Type = Type::"Windows Login" THEN BEGIN
        IF Code <> ESLogin."User ID" THEN
          IF ESLogin.GET(ESLogin.Type::Windows,Code) THEN
            IF NOT ESWindowsLogin.GET(ESLogin."Login SID") THEN
              ESWindowsLogin."User Name" := ESLogin."User ID";

        EXIT(ESWindowsLogin."User Name");
      END;

      IF Type = Type::"Live Windows Login" THEN BEGIN
        IF Code <> FORMAT(WindowsLogin."User Security ID") THEN
          IF NOT WindowsLogin.GET(Code) THEN BEGIN
            WindowsLogin."User Security ID" := Code;
            WindowsLogin."User Name" := Code;
          END;

        EXIT(WindowsLogin."User Name");
      END;

      EXIT(Code);
    END;

    PROCEDURE OpenFromReference@1240520002();
    VAR
      ESLogin@1240520001 : Record 14123527;
      ESRoleGroup@1240520002 : Record 14123525;
      ESRole@1240520003 : Record 14123505;
      ESRecording@1240520004 : Record 14123651;
      WindowsLogin@1240520006 : Record 2000000120;
      Role@1240520007 : Record 2000000004;
    BEGIN
      CASE Type OF
        Type::"Database Login":
          BEGIN
            ESLogin.RESET;
            ESLogin.SETRANGE(Type,ESLogin.Type::Database);
            ESLogin.SETRANGE("User ID",Code);
            ESLogin.FIND('-');
            PAGE.RUNMODAL(0,ESLogin);
          END;
        Type::"Windows Login":
          BEGIN
            ESLogin.RESET;
            ESLogin.SETRANGE(Type,ESLogin.Type::Windows);
            ESLogin.SETRANGE("User ID",Code);
            ESLogin.FIND('-');
            PAGE.RUNMODAL(0,ESLogin);
          END;
        Type::"Role Group":
          BEGIN
            ESRoleGroup.GET(Code);
            PAGE.RUNMODAL(0,ESRoleGroup);
          END;
        Type::Role:
          BEGIN
            ESRole.GET(Code);
            PAGE.RUNMODAL(0,ESRole);
          END;
        Type::"Windows Group":
          ;
        Type::Recording:
          BEGIN
            ESRecording.GET(Code);
            PAGE.RUNMODAL(0,ESRecording);
          END;
        Type::"Live Database Login":
          ;
        Type::"Live Windows Login":
          BEGIN
            WindowsLogin.GET(Code);
            PAGE.RUNMODAL(PAGE::"ES Live Windows Logins",WindowsLogin);
          END;
        Type::"Live Role":
          BEGIN
            Role.GET(Code);
            PAGE.RUNMODAL(PAGE::"ES Live Roles",Role);
          END;
        ELSE
          ;
      END;
    END;

    BEGIN
    END.
  }
}

