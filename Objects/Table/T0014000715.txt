OBJECT Table 14000715 Packing Rule
{
  OBJECT-PROPERTIES
  {
    Date=06/28/17;
    Time=12:00:00 PM;
    Version List=SE0.60.13.02;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               RFIDElement.RESET;
               RFIDElement.SETRANGE("Packing Rule Code",Code);
               RFIDElement.DELETEALL(TRUE);
             END;

    CaptionML=ENU=Packing Rule;
    LookupPageID=Page14000690;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=ENU=Code;
                                                   NotBlank=Yes }
    { 11  ;   ;Description         ;Text30        ;CaptionML=ENU=Description }
    { 13  ;   ;Allow UCC Label     ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT "Allow UCC Label" THEN
                                                                  "Print UCC Closing Package" := FALSE;
                                                              END;

                                                   CaptionML=ENU=Allow UCC Label }
    { 15  ;   ;Print UCC Closing Package;Boolean  ;OnValidate=BEGIN
                                                                TESTFIELD("Allow UCC Label");

                                                                IF "Print UCC Closing Package" THEN BEGIN
                                                                  GetShippingSetup;
                                                                  ShippingSetup.TESTFIELD("Enable Label Printing");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Print UCC Closing Package }
    { 16  ;   ;Default Package Type;Code1         ;InitValue=1;
                                                   CaptionML=ENU=Default Package Type;
                                                   CharAllowed=09 }
    { 17  ;   ;Manufacturer Identification;Code10 ;CaptionML=ENU=Manufacturer Identification;
                                                   CharAllowed=09 }
    { 18  ;   ;ASN Summary Type    ;Option        ;OnValidate=BEGIN
                                                                IF xRec."ASN Summary Type" <> Rec."ASN Summary Type" THEN
                                                                  "ASN Line Data Not Summarized" := FALSE;
                                                                IF ("ASN Summary Type" <> "ASN Summary Type"::"Shipment-Order-Package-Item") AND
                                                                   ("Package Loop Per Item")
                                                                THEN
                                                                  "Package Loop Per Item" := FALSE;
                                                                IF "ASN Summary Type" = "ASN Summary Type"::" " THEN
                                                                  "Combine Shipment Invoice Req." := FALSE;
                                                              END;

                                                   CaptionML=ENU=ASN Summary Type;
                                                   OptionCaptionML=ENU=" ,Shipment-Order-Item,Shipment-Order-Package-Item,Shipment-Order-Tare-Package-Item,Shipment-Order-Item-Package,Shipment-Package-Order-Item,Prioritized,,,,,Custom 1,Custom 2,Custom 3";
                                                   OptionString=[ ,Shipment-Order-Item,Shipment-Order-Package-Item,Shipment-Order-Tare-Package-Item,Shipment-Order-Item-Package,Shipment-Package-Order-Item,Prioritized,,,,,Custom 1,Custom 2,Custom 3] }
    { 19  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Shipping Comment Line" WHERE (Table ID=CONST(14000715),
                                                                                                    Code=FIELD(Code)));
                                                   CaptionML=ENU=Comment;
                                                   Editable=No }
    { 23  ;   ;UCC Label Code (Item Only);Code10  ;TableRelation="Label Header" WHERE (Label Usage=CONST(Package));
                                                   CaptionML=ENU=UCC Label Code (Item Only) }
    { 29  ;   ;Std. Package Label Code;Code10     ;TableRelation="Label Header" WHERE (Label Usage=CONST(Package));
                                                   CaptionML=ENU=Std. Package Label Code }
    { 30  ;   ;UCC 128 Mask        ;Code30        ;InitValue=00PMMMMMMMSSSSSSSSSC;
                                                   OnValidate=BEGIN
                                                                CheckMask("UCC 128 Mask");
                                                              END;

                                                   CaptionML=ENU=UCC 128 Mask }
    { 31  ;   ;UCC 128 Weight      ;Code30        ;InitValue=3131313131313131313;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("UCC 128 Mask");

                                                                CheckWeight("UCC 128 Weight","UCC 128 Mask");
                                                              END;

                                                   CaptionML=ENU=UCC 128 Weight }
    { 34  ;   ;UCC 128 Printing Mask;Code50       ;InitValue=(##) # ####### ######### #;
                                                   OnValidate=BEGIN
                                                                CheckMask("UCC 128 Mask");
                                                              END;

                                                   CaptionML=ENU=UCC 128 Printing Mask }
    { 36  ;   ;Item UPC/EAN Printing Mask;Code50  ;InitValue=#  ##### #####  #;
                                                   OnValidate=BEGIN
                                                                Numbers := 0;
                                                                FOR i := 1 TO STRLEN("Item UPC/EAN Printing Mask") DO
                                                                  IF COPYSTR("Item UPC/EAN Printing Mask",i,1) = '#' THEN
                                                                    Numbers := Numbers + 1;

                                                                IF NOT (Numbers IN [0,12]) THEN
                                                                  IF NOT CONFIRM(Text001,FALSE) THEN
                                                                    ERROR(Text002);
                                                              END;

                                                   CaptionML=ENU=Item UPC/EAN Printing Mask }
    { 37  ;   ;Std. Pack UPC/EAN Print. Mask;Code50;
                                                   InitValue=##  #  ##### #####  #;
                                                   OnValidate=BEGIN
                                                                Numbers := 0;
                                                                FOR i := 1 TO STRLEN("Std. Pack UPC/EAN Print. Mask") DO
                                                                  IF COPYSTR("Std. Pack UPC/EAN Print. Mask",i,1) = '#' THEN
                                                                    Numbers := Numbers + 1;

                                                                IF NOT (Numbers IN [0,14]) THEN
                                                                  IF NOT CONFIRM(Text003,FALSE)
                                                                  THEN
                                                                    ERROR(Text002);
                                                              END;

                                                   CaptionML=ENU=Std. Pack UPC/EAN Print. Mask }
    { 38  ;   ;Auto Bill of Lading When Ship;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Auto Bill of Lading When Ship" THEN BEGIN
                                                                  TESTFIELD("Bill of Lading No. Mandatory",FALSE);

                                                                  GetShippingSetup;
                                                                  ShippingSetup.TESTFIELD("Enable Bill of Lading");
                                                                END ELSE
                                                                  "Auto Release Summary" := FALSE;
                                                              END;

                                                   CaptionML=ENU=Auto Bill of Lading When Ship }
    { 39  ;   ;Auto Bill of Lading by Package;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Auto Bill of Lading by Package" THEN
                                                                  TESTFIELD("Auto Bill of Lading When Ship");
                                                              END;

                                                   CaptionML=ENU=Auto Bill of Lading by Package }
    { 40  ;   ;ASN Require UCC No. ;Boolean       ;CaptionML=ENU=ASN Require UCC No. }
    { 41  ;   ;UCC Type            ;Option        ;CaptionML=ENU=UCC Type;
                                                   OptionCaptionML=ENU=UCC 128,Item UPC/EAN,Std. Pack UPC/EAN;
                                                   OptionString=UCC 128,Item UPC/EAN,Std. Pack UPC/EAN }
    { 42  ;   ;ASN with PO per Document;Boolean   ;CaptionML=ENU=ASN with PO per Document }
    { 43  ;   ;UCC Label Code (Packages);Code10   ;TableRelation="Label Header" WHERE (Label Usage=CONST(Package));
                                                   CaptionML=ENU=UCC Label Code (Packages) }
    { 44  ;   ;Default Fast Pack to Std. UOM;Boolean;
                                                   CaptionML=ENU=Default Fast Pack to Std. UOM }
    { 45  ;   ;Blank BOL No. when Post. Ship;Boolean;
                                                   CaptionML=ENU=Blank BOL No. when Post. Ship }
    { 46  ;   ;Release Bill of Lading Action;Option;
                                                   CaptionML=ENU=Release Bill of Lading Action;
                                                   OptionCaptionML=ENU=Ask,Create New Bill of Lading,Remove Document from Bill of Lading;
                                                   OptionString=Ask,Create New Bill of Lading,Remove Document from Bill of Lading }
    { 48  ;   ;Add to Open Bill of Lading;Boolean ;CaptionML=ENU=Add to Open Bill of Lading }
    { 49  ;   ;Bill of Lading No. Mandatory;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Bill of Lading No. Mandatory" THEN
                                                                  TESTFIELD("Auto Bill of Lading When Ship",FALSE);
                                                              END;

                                                   CaptionML=ENU=Bill of Lading No. Mandatory }
    { 50  ;   ;Mixed Packages not Allowed;Boolean ;CaptionML=ENU=Mixed Packages not Allowed }
    { 51  ;   ;Custom Value 1      ;Text80        ;CaptionML=ENU=Custom Value 1 }
    { 52  ;   ;Custom Value 2      ;Text80        ;CaptionML=ENU=Custom Value 2 }
    { 53  ;   ;Custom Value 3      ;Text80        ;CaptionML=ENU=Custom Value 3 }
    { 54  ;   ;Custom Value 4      ;Text80        ;CaptionML=ENU=Custom Value 4 }
    { 55  ;   ;Custom Value 5      ;Text80        ;CaptionML=ENU=Custom Value 5 }
    { 56  ;   ;Prioritized Level 1 ;Option        ;CaptionML=ENU=Prioritized Level 1;
                                                   OptionCaptionML=ENU=" ,Order,Tare,Package,Item";
                                                   OptionString=[ ,Order,Tare,Package,Item] }
    { 57  ;   ;Prioritized Level 2 ;Option        ;CaptionML=ENU=Prioritized Level 2;
                                                   OptionCaptionML=ENU=" ,Order,Tare,Package,Item";
                                                   OptionString=[ ,Order,Tare,Package,Item] }
    { 58  ;   ;Prioritized Level 3 ;Option        ;CaptionML=ENU=Prioritized Level 3;
                                                   OptionCaptionML=ENU=" ,Order,Tare,Package,Item";
                                                   OptionString=[ ,Order,Tare,Package,Item] }
    { 59  ;   ;Prioritized Level 4 ;Option        ;CaptionML=ENU=Prioritized Level 4;
                                                   OptionCaptionML=ENU=" ,Order,Tare,Package,Item";
                                                   OptionString=[ ,Order,Tare,Package,Item] }
    { 60  ;   ;Use UOM and Qty. in Prior.;Boolean ;CaptionML=ENU=Use UOM and Qty. in Prior. }
    { 61  ;   ;Close Package Report ID;Integer    ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Report));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Close Package Report Name");
                                                              END;

                                                   CaptionML=ENU=Close Package Report ID }
    { 62  ;   ;Close Package Report Name;Text30   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObj."Object Name" WHERE (Object Type=CONST(Report),
                                                                                                  Object ID=FIELD(Close Package Report ID)));
                                                   CaptionML=ENU=Close Package Report Name;
                                                   Editable=No }
    { 63  ;   ;Close Sales Report ID;Integer      ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Report));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Close Sales Report Name");
                                                              END;

                                                   CaptionML=ENU=Close Sales Report ID }
    { 64  ;   ;Close Sales Report Name;Text30     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObj."Object Name" WHERE (Object Type=CONST(Report),
                                                                                                  Object ID=FIELD(Close Sales Report ID)));
                                                   CaptionML=ENU=Close Sales Report Name;
                                                   Editable=No }
    { 65  ;   ;Item Label Code     ;Code10        ;TableRelation="Label Header".Code WHERE (Label Usage=CONST(Item));
                                                   CaptionML=ENU=Item Label Code }
    { 66  ;   ;Resource Label Code ;Code10        ;TableRelation="Label Header".Code WHERE (Label Usage=CONST(Resource));
                                                   CaptionML=ENU=Resource Label Code }
    { 67  ;   ;Shipment Invoicing Required;Boolean;OnValidate=BEGIN
                                                                IF "Shipment Invoicing Required" THEN
                                                                  TESTFIELD("Combine Shipment Invoice Req.",FALSE);
                                                              END;

                                                   CaptionML=ENU=Shipment Invoicing Required }
    { 68  ;   ;Auto Release Summary;Boolean       ;OnValidate=BEGIN
                                                                IF "Auto Release Summary" THEN BEGIN
                                                                  TESTFIELD("Auto Bill of Lading When Ship");
                                                                  TESTFIELD("Expected Delivery Date Req.",FALSE);
                                                                  TESTFIELD("Custom Value 1 Required",FALSE);
                                                                  TESTFIELD("Custom Value 2 Required",FALSE);
                                                                  TESTFIELD("Custom Value 3 Required",FALSE);
                                                                  TESTFIELD("Custom Value 4 Required",FALSE);
                                                                  TESTFIELD("Custom Value 5 Required",FALSE);
                                                                  TESTFIELD("EDI Routing Request No. Req.",FALSE);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Auto Release Summary }
    { 69  ;   ;Auto Post when ASN Send;Boolean    ;CaptionML=ENU=Auto Post when ASN Send }
    { 70  ;   ;Do not Print Ship. Agent Label;Boolean;
                                                   CaptionML=ENU=Do not Print Ship. Agent Label }
    { 71  ;   ;VICS BOL Manufacturer Ident.;Code20;CaptionML=ENU=VICS BOL Manufacturer Ident. }
    { 72  ;   ;VICS BOL 128 Mask   ;Code20        ;InitValue=MMMMMMMSSSSSSSSSC;
                                                   OnValidate=BEGIN
                                                                CheckMaskVicsBOL("VICS BOL 128 Mask");
                                                              END;

                                                   CaptionML=ENU=VICS BOL 128 Mask }
    { 73  ;   ;VICS BOL 128 Weight ;Code20        ;InitValue=1313131313131313;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("VICS BOL 128 Mask");

                                                                CheckWeight("VICS BOL 128 Weight","VICS BOL 128 Mask");
                                                              END;

                                                   CaptionML=ENU=VICS BOL 128 Weight }
    { 74  ;   ;VICS BOL 128 Printing Mask;Code30  ;InitValue=(402) #################;
                                                   OnValidate=BEGIN
                                                                CheckMaskVicsBOL("VICS BOL 128 Mask");
                                                              END;

                                                   CaptionML=ENU=VICS BOL 128 Printing Mask }
    { 75  ;   ;Create VICS BOL No. on Close;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Create VICS BOL No. on Close" = FALSE THEN
                                                                  IF "VICS BOL No. Prints as BOL No."  THEN
                                                                    "VICS BOL No. Prints as BOL No." := FALSE;
                                                              END;

                                                   CaptionML=ENU=Create VICS BOL No. on Close }
    { 76  ;   ;VICS BOL Nos.       ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=VICS BOL Nos. }
    { 77  ;   ;Close Purchase Report ID;Integer   ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Report));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Close Sales Report Name");
                                                              END;

                                                   CaptionML=ENU=Close Purchase Report ID }
    { 78  ;   ;Close Purchase Report Name;Text30  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObj."Object Name" WHERE (Object Type=CONST(Report),
                                                                                                  Object ID=FIELD(Close Purchase Report ID)));
                                                   CaptionML=ENU=Close Purchase Report Name;
                                                   Editable=No }
    { 79  ;   ;Close Transfer Report ID;Integer   ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Report));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Close Sales Report Name");
                                                              END;

                                                   CaptionML=ENU=Close Transfer Report ID }
    { 80  ;   ;Close Transfer Report Name;Text30  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObj."Object Name" WHERE (Object Type=CONST(Report),
                                                                                                  Object ID=FIELD(Close Transfer Report ID)));
                                                   CaptionML=ENU=Close Transfer Report Name;
                                                   Editable=No }
    { 81  ;   ;Sales Order Pack Detail;Boolean    ;CaptionML=ENU=Sales Order Pack Detail }
    { 82  ;   ;Sales Invoice Pack Detail;Boolean  ;CaptionML=ENU=Sales Invoice Pack Detail }
    { 83  ;   ;Purch. Credit Memo Pack Detail;Boolean;
                                                   CaptionML=ENU=Purch. Credit Memo Pack Detail }
    { 84  ;   ;Purch.Return Order Pack Detail;Boolean;
                                                   CaptionML=ENU=Purch.Return Order Pack Detail }
    { 85  ;   ;Transfer Order Pack Detail;Boolean ;CaptionML=ENU=Transfer Order Pack Detail }
    { 86  ;   ;Update Package Type on Close;Boolean;
                                                   CaptionML=ENU=Update Package Type on Close }
    { 87  ;   ;Package Type (Item Only);Code1     ;OnValidate=BEGIN
                                                                IF "Package Type (Item Only)" <> '' THEN
                                                                  TESTFIELD("Update Package Type on Close");
                                                              END;

                                                   CaptionML=ENU=Package Type (Item Only);
                                                   CharAllowed=09 }
    { 88  ;   ;Package Type (Packages);Code1      ;OnValidate=BEGIN
                                                                IF "Package Type (Packages)" <> '' THEN
                                                                  TESTFIELD("Update Package Type on Close");
                                                              END;

                                                   CaptionML=ENU=Package Type (Packages);
                                                   CharAllowed=09 }
    { 89  ;   ;Bill of Lading Label Code;Code10   ;TableRelation="Label Header" WHERE (Label Usage=CONST(Bill of Lading));
                                                   CaptionML=ENU=Bill of Lading Label Code }
    { 90  ;   ;Increment Level 1 (Advanced);Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Increment Level 1 (Advanced)" THEN
                                                                  TESTFIELD("ASN Summary Type");
                                                              END;

                                                   CaptionML=ENU=Increment Level 1 (Advanced) }
    { 91  ;   ;Increment Level 2 (Advanced);Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Increment Level 2 (Advanced)" THEN
                                                                  TESTFIELD("ASN Summary Type");
                                                              END;

                                                   CaptionML=ENU=Increment Level 2 (Advanced) }
    { 92  ;   ;Increment Level 3 (Advanced);Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Increment Level 3 (Advanced)" THEN
                                                                  TESTFIELD("ASN Summary Type");
                                                              END;

                                                   CaptionML=ENU=Increment Level 3 (Advanced) }
    { 93  ;   ;Increment Level 4 (Advanced);Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Increment Level 4 (Advanced)" THEN
                                                                  TESTFIELD("ASN Summary Type");
                                                              END;

                                                   CaptionML=ENU=Increment Level 4 (Advanced) }
    { 94  ;   ;Increment Level 5 (Advanced);Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Increment Level 5 (Advanced)" THEN
                                                                  TESTFIELD("ASN Summary Type");
                                                              END;

                                                   CaptionML=ENU=Increment Level 5 (Advanced) }
    { 95  ;   ;UCC 128 Sequence Nos.;Code10       ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                IF "UCC 128 Sequence Nos." <> '' THEN BEGIN
                                                                  CALCFIELDS("Last UCC 128 Sequence No.");
                                                                  TESTFIELD("Last UCC 128 Sequence No.",'');
                                                                END;
                                                              END;

                                                   CaptionML=ENU=UCC 128 Sequence Nos. }
    { 96  ;   ;Last UCC 128 Sequence No.;Code20   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Shipping Numbering"."Last No. Used" WHERE (Table No.=CONST(14000715),
                                                                                                                  Code=FIELD(Code),
                                                                                                                  Field No.=CONST(96)));
                                                   CaptionML=ENU=Last UCC 128 Sequence No.;
                                                   Editable=No }
    { 97  ;   ;RF-ID Sequence Nos. ;Code10        ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                IF "RF-ID Sequence Nos." <> '' THEN BEGIN
                                                                  CALCFIELDS("Last RF-ID Sequence No.");
                                                                  TESTFIELD("Last RF-ID Sequence No.",'');
                                                                END;
                                                              END;

                                                   CaptionML=ENU=RF-ID Sequence Nos. }
    { 98  ;   ;Last RF-ID Sequence No.;Code20     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Shipping Numbering"."Last No. Used" WHERE (Table No.=CONST(14000715),
                                                                                                                  Code=FIELD(Code),
                                                                                                                  Field No.=CONST(98)));
                                                   CaptionML=ENU=Last RF-ID Sequence No.;
                                                   Editable=No }
    { 99  ;   ;Use UCC 128 Sequence for RF-ID;Boolean;
                                                   CaptionML=ENU=Use UCC 128 Sequence for RF-ID }
    { 100 ;   ;Print RF-ID Closing Package;Boolean;CaptionML=ENU=Print RF-ID Closing Package }
    { 101 ;   ;Allow RF-ID Label   ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT "Allow UCC Label" THEN
                                                                  "Print UCC Closing Package" := FALSE;
                                                              END;

                                                   CaptionML=ENU=Allow RF-ID Label }
    { 102 ;   ;RF-ID Label Code (SGTIN);Code10    ;TableRelation="Label Header" WHERE (Label Usage=CONST(Package));
                                                   CaptionML=ENU=RF-ID Label Code (SGTIN) }
    { 103 ;   ;RF-ID Label Code (SSCC);Code10     ;TableRelation="Label Header" WHERE (Label Usage=CONST(Package));
                                                   CaptionML=ENU=RF-ID Label Code (SSCC) }
    { 104 ;   ;RF-ID Label Code (SGLN);Code10     ;TableRelation="Label Header" WHERE (Label Usage=CONST(Package));
                                                   CaptionML=ENU=RF-ID Label Code (SGLN) }
    { 105 ;   ;Update RF-ID Type on Close;Boolean ;CaptionML=ENU=Update RF-ID Type on Close }
    { 106 ;   ;Fixed RF-ID Type    ;Option        ;CaptionML=ENU=Fixed RF-ID Type;
                                                   OptionCaptionML=ENU=" ,SGTIN,SSCC,SGLN,,,,,,,,Custom 1,Custom 2,Custom 3";
                                                   OptionString=[ ,SGTIN,SSCC,SGLN,,,,,,,,Custom 1,Custom 2,Custom 3] }
    { 107 ;   ;Assign UCC Closing Package;Boolean ;CaptionML=ENU=Assign UCC Closing Package }
    { 108 ;   ;Assign RF-ID Closing Package;Boolean;
                                                   CaptionML=ENU=Assign RF-ID Closing Package }
    { 109 ;   ;RF-ID Company Identification;Code10;CaptionML=ENU=RF-ID Company Identification }
    { 110 ;   ;Package Summary Type;Option        ;CaptionML=ENU=Package Summary Type;
                                                   OptionCaptionML=ENU=" ,Item all Levels,Item all Levels Summarize,Item all Levels Summarize Group by Box Size,Only Items,Only Items by Item,Only Items by Item and Variant,,,,,Custom 1,Custom 2,Custom 3";
                                                   OptionString=[ ,Item all Levels,Item all Levels Summarize,Item all Levels Summarize Group by Box Size,Only Items,Only Items by Item,Only Items by Item and Variant,,,,,Custom 1,Custom 2,Custom 3] }
    { 111 ;   ;BOL Summary from Pack. Summary;Boolean;
                                                   OnValidate=BEGIN
                                                                IF NOT "BOL Summary from Pack. Summary" THEN
                                                                  TESTFIELD("ASN Summary from Pack. Summary",FALSE);
                                                              END;

                                                   CaptionML=ENU=BOL Summary from Pack. Summary }
    { 112 ;   ;ASN Summary from Pack. Summary;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "ASN Summary from Pack. Summary" THEN
                                                                  TESTFIELD("BOL Summary from Pack. Summary");
                                                              END;

                                                   CaptionML=ENU=ASN Summary from Pack. Summary }
    { 113 ;   ;Lines from Pack. Summary Lines;Boolean;
                                                   CaptionML=ENU=Lines from Pack. Summary Lines }
    { 114 ;   ;Package Dimensions Required;Boolean;CaptionML=ENU=Package Dimensions Required }
    { 115 ;   ;Use Ship-To Address from Doc.;Boolean;
                                                   CaptionML=ENU=Use Ship-To Address from Doc. }
    { 116 ;   ;Increment Level 1 (Override);Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Increment Level 1 (Advanced)" THEN
                                                                  TESTFIELD("ASN Summary Type");
                                                              END;

                                                   CaptionML=ENU=Increment Level 1 (Override) }
    { 117 ;   ;Increment Level 2 (Override);Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Increment Level 2 (Advanced)" THEN
                                                                  TESTFIELD("ASN Summary Type");
                                                              END;

                                                   CaptionML=ENU=Increment Level 2 (Override) }
    { 118 ;   ;Increment Level 3 (Override);Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Increment Level 3 (Advanced)" THEN
                                                                  TESTFIELD("ASN Summary Type");
                                                              END;

                                                   CaptionML=ENU=Increment Level 3 (Override) }
    { 119 ;   ;Increment Level 4 (Override);Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Increment Level 4 (Advanced)" THEN
                                                                  TESTFIELD("ASN Summary Type");
                                                              END;

                                                   CaptionML=ENU=Increment Level 4 (Override) }
    { 120 ;   ;Increment Level 5 (Override);Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Increment Level 5 (Advanced)" THEN
                                                                  TESTFIELD("ASN Summary Type");
                                                              END;

                                                   CaptionML=ENU=Increment Level 5 (Override) }
    { 121 ;   ;Prioritized Level 1 (Override);Option;
                                                   CaptionML=ENU=Prioritized Level 1 (Override);
                                                   OptionCaptionML=ENU=" ,Order,Tare,Package,Item";
                                                   OptionString=[ ,Order,Tare,Package,Item] }
    { 122 ;   ;Prioritized Level 2 (Override);Option;
                                                   CaptionML=ENU=Prioritized Level 2 (Override);
                                                   OptionCaptionML=ENU=" ,Order,Tare,Package,Item";
                                                   OptionString=[ ,Order,Tare,Package,Item] }
    { 123 ;   ;Prioritized Level 3 (Override);Option;
                                                   CaptionML=ENU=Prioritized Level 3 (Override);
                                                   OptionCaptionML=ENU=" ,Order,Tare,Package,Item";
                                                   OptionString=[ ,Order,Tare,Package,Item] }
    { 124 ;   ;Prioritized Level 4 (Override);Option;
                                                   CaptionML=ENU=Prioritized Level 4 (Override);
                                                   OptionCaptionML=ENU=" ,Order,Tare,Package,Item";
                                                   OptionString=[ ,Order,Tare,Package,Item] }
    { 125 ;   ;Use UOM and Qty. in Prior. II;Boolean;
                                                   CaptionML=ENU=Use UOM and Qty. in Prior. (Override) }
    { 126 ;   ;Expected Delivery Date Req.;Boolean;OnValidate=BEGIN
                                                                IF "Expected Delivery Date Req." THEN
                                                                  TESTFIELD("Auto Release Summary",FALSE);
                                                              END;

                                                   CaptionML=ENU=Expected Delivery Date Required }
    { 127 ;   ;Custom Value 1 Required;Boolean    ;OnValidate=BEGIN
                                                                IF "Custom Value 1 Required" THEN
                                                                  TESTFIELD("Auto Release Summary",FALSE);
                                                              END;

                                                   CaptionML=ENU=Custom Value 1 Required }
    { 128 ;   ;Custom Value 2 Required;Boolean    ;OnValidate=BEGIN
                                                                IF "Custom Value 2 Required" THEN
                                                                  TESTFIELD("Auto Release Summary",FALSE);
                                                              END;

                                                   CaptionML=ENU=Custom Value 2 Required }
    { 129 ;   ;Custom Value 3 Required;Boolean    ;OnValidate=BEGIN
                                                                IF "Custom Value 3 Required" THEN
                                                                  TESTFIELD("Auto Release Summary",FALSE);
                                                              END;

                                                   CaptionML=ENU=Custom Value 3 Required }
    { 130 ;   ;Custom Value 4 Required;Boolean    ;OnValidate=BEGIN
                                                                IF "Custom Value 4 Required" THEN
                                                                  TESTFIELD("Auto Release Summary",FALSE);
                                                              END;

                                                   CaptionML=ENU=Custom Value 4 Required }
    { 131 ;   ;Custom Value 5 Required;Boolean    ;OnValidate=BEGIN
                                                                IF "Custom Value 5 Required" THEN
                                                                  TESTFIELD("Auto Release Summary",FALSE);
                                                              END;

                                                   CaptionML=ENU=Custom Value 5 Required }
    { 132 ;   ;Combine Shipment Invoice Req.;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Combine Shipment Invoice Req." THEN BEGIN
                                                                  TESTFIELD("ASN Summary Type");
                                                                  TESTFIELD("Shipment Invoicing Required",FALSE);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Combine Shipment Invoice Required }
    { 133 ;   ;VICS BOL No. Prints as BOL No.;Boolean;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Create VICS BOL No. on Close",TRUE);
                                                              END;

                                                   CaptionML=ENU=VICS BOL No. Prints as BOL No. }
    { 14000351;;Ship Notice Type   ;Option        ;CaptionML=ENU=Ship Notice Type;
                                                   OptionCaptionML=ENU=ASN,ASN (Billing);
                                                   OptionString=ASN,ASN (Billing) }
    { 14000352;;ASN Requires Non-Shipped Items;Boolean;
                                                   CaptionML=ENU=ASN Requires Non-Shipped Items }
    { 14000353;;Allow BOL Post Before ASN Send;Boolean;
                                                   CaptionML=ENU=Allow BOL Post Before ASN Send }
    { 14000354;;ASN Line Data Not Summarized;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "ASN Line Data Not Summarized" THEN BEGIN
                                                                  IF ("ASN Summary Type" <> "ASN Summary Type"::"Shipment-Order-Package-Item") AND
                                                                     ("ASN Summary Type" <> "ASN Summary Type"::"Shipment-Order-Item-Package")
                                                                  THEN
                                                                    ERROR(
                                                                      Text020,
                                                                      'Shipment-Order-Package-Item or Shipment-Order-Item-Package');
                                                                END;
                                                              END;

                                                   CaptionML=ENU=ASN Line Data Not Summarized }
    { 14000355;;Override ASN Summary Type;Option  ;OnValidate=BEGIN
                                                                IF xRec."Override ASN Summary Type" <> Rec."Override ASN Summary Type" THEN
                                                                  "Override Line Data Not Summed" := FALSE;
                                                              END;

                                                   CaptionML=ENU=Override ASN Summary Type;
                                                   OptionCaptionML=ENU=" ,Shipment-Order-Item,Shipment-Order-Package-Item,Shipment-Order-Tare-Package-Item,Shipment-Order-Item-Package,Shipment-Package-Order-Item,Prioritized,,,,,Custom 1,Custom 2,Custom 3";
                                                   OptionString=[ ,Shipment-Order-Item,Shipment-Order-Package-Item,Shipment-Order-Tare-Package-Item,Shipment-Order-Item-Package,Shipment-Package-Order-Item,Prioritized,,,,,Custom 1,Custom 2,Custom 3] }
    { 14000356;;Override Line Data Not Summed;Boolean;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Override ASN Summary Type");
                                                                IF "Override Line Data Not Summed" THEN BEGIN
                                                                  IF ("Override ASN Summary Type" <> "ASN Summary Type"::"Shipment-Order-Package-Item") AND
                                                                     ("Override ASN Summary Type" <> "ASN Summary Type"::"Shipment-Order-Item-Package")
                                                                  THEN
                                                                    ERROR(
                                                                      Text020,
                                                                      'Shipment-Order-Package-Item or Shipment-Order-Item-Package');
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Override ASN Line Data Not Summarized }
    { 14000357;;Package Loop Per Item;Boolean     ;OnValidate=BEGIN
                                                                IF "Package Loop Per Item" THEN
                                                                  TESTFIELD("ASN Summary Type","ASN Summary Type"::"Shipment-Order-Package-Item");
                                                              END;

                                                   CaptionML=ENU=Package Loop Per Item }
    { 14000359;;EDI Routing Request No. Req.;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "EDI Routing Request No. Req." THEN
                                                                  TESTFIELD("Auto Release Summary",FALSE);
                                                              END;

                                                   CaptionML=ENU=EDI Routing Request No. Required }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Code,Description,ASN Summary Type        }
  }
  CODE
  {
    VAR
      ShippingSetup@1000000002 : Record 14000707;
      ShippingAgent@1240030000 : Record 291;
      RFIDElement@1240030002 : Record 14000963;
      Numbers@1000000000 : Integer;
      i@1000000001 : Integer;
      ShippingSetupRetrieved@1240030001 : Boolean;
      Text001@1001 : TextConst 'ENU=Item UPC/EAN Number is normally 12 digit, use this string anyway?';
      Text002@1002 : TextConst 'ENU=Nothing Changed.';
      Text003@1003 : TextConst 'ENU=Std. Pack. UPC/EAN Number is normally 14 digit, use this string anyway?';
      Text004@1004 : TextConst 'ENU=M part is not consecutive.';
      Text005@1005 : TextConst 'ENU=S part is not consecutive.';
      Text006@1006 : TextConst 'ENU=C must be last.';
      Text007@1007 : TextConst 'ENU=Only digits (1234567890) or\';
      Text008@1008 : TextConst 'ENU=P - Package Indicator (1 digit)\';
      Text009@1009 : TextConst 'ENU=M - Manufacturer Identification\';
      Text010@1010 : TextConst 'ENU=S - Sequence Number\';
      Text011@1011 : TextConst 'ENU=C - Check Digit (1 digit)\';
      Text012@1012 : TextConst 'ENU=are allowed in this field.';
      Text013@1013 : TextConst 'ENU=Maksimum 1 P is allowed.';
      Text014@1014 : TextConst 'ENU=Maksimum 1 C is allowed.';
      Text015@1015 : TextConst 'ENU=Length is %1 it must be %2.';
      Text016@1016 : TextConst 'ENU=Only digits allowed (1234567890).';
      Text017@1017 : TextConst 'ENU=A - VICS Bill of Lading (1 digit)\';
      Text018@1018 : TextConst 'ENU=Maksimum 1 A is allowed.';
      Text019@1240030003 : TextConst 'ENU=Package Rule Code cannot be blank.';
      Text020@1240020000 : TextConst 'ENU=Line Data Not Summarized ASN Summary is supported with %1 ASN summary type.';

    PROCEDURE CheckMask@2(Mask@1000000000 : Code[30]);
    VAR
      i@1000000001 : Integer;
      Pos@1000000002 : Integer;
      PDigits@1000000003 : Integer;
      CDigits@1000000004 : Integer;
      MLast@1000000005 : Integer;
      SLast@1000000006 : Integer;
    BEGIN
      PDigits := 0;
      CDigits := 0;
      FOR i := 1 TO STRLEN(Mask) DO BEGIN
        Pos := STRPOS('1234567890PMSC',COPYSTR(Mask,i,1));

        CASE Pos OF
          11:
            PDigits := PDigits + 1;
          12:
            IF (MLast = 0) OR (MLast + 1 = i) THEN
              MLast := i
            ELSE
              ERROR(Text004);
          13:
            IF (SLast = 0) OR (SLast + 1 = i) THEN
              SLast := i
            ELSE
              ERROR(Text005);
          14:
            IF i <> STRLEN(Mask) THEN
              ERROR(Text006)
            ELSE
              CDigits := CDigits + 1;
        END;

        IF Pos = 0 THEN
          ERROR(
            Text007 +
            Text008 +
            Text009 +
            Text010 +
            Text011 +
            Text012);
      END;

      IF PDigits > 1 THEN
        ERROR(Text013);
      IF CDigits > 1 THEN
        ERROR(Text014);
    END;

    PROCEDURE CheckWeight@3(Weight@1000000000 : Code[30];Mask@1000000001 : Code[30]);
    VAR
      i@1000000002 : Integer;
      Length@1000000003 : Integer;
    BEGIN
      IF Weight = '' THEN
        EXIT;

      Length := STRLEN(Mask);
      IF STRPOS(Mask,'C') <> 0 THEN
        Length := Length - 1;
      IF STRLEN(Weight) <> Length THEN
        ERROR(Text015,STRLEN(Weight),Length);

      FOR i := 1 TO STRLEN(Weight) DO BEGIN
        IF STRPOS('1234567890',COPYSTR(Weight,i,1)) = 0 THEN
          ERROR(Text016);
      END;
    END;

    PROCEDURE CheckMaskVicsBOL@4(Mask@1240030000 : Code[30]);
    VAR
      i@1240030001 : Integer;
      Pos@1240030002 : Integer;
      ADigits@1240030003 : Integer;
      CDigits@1240030004 : Integer;
      MLast@1240030005 : Integer;
      SLast@1240030006 : Integer;
    BEGIN
      ADigits := 0;
      CDigits := 0;
      FOR i := 1 TO STRLEN(Mask) DO BEGIN
        Pos := STRPOS('1234567890AMSC',COPYSTR(Mask,i,1));

        CASE Pos OF
          11:
            ADigits := ADigits + 1;
          12:
            IF (MLast = 0) OR (MLast + 1 = i) THEN
              MLast := i
            ELSE
              ERROR(Text004);
          13:
            IF (SLast = 0) OR (SLast + 1 = i) THEN
              SLast := i
            ELSE
              ERROR(Text005);
          14:
            IF i <> STRLEN(Mask) THEN
              ERROR(Text006)
            ELSE
              CDigits := CDigits + 1;
        END;

        IF Pos = 0 THEN
          ERROR(
            Text007 +
            Text017 +
            Text009 +
            Text010 +
            Text011 +
            Text012);
      END;

      IF ADigits > 1 THEN
        ERROR(Text018);
      IF CDigits > 1 THEN
        ERROR(Text014);
    END;

    PROCEDURE GetPackingRule@1(ShipToType@1000000000 : Integer;ShipToNo@1000000001 : Code[20];ShipToCode@1000000002 : Code[10]) : Boolean;
    VAR
      Customer@1000000003 : Record 18;
      ShipToAddress@1000000004 : Record 222;
      Package@1000000005 : Record 14000701;
    BEGIN
      CLEAR(Rec);

      CASE ShipToType OF
        Package."Ship-to Type"::Customer:
          BEGIN
            IF ShipToCode <> '' THEN BEGIN
              IF ShipToAddress.GET(ShipToNo,ShipToCode) THEN
                IF ShipToAddress."Packing Rule Code" <> '' THEN BEGIN
                  GET(ShipToAddress."Packing Rule Code");
                  EXIT(TRUE);
                END;
            END ELSE BEGIN
              IF Customer.GET(ShipToNo) THEN
                IF Customer."Packing Rule Code" <> '' THEN BEGIN
                  GET(Customer."Packing Rule Code");
                  EXIT(TRUE);
                END;
            END;
          END;
      END;

      IF Code = '' THEN BEGIN
        GetShippingSetup;
        IF ShippingSetup."Default Packing Rule Code" <> '' THEN BEGIN
          GET(ShippingSetup."Default Packing Rule Code");
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE PackDetail@7(SourceType@1240030000 : Integer;SourceSubtype@1240030001 : Integer;ShippingAgentCode@1240030002 : Code[10]) : Boolean;
    BEGIN
      GetShippingSetup;

      IF ShippingAgentCode = '' THEN
        CLEAR(ShippingAgent)
      ELSE
        IF ShippingAgent.Code <> ShippingAgentCode THEN
          ShippingAgent.GET(ShippingAgentCode);

      CASE SourceType OF
        DATABASE::"Sales Header":
          CASE SourceSubtype OF
            1:
              EXIT(
                ShippingSetup."Sales Order Pack Detail" OR "Sales Order Pack Detail" OR
                ShippingAgent."Sales Order Pack Detail");
            2:
              EXIT(
                ShippingSetup."Sales Invoice Pack Detail" OR "Sales Invoice Pack Detail" OR
                ShippingAgent."Sales Invoice Pack Detail");
          END;
        DATABASE::"Purchase Header":
          CASE SourceSubtype OF
            3:
              EXIT(
                ShippingSetup."Purch. Credit Memo Pack Detail" OR "Purch. Credit Memo Pack Detail" OR
                ShippingAgent."Purch. Credit Memo Pack Detail");
            5:
              EXIT(
                ShippingSetup."Purch.Return Order Pack Detail" OR "Purch.Return Order Pack Detail" OR
                ShippingAgent."Purch.Return Order Pack Detail");
          END;
        DATABASE::"Transfer Header":
          EXIT(
            ShippingSetup."Transfer Order Pack Detail" OR "Transfer Order Pack Detail" OR
            ShippingAgent."Transfer Order Pack Detail");
        ELSE
      END;
    END;

    PROCEDURE CopyToNewPackingRule@1240030000();
    VAR
      PackingRule@1240030004 : Record 14000715;
      RFIDElement@1240030003 : Record 14000963;
      RFIDElement2@1240030002 : Record 14000963;
      EShipInput@1240030001 : Record 14000728;
      EShipEnterNewPackingRule@1240030000 : Page 14050115;
    BEGIN
      CLEAR(EShipEnterNewPackingRule);
      EShipEnterNewPackingRule.LOOKUPMODE(TRUE);
      IF EShipEnterNewPackingRule.RUNMODAL = ACTION::LookupOK THEN BEGIN
        EShipEnterNewPackingRule.GetEShipInput(EShipInput);
        IF EShipInput."New Packing Rule Code" = '' THEN
          ERROR(Text019);

        PackingRule := Rec;
        PackingRule.Code := EShipInput."New Packing Rule Code";
        PackingRule.INSERT(TRUE);

        RFIDElement.RESET;
        RFIDElement.SETRANGE("Packing Rule Code",Code);
        IF RFIDElement.FIND('-') THEN
          REPEAT
            RFIDElement2 := RFIDElement;
            RFIDElement2."Packing Rule Code" := PackingRule.Code;
            RFIDElement2.INSERT(TRUE);
          UNTIL RFIDElement.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE GetShippingSetup@6();
    BEGIN
      IF ShippingSetupRetrieved THEN
        EXIT;

      ShippingSetup.GET;
    END;

    BEGIN
    END.
  }
}

