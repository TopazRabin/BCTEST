OBJECT Table 50025 Item Cust. Avail. & Price
{
  OBJECT-PROPERTIES
  {
    Date=05/04/21;
    Time=[ 7:14:31 AM];
    Modified=Yes;
    Version List=TOP100B,230,TPZ2785,TPZ2881,3125;
  }
  PROPERTIES
  {
    DataCaptionFields=Item No.,Description;
    OnDelete=BEGIN
               ItemCustMultRec.RESET;
               ItemCustMultRec.SETRANGE("User ID","User ID");
               ItemCustMultRec.DELETEALL;
             END;

  }
  FIELDS
  {
    { 1   ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnValidate=VAR
                                                                UserMgt@1000 : Codeunit 418;
                                                              BEGIN
                                                              END;

                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("Item No.");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              ESM=Id. usuario;
                                                              FRC=Code utilisateur;
                                                              ENC=User ID];
                                                   NotBlank=Yes }
    { 2   ;   ;Item No.            ;Code20        ;TableRelation=Item.No.;
                                                   OnValidate=VAR
                                                                Item2@1000000001 : Record 27;
                                                                UserSetupMgt@1000000000 : Codeunit 5700;
                                                              BEGIN
                                                                IF xRec."Item No." <> "Item No." THEN BEGIN
                                                                  IF "Item No." <> '' THEN BEGIN
                                                                    IF ItemRec.GET("Item No.") THEN BEGIN
                                                                       "Price Book Code" := ItemRec."Price Book Code";
                                                                      // <TOP8714>
                                                                      IF UserSetupMgt.GetPriceBookFilter <> '' THEN BEGIN
                                                                        Item2.RESET;
                                                                        Item2.SETRANGE("No.","Item No.");
                                                                        Item2.SETFILTER("Price Book Code",UserSetupMgt.GetPriceBookFilter);
                                                                        IF NOT Item2.FINDFIRST THEN
                                                                          ERROR(Text50000,UserSetupMgt.GetPriceBookFilter);
                                                                      END;
                                                                      // </TOP8714>
                                                                      Description := ItemRec.Description;
                                                                      //<TOP2340>
                                                                      "Description 2" := ItemRec."Description 2";
                                                                      //</TOP2340>
                                                                      "Item Disc. Group" := ItemRec."Item Disc. Group";
                                                                      "Unit Price" := ItemRec."Unit Price";
                                                                      "Unit Cost" := ItemRec."Unit Cost";
                                                                      "Average Unit Cost" := GetAvgCostPerUnit(ItemRec."No.",0);
                                                                      //-->TPZ3125
                                                                      IF ItemRec."Replacement Cost" <> 0 THEN
                                                                        "Replacement Cost" := ItemRec."Replacement Cost"
                                                                      ELSE
                                                                        "Replacement Cost" := "Average Unit Cost";
                                                                      //<--TPZ3125
                                                                      "Last Direct Cost" :=  ItemRec."Last Direct Cost";
                                                                      Blocked := ItemRec.Blocked;
                                                                      "Sales Unit of Measure" := ItemRec."Sales Unit of Measure";
                                                                      "Safety Stock Quantity" := ItemRec."Safety Stock Quantity";
                                                                      VALIDATE("Location Code");
                                                                    END;
                                                                  END ELSE BEGIN
                                                                     Description := '';
                                                                     //<TOP2340>
                                                                     "Description 2" := '';
                                                                     //</TOP2340>
                                                                     "Item Disc. Group" := '';
                                                                     "Unit Price" := 0;
                                                                     "Unit Cost" := 0;
                                                                     "Last Direct Cost" :=  0;
                                                                     "Safety Stock Quantity" := 0;
                                                                     Blocked := FALSE;
                                                                     "Sales Unit of Measure" := '';
                                                                     "Price Book Code" := '';
                                                                  END;
                                                                END;
                                                              END;
                                                               }
    { 3   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ESM=Descripci¢n;
                                                              FRC=Description;
                                                              ENC=Description] }
    { 4   ;   ;Multiplier          ;Decimal       ;TableRelation="Standard Multiplier";
                                                   DecimalPlaces=3:3;
                                                   MinValue=0;
                                                   MaxValue=1 }
    { 5   ;   ;Customer Name       ;Text50        ;CaptionML=[ENU=Name;
                                                              ESM=Nombre;
                                                              FRC=Nom;
                                                              ENC=Name] }
    { 10  ;   ;Customer No.        ;Code20        ;TableRelation=Customer.No.;
                                                   OnValidate=BEGIN
                                                                IF xRec."Customer No." <> "Customer No." THEN BEGIN
                                                                  IF "Customer No." <> '' THEN BEGIN
                                                                    IF CustRec.GET("Customer No.") THEN BEGIN
                                                                      "Customer Name" := CustRec.Name;
                                                                      "Customer Price Group" := CustRec."Customer Price Group";
                                                                      "Customer Disc. Group" := CustRec."Customer Disc. Group";
                                                                      VALIDATE("Location Code",CustRec."Location Code");
                                                                      "Location Filter" := CustRec."Location Code";
                                                                    END;
                                                                  END ELSE BEGIN
                                                                    "Customer Name" := '';
                                                                    "Customer Price Group" := '';
                                                                    "Customer Disc. Group" := '';
                                                                    VALIDATE("Location Code",CustRec."Location Code");
                                                                    "Location Filter" := '';
                                                                  END;
                                                                END;
                                                              END;
                                                               }
    { 14  ;   ;Item Disc. Group    ;Code20        ;TableRelation="Item Discount Group";
                                                   CaptionML=[ENU=Item Multiplier Group;
                                                              ESM=Grupo dto. producto;
                                                              FRC=Groupe esc. articles/clients;
                                                              ENC=Item Disc. Group] }
    { 18  ;   ;Unit Price          ;Decimal       ;CaptionML=[ENU=Unit Price;
                                                              ESM=Precio unitario;
                                                              FRC=Prix unitaire;
                                                              ENC=Unit Price];
                                                   MinValue=0;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="Currency Code" }
    { 22  ;   ;Unit Cost           ;Decimal       ;CaptionML=[ENU=Unit Cost;
                                                              ESM=Costo unitario;
                                                              FRC=Cot unitaire;
                                                              ENC=Unit Cost];
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 23  ;   ;Customer Price Group;Code10        ;TableRelation="Customer Price Group";
                                                   CaptionML=[ENU=Customer Price Group;
                                                              ESM=Grupo precio cliente;
                                                              FRC=Groupe de prix du client;
                                                              ENC=Customer Price Group] }
    { 25  ;   ;Last Direct Cost    ;Decimal       ;CaptionML=[ENU=Last Direct Cost;
                                                              ESM=éltimo costo directo;
                                                              FRC=Dernier cot direct;
                                                              ENC=Last Direct Cost];
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 34  ;   ;Customer Disc. Group;Code20        ;TableRelation="Customer Discount Group";
                                                   CaptionML=[ENU=Customer Multiplier Group;
                                                              ESM=Grupo dto. cliente;
                                                              FRC=Groupe d'escompte du client;
                                                              ENC=Customer Disc. Group] }
    { 54  ;   ;Blocked             ;Boolean       ;CaptionML=[ENU=Blocked;
                                                              ESM=Bloqueado;
                                                              FRC=Bloquï¿½;
                                                              ENC=Blocked] }
    { 67  ;   ;Location Filter     ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation=Location;
                                                   CaptionML=[ENU=Location Filter;
                                                              ESM=Filtro almacn;
                                                              FRC=Filtre emplacement;
                                                              ENC=Location Filter] }
    { 68  ;   ;Inventory           ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Item Ledger Entry".Quantity WHERE (Item No.=FIELD(Item No.),
                                                                                                       Location Code=FIELD(Location Filter)));
                                                   CaptionML=[ENU=Quantity on Hand;
                                                              ESM=Inventario;
                                                              FRC=Inventaire;
                                                              ENC=Quantity on Hand];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 83  ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   OnValidate=BEGIN
                                                                IF "Location Code" <> '' THEN BEGIN
                                                                  SETFILTER("Location Filter","Location Code");
                                                                  CALCFIELDS(Inventory,"Qty. on Purch. Order","Qty. on Sales Order","Qty. on Assembly Order","Qty. on Asm. Component");
                                                                END ELSE BEGIN
                                                                  CLEAR("Location Filter");
                                                                  CALCFIELDS(Inventory,"Qty. on Purch. Order","Qty. on Sales Order","Qty. on Assembly Order","Qty. on Asm. Component");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Location Code;
                                                              ESM=C¢d. almacn;
                                                              FRC=Code d'emplacement;
                                                              ENC=Location Code] }
    { 84  ;   ;Qty. on Purch. Order;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Outstanding Qty. (Base)" WHERE (Document Type=CONST(Order),
                                                                                                                    Type=CONST(Item),
                                                                                                                    No.=FIELD(Item No.),
                                                                                                                    Location Code=FIELD(Location Filter)));
                                                   CaptionML=[ENU=Qty. on Purch. Order;
                                                              ESM=Cdad. en pedidos compra;
                                                              FRC=Quantit sur bon de commande;
                                                              ENC=Qty. on Purch. Order];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 85  ;   ;Qty. on Sales Order ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Line"."Outstanding Qty. (Base)" WHERE (Document Type=CONST(Order),
                                                                                                                 Type=CONST(Item),
                                                                                                                 No.=FIELD(Item No.),
                                                                                                                 Location Code=FIELD(Location Filter)));
                                                   CaptionML=[ENU=Qty. on Sales Order;
                                                              ESM=Cdad. en pedidos venta;
                                                              FRC=Qt sur document de vente;
                                                              ENC=Qty. on Sales Order];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 91  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              ESM=C¢d. divisa;
                                                              FRC=Code devise;
                                                              ENC=Currency Code];
                                                   Editable=No }
    { 95  ;   ;Average Unit Cost   ;Decimal       ;OnValidate=BEGIN
                                                                //MESSAGE('Pankaj');
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:4;
                                                   Description=TPZ2881;
                                                   Editable=No }
    { 96  ;   ;Replacement Cost    ;Decimal       ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:4;
                                                   Description=TPZ3125;
                                                   Editable=No }
    { 977 ;   ;Qty. on Assembly Order;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Assembly Header"."Remaining Quantity (Base)" WHERE (Document Type=CONST(Order),
                                                                                                                        Item No.=FIELD(Item No.),
                                                                                                                        Location Code=FIELD(Location Filter)));
                                                   CaptionML=[ENU=Qty. on Assembly Order;
                                                              ESM=Cdad. en pedido de ensamblado;
                                                              FRC=Qt sur ordre d'assemblage;
                                                              ENC=Qty. on Assembly Order];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 978 ;   ;Qty. on Asm. Component;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Assembly Line"."Remaining Quantity (Base)" WHERE (Document Type=CONST(Order),
                                                                                                                      Type=CONST(Item),
                                                                                                                      No.=FIELD(Item No.),
                                                                                                                      Location Code=FIELD(Location Filter)));
                                                   CaptionML=[ENU=Qty. on Asm. Component;
                                                              ESM=Cdad. componentes;
                                                              FRC=Qt sur composante d'assemblage;
                                                              ENC=Qty. on Asm. Component];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5413;   ;Safety Stock Quantity;Decimal      ;CaptionML=[ENU=Safety Stock Quantity;
                                                              ESM=Inventario de seguridad;
                                                              FRC=Quantit de stocks de scurit;
                                                              ENC=Safety Stock Quantity];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 5425;   ;Sales Unit of Measure;Code10       ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[ENU=Sales Unit of Measure;
                                                              ESM=Unidad medida venta;
                                                              FRC=Unit de mesure vente;
                                                              ENC=Sales Unit of Measure] }
    { 50000;  ;Qty. on Pick        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Warehouse Activity Line"."Qty. Outstanding (Base)" WHERE (Activity Type=CONST(Pick),
                                                                                                                              Item No.=FIELD(Item No.),
                                                                                                                              Location Code=FIELD(Location Filter),
                                                                                                                              Action Type=FILTER(' '|Take),
                                                                                                                              Breakbulk No.=CONST(0)));
                                                   CaptionML=ENU=Qty. on Pick;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 50001;  ;Last Unit Price     ;Decimal       ;AutoFormatType=2 }
    { 50002;  ;Last Price UOM      ;Code10        ;Editable=No }
    { 50003;  ;Last Price Qty.     ;Decimal       ;DecimalPlaces=0:5;
                                                   Editable=No }
    { 50004;  ;Last Price User ID  ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No }
    { 50005;  ;Last Price Date     ;Date           }
    { 50014;  ;Pricing Logic       ;Option        ;OptionCaptionML=ENU=" ,Sales Price,Hot Sheet,Sales Line Multiplier(Cust.),Sales Line Multiplier(Cust. Mult. Grp.),Customer Base Multiplier,Item Unit Price";
                                                   OptionString=[ ,Sales Price,Hot Sheet,Sales Line Multiplier(Cust.),Sales Line Multiplier(Cust. Mult. Grp.),Customer Base Multiplier,Item Unit Price];
                                                   Description=TOP230;
                                                   Editable=No }
    { 50030;  ;Price Book Code     ;Code10        ;TableRelation="Price Book" }
    { 50031;  ;Description 2       ;Text50        ;Description=TOP2340 }
  }
  KEYS
  {
    {    ;User ID                                 ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1000000001 : TextConst 'ENU=%1 must be blank.;ESM=%1 debe ser blanco.;FRC=%1 doit tre blanc.;ENC=%1 must be blank.';
      Text003@1000000000 : TextConst 'ENU="You can only change the %1 and %2 from the Campaign Card when %3 = %4.";ESM="Solo puede modificar el %1 y %2 desde la Ficha campa¤a cuando %3 = %4.";FRC="Vous ne pouvez modifier les valeurs %1 et %2 des champs de la fiche promotion que lorsque %3 = %4.";ENC="You can only change the %1 and %2 from the Campaign Card when %3 = %4."';
      Campaign@1000000002 : Record 5071;
      ItemRec@1000000003 : Record 27;
      CustRec@1000000004 : Record 18;
      UserMgt@1000000005 : Codeunit 418;
      ItemCustMultRec@1000000006 : Record 50026;
      Text50000@1000000007 : TextConst 'ENU=You can enter items with Price Book Code %1 only.';

    PROCEDURE GetAvgCostPerUnit@1000000065(ItemNoPara@1000000000 : Code[20];UnitCost@1000000002 : Decimal) : Decimal;
    VAR
      ItemLedgerEntry@1000000003 : Record 32;
      TotalCostPerUnit@1000000004 : Decimal;
      ItemLoc@1000000007 : Record 27;
      TotalRemainingQty@1000000008 : Decimal;
      NoOfEntry@1000000005 : Integer;
      AvgCostPerUnit@1000000001 : Decimal;
    BEGIN
      ////TPZ2881 PSHUKLA new functionality for Avg Unit cost per location
      TotalCostPerUnit := 0;
      TotalRemainingQty := 0;
      NoOfEntry := 0;
      AvgCostPerUnit := 0;
      IF ItemLoc.GET(ItemNoPara) THEN BEGIN
        ItemLedgerEntry.RESET;
        ItemLedgerEntry.SETCURRENTKEY("Item No.",Open,"Variant Code",Positive,"Location Code","Posting Date");
        ItemLedgerEntry.SETRANGE("Item No.",ItemNoPara);
        ItemLedgerEntry.SETRANGE(Open,TRUE);
        ItemLedgerEntry.SETFILTER("Location Code",'<>%1&<>%2','ONWATER','OWTRANSIT');
        IF ItemLedgerEntry.FINDFIRST THEN
          REPEAT
            ItemLedgerEntry.CALCFIELDS("Cost per Unit","Cost Amount (Actual)","Cost Amount (Expected)");
            //TotalCostPerUnit += (ItemLedgerEntry."Cost per Unit" * ItemLedgerEntry."Remaining Quantity");
            //TotalCostPerUnit += ItemLedgerEntry."Cost per Unit"; //Avg of cos per unit
            IF ItemLedgerEntry.Quantity > 0 THEN
              TotalCostPerUnit += (((ItemLedgerEntry."Cost Amount (Actual)" + ItemLedgerEntry."Cost Amount (Expected)")
                                  /ItemLedgerEntry.Quantity) * ItemLedgerEntry."Remaining Quantity")
            ELSE
              TotalCostPerUnit += ((ItemLedgerEntry."Cost Amount (Actual)" + ItemLedgerEntry."Cost Amount (Expected)")
                                   * ItemLedgerEntry."Remaining Quantity");
            TotalRemainingQty += ItemLedgerEntry."Remaining Quantity";
            //NoOfEntry += 1;
          UNTIL ItemLedgerEntry.NEXT = 0;

        IF TotalRemainingQty = 0 THEN
            TotalRemainingQty := 1;
        AvgCostPerUnit := ROUND(TotalCostPerUnit/TotalRemainingQty,0.0001,'=');
        //IF AvgCostPerUnit = 0 THEN
          //AvgCostPerUnit := ROUND(UnitCost,0.0001,'=');
      END;
      EXIT(AvgCostPerUnit);
    END;

    BEGIN
    {
      TOP100B KT ABCSI Item Cust. Avail. & Price 08072015
        - Created this table as part of the SMT
        - Added fields Last Unit Price, Last Price UOM, Last Price Qty., Last Price User ID, Last Price Date

      TOP230 KT ABCSI - Topaz Fixes - 07142015
        - Added a new field "Pricing Logic"

      2016-01-26 TOP8714 TAKHMETO
        Item Validation has been modified

      2018-07-06 TOP2340 UCHOUHAN
        - Added new field "Description 2" and Updated from Item table.

      TPZ2785 05112020 GGUPTA Remove Item blocking Topaz Customization
      001 TPZ3125 PKS 05042021 Added Replacement Cost field and code to populate data.
    }
    END.
  }
}

