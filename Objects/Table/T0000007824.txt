OBJECT Table 7824 MS-QBO Setup
{
  OBJECT-PROPERTIES
  {
    Date=11/22/17;
    Time=12:00:00 PM;
    Version List=NAVW111.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=MS-QBO Setup;
               ESM=MS - Configuraci¢n de QBO;
               FRC=Configuration MS-QBO;
               ENC=MS-QBO Setup];
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=[ENU=Primary Key;
                                                              ESM=Clave principal;
                                                              FRC=Cl‚ primaire;
                                                              ENC=Primary Key] }
    { 2   ;   ;Realm Id            ;Text250       ;CaptionML=[ENU=Realm Id;
                                                              ESM=Id. de territorio;
                                                              FRC=Code domaine;
                                                              ENC=Realm Id] }
    { 3   ;   ;Token Key           ;Text250       ;CaptionML=[ENU=Token Key;
                                                              ESM=Clave de token;
                                                              FRC=Cl‚ de jeton;
                                                              ENC=Token Key] }
    { 4   ;   ;Token Secret        ;Text250       ;CaptionML=[ENU=Token Secret;
                                                              ESM=Secreto de token;
                                                              FRC=Cl‚ secrŠte du jeton;
                                                              ENC=Token Secret] }
    { 5   ;   ;Enabled             ;Boolean       ;OnValidate=VAR
                                                                WebhooksAdapterMgt@1000 : Codeunit 2201;
                                                                WebhooksAdapterUri@1002 : Text[250];
                                                              BEGIN
                                                                IF NOT Enabled THEN BEGIN
                                                                  WebhooksAdapterUri := COPYSTR(WebhooksAdapterMgt.GetWebhooksAdapterUri(FALSE),1,250);
                                                                  IF WebhooksAdapterUri = '' THEN BEGIN
                                                                    WebhooksAdapterUriNotFound;
                                                                    EXIT;
                                                                  END ;

                                                                  WebhooksAdapterMgt.DeleteWebhookSubscription(WebhooksAdapterUri);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Enabled;
                                                              ESM=Habilitado;
                                                              FRC=Activ‚;
                                                              ENC=Enabled] }
    { 6   ;   ;Default Tax Code    ;Text250       ;CaptionML=[ENU=Default Tax Code;
                                                              ESM=C¢d. de impuesto predeterminado;
                                                              FRC=Code taxe par d‚faut;
                                                              ENC=Default Tax Code] }
    { 7   ;   ;Default Country     ;Code10        ;OnValidate=BEGIN
                                                                CASE "Default Country" OF
                                                                  'CA':
                                                                    VALIDATE("Default Country As Option","Default Country As Option"::Canada);
                                                                  'GB':
                                                                    VALIDATE("Default Country As Option","Default Country As Option"::UK);
                                                                  'US':
                                                                    VALIDATE("Default Country As Option","Default Country As Option"::USA);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Default Country;
                                                              ESM=Pa¡s predeterminado;
                                                              FRC=Pays par d‚faut;
                                                              ENC=Default Country] }
    { 8   ;   ;Default Country As Option;Option   ;CaptionML=[ENU=Default Country As Option;
                                                              ESM=Pa¡s predeterminado como opci¢n;
                                                              FRC=Pays par d‚faut en option;
                                                              ENC=Default Country As Option];
                                                   OptionCaptionML=[@@@={Locked};
                                                                    ENU=Unknown,Canada,UK,USA;
                                                                    ESM=Unknown,Canada,UK,USA;
                                                                    FRC=Unknown,Canada,UK,USA;
                                                                    ENC=Unknown,Canada,UK,USA];
                                                   OptionString=Unknown,Canada,UK,USA }
    { 9   ;   ;Default Tax Rate    ;Text250       ;CaptionML=[ENU=Default Tax Rate;
                                                              ESM=Tasa de impuesto predeterminada;
                                                              FRC=Taux de taxe par d‚faut;
                                                              ENC=Default Tax Rate] }
    { 10  ;   ;Default Discount Account Id;Text250;CaptionML=[ENU=Default Discount Account Id;
                                                              ESM=Id. de cuenta de descuento predeterminada;
                                                              FRC=ID compte d'escompte par d‚faut;
                                                              ENC=Default Discount Account Id] }
    { 11  ;   ;Default Discount Account Code;Text250;
                                                   CaptionML=[ENU=Default Discount Account Code;
                                                              ESM=C¢d. de cuenta de descuento predeterminada;
                                                              FRC=Code compte d'escompte par d‚faut;
                                                              ENC=Default Discount Account Code] }
    { 12  ;   ;Target Application  ;Option        ;CaptionML=[ENU=Target Application;
                                                              ESM=Aplicaci¢n de destino;
                                                              FRC=Affectation cible;
                                                              ENC=Target Application];
                                                   OptionCaptionML=[ENU=InvoicingApp,BusinessCenter,NativeInvoicingApp;
                                                                    ESM=InvoicingApp,BusinessCenter,NativeInvoicingApp;
                                                                    FRC=InvoicingApp,BusinessCenter,NativeInvoicingApp;
                                                                    ENC=InvoicingApp,BusinessCenter,NativeInvoicingApp];
                                                   OptionString=InvoicingApp,BusinessCenter,NativeInvoicingApp }
    { 13  ;   ;Access Tokens Last Fetched On;DateTime;
                                                   CaptionML=[ENU=Access Tokens Last Fetched On;
                                                              ESM=Tokens de acceso recuperados por £ltima vez el;
                                                              FRC=DerniŠre r‚cup‚ration des jetons d'accŠs;
                                                              ENC=Access Tokens Last Fetched On] }
    { 14  ;   ;Last Configuration Error;Text250   ;CaptionML=[ENU=Last Configuration Error;
                                                              ESM=éltimo error de configuraci¢n;
                                                              FRC=DerniŠre erreur de configuration;
                                                              ENC=Last Configuration Error] }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      QuickBooksCommunicationErr@1000 : TextConst 'ENU=Oops, an error occured when communicating with QuickBooks Online. Please try again later.;ESM=Vaya, se produjo un error al comunicarse con QuickBooks Online. Int‚ntelo de nuevo m s tarde.;FRC=D‚sol‚e, une erreur s''est produite lors de la communication avec QuickBooks Online. R‚essayez ult‚rieurement.;ENC=Oops, an error occured when communicating with QuickBooks Online. Please try again later.';

    PROCEDURE InitializeSetup@2(TokenKey@1001 : Text[250];TokenSecret@1002 : Text[250];RealmId@1003 : Text[250];TargetApplication@1008 : 'InvoicingApp,BusinessCenter,NativeInvoicingApp');
    VAR
      ExtTxtIDIntegrationRecord@1004 : Record 5377;
      MSQBOCustomer@1005 : Record 7820;
      MSQBOItem@1006 : Record 7821;
      MSQBOInvoice@1007 : Record 7822;
      FirstInsertion@1000 : Boolean;
    BEGIN
      IF NOT GET THEN BEGIN
        INIT;
        INSERT;
        FirstInsertion := TRUE;
      END;
      IF ("Realm Id" <> RealmId) AND NOT FirstInsertion THEN BEGIN
        ExtTxtIDIntegrationRecord.DELETEALL;
        MSQBOCustomer.DELETEALL;
        MSQBOItem.DELETEALL;
        MSQBOInvoice.DELETEALL;
      END;
      "Realm Id" := RealmId;
      InitializeTokens(TokenKey,TokenSecret,FALSE);
      "Target Application" := TargetApplication;
      "Last Configuration Error" := '';
      Enabled := FALSE;
      MODIFY;
    END;

    PROCEDURE SetLastConfigurationError@6(ErrorMessage@1000 : Text[250]);
    BEGIN
      IF NOT GET THEN
        InitializeSetup('','','',0);

      "Last Configuration Error" := ErrorMessage;
      MODIFY;
      COMMIT;
    END;

    PROCEDURE InitializeTokens@4(TokenKey@1001 : Text[250];TokenSecret@1000 : Text[250];CallModify@1002 : Boolean);
    VAR
      DateTimeNow@1003 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.DateTime";
    BEGIN
      "Token Key" := TokenKey;
      "Token Secret" := TokenSecret;
      DateTimeNow := DateTimeNow.Now;
      "Access Tokens Last Fetched On" := DateTimeNow.AddDays(1);
      IF CallModify THEN
        MODIFY;
    END;

    PROCEDURE SynchronizationIsSetUp@3() : Boolean;
    BEGIN
      IF NOT GET THEN
        EXIT(FALSE);

      EXIT(("Realm Id" <> '') AND ("Token Key" <> '') AND ("Token Secret" <> '') AND Enabled);
    END;

    PROCEDURE SetDefaultCountry@1(MSQBOTableMgt@1000 : Codeunit 7820);
    VAR
      JSONManagement@1004 : Codeunit 5459;
      CompanyInfoJToken@1003 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JArray";
      CompanyInfoJObject@1002 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JObject";
      Value@1001 : Variant;
    BEGIN
      MSQBOTableMgt.GetEntity("Realm Id",'CompanyInfo',CompanyInfoJToken);

      IF ISNULL(CompanyInfoJToken) THEN
        ERROR(QuickBooksCommunicationErr);

      CompanyInfoJObject := CompanyInfoJToken.Root;
      IF JSONManagement.GetPropertyValueFromJObjectByPath(CompanyInfoJObject,'CompanyInfo.Country',Value)
      THEN BEGIN
        VALIDATE("Default Country",Value);
        MODIFY(TRUE);
      END;
    END;

    [Integration]
    LOCAL PROCEDURE WebhooksAdapterUriNotFound@5();
    BEGIN
    END;

    BEGIN
    END.
  }
}

