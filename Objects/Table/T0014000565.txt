OBJECT Table 14000565 Suggested Order Header
{
  OBJECT-PROPERTIES
  {
    Date=09/28/20;
    Time=[ 9:08:49 AM];
    Modified=Yes;
    Version List=UBP3.03;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,Buy-from Vendor Name;
    OnDelete=VAR
               SurplusEntry@1240020000 : Record 14002668;
             BEGIN
               // users cannot remove suggested order lines unless "manually created" so loop and delete here
               // to clean out the surplus values and update from the "transfer-to" Location
               SugOrderLine.LOCKTABLE;
               SugOrderLine.SETRANGE("Buy-from Vendor No.","Buy-from Vendor No.");
               SugOrderLine.SETRANGE("Document No.","No.");
               IF SugOrderLine.FINDSET THEN BEGIN
                 SurplusInventoryValue.SETCURRENTKEY("Buy-from Vendor No.","Suggested Order No.");
                 SurplusInventoryValue.SETRANGE("Buy-from Vendor No.","Buy-from Vendor No.");
                 SurplusInventoryValue.SETRANGE("Suggested Order No.","No.");
                 REPEAT
                   SurplusInventoryValue.SETRANGE("Location Code", "Location Code");
                   IF SurplusInventoryValue.FINDSET THEN BEGIN
                     REPEAT
                       SurplusEntry.LOCKTABLE(TRUE, FALSE);
                       SurplusEntry.SETRANGE("Location Code", SurplusInventoryValue."Location Code");
                       SurplusEntry.SETRANGE("Item No.", SurplusInventoryValue."Item No.");
                       SurplusEntry.SETRANGE("Variant Code", SurplusInventoryValue."Variant Code");
                       SurplusEntry.SETRANGE("Source Type", 1);
                       SurplusEntry.SETRANGE("Source No.", "No.");
                       SurplusEntry.SETRANGE("Transfer-to Code", SugOrderLine."Location Code");
                       SurplusEntry.DELETEALL(TRUE);

                       SurplusInventoryValue."Buy-from Vendor No." := '';
                       SurplusInventoryValue."Suggested Order No." := '';
                       SurplusInventoryValue."Quantity To Transfer" := 0;
                       SurplusInventoryValue."Quantity Transferred" := 0;
                       SurplusInventoryValue.MODIFY;
                     UNTIL SurplusInventoryValue.NEXT = 0;
                   END;
                   SugOrderLine.DELETE(FALSE);
                 UNTIL SugOrderLine.NEXT = 0;
               END;
             END;

    OnRename=BEGIN
               ERROR(Text002,TABLECAPTION);
             END;

    CaptionML=ENU=Suggested Order Header;
    LookupPageID=Page14000577;
    DrillDownPageID=Page14000577;
  }
  FIELDS
  {
    { 1   ;   ;Buy-from Vendor No. ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=ENU=Buy-from Vendor No. }
    { 2   ;   ;No.                 ;Code20        ;CaptionML=ENU=No. }
    { 11  ;   ;Your Reference      ;Text30        ;CaptionML=ENU=Your Reference }
    { 12  ;   ;Ship-to Name        ;Text50        ;CaptionML=ENU=Ship-to Name }
    { 13  ;   ;Ship-to Name 2      ;Text50        ;CaptionML=ENU=Ship-to Name 2 }
    { 14  ;   ;Ship-to Address     ;Text50        ;CaptionML=ENU=Ship-to Address }
    { 15  ;   ;Ship-to Address 2   ;Text50        ;CaptionML=ENU=Ship-to Address 2 }
    { 16  ;   ;Ship-to City        ;Text50        ;CaptionML=ENU=Ship-to City }
    { 17  ;   ;Ship-to Contact     ;Text50        ;CaptionML=ENU=Ship-to Contact }
    { 18  ;   ;Order Date          ;Date          ;CaptionML=ENU=Order Date }
    { 19  ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   CaptionML=ENU=Shipment Method Code }
    { 20  ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   OnValidate=BEGIN
                                                                UpdateShipToAddress;
                                                              END;

                                                   CaptionML=ENU=Location Code }
    { 21  ;   ;Buy-from Vendor Name;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Buy-from Vendor No.)));
                                                   CaptionML=ENU=Buy-from Vendor Name;
                                                   Editable=No }
    { 22  ;   ;Buy-from Vendor Name 2;Text50      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor."Name 2" WHERE (No.=FIELD(Buy-from Vendor No.)));
                                                   CaptionML=ENU=Buy-from Vendor Name 2;
                                                   Editable=No }
    { 23  ;   ;Buy-from Address    ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Address WHERE (No.=FIELD(Buy-from Vendor No.)));
                                                   CaptionML=ENU=Buy-from Address;
                                                   Editable=No }
    { 24  ;   ;Buy-from Address 2  ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor."Address 2" WHERE (No.=FIELD(Buy-from Vendor No.)));
                                                   CaptionML=ENU=Buy-from Address 2 }
    { 25  ;   ;Buy-from City       ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.City WHERE (No.=FIELD(Buy-from Vendor No.)));
                                                   CaptionML=ENU=Buy-from City;
                                                   Editable=No }
    { 26  ;   ;Buy-from Contact    ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Contact WHERE (No.=FIELD(Buy-from Vendor No.)));
                                                   CaptionML=ENU=Buy-from Contact;
                                                   Editable=No }
    { 27  ;   ;Buy-from Post Code  ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor."Post Code" WHERE (No.=FIELD(Buy-from Vendor No.)));
                                                   TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Buy-from Post Code;
                                                   Editable=No }
    { 28  ;   ;Buy-from County     ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.County WHERE (No.=FIELD(Buy-from Vendor No.)));
                                                   CaptionML=ENU=Buy-from County }
    { 29  ;   ;Buy-from Country Code;Code10       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor."Country/Region Code" WHERE (No.=FIELD(Buy-from Vendor No.)));
                                                   TableRelation=Country/Region.Code;
                                                   CaptionML=ENU=Buy-from Country Code }
    { 30  ;   ;Ship-to Post Code   ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Ship-to Post Code }
    { 31  ;   ;Ship-to County      ;Text30        ;CaptionML=ENU=Ship-to County }
    { 32  ;   ;Ship-to Country Code;Code10        ;TableRelation=Country/Region.Code;
                                                   CaptionML=ENU=Ship-to Country Code }
    { 33  ;   ;Document Date       ;Date          ;CaptionML=ENU=Document Date }
    { 34  ;   ;Requested Receipt Date;Date        ;CaptionML=ENU=Requested Receipt Date }
    { 35  ;   ;Creation Date       ;Date          ;CaptionML=ENU=Creation Date }
    { 36  ;   ;Created By          ;Code60        ;CaptionML=ENU=Created By }
    { 45  ;   ;Procurement Group Code;Code10      ;CaptionML=ENU=Procurement Group Code;
                                                   Editable=No }
    { 46  ;   ;Posting No.         ;Code20        ;CaptionML=ENU=Posting No.;
                                                   Editable=No }
    { 47  ;   ;Posting No. Series  ;Code20        ;CaptionML=ENU=Posting No. Series }
    { 48  ;   ;Amount              ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Suggested Order Line"."Line Amount" WHERE (Buy-from Vendor No.=FIELD(Buy-from Vendor No.),
                                                                                                               Document No.=FIELD(No.),
                                                                                                               Override Vendor No.=FIELD(Override Vendor Filter)));
                                                   CaptionML=ENU=Amount;
                                                   Editable=No }
    { 49  ;   ;Net Weight          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Suggested Order Line"."Line Net Weight" WHERE (Buy-from Vendor No.=FIELD(Buy-from Vendor No.),
                                                                                                                   Document No.=FIELD(No.),
                                                                                                                   Override Vendor No.=FIELD(Override Vendor Filter)));
                                                   CaptionML=ENU=Net Weight;
                                                   Editable=No }
    { 50  ;   ;Gross Weight        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Suggested Order Line"."Line Gross Weight" WHERE (Buy-from Vendor No.=FIELD(Buy-from Vendor No.),
                                                                                                                     Document No.=FIELD(No.),
                                                                                                                     Override Vendor No.=FIELD(Override Vendor Filter)));
                                                   CaptionML=ENU=Gross Weight;
                                                   Editable=No }
    { 51  ;   ;Volume              ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Suggested Order Line"."Line Volume" WHERE (Buy-from Vendor No.=FIELD(Buy-from Vendor No.),
                                                                                                               Document No.=FIELD(No.),
                                                                                                               Override Vendor No.=FIELD(Override Vendor Filter)));
                                                   CaptionML=ENU=Volume;
                                                   Editable=No }
    { 64  ;   ;Override Vendor Filter;Code20      ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Override Vendor Filter }
    { 65  ;   ;Container Code      ;Code20        ;TableRelation="Container Definition".Code;
                                                   CaptionML=ENU=Container Code }
    { 67  ;   ;Purchaser Code      ;Code20        ;TableRelation=Salesperson/Purchaser.Code;
                                                   CaptionML=ENU=Purchaser Code }
    { 68  ;   ;Container Plan No.  ;Code20        ;CaptionML=ENU=Container Plan No.;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Buy-from Vendor No.,No.                 ;Clustered=Yes }
    {    ;Purchaser Code                           }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      InvMgtSetup@14000500 : Record 14000551;
      Location@14000501 : Record 14;
      ProcGroup@14000502 : Record 14000564;
      SugOrderLine@14000503 : Record 14000566;
      Text001@14000504 : TextConst 'ENU=You can not insert a %1 manually.';
      Text002@14000505 : TextConst 'ENU=You can not rename a %1.';
      VendBuyingCalendar@14000506 : Record 14000563;
      SurplusInventoryValue@1240030001 : Record 14000584;
      NoSeriesMgt@14000507 : Codeunit 396;
      CalcSurplus@1240030002 : Codeunit 14000577;
      Text003@1240030003 : TextConst 'ENU=No lines found to modify.';
      Text004@1240030004 : TextConst 'ENU=Do you wish to set status on %1 lines?';
      SetupRetrieved@1240020000 : Boolean;
      UBP@1240020001 : Codeunit 14000564;

    PROCEDURE GetPostingNo@10();
    BEGIN
      IF "Posting No." = '' THEN BEGIN
        GetSetup;
        NoSeriesMgt.InitSeries(
          InvMgtSetup."Sugd. Order No. Series",xRec."Posting No. Series",WORKDATE,
          "Posting No.","Posting No. Series");
      END;
    END;

    LOCAL PROCEDURE UpdateShipToAddress@21();
    BEGIN
      IF "Location Code" = '' THEN BEGIN
        "Ship-to Name" := '';
        "Ship-to Name 2" := '';
        "Ship-to Address" := '';
        "Ship-to Address 2" := '';
        "Ship-to City" := '';
        "Ship-to Contact" := '';
        "Ship-to Post Code" := '';
        "Ship-to County" := '';
        "Ship-to Country Code" := '';
      END ELSE BEGIN
        Location.GET("Location Code");
        "Ship-to Name" := Location.Name;
        "Ship-to Name 2" := Location."Name 2";
        "Ship-to Address" := Location.Address;
        "Ship-to Address 2" := Location."Address 2";
        "Ship-to City" := Location.City;
        "Ship-to Contact" := Location.Contact;
        "Ship-to Post Code" := Location."Post Code";
        "Ship-to County" := Location.County;
        "Ship-to Country Code" := Location."Country/Region Code"
      END;
    END;

    PROCEDURE PurchTargetsMet@1() Resp@14000500 : Boolean;
    BEGIN
      SugOrderLine.SETRANGE("Buy-from Vendor No.","Buy-from Vendor No.");
      SugOrderLine.SETRANGE("Document No.","No.");
      IF SugOrderLine.ISEMPTY THEN
        EXIT(FALSE);

      Resp := TRUE;

      CALCFIELDS(Amount,"Net Weight","Gross Weight",Volume);
      IF "Procurement Group Code" <> '' THEN BEGIN
        ProcGroup.SETRANGE("Vendor No.","Buy-from Vendor No.");
        ProcGroup.SETRANGE(Code,"No.");
        IF ProcGroup.FINDFIRST THEN BEGIN
          IF Amount < ProcGroup."Amount Target" THEN
            Resp := FALSE;
          IF "Net Weight" < ProcGroup."Net Weight Target" THEN
            Resp := FALSE;
          IF "Gross Weight" < ProcGroup."Gross Weight Target" THEN
            Resp := FALSE;
          IF Volume < ProcGroup."Volume Target" THEN
            Resp := FALSE;
        END;
      END ELSE BEGIN
        IF UBP.GetVendBuyingCalendarFromSuggOrdHeader(Rec, VendBuyingCalendar) THEN BEGIN
          IF Amount < VendBuyingCalendar."Amount Target" THEN
            Resp := FALSE;
          IF "Net Weight" < VendBuyingCalendar."Net Weight Target" THEN
            Resp := FALSE;
          IF "Gross Weight" < VendBuyingCalendar."Gross Weight Target" THEN
            Resp := FALSE;
          IF Volume < VendBuyingCalendar."Volume Target" THEN
            Resp := FALSE;
        END;
      END;

      EXIT(Resp);
    END;

    LOCAL PROCEDURE GetSetup@1240020009();
    BEGIN
      IF NOT SetupRetrieved THEN BEGIN
        InvMgtSetup.GET;
        SetupRetrieved := TRUE;
      END;
    END;

    BEGIN
    END.
  }
}

