OBJECT Table 11123320 SC - Data Validation Header
{
  OBJECT-PROPERTIES
  {
    Date=07/01/20;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=SCW19.2.0;
  }
  PROPERTIES
  {
    OnInsert=VAR
               Validation@11123302 : Codeunit 11123310;
             BEGIN
               Validation.DefineRefreshCatOverviewReq("Table No.");
             END;

    OnModify=VAR
               Validation@11123302 : Codeunit 11123310;
             BEGIN
               Validation.DefineRefreshCatOverviewReq("Table No.");
             END;

    OnDelete=VAR
               DataValidLine@11123302 : Record 11123321;
               Validation@11123303 : Codeunit 11123310;
             BEGIN
               DataValidLine.SETRANGE("Table No.","Table No.");
               IF NOT DataValidLine.ISEMPTY THEN
                 DataValidLine.DELETEALL(TRUE);

               Validation.DefineRefreshCatOverviewReq("Table No.");
             END;

    OnRename=BEGIN
               CheckRenamePossible(xRec."Table No.");
             END;

    CaptionML=ENU=Data Validation Header;
    LookupPageID=Page11123326;
    DrillDownPageID=Page11123326;
  }
  FIELDS
  {
    { 1   ;   ;Table No.           ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=FILTER(Table));
                                                   OnValidate=VAR
                                                                AllObjWithCaption@11123302 : Record 2000000058;
                                                              BEGIN
                                                                IF ("Table No." <> xRec."Table No.") AND (xRec."Table No." <> 0) THEN
                                                                  CheckRenamePossible(xRec."Table No.");

                                                                AllObjWithCaption.GET(AllObjWithCaption."Object Type"::Table,"Table No.");
                                                                "Table Name" := AllObjWithCaption."Object Name";
                                                              END;

                                                   CaptionML=ENU=Table No.;
                                                   NotBlank=Yes }
    { 2   ;   ;Table Name          ;Text30        ;CaptionML=ENU=Table Name;
                                                   Editable=No }
    { 3   ;   ;Enable Validation Tests;Boolean    ;InitValue=Yes;
                                                   CaptionML=ENU=Enable Validation Tests }
  }
  KEYS
  {
    {    ;Table No.                               ;Clustered=Yes }
    {    ;Enable Validation Tests                  }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text11123302@11123302 : TextConst 'ENU=You cannot change the %1 because at least one %2 exists.';

    PROCEDURE ExecuteValidationTests@11123302(VAR RecRef@11123302 : RecordRef;VAR ErrorText@11123303 : Text[250]) : Boolean;
    VAR
      TempDataValidLine@11123304 : TEMPORARY Record 11123321;
      RecMgt@11123306 : Codeunit 11123326;
      TestSucceed@11123305 : Boolean;
    BEGIN
      IF NOT "Enable Validation Tests" THEN
        EXIT(TRUE);

      IF RecMgt.FindSetDataValidLine("Table No.",TempDataValidLine,FALSE) THEN BEGIN
        TempDataValidLine.SETCURRENTKEY(Priority);
        IF TempDataValidLine.FINDSET THEN
          REPEAT
            TestSucceed := TempDataValidLine.ExecuteValidationTest(RecRef,ErrorText);
          UNTIL (TempDataValidLine.NEXT = 0) OR (NOT TestSucceed);
      END;
      EXIT(TestSucceed);
    END;

    PROCEDURE LookupTableNo@11123303(InTableNo@11123302 : Integer) : Integer;
    VAR
      AllObjWithCaption@11123304 : Record 2000000058;
      TableList@11123303 : Page 11123318;
    BEGIN
      CLEAR(TableList);

      AllObjWithCaption.FILTERGROUP := 2;
      AllObjWithCaption.SETRANGE("Object Type",AllObjWithCaption."Object Type"::Table);
      AllObjWithCaption.FILTERGROUP := 0;

      IF "Table No." <> 0 THEN BEGIN
        AllObjWithCaption."Object Type" := AllObjWithCaption."Object Type"::Table;
        AllObjWithCaption."Object ID" := InTableNo;
        AllObjWithCaption.FIND;
      END ELSE
        AllObjWithCaption.FINDFIRST;

      TableList.LOOKUPMODE := TRUE;
      TableList.SETTABLEVIEW(AllObjWithCaption);
      TableList.SETRECORD(AllObjWithCaption);
      IF TableList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        TableList.GETRECORD(AllObjWithCaption);
        EXIT(AllObjWithCaption."Object ID");
      END;
      EXIT(InTableNo);
    END;

    PROCEDURE CheckRenamePossible@11123304(TableNumber@11123302 : Integer);
    VAR
      DataValidLine@11123304 : Record 11123321;
    BEGIN
      DataValidLine.SETRANGE("Table No.",TableNumber);
      IF NOT DataValidLine.ISEMPTY THEN BEGIN
        MESSAGE(STRSUBSTNO(Text11123302,FIELDCAPTION("Table No."),DataValidLine.TABLECAPTION));
        ERROR('');
      END;
    END;

    PROCEDURE InitDefaultRules@11123305();
    VAR
      Setup@11123303 : Record 11123305;
      Validation@11123302 : Codeunit 11123310;
    BEGIN
      IF Validation.ValidationRulesExist THEN
        EXIT;

      Validation.SetDefaults(0,Setup);
    END;

    BEGIN
    END.
  }
}

