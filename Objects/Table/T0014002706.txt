OBJECT Table 14002706 Forecast Vendor Line
{
  OBJECT-PROPERTIES
  {
    Date=02/22/21;
    Time=[ 3:32:13 PM];
    Version List=UBP3.03;
  }
  PROPERTIES
  {
    CaptionML=ENU=Forecast Vendor Line;
  }
  FIELDS
  {
    { 1   ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=ENU=Vendor No. }
    { 2   ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=ENU=Location Code }
    { 3   ;   ;Item No.            ;Code50        ;TableRelation=Item;
                                                   CaptionML=ENU=Item No. }
    { 4   ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=ENU=Variant Code }
    { 5   ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Title,Forecast;
                                                   OptionString=Title,Forecast }
    { 10  ;   ;Description         ;Text100       ;CaptionML=ENU=Description }
    { 11  ;   ;Period 1 Qty.       ;Decimal       ;OnValidate=BEGIN
                                                                "Period 1" := FormatNum("Period 1 Qty.");
                                                              END;

                                                   CaptionML=ENU=Period 1 Qty. }
    { 12  ;   ;Period 2 Qty.       ;Decimal       ;OnValidate=BEGIN
                                                                "Period 2" := FormatNum("Period 2 Qty.");
                                                              END;

                                                   CaptionML=ENU=Period 2 Qty. }
    { 13  ;   ;Period 3 Qty.       ;Decimal       ;OnValidate=BEGIN
                                                                "Period 3" := FormatNum("Period 3 Qty.");
                                                              END;

                                                   CaptionML=ENU=Period 3 Qty. }
    { 14  ;   ;Period 4 Qty.       ;Decimal       ;OnValidate=BEGIN
                                                                "Period 4" := FormatNum("Period 4 Qty.");
                                                              END;

                                                   CaptionML=ENU=Period 4 Qty. }
    { 15  ;   ;Period 5 Qty.       ;Decimal       ;OnValidate=BEGIN
                                                                "Period 5" := FormatNum("Period 5 Qty.");
                                                              END;

                                                   CaptionML=ENU=Period 5 Qty. }
    { 16  ;   ;Period 6 Qty.       ;Decimal       ;OnValidate=BEGIN
                                                                "Period 6" := FormatNum("Period 6 Qty.");
                                                              END;

                                                   CaptionML=ENU=Period 6 Qty. }
    { 17  ;   ;Period 7 Qty.       ;Decimal       ;OnValidate=BEGIN
                                                                "Period 7" := FormatNum("Period 7 Qty.");
                                                              END;

                                                   CaptionML=ENU=Period 7 Qty. }
    { 18  ;   ;Period 8 Qty.       ;Decimal       ;OnValidate=BEGIN
                                                                "Period 8" := FormatNum("Period 8 Qty.");
                                                              END;

                                                   CaptionML=ENU=Period 8 Qty. }
    { 19  ;   ;Period 9 Qty.       ;Decimal       ;OnValidate=BEGIN
                                                                "Period 9" := FormatNum("Period 9 Qty.");
                                                              END;

                                                   CaptionML=ENU=Period 9 Qty. }
    { 20  ;   ;Period 10 Qty.      ;Decimal       ;OnValidate=BEGIN
                                                                "Period 10" := FormatNum("Period 10 Qty.");
                                                              END;

                                                   CaptionML=ENU=Period 10 Qty. }
    { 21  ;   ;Period 11 Qty.      ;Decimal       ;OnValidate=BEGIN
                                                                "Period 11" := FormatNum("Period 11 Qty.");
                                                              END;

                                                   CaptionML=ENU=Period 11 Qty. }
    { 22  ;   ;Period 12 Qty.      ;Decimal       ;OnValidate=BEGIN
                                                                "Period 12" := FormatNum("Period 12 Qty.");
                                                              END;

                                                   CaptionML=ENU=Period 12 Qty. }
    { 23  ;   ;Period 1            ;Text20        ;OnValidate=BEGIN
                                                                EVALUATE("Period 1 Qty.","Period 1");
                                                              END;

                                                   CaptionML=ENU=Period 1 }
    { 24  ;   ;Period 2            ;Text20        ;OnValidate=BEGIN
                                                                EVALUATE("Period 2 Qty.","Period 2");
                                                              END;

                                                   CaptionML=ENU=Period 2 }
    { 25  ;   ;Period 3            ;Text20        ;OnValidate=BEGIN
                                                                EVALUATE("Period 3 Qty.","Period 3");
                                                              END;

                                                   CaptionML=ENU=Period 3 }
    { 26  ;   ;Period 4            ;Text20        ;OnValidate=BEGIN
                                                                EVALUATE("Period 4 Qty.","Period 4");
                                                              END;

                                                   CaptionML=ENU=Period 4 }
    { 27  ;   ;Period 5            ;Text20        ;OnValidate=BEGIN
                                                                EVALUATE("Period 5 Qty.","Period 5");
                                                              END;

                                                   CaptionML=ENU=Period 5 }
    { 28  ;   ;Period 6            ;Text20        ;OnValidate=BEGIN
                                                                EVALUATE("Period 6 Qty.","Period 6");
                                                              END;

                                                   CaptionML=ENU=Period 6 }
    { 29  ;   ;Period 7            ;Text20        ;OnValidate=BEGIN
                                                                EVALUATE("Period 7 Qty.","Period 7");
                                                              END;

                                                   CaptionML=ENU=Period 7 }
    { 30  ;   ;Period 8            ;Text20        ;OnValidate=BEGIN
                                                                EVALUATE("Period 8 Qty.","Period 8");
                                                              END;

                                                   CaptionML=ENU=Period 8 }
    { 31  ;   ;Period 9            ;Text20        ;OnValidate=BEGIN
                                                                EVALUATE("Period 9 Qty.","Period 9");
                                                              END;

                                                   CaptionML=ENU=Period 9 }
    { 32  ;   ;Period 10           ;Text20        ;OnValidate=BEGIN
                                                                EVALUATE("Period 10 Qty.","Period 10");
                                                              END;

                                                   CaptionML=ENU=Period 10 }
    { 33  ;   ;Period 11           ;Text20        ;OnValidate=BEGIN
                                                                EVALUATE("Period 11 Qty.","Period 11");
                                                              END;

                                                   CaptionML=ENU=Period 11 }
    { 34  ;   ;Period 12           ;Text20        ;OnValidate=BEGIN
                                                                EVALUATE("Period 12 Qty.","Period 12");
                                                              END;

                                                   CaptionML=ENU=Period 12 }
    { 35  ;   ;Period 13           ;Text20        ;OnValidate=BEGIN
                                                                EVALUATE("Period 13 Qty.","Period 13");
                                                              END;

                                                   CaptionML=ENU=Period 13 }
    { 36  ;   ;Period 14           ;Text20        ;OnValidate=BEGIN
                                                                EVALUATE("Period 14 Qty.","Period 14");
                                                              END;

                                                   CaptionML=ENU=Period 14 }
    { 37  ;   ;Period 15           ;Text20        ;OnValidate=BEGIN
                                                                EVALUATE("Period 15 Qty.","Period 15");
                                                              END;

                                                   CaptionML=ENU=Period 15 }
    { 38  ;   ;Period 13 Qty.      ;Decimal       ;OnValidate=BEGIN
                                                                "Period 13" := FormatNum("Period 13 Qty.");
                                                              END;

                                                   CaptionML=ENU=Period 13 Qty. }
    { 39  ;   ;Period 14 Qty.      ;Decimal       ;OnValidate=BEGIN
                                                                "Period 14" := FormatNum("Period 14 Qty.");
                                                              END;

                                                   CaptionML=ENU=Period 14 Qty. }
    { 40  ;   ;Period 15 Qty.      ;Decimal       ;OnValidate=BEGIN
                                                                "Period 15" := FormatNum("Period 15 Qty.");
                                                              END;

                                                   CaptionML=ENU=Period 15 Qty. }
    { 43  ;   ;Period 1 Date       ;Date          ;CaptionML=ENU=Period 1 Date }
    { 44  ;   ;Period 2 Date       ;Date          ;CaptionML=ENU=Period 2 Date }
    { 45  ;   ;Period 3 Date       ;Date          ;CaptionML=ENU=Period 3 Date }
    { 46  ;   ;Period 4 Date       ;Date          ;CaptionML=ENU=Period 4 Date }
    { 47  ;   ;Period 5 Date       ;Date          ;CaptionML=ENU=Period 5 Date }
    { 48  ;   ;Period 6 Date       ;Date          ;CaptionML=ENU=Period 6 Date }
    { 49  ;   ;Period 7 Date       ;Date          ;CaptionML=ENU=Period 7 Date }
    { 50  ;   ;Period 8 Date       ;Date          ;CaptionML=ENU=Period 8 Date }
    { 51  ;   ;Period 9 Date       ;Date          ;CaptionML=ENU=Period 9 Date }
    { 52  ;   ;Period 10 Date      ;Date          ;CaptionML=ENU=Period 10 Date }
    { 53  ;   ;Period 11 Date      ;Date          ;CaptionML=ENU=Period 11 Date }
    { 54  ;   ;Period 12 Date      ;Date          ;CaptionML=ENU=Period 12 Date }
    { 55  ;   ;Period 13 Date      ;Date          ;CaptionML=ENU=Period 13 Date }
    { 56  ;   ;Period 14 Date      ;Date          ;CaptionML=ENU=Period 14 Date }
    { 57  ;   ;Period 15 Date      ;Date          ;CaptionML=ENU=Period 15 Date }
    { 58  ;   ;Lead Time Horizon Days;Integer     ;CaptionML=ENU=Lead Time Horizon Days }
    { 59  ;   ;Vendor Item No.     ;Text50        ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Vendor Item No. }
    { 60  ;   ;Description 2       ;Text50        ;CaptionML=ENU=Description 2 }
  }
  KEYS
  {
    {    ;Vendor No.,Location Code,Item No.,Variant Code,Type;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Item@1240020004 : Record 27;
      UBP@1240020001 : Codeunit 14000564;

    PROCEDURE FormatNum@1240030000(NumValue@1240030000 : Decimal) : Text[20];
    VAR
      InvMgtSetup@1240030003 : Record 14000551;
      UBP@1240030004 : Codeunit 14000564;
      Pos@1240030002 : Integer;
      TextNum@1240030001 : Text[20];
    BEGIN
      IF InvMgtSetup."Usage Start Date" = 0D THEN
        InvMgtSetup.GET;
      TextNum := FORMAT(NumValue);
      Pos := STRPOS(TextNum,UBP.DecCharacter);
      IF Pos <> 0 THEN
        TextNum := COPYSTR(TextNum,1,Pos + InvMgtSetup."Item Usage Decimal Places");
      EXIT(TextNum);
    END;

    PROCEDURE ShowItem@1240030002();
    BEGIN
      TESTFIELD("Location Code");
      Item.SETRANGE("No.","Item No.");
      PAGE.RUNMODAL(PAGE::"Item Card",Item);
    END;

    PROCEDURE ShowProcUnit@1240030001();
    VAR
      ProcUnit@1240020002 : Record 14000555;
    BEGIN
      TESTFIELD("Location Code");
      ProcUnit.SETRANGE("Location Code","Location Code");
      ProcUnit.SETRANGE("Item No.","Item No.");
      ProcUnit.SETRANGE("Variant Code","Variant Code");
      PAGE.RUNMODAL(PAGE::"Procurement Unit Card",ProcUnit);
    END;

    PROCEDURE ShowForecast@1240030003();
    VAR
      ProcUnit@1240020002 : Record 14000555;
      ForecastView@1240020000 : Page 14002661;
    BEGIN
      TESTFIELD("Location Code");
      ProcUnit.SETRANGE("Location Code","Location Code");
      ProcUnit.SETRANGE("Item No.","Item No.");
      ProcUnit.SETRANGE("Variant Code","Variant Code");
      ProcUnit.FIND('-');
      CLEAR(ForecastView);
      ForecastView.SetProcUnitandSourceNo(ProcUnit,'');
      ForecastView.RUN;
    END;

    PROCEDURE ShowItemUsage@1240030004();
    VAR
      ItemUsage@1240020003 : Record 14000557;
    BEGIN
      TESTFIELD("Location Code");
      ItemUsage.RESET;
      ItemUsage.SETCURRENTKEY(
        "Location Code","Item No.","Variant Code","Starting Date","Ending Date");
      ItemUsage.SETRANGE("Location Code","Location Code");
      ItemUsage.SETRANGE("Item No.","Item No.");
      ItemUsage.SETRANGE("Variant Code","Variant Code");
      PAGE.RUN(PAGE::"Item Usage List",ItemUsage);
    END;

    PROCEDURE ShowReplenishmentPage@1240020000(Period@1240020001 : Integer);
    VAR
      Text001@1240030000 : TextConst 'ENU=Horizon Period date could not be determined.  Reverting to the procurement unit''s horizon.';
      LocInvRollUpRTC@1240020000 : Page 14097475;
      HorizonDate@1240020002 : Date;
      Location@1240020003 : Record 14;
      ProcUnit@1240020006 : Record 14000555;
      ForecastView@1240020004 : Page 14002661;
    BEGIN
      TESTFIELD("Location Code");
      TESTFIELD("Item No.");
      IF NOT ProcUnit.GET("Location Code","Item No.","Variant Code") THEN
        EXIT;

      HorizonDate := 0D;
      IF Period > 0 THEN BEGIN
        HorizonDate := FindPeriodHorizon(Period);
      END;

      IF (HorizonDate = 0D) THEN BEGIN
        IF GUIALLOWED THEN
          MESSAGE(Text001);
        HorizonDate := UBP.GetLeadTimeHoriz(ProcUnit);
      END;

      IF HorizonDate > 0D THEN BEGIN
        Location.GET("Location Code");
        IF (UBP.SpokesExist(ProcUnit)) OR
          (Location."Roll Up Order Quantity Rule" = Location."Roll Up Order Quantity Rule"::MinSOQ) THEN BEGIN
          LocInvRollUpRTC.LoadRollUPLines(ProcUnit, HorizonDate);
          LocInvRollUpRTC.RUNMODAL;
        END ELSE BEGIN
          CLEAR(ForecastView);
          ForecastView.SetLTHDate(HorizonDate);
          ForecastView.SetProcUnitandSourceNo(ProcUnit,'');
          ForecastView.RUNMODAL;
        END;
      END;
    END;

    LOCAL PROCEDURE FindPeriodHorizon@1240020001(Period@1240020001 : Integer) HorizonDate : Date;
    VAR
      ForcVendLine@1240020000 : Record 14002706;
    BEGIN
      HorizonDate := 0D;
      CASE Period OF
        1: HorizonDate := "Period 1 Date";
        2: HorizonDate := "Period 2 Date";
        3: HorizonDate := "Period 3 Date";
        4: HorizonDate := "Period 4 Date";
        5: HorizonDate := "Period 5 Date";
        6: HorizonDate := "Period 6 Date";
        7: HorizonDate := "Period 7 Date";
        8: HorizonDate := "Period 8 Date";
        9: HorizonDate := "Period 9 Date";
        10: HorizonDate := "Period 10 Date";
        11: HorizonDate := "Period 11 Date";
        12: HorizonDate := "Period 12 Date";
        13: HorizonDate := "Period 13 Date";
        14: HorizonDate := "Period 14 Date";
        15: HorizonDate := "Period 15 Date";
      END;
    END;

    PROCEDURE UpdateItemReference@85(VAR CurrProcUnit@1240020000 : Record 14000555);
    VAR
      CrossRefNo@1240020001 : Code[20];
      UomCode@1240020002 : Code[20];
    BEGIN
      IF CurrProcUnit."Purchase Unit of Measure" <> '' THEN
        UomCode := CurrProcUnit."Purchase Unit of Measure"
      ELSE BEGIN
        GetItem;
        UomCode := Item."Base Unit of Measure";
      END;

      CrossRefNo := FindPurchaseItemCrossRef(UomCode);

      IF CrossRefNo = '' THEN
        VALIDATE("Vendor Item No.", FindVendorItemNo())
      ELSE
        VALIDATE("Vendor Item No.", CrossRefNo);
    END;

    LOCAL PROCEDURE FindPurchaseItemCrossRef@1240020005(UomCode@1240020000 : Code[20]) CrossRefNo : Code[20];
    VAR
      ItemCrossReference@1240020001 : Record 5717;
      ItemVariant@1240020003 : Record 5401;
      Found@1240020002 : Boolean;
    BEGIN
      ItemCrossReference.RESET;
      ItemCrossReference.SETRANGE("Item No.","Item No.");
      ItemCrossReference.SETRANGE("Variant Code","Variant Code");
      ItemCrossReference.SETRANGE("Unit of Measure", UomCode);
      ItemCrossReference.SETRANGE("Cross-Reference Type", ItemCrossReference."Cross-Reference Type"::Vendor);
      ItemCrossReference.SETRANGE("Cross-Reference Type No.", "Vendor No.");
      IF ItemCrossReference.FINDFIRST THEN
        Found := TRUE;

      IF Found THEN BEGIN
        CrossRefNo := ItemCrossReference."Cross-Reference No.";
        IF ItemCrossReference.Description <> '' THEN BEGIN
          Description := ItemCrossReference.Description;
        END;
      END ELSE BEGIN
        CrossRefNo := '';
        IF "Variant Code" <> '' THEN BEGIN
          ItemVariant.GET("Item No.", "Variant Code");
          Description := ItemVariant.Description;
          "Description 2" := ItemVariant."Description 2";
        END ELSE BEGIN
          GetItem();
          Description := Item.Description;
          "Description 2" := Item."Description 2";
        END;
      END;
    END;

    LOCAL PROCEDURE FindVendorItemNo@64() : Code[20];
    VAR
      ItemVend@1000 : Record 99;
    BEGIN
      GetItem();
      ItemVend.INIT;
      ItemVend."Vendor No." := "Vendor No.";
      ItemVend."Variant Code" := "Variant Code";
      Item.FindItemVend(ItemVend, "Location Code");
      EXIT(ItemVend."Vendor Item No.");
    END;

    LOCAL PROCEDURE GetItem@12();
    BEGIN
      TESTFIELD("Item No.");
      IF Item."No." <> "Item No." THEN
        Item.GET("Item No.");
    END;

    PROCEDURE ShowLocInvRollUp@1240030005();
    VAR
      ProcUnit@1240020000 : Record 14000555;
    BEGIN
      TESTFIELD("Location Code");
      TESTFIELD("Item No.");
      IF ProcUnit.GET("Location Code","Item No.","Variant Code") THEN
        UBP.DisplayLocInvRollup(ProcUnit);
    END;

    BEGIN
    END.
  }
}

