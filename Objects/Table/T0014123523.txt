OBJECT Table 14123523 ES Restore Point
{
  OBJECT-PROPERTIES
  {
    Date=04/30/18;
    Time=12:00:00 PM;
    Version List=ES1.41.51;
  }
  PROPERTIES
  {
    Permissions=TableData 14123521=rm,
                TableData 14123523=rimd,
                TableData 2000000004=rimd,
                TableData 2000000005=rimd,
                TableData 2000000053=rimd;
    OnInsert=BEGIN
               ESSecuritySetup.GET;
               ESSecuritySetup.TESTFIELD("Publish Allowed");

               IF Code = '' THEN BEGIN
                 IF ESSecuritySetup."Last Restore Point No." <> '' THEN BEGIN
                   ESSecuritySetup."Last Restore Point No." :=
                     INCSTR(ESSecuritySetup."Last Restore Point No.");
                   ESSecuritySetup.MODIFY;
                   Code := ESSecuritySetup."Last Restore Point No.";
                 END ELSE BEGIN
                   IF ESSecuritySetup."Restore Point Nos." <> '' THEN
                     Code := NoSeriesMgt.GetNextNo(ESSecuritySetup."Restore Point Nos.",WORKDATE,TRUE)
                   ELSE
                     ESSecuritySetup.TESTFIELD("Last Restore Point No.");
                 END;
               END;

               IF "File Name" = '' THEN BEGIN
                 ESSecuritySetup.GET;
                 IF ESSecuritySetup."Default Restore Point FileName" <> '' THEN
                   "File Name" :=
                     ESSecuritySetup.BuildDefaultFileName(
                       ESSecuritySetup."Default Restore Point FileName",MAXSTRLEN("File Name"),Code);
               END;
             END;

    OnDelete=BEGIN
               TESTFIELD(Locked,FALSE);

               DeleteRestPntTables;

               Comment(4,'');
             END;

    CaptionML=ENU=Restore Point;
    LookupPageID=Page14123523;
    DrillDownPageID=Page14123523;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=ENU=Code }
    { 2   ;   ;Description         ;Text250       ;CaptionML=ENU=Description }
    { 3   ;   ;Created By User     ;Code50        ;OnLookup=VAR
                                                              LoginMgt@1240520008 : Codeunit 418;
                                                            BEGIN
                                                              LoginMgt.LookupUserID("Created By User");
                                                            END;

                                                   CaptionML=ENU=Created By User;
                                                   Editable=No }
    { 4   ;   ;Created Date Time   ;DateTime      ;CaptionML=ENU=Created Date Time;
                                                   Editable=No }
    { 6   ;   ;Exported Date Time  ;DateTime      ;CaptionML=ENU=Exported Date Time;
                                                   Editable=No }
    { 7   ;   ;Imported Date Time  ;DateTime      ;CaptionML=ENU=Imported Date Time;
                                                   Editable=No }
    { 8   ;   ;Live Restore Point  ;Boolean       ;CaptionML=ENU=Live Restore Point;
                                                   Editable=No }
    { 9   ;   ;Easy Security Restore Point;Boolean;CaptionML=ENU=Easy Security Restore Point;
                                                   Editable=No }
    { 10  ;   ;Total Records       ;Integer       ;CaptionML=ENU=Total Records;
                                                   Editable=No }
    { 12  ;   ;Windows Logins      ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Restore Point Windows Login" WHERE (Version Code=FIELD(Code)));
                                                   CaptionML=ENU=Users;
                                                   Editable=No }
    { 13  ;   ;Roles               ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Restore Point Role" WHERE (Version Code=FIELD(Code)));
                                                   CaptionML=ENU=Permission Sets;
                                                   Editable=No }
    { 14  ;   ;Companies           ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Restore Point Company" WHERE (Version Code=FIELD(Code)));
                                                   CaptionML=ENU=Companies;
                                                   Editable=No }
    { 15  ;   ;Objects             ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Restore Point Object" WHERE (Version Code=FIELD(Code)));
                                                   CaptionML=ENU=Objects;
                                                   Editable=No }
    { 16  ;   ;Object Informations ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Restore Point Object Info." WHERE (Version Code=FIELD(Code)));
                                                   CaptionML=ENU=Object Informations;
                                                   Editable=No }
    { 21  ;   ;File Name           ;Text250       ;OnValidate=VAR
                                                                ESObjectExplorer@1240520001 : Record 14123901;
                                                              BEGIN
                                                                ESObjectExplorer.CheckCorrectFileName("File Name",TRUE);
                                                              END;

                                                   OnLookup=VAR
                                                              ESObjectExplorer@1240520001 : Record 14123901;
                                                              CommonDialogMgt@1240520008 : Codeunit 14123901;
                                                            BEGIN
                                                              "File Name" := CommonDialogMgt.OpenFile(FIELDCAPTION("File Name"),"File Name",1,'*.txt',1);
                                                              ESObjectExplorer.CheckCorrectFileName("File Name",TRUE);
                                                            END;

                                                   CaptionML=ENU=File Name }
    { 24  ;   ;Create Windows Logins;Boolean      ;OnValidate=BEGIN
                                                                CreateDataWarning;
                                                              END;

                                                   CaptionML=ENU=Create Users }
    { 25  ;   ;Create Windows Acc. Ctrls.;Boolean ;OnValidate=BEGIN
                                                                CreateDataWarning;
                                                              END;

                                                   CaptionML=ENU=Create User Access Controls }
    { 26  ;   ;Create Roles        ;Boolean       ;OnValidate=BEGIN
                                                                CreateDataWarning;
                                                              END;

                                                   CaptionML=ENU=Create Permission Sets }
    { 27  ;   ;Create Role Permissions;Boolean    ;OnValidate=BEGIN
                                                                CreateDataWarning;
                                                              END;

                                                   CaptionML=ENU=Create Permissions }
    { 28  ;   ;Create Companies    ;Boolean       ;OnValidate=BEGIN
                                                                CreateDataWarning;
                                                              END;

                                                   CaptionML=ENU=Create Companies }
    { 29  ;   ;Create Objects      ;Boolean       ;OnValidate=BEGIN
                                                                CreateDataWarning;
                                                              END;

                                                   CaptionML=ENU=Create Objects }
    { 30  ;   ;Create Object Informations;Boolean ;OnValidate=BEGIN
                                                                CreateDataWarning;
                                                              END;

                                                   CaptionML=ENU=Create Object Informations }
    { 31  ;   ;Write to Live       ;Boolean       ;OnValidate=BEGIN
                                                                CreateDataWarning;
                                                              END;

                                                   CaptionML=ENU=Write to Live }
    { 32  ;   ;Write to Easy Security;Boolean     ;OnValidate=BEGIN
                                                                CreateDataWarning;
                                                              END;

                                                   CaptionML=ENU=Write to Easy Security }
    { 33  ;   ;Write By User       ;Code50        ;OnLookup=VAR
                                                              LoginMgt@1240520008 : Codeunit 418;
                                                            BEGIN
                                                              LoginMgt.LookupUserID("Write By User");
                                                            END;

                                                   CaptionML=ENU=Write By User;
                                                   Editable=No }
    { 34  ;   ;Write Start Date Time;DateTime     ;CaptionML=ENU=Write Start Date Time;
                                                   Editable=No }
    { 35  ;   ;Write End Date Time ;DateTime      ;CaptionML=ENU=Write End Date Time;
                                                   Editable=No }
    { 36  ;   ;Imported Restore Point;Boolean     ;CaptionML=ENU=Imported Restore Point;
                                                   Editable=No }
    { 37  ;   ;Locked              ;Boolean       ;CaptionML=ENU=Locked }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;Created Date Time                        }
    {    ;Created By User,Created Date Time        }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Code,Description,Live Restore Point,Easy Security Restore Point,Created Date Time }
  }
  CODE
  {
    VAR
      ESSecuritySetup@1240520008 : Record 14123521;
      NoSeriesMgt@1240520009 : Codeunit 396;
      ESFileMgt@1240520010 : Codeunit 14123502;
      Text001@1001 : TextConst 'ENU=Creating Restore Point from Live\';
      Text002@1002 : TextConst 'ENU=Process #1################################################';
      Text003@1003 : TextConst 'ENU=Updating Restore Point';
      Text006@1006 : TextConst 'ENU=Users';
      Text007@1007 : TextConst 'ENU=User Access Controls';
      Text008@1008 : TextConst 'ENU=Permission Sets';
      Text009@1009 : TextConst 'ENU=Permissions';
      Text010@1010 : TextConst 'ENU=Companies';
      Text011@1011 : TextConst 'ENU=Objects';
      Text012@1012 : TextConst 'ENU=Object Informations';
      Text013@1013 : TextConst 'ENU=Restore Point %1 updated with %2 records.';
      Text014@1014 : TextConst 'ENU=Writing Restore Point to Live\';
      Text015@1015 : TextConst 'ENU=Testing Permissions';
      Text017@1017 : TextConst 'ENU=Testing Users';
      Text018@1000 : TextConst 'ENU=Updating Permission Sets';
      Text019@1019 : TextConst 'ENU=Updating Permissions';
      Text023@1023 : TextConst 'ENU=Testing User Access Controls';
      Text024@1024 : TextConst 'ENU=Deleting User Access Controls';
      Text025@1025 : TextConst 'ENU=Inserting User Access Controls';
      Text026@1026 : TextConst 'ENU=Restore Point %1 has been written to Live with %2 records.';
      Text027@1027 : TextConst 'ENU=Creating Restore Point from Easy Security\';
      Text028@1028 : TextConst 'ENU=Delete all existing data in Easy Security tables?';
      Text029@1029 : TextConst 'ENU=Nothing deleted.';
      Text030@1030 : TextConst 'ENU=Writing Restore Point to Easy Security\';
      Text031@1031 : TextConst 'ENU=Easy Security Data created from Restore Point %1 with %2 records.';
      Text032@1032 : TextConst 'ENU=File %1 already exists, overwrite?';
      Text033@1033 : TextConst 'ENU=Nothing has been exported.';
      Text034@1034 : TextConst 'ENU=Exporting %1 to file\';
      Text035@1035 : TextConst 'ENU=Creating File';
      Text038@1038 : TextConst 'ENU=Closing File';
      Text039@1039 : TextConst 'ENU=Easy Security Restore Point %1 exported to %2 with %3 records.';
      Text040@1040 : TextConst 'ENU=Importing %1 from file\';
      Text041@1041 : TextConst 'ENU=Process #1################################################\';
      Text042@1042 : TextConst 'ENU=Opening file';
      Text043@1043 : TextConst 'ENU=%1 records have been imported from %2.';
      Text046@1046 : TextConst 'ENU=Changing the create and write options directly on a Restore Point is an advanced task.';
      Text047@1047 : TextConst 'ENU=The Publish Permissions window should normally be used for this task.';
      Text048@1240520012 : TextConst 'ENU=User %1 must be a SUPER user.';
      Text049@1240520011 : TextConst 'ENU=Before and after publishing.';
      Text037@1037 : TextConst 'ENU=Writing changes to Live data.';
      Text036@1036 : TextConst 'ENU=%1 is not valid content for this filetype.';
      Window2@1240520001 : Dialog;
      Text101@1005 : TextConst 'ENU=Downloading File.';
      Text102@1004 : TextConst 'ENU=Uploading file.';

    PROCEDURE DeleteRestPntTables@1240520017();
    VAR
      ESRestPntWindowsLogin@1240520014 : Record 14123513;
      ESRestPntWindowsAccCtrl@1240520013 : Record 14123514;
      ESRestPntRole@1240520012 : Record 14123515;
      ESRestPntRolePerm@1240520011 : Record 14123516;
      ESRestPntCompany@1240520010 : Record 14123517;
      ESRestPntObject@1240520009 : Record 14123518;
      ESRestPntObjectInfo@1240520008 : Record 14123519;
    BEGIN
      ESRestPntWindowsLogin.RESET;
      ESRestPntWindowsLogin.SETRANGE("Version Code",Code);
      ESRestPntWindowsLogin.DELETEALL;

      ESRestPntWindowsAccCtrl.RESET;
      ESRestPntWindowsAccCtrl.SETRANGE("Version Code",Code);
      ESRestPntWindowsAccCtrl.DELETEALL;

      ESRestPntRole.RESET;
      ESRestPntRole.SETRANGE("Version Code",Code);
      ESRestPntRole.DELETEALL;

      ESRestPntRolePerm.RESET;
      ESRestPntRolePerm.SETRANGE("Version Code",Code);
      ESRestPntRolePerm.DELETEALL;

      ESRestPntCompany.RESET;
      ESRestPntCompany.SETRANGE("Version Code",Code);
      ESRestPntCompany.DELETEALL;

      ESRestPntObject.RESET;
      ESRestPntObject.SETRANGE("Version Code",Code);
      ESRestPntObject.DELETEALL;

      ESRestPntObjectInfo.RESET;
      ESRestPntObjectInfo.SETRANGE("Version Code",Code);
      ESRestPntObjectInfo.DELETEALL;
    END;

    PROCEDURE CreateRestPntFromLive@1240520008(ShowStatus@1240520008 : Boolean);
    VAR
      ESSecuritySetup@1240520027 : Record 14123521;
      WindowsLogin@1240520013 : Record 2000000120;
      WindowsAccessControl@1240520014 : Record 2000000053;
      Role@1240520015 : Record 2000000004;
      Permission@1240520016 : Record 2000000005;
      Company@1240520017 : Record 2000000006;
      Object@1240520009 : Record 2000000001;
      AllObjWithCaption@1240520010 : Record 2000000058;
      ESRestPntWindowsLogin@1240520020 : Record 14123513;
      ESRestPntWindowsAccCtrl@1240520021 : Record 14123514;
      ESRestPntRole@1240520022 : Record 14123515;
      ESRestPntRolePerm@1240520023 : Record 14123516;
      ESRestPntCompany@1240520024 : Record 14123517;
      ESRestPntObject@1240520025 : Record 14123518;
      ESRestPntObjectInfo@1240520026 : Record 14123519;
      Window@1240520029 : Dialog;
      TotalRecords@1240520028 : Integer;
    BEGIN
      TESTFIELD("Live Restore Point",FALSE);
      TESTFIELD("Easy Security Restore Point",FALSE);
      TESTFIELD("Imported Restore Point",FALSE);

      ESSecuritySetup.GET;
      ESSecuritySetup.CRONUSCompanyComment;

      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text001) + Text002);

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text003);
      "Created By User" := USERID;
      "Created Date Time" := CURRENTDATETIME;
      "Live Restore Point" := TRUE;
      MODIFY(TRUE);

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text006);
      IF WindowsLogin.FIND('-') THEN
        REPEAT
          ESRestPntWindowsLogin.INIT;
          ESRestPntWindowsLogin.TRANSFERFIELDS(WindowsLogin);
          ESRestPntWindowsLogin.ID := WindowsLogin."User Name";
          ESRestPntWindowsLogin.Name := WindowsLogin."User Name";
          ESRestPntWindowsLogin."Full Name" := WindowsLogin."Full Name";
          ESRestPntWindowsLogin."Version Code" := Code;
          ESRestPntWindowsLogin.INSERT(TRUE);

          TotalRecords := TotalRecords + 1;
        UNTIL WindowsLogin.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text007);
      IF WindowsAccessControl.FIND('-') THEN
        REPEAT
          ESRestPntWindowsAccCtrl.INIT;
          ESRestPntWindowsAccCtrl.TRANSFERFIELDS(WindowsAccessControl);
          ESRestPntWindowsAccCtrl."Version Code" := Code;
          ESRestPntWindowsAccCtrl.INSERT(TRUE);

          TotalRecords := TotalRecords + 1;
        UNTIL WindowsAccessControl.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text008);
      IF Role.FIND('-') THEN
        REPEAT
          ESRestPntRole.INIT;
          ESRestPntRole.TRANSFERFIELDS(Role);
          ESRestPntRole."Version Code" := Code;
          ESRestPntRole.INSERT(TRUE);

          TotalRecords := TotalRecords + 1;
        UNTIL Role.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text009);
      IF Permission.FIND('-') THEN
        REPEAT
          ESRestPntRolePerm.INIT;
          ESRestPntRolePerm.TRANSFERFIELDS(Permission);
          ESRestPntRolePerm."Version Code" := Code;
          ESRestPntRolePerm.INSERT(TRUE);

          TotalRecords := TotalRecords + 1;
        UNTIL Permission.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text010);
      IF Company.FIND('-') THEN
        REPEAT
          ESRestPntCompany.INIT;
          ESRestPntCompany.TRANSFERFIELDS(Company);
          ESRestPntCompany."Version Code" := Code;
          ESRestPntCompany.INSERT(TRUE);

          TotalRecords := TotalRecords + 1;
        UNTIL Company.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text011);
      Object.SETFILTER(Type,'>%1',Object.Type::TableData);
      IF ESSecuritySetup."Include Objs. in Restore Point" AND Object.FIND('-') THEN
        REPEAT
          ESRestPntObject.INIT;
          ESRestPntObject.TRANSFERFIELDS(Object);
          ESRestPntObject."Version Code" := Code;
          ESRestPntObject.INSERT(TRUE);

          TotalRecords := TotalRecords + 1;
        UNTIL Object.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text012);
      IF AllObjWithCaption.FIND('-') THEN
        REPEAT
          ESRestPntObjectInfo.INIT;
          ESRestPntObjectInfo.TRANSFERFIELDS(AllObjWithCaption);
          ESRestPntObjectInfo."Version Code" := Code;
          ESRestPntObjectInfo.INSERT(TRUE);

          TotalRecords := TotalRecords + 1;
        UNTIL AllObjWithCaption.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text003);
      "Total Records" := TotalRecords;
      MODIFY(TRUE);

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text013,Code,TotalRecords);
      ESSecuritySetup.Comment(1,STRSUBSTNO(Text013,Code,TotalRecords));
    END;

    PROCEDURE WriteRestPnttoLive@1240520021(ShowStatus@1240520026 : Boolean);
    VAR
      WindowsLogin@1240520014 : Record 2000000120;
      WindowsLogin2@1240520030 : Record 2000000120;
      WindowsLoginTmp@1240520031 : TEMPORARY Record 2000000120;
      ESRestPntWindowsAccCtrl@1240520010 : Record 14123514;
      WindowsAccessControl@1240520023 : Record 2000000053;
      WindowsAccessControlTmp@1240520028 : TEMPORARY Record 2000000053;
      Role@1240520015 : Record 2000000004;
      ESRestPntRole@1240520011 : Record 14123515;
      ESRestPntRoleTmp@1240520017 : TEMPORARY Record 14123515;
      Permission@1240520016 : Record 2000000005;
      ESRestPntRolePerm@1240520012 : Record 14123516;
      AllObjWithCaption@1240520019 : Record 2000000058;
      AllObjWithCaptionTmp@1240520020 : TEMPORARY Record 2000000058;
      ESMgt@1240520032 : Codeunit 14123501;
      Window@1240520008 : Dialog;
      LastUserID@1240520018 : GUID;
      TotalRecords@1240520027 : Integer;
    BEGIN
      ESSecuritySetup.GET;
      IF ESSecuritySetup."Optimized Publishing" THEN BEGIN
        WriteRestPnttoLiveOptimized(ShowStatus);
        EXIT;
      END;

      IF NOT "Live Restore Point" AND NOT "Imported Restore Point" THEN
        TESTFIELD("Easy Security Restore Point",TRUE);

      TESTFIELD("Create Windows Logins",FALSE);
      TESTFIELD("Create Companies",FALSE);
      TESTFIELD("Create Objects",FALSE);
      TESTFIELD("Create Object Informations",FALSE);
      IF "Create Roles" THEN
        TESTFIELD("Create Role Permissions");
      IF "Create Role Permissions" THEN
        TESTFIELD("Create Roles");

      ESSecuritySetup.TESTFIELD("SUPER Role ID");
      ESSecuritySetup.CRONUSCompanyComment;
      Role.GET(ESSecuritySetup."SUPER Role ID");
      ESRestPntRole.GET(Code,ESSecuritySetup."SUPER Role ID");

      WindowsLogin.GET(USERSECURITYID);
      IF NOT WindowsAccessControl.GET(WindowsLogin."User Security ID",ESSecuritySetup."SUPER Role ID",'') THEN
        ERROR(Text048,WindowsLogin."User Name");
      IF NOT ESRestPntWindowsAccCtrl.GET(Code,WindowsLogin."User Security ID",ESSecuritySetup."SUPER Role ID",'')
      THEN
        ERROR(Text048 + ' ' + Text049,WindowsLogin."User Name");

      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text014) + Text002);

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text003);
      "Write to Live" := TRUE;
      "Write By User" := USERID;
      "Write Start Date Time" := CURRENTDATETIME;
      MODIFY(TRUE);

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text015);
      IF "Create Role Permissions" THEN BEGIN
        ESRestPntRolePerm.RESET;
        ESRestPntRolePerm.SETRANGE("Version Code",Code);
        IF ESRestPntRolePerm.FIND('-') THEN
          REPEAT
            IF NOT ESRestPntRoleTmp.GET(Code,ESRestPntRolePerm."Role ID") THEN BEGIN
              ESRestPntRole.GET(Code,ESRestPntRolePerm."Role ID");
              ESRestPntRoleTmp := ESRestPntRole;
              ESRestPntRoleTmp.INSERT;
            END;

            IF (ESRestPntRolePerm."Object ID" > 0) AND (ESRestPntRolePerm."Object ID" < 2000000000) AND
               (ESRestPntRolePerm."Object Type" <> ESRestPntRolePerm."Object Type"::System)
            THEN
              IF NOT AllObjWithCaptionTmp.GET(
                       ESRestPntRolePerm."Object Type",ESRestPntRolePerm."Object ID")
              THEN BEGIN
                AllObjWithCaption.GET(ESRestPntRolePerm."Object Type",ESRestPntRolePerm."Object ID");
                AllObjWithCaptionTmp := AllObjWithCaption;
                AllObjWithCaptionTmp.INSERT;
              END;
          UNTIL ESRestPntRolePerm.NEXT = 0;
      END;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text017);
      IF "Create Windows Acc. Ctrls." THEN BEGIN
        CLEAR(LastUserID);

        ESRestPntWindowsAccCtrl.RESET;
        ESRestPntWindowsAccCtrl.SETRANGE("Version Code",Code);
        IF ESRestPntWindowsAccCtrl.FIND('-') THEN
          REPEAT
            IF LastUserID <> ESRestPntWindowsAccCtrl."Login SID" THEN BEGIN
              WindowsLogin.GET(ESRestPntWindowsAccCtrl."Login SID");
              LastUserID := ESRestPntWindowsAccCtrl."Login SID";
            END;

            IF NOT ESRestPntRoleTmp.GET(Code,ESRestPntWindowsAccCtrl."Role ID") THEN BEGIN
              ESRestPntRole.GET(Code,ESRestPntWindowsAccCtrl."Role ID");
              ESRestPntRoleTmp := ESRestPntRole;
              ESRestPntRoleTmp.INSERT;
            END;
          UNTIL ESRestPntWindowsAccCtrl.NEXT = 0;
      END;

      IF "Create Roles" THEN BEGIN
        IF NOT "Create Windows Acc. Ctrls." THEN BEGIN
          WindowsAccessControlTmp.RESET;
          WindowsAccessControlTmp.DELETEALL;

          WindowsAccessControl.RESET;
          WindowsAccessControl.SETFILTER("Role ID",'<>%1',ESSecuritySetup."SUPER Role ID");
          IF WindowsAccessControl.FIND('-') THEN
            REPEAT
              WindowsAccessControlTmp := WindowsAccessControl;
              WindowsAccessControlTmp.INSERT;
            UNTIL WindowsAccessControl.NEXT = 0;
        END;

        Role.RESET;
        Role.SETFILTER("Role ID",'<>%1',ESSecuritySetup."SUPER Role ID");
        Role.DELETEALL;

        Role.RESET;
        ESRestPntRole.SETRANGE("Version Code",Code);
        ESRestPntRole.SETFILTER("Role ID",'<>%1',ESSecuritySetup."SUPER Role ID");
        IF ESRestPntRole.FIND('-') THEN
          REPEAT
            Role.TRANSFERFIELDS(ESRestPntRole,TRUE);
            Role.INSERT(TRUE);

            TotalRecords := TotalRecords + 1;
          UNTIL ESRestPntRole.NEXT = 0;

        IF NOT "Create Windows Acc. Ctrls." THEN BEGIN
          WindowsAccessControlTmp.RESET;
          IF WindowsAccessControlTmp.FIND('-') THEN
            REPEAT
              WindowsAccessControl := WindowsAccessControlTmp;
              WindowsAccessControl.INSERT(TRUE);
            UNTIL WindowsAccessControlTmp.NEXT = 0;
        END;
      END;

      IF "Create Role Permissions" THEN BEGIN
        IF GUIALLOWED THEN
          Window.UPDATE(1,Text019);
        Permission.RESET;
        Permission.SETFILTER("Role ID",'<>%1',ESSecuritySetup."SUPER Role ID");
        Permission.DELETEALL;

        Permission.RESET;
        ESRestPntRolePerm.SETRANGE("Version Code",Code);
        ESRestPntRolePerm.SETFILTER("Role ID",'<>%1',ESSecuritySetup."SUPER Role ID");
        IF ESRestPntRolePerm.FIND('-') THEN
          REPEAT
            Permission.TRANSFERFIELDS(ESRestPntRolePerm,TRUE);
            Permission.INSERT(TRUE);

            TotalRecords := TotalRecords + 1;
          UNTIL ESRestPntRolePerm.NEXT = 0;
      END;

      IF "Create Windows Acc. Ctrls." THEN BEGIN
        IF GUIALLOWED THEN
          Window.UPDATE(1,Text023);
        ESRestPntWindowsAccCtrl.RESET;
        ESRestPntWindowsAccCtrl.SETRANGE("Version Code",Code);
        IF ESRestPntWindowsAccCtrl.FIND('-') THEN
          REPEAT
            IF NOT WindowsLoginTmp.GET(ESRestPntWindowsAccCtrl."Login SID") THEN BEGIN
              WindowsLogin2.GET(ESRestPntWindowsAccCtrl."Login SID");
              WindowsLoginTmp := WindowsLogin2;
              WindowsLoginTmp.INSERT;
            END;
          UNTIL ESRestPntWindowsAccCtrl.NEXT = 0;

        IF GUIALLOWED THEN
          Window.UPDATE(1,Text024);
        WindowsLogin.GET(USERSECURITYID);
        WindowsAccessControl.GET(WindowsLogin."User Security ID",ESSecuritySetup."SUPER Role ID",'');

        ESRestPntWindowsAccCtrl.GET(Code,WindowsLogin."User Security ID",ESSecuritySetup."SUPER Role ID",'');
        WindowsAccessControl.RESET;
        WindowsAccessControl.SETFILTER("User Security ID",'<>%1',WindowsLogin."User Security ID");
        WindowsAccessControl.DELETEALL(TRUE);

        WindowsAccessControl.RESET;
        WindowsAccessControl.SETRANGE("User Security ID",WindowsLogin."User Security ID");
        WindowsAccessControl.SETFILTER("Role ID",'<>%1',ESSecuritySetup."SUPER Role ID");
        WindowsAccessControl.DELETEALL(TRUE);

        WindowsAccessControl.GET(WindowsLogin."User Security ID",ESSecuritySetup."SUPER Role ID");
        ESRestPntWindowsAccCtrl.GET(Code,WindowsLogin."User Security ID",ESSecuritySetup."SUPER Role ID");

        IF GUIALLOWED THEN
          Window.UPDATE(1,Text025);
        ESRestPntWindowsAccCtrl.RESET;
        ESRestPntWindowsAccCtrl.SETRANGE("Version Code",Code);
        IF ESRestPntWindowsAccCtrl.FIND('-') THEN
          REPEAT
            WindowsAccessControl."User Security ID" := ESRestPntWindowsAccCtrl."Login SID";
            WindowsAccessControl."Role ID" := ESRestPntWindowsAccCtrl."Role ID";
            WindowsAccessControl."Company Name" := ESRestPntWindowsAccCtrl."Company Name";
            IF NOT WindowsAccessControl.INSERT(TRUE) THEN
              ;

            TotalRecords := TotalRecords + 1;
          UNTIL ESRestPntWindowsAccCtrl.NEXT = 0;
      END;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text003);
      "Write End Date Time" := CURRENTDATETIME;
      ClearCreateFields;
      MODIFY(TRUE);

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text026,Code,TotalRecords);
      ESSecuritySetup.Comment(1,STRSUBSTNO(Text026,Code,TotalRecords));
    END;

    LOCAL PROCEDURE WriteRestPnttoLiveOptimized@1240520001(ShowStatus@1240520026 : Boolean);
    VAR
      WindowsLogin@1240520014 : Record 2000000120;
      WindowsLogin2@1240520030 : Record 2000000120;
      WindowsLoginTmp@1240520031 : TEMPORARY Record 2000000120;
      ESRestPntWindowsAccCtrl@1240520010 : Record 14123514;
      WindowsAccessControl@1240520023 : Record 2000000053;
      WindowsAccessControlDeleteTmp@1240520043 : TEMPORARY Record 2000000053;
      WindowsAccessControlInsertTmp@1240520044 : TEMPORARY Record 2000000053;
      Role@1240520015 : Record 2000000004;
      RoleModifyTmp@1240520035 : TEMPORARY Record 2000000004;
      RoleDeleteTmp@1240520037 : TEMPORARY Record 2000000004;
      RoleInsertTmp@1240520036 : TEMPORARY Record 2000000004;
      ESRestPntRole@1240520011 : Record 14123515;
      ESRestPntRoleTmp@1240520017 : TEMPORARY Record 14123515;
      Permission@1240520016 : Record 2000000005;
      PermissionModifyTmp@1240520038 : TEMPORARY Record 2000000005;
      PermissionDeleteTmp@1240520040 : TEMPORARY Record 2000000005;
      PermissionInsertTmp@1240520039 : TEMPORARY Record 2000000005;
      ESRestPntRolePerm@1240520012 : Record 14123516;
      AllObjWithCaption@1240520019 : Record 2000000058;
      AllObjWithCaptionTmp@1240520020 : TEMPORARY Record 2000000058;
      ESMgt@1240520032 : Codeunit 14123501;
      Window@1240520008 : Dialog;
      LastUserID@1240520018 : GUID;
      TotalRecords@1240520027 : Integer;
      EOF@1240520033 : Boolean;
      EOFLive@1240520034 : Boolean;
      RecordsToWrite@1240520002 : Integer;
      RecordsWritten@1240520003 : Integer;
      LastUpdateTime@1240520005 : Time;
    BEGIN
      IF NOT "Live Restore Point" AND NOT "Imported Restore Point" THEN
        TESTFIELD("Easy Security Restore Point",TRUE);

      TESTFIELD("Create Windows Logins",FALSE);
      TESTFIELD("Create Windows Acc. Ctrls.");
      TESTFIELD("Create Roles");
      TESTFIELD("Create Role Permissions");
      TESTFIELD("Create Companies",FALSE);
      TESTFIELD("Create Objects",FALSE);
      TESTFIELD("Create Object Informations",FALSE);

      ESSecuritySetup.GET;
      ESSecuritySetup.TESTFIELD("SUPER Role ID");
      ESSecuritySetup.CRONUSCompanyComment;
      Role.GET(ESSecuritySetup."SUPER Role ID");
      ESRestPntRole.GET(Code,ESSecuritySetup."SUPER Role ID");

      WindowsLogin.GET(USERSECURITYID);
      IF NOT WindowsAccessControl.GET(WindowsLogin."User Security ID",ESSecuritySetup."SUPER Role ID",'') THEN
        ERROR(Text048,WindowsLogin."User Name");
      IF NOT ESRestPntWindowsAccCtrl.GET(Code,WindowsLogin."User Security ID",ESSecuritySetup."SUPER Role ID",'')
      THEN
        ERROR(Text048 + ' ' + Text049,WindowsLogin."User Name");

      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text014) + Text002);

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text003);
      "Write to Live" := TRUE;
      "Write By User" := USERID;
      "Write Start Date Time" := CURRENTDATETIME;
      MODIFY(TRUE);

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text015);
      ESRestPntRolePerm.RESET;
      ESRestPntRolePerm.SETRANGE("Version Code",Code);
      IF ESRestPntRolePerm.FIND('-') THEN
        REPEAT
          IF NOT ESRestPntRoleTmp.GET(Code,ESRestPntRolePerm."Role ID") THEN BEGIN
            ESRestPntRole.GET(Code,ESRestPntRolePerm."Role ID");
            ESRestPntRoleTmp := ESRestPntRole;
            ESRestPntRoleTmp.INSERT;
          END;

          IF (ESRestPntRolePerm."Object ID" > 0) AND (ESRestPntRolePerm."Object ID" < 2000000000) AND
             (ESRestPntRolePerm."Object Type" <> ESRestPntRolePerm."Object Type"::System)
          THEN
            IF NOT AllObjWithCaptionTmp.GET(
                     ESRestPntRolePerm."Object Type",ESRestPntRolePerm."Object ID")
            THEN BEGIN
              AllObjWithCaption.GET(ESRestPntRolePerm."Object Type",ESRestPntRolePerm."Object ID");
              AllObjWithCaptionTmp := AllObjWithCaption;
              AllObjWithCaptionTmp.INSERT;
            END;
        UNTIL ESRestPntRolePerm.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text017);
      CLEAR(LastUserID);

      ESRestPntWindowsAccCtrl.RESET;
      ESRestPntWindowsAccCtrl.SETRANGE("Version Code",Code);
      IF ESRestPntWindowsAccCtrl.FIND('-') THEN
        REPEAT
          IF LastUserID <> ESRestPntWindowsAccCtrl."Login SID" THEN BEGIN
            WindowsLogin.GET(ESRestPntWindowsAccCtrl."Login SID");
            LastUserID := ESRestPntWindowsAccCtrl."Login SID";
          END;

          IF NOT ESRestPntRoleTmp.GET(Code,ESRestPntWindowsAccCtrl."Role ID") THEN BEGIN
            ESRestPntRole.GET(Code,ESRestPntWindowsAccCtrl."Role ID");
            ESRestPntRoleTmp := ESRestPntRole;
            ESRestPntRoleTmp.INSERT;
          END;
        UNTIL ESRestPntWindowsAccCtrl.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text023);
      ESRestPntWindowsAccCtrl.RESET;
      ESRestPntWindowsAccCtrl.SETRANGE("Version Code",Code);
      IF ESRestPntWindowsAccCtrl.FIND('-') THEN
        REPEAT
          IF NOT WindowsLoginTmp.GET(ESRestPntWindowsAccCtrl."Login SID") THEN BEGIN
            WindowsLogin2.GET(ESRestPntWindowsAccCtrl."Login SID");
            WindowsLoginTmp := WindowsLogin2;
            WindowsLoginTmp.INSERT;
          END;
        UNTIL ESRestPntWindowsAccCtrl.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text024);
      WindowsLogin.GET(USERSECURITYID);

      WindowsAccessControl.GET(WindowsLogin."User Security ID",ESSecuritySetup."SUPER Role ID");
      ESRestPntWindowsAccCtrl.GET(Code,WindowsLogin."User Security ID",ESSecuritySetup."SUPER Role ID");

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text018);

      ESRestPntRole.RESET;
      ESRestPntRole.SETRANGE("Version Code",Code);
      EOF := NOT ESRestPntRole.FIND('-');
      Role.RESET;
      EOFLive := NOT Role.FIND('-');
      WHILE NOT EOF AND NOT EOFLive DO BEGIN
        IF ESRestPntRole."Role ID" = Role."Role ID" THEN BEGIN
          IF ESRestPntRole."Role Name" <> Role.Name THEN
            IF ESRestPntRole."Role ID" <> ESSecuritySetup."SUPER Role ID" THEN BEGIN
              TotalRecords := TotalRecords + 1;
              RoleModifyTmp.TRANSFERFIELDS(ESRestPntRole,TRUE);
              RoleModifyTmp.INSERT;
            END;

          EOF := ESRestPntRole.NEXT = 0;
          EOFLive := Role.NEXT = 0;
        END ELSE
          IF ESRestPntRole."Role ID" < Role."Role ID" THEN BEGIN
            TotalRecords := TotalRecords + 1;
            RoleInsertTmp.TRANSFERFIELDS(ESRestPntRole,TRUE);
            RoleInsertTmp.INSERT;

            EOF := ESRestPntRole.NEXT = 0;
          END ELSE BEGIN
            TotalRecords := TotalRecords + 1;
            RoleDeleteTmp.TRANSFERFIELDS(Role,TRUE);
            RoleDeleteTmp.INSERT;

            EOFLive := Role.NEXT = 0;
          END;
      END;

      WHILE NOT EOF DO BEGIN
        TotalRecords := TotalRecords + 1;
        RoleInsertTmp.TRANSFERFIELDS(ESRestPntRole,TRUE);
        RoleInsertTmp.INSERT;

        EOF := ESRestPntRole.NEXT = 0;
      END;

      WHILE NOT EOFLive DO BEGIN
        TotalRecords := TotalRecords + 1;
        RoleDeleteTmp.TRANSFERFIELDS(Role,TRUE);
        RoleDeleteTmp.INSERT;

        EOFLive := Role.NEXT = 0;
      END;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text019);

      ESRestPntRolePerm.RESET;
      ESRestPntRolePerm.SETRANGE("Version Code",Code);
      EOF := NOT ESRestPntRolePerm.FIND('-');
      Permission.RESET;
      EOFLive := NOT Permission.FIND('-');
      WHILE NOT EOF AND NOT EOFLive DO BEGIN
        IF (ESRestPntRolePerm."Role ID" = Permission."Role ID") AND
           (ESRestPntRolePerm."Object Type" = Permission."Object Type") AND
           (ESRestPntRolePerm."Object ID" = Permission."Object ID")
        THEN BEGIN
          IF (ESRestPntRolePerm."Read Permission" <> Permission."Read Permission") OR
             (ESRestPntRolePerm."Insert Permission" <> Permission."Insert Permission") OR
             (ESRestPntRolePerm."Modify Permission" <> Permission."Modify Permission") OR
             (ESRestPntRolePerm."Delete Permission" <> Permission."Delete Permission") OR
             (ESRestPntRolePerm."Execute Permission" <> Permission."Execute Permission") OR
             (FORMAT(ESRestPntRolePerm."Security Filter") <> FORMAT(Permission."Security Filter"))
          THEN BEGIN
            IF ESRestPntRolePerm."Role ID" <> ESSecuritySetup."SUPER Role ID" THEN BEGIN
              TotalRecords := TotalRecords + 1;
              PermissionModifyTmp.TRANSFERFIELDS(ESRestPntRolePerm,TRUE);
              PermissionModifyTmp.INSERT;
            END;
          END;

          EOF := ESRestPntRolePerm.NEXT = 0;
          EOFLive := Permission.NEXT = 0;
        END ELSE
          IF (ESRestPntRolePerm."Role ID" < Permission."Role ID") OR
             ((ESRestPntRolePerm."Role ID" = Permission."Role ID") AND
              (ESRestPntRolePerm."Object Type" < Permission."Object Type")) OR
             ((ESRestPntRolePerm."Role ID" = Permission."Role ID") AND
              (ESRestPntRolePerm."Object Type" = Permission."Object Type") AND
              (ESRestPntRolePerm."Object ID" < Permission."Object ID"))
          THEN BEGIN
            IF ESRestPntRolePerm."Role ID" <> ESSecuritySetup."SUPER Role ID" THEN BEGIN
              TotalRecords := TotalRecords + 1;
              PermissionInsertTmp.TRANSFERFIELDS(ESRestPntRolePerm,TRUE);
              PermissionInsertTmp.INSERT;
            END;

            EOF := ESRestPntRolePerm.NEXT = 0;
          END ELSE BEGIN
            IF Permission."Role ID" <> ESSecuritySetup."SUPER Role ID" THEN BEGIN
              TotalRecords := TotalRecords + 1;
              PermissionDeleteTmp.TRANSFERFIELDS(Permission,TRUE);
              PermissionDeleteTmp.INSERT;
            END;

            EOFLive := Permission.NEXT = 0;
          END;
      END;

      WHILE NOT EOF DO BEGIN
        TotalRecords := TotalRecords + 1;
        PermissionInsertTmp.TRANSFERFIELDS(ESRestPntRolePerm,TRUE);
        PermissionInsertTmp.INSERT;

        EOF := ESRestPntRolePerm.NEXT = 0;
      END;

      WHILE NOT EOFLive DO BEGIN
        TotalRecords := TotalRecords + 1;
        PermissionDeleteTmp.TRANSFERFIELDS(Permission,TRUE);
        PermissionDeleteTmp.INSERT;

        EOFLive := Permission.NEXT = 0;
      END;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text025);
      ESRestPntWindowsAccCtrl.RESET;
      ESRestPntWindowsAccCtrl.SETRANGE("Version Code",Code);
      EOF := NOT ESRestPntWindowsAccCtrl.FIND('-');
      WindowsAccessControl.RESET;
      EOFLive := NOT WindowsAccessControl.FIND('-');
      WHILE NOT EOF AND NOT EOFLive DO BEGIN
        IF (ESRestPntWindowsAccCtrl."Login SID" = WindowsAccessControl."User Security ID") AND
           (ESRestPntWindowsAccCtrl."Role ID" = WindowsAccessControl."Role ID") AND
           (ESRestPntWindowsAccCtrl."Company Name" = WindowsAccessControl."Company Name")
        THEN BEGIN
          EOF := ESRestPntWindowsAccCtrl.NEXT = 0;
          EOFLive := WindowsAccessControl.NEXT = 0;
        END ELSE
          IF ((FORMAT(ESRestPntWindowsAccCtrl."Login SID") <
               FORMAT(WindowsAccessControl."User Security ID"))) OR
             ((ESRestPntWindowsAccCtrl."Login SID" = WindowsAccessControl."User Security ID") AND
              (ESRestPntWindowsAccCtrl."Role ID" < WindowsAccessControl."Role ID")) OR
             ((ESRestPntWindowsAccCtrl."Login SID" = WindowsAccessControl."User Security ID") AND
              (ESRestPntWindowsAccCtrl."Role ID" = WindowsAccessControl."Role ID") AND
              (ESRestPntWindowsAccCtrl."Company Name" < WindowsAccessControl."Company Name"))
          THEN BEGIN
            TotalRecords := TotalRecords + 1;
            WindowsAccessControlInsertTmp.TRANSFERFIELDS(ESRestPntWindowsAccCtrl,TRUE);
            WindowsAccessControlInsertTmp.INSERT;

            EOF := ESRestPntWindowsAccCtrl.NEXT = 0;
          END ELSE BEGIN
            TotalRecords := TotalRecords + 1;
            WindowsAccessControlDeleteTmp.TRANSFERFIELDS(WindowsAccessControl,TRUE);
            WindowsAccessControlDeleteTmp.INSERT;

            EOFLive := WindowsAccessControl.NEXT = 0;
          END;
      END;

      WHILE NOT EOF DO BEGIN
        TotalRecords := TotalRecords + 1;
        WindowsAccessControlInsertTmp.TRANSFERFIELDS(ESRestPntWindowsAccCtrl,TRUE);
        WindowsAccessControlInsertTmp.INSERT;

        EOF := ESRestPntWindowsAccCtrl.NEXT = 0;
      END;

      WHILE NOT EOFLive DO BEGIN
        TotalRecords := TotalRecords + 1;
        WindowsAccessControlDeleteTmp.TRANSFERFIELDS(WindowsAccessControl,TRUE);
        WindowsAccessControlDeleteTmp.INSERT;

        EOFLive := WindowsAccessControl.NEXT = 0;
      END;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text037);

      RecordsToWrite := RoleModifyTmp.COUNT;
      RecordsToWrite := RecordsToWrite + RoleDeleteTmp.COUNT;
      RecordsToWrite := RecordsToWrite + RoleInsertTmp.COUNT;
      RecordsToWrite := RecordsToWrite + PermissionModifyTmp.COUNT;
      RecordsToWrite := RecordsToWrite + PermissionDeleteTmp.COUNT;
      RecordsToWrite := RecordsToWrite + PermissionInsertTmp.COUNT;
      RecordsToWrite := RecordsToWrite + WindowsAccessControlDeleteTmp.COUNT;
      RecordsToWrite := RecordsToWrite + WindowsAccessControlInsertTmp.COUNT;

      IF GUIALLOWED THEN
        Window2.OPEN(Text014 + '        @1@@@@@@@@@@@@@@@@@@@@@@@@@@@@');

      IF RoleModifyTmp.FIND('-') THEN
        REPEAT
          Role := RoleModifyTmp;
          Role.MODIFY;
          UpdateWriteProgressDialog(RecordsToWrite,RecordsWritten,LastUpdateTime);
        UNTIL RoleModifyTmp.NEXT = 0;

      IF RoleInsertTmp.FIND('-') THEN
        REPEAT
          Role := RoleInsertTmp;
          Role.INSERT;
          UpdateWriteProgressDialog(RecordsToWrite,RecordsWritten,LastUpdateTime);
        UNTIL RoleInsertTmp.NEXT = 0;

      IF PermissionModifyTmp.FIND('-') THEN
        REPEAT
          Permission := PermissionModifyTmp;
          Permission.MODIFY;
          UpdateWriteProgressDialog(RecordsToWrite,RecordsWritten,LastUpdateTime);
        UNTIL PermissionModifyTmp.NEXT = 0;

      IF PermissionDeleteTmp.FIND('-') THEN
        REPEAT
          Permission := PermissionDeleteTmp;
          IF NOT Permission.DELETE THEN
            ;
          UpdateWriteProgressDialog(RecordsToWrite,RecordsWritten,LastUpdateTime);
        UNTIL PermissionDeleteTmp.NEXT = 0;

      IF PermissionInsertTmp.FIND('-') THEN
        REPEAT
          Permission := PermissionInsertTmp;
          Permission.INSERT;
          UpdateWriteProgressDialog(RecordsToWrite,RecordsWritten,LastUpdateTime);
        UNTIL PermissionInsertTmp.NEXT = 0;

      IF WindowsAccessControlDeleteTmp.FIND('-') THEN
        REPEAT
          WindowsAccessControl := WindowsAccessControlDeleteTmp;
          WindowsAccessControl.DELETE;
          UpdateWriteProgressDialog(RecordsToWrite,RecordsWritten,LastUpdateTime);
        UNTIL WindowsAccessControlDeleteTmp.NEXT = 0;

      IF WindowsAccessControlInsertTmp.FIND('-') THEN
        REPEAT
          WindowsAccessControl := WindowsAccessControlInsertTmp;
          WindowsAccessControl.INSERT;
          UpdateWriteProgressDialog(RecordsToWrite,RecordsWritten,LastUpdateTime);
        UNTIL WindowsAccessControlInsertTmp.NEXT = 0;

      IF RoleDeleteTmp.FIND('-') THEN
        REPEAT
          Role := RoleDeleteTmp;
          Role.DELETE;
          UpdateWriteProgressDialog(RecordsToWrite,RecordsWritten,LastUpdateTime);
        UNTIL RoleDeleteTmp.NEXT = 0;

      IF GUIALLOWED THEN
        Window2.CLOSE;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text003);
      "Write End Date Time" := CURRENTDATETIME;
      ClearCreateFields;
      MODIFY(TRUE);

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text026,Code,TotalRecords);
      ESSecuritySetup.Comment(1,STRSUBSTNO(Text026,Code,TotalRecords));
    END;

    PROCEDURE UpdateWriteProgressDialog@1240520002(RecordsToWrite@1240520002 : Integer;VAR RecordsWritten@1240520003 : Integer;VAR LastUpdateTime@1240520004 : Time);
    BEGIN
      RecordsWritten := RecordsWritten + 1;

      IF NOT GUIALLOWED THEN
        EXIT;

      IF LastUpdateTime <> 0T THEN BEGIN
        IF (TIME < LastUpdateTime) OR (TIME > LastUpdateTime + 100) THEN BEGIN
          IF RecordsToWrite <> 0 THEN
            Window2.UPDATE(1,ROUND(10000 * (RecordsWritten / RecordsToWrite),1))
          ELSE
            Window2.UPDATE(1,10000);

          LastUpdateTime := TIME;
        END;
      END ELSE
        LastUpdateTime := TIME;
    END;

    PROCEDURE CreateRestPntFromES@1240520009(ShowStatus@1240520008 : Boolean);
    VAR
      ESWindowsLogin@1240520013 : Record 14123503;
      ESWindowsAccessControl@1240520014 : Record 14123504;
      ESRole@1240520015 : Record 14123505;
      ESRolePerm@1240520016 : Record 14123506;
      ESCompany@1240520017 : Record 14123507;
      ESObject@1240520009 : Record 14123508;
      ESObjectInfo@1240520010 : Record 14123509;
      ESRestPntWindowsLogin@1240520020 : Record 14123513;
      ESRestPntWindowsAccCtrl@1240520021 : Record 14123514;
      ESRestPntRole@1240520022 : Record 14123515;
      ESRestPntRolePerm@1240520023 : Record 14123516;
      ESRestPntCompany@1240520024 : Record 14123517;
      ESRestPntObject@1240520025 : Record 14123518;
      ESRestPntObjectInfo@1240520026 : Record 14123519;
      Window@1240520029 : Dialog;
      TotalRecords@1240520028 : Integer;
    BEGIN
      TESTFIELD("Live Restore Point",FALSE);
      TESTFIELD("Easy Security Restore Point",FALSE);
      TESTFIELD("Imported Restore Point",FALSE);

      ESSecuritySetup.GET;
      ESSecuritySetup.CRONUSCompanyComment;

      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text027) + Text002);

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text003);
      "Created By User" := USERID;
      "Created Date Time" := CURRENTDATETIME;
      "Easy Security Restore Point" := TRUE;
      MODIFY(TRUE);

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text006);
      IF ESWindowsLogin.FIND('-') THEN
        REPEAT
          ESRestPntWindowsLogin.INIT;
          ESRestPntWindowsLogin.TRANSFERFIELDS(ESWindowsLogin);
          ESRestPntWindowsLogin."Version Code" := Code;
          ESRestPntWindowsLogin.INSERT(TRUE);

          TotalRecords := TotalRecords + 1;
        UNTIL ESWindowsLogin.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text007);
      IF ESWindowsAccessControl.FIND('-') THEN
        REPEAT
          ESRestPntWindowsAccCtrl.INIT;
          ESRestPntWindowsAccCtrl.TRANSFERFIELDS(ESWindowsAccessControl);
          ESRestPntWindowsAccCtrl."Version Code" := Code;
          ESRestPntWindowsAccCtrl.INSERT(TRUE);

          TotalRecords := TotalRecords + 1;
        UNTIL ESWindowsAccessControl.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text008);
      IF ESRole.FIND('-') THEN
        REPEAT
          ESRestPntRole.INIT;
          ESRestPntRole.TRANSFERFIELDS(ESRole);
          ESRestPntRole."Version Code" := Code;
          ESRestPntRole.INSERT(TRUE);

          TotalRecords := TotalRecords + 1;
        UNTIL ESRole.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text009);
      IF ESSecuritySetup."No Parent Perm. in Restore Pnt" THEN
        ESRolePerm.SETRANGE("Exists in Parent Role",FALSE);
      IF ESRolePerm.FIND('-') THEN
        REPEAT
          ESRestPntRolePerm.INIT;
          ESRestPntRolePerm.TRANSFERFIELDS(ESRolePerm);
          ESRestPntRolePerm."Version Code" := Code;
          ESRestPntRolePerm.INSERT(TRUE);

          TotalRecords := TotalRecords + 1;
        UNTIL ESRolePerm.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text010);
      IF ESCompany.FIND('-') THEN
        REPEAT
          ESRestPntCompany.INIT;
          ESRestPntCompany.TRANSFERFIELDS(ESCompany);
          ESRestPntCompany."Version Code" := Code;
          ESRestPntCompany.INSERT(TRUE);

          TotalRecords := TotalRecords + 1;
        UNTIL ESCompany.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text011);
      IF ESSecuritySetup."Include Objs. in Restore Point" AND ESObject.FIND('-') THEN
        REPEAT
          ESRestPntObject.INIT;
          ESRestPntObject.TRANSFERFIELDS(ESObject);
          ESRestPntObject."Version Code" := Code;
          ESRestPntObject.INSERT(TRUE);

          TotalRecords := TotalRecords + 1;
        UNTIL ESObject.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text012);
      IF ESObjectInfo.FIND('-') THEN
        REPEAT
          ESRestPntObjectInfo.INIT;
          ESRestPntObjectInfo.TRANSFERFIELDS(ESObjectInfo);
          ESRestPntObjectInfo."Version Code" := Code;
          ESRestPntObjectInfo.INSERT(TRUE);

          TotalRecords := TotalRecords + 1;
        UNTIL ESObjectInfo.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text003);
      "Total Records" := TotalRecords;
      MODIFY(TRUE);

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text013,Code,TotalRecords);
      ESSecuritySetup.Comment(1,STRSUBSTNO(Text013,Code,TotalRecords));
    END;

    PROCEDURE WriteRestPntToES@1240520010(ShowStatus@1240520008 : Boolean;ConfirmDelete@1240520009 : Boolean);
    VAR
      ESWindowsLogin@1240520027 : Record 14123503;
      ESWindowsAccessControl@1240520026 : Record 14123504;
      ESRole@1240520025 : Record 14123505;
      ESRolePerm@1240520024 : Record 14123506;
      ESCompany@1240520023 : Record 14123507;
      ESObject@1240520022 : Record 14123508;
      ESObjectInfo@1240520021 : Record 14123509;
      ESRestPntWindowsLogin@1240520018 : Record 14123513;
      ESRestPntWindowsAccCtrl@1240520017 : Record 14123514;
      ESRestPntRole@1240520016 : Record 14123515;
      ESRestPntRolePerm@1240520015 : Record 14123516;
      ESRestPntCompany@1240520014 : Record 14123517;
      ESRestPntObject@1240520013 : Record 14123518;
      ESRestPntObjectInfo@1240520012 : Record 14123519;
      Window@1240520011 : Dialog;
      TotalRecords@1240520010 : Integer;
    BEGIN
      IF NOT "Easy Security Restore Point" AND NOT "Imported Restore Point" THEN
        TESTFIELD("Live Restore Point",TRUE);

      IF ConfirmDelete THEN
        IF (ESWindowsLogin.FIND('-') AND "Create Windows Logins") OR
           (ESWindowsAccessControl.FIND('-') AND "Create Windows Acc. Ctrls.") OR
           (ESRole.FIND('-') AND "Create Roles") OR
           (ESRolePerm.FIND('-') AND "Create Role Permissions") OR
           (ESCompany.FIND('-') AND "Create Companies") OR
           (ESObject.FIND('-') AND "Create Objects") OR
           (ESObjectInfo.FIND('-') AND "Create Object Informations")
        THEN
          IF NOT CONFIRM(Text028,FALSE) THEN
            ERROR(Text029);

      ESSecuritySetup.GET;
      ESSecuritySetup.CRONUSCompanyComment;

      IF GUIALLOWED THEN
        Window.OPEN(ESSecuritySetup.ExtendProgressText(Text030) + Text002);

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text003);
      "Write to Easy Security" := TRUE;
      "Write By User" := USERID;
      "Write Start Date Time" := CURRENTDATETIME;
      MODIFY(TRUE);

      IF "Create Windows Logins" THEN BEGIN
        IF GUIALLOWED THEN
          Window.UPDATE(1,Text006);

        ESWindowsLogin.DELETEALL(TRUE);

        ESRestPntWindowsLogin.RESET;
        ESRestPntWindowsLogin.SETRANGE("Version Code",Code);
        IF ESRestPntWindowsLogin.FIND('-') THEN
          REPEAT
            ESWindowsLogin.TRANSFERFIELDS(ESRestPntWindowsLogin,TRUE);
            ESWindowsLogin.VALIDATE(ID);
            ESWindowsLogin.INSERT(TRUE);

            TotalRecords := TotalRecords + 1;
          UNTIL ESRestPntWindowsLogin.NEXT = 0;
      END;

      IF "Create Windows Acc. Ctrls." THEN BEGIN
        IF GUIALLOWED THEN
          Window.UPDATE(1,Text007);

        ESWindowsAccessControl.DELETEALL(TRUE);

        ESRestPntWindowsAccCtrl.RESET;
        ESRestPntWindowsAccCtrl.SETRANGE("Version Code",Code);
        ESRestPntWindowsAccCtrl.SETFILTER("Role ID",'<>%1','');
        IF ESRestPntWindowsAccCtrl.FIND('-') THEN
          REPEAT
            ESWindowsAccessControl.TRANSFERFIELDS(ESRestPntWindowsAccCtrl,TRUE);
            ESWindowsAccessControl.INSERT(TRUE);

            TotalRecords := TotalRecords + 1;
          UNTIL ESRestPntWindowsAccCtrl.NEXT = 0;
      END;

      IF "Create Roles" THEN BEGIN
        IF GUIALLOWED THEN
          Window.UPDATE(1,Text008);

        ESRole.DELETEALL;
        ESRolePerm.DELETEALL;

        ESRestPntRole.RESET;
        ESRestPntRole.SETRANGE("Version Code",Code);
        ESRestPntRole.SETFILTER("Role ID",'<>%1','');
        IF ESRestPntRole.FIND('-') THEN
          REPEAT
            ESRole.SetAllowZeroNoQuestion(TRUE);
            ESRole.TRANSFERFIELDS(ESRestPntRole,TRUE);
            ESRole.INSERT(TRUE);

            TotalRecords := TotalRecords + 1;
          UNTIL ESRestPntRole.NEXT = 0;
      END;

      IF "Create Role Permissions" THEN BEGIN
        IF GUIALLOWED THEN
          Window.UPDATE(1,Text009);

        ESRolePerm.DELETEALL;

        ESRestPntRolePerm.RESET;
        ESRestPntRolePerm.SETRANGE("Version Code",Code);
        ESRestPntRolePerm.SETFILTER("Role ID",'<>%1','');
        IF ESRestPntRolePerm.FIND('-') THEN
          REPEAT
            ESRolePerm.SetAllowZeroNoQuestion(TRUE,TRUE);
            ESRolePerm.TRANSFERFIELDS(ESRestPntRolePerm,TRUE);
            ESRolePerm.INSERT(TRUE);

            TotalRecords := TotalRecords + 1;
          UNTIL ESRestPntRolePerm.NEXT = 0;
      END;

      IF "Create Companies" THEN  BEGIN
        IF GUIALLOWED THEN
          Window.UPDATE(1,Text010);

        ESCompany.DELETEALL(TRUE);

        ESRestPntCompany.RESET;
        ESRestPntCompany.SETRANGE("Version Code",Code);
        IF ESRestPntCompany.FIND('-') THEN
          REPEAT
            ESCompany.TRANSFERFIELDS(ESRestPntCompany,TRUE);
            ESCompany.INSERT(TRUE);

            TotalRecords := TotalRecords + 1;
          UNTIL ESRestPntCompany.NEXT = 0;
      END;

      IF "Create Objects" THEN BEGIN
        IF GUIALLOWED THEN
          Window.UPDATE(1,Text011);

        ESObject.DELETEALL(TRUE);

        IF ESSecuritySetup."Include Objs. in Restore Point" THEN BEGIN
          ESRestPntObject.RESET;
          ESRestPntObject.SETRANGE("Version Code",Code);
          IF ESRestPntObject.FIND('-') THEN
            REPEAT
              ESObject.TRANSFERFIELDS(ESRestPntObject,TRUE);
              ESObject.INSERT(TRUE);

              TotalRecords := TotalRecords + 1;
            UNTIL ESRestPntObject.NEXT = 0;
        END;
      END;

      IF "Create Object Informations" THEN BEGIN
        IF GUIALLOWED THEN
          Window.UPDATE(1,Text012);

        ESObjectInfo.DELETEALL(TRUE);

        ESRestPntObjectInfo.RESET;
        ESRestPntObjectInfo.SETRANGE("Version Code",Code);
        IF ESRestPntObjectInfo.FIND('-') THEN
          REPEAT
            ESObjectInfo.TRANSFERFIELDS(ESRestPntObjectInfo,TRUE);
            ESObjectInfo.INSERT(TRUE);

            TotalRecords := TotalRecords + 1;
          UNTIL ESRestPntObjectInfo.NEXT = 0;
      END;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text003);
      "Write End Date Time" := CURRENTDATETIME;
      ClearCreateFields;
      MODIFY(TRUE);

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text031,Code,TotalRecords);
      ESSecuritySetup.Comment(1,STRSUBSTNO(Text031,Code,TotalRecords));
    END;

    PROCEDURE ExportRestPnt@1240520011(ShowStatus@1240520021 : Boolean;ConfirmOverwrite@1240520020 : Boolean);
    VAR
      ESRestPntWindowsLogin@1240520016 : Record 14123513;
      ESRestPntWindowsAccCtrl@1240520015 : Record 14123514;
      ESRestPntRole@1240520014 : Record 14123515;
      ESRestPntRolePerm@1240520013 : Record 14123516;
      ESRestPntCompany@1240520012 : Record 14123517;
      ESRestPntObject@1240520011 : Record 14123518;
      ESRestPntObjectInfo@1240520010 : Record 14123519;
      FileMgt@1000 : Codeunit 419;
      Window@1240520009 : Dialog;
      OutputFile@1240520019 : File;
      Value@1240520022 : ARRAY [100] OF Text[1000];
      ServerFileName@1001 : Text[1000];
      TotalRecords@1240520008 : Integer;
    BEGIN
      TESTFIELD("File Name");

      ESSecuritySetup.GET;
      ESSecuritySetup.CRONUSCompanyComment;

      IF ConfirmOverwrite THEN
        IF EXISTS("File Name") THEN
          IF NOT CONFIRM(Text032,FALSE,"File Name") THEN
            ERROR(Text033);

      IF GUIALLOWED THEN
        Window.OPEN(STRSUBSTNO(ESSecuritySetup.ExtendProgressText(Text034),TABLECAPTION) + Text002);

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text003);
      "Exported Date Time" := CREATEDATETIME(TODAY,TIME);
      MODIFY(TRUE);

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text035);
      OutputFile.WRITEMODE(TRUE);
      OutputFile.TEXTMODE(TRUE);
      OutputFile.CREATETEMPFILE;
      ServerFileName := OutputFile.NAME;
      OutputFile.CLOSE;

      CLEAR(OutputFile);
      OutputFile.WRITEMODE(TRUE);
      OutputFile.TEXTMODE(TRUE);
      OutputFile.CREATE(ServerFileName);

      CLEAR(ESFileMgt);
      ESFileMgt.SetDelimiters('~"','"~',',');

      IF GUIALLOWED THEN
        Window.UPDATE(1,'HEADER');
      Value[1] := ESFileMgt.FormatInteger(0) +'V1';
      Value[2] := 'HEADER';
      Value[3] := Code;
      Value[4] := Description;
      Value[5] := USERID;
      Value[6] := ESFileMgt.FormatDate(TODAY);
      Value[7] := ESFileMgt.FormatTime(TIME);
      OutputFile.WRITE(ESFileMgt.FormatValues(Value,7));

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text006);
      ESRestPntWindowsLogin.RESET;
      ESRestPntWindowsLogin.SETRANGE("Version Code",Code);
      IF ESRestPntWindowsLogin.FIND('-') THEN
        REPEAT
          Value[1] := ESFileMgt.FormatInteger(DATABASE::"ES Restore Point Windows Login") + 'V1';
          Value[2] := ESRestPntWindowsLogin.SID;
          Value[3] := ESRestPntWindowsLogin.ID;
          Value[4] := ESRestPntWindowsLogin.Name;
          OutputFile.WRITE(ESFileMgt.FormatValues(Value,4));

          TotalRecords := TotalRecords + 1;
        UNTIL ESRestPntWindowsLogin.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text007);
      ESRestPntWindowsAccCtrl.RESET;
      ESRestPntWindowsAccCtrl.SETRANGE("Version Code",Code);
      IF ESRestPntWindowsAccCtrl.FIND('-') THEN
        REPEAT
          Value[1] := ESFileMgt.FormatInteger(DATABASE::"ES Rest Point Windows Acc Ctrl") + 'V1';
          Value[2] := ESRestPntWindowsAccCtrl."Login SID";
          Value[3] := ESRestPntWindowsAccCtrl."Role ID";
          Value[4] := ESRestPntWindowsAccCtrl."Company Name";
          OutputFile.WRITE(ESFileMgt.FormatValues(Value,4));

          TotalRecords := TotalRecords + 1;
        UNTIL ESRestPntWindowsAccCtrl.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text008);
      ESRestPntRole.RESET;
      ESRestPntRole.SETRANGE("Version Code",Code);
      IF ESRestPntRole.FIND('-') THEN
        REPEAT
          Value[1] := ESFileMgt.FormatInteger(DATABASE::"ES Restore Point Role") + 'V1';
          Value[2] := ESRestPntRole."Role ID";
          Value[3] := ESRestPntRole."Role Name";
          OutputFile.WRITE(ESFileMgt.FormatValues(Value,3));

          TotalRecords := TotalRecords + 1;
        UNTIL ESRestPntRole.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text009);
      ESRestPntRolePerm.RESET;
      ESRestPntRolePerm.SETRANGE("Version Code",Code);
      IF ESRestPntRolePerm.FIND('-') THEN
        REPEAT
          Value[1] := ESFileMgt.FormatInteger(DATABASE::"ES Rest. Point Role Permission") + 'V1';
          Value[2] := ESRestPntRolePerm."Role ID";
          Value[3] := ESFileMgt.FormatInteger(ESRestPntRolePerm."Object Type");
          Value[4] := ESFileMgt.FormatInteger(ESRestPntRolePerm."Object ID");
          Value[5] := ESFileMgt.FormatInteger(ESRestPntRolePerm."Read Permission");
          Value[6] := ESFileMgt.FormatInteger(ESRestPntRolePerm."Insert Permission");
          Value[7] := ESFileMgt.FormatInteger(ESRestPntRolePerm."Modify Permission");
          Value[8] := ESFileMgt.FormatInteger(ESRestPntRolePerm."Delete Permission");
          Value[9] := ESFileMgt.FormatInteger(ESRestPntRolePerm."Execute Permission");
          Value[10] := FORMAT(ESRestPntRolePerm."Security Filter");
          OutputFile.WRITE(ESFileMgt.FormatValues(Value,10));

          TotalRecords := TotalRecords + 1;
        UNTIL ESRestPntRolePerm.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text010);
      ESRestPntCompany.RESET;
      ESRestPntCompany.SETRANGE("Version Code",Code);
      IF ESRestPntCompany.FIND('-') THEN
        REPEAT
          Value[1] := ESFileMgt.FormatInteger(DATABASE::"ES Restore Point Company") + 'V1';
          Value[2] := ESRestPntCompany.Name;
          OutputFile.WRITE(ESFileMgt.FormatValues(Value,2));

          TotalRecords := TotalRecords + 1;
        UNTIL ESRestPntCompany.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text011);
      ESRestPntObject.RESET;
      ESRestPntObject.SETRANGE("Version Code",Code);
      IF ESRestPntObject.FIND('-') THEN
        REPEAT
          Value[1] := ESFileMgt.FormatInteger(DATABASE::"ES Restore Point Object") + 'V1';
          Value[2] := ESFileMgt.FormatInteger(ESRestPntObject.Type);
          Value[3] := ESRestPntObject."Company Name";
          Value[4] := ESFileMgt.FormatInteger(ESRestPntObject.ID);
          Value[5] := ESRestPntObject.Name;
          Value[6] := ESFileMgt.FormatBoolean(ESRestPntObject.Modified);
          Value[7] := ESFileMgt.FormatBoolean(ESRestPntObject.Compiled);
          Value[8] := ESFileMgt.FormatInteger(ESRestPntObject."BLOB Size");
          Value[9] := ESFileMgt.FormatInteger(ESRestPntObject."DBM Table No.");
          Value[10] := ESFileMgt.FormatDate(ESRestPntObject.Date);
          Value[11] := ESFileMgt.FormatTime(ESRestPntObject.Time);
          Value[12] := ESRestPntObject."Version List";
          Value[13] := ESRestPntObject.Caption;
          OutputFile.WRITE(ESFileMgt.FormatValues(Value,13));

          TotalRecords := TotalRecords + 1;
        UNTIL ESRestPntObject.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text012);
      ESRestPntObjectInfo.RESET;
      ESRestPntObjectInfo.SETRANGE("Version Code",Code);
      IF ESRestPntObjectInfo.FIND('-') THEN
        REPEAT
          Value[1] := ESFileMgt.FormatInteger(DATABASE::"ES Restore Point Object Info.") + 'V1';
          Value[2] := ESFileMgt.FormatInteger(ESRestPntObjectInfo."Object Type");
          Value[3] := ESFileMgt.FormatInteger(ESRestPntObjectInfo."Object ID");
          Value[4] := ESRestPntObjectInfo."Object Name";
          Value[5] := ESRestPntObjectInfo."Object Caption";
          OutputFile.WRITE(ESFileMgt.FormatValues(Value,5));

          TotalRecords := TotalRecords + 1;
        UNTIL ESRestPntObjectInfo.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,'TOTALS');
      Value[1] := ESFileMgt.FormatInteger(0) + 'V1';
      Value[2] := 'TOTALS';
      Value[3] := Code;
      Value[4] := Description;
      Value[5] := USERID;
      Value[6] := ESFileMgt.FormatDate(TODAY);
      Value[7] := ESFileMgt.FormatTime(TIME);
      Value[8] := ESFileMgt.FormatInteger(TotalRecords);
      OutputFile.WRITE(ESFileMgt.FormatValues(Value,8));

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text038);
      OutputFile.CLOSE;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text101);
      FileMgt.DownloadToFile(ServerFileName,"File Name");

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text039,Code,"File Name",TotalRecords);
    END;

    PROCEDURE ImportRestPnt@1240520012(ShowStatus@1240520011 : Boolean);
    VAR
      ESRestPntWindowsLogin@1240520019 : Record 14123513;
      ESRestPntWindowsAccCtrl@1240520018 : Record 14123514;
      ESRestPntRole@1240520017 : Record 14123515;
      ESRestPntRolePerm@1240520016 : Record 14123516;
      ESRestPntCompany@1240520015 : Record 14123517;
      ESRestPntObject@1240520014 : Record 14123518;
      ESRestPntObjectInfo@1240520013 : Record 14123519;
      FileMgt@1000 : Codeunit 419;
      InputFile@1240520009 : File;
      Window@1240520012 : Dialog;
      TempText@1240520010 : Text[1000];
      Value@1240520008 : ARRAY [100] OF Text[1000];
      ServerFileName@1001 : Text[250];
      NextUpdatePos@1240520022 : Integer;
      TotalRecords@1240520023 : Integer;
    BEGIN
      TESTFIELD("Live Restore Point",FALSE);
      TESTFIELD("Easy Security Restore Point",FALSE);
      TESTFIELD("Imported Restore Point",FALSE);
      TESTFIELD("File Name");

      ESSecuritySetup.GET;
      ESSecuritySetup.CRONUSCompanyComment;

      IF GUIALLOWED THEN
        Window.OPEN(
          STRSUBSTNO(ESSecuritySetup.ExtendProgressText(Text040),TABLECAPTION) +
          Text041 + '        @2@@@@@@@@@@@@@@@@@@@@@@@@@@@@');

      CLEAR(ESFileMgt);
      ESFileMgt.SetDelimiters('~"','"~',',');

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text042);
      InputFile.WRITEMODE(FALSE);
      InputFile.TEXTMODE(TRUE);
      IF NOT InputFile.OPEN("File Name") THEN BEGIN
        IF GUIALLOWED THEN
          Window.UPDATE(1,Text102);
        ServerFileName := FileMgt.UploadFileSilent("File Name");
        IF GUIALLOWED THEN
          Window.UPDATE(1,Text042);

        IF NOT InputFile.OPEN(ServerFileName) THEN
          InputFile.OPEN("File Name");
      END;
      WHILE InputFile.POS < InputFile.LEN DO BEGIN
        IF NextUpdatePos < InputFile.POS THEN BEGIN
          IF GUIALLOWED THEN BEGIN
            Window.UPDATE(1,Value[1]);
            Window.UPDATE(2,ROUND(10000 * (InputFile.POS / InputFile.LEN),1));
          END;
          NextUpdatePos := ROUND(InputFile.POS + InputFile.LEN / 500,1);
        END;

        InputFile.READ(TempText);
        ESFileMgt.SplitInValues(Value,TempText);

        CASE Value[1] OF
          '','0V1':
            ;
          '14123511V1','14123512V1':
            ;
          '14123513V1':
            BEGIN
              ESRestPntWindowsLogin."Version Code" := Code;
              ESRestPntWindowsLogin.SID := Value[2];
              ESRestPntWindowsLogin.ID := Value[3];
              ESRestPntWindowsLogin.Name := Value[4];
              ESRestPntWindowsLogin.INSERT(TRUE);

              TotalRecords := TotalRecords + 1;
            END;
          '14123514V1':
            BEGIN
              ESRestPntWindowsAccCtrl."Version Code" := Code;
              ESRestPntWindowsAccCtrl."Login SID" := Value[2];
              ESRestPntWindowsAccCtrl."Role ID" := Value[3];
              ESRestPntWindowsAccCtrl."Company Name" := Value[4];
              ESRestPntWindowsAccCtrl.INSERT(TRUE);

              TotalRecords := TotalRecords + 1;
            END;
          '14123515V1':
            BEGIN
              ESRestPntRole."Version Code" := Code;
              ESRestPntRole."Role ID" := Value[2];
              ESRestPntRole."Role Name" := Value[3];
              ESRestPntRole.INSERT(TRUE);

              TotalRecords := TotalRecords + 1;
            END;
          '14123516V1':
            BEGIN
              ESRestPntRolePerm."Version Code" := Code;
              ESRestPntRolePerm."Role ID" := Value[2];
              ESRestPntRolePerm."Object Type" := ESFileMgt.EvaluateInteger(Value[3]);
              ESRestPntRolePerm."Object ID" := ESFileMgt.EvaluateInteger(Value[4]);
              ESRestPntRolePerm."Read Permission" := ESFileMgt.EvaluateInteger(Value[5]);
              ESRestPntRolePerm."Insert Permission" := ESFileMgt.EvaluateInteger(Value[6]);
              ESRestPntRolePerm."Modify Permission" := ESFileMgt.EvaluateInteger(Value[7]);
              ESRestPntRolePerm."Delete Permission" := ESFileMgt.EvaluateInteger(Value[8]);
              ESRestPntRolePerm."Execute Permission" := ESFileMgt.EvaluateInteger(Value[9]);
              EVALUATE(ESRestPntRolePerm."Security Filter",Value[10]);
              ESRestPntRolePerm.INSERT(TRUE);

              TotalRecords := TotalRecords + 1;
            END;
          '14123517V1':
            BEGIN
              ESRestPntCompany."Version Code" := Code;
              ESRestPntCompany.Name := Value[2];
              ESRestPntCompany.INSERT(TRUE);

              TotalRecords := TotalRecords + 1;
            END;
          '14123518V1':
            BEGIN
              ESRestPntObject."Version Code" := Code;
              ESRestPntObject.Type := ESFileMgt.EvaluateInteger(Value[2]);
              ESRestPntObject."Company Name" := Value[3];
              ESRestPntObject.ID := ESFileMgt.EvaluateInteger(Value[4]);
              ESRestPntObject.Name := Value[5];
              ESRestPntObject.Modified := ESFileMgt.EvaluateBoolean(Value[6]);
              ESRestPntObject.Compiled := ESFileMgt.EvaluateBoolean(Value[7]);
              ESRestPntObject."BLOB Size" := ESFileMgt.EvaluateInteger(Value[8]);
              ESRestPntObject."DBM Table No." := ESFileMgt.EvaluateInteger(Value[9]);
              ESRestPntObject.Date := ESFileMgt.EvaluateDate(Value[10]);
              ESRestPntObject.Time := ESFileMgt.EvaluateTime(Value[11]);
              ESRestPntObject."Version List" := Value[12];
              ESRestPntObject.Caption := Value[13];
              ESRestPntObject.INSERT(TRUE);

              TotalRecords := TotalRecords + 1;
            END;
          '14123519V1':
            BEGIN
              ESRestPntObjectInfo."Version Code" := Code;
              ESRestPntObjectInfo."Object Type" := ESFileMgt.EvaluateInteger(Value[2]);
              ESRestPntObjectInfo."Object ID" := ESFileMgt.EvaluateInteger(Value[3]);
              ESRestPntObjectInfo."Object Name" := Value[4];
              ESRestPntObjectInfo."Object Caption" := Value[5];
              ESRestPntObjectInfo.INSERT(TRUE);

              TotalRecords := TotalRecords + 1;
            END;
          ELSE
            ERROR(Text036,Value[1]);
        END;
      END;

      "Imported Restore Point" := TRUE;
      "Imported Date Time" := CREATEDATETIME(TODAY,TIME);
      "Total Records" := TotalRecords;
      MODIFY(TRUE);

      InputFile.CLOSE;
      IF ServerFileName <> '' THEN
        ERASE(ServerFileName);

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text043,TotalRecords,"File Name");
    END;

    PROCEDURE CreateDataWarning@1240520013();
    BEGIN
      MESSAGE(Text046 + Text047);
    END;

    PROCEDURE ClearCreateFields@1240520014();
    BEGIN
      "Create Windows Logins" := FALSE;
      "Create Windows Acc. Ctrls." := FALSE;
      "Create Roles" := FALSE;
      "Create Role Permissions" := FALSE;
      "Create Companies" := FALSE;
      "Create Objects" := FALSE;
      "Create Object Informations" := FALSE;
    END;

    PROCEDURE CreateTextLines@1240520015();
    VAR
      ESRestorePoint@1240520008 : Record 14123523;
      ESPrintRestorePoint@1240520009 : Report 14123504;
    BEGIN
      ESRestorePoint := Rec;
      ESRestorePoint.SETRECFILTER;

      CLEAR(ESPrintRestorePoint);
      ESPrintRestorePoint.SETTABLEVIEW(ESRestorePoint);
      ESPrintRestorePoint.RUN;
    END;

    PROCEDURE FormatAsTextLine@1240520043(VAR ESTextLine@1240520011 : Record 14123520;NoOfRelatedKeyFields@1240520009 : Integer;CalcFlowFields@1240520012 : Boolean;UserDateTimeDetails@1240520013 : Boolean) : Boolean;
    VAR
      ESFormatMgt@1240520014 : Codeunit 14123505;
      RecRef@1240520010 : RecordRef;
    BEGIN
      ESFormatMgt.NewRecord(TABLECAPTION,Code,'','','','','','','','','',1,NoOfRelatedKeyFields);
      ESFormatMgt.AddField(FIELDCAPTION(Description),FORMAT(Description));
      IF "Live Restore Point" THEN
        ESFormatMgt.AddField(FIELDCAPTION("Live Restore Point"),FORMAT("Live Restore Point"));
      IF "Easy Security Restore Point" THEN
        ESFormatMgt.AddField(FIELDCAPTION(
          "Easy Security Restore Point"),FORMAT("Easy Security Restore Point"));
      ESFormatMgt.AddField(FIELDCAPTION("Total Records"),FORMAT("Total Records"));
      ESFormatMgt.AddField(FIELDCAPTION("File Name"),FORMAT("File Name"));
      IF "Imported Restore Point" THEN
        ESFormatMgt.AddField(FIELDCAPTION("Imported Restore Point"),FORMAT("Imported Restore Point"));
      IF Locked THEN
        ESFormatMgt.AddField(FIELDCAPTION(Locked),FORMAT(Locked));

      IF UserDateTimeDetails THEN BEGIN
        ESFormatMgt.AddField(FIELDCAPTION("Created By User"),FORMAT("Created By User"));
        IF "Created Date Time" <> 0DT THEN
          ESFormatMgt.AddField(FIELDCAPTION("Created Date Time"),FORMAT("Created Date Time"));
        IF "Exported Date Time" <> 0DT THEN
          ESFormatMgt.AddField(FIELDCAPTION("Exported Date Time"),FORMAT("Exported Date Time"));
        IF "Imported Date Time" <> 0DT THEN
          ESFormatMgt.AddField(FIELDCAPTION("Imported Date Time"),FORMAT("Imported Date Time"));
        ESFormatMgt.AddField(FIELDCAPTION("Write By User"),FORMAT("Write By User"));
        IF "Write Start Date Time" <> 0DT THEN
          ESFormatMgt.AddField(FIELDCAPTION("Write Start Date Time"),FORMAT("Write Start Date Time"));
      END;

      IF CalcFlowFields THEN BEGIN
        CALCFIELDS(
          "Windows Logins",Roles,Companies,Objects,"Object Informations");

        IF "Windows Logins" <> 0 THEN
          ESFormatMgt.AddFlowField(FIELDCAPTION("Windows Logins"),FORMAT("Windows Logins"));
        IF Roles <> 0 THEN
          ESFormatMgt.AddFlowField(FIELDCAPTION(Roles),FORMAT(Roles));
        IF Companies <> 0 THEN
          ESFormatMgt.AddFlowField(FIELDCAPTION(Companies),FORMAT(Companies));
        IF Objects <> 0 THEN
          ESFormatMgt.AddFlowField(FIELDCAPTION(Objects),FORMAT(Objects));
        IF "Object Informations" <> 0 THEN
          ESFormatMgt.AddFlowField(FIELDCAPTION("Object Informations"),FORMAT("Object Informations"));
      END;

      RecRef.OPEN(DATABASE::"ES Restore Point");
      RecRef.GETTABLE(Rec);
      ESFormatMgt.FormatNewESTextLine(ESTextLine,DATABASE::"ES Restore Point",RecRef.RECORDID);

      EXIT(ESFormatMgt.NoTextOverflow);
    END;

    PROCEDURE Comment@1240520020(FunctionNo@1240520008 : ' ,Insert,Show,Exist,DeleteAll';NewText@1240520010 : Text[250]) : Boolean;
    VAR
      ESComment@1240520009 : Record 14123524;
    BEGIN
      ESComment.RESET;
      ESComment.SETRANGE("Table ID",DATABASE::"ES Restore Point");
      ESComment.SETRANGE(Code,Code);
      EXIT(ESComment.Functions(FunctionNo,NewText));
    END;

    BEGIN
    END.
  }
}

