OBJECT Table 14000841 Label Header
{
  OBJECT-PROPERTIES
  {
    Date=06/28/17;
    Time=12:00:00 PM;
    Version List=SE0.60.12;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               LabelLine.RESET;
               LabelLine.SETRANGE("Label Code",Code);
               LabelLine.DELETEALL;

               LabelElement.RESET;
               LabelElement.SETRANGE(Type,LabelElement.Type::Label);
               LabelElement.SETRANGE("Label Code",Code);
               LabelElement.DELETEALL;
             END;

    OnRename=BEGIN
               LabelElement.RESET;
               LabelElement.SETRANGE(Type,LabelElement.Type::Label);
               LabelElement.SETRANGE("Label Code",xRec.Code);
               IF LabelElement.FIND('-') THEN
                 REPEAT
                   LabelElement2 := LabelElement;
                   LabelElement2.RENAME(
                     LabelElement2.Type,Code,LabelElement2."Line No.",LabelElement2."Element No.");
                 UNTIL LabelElement.NEXT = 0;
             END;

    CaptionML=ENU=Label Header;
    LookupPageID=Page14000845;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=ENU=Code;
                                                   NotBlank=Yes }
    { 2   ;   ;Description         ;Text30        ;CaptionML=ENU=Description }
    { 3   ;   ;Printer Type        ;Option        ;OnValidate=BEGIN
                                                                IF "Printer Type" <> xRec."Printer Type" THEN BEGIN
                                                                  LabelLine.RESET;
                                                                  LabelLine.SETRANGE("Label Code",Code);
                                                                  IF LabelLine.FIND('-') THEN BEGIN
                                                                    MODIFY;

                                                                    REPEAT
                                                                      LabelLine.UpdatePrinterString;
                                                                      LabelLine.MODIFY;
                                                                    UNTIL LabelLine.NEXT = 0;

                                                                    IF xRec."Printer Type" <> "Printer Type"::" " THEN
                                                                      MESSAGE(
                                                                        Text001 +
                                                                        Text002);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Printer Type;
                                                   OptionCaptionML=ENU=" ,Eltron Orion,Zebra,Text File";
                                                   OptionString=[ ,Eltron Orion,Zebra,Text File] }
    { 4   ;   ;Print From          ;Option        ;CaptionML=ENU=Print From;
                                                   OptionCaptionML=ENU=Top,Bottom;
                                                   OptionString=Top,Bottom }
    { 5   ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Shipping Comment Line" WHERE (Table ID=CONST(14000841),
                                                                                                    Code=FIELD(Code)));
                                                   CaptionML=ENU=Comment;
                                                   Editable=No }
    { 6   ;   ;Label Height        ;Integer       ;InitValue=1250;
                                                   CaptionML=ENU=Label Height }
    { 7   ;   ;Dot per Inch        ;Integer       ;CaptionML=ENU=Dot per Inch }
    { 8   ;   ;Label Usage         ;Option        ;OnValidate=BEGIN
                                                                IF "Label Usage" <> xRec."Label Usage" THEN BEGIN
                                                                  LabelLine.RESET;
                                                                  LabelLine.SETRANGE("Label Code",Code);
                                                                  IF LabelLine.FIND('-') THEN
                                                                    IF NOT CONFIRM(
                                                                             Text003 +
                                                                             Text004,FALSE,FIELDNAME("Label Usage"))
                                                                    THEN
                                                                      ERROR(Text005);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Label Usage;
                                                   OptionCaptionML=ENU=Package,Item,Customer,Resource,Receive,Receive Line,Bill of Lading,Bin;
                                                   OptionString=Package,Item,Customer,Resource,Receive,Receive Line,Bill of Lading,Bin }
    { 9   ;   ;Add Item Info on Label;Boolean     ;OnValidate=BEGIN
                                                                IF "Add Item Info on Label" AND ("Printer Type" = "Printer Type"::"Text File") THEN
                                                                  FIELDERROR("Printer Type",STRSUBSTNO(Text010,"Printer Type"));
                                                              END;

                                                   CaptionML=ENU=Add Item Info on Label }
    { 10  ;   ;Text File Command String;Text250   ;OnValidate=BEGIN
                                                                IF "Text File Command String" <> '' THEN
                                                                  TESTFIELD("Printer Type","Printer Type"::"Text File");
                                                              END;

                                                   CaptionML=ENU=Text File Command String }
    { 11  ;   ;Header Text         ;Text250       ;OnValidate=BEGIN
                                                                IF "Header Text" <> '' THEN
                                                                  TESTFIELD("Printer Type","Printer Type"::"Text File");
                                                              END;

                                                   CaptionML=ENU=Header Text }
    { 12  ;   ;Footer Text         ;Text250       ;OnValidate=BEGIN
                                                                IF "Footer Text" <> '' THEN
                                                                  TESTFIELD("Printer Type","Printer Type"::"Text File");
                                                              END;

                                                   CaptionML=ENU=Footer Text }
    { 13  ;   ;Line Break Text Character;Text1    ;InitValue=\;
                                                   CaptionML=ENU=Line Break Text Character }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      LabelHeader@1000000000 : Record 14000841;
      LabelLine@1000000001 : Record 14000842;
      LabelElement@1000000003 : Record 14000844;
      LabelElement2@1240030001 : Record 14000844;
      Text001@1001 : TextConst 'ENU=Label Lines has been updated, but not all lines can be changed correctly.';
      Text002@1002 : TextConst 'ENU=Please test the label.';
      Text003@1003 : TextConst 'ENU="Lines will maybe not be correct when changing the %1, "';
      Text004@1004 : TextConst 'ENU=Are you sure you want to change this value?';
      Text005@1005 : TextConst 'ENU=Nothing changed.';
      Text007@1007 : TextConst 'ENU=Label Code cannot be blank.';
      Text008@1008 : TextConst 'ENU=New Label %1 has been inserted.';
      Text009@1009 : TextConst 'ENU=No lines to renumber.';
      Text010@1240030000 : TextConst 'ENU=cannot be %1.';
      Text011@1240030002 : TextConst 'ENU="Header Text arguments %1 = User ID, %2 = Today and %3 = Time"';
      Text012@1240030003 : TextConst 'ENU="Footer Text arguments %1 = No. of Copies, %2 = User ID, %3 = Today and %4 = Time"';
      Text013@1240030004 : TextConst 'ENU="Text File Command String will have %1 = Temporary Filename, %2 = Reference No., %3 = Printer Port, %4 = User ID, %5 = Today and %6 = Time"';
      Text014@1240030005 : TextConst 'ENU=Remove old data in unused fields?';

    PROCEDURE CopyLabelAskNewCode@1();
    VAR
      EShipInput@1240030000 : Record 14000728;
      EShipEnterNewLabelCode@1240030001 : Page 14050117;
    BEGIN
      CLEAR(EShipEnterNewLabelCode);
      EShipEnterNewLabelCode.LOOKUPMODE(TRUE);
      IF EShipEnterNewLabelCode.RUNMODAL = ACTION::LookupOK THEN BEGIN
        EShipEnterNewLabelCode.GetEShipInput(EShipInput);

        IF EShipInput."New Label Code" = '' THEN
          ERROR(Text007);

        CopyLabel(EShipInput."New Label Code");

        MESSAGE(Text008,LabelHeader.Code);
      END;
    END;

    PROCEDURE CopyLabel@1240030001(NewLabelCode@1240030000 : Code[10]);
    VAR
      LabelLine2@1000000000 : Record 14000842;
      LabelElement2@1000000003 : Record 14000844;
    BEGIN
      IF NewLabelCode = '' THEN
        ERROR(Text007);

      LabelHeader := Rec;
      LabelHeader.Code := NewLabelCode;
      LabelHeader.INSERT(TRUE);

      LabelLine.RESET;
      LabelLine.SETRANGE("Label Code",Code);
      IF LabelLine.FIND('-') THEN
        REPEAT
          LabelLine2 := LabelLine;
          LabelLine2."Label Code" := LabelHeader.Code;
          LabelLine2.INSERT(TRUE);
        UNTIL LabelLine.NEXT = 0;

      LabelElement.RESET;
      LabelElement.SETRANGE("Label Code",Code);
      IF LabelElement.FIND('-') THEN
        REPEAT
          LabelElement2 := LabelElement;
          LabelElement2."Label Code" := LabelHeader.Code;
          LabelElement2.INSERT(TRUE);
        UNTIL LabelElement.NEXT = 0;
    END;

    PROCEDURE HelpOnFormatting@1240030002();
    VAR
      ItemLabel@1240030004 : Report 14000841;
      CustomerLabel@1240030003 : Report 14000842;
      ResourceLabel@1240030002 : Report 14000845;
      ReceiveLineLabel@1240030001 : Report 14000847;
      BinLabel@1240030000 : Report 14000848;
    BEGIN
      CASE "Label Usage" OF
        "Label Usage"::Package:
          REPORT.RUN(REPORT::"Package Label Formatting Help");
        "Label Usage"::Item:
          ItemLabel.LabelFormattingHelp;
        "Label Usage"::Customer:
          CustomerLabel.LabelFormattingHelp;
        "Label Usage"::Resource:
          ResourceLabel.LabelFormattingHelp;
        "Label Usage"::Receive:
          REPORT.RUN(REPORT::"Receive Label Formatting Help");
        "Label Usage"::"Receive Line":
          ReceiveLineLabel.LabelFormattingHelp;
        "Label Usage"::"Bill of Lading":
          REPORT.RUN(REPORT::"BOL Label Formatting Help");
        "Label Usage"::Bin:
          BinLabel.LabelFormattingHelp;
        ELSE
          MESSAGE(Text001);
      END;
    END;

    PROCEDURE ConvertLabel@1240030003();
    VAR
      LabelLine@1240030001 : Record 14000842;
      RemoveOldData@1240030000 : Boolean;
    BEGIN
      RemoveOldData := CONFIRM(Text014,FALSE);

      LabelLine.RESET;
      LabelLine.SETRANGE("Label Code",Code);
      IF LabelLine.FIND('-') THEN
        REPEAT
          LabelLine.ConvertFromOldFormat(RemoveOldData);
          LabelLine.MODIFY;
        UNTIL LabelLine.NEXT = 0;
    END;

    PROCEDURE PrintLabelLayout@1240030004();
    VAR
      LabelHeader@1240030000 : Record 14000841;
    BEGIN
      LabelHeader.RESET;
      LabelHeader := Rec;
      LabelHeader.SETRECFILTER;
      REPORT.RUN(REPORT::"Label Layout",TRUE,TRUE,LabelHeader);
    END;

    PROCEDURE RenumberLabel@2();
    VAR
      LabelLineTmp@1000000000 : TEMPORARY Record 14000842;
      LabelElementTmp@1000000001 : TEMPORARY Record 14000844;
      LineNo@1000000002 : Integer;
    BEGIN
      LabelLineTmp.DELETEALL;
      LabelElementTmp.DELETEALL;

      LabelLine.RESET;
      LabelLine.SETRANGE("Label Code",Code);
      IF NOT LabelLine.FIND('-') THEN
        ERROR(Text009)
      ELSE
        REPEAT
          LabelLineTmp := LabelLine;
          LabelLineTmp.INSERT;
          LabelLine.DELETE;
        UNTIL LabelLine.NEXT = 0;

      LabelElement.RESET;
      LabelElement.SETRANGE("Label Code",Code);
      IF LabelElement.FIND('-') THEN
        REPEAT
          LabelElementTmp := LabelElement;
          LabelElementTmp.INSERT;
          LabelElement.DELETE;
        UNTIL LabelElement.NEXT = 0;

      LineNo := 0;
      LabelLineTmp.FIND('-');
      REPEAT
        LineNo := LineNo + 10000;
        LabelLine := LabelLineTmp;
        LabelLine."Line No." := LineNo;
        LabelLine.INSERT;

        LabelLineTmp."Horizontal Position" := LineNo;
        LabelLineTmp.MODIFY;
      UNTIL LabelLineTmp.NEXT =0;

      IF LabelElementTmp.FIND('-') THEN
        REPEAT
          LabelLineTmp.GET(LabelElementTmp."Label Code",LabelElementTmp."Line No.");
          LabelElement := LabelElementTmp;
          LabelElement."Line No." := LabelLineTmp."Horizontal Position";
          LabelElement.INSERT;
        UNTIL LabelElementTmp.NEXT = 0;
    END;

    PROCEDURE TextFileHelp@1240030000();
    BEGIN
      MESSAGE(Text011 + '\' + Text012 + '\' + Text013,'%1','%2','%3','%4','%5','%6','%7','%8','%9');
    END;

    BEGIN
    END.
  }
}

