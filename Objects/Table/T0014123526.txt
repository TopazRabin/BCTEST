OBJECT Table 14123526 ES Role Group Line
{
  OBJECT-PROPERTIES
  {
    Date=04/24/18;
    Time=12:00:00 PM;
    Version List=ES1.41.50;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               ESRoleGroup.GET("Role Group ID");
               ESRoleGroup.Comment(1,STRSUBSTNO(Text001,TABLECAPTION,"Role Type","Role ID"));

               "Created By User" := USERID;
               "Created Date Time" := CURRENTDATETIME;
             END;

    OnModify=BEGIN
               ESRoleGroup.GET("Role Group ID");
               ESRoleGroup.Comment(1,STRSUBSTNO(Text002,TABLECAPTION,"Role Type","Role ID"));
             END;

    OnDelete=BEGIN
               ESRoleGroup.GET("Role Group ID");
               ESRoleGroup.Comment(1,STRSUBSTNO(Text003,TABLECAPTION,"Role Type","Role ID"));
               Comment(4,'');
             END;

    OnRename=BEGIN
               ERROR(Text004);
             END;

    CaptionML=ENU=Permission Group Line;
    LookupPageID=Page14123590;
    DrillDownPageID=Page14123590;
  }
  FIELDS
  {
    { 1   ;   ;Role Group ID       ;Code20        ;TableRelation="ES Role Group";
                                                   CaptionML=ENU=Permission Group ID;
                                                   NotBlank=Yes }
    { 2   ;   ;Role Type           ;Option        ;CaptionML=ENU=Permission Set Type;
                                                   OptionCaptionML=ENU=Permission Set,Group;
                                                   OptionString=Role,Group }
    { 3   ;   ;Role ID             ;Code20        ;TableRelation=IF (Role Type=CONST(Role)) "ES Role"."Role ID"
                                                                 ELSE IF (Role Type=CONST(Group)) "ES Role Group"."Group ID";
                                                   OnValidate=BEGIN
                                                                IF ("Role ID" <> '') AND ("Role Type" = "Role Type"::Group) THEN
                                                                  CheckNotCyclic("Role ID","Role Group ID");
                                                              END;

                                                   CaptionML=ENU=Permission Set ID;
                                                   NotBlank=Yes }
    { 4   ;   ;Role Group Name     ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ES Role Group".Name WHERE (Group ID=FIELD(Role Group ID)));
                                                   CaptionML=ENU=Permission Group Name;
                                                   Editable=No }
    { 5   ;   ;Created By User     ;Code50        ;CaptionML=ENU=Created By User;
                                                   Editable=No }
    { 6   ;   ;Created Date Time   ;DateTime      ;CaptionML=ENU=Created Date Time;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Role Group ID,Role Type,Role ID         ;Clustered=Yes }
    {    ;Created Date Time                        }
    {    ;Created By User,Created Date Time        }
    {    ;Role Type,Role ID                        }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ESRoleGroup@1240520008 : Record 14123525;
      Text001@1001 : TextConst 'ENU=Inserted %1 %2 %3';
      Text002@1002 : TextConst 'ENU=Modified %1 %2 %3';
      Text003@1003 : TextConst 'ENU=Deleted %1 %2 %3';
      Text004@1004 : TextConst 'ENU=Rename not allowed.';
      Text005@1005 : TextConst 'ENU=Cyclic Reference.';
      Text006@1240520010 : TextConst 'ENU=%1 must be filtered.';
      Text007@1240520009 : TextConst 'ENU=Filter on %1 must be a simple filter.';

    PROCEDURE CheckNotCyclic@1240520008(GroupRoleID@1240520008 : Code[20];CurrentGroupRoleID@1240520009 : Code[20]);
    VAR
      ESRoleGroupLine@1240520010 : Record 14123526;
    BEGIN
      IF GroupRoleID = CurrentGroupRoleID THEN
        ERROR(Text005);

      ESRoleGroupLine.RESET;
      ESRoleGroupLine.SETRANGE("Role Group ID",GroupRoleID);
      ESRoleGroupLine.SETRANGE("Role Type",ESRoleGroupLine."Role Type"::Group);
      IF ESRoleGroupLine.FIND('-') THEN
        REPEAT
          ESRoleGroupLine.CheckNotCyclic(ESRoleGroupLine."Role ID",CurrentGroupRoleID);
        UNTIL ESRoleGroupLine.NEXT = 0;
    END;

    PROCEDURE RoleName@1240520009() : Text[250];
    VAR
      ESRole@1240520008 : Record 14123505;
      ESRoleGroup@1240520009 : Record 14123525;
    BEGIN
      CASE "Role Type" OF
        "Role Type"::Role:
          IF "Role ID" <> '' THEN
            IF ESRole.GET("Role ID") THEN
              EXIT(ESRole.Name);
        "Role Type"::Group:
          IF "Role ID" <> '' THEN
            IF ESRoleGroup.GET("Role ID") THEN
              EXIT(ESRoleGroup.Name);
      END;

      EXIT('');
    END;

    PROCEDURE AddRoleGroupLinesFrom@1240520010(VAR ESRoleGroupLine@1240520008 : Record 14123526;TableNo@1240520009 : Integer);
    VAR
      ESRoleGroup@1240520010 : Record 14123525;
    BEGIN
      IF ESRoleGroupLine."Role ID" = '' THEN BEGIN
        IF ESRoleGroupLine.GETFILTER("Role Group ID") = '' THEN BEGIN
          ESRoleGroupLine.FILTERGROUP(4);
          IF ESRoleGroupLine.GETFILTER("Role Group ID") = '' THEN
            ERROR(Text006,ESRoleGroupLine.FIELDCAPTION("Role Group ID"));
        END;

        IF ESRoleGroupLine.GETRANGEMIN("Role Group ID") <> ESRoleGroupLine.GETRANGEMAX("Role Group ID")
        THEN
          ERROR(Text007,ESRoleGroupLine.FIELDCAPTION("Role Group ID"));

        ESRoleGroup.GET(ESRoleGroupLine.GETRANGEMIN("Role Group ID"));

        ESRoleGroupLine.FILTERGROUP(0);
      END ELSE
        ESRoleGroup.GET(ESRoleGroupLine."Role Group ID");

      CASE TableNo OF
        DATABASE::"ES Role":
          ESRoleGroup.AddRoleGroupLinesFromRoles;
        DATABASE::"ES Role Group":
          ESRoleGroup.AddRoleGrLinesFromRoleGroups;
      END;
    END;

    PROCEDURE RolePermissions@1240520002();
    VAR
      ESRolePermission@1240520001 : Record 14123506;
    BEGIN
      TESTFIELD("Role Type","Role Type"::Role);
      ESRolePermission.RESET;
      ESRolePermission.SETRANGE("Role ID","Role ID");
      PAGE.RUN(0,ESRolePermission);
    END;

    PROCEDURE RoleGroupLines@1240520001();
    VAR
      ESRoleGroupLine@1240520001 : Record 14123526;
    BEGIN
      TESTFIELD("Role Type","Role Type"::Group);
      ESRoleGroupLine.RESET;
      ESRoleGroupLine.SETRANGE("Role Group ID","Role ID");
      PAGE.RUN(0,ESRoleGroupLine);
    END;

    PROCEDURE RoleWhereUsed@1240520013();
    VAR
      ESRoleWhereUsed@1240520008 : Page 14123565;
    BEGIN
      TESTFIELD("Role Type","Role Type"::Role);
      CLEAR(ESRoleWhereUsed);
      ESRoleWhereUsed.InitRole("Role ID");
      ESRoleWhereUsed.RUN;
    END;

    PROCEDURE FormatAsTextLine@1240520046(VAR ESTextLine@1240520011 : Record 14123520;NoOfRelatedKeyFields@1240520009 : Integer;CalcFlowFields@1240520012 : Boolean;UserDateTimeDetails@1240520008 : Boolean) : Boolean;
    VAR
      ESFormatMgt@1240520013 : Codeunit 14123505;
      RecRef@1240520010 : RecordRef;
    BEGIN
      ESFormatMgt.NewRecord(
        TABLECAPTION,"Role Group ID",FORMAT("Role Type"),"Role ID",'','','','','','','',3,
        NoOfRelatedKeyFields);

      IF UserDateTimeDetails THEN BEGIN
        ESFormatMgt.AddField(FIELDCAPTION("Created By User"),FORMAT("Created By User"));
        IF "Created Date Time" <> 0DT THEN
          ESFormatMgt.AddField(FIELDCAPTION("Created Date Time"),FORMAT("Created Date Time"));
      END;

      IF CalcFlowFields THEN BEGIN
        CALCFIELDS("Role Group Name");

        ESFormatMgt.AddFlowField(FIELDCAPTION("Role Group Name"),FORMAT("Role Group Name"));
      END;

      RecRef.OPEN(DATABASE::"ES Role Group Line");
      RecRef.GETTABLE(Rec);
      ESFormatMgt.FormatNewESTextLine(ESTextLine,DATABASE::"ES Role Group Line",RecRef.RECORDID);

      EXIT(ESFormatMgt.NoTextOverflow);
    END;

    PROCEDURE Comment@1240520020(FunctionNo@1240520008 : ' ,Insert,Show,Exist,DeleteAll';NewText@1240520010 : Text[250]) : Boolean;
    VAR
      ESComment@1240520009 : Record 14123524;
    BEGIN
      ESComment.RESET;
      ESComment.SETRANGE("Table ID",DATABASE::"ES Role Group Line");
      ESComment.SETRANGE(Code,"Role Group ID");
      ESComment.SETRANGE(Type,"Role Type");
      ESComment.SETRANGE("Role ID","Role ID");
      EXIT(ESComment.Functions(FunctionNo,NewText));
    END;

    BEGIN
    END.
  }
}

