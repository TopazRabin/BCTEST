OBJECT Table 14000708 E-Ship Agent Service
{
  OBJECT-PROPERTIES
  {
    Date=11/12/18;
    Time=12:00:00 PM;
    Version List=SE0.60.19.02;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               ShippingAgent.GET("Shipping Agent Code");
               "Additional Markup" := ShippingAgent."Additional Markup";
               "Markup Type" := ShippingAgent."Markup Type";
               "Markup on Zero Shipping Cost" := ShippingAgent."Markup on Zero Shipping Cost";
             END;

    CaptionML=ENU=E-Ship Agent Service;
    LookupPageID=Page14000720;
  }
  FIELDS
  {
    { 1   ;   ;Shipping Agent Code ;Code10        ;TableRelation="Shipping Agent".Code;
                                                   CaptionML=ENU=Shipping Agent Code }
    { 2   ;   ;Code                ;Code30        ;CaptionML=ENU=Code }
    { 3   ;   ;World Wide Service  ;Boolean       ;CaptionML=ENU=World Wide Service }
    { 11  ;   ;Description         ;Text100       ;CaptionML=ENU=Description }
    { 12  ;   ;Service Indicator   ;Text10        ;CaptionML=ENU=Service Indicator;
                                                   CharAllowed=09AZ }
    { 13  ;   ;Rate Shop           ;Boolean       ;OnValidate=BEGIN
                                                                IF "Rate Shop" THEN BEGIN
                                                                  ShippingAgent.GET("Shipping Agent Code");
                                                                  IF ShippingAgent."Disable Rate Calculation" THEN
                                                                    ERROR(Text001,ShippingAgent.Code);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Rate Shop }
    { 14  ;   ;Transport Method Type;Option       ;CaptionML=ENU=Transport Method Type;
                                                   OptionCaptionML=ENU=Air,Ground,Freight;
                                                   OptionString=Air,Ground,Freight }
    { 15  ;   ;Delivery Days       ;Integer       ;CaptionML=ENU=Delivery Days;
                                                   BlankZero=Yes }
    { 16  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Shipping Comment Line" WHERE (Table ID=CONST(14000708),
                                                                                                    Code=FIELD(Shipping Agent Code),
                                                                                                    Code 2=FIELD(Code),
                                                                                                    Boolean=FIELD(World Wide Service)));
                                                   CaptionML=ENU=Comment;
                                                   Editable=No }
    { 17  ;   ;Default Shipping Agent Service;Code10;
                                                   TableRelation="Shipping Agent Services".Code WHERE (Shipping Agent Code=FIELD(Shipping Agent Code));
                                                   CaptionML=ENU=Default Shipping Agent Service }
    { 23  ;   ;Additional Markup   ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Override Shipping Agent Markup");
                                                              END;

                                                   CaptionML=ENU=Additional Markup;
                                                   BlankZero=Yes }
    { 24  ;   ;Markup Type         ;Option        ;OnValidate=BEGIN
                                                                TESTFIELD("Override Shipping Agent Markup");
                                                              END;

                                                   CaptionML=ENU=Markup Type;
                                                   OptionCaptionML=ENU=" ,Amount,Percent";
                                                   OptionString=[ ,Amount,Percent] }
    { 25  ;   ;Override Shipping Agent Markup;Boolean;
                                                   OnValidate=BEGIN
                                                                IF NOT "Override Shipping Agent Markup" THEN BEGIN
                                                                  ShippingAgent.GET("Shipping Agent Code");
                                                                  "Additional Markup" := ShippingAgent."Additional Markup";
                                                                  "Markup Type" := ShippingAgent."Markup Type";
                                                                  "Markup on Zero Shipping Cost" := ShippingAgent."Markup on Zero Shipping Cost";
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Override Shipping Agent Markup }
    { 26  ;   ;Markup on Zero Shipping Cost;Boolean;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Override Shipping Agent Markup");
                                                              END;

                                                   CaptionML=ENU=Markup on Zero Shipping Cost }
    { 51470;  ;No Free Freight     ;Boolean       ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=No Free Freight }
    { 1400351;;Packaging Type      ;Code1         ;CaptionML=ENU=Packaging Type }
    { 14000350;;SCAC Code          ;Code10        ;OnValidate=BEGIN
                                                                IF ("SCAC Code" <> '') AND
                                                                   ((STRLEN("SCAC Code") > 4) OR
                                                                    (STRLEN("SCAC Code") < 2))
                                                                THEN
                                                                  ERROR(Text007,FIELDNAME("SCAC Code"));
                                                              END;

                                                   CaptionML=ENU=SCAC Code }
    { 14000751;;Rateshop Sorting   ;Integer       ;CaptionML=ENU=Rateshop Sorting;
                                                   BlankZero=Yes }
    { 14000763;;UPS Service Override Account;Text30;
                                                   CaptionML=ENU=UPS Service Override Account }
    { 14000764;;UPS Hundred Weight Available;Boolean;
                                                   CaptionML=ENU=UPS Hundred Weight Available }
    { 14000765;;UPS H.W. Min Wgt. Per Package;Decimal;
                                                   CaptionML=ENU=UPS H.W. Min Wgt. Per Package }
    { 14000766;;UPS H.W. Min Total Charge;Decimal ;CaptionML=ENU=UPS H.W. Min Total Charge }
    { 14000767;;UPS Canadian Service;Boolean      ;OnValidate=BEGIN
                                                                IF "UPS Canadian Service" THEN
                                                                  TESTFIELD("World Wide Service");
                                                              END;

                                                   CaptionML=ENU=UPS Canadian Service }
    { 14000768;;UPS Pieces         ;Integer       ;CaptionML=ENU=UPS Pieces }
    { 14000769;;UPS Charges        ;Decimal       ;CaptionML=ENU=UPS Charges }
    { 14000770;;UPS Residential Serv. Avail.;Boolean;
                                                   CaptionML=ENU=UPS Residential Serv. Avail. }
    { 14000771;;UPS Puerto Rico Service;Boolean   ;CaptionML=ENU=UPS Puerto Rico Service }
    { 14000781;;FedEx Canadian Service;Boolean    ;CaptionML=ENU=FedEx Canadian Service }
    { 14000782;;FedEx Intra Canada ;Boolean       ;CaptionML=ENU=FedEx Intra Canada }
    { 14000783;;No. of Freight Labels / Pallet;Integer }
    { 14000784;;No. of BOL Copies / Shipment;Integer }
    { 14000801;;LTL Rate Code      ;Code10        ;TableRelation="LTL Rate";
                                                   CaptionML=ENU=LTL Rate Code }
    { 14000802;;LTL Discount %     ;Decimal       ;CaptionML=ENU=LTL Discount %;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 14000803;;Default LTL Freight Type;Code10   ;TableRelation="LTL Freight Type";
                                                   CaptionML=ENU=Default LTL Freight Type }
    { 14000821;;Rate Shop (Bill of Lading);Boolean;CaptionML=ENU=Rate Shop (Bill of Lading) }
    { 14000841;;Shipping Label Code;Code10        ;TableRelation="Label Header" WHERE (Label Usage=CONST(Package));
                                                   CaptionML=ENU=Shipping Label Code }
    { 14000941;;Airborne Canadian Service;Boolean ;CaptionML=ENU=Airborne Canadian Service }
    { 14000942;;Airborne Puerto Rico Service;Boolean;
                                                   CaptionML=ENU=Airborne Puerto Rico Service }
    { 14000944;;Airborne At Home   ;Boolean       ;CaptionML=ENU=Airborne At Home }
  }
  KEYS
  {
    {    ;Shipping Agent Code,Code,World Wide Service;
                                                   Clustered=Yes }
    {    ;Rate Shop,Rateshop Sorting               }
    {    ;Delivery Days                            }
    {    ;UPS Hundred Weight Available             }
    {    ;Shipping Agent Code,Service Indicator    }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Shipping Agent Code,Code,Description     }
  }
  CODE
  {
    VAR
      ShippingAgent@1000000001 : Record 291;
      Text001@1001 : TextConst 'ENU=Rate calculation for shipping agent: %1 is not available';
      Shipping@1240030100 : Codeunit 14000701;
      NameAndAddressMgt@1240030101 : Codeunit 14000709;
      Text007@1240030000 : TextConst 'ENU=%1 must be 2-4 characters.';
      EShipValidation@1240020000 : Codeunit 14000240;

    PROCEDURE InternationalShipment@1(CurrentShippingAgent@1000000000 : Record 291;CountryCode@1000000001 : Code[10]) : Boolean;
    VAR
      Country@1000000002 : Record 9;
      IsInternational@1240020000 : Boolean;
    BEGIN
      CASE CurrentShippingAgent."Shipper Type" OF
        CurrentShippingAgent."Shipper Type"::UPS:
          BEGIN
            IF Country.GET(CountryCode) THEN BEGIN
              Country.TESTFIELD(Country.UPS);
              Country.TESTFIELD(Country."ISO 2 char Country Code");
              Country.TESTFIELD("ISO 3 digit Country Code");
              EXIT(EShipValidation."Country/Region-UPSWorldWideService"(Country));
            END ELSE
              EXIT(FALSE);
          END;
        CurrentShippingAgent."Shipper Type"::FEDEX:
          BEGIN
            IF Country.GET(CountryCode) THEN BEGIN
              Country.TESTFIELD(Country.FedEx);
              Country.TESTFIELD(Country."ISO 2 char Country Code");
              IF CurrentShippingAgent."FedEx Canadian Shipping Agent" THEN
                BEGIN
                  IF CountryCode <> 'CA' THEN
                    EXIT(TRUE)
                  ELSE
                    EXIT(FALSE);
                END
              ELSE
                EXIT(EShipValidation."Country/Region-FedExWorldWideService"(Country))
            END ELSE
              EXIT(FALSE);
          END;
        CurrentShippingAgent."Shipper Type"::LTL:
          BEGIN
            IF Country.GET(CountryCode) THEN BEGIN
              Country.TESTFIELD(Country.LTL);
              Country.TESTFIELD(Country."ISO 2 char Country Code");
              EXIT(EShipValidation."Country/Region-LTLWorldWideService"(Country))
            END ELSE
              EXIT(FALSE);
          END;
        CurrentShippingAgent."Shipper Type"::"5":
          BEGIN
            IF Country.GET(CountryCode) THEN BEGIN
              Country.TESTFIELD(Country.Airborne);
              Country.TESTFIELD(Country."ISO 2 char Country Code");
              EXIT(EShipValidation."Country/Region-AirborneWorldWideService"(Country))
            END ELSE
              EXIT(FALSE);
          END;
        CurrentShippingAgent."Shipper Type"::"6":
          BEGIN
            IF Country.GET(CountryCode) THEN BEGIN
              Country.TESTFIELD(Country.DHL);
              Country.TESTFIELD(Country."ISO 2 char Country Code");
              EXIT(EShipValidation."Country/Region-DHLWorldWideService"(Country))
            END ELSE
              EXIT(FALSE);
          END;
        CurrentShippingAgent."Shipper Type"::USPostal:
          BEGIN
            IF Country.GET(CountryCode) THEN BEGIN
              Country.TESTFIELD(Country.USPostal);
              Country.TESTFIELD(Country."ISO 2 char Country Code");
              EXIT(EShipValidation."Country/Region-USPostalWorldWideService"(Country))
            END ELSE
              EXIT(FALSE);
          END;
        // >> ECS
        CurrentShippingAgent."Shipper Type"::Extended:
          BEGIN
            ECInternationalShipment(CountryCode, IsInternational);
            EXIT(IsInternational);
          END;
        // << ECS
      END;

      EXIT(FALSE);
    END;

    PROCEDURE UPSCanadianShipment@2(CurrentShippingAgent@1000000000 : Record 291;CountryCode@1000000001 : Code[10]) : Boolean;
    VAR
      Country@1000000002 : Record 9;
    BEGIN
      CASE CurrentShippingAgent."Shipper Type" OF
        CurrentShippingAgent."Shipper Type"::UPS:
          BEGIN
            IF Country.GET(CountryCode) THEN BEGIN
              Country.TESTFIELD(Country.UPS);
              Country.TESTFIELD(Country."ISO 2 char Country Code");
              Country.TESTFIELD("ISO 3 digit Country Code");
              EXIT(EShipValidation."Country/Region-UPSCanadianService"(Country));
            END ELSE
              EXIT(FALSE);
          END;
      END;

      EXIT(FALSE);
    END;

    PROCEDURE UPSPuertoRicoShipment@3(CurrentShippingAgent@1000000000 : Record 291;CountryCode@1000000001 : Code[10]) : Boolean;
    VAR
      Country@1000000002 : Record 9;
    BEGIN
      CASE CurrentShippingAgent."Shipper Type" OF
        CurrentShippingAgent."Shipper Type"::UPS:
          BEGIN
            IF Country.GET(CountryCode) THEN BEGIN
              Country.TESTFIELD(Country.UPS);
              Country.TESTFIELD(Country."ISO 2 char Country Code");
              Country.TESTFIELD("ISO 3 digit Country Code");
              EXIT(EShipValidation."Country/Region-UPSPuertoRicoService"(Country));
            END ELSE
              EXIT(FALSE);
          END;
      END;

      EXIT(FALSE);
    END;

    PROCEDURE AirborneCanadianShipment@5(CurrentShippingAgent@1240030000 : Record 291;CountryCode@1240030001 : Code[10]) : Boolean;
    VAR
      Country@1240030002 : Record 9;
    BEGIN
      CASE CurrentShippingAgent."Shipper Type" OF
        CurrentShippingAgent."Shipper Type"::"5":
          BEGIN
            IF Country.GET(CountryCode) THEN BEGIN
              Country.TESTFIELD(Country.Airborne);
              Country.TESTFIELD(Country."ISO 2 char Country Code");
              Country.TESTFIELD("ISO 3 digit Country Code");
              EXIT(EShipValidation."Country/Region-AirborneCanadianService"(Country));
            END ELSE
              EXIT(FALSE);
          END;
      END;

      EXIT(FALSE);
    END;

    PROCEDURE AirbornePuertoRicoShipment@6(CurrentShippingAgent@1240030000 : Record 291;CountryCode@1240030001 : Code[10]) : Boolean;
    VAR
      Country@1240030002 : Record 9;
    BEGIN
      CASE CurrentShippingAgent."Shipper Type" OF
        CurrentShippingAgent."Shipper Type"::"5":
          BEGIN
            IF Country.GET(CountryCode) THEN BEGIN
              Country.TESTFIELD(Country.Airborne);
              Country.TESTFIELD(Country."ISO 2 char Country Code");
              Country.TESTFIELD("ISO 3 digit Country Code");
              EXIT(EShipValidation."Country/Region-AirbornePuertoRicoService"(Country));
            END ELSE
              EXIT(FALSE);
          END;
      END;

      EXIT(FALSE);
    END;

    PROCEDURE DefaultShipAgentService@1240030002(CurrentShippingAgent@1240030002 : Record 291;CountryCode@1240030000 : Code[10]) : Code[30];
    BEGIN
      IF CurrentShippingAgent."Shipper Type" <> CurrentShippingAgent."Shipper Type"::" " THEN BEGIN
        CASE TRUE OF
          InternationalShipment(CurrentShippingAgent,CountryCode):
            EXIT(CurrentShippingAgent."Def. Int. E-Ship Agent Service");
          UPSCanadianShipment(CurrentShippingAgent,CountryCode):
            EXIT(CurrentShippingAgent."Def. UPS Can. E-Ship Agent Srv");
          UPSPuertoRicoShipment(CurrentShippingAgent,CountryCode):
            EXIT(CurrentShippingAgent."Def. UPS PR E-Ship Agent Srv.");
          CurrentShippingAgent."FedEx Canadian Shipping Agent":
            EXIT(CurrentShippingAgent."Def. FedEx Canadian E-Ship Svc");
          ELSE
            EXIT(CurrentShippingAgent."Default E-Ship Agent Service");
        END;
      END ELSE
        EXIT(CurrentShippingAgent."Default E-Ship Agent Service");
    END;

    PROCEDURE WorldWideService@1240030003(CurrentShippingAgent@1240030001 : Record 291;CountryCode@1240030000 : Code[10]) : Boolean;
    BEGIN
      IF CurrentShippingAgent."Shipper Type" <> CurrentShippingAgent."Shipper Type"::" " THEN
        EXIT(InternationalShipment(CurrentShippingAgent,CountryCode))
      ELSE
        EXIT(FALSE);
    END;

    PROCEDURE ValidateEShipAgentService@1240030000(CurrentShippingAgent@1240030000 : Record 291;EShipAgentServiceCode@1240030001 : Code[30];CountryCode@1240030002 : Code[10]);
    BEGIN
      GET(
        CurrentShippingAgent.Code,EShipAgentServiceCode,
        InternationalShipment(CurrentShippingAgent,CountryCode));
      IF UPSCanadianShipment(CurrentShippingAgent,CountryCode) THEN
        TESTFIELD("UPS Canadian Service");
      IF UPSPuertoRicoShipment(CurrentShippingAgent,CountryCode) THEN
        TESTFIELD("UPS Puerto Rico Service");
      IF CurrentShippingAgent."FedEx Canadian Shipping Agent" THEN
        TESTFIELD("FedEx Canadian Service");
      IF AirborneCanadianShipment(CurrentShippingAgent,CountryCode) THEN
        TESTFIELD("Airborne Canadian Service");
      IF AirbornePuertoRicoShipment(CurrentShippingAgent,CountryCode) THEN
        TESTFIELD("Airborne Puerto Rico Service");
    END;

    PROCEDURE LookupEShipAgentService@1240030001(CurrentShippingAgent@1240030002 : Record 291;EShipAgentService@1240030001 : Code[30];CountryCode@1240030000 : Code[10]);
    BEGIN
      RESET;
      SETRANGE("Shipping Agent Code",CurrentShippingAgent.Code);
      SETRANGE("World Wide Service",InternationalShipment(CurrentShippingAgent,CountryCode));
      //IF UPSCanadianShipment(CurrentShippingAgent,CountryCode) THEN
      //  SETRANGE("UPS Canadian Service",TRUE);
      //IF UPSPuertoRicoShipment(CurrentShippingAgent,CountryCode) THEN
      //  SETRANGE("UPS Puerto Rico Service",TRUE);
      IF CurrentShippingAgent."Shipper Type" = CurrentShippingAgent."Shipper Type"::UPS THEN BEGIN
        SETRANGE("UPS Canadian Service", UPSCanadianShipment(CurrentShippingAgent,CountryCode));
        SETRANGE("UPS Puerto Rico Service",UPSPuertoRicoShipment(CurrentShippingAgent,CountryCode));
      END;
      IF CurrentShippingAgent."FedEx Canadian Shipping Agent" THEN
        SETRANGE("FedEx Canadian Service",TRUE);
      IF AirborneCanadianShipment(CurrentShippingAgent,CountryCode) THEN
        SETRANGE("Airborne Canadian Service",TRUE);
      IF AirbornePuertoRicoShipment(CurrentShippingAgent,CountryCode) THEN
        SETRANGE("Airborne Puerto Rico Service",TRUE);
    END;

    PROCEDURE CheckNameAddressPackage@1240030005(CurrentShippingAgent@1240030000 : Record 291;VAR Package@1240030001 : Record 14000701);
    BEGIN
      NameAndAddressMgt.CheckNameAddressPackage(CurrentShippingAgent,Package);
    END;

    PROCEDURE CheckNameAddressSalesHeader@1240030020(VAR CurrentSalesHeader@1240030000 : Record 36;ShippingAgentCode@1240030001 : Code[10]);
    BEGIN
      NameAndAddressMgt.CheckNameAddressSalesHeader(CurrentSalesHeader,ShippingAgentCode);
    END;

    PROCEDURE CheckNameAddressPurchaseHeader@1240030022(VAR CurrentPurchHeader@1240030000 : Record 38;ShippingAgentCode@1240030001 : Code[10]);
    BEGIN
      NameAndAddressMgt.CheckNameAddressPurchaseHeader(CurrentPurchHeader,ShippingAgentCode);
    END;

    PROCEDURE CheckNameAddressTransferHeader@1240030023(VAR CurrentTransHeader@1240030000 : Record 5740;ShippingAgentCode@1240030001 : Code[10]);
    BEGIN
      NameAndAddressMgt.CheckNameAddressTransferHeader(CurrentTransHeader,ShippingAgentCode);
    END;

    PROCEDURE CheckNameAddressCustomer@1240031000(CurrentShippingAgent@1240030000 : Record 291;VAR Customer@1240030001 : Record 18);
    BEGIN
      NameAndAddressMgt.CheckNameAddressCustomer(CurrentShippingAgent,Customer);
    END;

    PROCEDURE CheckNameAddressShipToAddress@1240031001(CurrentShippingAgent@1240030001 : Record 291;VAR ShipToAddress@1240030000 : Record 222);
    BEGIN
      NameAndAddressMgt.CheckNameAddressShipToAddress(CurrentShippingAgent,ShipToAddress);
    END;

    PROCEDURE CheckNameAddressVendor@1240031002(CurrentShippingAgent@1240030001 : Record 291;VAR Vendor@1240030000 : Record 23);
    BEGIN
      NameAndAddressMgt.CheckNameAddressVendor(CurrentShippingAgent,Vendor);
    END;

    PROCEDURE CheckNameAddressOrderAddress@1240031003(CurrentShippingAgent@1240030001 : Record 291;VAR OrderAddress@1240030000 : Record 224);
    BEGIN
      NameAndAddressMgt.CheckNameAddressOrderAddress(CurrentShippingAgent,OrderAddress);
    END;

    PROCEDURE CheckNameAddressLocation@1240030004(CurrentShippingAgent@1240030001 : Record 291;VAR Location@1240030000 : Record 14);
    BEGIN
      NameAndAddressMgt.CheckNameAddressLocation(CurrentShippingAgent,Location);
    END;

    [Business]
    LOCAL PROCEDURE ECInternationalShipment@1240020000(CountryCode@1240020000 : Code[10];VAR IsInternationalShipment@1240020001 : Boolean);
    BEGIN
    END;

    BEGIN
    {
      2015-09-01 TPZ874 VCHERNYA
        No Free Freight field has been created
    }
    END.
  }
}

