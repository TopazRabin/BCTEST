OBJECT Table 14000553 Location Inventory Period
{
  OBJECT-PROPERTIES
  {
    Date=09/17/20;
    Time=[ 9:06:37 AM];
    Modified=Yes;
    Version List=UBP3.02;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "Starting Date" = 0D THEN
                 ERROR(Text000);
               IF "Ending Date" = 0D THEN
                 ERROR(Text001);
             END;

    OnDelete=VAR
               ItemUsage@1240020003 : Record 14000557;
             BEGIN
               ItemUsage.RESET;
               ItemUsage.SETRANGE("Location Code","Location Code");
               ItemUsage.SETRANGE("Starting Date","Starting Date");
               IF ItemUsage.FINDFIRST THEN
                 ERROR(Text002);
               IF "Period End Closed" THEN
                 ERROR(Text007);
             END;

    OnRename=VAR
               ItemUsage@1240020003 : Record 14000557;
             BEGIN
               ItemUsage.RESET;
               ItemUsage.SETRANGE("Location Code","Location Code");
               ItemUsage.SETRANGE("Starting Date","Starting Date");
               IF ItemUsage.FINDFIRST THEN
                 ERROR(Text002);
             END;

    CaptionML=ENU=Location Inventory Period;
    LookupPageID=Page14000554;
  }
  FIELDS
  {
    { 1   ;   ;Starting Date       ;Date          ;TableRelation="Forecast Inventory Period"."Starting Date" WHERE (Type=CONST(" "));
                                                   OnValidate=BEGIN
                                                                IF "Starting Date" = 0D THEN
                                                                  ERROR(Text004);
                                                                IF ("Starting Date" > "Ending Date") AND ("Ending Date" <> 0D) THEN
                                                                  ERROR(Text003);
                                                              END;

                                                   CaptionML=ENU=Starting Date;
                                                   Editable=No }
    { 2   ;   ;Location Code       ;Code10        ;TableRelation=Location.Code;
                                                   CaptionML=ENU=Location Code;
                                                   Editable=No }
    { 11  ;   ;Ending Date         ;Date          ;TableRelation="Forecast Inventory Period"."Ending Date" WHERE (Type=CONST(" "));
                                                   OnValidate=VAR
                                                                ItemUsage@1240020000 : Record 14000557;
                                                              BEGIN
                                                                IF "Ending Date" = 0D THEN
                                                                  ERROR(Text004);
                                                                IF "Ending Date" < "Starting Date" THEN
                                                                  ERROR(Text005);
                                                                IF xRec."Ending Date" <> 0D THEN BEGIN
                                                                  ItemUsage.RESET;
                                                                  ItemUsage.SETRANGE("Location Code","Location Code");
                                                                  ItemUsage.SETRANGE("Starting Date","Starting Date");
                                                                  IF ItemUsage.FINDFIRST THEN
                                                                    ERROR(Text002);
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              UBP@1240020000 : Codeunit 14000564;
                                                            BEGIN
                                                              UBP.RunForecastPeriodPageForEndDate();
                                                            END;

                                                   CaptionML=ENU=Ending Date;
                                                   Editable=No }
    { 12  ;   ;Last Day End Date   ;Date          ;CaptionML=ENU=Last Day End Date;
                                                   Editable=No }
    { 13  ;   ;Day End Closed      ;Boolean       ;CaptionML=ENU=Day End Closed;
                                                   Editable=No }
    { 14  ;   ;Period End Closed   ;Boolean       ;CaptionML=ENU=Period End Closed;
                                                   Editable=No }
    { 15  ;   ;Adj. After Close    ;Boolean       ;CaptionML=ENU=Adj. After Close;
                                                   Editable=No }
    { 16  ;   ;Work Date           ;Date          ;CaptionML=ENU=Work Date }
    { 50000;  ;ENo. of Employees   ;Decimal       ;DataClassification=ToBeClassified }
    { 50001;  ;EPeriod Total Payroll Hours;Decimal;DataClassification=ToBeClassified }
    { 50002;  ;EPeriod Total Payoll;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("EHealth Ben Payroll Taxes%");
                                                                //VALIDATE("Total Warehouse Cost");
                                                              END;

                                                   DataClassification=ToBeClassified }
    { 50003;  ;EPurch. Rcv. Value  ;Decimal       ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2;
                                                   Description=PO Received }
    { 50004;  ;EPurch. Rcv. Lines  ;Decimal       ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50005;  ;EValue Transfer Out ;Decimal       ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2;
                                                   Description=Transfer Out }
    { 50006;  ;ETransfer Out Lines ;Decimal       ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50007;  ;EValue Transfer In  ;Decimal       ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2;
                                                   Description=Transfer In }
    { 50008;  ;ETransfer In Lines  ;Decimal       ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50009;  ;EPurch. Rtn. Value  ;Decimal       ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2;
                                                   Description=PO Returned }
    { 50010;  ;EPurch. Rtn. Lines  ;Decimal       ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50011;  ;EWhse. Shpt. Sales (Ext.);Decimal  ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2;
                                                   Description=SO Shipment }
    { 50012;  ;EWhse. Shpt. Lines (Ext.);Decimal  ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50013;  ;EWhse. Rtn. Value   ;Decimal       ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2;
                                                   Description=SO Returned }
    { 50014;  ;EWhse. Rtn. Lines   ;Decimal       ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50015;  ;EWhse. Shpt. Sales (Int.);Decimal  ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2;
                                                   Description=30000 Account }
    { 50016;  ;EWhse. Shpt. Lines (Int.);Decimal  ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50017;  ;EWhse. Shpt. Cost (Ext.);Decimal   ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2 }
    { 50018;  ;EWhse. Shpt. Cost (Int.);Decimal   ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2 }
    { 50019;  ;EWhse. Rtn. Sales (Ext.);Decimal   ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2 }
    { 50020;  ;EWhse. Rtn. Lines (Ext.);Decimal   ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50021;  ;EWhse. Rtn. Cost (Ext.);Decimal    ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2 }
    { 50022;  ;EWhse. Rtn. Sales (Int.);Decimal   ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2 }
    { 50023;  ;EWhse. Rtn. Lines (Int.);Decimal   ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50024;  ;EWhse. Rtn. Cost (Int.);Decimal    ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2 }
    { 50025;  ;EWhse. Shpt. Sales (Pickup);Decimal;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2 }
    { 50026;  ;EWhse. Shpt. Lines (Pickup);Decimal;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50027;  ;EWhse. Shpt. Cost (Pickup);Decimal ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2 }
    { 50028;  ;EPeriod Overtime Hours;Decimal     ;DataClassification=ToBeClassified }
    { 50029;  ;EPeriod Overtime Payroll;Decimal   ;OnValidate=BEGIN
                                                                VALIDATE("EHealth Ben Payroll Taxes%");
                                                                //VALIDATE("Total Warehouse Cost");
                                                              END;

                                                   DataClassification=ToBeClassified }
    { 50030;  ;EAvailable Space    ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("ERent Plus Tax");
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   Description=sqft }
    { 50031;  ;ETotal Cost / Sqft  ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("ERent Plus Tax");
                                                              END;

                                                   DataClassification=ToBeClassified }
    { 50032;  ;EEnd Inventory Value;Decimal       ;DataClassification=ToBeClassified }
    { 50033;  ;EWarehouse Cost     ;Decimal       ;OnValidate=BEGIN
                                                                "EWarehouse Cost" := EInsurance + EUtilities + "ERent Plus Tax" + "EStorage Fee";
                                                                VALIDATE("ETotal Warehouse Cost");
                                                              END;

                                                   DataClassification=ToBeClassified }
    { 50034;  ;ETotal Warehouse Cost;Decimal      ;OnValidate=BEGIN
                                                                "ETotal Warehouse Cost" := "EWarehouse Cost" + "EPeriod Overtime Payroll" + "EPeriod Total Payoll" +
                                                                                          "EHealth Ben Payroll Taxes";
                                                              END;

                                                   DataClassification=ToBeClassified }
    { 50035;  ;EInsurance          ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("EWarehouse Cost");
                                                              END;

                                                   DataClassification=ToBeClassified }
    { 50036;  ;EUtilities          ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("EWarehouse Cost");
                                                              END;

                                                   DataClassification=ToBeClassified }
    { 50037;  ;ERent Plus Tax      ;Decimal       ;OnValidate=BEGIN
                                                                "ERent Plus Tax" := "EAvailable Space" * "ETotal Cost / Sqft" / 12;
                                                                VALIDATE("EWarehouse Cost");
                                                              END;

                                                   DataClassification=ToBeClassified }
    { 50038;  ;EStorage Fee        ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("EWarehouse Cost");
                                                              END;

                                                   DataClassification=ToBeClassified }
    { 50039;  ;ESales Amount       ;Decimal       ;DataClassification=ToBeClassified;
                                                   Description=Sales Line Amount Ship from Current Location }
    { 50040;  ;EDrop Ship Sales Amont;Decimal     ;DataClassification=ToBeClassified;
                                                   Description=Drop Ship Sales Amount }
    { 50041;  ;EShptment Tax Base Amount;Decimal  ;DataClassification=ToBeClassified }
    { 50042;  ;EHealth Ben Payroll Taxes%;Decimal ;OnValidate=BEGIN
                                                                "EHealth Ben Payroll Taxes" := "EHealth Ben Payroll Taxes%" * ("EPeriod Overtime Payroll" + "EPeriod Total Payoll");
                                                                VALIDATE("ETotal Warehouse Cost");
                                                              END;

                                                   DataClassification=ToBeClassified }
    { 50043;  ;EHealth Ben Payroll Taxes;Decimal  ;DataClassification=ToBeClassified }
    { 50044;  ;ELocal Shipment Sales;Decimal      ;DataClassification=ToBeClassified }
    { 50045;  ;ELoca Shipment Costs;Decimal       ;DataClassification=ToBeClassified }
    { 50046;  ;ELocal Shipment Lines;Decimal      ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50047;  ;ESales Shipments (Int.);Decimal    ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50048;  ;ESales Shipments (Ext.);Decimal    ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50049;  ;ENumber of Containers;Decimal      ;DataClassification=ToBeClassified;
                                                   Description=TOP4988 }
    { 50050;  ;EManpower to Unload ;Decimal       ;DataClassification=ToBeClassified;
                                                   Description=TOP4988 }
    { 50051;  ;EHours to Unload Containers;Decimal;DataClassification=ToBeClassified;
                                                   Description=TOP4988 }
    { 50052;  ;ELTL Shipment Count ;Integer       ;DataClassification=ToBeClassified }
    { 50053;  ;ELocal Shipment Count;Integer      ;DataClassification=ToBeClassified }
    { 50054;  ;EPU Shipment Count  ;Integer       ;DataClassification=ToBeClassified }
    { 50055;  ;EUPS Shipment Count ;Integer       ;DataClassification=ToBeClassified }
    { 50056;  ;EFedEx Shipment Count;Integer      ;DataClassification=ToBeClassified }
    { 50060;  ;LPurch. Rcv. Value  ;Decimal       ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2;
                                                   Description=PO Received }
    { 50061;  ;LPurch. Rcv. Lines  ;Decimal       ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50062;  ;LValue Transfer Out ;Decimal       ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2;
                                                   Description=Transfer Out }
    { 50063;  ;LTransfer Out Lines ;Decimal       ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50064;  ;LValue Transfer In  ;Decimal       ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2;
                                                   Description=Transfer In }
    { 50065;  ;LTransfer In Lines  ;Decimal       ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50066;  ;LPurch. Rtn. Value  ;Decimal       ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2;
                                                   Description=PO Returned }
    { 50067;  ;LPurch. Rtn. Lines  ;Decimal       ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50068;  ;LWhse. Shpt. Sales (Ext.);Decimal  ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2;
                                                   Description=SO Shipment }
    { 50069;  ;LWhse. Shpt. Lines (Ext.);Decimal  ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50070;  ;LWhse. Rtn. Value   ;Decimal       ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2;
                                                   Description=SO Returned }
    { 50071;  ;LWhse. Rtn. Lines   ;Decimal       ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50072;  ;LWhse. Shpt. Sales (Int.);Decimal  ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2;
                                                   Description=30000 Account }
    { 50073;  ;LWhse. Shpt. Lines (Int.);Decimal  ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50074;  ;LWhse. Shpt. Cost (Ext.);Decimal   ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2 }
    { 50075;  ;LWhse. Shpt. Cost (Int.);Decimal   ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2 }
    { 50076;  ;LWhse. Rtn. Sales (Ext.);Decimal   ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2 }
    { 50077;  ;LWhse. Rtn. Lines (Ext.);Decimal   ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50078;  ;LWhse. Rtn. Cost (Ext.);Decimal    ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2 }
    { 50079;  ;LWhse. Rtn. Sales (Int.);Decimal   ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2 }
    { 50080;  ;LWhse. Rtn. Lines (Int.);Decimal   ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50081;  ;LWhse. Rtn. Cost (Int.);Decimal    ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2 }
    { 50082;  ;LWhse. Shpt. Sales (Pickup);Decimal;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2 }
    { 50083;  ;LWhse. Shpt. Lines (Pickup);Decimal;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50084;  ;LWhse. Shpt. Cost (Pickup);Decimal ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=2:2 }
    { 50085;  ;LSales Amount       ;Decimal       ;DataClassification=ToBeClassified;
                                                   Description=Sales Line Amount Ship from Current Location }
    { 50086;  ;LShptment Tax Base Amount;Decimal  ;DataClassification=ToBeClassified }
    { 50087;  ;LLocal Shipment Sales;Decimal      ;DataClassification=ToBeClassified }
    { 50088;  ;LLoca Shipment Costs;Decimal       ;DataClassification=ToBeClassified }
    { 50089;  ;LLocal Shipment Lines;Decimal      ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50090;  ;LSales Shipments (Int.);Decimal    ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50091;  ;LSales Shipments (Ext.);Decimal    ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:0 }
    { 50092;  ;LLTL Shipment Count ;Integer       ;DataClassification=ToBeClassified }
    { 50093;  ;LLocal Shipment Count;Integer      ;DataClassification=ToBeClassified }
    { 50094;  ;LPU Shipment Count  ;Integer       ;DataClassification=ToBeClassified }
    { 50095;  ;LUPS Shipment Count ;Integer       ;DataClassification=ToBeClassified }
    { 50096;  ;LFedEx Shipment Count;Integer      ;DataClassification=ToBeClassified }
    { 50097;  ;LNo. of Employees   ;Decimal       ;DataClassification=ToBeClassified }
    { 50098;  ;LPeriod Total Payroll Hours;Decimal;DataClassification=ToBeClassified }
    { 50099;  ;LPeriod Total Payoll;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("EHealth Ben Payroll Taxes%");
                                                                //VALIDATE("Total Warehouse Cost");
                                                              END;

                                                   DataClassification=ToBeClassified }
    { 50100;  ;LPeriod Overtime Hours;Decimal     ;DataClassification=ToBeClassified }
    { 50101;  ;LPeriod Overtime Payroll;Decimal   ;OnValidate=BEGIN
                                                                VALIDATE("EHealth Ben Payroll Taxes%");
                                                                //VALIDATE("Total Warehouse Cost");
                                                              END;

                                                   DataClassification=ToBeClassified }
    { 50102;  ;LAvailable Space    ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("ERent Plus Tax");
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   Description=sqft }
    { 50103;  ;LTotal Cost / Sqft  ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("ERent Plus Tax");
                                                              END;

                                                   DataClassification=ToBeClassified }
    { 50104;  ;LEnd Inventory Value;Decimal       ;DataClassification=ToBeClassified }
    { 50105;  ;LWarehouse Cost     ;Decimal       ;OnValidate=BEGIN
                                                                "LWarehouse Cost" := LInsurance + LUtilities + "LRent Plus Tax" + "LStorage Fee";
                                                                VALIDATE("LTotal Warehouse Cost");
                                                              END;

                                                   DataClassification=ToBeClassified }
    { 50106;  ;LTotal Warehouse Cost;Decimal      ;OnValidate=BEGIN
                                                                "LTotal Warehouse Cost" := "LWarehouse Cost" + "LPeriod Overtime Payroll" + "LPeriod Total Payoll" +
                                                                                          "LHealth Ben Payroll Taxes";
                                                              END;

                                                   DataClassification=ToBeClassified }
    { 50107;  ;LInsurance          ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("LWarehouse Cost");
                                                              END;

                                                   DataClassification=ToBeClassified }
    { 50109;  ;LUtilities          ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("LWarehouse Cost");
                                                              END;

                                                   DataClassification=ToBeClassified }
    { 50110;  ;LRent Plus Tax      ;Decimal       ;OnValidate=BEGIN
                                                                "LRent Plus Tax" := "LAvailable Space" * "LTotal Cost / Sqft" / 12;
                                                                VALIDATE("LWarehouse Cost");
                                                              END;

                                                   DataClassification=ToBeClassified }
    { 50111;  ;LStorage Fee        ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("LWarehouse Cost");
                                                              END;

                                                   DataClassification=ToBeClassified }
    { 50112;  ;LDrop Ship Sales Amont;Decimal     ;DataClassification=ToBeClassified;
                                                   Description=Drop Ship Sales Amount }
    { 50113;  ;LHealth Ben Payroll Taxes%;Decimal ;OnValidate=BEGIN
                                                                "LHealth Ben Payroll Taxes" := "LHealth Ben Payroll Taxes%" * ("LPeriod Overtime Payroll" + "LPeriod Total Payoll");
                                                                VALIDATE("LTotal Warehouse Cost");
                                                              END;

                                                   DataClassification=ToBeClassified }
    { 50114;  ;LHealth Ben Payroll Taxes;Decimal  ;DataClassification=ToBeClassified }
    { 50115;  ;LNumber of Containers;Decimal      ;DataClassification=ToBeClassified;
                                                   Description=TOP4988 }
    { 50116;  ;LManpower to Unload ;Decimal       ;DataClassification=ToBeClassified;
                                                   Description=TOP4988 }
    { 50117;  ;LHours to Unload Containers;Decimal;DataClassification=ToBeClassified;
                                                   Description=TOP4988 }
    { 68000;  ;Usage Request       ;Boolean       ;DataClassification=ToBeClassified }
    { 68002;  ;Transfer From Code  ;Code10        ;TableRelation=Location.Code;
                                                   DataClassification=ToBeClassified }
    { 68003;  ;Transfer Header     ;Code20        ;TableRelation="Transfer Header";
                                                   DataClassification=ToBeClassified }
    { 68010;  ;File name           ;Text250       ;DataClassification=ToBeClassified }
    { 68011;  ;File Imported       ;Boolean       ;DataClassification=ToBeClassified }
    { 68012;  ;File Imported On    ;Date          ;DataClassification=ToBeClassified }
    { 68013;  ;File Imported By    ;Code20        ;TableRelation="User Setup";
                                                   DataClassification=ToBeClassified }
    { 68050;  ;Max. Days Supply    ;Decimal       ;DataClassification=ToBeClassified;
                                                   DecimalPlaces=0:5 }
    { 68060;  ;Closing Period      ;Date          ;DataClassification=ToBeClassified }
    { 68061;  ;Days Supply Enabled ;Boolean       ;DataClassification=ToBeClassified }
    { 68100;  ;Requested By        ;Code20        ;TableRelation="User Setup";
                                                   DataClassification=ToBeClassified }
    { 68101;  ;Requested On        ;Date          ;DataClassification=ToBeClassified }
    { 68102;  ;User Comment        ;Text80        ;DataClassification=ToBeClassified }
    { 68201;  ;Status              ;Option        ;OnValidate=BEGIN
                                                                {
                                                                WITH LocationUsageRequest DO BEGIN
                                                                  SETRANGE("No.",Rec."Starting Date");
                                                                  SETRANGE("No. 2",Rec."Location Code");
                                                                  IF Rec.Status = Rec.Status::Ready THEN
                                                                    SETRANGE("Reserved Qty. on Inventory","Reserved Qty. on Inventory"::"3");
                                                                  IF FIND('-') THEN
                                                                    REPEAT
                                                                    VALIDATE("Reserved Qty. on Inventory",Rec.Status);
                                                                    MODIFY;
                                                                  UNTIL NEXT = 0;
                                                                END;
                                                                }
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   OptionString=[ ,Imported,Usage updated,In Progress,Ready,Planned,Closed] }
  }
  KEYS
  {
    {    ;Starting Date,Location Code             ;Clustered=Yes }
    {    ;Location Code,Period End Closed          }
    {    ;Location Code,Starting Date,Period End Closed }
    {    ;Location Code,Starting Date,Ending Date  }
    {    ;Location Code,Adj. After Close           }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1240030000 : TextConst 'ENU=Enter a starting date.';
      Text001@1240030001 : TextConst 'ENU=Enter an ending date.';
      Text002@1240030002 : TextConst 'ENU=You cannot delete this date range because associated item usage records exist.';
      Text003@1240030003 : TextConst 'ENU=The starting date cannot be later than the ending date.';
      Text004@1240030004 : TextConst 'ENU=You must enter a date.';
      Text005@1240030005 : TextConst 'ENU=The ending date cannot be earlier than the starting date.';
      Text006@1240030006 : TextConst 'ENU=Do you wish to open period end processing from %1 forward?';
      Text007@1240030007 : TextConst 'ENU=This period is closed.';
      Text008@1240020000 : TextConst 'ENU=Do you wish to remove the usage ledger entries?';

    PROCEDURE OpenDayEndYN@6();
    BEGIN
      TESTFIELD("Day End Closed",TRUE);
      TESTFIELD("Period End Closed",FALSE);
      IF CONFIRM(Text006,FALSE,"Starting Date") THEN
        OpenDayEnd;
    END;

    PROCEDURE OpenDayEnd@1240030000();
    VAR
      UsageLedgerEntry@1240020000 : Record 14000556;
      ItemUsage@1240020004 : Record 14000557;
      Location@1240020003 : Record 14;
      LocInvPeriod@1240020002 : Record 14000553;
    BEGIN
      ItemUsage.SETCURRENTKEY("Location Code","Starting Date","Item No.","Variant Code");
      ItemUsage.SETRANGE("Location Code","Location Code");
      ItemUsage.SETFILTER("Starting Date",'>=%1',"Starting Date");
      ItemUsage.DELETEALL(TRUE);

      UsageLedgerEntry.SETRANGE("Location Code", "Location Code");
      UsageLedgerEntry.SETFILTER("Usage Date", '>=%1', "Starting Date");
      UsageLedgerEntry.SETFILTER("Entry No.", '>%1', 0);  // skip cloned, demand date, and imported historical
      UsageLedgerEntry.DELETEALL(TRUE);
      LocInvPeriod.SETFILTER("Starting Date",'%1..',"Starting Date");
      LocInvPeriod.SETRANGE("Location Code","Location Code");
      LocInvPeriod.MODIFYALL("Day End Closed",FALSE);
      LocInvPeriod.MODIFYALL("Last Day End Date",0D);

      Location.GET("Location Code");
      Location."Last Day-End Date" := 0D;
      Location.MODIFY(FALSE);
    END;

    PROCEDURE OpenPeriodEndYN@7();
    BEGIN
      IF CONFIRM(Text006,FALSE,"Starting Date",FALSE) THEN
        OpenPeriodEnd;
    END;

    PROCEDURE OpenPeriodEnd@1240030001();
    VAR
      ItemUsage@1240020003 : Record 14000557;
      Location@1240020002 : Record 14;
      LocInvPeriod@1240020001 : Record 14000553;
      ForecastSummaryView@1240020000 : Record 14000585;
    BEGIN
      Location.GET("Location Code");
      Location."Last Closed Period Date" := 0D;
      LocInvPeriod.RESET;
      LocInvPeriod.SETCURRENTKEY("Location Code","Starting Date","Period End Closed");
      LocInvPeriod.SETRANGE("Location Code","Location Code");
      LocInvPeriod.SETFILTER("Starting Date",'%1..',"Starting Date");
      LocInvPeriod.FINDSET;
      REPEAT
        LocInvPeriod."Period End Closed" := FALSE;
        LocInvPeriod."Adj. After Close" := FALSE;
        LocInvPeriod.MODIFY;
      UNTIL LocInvPeriod.NEXT = 0;
      LocInvPeriod.RESET;
      LocInvPeriod.SETCURRENTKEY("Location Code","Starting Date","Period End Closed");
      LocInvPeriod.SETRANGE("Location Code","Location Code");
      LocInvPeriod.SETRANGE("Period End Closed",TRUE);
      IF LocInvPeriod.FIND('+') THEN
        Location."Last Closed Period Date" := LocInvPeriod."Ending Date";
      Location.MODIFY;

      ForecastSummaryView.RESET;
      IF ForecastSummaryView.FINDSET THEN
        REPEAT
          IF NOT ForecastSummaryView."Re-Calculate Required" THEN BEGIN
            ForecastSummaryView."Re-Calculate Required" := TRUE;
            ForecastSummaryView.MODIFY(TRUE);
          END;
        UNTIL ForecastSummaryView.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

