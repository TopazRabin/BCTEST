OBJECT Table 14000772 UPS Bill Line
{
  OBJECT-PROPERTIES
  {
    Date=06/28/17;
    Time=12:00:00 PM;
    Version List=SE0.53.17;
  }
  PROPERTIES
  {
    CaptionML=ENU=UPS Bill Line;
    LookupPageID=Page14000771;
    DrillDownPageID=Page14000771;
  }
  FIELDS
  {
    { 1   ;   ;Shipping Bill No.   ;Code10        ;CaptionML=ENU=Shipping Bill No. }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 11  ;   ;Record Type Indicator;Code10       ;CaptionML=ENU=Record Type Indicator }
    { 12  ;   ;Plan Number         ;Code20        ;CaptionML=ENU=Plan Number }
    { 13  ;   ;Shipper Number      ;Code20        ;CaptionML=ENU=Shipper Number }
    { 14  ;   ;UPS Invoice Number  ;Code20        ;CaptionML=ENU=UPS Invoice Number }
    { 15  ;   ;Bill Date           ;Code10        ;CaptionML=ENU=Bill Date }
    { 16  ;   ;Invoice Total Amount;Code10        ;CaptionML=ENU=Invoice Total Amount }
    { 17  ;   ;Tracking Number     ;Text30        ;CaptionML=ENU=Tracking Number }
    { 18  ;   ;Pickup Record Number;Code10        ;CaptionML=ENU=Pickup Record Number }
    { 19  ;   ;Reference Number 1  ;Text30        ;CaptionML=ENU=Reference Number 1 }
    { 20  ;   ;Reference Number 2  ;Text30        ;CaptionML=ENU=Reference Number 2 }
    { 21  ;   ;Internet ID         ;Text30        ;CaptionML=ENU=Internet ID }
    { 22  ;   ;Quantity            ;Code10        ;CaptionML=ENU=Quantity }
    { 23  ;   ;Billed Weight       ;Code10        ;CaptionML=ENU=Billed Weight }
    { 24  ;   ;Actual Weight       ;Code10        ;CaptionML=ENU=Actual Weight }
    { 25  ;   ;Weight LBS (code)   ;Code10        ;CaptionML=ENU=Weight LBS (code) }
    { 26  ;   ;Dim Weight          ;Code10        ;CaptionML=ENU=Dim Weight }
    { 27  ;   ;Oversize 1          ;Code10        ;CaptionML=ENU=Oversize 1 }
    { 28  ;   ;Oversize 2          ;Code10        ;CaptionML=ENU=Oversize 2 }
    { 29  ;   ;Zone                ;Code10        ;CaptionML=ENU=Zone }
    { 30  ;   ;Transaction Code    ;Code10        ;CaptionML=ENU=Transaction Code }
    { 31  ;   ;Service Description ;Text30        ;CaptionML=ENU=Service Description }
    { 32  ;   ;Billing Option      ;Code10        ;CaptionML=ENU=Billing Option }
    { 33  ;   ;Pickup date         ;Code10        ;CaptionML=ENU=Pickup date }
    { 34  ;   ;Sender Name         ;Text50        ;CaptionML=ENU=Sender Name }
    { 35  ;   ;Sender Company Name ;Text50        ;CaptionML=ENU=Sender Company Name }
    { 36  ;   ;Sender Street       ;Text50        ;CaptionML=ENU=Sender Street }
    { 37  ;   ;Sender City         ;Text50        ;CaptionML=ENU=Sender City }
    { 38  ;   ;Sender State        ;Text50        ;CaptionML=ENU=Sender State }
    { 39  ;   ;Postal Code         ;Text50        ;CaptionML=ENU=Postal Code }
    { 40  ;   ;Receiver Name       ;Text50        ;CaptionML=ENU=Receiver Name }
    { 41  ;   ;Receiver Company Name;Text50       ;CaptionML=ENU=Receiver Company Name }
    { 42  ;   ;Receiver Street     ;Text50        ;CaptionML=ENU=Receiver Street }
    { 43  ;   ;Receiver City       ;Text50        ;CaptionML=ENU=Receiver City }
    { 44  ;   ;Receiver State      ;Code50        ;CaptionML=ENU=Receiver State }
    { 45  ;   ;Receiver Postal Code;Code50        ;CaptionML=ENU=Receiver Postal Code }
    { 46  ;   ;Country             ;Code50        ;CaptionML=ENU=Country }
    { 47  ;   ;Net Charges         ;Code10        ;CaptionML=ENU=Net Charges }
    { 48  ;   ;Incentive           ;Code10        ;CaptionML=ENU=Incentive }
    { 49  ;   ;Gross Charge        ;Code10        ;CaptionML=ENU=Gross Charge }
    { 50  ;   ;Declared Value      ;Code10        ;CaptionML=ENU=Declared Value }
    { 51  ;   ;Saturday Delivery   ;Code10        ;CaptionML=ENU=Saturday Delivery }
    { 52  ;   ;COD                 ;Code10        ;CaptionML=ENU=COD }
    { 53  ;   ;Additional Handling ;Code10        ;CaptionML=ENU=Additional Handling }
    { 54  ;   ;Hazardous Material  ;Code10        ;CaptionML=ENU=Hazardous Material }
    { 55  ;   ;Early AM Surcharge  ;Code10        ;CaptionML=ENU=Early AM Surcharge }
    { 56  ;   ;Delivery Confrimation;Code10       ;CaptionML=ENU=Delivery Confrimation }
    { 57  ;   ;Saturday Pickup     ;Code10        ;CaptionML=ENU=Saturday Pickup }
    { 58  ;   ;Call Tag            ;Code10        ;CaptionML=ENU=Call Tag }
    { 59  ;   ;Extended Destination Surcharge;Code10;
                                                   CaptionML=ENU=Extended Destination Surcharge }
    { 60  ;   ;Invaild Account Charge;Code10      ;CaptionML=ENU=Invaild Account Charge }
    { 61  ;   ;Delivery Area Surcharge;Code10     ;CaptionML=ENU=Delivery Area Surcharge }
    { 62  ;   ;Currency Surcharge  ;Code10        ;CaptionML=ENU=Currency Surcharge }
    { 63  ;   ;Chargeback Surcharge;Code10        ;CaptionML=ENU=Chargeback Surcharge }
    { 64  ;   ;Pickup Fee 1        ;Code10        ;CaptionML=ENU=Pickup Fee 1 }
    { 65  ;   ;Billing Option 1    ;Code10        ;CaptionML=ENU=Billing Option 1 }
    { 66  ;   ;Consolidated Surcharge;Code10      ;CaptionML=ENU=Consolidated Surcharge }
    { 67  ;   ;Pickup Fee 2        ;Code10        ;CaptionML=ENU=Pickup Fee 2 }
    { 68  ;   ;Billing Option 2    ;Code10        ;CaptionML=ENU=Billing Option 2 }
    { 69  ;   ;Consoilidated Clearance;Code10     ;CaptionML=ENU=Consoilidated Clearance }
    { 70  ;   ;Split Duty Tax      ;Code10        ;CaptionML=ENU=Split Duty Tax }
    { 71  ;   ;Export License Verification;Text30 ;CaptionML=ENU=Export License Verification }
    { 72  ;   ;Misc. 1             ;Code10        ;CaptionML=ENU=Misc. 1 }
    { 73  ;   ;Misc. 2             ;Code10        ;CaptionML=ENU=Misc. 2 }
    { 74  ;   ;Misc. 3             ;Code10        ;CaptionML=ENU=Misc. 3 }
    { 75  ;   ;Misc. 4             ;Code10        ;CaptionML=ENU=Misc. 4 }
    { 76  ;   ;Misc. 5             ;Code10        ;CaptionML=ENU=Misc. 5 }
    { 101 ;   ;Bill Date (Converted);Date         ;CaptionML=ENU=Bill Date (Converted) }
    { 102 ;   ;Invoice Total Amount (Conv.);Decimal;
                                                   CaptionML=ENU=Invoice Total Amount (Conv.);
                                                   BlankZero=Yes }
    { 103 ;   ;Quantity (Converted);Decimal       ;CaptionML=ENU=Quantity (Converted);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 104 ;   ;Billed Weight (Converted);Decimal  ;CaptionML=ENU=Billed Weight (Converted);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 105 ;   ;Actual Weight (Converted);Decimal  ;CaptionML=ENU=Actual Weight (Converted);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 106 ;   ;Dim Weight (Converted);Decimal     ;CaptionML=ENU=Dim Weight (Converted);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 107 ;   ;Pickup date (Converted);Date       ;CaptionML=ENU=Pickup date (Converted) }
    { 108 ;   ;Net Charges (Converted);Decimal    ;CaptionML=ENU=Net Charges (Converted);
                                                   BlankZero=Yes }
    { 109 ;   ;Incentive (Converted);Decimal      ;CaptionML=ENU=Incentive (Converted);
                                                   BlankZero=Yes }
    { 110 ;   ;Gross Charge (Converted);Decimal   ;CaptionML=ENU=Gross Charge (Converted);
                                                   BlankZero=Yes }
    { 121 ;   ;Package Found       ;Boolean       ;CaptionML=ENU=Package Found }
  }
  KEYS
  {
    {    ;Shipping Bill No.,Line No.              ;Clustered=Yes }
    {    ;Tracking Number                          }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'ENU=must be a decimal value.';
      Text002@1002 : TextConst 'ENU=cannot be a decimal value.';

    PROCEDURE ConvertImportedFields@1();
    BEGIN
      IF NOT EVALUATE("Bill Date (Converted)","Bill Date") THEN
        "Bill Date (Converted)" := 0D;
      "Invoice Total Amount (Conv.)" := Text2Dec("Invoice Total Amount");
      "Quantity (Converted)" := Text2Dec(Quantity);
      "Billed Weight (Converted)" := Text2Dec("Billed Weight");
      "Actual Weight (Converted)" := Text2Dec("Actual Weight");
      "Dim Weight (Converted)" := Text2Dec("Dim Weight");
      IF NOT EVALUATE("Pickup date (Converted)","Pickup date") THEN
        "Pickup date (Converted)" := 0D;
      "Net Charges (Converted)" := Text2Dec("Net Charges");
      "Incentive (Converted)" := Text2Dec(Incentive);
      "Gross Charge (Converted)" := Text2Dec("Gross Charge");
      IF "Gross Charge (Converted)" = 0 THEN
        "Gross Charge (Converted)" := "Net Charges (Converted)" + "Incentive (Converted)";

      IF "Gross Charge" = 'Y' THEN
        FIELDERROR("Gross Charge",Text001);
      IF Text2Dec("Declared Value") <> 0 THEN
        FIELDERROR("Declared Value",Text002);
    END;

    PROCEDURE InsertShippingBillReconLine@2();
    VAR
      ShippingBillReconHeader@1240030000 : Record 14000751;
      ShippingBillReconLine@1240030001 : Record 14000752;
    BEGIN
      IF ("Net Charges (Converted)" = 0) AND ("Incentive (Converted)" = 0) THEN
        EXIT;

      ShippingBillReconHeader.GET("Shipping Bill No.");

      ShippingBillReconLine.INIT;
      ShippingBillReconLine."Shipping Bill No." := ShippingBillReconHeader."Shipping Bill No.";
      ShippingBillReconLine."Line No." := "Line No.";
      ShippingBillReconLine.VALIDATE("External Tracking No.","Tracking Number");
      IF ShippingBillReconLine."No." = '' THEN
        ShippingBillReconLine.Type := ShippingBillReconLine.Type::"Other Charges";
      ShippingBillReconLine.VALIDATE(Description,"Service Description");
      ShippingBillReconLine.VALIDATE("Amount Invoiced","Gross Charge (Converted)");
      ShippingBillReconLine.VALIDATE("Net Charge Amount","Net Charges (Converted)");
      IF "Incentive (Converted)" <> 0 THEN BEGIN
        ShippingBillReconLine.VALIDATE("Discount Invoiced","Incentive (Converted)");
        ShippingBillReconLine.VALIDATE("Incentive Amount","Incentive (Converted)");
      END;
      ShippingBillReconLine.INSERT;
    END;

    LOCAL PROCEDURE Text2Dec@3(Value@1240030000 : Text[250]) : Decimal;
    VAR
      ReturnValue@1240030001 : Decimal;
    BEGIN
      IF STRLEN(Value) = 0 THEN
        EXIT(0);

      IF NOT EVALUATE(ReturnValue,Value) THEN BEGIN
        WHILE (STRPOS('1234567890',COPYSTR(Value,1,1)) = 0) AND (STRLEN(Value) > 1) DO
          Value := COPYSTR(Value,2);
        IF NOT EVALUATE(ReturnValue,Value) THEN
          EXIT(0)
        ELSE
          EXIT(ReturnValue);
      END ELSE
        EXIT(ReturnValue);
    END;

    BEGIN
    END.
  }
}

