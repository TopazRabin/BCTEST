OBJECT Table 14002353 E.D.I. Document
{
  OBJECT-PROPERTIES
  {
    Date=02/25/19;
    Time=12:00:00 PM;
    Version List=SE0.61;
  }
  PROPERTIES
  {
    DataPerCompany=Yes;
    OnInsert=BEGIN
               "Date Changed" := TODAY;
               "User ID" := USERID;
             END;

    OnModify=BEGIN
               "Date Changed" := TODAY;
               "User ID" := USERID;
             END;

    OnDelete=VAR
               EDIXMLStructure@1240020000 : Record 14099300;
             BEGIN
               EDISegment.SETRANGE("Trade Partner No.","Trade Partner No.");
               EDISegment.SETRANGE("Navision Document","Navision Document");
               EDISegment.SETRANGE("EDI Document No.","EDI Document No.");
               EDISegment.SETRANGE(Version,Version);
               EDISegment.SETRANGE(Type,Type);
               EDISegment.DELETEALL(TRUE);

               IF "XML Document" THEN BEGIN
                 EDIXMLStructure.RESET;
                 EDIXMLStructure.SETRANGE("Trade Partner","Trade Partner No.");
                 EDIXMLStructure.SETRANGE("Navision Document","Navision Document");
                 EDIXMLStructure.SETRANGE("EDI Document No.","EDI Document No.");
                 EDIXMLStructure.SETRANGE(Version,Version);
                 EDIXMLStructure.SETRANGE("Document Type",Type);
                 EDIXMLStructure.DELETEALL;
               END;
             END;

    IncludeDataInDesc=No;
    CaptionML=ENU=E.D.I. Document;
    LookupPageID=Page14002358;
    DrillDownPageID=Page14002358;
  }
  FIELDS
  {
    { 1   ;   ;Trade Partner No.   ;Code20        ;TableRelation="E.D.I. Trade Partner".No.;
                                                   CaptionML=ENU=Trade Partner No. }
    { 2   ;   ;Navision Document   ;Code10        ;TableRelation="E.D.I. Navision Available Doc.".Document;
                                                   OnValidate=BEGIN
                                                                NavisionAvailableDoc.GET("Navision Document");
                                                                Type := NavisionAvailableDoc.Type;
                                                                "GS Funct. Identifier Code" := NavisionAvailableDoc."GS Funct. Identifier Code";
                                                                IF "Navision Document" = 'I_ACKONLY' THEN
                                                                  "Funct. Ack. Required" := TRUE
                                                                ELSE
                                                                  "Funct. Ack. Required" := FALSE;
                                                              END;

                                                   CaptionML=ENU=Navision Document }
    { 3   ;   ;EDI Document No.    ;Code30        ;CaptionML=ENU=EDI Document No. }
    { 4   ;   ;Version             ;Code12        ;CaptionML=ENU=Version }
    { 5   ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=" ,Import,Export";
                                                   OptionString=[ ,Import,Export];
                                                   Editable=No }
    { 11  ;   ;EDI Standard        ;Code10        ;OnValidate=BEGIN
                                                                IF "EDI Standard" = '' THEN
                                                                  "Decimal EDI Standard" := 0
                                                                ELSE BEGIN
                                                                  EVALUATE(Char,"EDI Standard");
                                                                  "Decimal EDI Standard":= Char;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=EDI Standard }
    { 12  ;   ;Document Name       ;Text40        ;CaptionML=ENU=Document Name }
    { 13  ;   ;Status              ;Option        ;CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=Test,Production,Inactive;
                                                   OptionString=Test,Production,Inactive }
    { 14  ;   ;Interface File      ;Text250       ;OnValidate=VAR
                                                                FileType@1240020000 : Text[30];
                                                              BEGIN
                                                                IF "EDI Template Code" <> '' THEN BEGIN
                                                                  EDITemplate.GET("EDI Template Code");
                                                                  FileType := FORMAT(EDITemplate."Interface File Type");
                                                                  IF (EDITemplate."Interface File Type" = EDITemplate."Interface File Type"::"X12 Delimited") OR
                                                                     (EDITemplate."Interface File Type" = EDITemplate."Interface File Type"::cXML) OR
                                                                     (EDITemplate."Interface File Type" = EDITemplate."Interface File Type"::XML)
                                                                  THEN BEGIN
                                                                    IF ("Interface File" <> '') AND
                                                                       ((STRPOS("Interface File",'.') <> 0) OR
                                                                        (STRPOS("Interface File",'\') <> 0) OR
                                                                        (STRPOS("Interface File",':') <> 0))
                                                                    THEN
                                                                      ERROR(Text001,
                                                                            EDITemplate.TABLENAME,EDITemplate.FIELDNAME("Interface File Type"),
                                                                            FileType);
                                                                  END;
                                                                  IF (EDITemplate."Interface File Type" = EDITemplate."Interface File Type"::None) AND
                                                                     (EDITemplate."File Format" = EDITemplate."File Format"::XML)
                                                                  THEN BEGIN
                                                                    IF ("Interface File" <> '') AND
                                                                       ((STRPOS("Interface File",'.') = 0) OR
                                                                        (STRPOS("Interface File",'\') = 0))
                                                                    THEN
                                                                      ERROR(Text002,
                                                                            EDITemplate.TABLENAME,EDITemplate.FIELDNAME("Interface File Type"),
                                                                            FileType);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Interface File }
    { 15  ;   ;Export ISA Control No.;Code30      ;CaptionML=ENU=Export ISA Control No. }
    { 16  ;   ;Export GS Control No.;Code30       ;CaptionML=ENU=Export GS Control No. }
    { 17  ;   ;Export ST Control No.;Code30       ;CaptionML=ENU=Export ST Control No. }
    { 18  ;   ;EDI Template Code   ;Code10        ;TableRelation="E.D.I. Template";
                                                   OnValidate=BEGIN
                                                                IF "EDI Template Code" <> '' THEN
                                                                  VALIDATE("Interface File");
                                                              END;

                                                   CaptionML=ENU=EDI Template Code }
    { 19  ;   ;Export Zero Qty. Lines;Boolean     ;CaptionML=ENU=Export Zero Qty. Lines }
    { 20  ;   ;Export G/L Account Lines;Boolean   ;CaptionML=ENU=Export G/L Account Lines }
    { 21  ;   ;Export Resource Lines;Boolean      ;CaptionML=ENU=Export Resource Lines }
    { 22  ;   ;GS Funct. Identifier Code;Code2    ;CaptionML=ENU=GS Funct. Identifier Code }
    { 23  ;   ;ISA T.P. ID Qualifier Override;Code2;
                                                   CaptionML=ENU=ISA T.P. ID Qualifier Override }
    { 24  ;   ;ISA Trade Partner No. Override;Code20;
                                                   CaptionML=ENU=ISA Trade Partner No. Override }
    { 25  ;   ;GS Trade Partner No. Override;Code20;
                                                   CaptionML=ENU=GS Trade Partner No. Override }
    { 26  ;   ;Funct. Ack. Required;Boolean       ;CaptionML=ENU=Funct. Ack. Required }
    { 27  ;   ;Documents Found     ;Integer       ;CaptionML=ENU=Documents Found }
    { 28  ;   ;Documents Exported  ;Integer       ;CaptionML=ENU=Documents Exported }
    { 29  ;   ;Element Mapping Error;Boolean      ;FieldClass=FlowField;
                                                   CalcFormula=Exist("E.D.I. Element" WHERE (Trade Partner No.=FIELD(Trade Partner No.),
                                                                                             Navision Document=FIELD(Navision Document),
                                                                                             EDI Document No.=FIELD(EDI Document No.),
                                                                                             Version=FIELD(Version),
                                                                                             Element Mapping Error=CONST(Yes)));
                                                   CaptionML=ENU=Element Mapping Error;
                                                   Editable=No }
    { 30  ;   ;Conditional Mapping Error;Boolean  ;FieldClass=FlowField;
                                                   CalcFormula=Exist("E.D.I. Conditional" WHERE (Trade Partner No.=FIELD(Trade Partner No.),
                                                                                                 Navision Document=FIELD(Navision Document),
                                                                                                 EDI Document No.=FIELD(EDI Document No.),
                                                                                                 Version=FIELD(Version),
                                                                                                 Conditional Mapping Error=CONST(Yes)));
                                                   CaptionML=ENU=Conditional Mapping Error;
                                                   Editable=No }
    { 31  ;   ;Pre. 4010 Date Format;Boolean      ;CaptionML=ENU=Pre. 4010 Date Format }
    { 32  ;   ;ISA Funct. Ack. Requested;Code1    ;CaptionML=ENU=ISA Funct. Ack. Requested }
    { 33  ;   ;Export Item Charge Lines;Boolean   ;CaptionML=ENU=Export Item Charge Lines }
    { 40  ;   ;UNB Syntax Identifier;Code4        ;CaptionML=ENU=UNB Syntax Identifier }
    { 41  ;   ;UNB Version Number  ;Code1         ;CaptionML=ENU=UNB Version Number }
    { 42  ;   ;UNB Sender Qualifier;Code4         ;CaptionML=ENU=UNB Sender Qualifier }
    { 43  ;   ;UNB Recipient Qualifier;Code4      ;CaptionML=ENU=UNB Recipient Qualifier }
    { 50  ;   ;UNH Message Version Number;Code3   ;CaptionML=ENU=UNH Message Version Number }
    { 51  ;   ;UNH Message Release Number;Code3   ;CaptionML=ENU=UNH Message Release Number }
    { 52  ;   ;UNH Controlling Agency;Code2       ;CaptionML=ENU=UNH Controlling Agency }
    { 53  ;   ;Org. Rel. Customer Template;Code20 ;TableRelation=Customer.No.;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Navision Document",'I_SLSCUS');
                                                                IF "Org. Rel. Customer Template" <> xRec."Org. Rel. Customer Template" THEN
                                                                  "Org. Rel. Ship-To Template" := '';
                                                              END;

                                                   CaptionML=ENU=Org. Rel. Customer Template }
    { 54  ;   ;Org. Rel. Ship-To Template;Code10  ;TableRelation="Ship-to Address".Code WHERE (Customer No.=FIELD(Org. Rel. Customer Template));
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Navision Document",'I_SLSCUS');
                                                              END;

                                                   CaptionML=ENU=Org. Rel. Ship-To Template }
    { 55  ;   ;Shipment Release    ;Boolean       ;CaptionML=ENU=Shipment Release }
    { 56  ;   ;Trade Ptnr. Import Override;Code20 ;TableRelation="E.D.I. Trade Partner".No.;
                                                   CaptionML=ENU=Trade Ptnr. Import Override }
    { 57  ;   ;UNH Assoc. Assigned Code;Code6     ;CaptionML=ENU=UNH Assoc. Assigned Code }
    { 58  ;   ;Enable Bulk Draw Down;Boolean      ;CaptionML=ENU=Enable Bulk Draw Down }
    { 59  ;   ;BEG 03 Char. to Match;Integer      ;CaptionML=ENU=BEG 03 Char. to Match;
                                                   BlankZero=Yes }
    { 60  ;   ;BEG 02 Blanket Order Codes;Code10  ;CaptionML=ENU=BEG 02 Blanket Order Codes }
    { 61  ;   ;BEG 02 Release Order Codes;Code10  ;CaptionML=ENU=BEG 02 Release Order Codes }
    { 62  ;   ;BEG 02 Sales Order Codes;Code10    ;CaptionML=ENU=BEG 02 Sales Order Codes }
    { 63  ;   ;BEG 02 No Code as Sales Order;Boolean;
                                                   CaptionML=ENU=BEG 02 No Code as Sales Order }
    { 64  ;   ;Packaged Map        ;Boolean       ;CaptionML=ENU=Packaged Map }
    { 65  ;   ;Packaged Map Object ;BLOB          ;CaptionML=ENU=Packaged Map Object }
    { 66  ;   ;Enable Forecast and Release;Boolean;CaptionML=ENU=Enable Forecast and Release }
    { 67  ;   ;Enable PO Change    ;Boolean       ;CaptionML=ENU=Enable PO Change }
    { 68  ;   ;Delete Quote After Rel. Create;Boolean;
                                                   CaptionML=ENU=Delete Quote After Rel. Create }
    { 70  ;   ;Delete Quote After Change;Boolean  ;CaptionML=ENU=Delete Quote After Change }
    { 71  ;   ;Release No. Char. to Match;Integer ;CaptionML=ENU=Release No. Char. to Match }
    { 72  ;   ;Forecast Period     ;Option        ;CaptionML=ENU=Forecast Period;
                                                   OptionCaptionML=ENU=" ,Weekly,Monthly";
                                                   OptionString=[ ,Weekly,Monthly] }
    { 73  ;   ;Match Release Trade Partner;Boolean;CaptionML=ENU=Match Release Trade Partner }
    { 74  ;   ;Match Release Sell-to Code;Boolean ;CaptionML=ENU=Match Release Sell-to Code }
    { 75  ;   ;Match Release Ship-to Code;Boolean ;CaptionML=ENU=Match Release Ship-to Code }
    { 76  ;   ;Tie Release to Forecast;Boolean    ;CaptionML=ENU=Tie Release to Forecast }
    { 77  ;   ;Match Release P.O. No.;Boolean     ;CaptionML=ENU=Match Release P.O. No. }
    { 78  ;   ;Forecast Qty. Cumulative;Boolean   ;CaptionML=ENU=Forecast Qty. Cumulative }
    { 79  ;   ;Release Qty. Cumulative;Boolean    ;CaptionML=ENU=Release Qty. Cumulative }
    { 80  ;   ;Inv. Line Data Not Summarized;Boolean;
                                                   CaptionML=ENU=Inv. Line Data Not Summarized }
    { 81  ;   ;Match Release Item No.;Boolean     ;CaptionML=ENU=Match Release Item No. }
    { 82  ;   ;UNB Application Ref. Override;Code14;
                                                   CaptionML=ENU=UNB Application Ref. Override }
    { 83  ;   ;Create Release from Forecast;Boolean;
                                                   CaptionML=ENU=Create Release from Forecast }
    { 84  ;   ;GS Resp. Agency Code Override;Code1;CaptionML=ENU=GS Resp. Agency Code Override }
    { 85  ;   ;PO Change Code when Blank;Code2    ;OnValidate=BEGIN
                                                                IF "PO Change Code when Blank" <> '' THEN BEGIN
                                                                 IF "Enable Forecast and Release" THEN BEGIN
                                                                    IF ("PO Change Code when Blank" <> '4') AND
                                                                       ("PO Change Code when Blank" <> '5') AND
                                                                       ("PO Change Code when Blank" <> '04') AND
                                                                       ("PO Change Code when Blank" <> '05')
                                                                    THEN
                                                                      ERROR(
                                                                        Text012 +
                                                                        '\' +
                                                                        '4\' +
                                                                        '5\' +
                                                                        '04\' +
                                                                        '05\');
                                                                  END ELSE BEGIN
                                                                    IF ("PO Change Code when Blank" <> '1') AND
                                                                       ("PO Change Code when Blank" <> '2') AND
                                                                       ("PO Change Code when Blank" <> '3') AND
                                                                       ("PO Change Code when Blank" <> '4') AND
                                                                       ("PO Change Code when Blank" <> '5') AND
                                                                       ("PO Change Code when Blank" <> 'R') AND
                                                                       ("PO Change Code when Blank" <> '01') AND
                                                                       ("PO Change Code when Blank" <> '02') AND
                                                                       ("PO Change Code when Blank" <> '03') AND
                                                                       ("PO Change Code when Blank" <> '04') AND
                                                                       ("PO Change Code when Blank" <> '05') AND
                                                                       ("PO Change Code when Blank" <> '17') AND
                                                                       ("PO Change Code when Blank" <> '20') AND
                                                                       ("PO Change Code when Blank" <> '21') AND
                                                                       ("PO Change Code when Blank" <> '36')
                                                                    THEN
                                                                      ERROR(
                                                                        Text013 +
                                                                        '\' +
                                                                        '1,' +
                                                                        '2,' +
                                                                        '3,' +
                                                                        '4,' +
                                                                        '5,' +
                                                                        'R,' +
                                                                        '01,' +
                                                                        '02,' +
                                                                        '03,' +
                                                                        '04,' +
                                                                        '05,' +
                                                                        '17,' +
                                                                        '20,' +
                                                                        '21,' +
                                                                        '36');
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=PO Change Code when Blank }
    { 86  ;   ;Forecast Date Formula;DateFormula  ;CaptionML=ENU=Date Formula }
    { 87  ;   ;Enable Cumulative Rel. Process;Boolean;
                                                   CaptionML=ENU=Enable Cumulative Rel. Process }
    { 88  ;   ;Delete Forecast Quote;Boolean      ;CaptionML=ENU=Delete Forecast Quote }
    { 89  ;   ;Do Not Update Released Order;Boolean;
                                                   CaptionML=ENU=Do Not Update Released Order }
    { 91  ;   ;Interchange Version Override;Code5 ;CaptionML=ENU=Interchange Version Override }
    { 92  ;   ;Delete Item Action  ;Option        ;CaptionML=ENU=Delete Item Action;
                                                   OptionCaptionML=ENU=Zero Quantity,Delete Item;
                                                   OptionString=Zero Quantity,Delete Item }
    { 93  ;   ;Auto. Create Item Filter;Option    ;CaptionML=ENU=Auto. Create Item Filter;
                                                   OptionCaptionML=ENU=" ,EDI Item Cross Reference,Cross-Reference Type No. (Customer),Cross-Reference Type No. (Blank)";
                                                   OptionString=[ ,EDI Item Cross Reference,Cross-Reference Type No. (Customer),Cross-Reference Type No. (Blank)] }
    { 94  ;   ;Auto. Reopen on Recreate;Boolean   ;CaptionML=ENU=Auto. Reopen on Recreate }
    { 95  ;   ;Reuse Existing InventoryAdvice;Boolean;
                                                   CaptionML=ENU=Reuse Existing Inventory Advice }
    { 96  ;   ;Re-create Confirmation Message;Boolean;
                                                   CaptionML=ENU=Re-create Confirmation Message }
    { 97  ;   ;Re-send Confirmation Message;Boolean;
                                                   CaptionML=ENU=Re-send Confirmation Message }
    { 98  ;   ;Auto. Reopen on Send;Boolean       ;CaptionML=ENU=Auto. Reopen on Send }
    { 99  ;   ;Warehouse Ship Order Required;Boolean;
                                                   CaptionML=ENU=Warehouse Ship Order Required }
    { 100 ;   ;Close Open Sales Order;Boolean     ;CaptionML=ENU=Close Open Sales Order }
    { 101 ;   ;Close Shipped Blanket Line;Boolean ;CaptionML=ENU=Close Shipped Blanket Line }
    { 102 ;   ;Close Open Order Action;Option     ;CaptionML=ENU=Close Open Order Action;
                                                   OptionCaptionML=ENU=Zero Quantity,Delete Order;
                                                   OptionString=Zero Quantity,Delete Order }
    { 103 ;   ;Reopen Released Sales Order;Boolean;CaptionML=ENU=Reopen Released Sales Order }
    { 105 ;   ;Outstanding Quantity Received;Boolean;
                                                   CaptionML=ENU=Outstanding Quantity Received }
    { 106 ;   ;Close Order Request Cancelled;Boolean;
                                                   CaptionML=ENU=Close Order Request Cancelled }
    { 107 ;   ;Release Qty. Update Cancelled;Boolean;
                                                   CaptionML=ENU=Release Qty. Update Cancelled }
    { 108 ;   ;Rel. Qty More Than Outstanding;Option;
                                                   CaptionML=ENU=Rel. Qty. More Than Outstanding;
                                                   OptionCaptionML=ENU=" ,Allow Update (Outstanding Qty.),Allow Update (Release Qty.),Alert Only";
                                                   OptionString=[ ,Allow Update (Outstanding Qty.),Allow Update (Release Qty.),Alert Only] }
    { 110 ;   ;ISA Auth. Info. Qual. Override;Code2;
                                                   OnValidate=BEGIN
                                                                IF Rec."ISA Auth. Info. Qual. Override" <> '' THEN
                                                                  IF STRLEN("ISA Auth. Info. Qual. Override") <> 2 THEN
                                                                    ERROR(Text009);
                                                              END;

                                                   CaptionML=ENU=ISA Auth. Info. Qual. Override }
    { 111 ;   ;ISA Auth. Information Override;Code10;
                                                   CaptionML=ENU=ISA Auth. Information Override }
    { 112 ;   ;Security Info. Qual. Override;Code2;OnValidate=BEGIN
                                                                IF Rec."Security Info. Qual. Override" <> '' THEN
                                                                  IF STRLEN("Security Info. Qual. Override") <> 2 THEN
                                                                    ERROR(Text009);
                                                              END;

                                                   CaptionML=ENU=ISA Security Info. Qual. Override }
    { 113 ;   ;ISA Security Info. Override;Code10 ;CaptionML=ENU=ISA Security Info. Override }
    { 115 ;   ;Summarize Ship Advice Data;Boolean ;CaptionML=ENU=Summarize Ship Advice Data }
    { 117 ;   ;UNB Recipient's Reference;Code14   ;CaptionML=ENU=UNB Recipient's Reference }
    { 118 ;   ;UNB Recipient's Ref. Qualifier;Code2;
                                                   CaptionML=ENU=UNB Recipient's Ref. Qualifier }
    { 119 ;   ;UNB Processing Priority Code;Code1 ;CaptionML=ENU=UNB Processing Priority Code }
    { 120 ;   ;Include Rel. ASN Cumulative;Boolean;CaptionML=ENU=Include Rel. ASN Cumulative }
    { 121 ;   ;NAV Invoice Discount Code;Code20   ;CaptionML=ENU=NAV Invoice Discount Code }
    { 122 ;   ;NAV Invoice Discount Sequence;Code10;
                                                   CaptionML=ENU=NAV Invoice Discount Sequence }
    { 123 ;   ;Delete Char from Text Field;Text30 ;CaptionML=ENU=Delete Char from Text Field }
    { 124 ;   ;Order Shipped Complete Code;Code10 ;CaptionML=ENU=Order Shipped Complete Status Code }
    { 125 ;   ;Item Shipped Complete Code;Code10  ;CaptionML=ENU=Item Shipped Complete Status Code }
    { 126 ;   ;Item Shipped Status Code;Code10    ;CaptionML=ENU=Item Shipped Status Code }
    { 127 ;   ;Order Shipped Status Code;Code10   ;CaptionML=ENU=Order Shipped Status Code }
    { 128 ;   ;Order Backorder Status Code;Code10 ;CaptionML=ENU=Order Backorder Status Code }
    { 129 ;   ;Item Backorder Status Code;Code10  ;CaptionML=ENU=Item Backorder Status Code }
    { 130 ;   ;Delete Leading Blank Spaces;Boolean;CaptionML=ENU=Delete Leading Blank Spaces }
    { 132 ;   ;Disable Manual Send Export;Boolean ;CaptionML=ENU=Disable Manual Send Export }
    { 133 ;   ;Enable Partial Invoice Check;Boolean;
                                                   CaptionML=ENU=Enable Partial Invoice Check }
    { 134 ;   ;Ship-to Store Override;Boolean     ;CaptionML=ENU=Ship-to Store Override }
    { 136 ;   ;Available Quantity by Location;Boolean;
                                                   CaptionML=ENU=Available Quantity by Location }
    { 138 ;   ;Receipt Quantity by Location;Boolean;
                                                   CaptionML=ENU=Receipt Quantity by Location }
    { 139 ;   ;Available Quantity %;Decimal       ;CaptionML=ENU=Available Quantity %;
                                                   DecimalPlaces=0:5 }
    { 140 ;   ;Receipt Quantity %  ;Decimal       ;CaptionML=ENU=Receipt Quantity %;
                                                   DecimalPlaces=0:5 }
    { 141 ;   ;Quantity on Sales Order;Boolean    ;CaptionML=ENU=Quantity on Sales Order }
    { 143 ;   ;Quantity on Component Lines;Boolean;CaptionML=ENU=Quantity on Component Lines }
    { 144 ;   ;Quantity on Service Order;Boolean  ;CaptionML=ENU=Quantity on Service Order }
    { 145 ;   ;Item Tracking Required;Boolean     ;CaptionML=ENU=Item Tracking Required }
    { 148 ;   ;Funct. Ack. Reconcile T.P.;Code20  ;TableRelation="E.D.I. Trade Partner";
                                                   CaptionML=ENU=Funct. Ack. Reconcile Trade Partner }
    { 151 ;   ;Standalone Releases Received;Boolean;
                                                   CaptionML=ENU=Standalone Releases Received }
    { 154 ;   ;Export Item Tracking;Boolean       ;CaptionML=ENU=Export Item Tracking }
    { 159 ;   ;Release Forecast Period;Option     ;CaptionML=ENU=Release Forecast Period;
                                                   OptionCaptionML=ENU=Daily,Weekly;
                                                   OptionString=Daily,Weekly }
    { 163 ;   ;Location Override   ;Code250       ;TableRelation=Location;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Location Override }
    { 165 ;   ;Export Zero at or Below Value;Integer;
                                                   CaptionML=ENU=Export Zero at or Below Value }
    { 168 ;   ;Damaged Location    ;Code10        ;TableRelation=Location;
                                                   CaptionML=ENU=Damaged Location }
    { 169 ;   ;On Hold Location    ;Code10        ;TableRelation=Location;
                                                   CaptionML=ENU=On Hold Location }
    { 170 ;   ;Funct. Ack. Override Req.;Boolean  ;OnValidate=BEGIN
                                                                IF xRec."Funct. Ack. Override Req." = FALSE THEN BEGIN
                                                                  EDITradePartner.GET("Trade Partner No.");
                                                                  WITH EDITradePartner DO BEGIN
                                                                    IF ("ISA Trade Ptnr. No." = '') OR
                                                                       ("ISA My Trade Ptnr. No." = '') OR
                                                                       ("GS Trade Ptnr. No." = '') OR
                                                                       ("GS My Trade Ptnr. No." = '')
                                                                    THEN
                                                                      ERROR(Text010);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Funct. Ack. Reconcile Override Req. }
    { 174 ;   ;Inventory Customer  ;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Inventory Customer }
    { 175 ;   ;Decimal EDI Standard;Integer       ;OnValidate=BEGIN
                                                                "EDI Standard" := '';
                                                              END;

                                                   CaptionML=ENU=Decimal EDI Standard }
    { 176 ;   ;Exclude Blanket P.O. Number;Text100;CaptionML=ENU=Exclude Blanket P.O. Number }
    { 178 ;   ;UNB Recipient ID Override;Code35   ;CaptionML=ENU=UNB Recipient ID Override }
    { 179 ;   ;Same Day Ship Time  ;Time          ;CaptionML=ENU=Same Day Ship Time }
    { 180 ;   ;Journal Template Name;Code10       ;TableRelation="Gen. Journal Template";
                                                   OnValidate=VAR
                                                                Text001@1240020000 : TextConst 'ENU=Journal Template Name %1 is not supported with this process. Possible selections are %2 or %3.';
                                                              BEGIN
                                                                IF ("Journal Template Name" <> 'CASHRCPT') AND
                                                                   ("Journal Template Name" <> 'DEPOSITS') AND
                                                                   ("Journal Template Name" <> '')
                                                                THEN
                                                                  ERROR(Text001,"Journal Template Name",'CASHRCPT','DEPOSITS');
                                                                IF xRec."Journal Template Name"  <> Rec."Journal Template Name" THEN
                                                                  "Gen. Journal Batch Name" := '';
                                                              END;

                                                   CaptionML=ENU=Journal Template Name }
    { 181 ;   ;Gen. Journal Batch Name;Code10     ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(Journal Template Name));
                                                   CaptionML=ENU=Gen. Journal Batch Name }
    { 182 ;   ;Payer Account Type  ;Option        ;CaptionML=ENU=Payer Account Type;
                                                   OptionCaptionML=ENU=Customer,Vendor;
                                                   OptionString=Customer,Vendor }
    { 183 ;   ;Export Reserved Quantity Lines;Boolean;
                                                   CaptionML=ENU=Export Reserved Quantity Lines }
    { 184 ;   ;Apply-to  Doc. No. Format Rule;Option;
                                                   CaptionML=ENU=Apply-to  Doc. No. Format Rule;
                                                   OptionCaptionML=ENU=" ,AlphaNumeric,Numeric";
                                                   OptionString=[ ,AlphaNumeric,Numeric] }
    { 185 ;   ;Summarize G/L Account Entry;Boolean;CaptionML=ENU=Summarize G/L Account Entry }
    { 187 ;   ;Set Applies-to Doc. No.;Boolean    ;OnValidate=BEGIN
                                                                IF ("Balance Account is G/L" <> '') AND ("Set Applies-to Doc. No.") THEN
                                                                  ERROR(Text014);
                                                              END;

                                                   CaptionML=ENU=Set Applies-to Doc. No. }
    { 188 ;   ;Balance Account is G/L;Code40      ;TableRelation="G/L Account";
                                                   CaptionML=ENU=Balance Account is G/L }
    { 200 ;   ;Date Changed        ;Date          ;CaptionML=ENU=Date Changed }
    { 201 ;   ;User ID             ;Code50        ;CaptionML=ENU=User ID }
    { 202 ;   ;UNB Acknowledgement Request;Code1  ;CaptionML=ENU=UNB Acknowledgement Request }
    { 203 ;   ;UNB Comm. Agreement ID;Code35      ;CaptionML=ENU=UNB Comm. Agreement ID }
    { 204 ;   ;UNB Test Indicator  ;Code1         ;CaptionML=ENU=UNB Test Indicator }
    { 205 ;   ;Blank UNB Application Ref.;Boolean ;CaptionML=ENU=Blank UNB Application Reference }
    { 206 ;   ;Bypass Package ID Length Check;Boolean;
                                                   CaptionML=ENU=Bypass Package ID Length Check }
    { 207 ;   ;Package ID Length Override;Integer ;CaptionML=ENU=Package ID Length Override }
    { 208 ;   ;Bypass Package ID Reuse Check;Boolean;
                                                   CaptionML=ENU=Bypass Package ID Reuse Check }
    { 209 ;   ;Location Relationship ID;Code10    ;CaptionML=ENU=Location Relationship ID }
    { 210 ;   ;Summarize Receive Advice Data;Boolean;
                                                   CaptionML=ENU=Summarize Receive Advice Data }
    { 211 ;   ;Match Forecast Release No.;Boolean ;CaptionML=ENU=Match Forecast Release No. }
    { 212 ;   ;Replace Forecast    ;Boolean       ;CaptionML=ENU=Replace Forecast }
    { 213 ;   ;Generic Document Received;Boolean  ;CaptionML=ENU=Generic Document Received }
    { 228 ;   ;Purch. Inv. Default G/L Acct.;Code10;
                                                   TableRelation="G/L Account";
                                                   CaptionML=ENU=Purch. Inv. Default G/L Acct. }
    { 229 ;   ;Item Journal Batch Name;Code10     ;TableRelation="Item Journal Batch".Name WHERE (Journal Template Name=FIELD(Item Journal Template Name));
                                                   CaptionML=ENU=Item Journal Batch Name }
    { 230 ;   ;Item Journal Template Name;Code10  ;TableRelation="Item Journal Template";
                                                   CaptionML=ENU=Item Journal Template Name }
    { 236 ;   ;Pre-Eval. w. Blank NAV Ship-to;Boolean;
                                                   CaptionML=ENU=Pre-Eval. w. Blank NAV Ship-to }
    { 238 ;   ;Line Data Not Summarized;Boolean   ;CaptionML=ENU=Line Data Not Summarized }
    { 239 ;   ;Bypass Zero Quantity Forecast;Boolean;
                                                   CaptionML=ENU=Bypass Zero Quantity Forecast }
    { 240 ;   ;Routing Req. by Ext. Doc. No.;Boolean;
                                                   CaptionML=ENU=Routing Request by External Document No. }
    { 241 ;   ;Do Not Update Rte ShiptoCode;Code30;CaptionML=ENU=Do Not Update Routing Ship-to Code(s) }
    { 243 ;   ;Auto. Release Document;Boolean     ;CaptionML=ENU=Auto. Release Document }
    { 244 ;   ;Expected Receipt Date Formula;DateFormula;
                                                   CaptionML=ENU=Expected Receipt Date Formula }
    { 245 ;   ;Price Catalog Version No.;Code15   ;CaptionML=ENU=Price Catalog Version No. }
    { 246 ;   ;Status Document by Source Doc.;Boolean;
                                                   CaptionML=ENU=Create Status Document by Source Doc. No. }
    { 247 ;   ;Zero Sales Line Qty. On Cancel;Boolean;
                                                   CaptionML=ENU=Zero Sales Line Qty. On Cancellation }
    { 250 ;   ;File Name Template  ;Code30        ;OnValidate=BEGIN
                                                                IF "File Name Template" <> '' THEN BEGIN
                                                                  EDIFileNameTemplate.RESET;
                                                                  EDIFileNameTemplate.SETRANGE(Code,"File Name Template");
                                                                  EDIFileNameTemplate.SETFILTER("Trade Partner",'%1|%2','',"Trade Partner No.");
                                                                  IF NOT EDIFileNameTemplate.FIND('-') THEN
                                                                    ERROR(Text011,"File Name Template")
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              "File Name Template" := LookUpNameTemplate;
                                                            END;

                                                   CaptionML=ENU=File Name Template }
    { 251 ;   ;Base Line Count on Segment;Code15  ;CaptionML=ENU=Base Line Count on Segment }
    { 252 ;   ;Single Date Release ;Boolean       ;CaptionML=ENU=Single Date Release }
    { 253 ;   ;PO Change Process Option;Option    ;CaptionML=ENU=PO Change Process Option;
                                                   OptionCaptionML=ENU=Process On Receipt,Quote Only;
                                                   OptionString=Process On Receipt,Quote Only }
    { 254 ;   ;Archive Sales Order ;Boolean       ;CaptionML=ENU=Archive Sales Document }
    { 255 ;   ;Override Map        ;Boolean       ;OnValidate=BEGIN
                                                                CASE "Navision Document" OF
                                                                  'E_SLSASN':
                                                                    IF "Override Map" = FALSE THEN
                                                                      VALIDATE("Override ASN Type","Override ASN Type"::" ");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Override Map }
    { 256 ;   ;Process Change as Replacement;Boolean;
                                                   CaptionML=ENU=Process Change as Replacement }
    { 257 ;   ;Override ASN Type   ;Option        ;OnValidate=BEGIN
                                                                CASE "Navision Document" OF
                                                                  'E_SLSASN':
                                                                    IF "Override ASN Type" <> "Override ASN Type"::" " THEN
                                                                      TESTFIELD("Override Map");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Override ASN Type;
                                                   OptionCaptionML=ENU=" ,Duplicate Item,Duplicate Item-Multiple Item Package,DC Order,Special Order,,,,,,,,Custom 1,Custom 2,Custom 3,Custom 4";
                                                   OptionString=[ ,Duplicate Item,Duplicate Item-Multiple Item Package,DC Order,Special Order,,,,,,,,Custom 1,Custom 2,Custom 3,Custom 4] }
    { 258 ;   ;Retain EDI Value on Revalidate;Boolean;
                                                   CaptionML=ENU=Retain EDI Value on Revalidate }
    { 259 ;   ;Consolidated SDQ Invoice;Boolean   ;CaptionML=ENU=Consolidated SDQ Invoice }
    { 267 ;   ;My GS Trade Partner ID Match;Boolean;
                                                   CaptionML=ENU=My GS Trade Partner ID Match }
    { 268 ;   ;Daily Release Schedule;Boolean     ;CaptionML=ENU=Daily Release Schedule }
    { 269 ;   ;Release Process Action;Option      ;CaptionML=ENU=Release Process Action;
                                                   OptionCaptionML=ENU=" ,Process On Receipt,Quote Only";
                                                   OptionString=[ ,Process On Receipt,Quote Only] }
    { 270 ;   ;Forecast Process Action;Option     ;CaptionML=ENU=Forecast Process Action;
                                                   OptionCaptionML=ENU=" ,Process On Receipt,Quote Only";
                                                   OptionString=[ ,Process On Receipt,Quote Only] }
    { 271 ;   ;Close Order Override Code;Code10   ;CaptionML=ENU=Close Order Override Code }
    { 272 ;   ;Response to Quote Required;Boolean ;CaptionML=ENU=Response to Quote Required }
    { 273 ;   ;Bypass UNB Rcpt. Ref. Element;Boolean;
                                                   CaptionML=ENU=Bypass UNB Recipient Reference Element }
    { 274 ;   ;Bypass UNB App. Ref. Element;Boolean;
                                                   CaptionML=ENU=Bypass UNB Application Reference Element }
    { 275 ;   ;Single Document File Export;Boolean;OnValidate=BEGIN
                                                                TESTFIELD(Type,Type::Export);
                                                                IF "XML Document" THEN
                                                                  TESTFIELD("Single Document File Export",TRUE);
                                                              END;

                                                   CaptionML=ENU=Single Document File Export }
    { 276 ;   ;Acknowledgement Only;Boolean       ;CaptionML=ENU=Acknowledgement Only }
    { 277 ;   ;Exclude Blocked Item;Boolean       ;CaptionML=ENU=Exclude Blocked Item }
    { 278 ;   ;POSD                ;Boolean       ;OnValidate=BEGIN
                                                                IF POSD THEN BEGIN
                                                                  TESTFIELD("EDI Document No.",'852');
                                                                END;
                                                              END;

                                                   CaptionML=ENU=POSD }
    { 300 ;   ;Doctype DTD URL     ;Text250       ;CaptionML=ENU=Doctype DTD URL }
    { 301 ;   ;XML Document        ;Boolean       ;OnValidate=BEGIN
                                                                IF xRec."XML Document" <> Rec."XML Document" THEN BEGIN
                                                                  EDISegment.RESET;
                                                                  EDISegment.SETRANGE("Trade Partner No.","Trade Partner No.");
                                                                  EDISegment.SETRANGE("Navision Document","Navision Document");
                                                                  EDISegment.SETRANGE("EDI Document No.","EDI Document No.");
                                                                  EDISegment.SETRANGE(Version,Version);
                                                                  IF EDISegment.FIND('-') THEN
                                                                    IF CONFIRM(
                                                                      Text015 +
                                                                      Text016)
                                                                  THEN BEGIN
                                                                    EDISegment.RESET;
                                                                    EDISegment.SETRANGE("Trade Partner No.","Trade Partner No.");
                                                                    EDISegment.SETRANGE("Navision Document","Navision Document");
                                                                    EDISegment.SETRANGE("EDI Document No.","EDI Document No.");
                                                                    EDISegment.SETRANGE(Version,Version);
                                                                    EDISegment.DELETEALL(TRUE);
                                                                  END ELSE
                                                                    ERROR(Text017);
                                                                END;
                                                                IF Rec."XML Document" THEN
                                                                  "Single Document File Export" := TRUE
                                                                ELSE
                                                                  "Single Document File Export" := FALSE;
                                                              END;

                                                   CaptionML=ENU=XML Document }
    { 302 ;   ;Declaration Version ;Option        ;CaptionML=ENU=Declaration Version;
                                                   OptionCaptionML=ENU=1.0;
                                                   OptionString=1.0 }
    { 303 ;   ;Declaration Encoding;Option        ;CaptionML=ENU=Declaration Encoding;
                                                   OptionCaptionML=ENU=" ,UTF-8";
                                                   OptionString=[ ,UTF-8] }
    { 304 ;   ;Doctype Name        ;Text30        ;CaptionML=ENU=Doctype Name }
    { 305 ;   ;Receiver ID Node List;Text100      ;OnValidate=BEGIN
                                                                IF "Receiver ID Node List" = '' THEN
                                                                  EXIT;
                                                                IF COPYSTR("Receiver ID Node List",1,2) <> '//' THEN
                                                                  ERROR(Text018);
                                                              END;

                                                   CaptionML=ENU=Receiver ID Node List }
    { 306 ;   ;Sender ID Node List ;Text100       ;OnValidate=BEGIN
                                                                IF "Sender ID Node List" = '' THEN
                                                                  EXIT;
                                                                IF COPYSTR("Sender ID Node List",1,2) <> '//' THEN
                                                                  ERROR(Text018);
                                                              END;

                                                   CaptionML=ENU=Sender ID Node List }
    { 307 ;   ;Receiver ID Attribute;Text40       ;CaptionML=ENU=Receiver ID Attribute }
    { 308 ;   ;Sender ID Attribute ;Text40        ;CaptionML=ENU=Sender ID Attribute }
    { 309 ;   ;Receiver ID         ;Code50        ;CaptionML=ENU=Receiver ID }
    { 310 ;   ;Sender ID           ;Code50        ;CaptionML=ENU=Sender ID }
    { 311 ;   ;Mapping Mode        ;Option        ;OnValidate=BEGIN
                                                                CASE "Mapping Mode" OF
                                                                  "Mapping Mode"::XML:
                                                                    TESTFIELD("XML Document");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Mapping Mode;
                                                   OptionCaptionML=ENU=" ,XML";
                                                   OptionString=[ ,XML] }
    { 312 ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=" ,Order,Invoice,Cr. Memo,Return Order,P.O. Change,Quote,Warehouse Ship Order";
                                                   OptionString=[ ,Order,Invoice,Cr. Memo,Return Order,P.O. Change,Quote,Warehouse Ship Order] }
    { 313 ;   ;Allow Blank Segment ID;Boolean     ;OnValidate=BEGIN
                                                                IF "Allow Blank Segment ID" THEN BEGIN
                                                                  EDITemplate.GET("EDI Template Code");
                                                                  EDITemplate.TESTFIELD("Interface File Type",EDITemplate."Interface File Type"::None);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Allow Blank Segment ID }
    { 314 ;   ;BEG 03 Copy String Position;Integer;CaptionML=ENU=BEG 03 Copy String Position;
                                                   BlankZero=Yes }
    { 315 ;   ;EDI Document No. Node List;Text100 ;OnValidate=BEGIN
                                                                IF "EDI Document No. Node List" = '' THEN
                                                                  EXIT;
                                                                IF COPYSTR("EDI Document No. Node List",1,2) <> '//' THEN
                                                                  ERROR(Text018);
                                                              END;

                                                   CaptionML=ENU=EDI Document No. Node List }
    { 316 ;   ;cXML Payload ID     ;Text100       ;CaptionML=ENU=cXML Payload ID }
    { 317 ;   ;Doctype PublicID    ;Text30        ;CaptionML=ENU=Doctype PublicID }
    { 318 ;   ;Doctype DTD Internal Subset;Text100;CaptionML=ENU=Doctype DTD Internal Subset }
    { 319 ;   ;Response ID         ;Text100       ;CaptionML=ENU=Response ID }
    { 320 ;   ;Declaration Standalone Status;Option;
                                                   CaptionML=ENU=Declaration Standalone Status;
                                                   OptionCaptionML=ENU=" ,yes,no";
                                                   OptionString=[ ,yes,no] }
    { 321 ;   ;Reference Type      ;Text10        ;CaptionML=ENU=Reference Type }
    { 322 ;   ;Namespace           ;Text200       ;CaptionML=ENU=Namespace }
    { 323 ;   ;Namespace Prefix    ;Text30        ;CaptionML=ENU=Namespace Prefix }
    { 324 ;   ;Quantity on Asm. Component;Boolean ;CaptionML=ENU=Quantity on Assembly Component }
    { 50000;  ;Topaz Division Sensitive Doc.;Boolean }
  }
  KEYS
  {
    {    ;Trade Partner No.,Navision Document,EDI Document No.,Version,Type;
                                                   Clustered=Yes }
    {    ;GS Trade Partner No. Override,Type       }
    {    ;Funct. Ack. Reconcile T.P.               }
    {    ;Receiver ID Node List,Sender ID Node List,Type }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      NavisionAvailableDoc@1240030000 : Record 14002357;
      EDIDocument@1240030006 : Record 14002353;
      EDISegment@1240030001 : Record 14002354;
      EDITemplate@1240030004 : Record 14002350;
      Text001@1001 : TextConst 'ENU=If the %1 %2 is %3 you can not specify a path or file extension for the interface file.';
      Text002@1002 : TextConst 'ENU=If the %1 %2 is %3 you must specify a path for the interface file.';
      LicenseInformation@1240030008 : Record 2000000040;
      EDITradePartner@1240020001 : Record 14002360;
      EDIFileNameTemplate@1240020004 : Record 14000373;
      EDIPackageMapIntegration@1240030005 : Codeunit 14002378;
      FileName@1240030009 : Text[250];
      LicenseNo17@1240030007 : Text[17];
      Text003@1240030010 : TextConst 'ENU=Object Imported';
      Text004@1240030011 : TextConst 'ENU=Object Not Imported';
      Text005@1240030013 : TextConst 'ENU=Object Exported';
      Text006@1240030012 : TextConst 'ENU=Blob field does not contain an object.';
      Text007@1240030015 : TextConst 'ENU=Copying Document...\';
      Text008@1240030014 : TextConst 'ENU=Record Count #1####';
      Text009@1240020000 : TextConst 'ENU=Override Code must be two characters.';
      Text010@1240020002 : TextConst 'ENU=Trade Partner Import Override fields located on the Trade Partner card under Env. Info. tab must be populated.';
      Char@1240020003 : Char;
      Text011@1240020005 : TextConst 'ENU=%1 is an invalid E.D.I. File Name Template.';
      Text012@1240020007 : TextConst 'ENU=Supported codes for Forecast and Release are:\';
      Text013@1240020006 : TextConst 'ENU=Supported codes for P.O. Change are:\';
      Text014@1240020008 : TextConst 'ENU=Set Applies-to Doc. No. cannot be true when Balance Account is G/L is enabled.';
      Text015@1240020012 : TextConst 'ENU=Segments exist for this document and will be deleted upon change of document type.\';
      Text016@1240020009 : TextConst 'ENU=Do you want to continue?';
      Text017@1240020010 : TextConst 'ENU=Request cancelled.';
      Text018@1240020011 : TextConst 'ENU=Node list must being with //';

    PROCEDURE ImportMap@1240030000();
    BEGIN
      GetLicenseNo;
      GetFileName;
      "Packaged Map Object".IMPORT(FileName);
      SetDocument;
      "Packaged Map" := TRUE;

      MODIFY;

      IF "Packaged Map Object".HASVALUE THEN
        MESSAGE(Text003)
      ELSE
        MESSAGE(Text004);
    END;

    PROCEDURE ExportMap@1240030001();
    BEGIN
      GetLicenseNo;
      GetFileName;

      IF "Packaged Map Object".HASVALUE THEN BEGIN
        "Packaged Map Object".EXPORT(FileName);
        MESSAGE(Text005);
      END ELSE
        MESSAGE(Text006);
    END;

    PROCEDURE SetDocument@1240030002();
    VAR
      EndRecord@1240030003 : Boolean;
      EndFile@1240030000 : Boolean;
      TableName@1240030001 : Text[250];
      FieldName@1240030002 : Text[250];
      FieldValue@1240030004 : Text[250];
      Text900@1240030005 : TextConst 'ENU=Table %1 Field %2 could not be parsed.';
    BEGIN
      CLEAR(EDIPackageMapIntegration);
      WHILE EndFile = FALSE DO BEGIN
        EDIPackageMapIntegration.EDILoadMap(
          "Trade Partner No.","EDI Document No.",Type,
          TableName,FieldName,FieldValue,EndRecord,EndFile);
        CASE TableName OF
          'EDIDocument':
            BEGIN
              IF EndRecord THEN
                MODIFY;
              CASE FieldName OF
                'TradePartnerNo.':
                  "Trade Partner No." := FieldValue;
                'NavisionDocument':
                  "Navision Document" := FieldValue;
                'EDIDocumentNo.':
                  "EDI Document No." := FieldValue;
                'Version':
                  Version := FieldValue;
                'Type':
                  EVALUATE(Type,FieldValue);
                'EDIStandard':
                  "EDI Standard" := FieldValue;
                'DocumentName':
                  "Document Name" := FieldValue;
                'Status':
                  EVALUATE(Status,FieldValue);
                'InterfaceFile':
                  "Interface File" := FieldValue;
                'ExportISAControlNo.':
                  "Export ISA Control No." := FieldValue;
                'ExportGSControlNo.':
                  "Export GS Control No." := FieldValue;
                'ExportSTControlNo.':
                  "Export ST Control No." := FieldValue;
                'EDITemplateCode':
                  "EDI Template Code" := FieldValue;
                'ExportZeroQty.Lines':
                  EVALUATE("Export Zero Qty. Lines",FieldValue);
                'ExportGLAccountLines':
                  EVALUATE("Export G/L Account Lines",FieldValue);
                'ExportResourceLines':
                  EVALUATE("Export Resource Lines",FieldValue);
                'GSFunct.IdentifierCode':
                  "GS Funct. Identifier Code" := FieldValue;
                'ISAT.P.IDQualifierOverride':
                  "ISA T.P. ID Qualifier Override" := FieldValue;
                'ISATradePartnerNo.Override':
                  "ISA Trade Partner No. Override" := FieldValue;
                'GSTradePartnerNo.Override':
                  "GS Trade Partner No. Override" := FieldValue;
                'Funct.Ack.Required':
                  EVALUATE("Funct. Ack. Required",FieldValue);
                'DocumentsFound':
                  EVALUATE("Documents Found",FieldValue);
                'DocumentsExported':
                  EVALUATE("Documents Exported",FieldValue);
                'Pre.4010DateFormat':
                  EVALUATE("Pre. 4010 Date Format",FieldValue);
                'ISAFunct.Ack.Requested':
                  "ISA Funct. Ack. Requested" := FieldValue;
                'ExportItemChargeLines':
                  EVALUATE("Export Item Charge Lines",FieldValue);
                'UNBSyntaxIdentifier':
                  "UNB Syntax Identifier" := FieldValue;
                'UNBVersionNumber':
                  "UNB Version Number" := FieldValue;
                'UNBSenderQualifier':
                  "UNB Sender Qualifier" := FieldValue;
                'UNBRecipientQualifier':
                  "UNB Recipient Qualifier" := FieldValue;
                'UNHMessageVersionNumber':
                  "UNH Message Version Number" := FieldValue;
                'UNHMessageReleaseNumber':
                  "UNH Message Release Number" := FieldValue;
                'UNHControllingAgency':
                  "UNH Controlling Agency" := FieldValue;
                'Org.Rel.CustomerTemplate':
                  "Org. Rel. Customer Template" := FieldValue;
                'Org.Rel.Ship-ToTemplate':
                  "Org. Rel. Ship-To Template" := FieldValue;
                'ShipmentRelease':
                  EVALUATE("Shipment Release",FieldValue);
                'TradePtnr.ImportOverride':
                  "Trade Ptnr. Import Override" := FieldValue;
                'UNHAssoc.AssignedCode':
                  "UNH Assoc. Assigned Code" := FieldValue;
                'EnableBulkDrawDown':
                  EVALUATE("Enable Bulk Draw Down",FieldValue);
                'BEG03Char.toMatch':
                  EVALUATE("BEG 03 Char. to Match",FieldValue);
                'BEG02BlanketOrderCodes':
                  "BEG 02 Blanket Order Codes" := FieldValue;
                'BEG02ReleaseOrderCodes':
                  "BEG 02 Release Order Codes" := FieldValue;
                'BEG02SalesOrderCodes':
                  "BEG 02 Sales Order Codes" := FieldValue;
                'BEG02NoCodeasSalesOrder':
                  EVALUATE("BEG 02 No Code as Sales Order",FieldValue);
                ELSE
                 ERROR(Text900,TableName,FieldName);
              END;
            END;
        END;
      END;
    END;

    PROCEDURE GetLicenseNo@1240030004();
    BEGIN
      IF LicenseNo17 = '' THEN
        IF LicenseInformation.FIND('-') THEN
          REPEAT
            IF STRPOS(LicenseInformation.Text,'License number') <> 0 THEN
              LicenseNo17 := COPYSTR(LicenseInformation.Text,STRPOS(LicenseInformation.Text,':') + 2,17);
          UNTIL (LicenseNo17 <> '') OR
                (LicenseInformation.NEXT = 0);
    END;

    PROCEDURE GetFileName@1240030005();
    BEGIN
      EDIPackageMapIntegration.EDIGetFileName(Rec,LicenseNo17);
    END;

    PROCEDURE CopyDocument@1240030006();
    VAR
      EDIElement@1240030001 : Record 14002355;
      EDIConditional@1240030000 : Record 14002363;
      NewEDIDocument@1240030011 : Record 14002353;
      NewEDISegment@1240030009 : Record 14002354;
      NewEDIElement@1240030007 : Record 14002355;
      NewEDIConditional@1240030005 : Record 14002363;
      DialogueBox@1240030004 : Dialog;
      RecordCount@1240030003 : Integer;
      Ok@1240030002 : Boolean;
    BEGIN
      EDIDocument.RESET;
      IF PAGE.RUNMODAL(PAGE::"E.D.I. Copy Document",EDIDocument) = ACTION::LookupOK THEN BEGIN
        DialogueBox.OPEN(Text007 +
                         Text008,RecordCount);
        RecordCount := 0;
        NewEDIDocument.INIT;
        NewEDIDocument.COPY(EDIDocument);
        NewEDIDocument."Trade Partner No." := "Trade Partner No.";
        NewEDIDocument.INSERT;
        RecordCount := RecordCount + 1;
        DialogueBox.UPDATE(1,RecordCount);
        EDISegment.SETRANGE(EDISegment."Trade Partner No.",EDIDocument."Trade Partner No.");
        EDISegment.SETRANGE(EDISegment."Navision Document",EDIDocument."Navision Document");
        EDISegment.SETRANGE(EDISegment."EDI Document No.",EDIDocument."EDI Document No.");
        EDISegment.SETRANGE(EDISegment.Version,EDIDocument.Version);
        EDISegment.SETRANGE(EDISegment.Type,EDIDocument.Type);
        IF EDISegment.FIND('-') THEN
          REPEAT
            NewEDISegment.INIT;
            NewEDISegment.COPY(EDISegment);
            NewEDISegment."Trade Partner No." := "Trade Partner No.";
            NewEDISegment.INSERT;
            RecordCount := RecordCount + 1;
            DialogueBox.UPDATE(1,RecordCount);
            EDIElement.SETRANGE(EDIElement."Trade Partner No.",EDIDocument."Trade Partner No.");
            EDIElement.SETRANGE(EDIElement."Navision Document",EDISegment."Navision Document");
            EDIElement.SETRANGE(EDIElement."EDI Document No.",EDISegment."EDI Document No.");
            EDIElement.SETRANGE(EDIElement.Version,EDISegment.Version);
            EDIElement.SETRANGE(EDIElement.Segment,EDISegment.Segment);
            EDIElement.SETRANGE(EDIElement.Type,EDISegment.Type);
            IF EDIElement.FIND('-') THEN
              REPEAT
                NewEDIElement.INIT;
                NewEDIElement.COPY(EDIElement);
                NewEDIElement."Trade Partner No." := "Trade Partner No.";
                Ok := NewEDIElement.INSERT;
                RecordCount := RecordCount + 1;
                DialogueBox.UPDATE(1,RecordCount);
                EDIConditional.SETRANGE(EDIConditional."Trade Partner No.",EDIDocument."Trade Partner No.");
                EDIConditional.SETRANGE(EDIConditional."Navision Document",EDISegment."Navision Document");
                EDIConditional.SETRANGE(EDIConditional."EDI Document No.",EDISegment."EDI Document No.");
                EDIConditional.SETRANGE(EDIConditional.Version,EDISegment.Version);
                EDIConditional.SETRANGE(EDIConditional.Segment,EDISegment.Segment);
                EDIConditional.SETRANGE(EDIConditional.Type,EDISegment.Type);
                EDIConditional.SETRANGE(EDIConditional.Element,EDIElement.Element);
                IF EDIConditional.FIND('-') THEN
                  REPEAT
                    NewEDIConditional.INIT;
                    NewEDIConditional.COPY(EDIConditional);
                    NewEDIConditional."Trade Partner No." := "Trade Partner No.";
                    Ok := NewEDIConditional.INSERT;
                    RecordCount := RecordCount + 1;
                    DialogueBox.UPDATE(1,RecordCount);
                  UNTIL EDIConditional.NEXT = 0;
              UNTIL EDIElement.NEXT = 0;
          UNTIL EDISegment.NEXT = 0;
          DialogueBox.CLOSE;
      END;
    END;

    PROCEDURE PrintDocumentMap@1240030003();
    BEGIN
      EDIDocument.RESET;
      EDIDocument.SETRANGE("Trade Partner No.","Trade Partner No.");
      EDIDocument.SETRANGE("Navision Document","Navision Document");
      EDIDocument.SETRANGE("EDI Document No.","EDI Document No.");
      EDIDocument.SETRANGE(Version,Version);
      EDIDocument.SETRANGE(Type,Type);
      REPORT.RUNMODAL(REPORT::"E.D.I. Document Map",TRUE,FALSE,EDIDocument);
    END;

    PROCEDURE LookUpNameTemplate@1240020000() : Code[30];
    VAR
      EDIFileNameTemplate@1240020000 : Record 14000373;
    BEGIN
      EDIFileNameTemplate.RESET;
      EDIFileNameTemplate.SETFILTER("Trade Partner",'%1|%2',"Trade Partner No.",'');
      IF PAGE.RUNMODAL(0,EDIFileNameTemplate) IN [ACTION::LookupOK,ACTION::OK] THEN
        EXIT(EDIFileNameTemplate.Code)
      ELSE
        EXIT(xRec."File Name Template");
    END;

    BEGIN
    {
      20161216 TPZEDI SDESAI - Added a new field to track Division
    }
    END.
  }
}

