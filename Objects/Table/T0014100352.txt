OBJECT Table 14100352 Shipping Agent Change
{
  OBJECT-PROPERTIES
  {
    Date=07/01/20;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=SE ToolBox 3.15;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TestUnique;
             END;

    OnModify=BEGIN
               TestUnique;
             END;

  }
  FIELDS
  {
    { 1   ;   ;Line No.            ;Integer        }
    { 11  ;   ;Description         ;Text30         }
    { 21  ;   ;Shipping Agent Code ;Code10        ;TableRelation="Shipping Agent" }
    { 22  ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method" }
    { 23  ;   ;Blank Shipment Method Code;Boolean  }
    { 24  ;   ;Filter Shipping Agent Code;Boolean  }
    { 25  ;   ;Filter Shipping Method Code;Boolean }
    { 26  ;   ;Shipping Agent Name ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Shipping Agent".Name WHERE (Code=FIELD(Shipping Agent Code)));
                                                   Editable=No }
    { 27  ;   ;Shipment Method Description;Text50 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Shipment Method".Description WHERE (Code=FIELD(Shipment Method Code)));
                                                   Editable=No }
    { 28  ;   ;Filter Blank E-Ship Agent Serv;Boolean }
    { 31  ;   ;New Shipping Agent Code;Code10     ;TableRelation="Shipping Agent" }
    { 32  ;   ;New Dom. E-Ship Agent Service;Code30;
                                                   TableRelation="E-Ship Agent Service".Code WHERE (Shipping Agent Code=FIELD(New Shipping Agent Code),
                                                                                                    World Wide Service=CONST(No)) }
    { 33  ;   ;New Int. E-Ship Agent Service;Code30;
                                                   TableRelation="E-Ship Agent Service".Code WHERE (Shipping Agent Code=FIELD(New Shipping Agent Code),
                                                                                                    World Wide Service=CONST(Yes)) }
    { 34  ;   ;New UPS CA E-Ship Agent Serv.;Code30;
                                                   TableRelation="E-Ship Agent Service".Code WHERE (Shipping Agent Code=FIELD(New Shipping Agent Code),
                                                                                                    World Wide Service=CONST(No),
                                                                                                    UPS Canadian Service=CONST(Yes),
                                                                                                    UPS Puerto Rico Service=CONST(No)) }
    { 35  ;   ;New UPS PR E-Ship Agent Serv.;Code30;
                                                   TableRelation="E-Ship Agent Service".Code WHERE (Shipping Agent Code=FIELD(New Shipping Agent Code),
                                                                                                    World Wide Service=CONST(No),
                                                                                                    UPS Canadian Service=CONST(No),
                                                                                                    UPS Puerto Rico Service=CONST(Yes)) }
    { 36  ;   ;New Residential Delivery;Boolean    }
    { 37  ;   ;New Free Freight    ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT "New Free Freight" THEN
                                                                  "New No Free Freight Lines" := FALSE;
                                                              END;
                                                               }
    { 38  ;   ;New No Free Freight Lines;Boolean  ;OnValidate=BEGIN
                                                                IF "New No Free Freight Lines" THEN
                                                                  TESTFIELD("New Free Freight");
                                                              END;
                                                               }
    { 39  ;   ;New Shipping Payment Type;Option   ;OptionString=Prepaid,Third Party,Freight Collect,Consignee }
    { 40  ;   ;New Shipping Insurance;Option      ;OptionString=[ ,Never,Always] }
    { 41  ;   ;Change Customer     ;Boolean        }
    { 42  ;   ;Change Ship-to Address;Boolean      }
    { 43  ;   ;Change Sales Header ;Boolean        }
    { 44  ;   ;Change Sales Shipment;Boolean       }
    { 45  ;   ;Change Sales Invoice;Boolean        }
    { 51  ;   ;Changed Customer    ;Boolean        }
    { 52  ;   ;Changed Ship-to Address;Boolean     }
    { 53  ;   ;Changed Sales Header;Boolean        }
    { 54  ;   ;Changed Sales Shipment;Boolean      }
    { 55  ;   ;Changed Sales Invoice;Boolean       }
    { 61  ;   ;Changed Customers   ;Integer       ;Editable=No }
    { 62  ;   ;Changed Ship-to Address's;Integer  ;Editable=No }
    { 63  ;   ;Changed Sales Headers;Integer      ;Editable=No }
    { 64  ;   ;Changed Sales Shipments;Integer    ;Editable=No }
    { 65  ;   ;Changed Sales Invoices;Integer     ;Editable=No }
  }
  KEYS
  {
    {    ;Line No.                                ;Clustered=Yes }
    {    ;Shipping Agent Code,Shipment Method Code }
    {    ;New Shipping Agent Code,New Dom. E-Ship Agent Service }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE TestUnique@1();
    VAR
      ShippingAgentChange@1240030000 : Record 14100352;
    BEGIN
      IF ("Shipping Agent Code" <> '') OR ("Shipment Method Code" <> '') THEN BEGIN
        ShippingAgentChange.RESET;
        ShippingAgentChange.SETCURRENTKEY("Shipping Agent Code","Shipment Method Code");
        ShippingAgentChange.SETRANGE("Shipping Agent Code","Shipping Agent Code");
        ShippingAgentChange.SETRANGE("Shipment Method Code","Shipment Method Code");
        ShippingAgentChange.SETFILTER("Line No.",'<>%1',"Line No.");
        IF ShippingAgentChange.FIND('-') THEN
          ERROR('Combination not unique.');
      END;
    END;

    PROCEDURE ModifyRecords@2();
    VAR
      ShippingAgent@1240030000 : Record 291;
      Country@1240030001 : Record 9;
      Customer@1240030002 : Record 18;
      Customer2@1240030003 : Record 18;
      ShipToAddress@1240030004 : Record 222;
      ShipToAddress2@1240030005 : Record 222;
      SalesHeader@1240030006 : Record 36;
      SalesHeader2@1240030007 : Record 36;
      SalesLine@1240030008 : Record 37;
      SalesShipmentHeader@1240030009 : Record 110;
      SalesShipmentHeader2@1240030010 : Record 110;
      SalesInvoiceHeader@1240030011 : Record 112;
      SalesInvoiceHeader2@1240030012 : Record 112;
      Object@1240030013 : Record 2000000001;
      ChangeShippingAgent@1240030014 : Codeunit 14100356;
      Window@1240030015 : Dialog;
      UpdateCounter@1240030016 : Integer;
    BEGIN
      TESTFIELD("New Shipping Agent Code");
      TESTFIELD("New Dom. E-Ship Agent Service");

      Window.OPEN(
        'Changing  #3################\' +
        'Modifying #1################\' +
        'No.       #2################');
      UpdateCounter := 0;
      Window.UPDATE(3,"Shipping Agent Code" + ' ' + "Shipment Method Code");

      Window.UPDATE(1,'Customer');
      IF "Change Customer" AND NOT "Changed Customer" THEN BEGIN
        Customer.RESET;
        IF "Filter Shipping Agent Code" THEN
          Customer.SETRANGE("Shipping Agent Code","Shipping Agent Code");
        IF "Filter Shipping Method Code" THEN
          Customer.SETRANGE("Shipment Method Code","Shipment Method Code");
        IF "Filter Blank E-Ship Agent Serv" THEN
          Customer.SETRANGE("E-Ship Agent Service",'');
        IF Customer.FIND('-') THEN
          REPEAT
            "Changed Customers" := "Changed Customers" + 1;

            UpdateCounter := UpdateCounter + 1;
            IF UpdateCounter > 100 THEN BEGIN
              UpdateCounter := 0;
              Window.UPDATE(2,Customer."No.");
            END;

            Customer.TESTFIELD("E-Ship Agent Service",'');

            Customer2 := Customer;
            Customer2.VALIDATE("Shipping Agent Code","New Shipping Agent Code");
            IF "New Shipping Agent Code" <> '' THEN BEGIN
              IF ShippingAgent.Code <> "New Shipping Agent Code" THEN
                ShippingAgent.GET("New Shipping Agent Code");

              IF Country.Code <> Customer2."Country/Region Code" THEN
                IF Customer2."Country/Region Code" = '' THEN
                  CLEAR(Country)
                ELSE
                  Country.GET(Customer2."Country/Region Code");

              CASE ShippingAgent."Shipper Type" OF
                ShippingAgent."Shipper Type"::UPS:
                  CASE TRUE OF
                    Country.UPSCanadianService:
                      Customer2.VALIDATE("E-Ship Agent Service","New UPS CA E-Ship Agent Serv.");
                    Country.UPSPuertoRicoService:
                      Customer2.VALIDATE("E-Ship Agent Service","New UPS PR E-Ship Agent Serv.");
                    Country.UPSWorldWideService:
                      Customer2.VALIDATE("E-Ship Agent Service","New Int. E-Ship Agent Service");
                    ELSE
                      Customer2.VALIDATE("E-Ship Agent Service","New Dom. E-Ship Agent Service")
                  END;
                ShippingAgent."Shipper Type"::FEDEX:
                  IF Country.FedExWorldWideService THEN
                    Customer2.VALIDATE("E-Ship Agent Service","New Int. E-Ship Agent Service")
                  ELSE
                    Customer2.VALIDATE("E-Ship Agent Service","New Dom. E-Ship Agent Service");
                ShippingAgent."Shipper Type"::LTL:
                  IF Country.LTLWorldWideService THEN
                    Customer2.VALIDATE("E-Ship Agent Service","New Int. E-Ship Agent Service")
                  ELSE
                    Customer2.VALIDATE("E-Ship Agent Service","New Dom. E-Ship Agent Service");
                ShippingAgent."Shipper Type"::"4":
                  Customer2.VALIDATE("E-Ship Agent Service","New Dom. E-Ship Agent Service");
                ShippingAgent."Shipper Type"::"5":
                  Customer2.VALIDATE("E-Ship Agent Service","New Dom. E-Ship Agent Service");
                ShippingAgent."Shipper Type"::"6":
                  Customer2.VALIDATE("E-Ship Agent Service","New Dom. E-Ship Agent Service");
                ShippingAgent."Shipper Type"::USPostal:
                  Customer2.VALIDATE("E-Ship Agent Service","New Dom. E-Ship Agent Service");
                ShippingAgent."Shipper Type"::Generic:
                  Customer2.VALIDATE("E-Ship Agent Service","New Dom. E-Ship Agent Service");
                ELSE
                  Customer2.VALIDATE("E-Ship Agent Service","New Dom. E-Ship Agent Service");
              END;
              IF "Blank Shipment Method Code" THEN
                Customer2.VALIDATE("Shipment Method Code",'');
            END;

            IF "New Residential Delivery" THEN
              Customer2.VALIDATE("Residential Delivery","New Residential Delivery");
            IF "New Free Freight" THEN
              Customer2.VALIDATE("Free Freight","New Free Freight");
            IF "New No Free Freight Lines" THEN
              Customer2.VALIDATE("No Free Freight Lines on Order","New No Free Freight Lines");
            IF "New Shipping Payment Type" <> "New Shipping Payment Type"::Prepaid THEN
              Customer2.VALIDATE("Shipping Payment Type","New Shipping Payment Type");
            IF "New Shipping Insurance" <> "New Shipping Insurance"::" " THEN
              Customer2.VALIDATE("Shipping Insurance","New Shipping Insurance");
            Customer2.MODIFY(TRUE);
          UNTIL Customer.NEXT = 0;

        "Changed Customer" := TRUE;
        MODIFY;
        COMMIT;
      END;

      Window.UPDATE(1,'Ship-to Address');
      IF "Change Ship-to Address" AND NOT "Changed Ship-to Address" THEN BEGIN
        ShipToAddress.RESET;
        IF "Filter Shipping Agent Code" THEN
          ShipToAddress.SETRANGE("Shipping Agent Code","Shipping Agent Code");
        IF "Filter Shipping Method Code" THEN
          ShipToAddress.SETRANGE("Shipment Method Code","Shipment Method Code");
        IF "Filter Blank E-Ship Agent Serv" THEN
          ShipToAddress.SETRANGE("E-Ship Agent Service",'');
        IF ShipToAddress.FIND('-') THEN
          REPEAT
            "Changed Ship-to Address's" := "Changed Ship-to Address's" + 1;

            UpdateCounter := UpdateCounter + 1;
            IF UpdateCounter > 100 THEN BEGIN
              UpdateCounter := 0;
              Window.UPDATE(2,ShipToAddress."Customer No." + ' ' + ShipToAddress.Code);
            END;

            ShipToAddress.TESTFIELD("E-Ship Agent Service",'');

            ShipToAddress2 := ShipToAddress;
            ShipToAddress2.VALIDATE("Shipping Agent Code","New Shipping Agent Code");
            IF "New Shipping Agent Code" <> '' THEN BEGIN
              IF ShippingAgent.Code <> "New Shipping Agent Code" THEN
                ShippingAgent.GET("New Shipping Agent Code");

              IF Country.Code <> ShipToAddress2."Country/Region Code" THEN
                IF ShipToAddress2."Country/Region Code" = '' THEN
                  CLEAR(Country)
                ELSE
                  Country.GET(ShipToAddress2."Country/Region Code");

              CASE ShippingAgent."Shipper Type" OF
                ShippingAgent."Shipper Type"::UPS:
                  CASE TRUE OF
                    Country.UPSCanadianService:
                      ShipToAddress2.VALIDATE("E-Ship Agent Service","New UPS CA E-Ship Agent Serv.");
                    Country.UPSPuertoRicoService:
                      ShipToAddress2.VALIDATE("E-Ship Agent Service","New UPS PR E-Ship Agent Serv.");
                    Country.UPSWorldWideService:
                      ShipToAddress2.VALIDATE("E-Ship Agent Service","New Int. E-Ship Agent Service");
                    ELSE
                      ShipToAddress2.VALIDATE("E-Ship Agent Service","New Dom. E-Ship Agent Service")
                  END;
                ShippingAgent."Shipper Type"::FEDEX:
                  IF Country.FedExWorldWideService THEN
                    ShipToAddress2.VALIDATE("E-Ship Agent Service","New Int. E-Ship Agent Service")
                  ELSE
                    ShipToAddress2.VALIDATE("E-Ship Agent Service","New Dom. E-Ship Agent Service");
                ShippingAgent."Shipper Type"::LTL:
                  IF Country.LTLWorldWideService THEN
                    ShipToAddress2.VALIDATE("E-Ship Agent Service","New Int. E-Ship Agent Service")
                  ELSE
                    ShipToAddress2.VALIDATE("E-Ship Agent Service","New Dom. E-Ship Agent Service");
                ShippingAgent."Shipper Type"::"4":
                  ShipToAddress2.VALIDATE("E-Ship Agent Service","New Dom. E-Ship Agent Service");
                ShippingAgent."Shipper Type"::"5":
                  ShipToAddress2.VALIDATE("E-Ship Agent Service","New Dom. E-Ship Agent Service");
                ShippingAgent."Shipper Type"::"6":
                  ShipToAddress2.VALIDATE("E-Ship Agent Service","New Dom. E-Ship Agent Service");
                ShippingAgent."Shipper Type"::USPostal:
                  ShipToAddress2.VALIDATE("E-Ship Agent Service","New Dom. E-Ship Agent Service");
                ShippingAgent."Shipper Type"::Generic:
                  ShipToAddress2.VALIDATE("E-Ship Agent Service","New Dom. E-Ship Agent Service");
                ELSE
                  ShipToAddress2.VALIDATE("E-Ship Agent Service","New Dom. E-Ship Agent Service");
              END;
              IF "Blank Shipment Method Code" THEN
                ShipToAddress2.VALIDATE("Shipment Method Code",'');
            END;

            IF "New Residential Delivery" THEN
              ShipToAddress2.VALIDATE("Residential Delivery","New Residential Delivery");
            IF "New Free Freight" THEN
              ShipToAddress2.VALIDATE("Free Freight","New Free Freight");
            IF "New No Free Freight Lines" THEN
              ShipToAddress2.VALIDATE("No Free Freight Lines on Order","New No Free Freight Lines");
            IF "New Shipping Payment Type" <> "New Shipping Payment Type"::Prepaid THEN
              ShipToAddress2.VALIDATE("Shipping Payment Type","New Shipping Payment Type");
            IF "New Shipping Insurance" <> "New Shipping Insurance"::" " THEN
              ShipToAddress2.VALIDATE("Shipping Insurance","New Shipping Insurance");
            ShipToAddress2.MODIFY(TRUE);
          UNTIL ShipToAddress.NEXT = 0;

        "Changed Ship-to Address" := TRUE;
        MODIFY;
        COMMIT;
      END;

      Window.UPDATE(1,'Sales Header');
      IF "Change Sales Header" AND NOT "Changed Sales Header" THEN BEGIN
        SalesHeader.RESET;
        IF "Filter Shipping Agent Code" THEN
          SalesHeader.SETRANGE("Shipping Agent Code","Shipping Agent Code");
        IF "Filter Shipping Method Code" THEN
          SalesHeader.SETRANGE("Shipment Method Code","Shipment Method Code");
        IF "Filter Blank E-Ship Agent Serv" THEN
          SalesHeader.SETRANGE("E-Ship Agent Service",'');
        IF SalesHeader.FIND('-') THEN
          REPEAT
            "Changed Sales Headers" := "Changed Sales Headers" + 1;

            UpdateCounter := UpdateCounter + 1;
            IF UpdateCounter > 100 THEN BEGIN
              UpdateCounter := 0;
              Window.UPDATE(2,STRSUBSTNO('%1 %2',SalesHeader."Document Type",SalesHeader."No."));
            END;

            SalesHeader.TESTFIELD("E-Ship Agent Service",'');

            SalesHeader2 := SalesHeader;
            SalesHeader2."Shipping Agent Code" :="New Shipping Agent Code";
            SalesHeader2."World Wide Service" := FALSE;

            IF "New Shipping Agent Code" <> '' THEN BEGIN
              IF ShippingAgent.Code <> "New Shipping Agent Code" THEN
                ShippingAgent.GET("New Shipping Agent Code");

              IF Country.Code <> SalesHeader2."Ship-to Country/Region Code" THEN
                IF SalesHeader2."Ship-to Country/Region Code" = '' THEN
                  CLEAR(Country)
                ELSE
                  Country.GET(SalesHeader2."Ship-to Country/Region Code");

              CASE ShippingAgent."Shipper Type" OF
                ShippingAgent."Shipper Type"::UPS:
                  BEGIN
                    CASE TRUE OF
                      Country.UPSCanadianService:
                        SalesHeader2."E-Ship Agent Service" := "New UPS CA E-Ship Agent Serv.";
                      Country.UPSPuertoRicoService:
                        SalesHeader2."E-Ship Agent Service" := "New UPS PR E-Ship Agent Serv.";
                      Country.UPSWorldWideService:
                        SalesHeader2."E-Ship Agent Service" := "New Int. E-Ship Agent Service";
                      ELSE
                        SalesHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
                    END;
                    SalesHeader2."World Wide Service" := Country.UPSWorldWideService;
                  END;
                ShippingAgent."Shipper Type"::FEDEX:
                  BEGIN
                    IF Country.FedExWorldWideService THEN
                      SalesHeader2."E-Ship Agent Service" := "New Int. E-Ship Agent Service"
                    ELSE
                      SalesHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
                    SalesHeader2."World Wide Service" := Country.FedExWorldWideService;
                  END;
                ShippingAgent."Shipper Type"::LTL:
                  BEGIN
                    IF Country.LTLWorldWideService THEN
                      SalesHeader2."E-Ship Agent Service" := "New Int. E-Ship Agent Service"
                    ELSE
                      SalesHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
                    SalesHeader2."World Wide Service" := Country.LTLWorldWideService;
                  END;
                ShippingAgent."Shipper Type"::"4":
                  SalesHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
                ShippingAgent."Shipper Type"::"5":
                  SalesHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
                ShippingAgent."Shipper Type"::"6":
                  SalesHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
                ShippingAgent."Shipper Type"::USPostal:
                  SalesHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
                ShippingAgent."Shipper Type"::Generic:
                  SalesHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
                ELSE
                  SalesHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
              END;
            END;

            SalesLine.RESET;
            SalesLine.SETRANGE("Document Type",SalesHeader."Document Type");
            SalesLine.SETRANGE("Document No.",SalesHeader."No.");
            IF Object.GET(Object.Type::Table,'',5767) THEN BEGIN
              SalesLine.Description := SalesHeader."Shipping Agent Code";
              ChangeShippingAgent.RUN(SalesLine);
            END;

            IF "Blank Shipment Method Code" THEN
              SalesHeader2."Shipment Method Code" := '';

            IF SalesHeader2."Ship-to Code" <> '' THEN BEGIN
              ShipToAddress.GET(SalesHeader2."Sell-to Customer No.",SalesHeader2."Ship-to Code");
              SalesHeader2."Residential Delivery" := ShipToAddress."Residential Delivery";
              SalesHeader2."Free Freight" := ShipToAddress."Free Freight";
              SalesHeader2."No Free Freight Lines on Order" := ShipToAddress."No Free Freight Lines on Order";
              SalesHeader2."Shipping Payment Type" := ShipToAddress."Shipping Payment Type";
              SalesHeader2."Shipping Insurance" := ShipToAddress."Shipping Insurance";
            END ELSE BEGIN
              Customer.GET(SalesHeader2."Sell-to Customer No.");
              SalesHeader2."Residential Delivery" := Customer."Residential Delivery";
              SalesHeader2."Free Freight" := Customer."Free Freight";
              SalesHeader2."No Free Freight Lines on Order" := Customer."No Free Freight Lines on Order";
              SalesHeader2."Shipping Payment Type" := Customer."Shipping Payment Type";
              SalesHeader2."Shipping Insurance" := Customer."Shipping Insurance";
            END;

            SalesHeader2.MODIFY(TRUE);
          UNTIL SalesHeader.NEXT = 0;

        "Changed Sales Header" := TRUE;
        MODIFY;
        COMMIT;
      END;

      Window.UPDATE(1,'Sales Shipment');
      IF "Change Sales Shipment" AND NOT "Changed Sales Shipment" THEN BEGIN
        SalesShipmentHeader.RESET;
        IF "Filter Shipping Agent Code" THEN
          SalesShipmentHeader.SETRANGE("Shipping Agent Code","Shipping Agent Code");
        IF "Filter Shipping Method Code" THEN
          SalesShipmentHeader.SETRANGE("Shipment Method Code","Shipment Method Code");
        IF "Filter Blank E-Ship Agent Serv" THEN
          SalesShipmentHeader.SETRANGE("E-Ship Agent Service",'');
        IF SalesShipmentHeader.FIND('-') THEN
          REPEAT
            "Changed Sales Shipments" := "Changed Sales Shipments" + 1;

            UpdateCounter := UpdateCounter + 1;
            IF UpdateCounter > 100 THEN BEGIN
              UpdateCounter := 0;
              Window.UPDATE(2,SalesShipmentHeader."No.");
            END;

            SalesShipmentHeader.TESTFIELD("E-Ship Agent Service",'');

            SalesShipmentHeader2 := SalesShipmentHeader;
            SalesShipmentHeader2."Shipping Agent Code" :="New Shipping Agent Code";
            SalesShipmentHeader2."World Wide Service" := FALSE;

            IF "New Shipping Agent Code" <> '' THEN BEGIN
              IF ShippingAgent.Code <> "New Shipping Agent Code" THEN
                ShippingAgent.GET("New Shipping Agent Code");

              IF Country.Code <> SalesShipmentHeader2."Ship-to Country/Region Code" THEN
                IF SalesShipmentHeader2."Ship-to Country/Region Code" = '' THEN
                  CLEAR(Country)
                ELSE
                  Country.GET(SalesShipmentHeader2."Ship-to Country/Region Code");

              CASE ShippingAgent."Shipper Type" OF
                ShippingAgent."Shipper Type"::UPS:
                  BEGIN
                    CASE TRUE OF
                      Country.UPSCanadianService:
                        SalesShipmentHeader2."E-Ship Agent Service" := "New UPS CA E-Ship Agent Serv.";
                      Country.UPSPuertoRicoService:
                        SalesShipmentHeader2."E-Ship Agent Service" := "New UPS PR E-Ship Agent Serv.";
                      Country.UPSWorldWideService:
                        SalesShipmentHeader2."E-Ship Agent Service" := "New Int. E-Ship Agent Service";
                      ELSE
                        SalesShipmentHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
                    END;
                    SalesShipmentHeader2."World Wide Service" := Country.UPSWorldWideService;
                  END;
                ShippingAgent."Shipper Type"::FEDEX:
                  BEGIN
                    IF Country.FedExWorldWideService THEN
                      SalesShipmentHeader2."E-Ship Agent Service" := "New Int. E-Ship Agent Service"
                    ELSE
                      SalesShipmentHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
                    SalesShipmentHeader2."World Wide Service" := Country.FedExWorldWideService;
                  END;
                ShippingAgent."Shipper Type"::LTL:
                  BEGIN
                    IF Country.LTLWorldWideService THEN
                      SalesShipmentHeader2."E-Ship Agent Service" := "New Int. E-Ship Agent Service"
                    ELSE
                      SalesShipmentHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
                    SalesShipmentHeader2."World Wide Service" := Country.LTLWorldWideService;
                  END;
                ShippingAgent."Shipper Type"::"4":
                  SalesShipmentHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
                ShippingAgent."Shipper Type"::"5":
                  SalesShipmentHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
                ShippingAgent."Shipper Type"::"6":
                  SalesShipmentHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
                ShippingAgent."Shipper Type"::USPostal:
                  SalesShipmentHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
                ShippingAgent."Shipper Type"::Generic:
                  SalesShipmentHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
                ELSE
                  SalesShipmentHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
              END;
            END;

            IF "Blank Shipment Method Code" THEN
              SalesShipmentHeader2."Shipment Method Code" := '';

            // "Residential Delivery", "Free Freight", "No Free Freight Lines on Order"
            // "Shipping Payment Type" and "Shipping Insurance" not set by purpose

            SalesShipmentHeader2.MODIFY(TRUE);
          UNTIL SalesShipmentHeader.NEXT = 0;

        "Changed Sales Shipment" := TRUE;
        MODIFY;
        COMMIT;
      END;

      Window.UPDATE(1,'Sales Invoice');
      IF "Change Sales Invoice" AND NOT "Changed Sales Invoice" THEN BEGIN
        SalesInvoiceHeader.RESET;
        IF "Filter Shipping Agent Code" THEN
          SalesInvoiceHeader.SETRANGE("Shipping Agent Code","Shipping Agent Code");
        IF "Filter Shipping Method Code" THEN
          SalesInvoiceHeader.SETRANGE("Shipment Method Code","Shipment Method Code");
        IF "Filter Blank E-Ship Agent Serv" THEN
          SalesInvoiceHeader.SETRANGE("E-Ship Agent Service",'');
        IF SalesInvoiceHeader.FIND('-') THEN
          REPEAT
            "Changed Sales Invoices" := "Changed Sales Invoices" + 1;

            UpdateCounter := UpdateCounter + 1;
            IF UpdateCounter > 100 THEN BEGIN
              UpdateCounter := 0;
              Window.UPDATE(2,SalesInvoiceHeader."No.");
            END;

            SalesInvoiceHeader.TESTFIELD("E-Ship Agent Service",'');

            SalesInvoiceHeader2 := SalesInvoiceHeader;
            SalesInvoiceHeader2."Shipping Agent Code" :="New Shipping Agent Code";
            SalesInvoiceHeader2."World Wide Service" := FALSE;

            IF "New Shipping Agent Code" <> '' THEN BEGIN
              IF ShippingAgent.Code <> "New Shipping Agent Code" THEN
                ShippingAgent.GET("New Shipping Agent Code");

              IF Country.Code <> SalesInvoiceHeader2."Ship-to Country/Region Code" THEN
                IF SalesInvoiceHeader2."Ship-to Country/Region Code" = '' THEN
                  CLEAR(Country)
                ELSE
                  Country.GET(SalesInvoiceHeader2."Ship-to Country/Region Code");

              CASE ShippingAgent."Shipper Type" OF
                ShippingAgent."Shipper Type"::UPS:
                  BEGIN
                    CASE TRUE OF
                      Country.UPSCanadianService:
                        SalesInvoiceHeader2."E-Ship Agent Service" := "New UPS CA E-Ship Agent Serv.";
                      Country.UPSPuertoRicoService:
                        SalesInvoiceHeader2."E-Ship Agent Service" := "New UPS PR E-Ship Agent Serv.";
                      Country.UPSWorldWideService:
                        SalesInvoiceHeader2."E-Ship Agent Service" := "New Int. E-Ship Agent Service";
                      ELSE
                        SalesInvoiceHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
                    END;
                    SalesInvoiceHeader2."World Wide Service" := Country.UPSWorldWideService;
                  END;
                ShippingAgent."Shipper Type"::FEDEX:
                  BEGIN
                    IF Country.FedExWorldWideService THEN
                      SalesInvoiceHeader2."E-Ship Agent Service" := "New Int. E-Ship Agent Service"
                    ELSE
                      SalesInvoiceHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
                    SalesInvoiceHeader2."World Wide Service" := Country.FedExWorldWideService;
                  END;
                ShippingAgent."Shipper Type"::LTL:
                  BEGIN
                    IF Country.LTLWorldWideService THEN
                      SalesInvoiceHeader2."E-Ship Agent Service" := "New Int. E-Ship Agent Service"
                    ELSE
                      SalesInvoiceHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
                    SalesInvoiceHeader2."World Wide Service" := Country.LTLWorldWideService;
                  END;
                ShippingAgent."Shipper Type"::"4":
                  SalesInvoiceHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
                ShippingAgent."Shipper Type"::"5":
                  SalesInvoiceHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
                ShippingAgent."Shipper Type"::"6":
                  SalesInvoiceHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
                ShippingAgent."Shipper Type"::USPostal:
                  SalesInvoiceHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
                ShippingAgent."Shipper Type"::Generic:
                  SalesInvoiceHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
                ELSE
                  SalesInvoiceHeader2."E-Ship Agent Service" := "New Dom. E-Ship Agent Service";
              END;
            END;

            IF "Blank Shipment Method Code" THEN
              SalesInvoiceHeader2."Shipment Method Code" := '';

            // "Residential Delivery", "Free Freight", "No Free Freight Lines on Order"
            // "Shipping Payment Type" and "Shipping Insurance" not set by purpose

            SalesInvoiceHeader2.MODIFY(TRUE);
          UNTIL SalesInvoiceHeader.NEXT = 0;

        "Changed Sales Invoice" := TRUE;
        MODIFY;
        COMMIT;
      END;

      Window.CLOSE;
    END;

    BEGIN
    END.
  }
}

