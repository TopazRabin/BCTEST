OBJECT Table 14123528 ES Login Access Control
{
  OBJECT-PROPERTIES
  {
    Date=04/24/18;
    Time=12:00:00 PM;
    Version List=ES1.41.50;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TestLoginSetup;

               ESLogin.GET("Login Type","Login User ID");
               ESLogin.TESTFIELD("Permissions as User ID",'');

               ESSecuritySetup.GET;
               IF NOT AllowBlankNoQuestion THEN BEGIN
                 IF ("Company Group ID" = '') AND NOT ESSecuritySetup."Allow Blank Company" THEN
                   IF NOT CONFIRM(Text012,FALSE) THEN
                     ERROR(Text013,FIELDCAPTION("Company Group ID"));

                 IF "Company Group ID" <> '' THEN
                   IF ESLoginAccessControl.GET("Login Type","Login User ID","Role Type","Role ID",'') THEN
                     MESSAGE(Text002);
               END;

               IF NOT ChangeWithNoComment THEN
                 ESLogin.Comment(
                   1,
                   STRSUBSTNO(
                   Text001,
                   TABLECAPTION,"Login Type","Login User ID","Role Type","Role ID","Company Group ID"));

               "Created By User" := USERID;
               "Created Date Time" := CURRENTDATETIME;
             END;

    OnModify=BEGIN
               TestLoginSetup;

               ESLogin.GET("Login Type","Login User ID");
               IF NOT ChangeWithNoComment THEN
                 ESLogin.Comment(
                   1,
                   STRSUBSTNO(
                   Text003,
                   TABLECAPTION,"Login Type","Login User ID","Role Type","Role ID","Company Group ID"));
             END;

    OnDelete=BEGIN
               TestLoginSetup;

               ESLogin.GET("Login Type","Login User ID");
               IF NOT ChangeWithNoComment THEN
                 ESLogin.Comment(
                   1,
                   STRSUBSTNO(
                   Text004,
                   TABLECAPTION,"Login Type","Login User ID","Role Type","Role ID","Company Group ID"));
             END;

    OnRename=BEGIN
               TestLoginSetup;

               ESLogin.GET("Login Type","Login User ID");
               IF NOT ChangeWithNoComment THEN BEGIN
                 ESLogin.Comment(
                   1,
                   STRSUBSTNO(
                   Text004,
                   TABLECAPTION,xRec."Login Type",xRec."Login User ID",xRec."Role Type",xRec."Role ID",
                   xRec."Company Group ID"));
                 ESLogin.Comment(
                   1,
                   STRSUBSTNO(
                   Text001,
                   TABLECAPTION,"Login Type","Login User ID","Role Type","Role ID","Company Group ID"));
               END;
             END;

    CaptionML=ENU=Login Access Control;
    LookupPageID=Page14123589;
    DrillDownPageID=Page14123589;
  }
  FIELDS
  {
    { 1   ;   ;Login Type          ;Option        ;CaptionML=ENU=Login Type;
                                                   OptionCaptionML=ENU=" ,Database,Windows";
                                                   OptionString=[ ,Database,Windows] }
    { 2   ;   ;Login User ID       ;Code50        ;TableRelation="ES Login"."User ID" WHERE (Type=FIELD(Login Type));
                                                   CaptionML=ENU=Login User ID;
                                                   NotBlank=Yes }
    { 3   ;   ;Role Type           ;Option        ;InitValue=Group;
                                                   CaptionML=ENU=Permission Set Type;
                                                   OptionCaptionML=ENU=Permission Set,Group;
                                                   OptionString=Role,Group }
    { 4   ;   ;Role ID             ;Code20        ;TableRelation=IF (Role Type=CONST(Role)) "ES Role"."Role ID"
                                                                 ELSE IF (Role Type=CONST(Group)) "ES Role Group"."Group ID";
                                                   CaptionML=ENU=Permission Set ID;
                                                   NotBlank=Yes }
    { 5   ;   ;User Name           ;Text208       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ES Login"."User Name" WHERE (Type=FIELD(Login Type),
                                                                                                    User ID=FIELD(Login User ID)));
                                                   CaptionML=ENU=User Name;
                                                   Editable=No }
    { 6   ;   ;Company Group ID    ;Code30        ;TableRelation="ES Company Group";
                                                   CaptionML=ENU=Company Group ID }
    { 7   ;   ;Company Group Name  ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ES Company Group".Name WHERE (Group ID=FIELD(Company Group ID)));
                                                   CaptionML=ENU=Company Group Name }
    { 8   ;   ;Created By User     ;Code50        ;CaptionML=ENU=Created By User;
                                                   Editable=No }
    { 9   ;   ;Created Date Time   ;DateTime      ;CaptionML=ENU=Created Date Time;
                                                   Editable=No }
    { 10  ;   ;No Permissions      ;Boolean       ;CaptionML=ENU=No Permissions }
    { 11  ;   ;Expiry Date         ;Date          ;CaptionML=ENU=Expiry Date }
  }
  KEYS
  {
    {    ;Login Type,Login User ID,Role Type,Role ID,Company Group ID;
                                                   Clustered=Yes }
    {    ;Role Type,Role ID                        }
    {    ;Company Group ID                         }
    {    ;Created Date Time                        }
    {    ;Expiry Date                              }
    {    ;Created By User,Created Date Time        }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ESLogin@1240520008 : Record 14123527;
      ESLoginAccessControl@1240520009 : Record 14123528;
      Text001@1001 : TextConst 'ENU=Inserted %1 %2 %3 %4 %5 %6';
      Text002@1002 : TextConst 'ENU=Permission Set exists with no Company.';
      Text003@1003 : TextConst 'ENU=Modified %1 %2 %3 %4 %5 %6';
      Text004@1004 : TextConst 'ENU=Deleted %1 %2 %3 %4 %5 %6';
      Text006@1006 : TextConst 'ENU=%1 must be filtered.';
      Text007@1007 : TextConst 'ENU=Filter on %1 must be a simple filter.';
      Text008@1240520010 : TextConst 'ENU=%1 Login Access Controls already exists.';
      Text009@1240520011 : TextConst 'ENU=Create %1 new Login Access Controls? %2 already exists.';
      Text010@1240520012 : TextConst 'ENU=Nothing has been copied.';
      Text011@1240520013 : TextConst 'ENU=%1 new Login Access Controls have been added, %2 already existed.';
      Text012@1240520015 : TextConst 'ENU=Insert Permission for the "Blank" Company Group?';
      Text013@1240520014 : TextConst 'ENU=%1 must be entered';
      ESSecuritySetup@1240520017 : Record 14123521;
      AllowBlankNoQuestion@1240520016 : Boolean;
      Text005@1005 : TextConst 'ENU=%1 records were updated.';
      ChangeWithNoComment@1240520001 : Boolean;

    PROCEDURE RoleName@1240520008() : Text[250];
    VAR
      ESRole@1240520008 : Record 14123505;
      ESRoleGroup@1240520009 : Record 14123525;
    BEGIN
      CASE "Role Type" OF
        "Role Type"::Role:
          IF "Role ID" <> '' THEN
            IF ESRole.GET("Role ID") THEN
              EXIT(ESRole.Name);
        "Role Type"::Group:
          IF "Role ID" <> '' THEN
            IF ESRoleGroup.GET("Role ID") THEN
              EXIT(ESRoleGroup.Name);
      END;

      EXIT('');
    END;

    PROCEDURE CompanyList@1240520009() : Text[1000];
    VAR
      ESCompanyGroup@1240520008 : Record 14123530;
    BEGIN
      IF "Company Group ID" <> '' THEN
        EXIT(ESCompanyGroup.CompanyList("Company Group ID"))
      ELSE
        EXIT('');
    END;

    PROCEDURE RolePermissions@1240520003();
    VAR
      ESRolePermission@1240520001 : Record 14123506;
    BEGIN
      TESTFIELD("Role Type","Role Type"::Role);
      ESRolePermission.RESET;
      ESRolePermission.SETRANGE("Role ID","Role ID");
      PAGE.RUN(0,ESRolePermission);
    END;

    PROCEDURE RoleGroupLines@1240520002();
    VAR
      ESRoleGroupLine@1240520001 : Record 14123526;
    BEGIN
      TESTFIELD("Role Type","Role Type"::Group);
      ESRoleGroupLine.RESET;
      ESRoleGroupLine.SETRANGE("Role Group ID","Role ID");
      PAGE.RUN(0,ESRoleGroupLine);
    END;

    PROCEDURE RoleWhereUsed@1240520013();
    VAR
      ESRoleWhereUsed@1240520008 : Page 14123565;
    BEGIN
      TESTFIELD("Role Type","Role Type"::Role);
      CLEAR(ESRoleWhereUsed);
      ESRoleWhereUsed.InitRole("Role ID");
      ESRoleWhereUsed.RUN;
    END;

    PROCEDURE AddPermissionsFrom@1240520010(VAR ESLoginAccessControl@1240520008 : Record 14123528;TableNo@1240520009 : Integer);
    VAR
      ESLogin@1240520010 : Record 14123527;
    BEGIN
      IF ESLoginAccessControl."Role ID" = '' THEN BEGIN
        IF ESLoginAccessControl.GETFILTER("Login Type") = '' THEN BEGIN
          ESLoginAccessControl.FILTERGROUP(4);
          IF ESLoginAccessControl.GETFILTER("Login Type") = '' THEN
            ERROR(Text006,ESLoginAccessControl.FIELDCAPTION("Login Type"));
        END;

        IF ESLoginAccessControl.GETFILTER("Login User ID") = '' THEN
          ERROR(Text006,ESLoginAccessControl.FIELDCAPTION("Login User ID"));

        IF ESLoginAccessControl.GETRANGEMIN("Login Type") <> ESLoginAccessControl.GETRANGEMAX("Login Type")
        THEN
          ERROR(Text007,ESLoginAccessControl.FIELDCAPTION("Login Type"));

        IF ESLoginAccessControl.GETRANGEMIN("Login User ID") <> ESLoginAccessControl.GETRANGEMAX("Login User ID")
        THEN
          ERROR(Text007,ESLoginAccessControl.FIELDCAPTION("Login User ID"));

        ESLogin.GET(ESLoginAccessControl.GETRANGEMIN("Login Type"),ESLoginAccessControl.GETRANGEMIN("Login User ID"));

        ESLoginAccessControl.FILTERGROUP(0);
      END ELSE
        ESLogin.GET(ESLoginAccessControl."Login Type",ESLoginAccessControl."Login User ID");

      CASE TableNo OF
        DATABASE::"ES Role":
          ESLogin.AddAccessControlFromRoles;
        DATABASE::"ES Role Group":
          ESLogin.AddAccessControlFromRoleGroups;
      END;
    END;

    PROCEDURE CopySelectedToCompanyGroup@1240520011(VAR ESLoginAccessControl@1240520008 : Record 14123528);
    VAR
      ESCompanyGroup@1240520010 : Record 14123530;
      ESLoginAccessControl2@1240520009 : Record 14123528;
      ESLoginAccessControl3@1240520013 : Record 14123528;
      ExistingRecords@1240520011 : Integer;
      NewRecords@1240520012 : Integer;
    BEGIN
      IF PAGE.RUNMODAL(0,ESCompanyGroup) <> ACTION::LookupOK THEN
        EXIT;

      IF ESLoginAccessControl.FIND('-') THEN
        REPEAT
          IF ESLoginAccessControl2.GET(
               ESLoginAccessControl."Login Type",ESLoginAccessControl."Login User ID",
               ESLoginAccessControl."Role Type",ESLoginAccessControl."Role ID",
               ESCompanyGroup."Group ID")
          THEN
            ExistingRecords := ExistingRecords + 1
          ELSE
            NewRecords := NewRecords + 1;
        UNTIL ESLoginAccessControl.NEXT = 0;

      IF NewRecords = 0 THEN
        ERROR(Text008,ExistingRecords);

      IF NOT CONFIRM(Text009,FALSE,NewRecords,ExistingRecords)
      THEN
        ERROR(Text010);

      NewRecords := 0;
      ExistingRecords := 0;
      IF ESLoginAccessControl.FIND('-') THEN
        REPEAT
          IF NOT ESLoginAccessControl2.GET(
                   ESLoginAccessControl."Login Type",ESLoginAccessControl."Login User ID",
                   ESLoginAccessControl."Role Type",ESLoginAccessControl."Role ID",
                   ESCompanyGroup."Group ID")
          THEN BEGIN
            ESLoginAccessControl3 := ESLoginAccessControl;
            ESLoginAccessControl3.SetAllowBlankNoQuestion(TRUE,FALSE);
            ESLoginAccessControl3.VALIDATE("Company Group ID",ESCompanyGroup."Group ID");
            ESLoginAccessControl3.INSERT(TRUE);

            NewRecords := NewRecords + 1;
          END ELSE
            ExistingRecords := ExistingRecords + 1;
        UNTIL ESLoginAccessControl.NEXT = 0;

      MESSAGE(Text011,NewRecords,ExistingRecords);
    END;

    PROCEDURE CopyFromLogin@1240520004(VAR ESLoginAccessControl@1240520001 : Record 14123528);
    VAR
      ESLogin@1240520002 : Record 14123527;
    BEGIN
      IF ESLoginAccessControl."Role ID" = '' THEN BEGIN
        IF ESLoginAccessControl.GETFILTER("Login Type") = '' THEN BEGIN
          ESLoginAccessControl.FILTERGROUP(4);
          IF ESLoginAccessControl.GETFILTER("Login Type") = '' THEN
            ERROR(Text006,ESLoginAccessControl.FIELDCAPTION("Login Type"));
        END;

        IF ESLoginAccessControl.GETFILTER("Login User ID") = '' THEN
          ERROR(Text006,ESLoginAccessControl.FIELDCAPTION("Login User ID"));

        IF ESLoginAccessControl.GETRANGEMIN("Login Type") <> ESLoginAccessControl.GETRANGEMAX("Login Type")
        THEN
          ERROR(Text007,ESLoginAccessControl.FIELDCAPTION("Login Type"));

        IF ESLoginAccessControl.GETRANGEMIN("Login User ID") <> ESLoginAccessControl.GETRANGEMAX("Login User ID")
        THEN
          ERROR(Text007,ESLoginAccessControl.FIELDCAPTION("Login User ID"));

        ESLogin.GET(ESLoginAccessControl.GETRANGEMIN("Login Type"),ESLoginAccessControl.GETRANGEMIN("Login User ID"));

        ESLoginAccessControl.FILTERGROUP(0);
      END ELSE
        ESLogin.GET(ESLoginAccessControl."Login Type",ESLoginAccessControl."Login User ID");

      ESLogin.CopyAccessControlFrom;
    END;

    PROCEDURE TestLoginSetup@1240520001();
    VAR
      ESLoginSetup@1240520001 : Record 14123540;
    BEGIN
      IF ESLoginSetup.GET(USERID) THEN
        IF ESLoginSetup."Limited Access Control Editing" THEN
          IF ESLoginSetup.GET("Login User ID") THEN
            ESLoginSetup.TESTFIELD("Limited Access Control Editing",FALSE);
    END;

    PROCEDURE ChangeNoPermissions@1240520005(VAR ESLoginAccessControl@1240520001 : Record 14123528;NewValue@1240520003 : Boolean;ShowStatus@1240520004 : Boolean) : Integer;
    VAR
      ESLoginAccessControl2@1240520002 : Record 14123528;
      ChangedRecords@1240520005 : Integer;
    BEGIN
      IF ESLoginAccessControl.FIND('-') THEN
        REPEAT
          IF ESLoginAccessControl."No Permissions" <> NewValue THEN BEGIN
            ESLoginAccessControl2 := ESLoginAccessControl;
            ESLoginAccessControl2.VALIDATE("No Permissions",NewValue);
            ESLoginAccessControl2.MODIFY(TRUE);

            ChangedRecords := ChangedRecords + 1;
          END;
        UNTIL ESLoginAccessControl.NEXT = 0;

      IF ShowStatus THEN
        MESSAGE(Text005,ChangedRecords);

      EXIT(ChangedRecords);
    END;

    PROCEDURE SetAllowBlankNoQuestion@1240520012(NoQuestion@1240520008 : Boolean;NoComment@1240520001 : Boolean);
    BEGIN
      AllowBlankNoQuestion := NoQuestion;
      ChangeWithNoComment := NoComment;
    END;

    PROCEDURE FormatAsTextLine@1240520048(VAR ESTextLine@1240520011 : Record 14123520;NoOfRelatedKeyFields@1240520009 : Integer;CalcFlowFields@1240520012 : Boolean;UserDateTimeDetails@1240520013 : Boolean) : Boolean;
    VAR
      ESFormatMgt@1240520014 : Codeunit 14123505;
      RecRef@1240520010 : RecordRef;
    BEGIN
      ESFormatMgt.NewRecord(
        TABLECAPTION,"Login User ID",FORMAT("Role Type"),"Role ID","Company Group ID",
        '','','','','','',4,NoOfRelatedKeyFields);

      IF "No Permissions" THEN
        ESFormatMgt.AddField(FIELDCAPTION("No Permissions"),FORMAT("No Permissions"));
      IF "Expiry Date" <> 0D THEN
        ESFormatMgt.AddField(FIELDCAPTION("Expiry Date"),FORMAT("Expiry Date"));

      IF UserDateTimeDetails THEN BEGIN
        ESFormatMgt.AddField(FIELDCAPTION("Created By User"),FORMAT("Created By User"));
        IF "Created Date Time" <> 0DT THEN
          ESFormatMgt.AddField(FIELDCAPTION("Created Date Time"),FORMAT("Created Date Time"));
      END;

      IF CalcFlowFields THEN BEGIN
        CALCFIELDS("Company Group Name","User Name");

        ESFormatMgt.AddFlowField(FIELDCAPTION("Company Group Name"),FORMAT("Company Group Name"));
        ESFormatMgt.AddFlowField(FIELDCAPTION("User Name"),FORMAT("User Name"));
      END;

      RecRef.OPEN(DATABASE::"ES Login Access Control");
      RecRef.GETTABLE(Rec);
      ESFormatMgt.FormatNewESTextLine(ESTextLine,DATABASE::"ES Login Access Control",RecRef.RECORDID);

      EXIT(ESFormatMgt.NoTextOverflow);
    END;

    PROCEDURE Comment@1240520020(FunctionNo@1240520008 : ' ,Insert,Show,Exist,DeleteAll';NewText@1240520010 : Text[250]) : Boolean;
    VAR
      ESComment@1240520009 : Record 14123524;
    BEGIN
      ESComment.RESET;
      ESComment.SETRANGE("Table ID",DATABASE::"ES Login Access Control");
      ESComment.SETRANGE(Type,"Login Type");
      ESComment.SETRANGE("User ID","Login User ID");
      ESComment.SETRANGE("Entry No.","Role Type");
      ESComment.SETRANGE("Role ID","Role ID");
      ESComment.SETRANGE(Code,"Company Group ID");
      EXIT(ESComment.Functions(FunctionNo,NewText));
    END;

    BEGIN
    END.
  }
}

