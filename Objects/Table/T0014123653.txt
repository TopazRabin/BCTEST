OBJECT Table 14123653 ES Role Detail
{
  OBJECT-PROPERTIES
  {
    Date=05/11/18;
    Time=12:00:00 PM;
    Version List=ES1.41.52;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               ESSecuritySetup.GET;
               ESSecuritySetup.TestRestrictedRoleID("Role ID",TRUE);

               IF "File Name" = '' THEN BEGIN
                 IF ESSecuritySetup."Default Role Detail File Name" <> '' THEN
                   "File Name" :=
                     ESSecuritySetup.BuildDefaultFileName(
                       ESSecuritySetup."Default Role Detail File Name",MAXSTRLEN("File Name"),"Role ID");
               END;

               IF NOT NoComment THEN BEGIN
                 IF NOT ESRole.GET("Role ID") THEN
                   ESRole."Role ID" := "Role ID";
                 ESRole.Comment(1,STRSUBSTNO(Text046,TABLECAPTION,"Role ID"));
               END;
             END;

    OnModify=BEGIN
               IF NOT NoComment THEN BEGIN
                 ESRole.GET("Role ID");
                 ESRole.Comment(1,STRSUBSTNO(Text047,TABLECAPTION,"Role ID"));
               END;
             END;

    OnDelete=BEGIN
               ESRoleRecording.RESET;
               ESRoleRecording.SETRANGE("Role ID","Role ID");
               ESRoleRecording.DELETEALL(TRUE);

               ESRoleBuilderPerm.RESET;
               ESRoleBuilderPerm.SETRANGE("Role ID","Role ID");
               ESRoleBuilderPerm.DELETEALL(TRUE);

               IF NOT NoComment THEN BEGIN
                 ESRole.GET("Role ID");
                 ESRole.Comment(1,STRSUBSTNO(Text048,TABLECAPTION,"Role ID"));
               END;
             END;

    OnRename=BEGIN
               ERROR(Text026);
             END;

    CaptionML=ENU=Permission Set Detail;
    LookupPageID=Page14123654;
    DrillDownPageID=Page14123654;
  }
  FIELDS
  {
    { 1   ;   ;Role ID             ;Code20        ;TableRelation="ES Role"."Role ID";
                                                   CaptionML=ENU=Permission Set ID;
                                                   NotBlank=Yes }
    { 3   ;   ;Role Name           ;Text30        ;CaptionML=ENU=Permission Set Name }
    { 4   ;   ;Description         ;Text250       ;CaptionML=ENU=Description }
    { 5   ;   ;File Name           ;Text250       ;OnValidate=VAR
                                                                ESObjectExplorer@1240520001 : Record 14123901;
                                                              BEGIN
                                                                ESObjectExplorer.CheckCorrectFileName("File Name",TRUE);
                                                              END;

                                                   OnLookup=VAR
                                                              ESObjectExplorer@1240520001 : Record 14123901;
                                                              CommonDialogMgt@1240520008 : Codeunit 14123901;
                                                            BEGIN
                                                              "File Name" := CommonDialogMgt.OpenFile(FIELDCAPTION("File Name"),"File Name",1,'*.txt',1);
                                                              ESObjectExplorer.CheckCorrectFileName("File Name",TRUE);
                                                            END;

                                                   CaptionML=ENU=File Name }
    { 6   ;   ;Exported Date Time  ;DateTime      ;CaptionML=ENU=Exported Date Time;
                                                   Editable=No }
    { 7   ;   ;Imported Date Time  ;DateTime      ;CaptionML=ENU=Imported Date Time;
                                                   Editable=No }
    { 8   ;   ;Created By User     ;Code50        ;CaptionML=ENU=Created By User;
                                                   Editable=No }
    { 9   ;   ;Created Date Time   ;DateTime      ;CaptionML=ENU=Created Date Time;
                                                   Editable=No }
    { 10  ;   ;Remove ALL Permissions;Boolean     ;CaptionML=ENU=Remove ALL Permissions }
    { 11  ;   ;No Permissions      ;Boolean       ;CaptionML=ENU=No Permissions }
    { 12  ;   ;Role Builder Permissions;Integer   ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Role Builder Permission" WHERE (Role ID=FIELD(Role ID)));
                                                   CaptionML=ENU=Builder Permissions;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 13  ;   ;Role Recordings     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Role Recording" WHERE (Role ID=FIELD(Role ID)));
                                                   CaptionML=ENU=Permission Set Recordings;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 14  ;   ;Role Updated Date Time;DateTime    ;CaptionML=ENU=Permission Set Updated Date Time;
                                                   Editable=No }
    { 15  ;   ;Role Permissions    ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Role Permission" WHERE (Role ID=FIELD(Role ID)));
                                                   CaptionML=ENU=Permissions;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 16  ;   ;Remove BASIC Permissions;Boolean   ;CaptionML=ENU=Remove BASIC Permissions }
    { 17  ;   ;Parent Role ID      ;Code20        ;TableRelation="ES Role";
                                                   CaptionML=ENU=Parent Permission Set ID }
    { 18  ;   ;Parent Role Name    ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ES Role".Name WHERE (Role ID=FIELD(Parent Role ID)));
                                                   CaptionML=ENU=Parent Permission Set Name;
                                                   Editable=No }
    { 19  ;   ;Parent Role Description;Text250    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ES Role Detail".Description WHERE (Role ID=FIELD(Parent Role ID)));
                                                   CaptionML=ENU=Parent Permission Set Description;
                                                   Editable=No }
    { 20  ;   ;Not in Parent Role Permissions;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("ES Role Permission" WHERE (Role ID=FIELD(Role ID),
                                                                                                 Exists in Parent Role=CONST(No)));
                                                   CaptionML=ENU=Not in Parent Permissions;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 21  ;   ;Form/Page Filter    ;Text250       ;OnLookup=VAR
                                                              ESObjectInfo@1240520008 : Record 14123509;
                                                              ESObjectInfoTmp@1240520009 : TEMPORARY Record 14123509;
                                                              ESObjectInformationsForm@1240520010 : Page 14123509;
                                                              StringTooLong@1240520011 : Boolean;
                                                            BEGIN
                                                              ESObjectInfo.RESET;
                                                              ESObjectInfo.SETRANGE("Object Type",ESObjectInfo."Object Type"::Page);

                                                              CLEAR(ESObjectInformationsForm);
                                                              ESObjectInformationsForm.SETTABLEVIEW(ESObjectInfo);
                                                              ESObjectInformationsForm.LOOKUPMODE(TRUE);
                                                              IF ESObjectInformationsForm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                "Form/Page Filter" := '';

                                                                ESObjectInformationsForm.GetSelection(ESObjectInfoTmp);
                                                                IF ESObjectInfoTmp.FIND('-') THEN
                                                                  REPEAT
                                                                    IF STRLEN("Form/Page Filter") +
                                                                       STRLEN(DELCHR(FORMAT(ESObjectInfoTmp."Object ID"),'=',',.')) + 1 <=
                                                                       MAXSTRLEN("Form/Page Filter")
                                                                    THEN BEGIN
                                                                      IF "Form/Page Filter" <> '' THEN
                                                                        "Form/Page Filter" := "Form/Page Filter" + '|';
                                                                      "Form/Page Filter" := "Form/Page Filter" + DELCHR(FORMAT(ESObjectInfoTmp."Object ID"),'=',',.');
                                                                    END ELSE
                                                                      StringTooLong := TRUE;
                                                                  UNTIL (ESObjectInfoTmp.NEXT = 0) OR StringTooLong;

                                                                IF StringTooLong THEN
                                                                  MESSAGE(Text002);
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Page Filter }
    { 22  ;   ;Include Menu Items  ;Boolean       ;CaptionML=ENU=Include Menu Items }
    { 23  ;   ;TableData Role Permissions;Integer ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Role Permission" WHERE (Role ID=FIELD(Role ID),
                                                                                                 Object Type=CONST(TableData)));
                                                   CaptionML=ENU=TableData Permissions;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 24  ;   ;Role Exists         ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("ES Role" WHERE (Role ID=FIELD(Role ID)));
                                                   CaptionML=ENU=Permission Set Exists;
                                                   Editable=No }
    { 25  ;   ;Role Recording Exists;Boolean      ;FieldClass=FlowField;
                                                   CalcFormula=Exist("ES Role Recording" WHERE (Role ID=FIELD(Role ID)));
                                                   CaptionML=ENU=Permission Set Recording Exists;
                                                   Editable=No }
    { 26  ;   ;Only Classic Client Recording;Boolean;
                                                   CaptionML=ENU=Only Classic Client Recording }
    { 27  ;   ;Report Filter       ;Text250       ;CaptionML=ENU=Report Filter }
    { 28  ;   ;Only Form/Page relations;Boolean   ;CaptionML=ENU=Only Page relations }
    { 31  ;   ;Role Group ID       ;Code20        ;TableRelation="ES Role Group";
                                                   OnValidate=BEGIN
                                                                IF "Role Group ID" <> '' THEN BEGIN
                                                                  ESRoleRecording.RESET;
                                                                  ESRoleRecording.SETRANGE("Role ID","Role ID");
                                                                  IF ESRoleRecording.FIND('-') THEN
                                                                    ERROR(Text009,ESRoleRecording.TABLECAPTION);

                                                                  ESRoleBuilderPerm.RESET;
                                                                  ESRoleBuilderPerm.SETRANGE("Role ID","Role ID");
                                                                  IF ESRoleBuilderPerm.FIND('-') THEN
                                                                    ERROR(Text009,ESRoleBuilderPerm.TABLECAPTION);
                                                                END;

                                                                CALCFIELDS("Role Group Name");
                                                              END;

                                                   CaptionML=ENU=Permission Group ID }
    { 32  ;   ;Role Group Name     ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ES Role Group".Name WHERE (Group ID=FIELD(Role Group ID)));
                                                   CaptionML=ENU=Permission Group Name;
                                                   Editable=No }
    { 33  ;   ;Object Role Permissions;Integer    ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Role Permission" WHERE (Role ID=FIELD(Role ID),
                                                                                                 Object Type=FILTER(Table..Query)));
                                                   CaptionML=ENU=Object Permissions;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 34  ;   ;System Role Permissions;Integer    ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Role Permission" WHERE (Role ID=FIELD(Role ID),
                                                                                                 Object Type=CONST(System)));
                                                   CaptionML=ENU=System Permissions;
                                                   BlankZero=Yes;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Role ID                                 ;Clustered=Yes }
    {    ;Created Date Time                        }
    {    ;Created By User,Created Date Time        }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ESSecuritySetup@1240520008 : Record 14123521;
      ESRole@1240520010 : Record 14123505;
      ESRoleRecording@1240520012 : Record 14123654;
      ESRoleBuilderPerm@1240520013 : Record 14123655;
      ESFileMgt@1240520011 : Codeunit 14123502;
      Text003@1003 : TextConst 'ENU=File %1 already exists, overwrite?';
      Text004@1004 : TextConst 'ENU=Nothing has been exported.';
      Text005@1005 : TextConst 'ENU=Exporting %1 to file\';
      Text006@1006 : TextConst 'ENU=Process #1################################################';
      Text007@1007 : TextConst 'ENU=Updating Version';
      Text008@1008 : TextConst 'ENU=Creating File';
      Text011@1011 : TextConst 'ENU=Closing File';
      Text012@1012 : TextConst 'ENU=Permission Set Detail %1 exported to %2 with %3 records.';
      Text013@1013 : TextConst 'ENU=Nothing imported.';
      Text014@1014 : TextConst 'ENU=File Name must be entered.';
      Text015@1015 : TextConst 'ENU=Importing %1 from file\';
      Text016@1016 : TextConst 'ENU=Process #1################################################\';
      Text017@1017 : TextConst 'ENU=Opening file';
      Text018@1018 : TextConst 'ENU=%1 records have been imported from %2.';
      Text019@1019 : TextConst 'ENU=Only %1 existing permissions selected.';
      Text020@1020 : TextConst 'ENU=Add %1 permissions to Permission Set Detail %2?';
      Text021@1021 : TextConst 'ENU=Nothing added.';
      Text022@1022 : TextConst 'ENU=%1 records added.';
      Text023@1023 : TextConst 'ENU=Nothing copied.';
      Text025@1025 : TextConst 'ENU=Update All Permission Set Details';
      Text026@1240520009 : TextConst 'ENU=Rename not allowed.';
      Text027@1240520001 : TextConst 'ENU=%1 %2 exported to %3 with %4 records.';
      Text001@1001 : TextConst 'ENU=%1 in %2 %3 is cyclic.';
      Text002@1002 : TextConst 'ENU=%1 records modified.';
      Text033@1240520022 : TextConst 'ENU=Delete existing %1 Recordings?';
      Text034@1240520021 : TextConst 'ENU=Too many recordings exist.';
      Text035@1240520020 : TextConst 'ENU="%1 objects has been launched (%2 failed). "';
      Text036@1240520019 : TextConst 'ENU=Now do the required data changes and close the forms, then stop the recording.';
      Text037@1240520018 : TextConst 'ENU=%1 %2 %3 %4 could not be launched.';
      Text038@1240520017 : TextConst 'ENU=All Objects';
      Text039@1240520016 : TextConst 'ENU=,Group %1 (%2 to %3)';
      Text040@1240520015 : TextConst 'ENU=Launch %1 objects?';
      Text041@1240520014 : TextConst 'ENU=Launching #1################################################';
      Text042@1240520007 : TextConst 'ENU=%1 %2 (%3 of %4 failed %5)';
      Text049@1240520004 : TextConst 'ENU=More than 1000 object to launch.';
      Text031@1240520003 : TextConst 'ENU=%1 %2 created.';
      Text043@1240520002 : TextConst 'ENU=%1 %2 exists.';
      Text009@1009 : TextConst 'ENU=%1 exists.';
      Text010@1010 : TextConst 'ENU=%1 is not valid content for this filetype.';
      Text028@1026 : TextConst 'ENU=Launch Objects';
      Text029@1027 : TextConst 'ENU=Nothing has been exported.';
      Text030@1028 : TextConst 'ENU=Imported %1';
      Text032@1029 : TextConst 'ENU=Import (Overwrite Existing)';
      Text044@1030 : TextConst 'ENU=Import (Add New Recordings)';
      Text045@1031 : TextConst 'ENU=Inserted %1 %2 %3';
      Text046@1032 : TextConst 'ENU=Inserted %1 %2';
      Text047@1033 : TextConst 'ENU=Modified %1 %2';
      Text048@1034 : TextConst 'ENU=Deleted %1 %2';
      NoComment@1240520005 : Boolean;
      Text024@1024 : TextConst 'ENU=%1 %2 inserted and %3 modified, %4 already existed.';
      Text050@1035 : TextConst 'ENU=%1 %2 inserted, %3 already existed.';
      Text051@1036 : TextConst 'ENU=Multiple Security Filters on %1 %2.';
      Text101@1127 : TextConst 'ENU=Downloading File.';
      Text102@1100 : TextConst 'ENU=Uploading file.';

    PROCEDURE AddRelatedPermissions@1240520011(ShowStatus@1240520010 : Boolean);
    VAR
      ESRoleBuilderPerm@1240520008 : Record 14123655;
      ESRelationMgt@1240520009 : Codeunit 14123602;
    BEGIN
      ESRoleBuilderPerm.RESET;
      ESRoleBuilderPerm.SETRANGE("Role ID","Role ID");
      ESRelationMgt.AddRelatedPermsToRoleDetail(ESRoleBuilderPerm,ShowStatus);
    END;

    PROCEDURE AddPermsFromObjectInfo@1240520016();
    VAR
      ESObjectInfoTmp@1240520008 : TEMPORARY Record 14123509;
      ESRoleBuilderPerm@1240520012 : Record 14123655;
      ESObjectInfosForm@1240520009 : Page 14123509;
      ExistingPermissions@1240520010 : Integer;
      NewPermissions@1240520011 : Integer;
      AddedPermissions@1240520013 : Integer;
    BEGIN
      CLEAR(ESObjectInfosForm);
      ESObjectInfosForm.LOOKUPMODE(TRUE);
      IF ESObjectInfosForm.RUNMODAL <> ACTION::LookupOK THEN
        EXIT;

      ESObjectInfoTmp.RESET;
      ESObjectInfoTmp.DELETEALL;

      ESObjectInfosForm.GetSelection(ESObjectInfoTmp);

      ExistingPermissions := 0;
      NewPermissions := 0;
      IF ESObjectInfoTmp.FIND('-') THEN
        REPEAT
          IF ESRoleBuilderPerm.GET("Role ID",ESObjectInfoTmp."Object Type",ESObjectInfoTmp."Object ID") THEN
            ExistingPermissions := ExistingPermissions + 1
          ELSE
            NewPermissions := NewPermissions + 1;
        UNTIL ESObjectInfoTmp.NEXT = 0;

      IF NewPermissions = 0 THEN
        ERROR(Text019,ExistingPermissions);

      IF NOT CONFIRM(Text020,FALSE,NewPermissions,"Role ID") THEN
        ERROR(Text021);

      ESObjectInfoTmp.FIND('-');
      REPEAT
        IF NOT ESRoleBuilderPerm.GET("Role ID",ESObjectInfoTmp."Object Type",ESObjectInfoTmp."Object ID") THEN BEGIN
          ESRoleBuilderPerm.INIT;
          ESRoleBuilderPerm."Role ID" := "Role ID";
          ESRoleBuilderPerm."Object Type" := ESObjectInfoTmp."Object Type";
          ESRoleBuilderPerm."Object ID" := ESObjectInfoTmp."Object ID";
          ESRoleBuilderPerm.Origin := ESRoleBuilderPerm.Origin::"Object Information";
          ESRoleBuilderPerm.INSERT(TRUE);

          AddedPermissions := AddedPermissions + 1;
        END;
      UNTIL ESObjectInfoTmp.NEXT = 0;

      MESSAGE(Text022,AddedPermissions);
    END;

    PROCEDURE AddPermsFromRelation@1240520015();
    VAR
      ESRelationTmp@1240520008 : TEMPORARY Record 14123601;
      ESRoleBuilderPerm@1240520012 : Record 14123655;
      ESRelationsForm@1240520009 : Page 14123601;
      ExistingPermissions@1240520010 : Integer;
      NewPermissions@1240520011 : Integer;
      AddedPermissions@1240520013 : Integer;
    BEGIN
      CLEAR(ESRelationsForm);
      ESRelationsForm.LOOKUPMODE(TRUE);
      IF ESRelationsForm.RUNMODAL <> ACTION::LookupOK THEN
        EXIT;

      ESRelationTmp.RESET;
      ESRelationTmp.DELETEALL;

      ESRelationsForm.GetSelection(ESRelationTmp);

      ExistingPermissions := 0;
      NewPermissions := 0;
      IF ESRelationTmp.FIND('-') THEN
        REPEAT
          IF ESRoleBuilderPerm.GET("Role ID",ESRelationTmp."Object Type",ESRelationTmp."Object ID") THEN
            ExistingPermissions := ExistingPermissions + 1
          ELSE
            NewPermissions := NewPermissions + 1;
        UNTIL ESRelationTmp.NEXT = 0;

      IF NewPermissions = 0 THEN
        ERROR(Text019,ExistingPermissions);

      IF NOT CONFIRM(Text020,FALSE,NewPermissions,"Role ID") THEN
        ERROR(Text021);

      ESRelationTmp.FIND('-');
      REPEAT
        IF NOT ESRoleBuilderPerm.GET("Role ID",ESRelationTmp."Object Type",ESRelationTmp."Object ID") THEN BEGIN
          ESRoleBuilderPerm.INIT;
          ESRoleBuilderPerm."Role ID" := "Role ID";
          ESRoleBuilderPerm."Object Type" := ESRelationTmp."Object Type";
          ESRoleBuilderPerm."Object ID" := ESRelationTmp."Object ID";
          ESRoleBuilderPerm.Origin := ESRoleBuilderPerm.Origin::Relation;
          ESRoleBuilderPerm.INSERT(TRUE);

          AddedPermissions := AddedPermissions + 1;
        END;
      UNTIL ESRelationTmp.NEXT = 0;

      MESSAGE(Text022,AddedPermissions);
    END;

    PROCEDURE CopyFromRoleDetail@1240520017(ShowStatus@1240520006 : Boolean);
    VAR
      ESRoleDetail@1240520010 : Record 14123653;
      ESRoleBuilderPerm@1240520008 : Record 14123655;
      ESRoleBuilderPerm2@1240520009 : Record 14123655;
      ESRoleRecording@1240520002 : Record 14123654;
      ESRoleRecording2@1240520003 : Record 14123654;
      ESRole@1240520001 : Record 14123505;
      AddedPerms@1240520011 : Integer;
      ExistingPerms@1240520012 : Integer;
      ModifiedPerms@1240520014 : Integer;
      AddedRecordings@1240520004 : Integer;
      ExistingRecordings@1240520005 : Integer;
      ModifyRecord@1240520013 : Boolean;
    BEGIN
      ESRole.GET("Role ID");
      IF PAGE.RUNMODAL(0,ESRoleDetail) <> ACTION::LookupOK THEN
        ERROR(Text023);

      AddedPerms := 0;
      ExistingPerms := 0;
      ModifiedPerms := 0;
      ESRoleBuilderPerm.RESET;
      ESRoleBuilderPerm.SETRANGE("Role ID",ESRoleDetail."Role ID");
      IF ESRoleBuilderPerm.FIND('-') THEN
        REPEAT
          IF NOT ESRoleBuilderPerm2.GET("Role ID",ESRoleBuilderPerm."Object Type",ESRoleBuilderPerm."Object ID")
          THEN BEGIN
            ESRoleBuilderPerm2 := ESRoleBuilderPerm;
            ESRoleBuilderPerm2."Role ID" := "Role ID";
            ESRoleBuilderPerm2.Origin := ESRoleBuilderPerm2.Origin::Copied;
            ESRoleBuilderPerm2.INSERT(TRUE);

            AddedPerms := AddedPerms + 1;
          END ELSE BEGIN
            IF ESRoleBuilderPerm."To Object ID" <> ESRoleBuilderPerm2."To Object ID" THEN
              IF ESRoleBuilderPerm."To Object ID" <> 0 THEN
                ESRoleBuilderPerm.TESTFIELD("To Object ID",0)
              ELSE
                ESRoleBuilderPerm2.TESTFIELD("To Object ID",0);

            IF FORMAT(ESRoleBuilderPerm."Security Filter") <>
               FORMAT(ESRoleBuilderPerm2."Security Filter")
            THEN
              ERROR(Text051,ESRoleBuilderPerm."Object Type",ESRoleBuilderPerm."Object ID");

            IF ESRoleBuilderPerm."Do not include Additional" <>
               ESRoleBuilderPerm2."Do not include Additional"
            THEN
              IF ESRoleBuilderPerm."Do not include Additional" THEN
                ESRoleBuilderPerm.TESTFIELD("Do not include Additional",FALSE)
              ELSE
                ESRoleBuilderPerm2.TESTFIELD("Do not include Additional",FALSE);

            IF ESRoleBuilderPerm."Extend Insert Permissions" <>
               ESRoleBuilderPerm2."Extend Insert Permissions"
            THEN
              IF ESRoleBuilderPerm."Extend Insert Permissions" THEN
                ESRoleBuilderPerm.TESTFIELD("Extend Insert Permissions",FALSE)
              ELSE
                ESRoleBuilderPerm2.TESTFIELD("Extend Insert Permissions",FALSE);

            IF ESRoleBuilderPerm."Add Related Permissions" <>
               ESRoleBuilderPerm2."Add Related Permissions"
            THEN
              IF ESRoleBuilderPerm."Add Related Permissions" THEN
                ESRoleBuilderPerm.TESTFIELD("Add Related Permissions",FALSE)
              ELSE
                ESRoleBuilderPerm2.TESTFIELD("Add Related Permissions",FALSE);

            IF ESRoleBuilderPerm."Role for Both Clients" <>
               ESRoleBuilderPerm2."Role for Both Clients"
            THEN
              IF ESRoleBuilderPerm."Role for Both Clients" THEN
                ESRoleBuilderPerm.TESTFIELD("Role for Both Clients",FALSE)
              ELSE
                ESRoleBuilderPerm2.TESTFIELD("Role for Both Clients",FALSE);

            IF ESRoleBuilderPerm."Override Permission" <>
               ESRoleBuilderPerm2."Override Permission"
            THEN
              IF ESRoleBuilderPerm."Override Permission" THEN
                ESRoleBuilderPerm.TESTFIELD("Override Permission",FALSE)
              ELSE
                ESRoleBuilderPerm2.TESTFIELD("Override Permission",FALSE);

            ModifyRecord := FALSE;

            IF ((ESRoleBuilderPerm."Read Permission" = ESRoleBuilderPerm."Read Permission"::Yes) AND
                (ESRoleBuilderPerm2."Read Permission" <> ESRoleBuilderPerm2."Read Permission"::Yes)) OR
               ((ESRoleBuilderPerm."Read Permission" = ESRoleBuilderPerm."Read Permission"::Indirect) AND
                (ESRoleBuilderPerm2."Read Permission" = ESRoleBuilderPerm2."Read Permission"::" "))
            THEN BEGIN
              ESRoleBuilderPerm2."Read Permission" := ESRoleBuilderPerm."Read Permission";

              ModifyRecord := TRUE;
            END;

            IF ((ESRoleBuilderPerm."Insert Permission" = ESRoleBuilderPerm."Insert Permission"::Yes) AND
                (ESRoleBuilderPerm2."Insert Permission" <> ESRoleBuilderPerm2."Insert Permission"::Yes)) OR
               ((ESRoleBuilderPerm."Insert Permission" = ESRoleBuilderPerm."Insert Permission"::Indirect) AND
                (ESRoleBuilderPerm2."Insert Permission" = ESRoleBuilderPerm2."Insert Permission"::" "))
            THEN BEGIN
              ESRoleBuilderPerm2."Insert Permission" := ESRoleBuilderPerm."Insert Permission";

              ModifyRecord := TRUE;
            END;

            IF ((ESRoleBuilderPerm."Modify Permission" = ESRoleBuilderPerm."Modify Permission"::Yes) AND
                (ESRoleBuilderPerm2."Modify Permission" <> ESRoleBuilderPerm2."Modify Permission"::Yes)) OR
               ((ESRoleBuilderPerm."Modify Permission" = ESRoleBuilderPerm."Modify Permission"::Indirect) AND
                (ESRoleBuilderPerm2."Modify Permission" = ESRoleBuilderPerm2."Modify Permission"::" "))
            THEN BEGIN
              ESRoleBuilderPerm2."Modify Permission" := ESRoleBuilderPerm."Modify Permission";

              ModifyRecord := TRUE;
            END;

            IF ((ESRoleBuilderPerm."Delete Permission" = ESRoleBuilderPerm."Delete Permission"::Yes) AND
                (ESRoleBuilderPerm2."Delete Permission" <> ESRoleBuilderPerm2."Delete Permission"::Yes)) OR
               ((ESRoleBuilderPerm."Delete Permission" = ESRoleBuilderPerm."Delete Permission"::Indirect) AND
                (ESRoleBuilderPerm2."Delete Permission" = ESRoleBuilderPerm2."Delete Permission"::" "))
            THEN BEGIN
              ESRoleBuilderPerm2."Delete Permission" := ESRoleBuilderPerm."Delete Permission";

              ModifyRecord := TRUE;
            END;

            IF ((ESRoleBuilderPerm."Execute Permission" = ESRoleBuilderPerm."Execute Permission"::Yes) AND
                (ESRoleBuilderPerm2."Execute Permission" <> ESRoleBuilderPerm2."Execute Permission"::Yes)) OR
               ((ESRoleBuilderPerm."Execute Permission" = ESRoleBuilderPerm."Execute Permission"::Indirect) AND
                (ESRoleBuilderPerm2."Execute Permission" = ESRoleBuilderPerm2."Execute Permission"::" "))
            THEN BEGIN
              ESRoleBuilderPerm2."Execute Permission" := ESRoleBuilderPerm."Execute Permission";

              ModifyRecord := TRUE;
            END;

            IF ModifyRecord THEN BEGIN
              ESRoleBuilderPerm2.MODIFY(TRUE);

              ModifiedPerms := ModifiedPerms + 1;
            END ELSE
              ExistingPerms := ExistingPerms + 1;
          END;
        UNTIL ESRoleBuilderPerm.NEXT = 0;

      AddedRecordings := 0;
      ExistingRecordings := 0;
      ESRoleRecording.RESET;
      ESRoleRecording.SETRANGE("Role ID",ESRoleDetail."Role ID");
      IF ESRoleRecording.FIND('-') THEN
        REPEAT
          IF NOT ESRoleRecording2.GET("Role ID",ESRoleRecording."Recording Code") THEN BEGIN
            ESRoleRecording2 := ESRoleRecording;
            ESRoleRecording2."Role ID" := "Role ID";
            ESRoleRecording2.INSERT(TRUE);

            AddedRecordings := AddedRecordings + 1;
          END ELSE
            ExistingRecordings := ExistingRecordings + 1;
        UNTIL ESRoleRecording.NEXT = 0;

      IF ShowStatus THEN
        MESSAGE(
          STRSUBSTNO(Text024,AddedPerms,ESRoleBuilderPerm.TABLECAPTION,ModifiedPerms,ExistingPerms) +
          '\' +
          STRSUBSTNO(Text050,AddedRecordings,ESRoleRecording.TABLECAPTION,ExistingRecordings));
      ESRole.Comment(
        1,
        STRSUBSTNO(Text024,AddedPerms,ESRoleBuilderPerm.TABLECAPTION,ModifiedPerms,ExistingPerms) +
        ' ' +
        STRSUBSTNO(Text050,AddedRecordings,ESRoleRecording.TABLECAPTION,ExistingRecordings));
    END;

    PROCEDURE UpdateAllBuiltRoles@1240520009(ShowStatus@1240520012 : Boolean;WriteToLive@1240520013 : Boolean);
    VAR
      ESMgt@1240520010 : Codeunit 14123501;
      ESRoleRecordingMgt@1240520008 : Codeunit 14123651;
    BEGIN
      CLEAR(ESMgt);

      IF WriteToLive THEN
        ESMgt.TestSUPERUser('');

      ESRoleRecordingMgt.UpdateAllRolesFromRoleDetails(TRUE);

      IF WriteToLive THEN
        ESMgt.ES2Live(ShowStatus,Text025,FALSE,FALSE,TRUE,TRUE);
    END;

    PROCEDURE UpdateExistsInParentRole@1240520001(ShowStatus@1240520001 : Boolean) : Integer;
    VAR
      ESRoleDetail@1240520004 : Record 14123653;
      ESRole@1240520008 : Record 14123505;
      ESRolePerm@1240520002 : Record 14123506;
      ESRolePerm2@1240520006 : Record 14123506;
      ESRolePermParent@1240520003 : Record 14123506;
      ModifiedRecords@1240520007 : Integer;
      Finished@1240520005 : Boolean;
    BEGIN
      TESTFIELD("Parent Role ID");

      IF NOT ESRoleDetail.GET("Parent Role ID") THEN
        IF ESRole.GET("Parent Role ID") THEN BEGIN
          ESRoleDetail.INIT;
          ESRoleDetail."Role ID" := ESRole."Role ID";
        END ELSE
          ESRoleDetail.GET("Parent Role ID");

      ESRolePerm.RESET;
      ESRolePerm.SETRANGE("Role ID","Role ID");
      ESRolePerm.SETRANGE("Exists in Parent Role",TRUE);
      IF ESRolePerm.FIND('-') THEN
        REPEAT
          ESRolePerm2 := ESRolePerm;
          ESRolePerm2."Exists in Parent Role" := FALSE;
          ESRolePerm2.MODIFY;
        UNTIL ESRolePerm.NEXT = 0;

      REPEAT
        ESRolePerm.RESET;
        ESRolePerm.SETRANGE("Role ID","Role ID");
        ESRolePerm.SETRANGE("Exists in Parent Role",FALSE);
        IF ESRolePerm.FIND('-') THEN
          REPEAT
            IF ESRolePermParent.GET(
                 ESRoleDetail."Role ID",ESRolePerm."Object Type",ESRolePerm."Object ID")
            THEN
              IF ESRolePerm.RoleLessThanOrEqual(ESRolePermParent) THEN BEGIN
                ModifiedRecords := ModifiedRecords + 1;

                ESRolePerm2 := ESRolePerm;
                ESRolePerm2."Exists in Parent Role" := TRUE;
                ESRolePerm2.MODIFY;
              END;
          UNTIL ESRolePerm.NEXT = 0;

        IF ESRoleDetail."Parent Role ID" <> '' THEN BEGIN
          IF NOT ESRoleDetail.GET(ESRoleDetail."Parent Role ID") THEN
            IF ESRole.GET(ESRoleDetail."Parent Role ID") THEN BEGIN
              ESRoleDetail.INIT;
              ESRoleDetail."Role ID" := ESRole."Role ID";
            END ELSE
              ESRoleDetail.GET(ESRoleDetail."Parent Role ID");

          IF ESRoleDetail."Parent Role ID" <> '' THEN
            IF "Role ID" = ESRoleDetail."Parent Role ID" THEN
              ERROR(Text001,FIELDCAPTION("Parent Role ID"),TABLECAPTION,"Role ID");
        END ELSE
          Finished := TRUE;
      UNTIL Finished;

      IF ShowStatus THEN
        MESSAGE(Text002,ModifiedRecords);

      EXIT(ModifiedRecords);
    END;

    PROCEDURE ExportMultipleRoleDetails@1240520002(VAR ESRoleDetail@1240520004 : Record 14123653;ShowStatus@1240520021 : Boolean;ExportFileName@1240520001 : Text[250]);
    VAR
      ESEnterFileName@1240520002 : Page 14123560;
      FileMgt@1003 : Codeunit 419;
      TempServerFile@1000 : File;
      Window@1001 : Dialog;
      TempServerFileName@1002 : Text[1000];
      TotalRecords@1240520008 : Integer;
      TotalCodes@1240520003 : Integer;
    BEGIN
      IF ExportFileName = '' THEN BEGIN
        CLEAR(ESEnterFileName);
        ESEnterFileName.LOOKUPMODE(TRUE);
        ESEnterFileName.SelectNewFile(TRUE);
        IF ESEnterFileName.RUNMODAL <> ACTION::LookupOK THEN
          ERROR(Text029);
        ExportFileName := ESEnterFileName.GetFileName;
      END;

      TempServerFile.WRITEMODE(TRUE);
      TempServerFile.TEXTMODE(TRUE);
      TempServerFile.CREATETEMPFILE;
      TempServerFileName := TempServerFile.NAME;
      TempServerFile.CLOSE;

      IF GUIALLOWED THEN
        Window.OPEN(Text006);

      IF ESRoleDetail.FIND('-') THEN
        REPEAT
          IF GUIALLOWED THEN
            Window.UPDATE(1,ESRoleDetail."Role ID");

          TotalCodes := TotalCodes + 1;

          TotalRecords :=
            TotalRecords + ESRoleDetail.ExportRoleDetail(FALSE,TRUE,TRUE,TempServerFileName,FALSE);
        UNTIL ESRoleDetail.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text101);
      FileMgt.DownloadToFile(TempServerFileName,ExportFileName);

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(
          Text027,
          TotalCodes,TABLECAPTION,ExportFileName,TotalRecords);
    END;

    PROCEDURE ExportRoleDetail@1240520014(ShowStatus@1240520021 : Boolean;ConfirmOverwrite@1240520020 : Boolean;AppendToFile@1240520001 : Boolean;ExportFileName@1240520002 : Text[250];ShowProgress@1240520004 : Boolean) : Integer;
    VAR
      ESRoleRecording@1240520012 : Record 14123654;
      ESRoleBuilderPerm@1240520014 : Record 14123655;
      ESRecording@1240520010 : Record 14123651;
      ESRecordingTmp@1240520013 : TEMPORARY Record 14123651;
      ESRecordingPerm@1240520011 : Record 14123652;
      FileMgt@1000 : Codeunit 419;
      ESEnterFileName@1240520003 : Page 14123560;
      Window@1240520009 : Dialog;
      OutputFile@1240520019 : File;
      Value@1240520022 : ARRAY [100] OF Text[1000];
      LocalFileName@1001 : Text[1000];
      TotalRecords@1240520008 : Integer;
    BEGIN
      IF NOT AppendToFile THEN BEGIN
        IF ExportFileName = '' THEN BEGIN
          CLEAR(ESEnterFileName);
          ESEnterFileName.LOOKUPMODE(TRUE);
          ESEnterFileName.SelectNewFile(TRUE);
          IF ESEnterFileName.RUNMODAL <> ACTION::LookupOK THEN
            ERROR(Text029);
          ExportFileName := ESEnterFileName.GetFileName;
        END;

        IF ConfirmOverwrite THEN
          IF EXISTS(ExportFileName) THEN
            IF NOT CONFIRM(Text003,FALSE,ExportFileName) THEN
              ERROR(Text004);

        LocalFileName := ExportFileName;
        OutputFile.WRITEMODE(TRUE);
        OutputFile.TEXTMODE(TRUE);
        OutputFile.CREATETEMPFILE;
        ExportFileName := OutputFile.NAME;
        OutputFile.CLOSE;
      END;

      IF GUIALLOWED AND ShowProgress THEN
        Window.OPEN(STRSUBSTNO(ESSecuritySetup.ExtendProgressText(Text005),TABLECAPTION) + Text006);

      IF GUIALLOWED AND ShowProgress THEN
        Window.UPDATE(1,Text007);
      "Exported Date Time" := CREATEDATETIME(TODAY,TIME);
      MODIFY(TRUE);

      IF GUIALLOWED AND ShowProgress THEN
        Window.UPDATE(1,Text008);
      OutputFile.WRITEMODE(TRUE);
      OutputFile.TEXTMODE(TRUE);
      IF EXISTS(ExportFileName) AND AppendToFile THEN BEGIN
        OutputFile.OPEN(ExportFileName);
        OutputFile.SEEK(OutputFile.LEN);
      END ELSE
        OutputFile.CREATE(ExportFileName);

      CLEAR(ESFileMgt);
      ESFileMgt.SetDelimiters('~"','"~',',');

      IF GUIALLOWED AND ShowProgress THEN
        Window.UPDATE(1,'HEADER');
      Value[1] := ESFileMgt.FormatInteger(0) +'V1';
      Value[2] := 'HEADER';
      Value[3] := "Role ID";
      Value[4] := Description;
      Value[5] := USERID;
      Value[6] := ESFileMgt.FormatDate(TODAY);
      Value[7] := ESFileMgt.FormatTime(TIME);
      OutputFile.WRITE(ESFileMgt.FormatValues(Value,7));

      Value[1] := ESFileMgt.FormatInteger(DATABASE::"ES Role Detail") + 'V5';
      Value[2] := "Role ID";
      Value[3] := "Role Name";
      Value[4] := Description;
      Value[5] := "File Name";
      Value[6] := "Created By User";
      Value[7] := ESFileMgt.FormatDateTime("Created Date Time");
      Value[8] := ESFileMgt.FormatBoolean("Remove ALL Permissions");
      Value[9] := ESFileMgt.FormatBoolean("Remove BASIC Permissions");
      Value[10] := "Parent Role ID";
      Value[11] := "Form/Page Filter";
      Value[12] := ESFileMgt.FormatBoolean("Include Menu Items");
      Value[13] := ESFileMgt.FormatBoolean("Only Classic Client Recording");
      Value[14] := "Report Filter";
      Value[15] := ESFileMgt.FormatBoolean("Only Form/Page relations");
      Value[16] := "Role Group ID";

      OutputFile.WRITE(ESFileMgt.FormatValues(Value,16));

      TotalRecords := TotalRecords + 1;

      ESRoleBuilderPerm.RESET;
      ESRoleBuilderPerm.SETRANGE("Role ID","Role ID");
      IF ESRoleBuilderPerm.FIND('-') THEN
        REPEAT
          Value[1] := ESFileMgt.FormatInteger(DATABASE::"ES Role Builder Permission") + 'V2';
          Value[2] := ESRoleBuilderPerm."Role ID";
          Value[3] := ESFileMgt.FormatInteger(ESRoleBuilderPerm."Object Type");
          Value[4] := ESFileMgt.FormatInteger(ESRoleBuilderPerm."Object ID");
          Value[5] := ESFileMgt.FormatInteger(ESRoleBuilderPerm."Read Permission");
          Value[6] := ESFileMgt.FormatInteger(ESRoleBuilderPerm."Insert Permission");
          Value[7] := ESFileMgt.FormatInteger(ESRoleBuilderPerm."Modify Permission");
          Value[8] := ESFileMgt.FormatInteger(ESRoleBuilderPerm."Delete Permission");
          Value[9] := ESFileMgt.FormatInteger(ESRoleBuilderPerm."Execute Permission");
          Value[10] := FORMAT(ESRoleBuilderPerm."Security Filter");
          Value[11] := ESFileMgt.FormatInteger(ESRoleBuilderPerm.Origin);
          Value[12] := ESFileMgt.FormatBoolean(ESRoleBuilderPerm."Do not include Additional");
          Value[13] := ESFileMgt.FormatBoolean(ESRoleBuilderPerm."Extend Insert Permissions");
          Value[14] := ESFileMgt.FormatBoolean(ESRoleBuilderPerm."Add Related Permissions");
          Value[15] := ESFileMgt.FormatBoolean(ESRoleBuilderPerm."Role for Both Clients");
          Value[16] := ESRoleBuilderPerm."Created By User";
          Value[17] := ESFileMgt.FormatDateTime(ESRoleBuilderPerm."Created Date Time");
          Value[18] := ESFileMgt.FormatInteger(ESRoleBuilderPerm."To Object ID");
          Value[19] := ESFileMgt.FormatBoolean(ESRoleBuilderPerm."Override Permission");
          OutputFile.WRITE(ESFileMgt.FormatValues(Value,19));

          TotalRecords := TotalRecords + 1;
        UNTIL ESRoleBuilderPerm.NEXT = 0;

      ESRoleRecording.RESET;
      ESRoleRecording.SETRANGE("Role ID","Role ID");
      IF ESRoleRecording.FIND('-') THEN
        REPEAT
          ESRecording.GET(ESRoleRecording."Recording Code");
          ESRecordingTmp := ESRecording;
          ESRecordingTmp.INSERT;
        UNTIL ESRoleRecording.NEXT = 0;

      IF ESRecordingTmp.FIND('-') THEN
        REPEAT
          ESRecording.GET(ESRecordingTmp.Code);
          Value[1] := ESFileMgt.FormatInteger(DATABASE::"ES Recording") + 'V2';
          Value[2] := ESRecording.Code;
          Value[3] := ESRecording.Description;
          Value[4] := ESRecording."Recorded by User";
          Value[5] := ESFileMgt.FormatDateTime(ESRecording."Start Date Time");
          Value[6] := ESFileMgt.FormatDateTime(ESRecording."End Date Time");
          Value[7] := ESRecording."File Name";
          Value[8] := ESFileMgt.FormatBoolean(ESRecording."Extend Insert Permissions");
          Value[9] := ESFileMgt.FormatBoolean(ESRecording."Add Related Permissions");
          Value[10] := ESFileMgt.FormatBoolean(ESRecording."Role for Both Clients");
          Value[11] := ESRecording."SQL Profiler Trace File Name";
          OutputFile.WRITE(ESFileMgt.FormatValues(Value,11));

          TotalRecords := TotalRecords + 1;

          ESRecordingPerm.RESET;
          ESRecordingPerm.SETRANGE("Recording Code",ESRecording.Code);
          IF ESRecordingPerm.FIND('-') THEN
            REPEAT
              Value[1] := ESFileMgt.FormatInteger(DATABASE::"ES Recording Permission") + 'V1';
              Value[2] := ESRecordingPerm."Recording Code";
              Value[3] := ESFileMgt.FormatInteger(ESRecordingPerm."Object Type");
              Value[4] := ESFileMgt.FormatInteger(ESRecordingPerm."Object ID");
              Value[5] := ESFileMgt.FormatBoolean(ESRecordingPerm."Read Required");
              Value[6] := ESFileMgt.FormatBoolean(ESRecordingPerm."Insert Required");
              Value[7] := ESFileMgt.FormatBoolean(ESRecordingPerm."Modify Required");
              Value[8] := ESFileMgt.FormatBoolean(ESRecordingPerm."Delete Required");
              Value[9] := ESFileMgt.FormatBoolean(ESRecordingPerm."Execute Required");
              Value[10] := ESFileMgt.FormatInteger(ESRecordingPerm.Origin);
              Value[11] := ESFileMgt.FormatBoolean(ESRecordingPerm."Do not include Additional");
              Value[12] := ESRecordingPerm."Created By User";
              Value[13] := ESFileMgt.FormatDateTime(ESRecordingPerm."Created Date Time");
              Value[14] := ESFileMgt.FormatBoolean(ESRecordingPerm."Calculate Flowfield Required");
              OutputFile.WRITE(ESFileMgt.FormatValues(Value,14));

              TotalRecords := TotalRecords + 1;
            UNTIL ESRecordingPerm.NEXT = 0;
        UNTIL ESRecordingTmp.NEXT = 0;

      ESRoleRecording.RESET;
      ESRoleRecording.SETRANGE("Role ID","Role ID");
      IF ESRoleRecording.FIND('-') THEN
        REPEAT
          Value[1] := ESFileMgt.FormatInteger(DATABASE::"ES Role Recording") + 'V1';
          Value[2] := ESRoleRecording."Role ID";
          Value[3] := ESRoleRecording."Recording Code";
          Value[4] := ESFileMgt.FormatBoolean(ESRoleRecording."Extend Insert Permissions");
          Value[5] := ESFileMgt.FormatBoolean(ESRoleRecording."Add Related Permissions");
          Value[6] := ESFileMgt.FormatBoolean(ESRoleRecording."Role for Both Clients");
          Value[7] := ESRoleRecording."Created By User";
          Value[8] := ESFileMgt.FormatDateTime(ESRoleRecording."Created Date Time");
          OutputFile.WRITE(ESFileMgt.FormatValues(Value,8));

          TotalRecords := TotalRecords + 1;
        UNTIL ESRoleRecording.NEXT = 0;

      IF GUIALLOWED AND ShowProgress THEN
        Window.UPDATE(1,'TOTALS');
      Value[1] := ESFileMgt.FormatInteger(0) + 'V1';
      Value[2] := 'TOTALS';
      Value[3] := "Role ID";
      Value[4] := Description;
      Value[5] := USERID;
      Value[6] := ESFileMgt.FormatDate(TODAY);
      Value[7] := ESFileMgt.FormatTime(TIME);
      Value[8] := ESFileMgt.FormatInteger(TotalRecords);
      OutputFile.WRITE(ESFileMgt.FormatValues(Value,8));

      IF GUIALLOWED AND ShowProgress THEN
        Window.UPDATE(1,Text011);
      OutputFile.CLOSE;

      IF NOT AppendToFile THEN BEGIN
        IF GUIALLOWED AND ShowProgress THEN
          Window.UPDATE(1,Text101);
        FileMgt.DownloadToFile(ExportFileName,LocalFileName);
      END;

      IF GUIALLOWED AND ShowProgress THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(
          Text012,
          "Role ID",ExportFileName,TotalRecords);

      EXIT(TotalRecords);
    END;

    PROCEDURE ImportRoleDetail@1240520013(ShowStatus@1240520011 : Boolean;ImportFileName@1240520018 : Text[250];OverWriteExisting@1240520001 : Boolean;AddNewRecordings@1240520007 : Boolean);
    VAR
      ESRecording@1240520013 : Record 14123651;
      ESRecording2@1240520002 : Record 14123651;
      ESRecordingTmp@1240520005 : TEMPORARY Record 14123651;
      ESRecordingNewTmp@1240520024 : TEMPORARY Record 14123651;
      ESRecordingPerm@1240520014 : Record 14123652;
      ESRecordingPerm2@1240520006 : Record 14123652;
      ESRoleDetail@1240520015 : Record 14123653;
      ESRoleDetail2@1240520004 : Record 14123653;
      ESRole@1240520003 : Record 14123505;
      ESRoleRecording@1240520016 : Record 14123654;
      ESRoleRecording2@1240520020 : Record 14123654;
      ESRoleBuilderPerm@1240520017 : Record 14123655;
      ESRoleBuilderPerm2@1240520026 : Record 14123655;
      ESEnterFileName@1240520019 : Page 14123560;
      FileMgt@1000 : Codeunit 419;
      InputFile@1240520009 : File;
      Window@1240520012 : Dialog;
      TempText@1240520010 : Text[1000];
      Value@1240520008 : ARRAY [100] OF Text[1000];
      ServerFileName@1001 : Text[1000];
      NextUpdatePos@1240520022 : Integer;
      TotalRecords@1240520023 : Integer;
      NewRecording@1240520021 : Boolean;
      ExistingRole@1240520025 : Boolean;
    BEGIN
      IF ImportFileName = '' THEN BEGIN
        CLEAR(ESEnterFileName);
        ESEnterFileName.LOOKUPMODE(TRUE);
        IF ESEnterFileName.RUNMODAL <> ACTION::LookupOK THEN
          ERROR(Text013);
        ImportFileName := ESEnterFileName.GetFileName;
      END;

      IF ImportFileName = '' THEN
        ERROR(Text014);

      ESSecuritySetup.GET;

      IF GUIALLOWED THEN
        Window.OPEN(
          STRSUBSTNO(ESSecuritySetup.ExtendProgressText(Text015),TABLECAPTION) +
          Text016 + '        @2@@@@@@@@@@@@@@@@@@@@@@@@@@@@');

      CLEAR(ESFileMgt);
      ESFileMgt.SetDelimiters('~"','"~',',');

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text017);
      InputFile.WRITEMODE(FALSE);
      InputFile.TEXTMODE(TRUE);
      IF NOT InputFile.OPEN(ImportFileName) THEN BEGIN
        IF GUIALLOWED THEN
          Window.UPDATE(1,Text102);
        ServerFileName := FileMgt.UploadFileSilent(ImportFileName);
        IF GUIALLOWED THEN
          Window.UPDATE(1,Text017);

        IF NOT InputFile.OPEN(ServerFileName) THEN
          InputFile.OPEN(ImportFileName);
      END;
      WHILE InputFile.POS < InputFile.LEN DO BEGIN
        IF NextUpdatePos < InputFile.POS THEN BEGIN
          IF GUIALLOWED THEN
            Window.UPDATE(2,ROUND(10000 * (InputFile.POS / InputFile.LEN),1));
          NextUpdatePos := ROUND(InputFile.POS + InputFile.LEN / 500,1);
        END;

        InputFile.READ(TempText);
        ESFileMgt.SplitInValues(Value,TempText);

        CASE Value[1] OF
          '','0V1':
            ;
          '14123651V1','14123651V2':
            BEGIN
              IF NOT ESRecordingTmp.GET(Value[2]) THEN BEGIN
                ESRecording.INIT;
                ESRecording.Code := Value[2];
                ESRecording.Description := Value[3];
                ESRecording."Recorded by User" := Value[4];
                ESRecording."Start Date Time" := ESFileMgt.EvaluateDateTime(Value[5]);
                ESRecording."End Date Time" := ESFileMgt.EvaluateDateTime(Value[6]);
                ESRecording."File Name" := Value[7];
                ESRecording."Extend Insert Permissions" := ESFileMgt.EvaluateBoolean(Value[8]);
                ESRecording."Add Related Permissions" := ESFileMgt.EvaluateBoolean(Value[9]);
                ESRecording."Role for Both Clients" := ESFileMgt.EvaluateBoolean(Value[10]);
                IF Value[1] <> '14123651V1' THEN
                  ESRecording."SQL Profiler Trace File Name" := Value[11];
                ESRecording.ChangeDoNotSetDefault(TRUE);

                IF OverWriteExisting AND ESRecording2.GET(ESRecording.Code) THEN BEGIN
                  ESRecording2.Comment(1,Text032);
                  ESRecording2.DELETE;

                  ESRecordingPerm.RESET;
                  ESRecordingPerm.SETRANGE("Recording Code",ESRecording2.Code);
                  ESRecordingPerm.DELETEALL;
                END;

                IF AddNewRecordings THEN BEGIN
                  IF NOT ESRecording2.GET(ESRecording.Code) THEN
                    ESRecording.INSERT(TRUE);

                  ESRecordingNewTmp := ESRecording;
                  ESRecordingNewTmp.INSERT;
                END ELSE
                  ESRecording.INSERT(TRUE);

                ESRecordingTmp := ESRecording;
                ESRecordingTmp.INSERT;
              END;

              TotalRecords := TotalRecords + 1;
            END;
          '14123652V1':
            BEGIN
              IF NOT AddNewRecordings OR ESRecordingNewTmp.GET(Value[2]) THEN BEGIN
                ESRecordingPerm.INIT;
                ESRecordingPerm.SetAllowZeroNoQuestion(TRUE,NOT ESSecuritySetup."Detailed Comments");
                ESRecordingPerm."Recording Code" := Value[2];
                ESRecordingPerm."Object Type" := ESFileMgt.EvaluateInteger(Value[3]);
                ESRecordingPerm."Object ID" := ESFileMgt.EvaluateInteger(Value[4]);
                ESRecordingPerm."Read Required" := ESFileMgt.EvaluateBoolean(Value[5]);
                ESRecordingPerm."Insert Required" := ESFileMgt.EvaluateBoolean(Value[6]);
                ESRecordingPerm."Modify Required" := ESFileMgt.EvaluateBoolean(Value[7]);
                ESRecordingPerm."Delete Required" := ESFileMgt.EvaluateBoolean(Value[8]);
                ESRecordingPerm."Execute Required" := ESFileMgt.EvaluateBoolean(Value[9]);
                ESRecordingPerm.Origin := ESFileMgt.EvaluateInteger(Value[10]);
                ESRecordingPerm."Do not include Additional" := ESFileMgt.EvaluateBoolean(Value[11]);
                ESRecordingPerm."Created By User" := Value[12];
                ESRecordingPerm."Created Date Time" := ESFileMgt.EvaluateDateTime(Value[13]);
                ESRecordingPerm."Calculate Flowfield Required" := ESFileMgt.EvaluateBoolean(Value[14]);

                IF NOT ESRecordingPerm2.GET(
                         ESRecordingPerm."Recording Code",ESRecordingPerm."Object Type",
                         ESRecordingPerm."Object ID")
                THEN
                  ESRecordingPerm.INSERT(TRUE);
              END;

              TotalRecords := TotalRecords + 1;
            END;
          '14123653V1','14123653V2','14123653V3','14123653V4','14123653V5':
            BEGIN
              IF GUIALLOWED THEN
                Window.UPDATE(1,Value[2]);

              ESRoleDetail.INIT;
              ESRoleDetail."Role ID" := Value[2];
              ESRoleDetail."Role Name" := Value[3];
              ESRoleDetail.Description := Value[4];
              ESRoleDetail."File Name" := Value[5];
              ESRoleDetail."Created By User" := Value[6];
              ESRoleDetail."Created Date Time" := ESFileMgt.EvaluateDateTime(Value[7]);
              ESRoleDetail."Remove ALL Permissions" := ESFileMgt.EvaluateBoolean(Value[8]);
              ESRoleDetail."Remove BASIC Permissions" := ESFileMgt.EvaluateBoolean(Value[9]);
              IF Value[1] <> '14123653V1' THEN BEGIN
                ESRoleDetail."Parent Role ID" := Value[10];
                IF Value[1] <> '14123653V2' THEN BEGIN
                  ESRoleDetail."Form/Page Filter" := Value[11];
                  ESRoleDetail."Include Menu Items" := ESFileMgt.EvaluateBoolean(Value[12]);
                  ESRoleDetail."Only Classic Client Recording" := ESFileMgt.EvaluateBoolean(Value[13]);
                  ESRoleDetail."Report Filter" := Value[14];
                  IF Value[1] <> '14123653V3' THEN BEGIN
                    ESRoleDetail."Only Form/Page relations" := ESFileMgt.EvaluateBoolean(Value[15]);
                    IF Value[1] <> '14123653V4' THEN BEGIN
                      ESRoleDetail."Role Group ID" := Value[16];
                    END;
                  END;
                END;
              END;

              ESRoleDetail."File Name" := ImportFileName;
              ESRoleDetail."Imported Date Time" := CREATEDATETIME(TODAY,TIME);

              IF OverWriteExisting AND ESRoleDetail2.GET(ESRoleDetail."Role ID") THEN BEGIN
                ESRoleDetail2.DELETE;

                ESRoleRecording.RESET;
                ESRoleRecording.SETRANGE("Role ID",ESRoleDetail2."Role ID");
                ESRoleRecording.DELETEALL;

                ESRoleBuilderPerm.RESET;
                ESRoleBuilderPerm.SETRANGE("Role ID",ESRoleDetail2."Role ID");
                ESRoleBuilderPerm.DELETEALL;

                ESRole.GET(ESRoleDetail."Role ID");
                ESRole.Comment(1,Text032);
              END;

              ExistingRole := FALSE;
              IF NOT AddNewRecordings OR
                 (AddNewRecordings AND NOT ESRoleDetail2.GET(ESRoleDetail."Role ID"))
              THEN BEGIN
                IF NOT ESRole.GET(ESRoleDetail."Role ID") THEN BEGIN
                  ESRole.INIT;
                  ESRole.VALIDATE("Role ID",ESRoleDetail."Role ID");
                  ESRole.VALIDATE(Name,ESRoleDetail."Role Name");
                  ESRole.INSERT(TRUE);
                END;

                IF NOT ESRoleDetail.INSERT(TRUE) THEN
                  ESRoleDetail.MODIFY(TRUE);

                ESRole.Comment(1,STRSUBSTNO(Text030,ESRole.TABLECAPTION));
              END ELSE BEGIN
                ExistingRole := TRUE;
                ESRole.GET(ESRoleDetail."Role ID");
                ESRoleDetail2.GET(ESRoleDetail."Role ID");
                ESRole.Comment(1,Text044);
              END;

              TotalRecords := TotalRecords + 1;
            END;
          '14123654V1':
            BEGIN
              ESRoleRecording.INIT;
              ESRoleRecording."Role ID" := Value[2];
              ESRoleRecording."Recording Code" := Value[3];
              ESRoleRecording."Extend Insert Permissions" := ESFileMgt.EvaluateBoolean(Value[4]);
              ESRoleRecording."Add Related Permissions" := ESFileMgt.EvaluateBoolean(Value[5]);
              ESRoleRecording."Role for Both Clients" := ESFileMgt.EvaluateBoolean(Value[6]);
              ESRoleRecording."Created By User" := Value[7];
              ESRoleRecording."Created Date Time" := ESFileMgt.EvaluateDateTime(Value[8]);
              ESRoleRecording.ChangeDoNotSetDefault(TRUE);

              IF AddNewRecordings THEN BEGIN
                IF NOT ESRoleRecording2.GET(ESRoleRecording."Role ID",ESRoleRecording."Recording Code")
                THEN
                  ESRoleRecording.INSERT(TRUE);
              END ELSE
                ESRoleRecording.INSERT(TRUE);

              TotalRecords := TotalRecords + 1;
            END;
          '14123655V1','14123655V2':
            BEGIN
              ESRoleBuilderPerm.INIT;
              ESRoleBuilderPerm.SetAllowZeroNoQuestion(TRUE,NOT ESSecuritySetup."Detailed Comments");
              ESRoleBuilderPerm."Role ID" := Value[2];
              ESRoleBuilderPerm."Object Type" := ESFileMgt.EvaluateInteger(Value[3]);
              ESRoleBuilderPerm."Object ID" := ESFileMgt.EvaluateInteger(Value[4]);
              ESRoleBuilderPerm."Read Permission" := ESFileMgt.EvaluateInteger(Value[5]);
              ESRoleBuilderPerm."Insert Permission" := ESFileMgt.EvaluateInteger(Value[6]);
              ESRoleBuilderPerm."Modify Permission" := ESFileMgt.EvaluateInteger(Value[7]);
              ESRoleBuilderPerm."Delete Permission" := ESFileMgt.EvaluateInteger(Value[8]);
              ESRoleBuilderPerm."Execute Permission" := ESFileMgt.EvaluateInteger(Value[9]);
              EVALUATE(ESRoleBuilderPerm."Security Filter",Value[10]);
              ESRoleBuilderPerm.Origin := ESFileMgt.EvaluateInteger(Value[11]);
              ESRoleBuilderPerm."Do not include Additional" := ESFileMgt.EvaluateBoolean(Value[12]);
              ESRoleBuilderPerm."Extend Insert Permissions" := ESFileMgt.EvaluateBoolean(Value[13]);
              ESRoleBuilderPerm."Add Related Permissions" := ESFileMgt.EvaluateBoolean(Value[14]);
              ESRoleBuilderPerm."Role for Both Clients" := ESFileMgt.EvaluateBoolean(Value[15]);
              ESRoleBuilderPerm."Created By User" := Value[16];
              ESRoleBuilderPerm."Created Date Time" := ESFileMgt.EvaluateDateTime(Value[17]);
              ESRoleBuilderPerm."To Object ID" := ESFileMgt.EvaluateInteger(Value[18]);
              IF Value[1] <> '14123655V1' THEN
                ESRoleBuilderPerm."Override Permission" := ESFileMgt.EvaluateBoolean(Value[19]);

              IF NOT AddNewRecordings OR NOT ExistingRole OR
                 (AddNewRecordings AND
                  NOT ESRoleBuilderPerm2.GET(
                        ESRoleBuilderPerm."Role ID",ESRoleBuilderPerm."Object Type",
                        ESRoleBuilderPerm."Object ID"))
              THEN BEGIN
                ESRoleBuilderPerm.INSERT(TRUE);
                IF AddNewRecordings THEN
                  ESRole.Comment(
                    1,
                    STRSUBSTNO(
                      Text045,ESRoleBuilderPerm.TABLECAPTION,ESRoleBuilderPerm."Object Type",
                      ESRoleBuilderPerm."Object ID"));

                TotalRecords := TotalRecords + 1;
              END;
            END;
          ELSE
            ERROR(Text010,Value[1]);
        END;
      END;

      InputFile.CLOSE;
      IF ServerFileName <> '' THEN
        ERASE(ServerFileName);

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(Text018,TotalRecords,ImportFileName);

      ESSecuritySetup.Comment(
        1,ESRoleDetail.TABLECAPTION + ': ' + STRSUBSTNO(Text018,TotalRecords,ImportFileName));
    END;

    PROCEDURE RoleWhereUsed@1240520012();
    VAR
      ESRoleWhereUsed@1240520008 : Page 14123565;
    BEGIN
      CLEAR(ESRoleWhereUsed);
      ESRoleWhereUsed.InitRole("Role ID");
      ESRoleWhereUsed.RUN;
    END;

    PROCEDURE CreateRole@1240520007(ShowStatus@1240520002 : Boolean);
    VAR
      ESRole@1240520001 : Record 14123505;
    BEGIN
      TESTFIELD("Role ID");

      ESSecuritySetup.GET;
      IF ESSecuritySetup."Publish Allowed" THEN
        IF NOT ESRole.GET("Role ID") THEN BEGIN
          ESRole.INIT;
          ESRole.VALIDATE("Role ID","Role ID");
          ESRole.VALIDATE(Name,Description);
          ESRole.INSERT(TRUE);

          IF ShowStatus THEN
            MESSAGE(Text031,ESRole.TABLECAPTION,ESRole."Role ID");
        END ELSE
          IF ShowStatus THEN
            MESSAGE(Text043,ESRole.TABLECAPTION,ESRole."Role ID");
    END;

    PROCEDURE CreateRoleAndRecording@1240520006();
    VAR
      ESSecuritySetup@1240520016 : Record 14123521;
      ESRecording@1240520008 : Record 14123651;
      ESRecording2@1240520014 : Record 14123651;
      ESRole@1240520011 : Record 14123505;
      ESRoleRecording@1240520012 : Record 14123654;
      ESRecordingsForm@1240520015 : Page 14123652;
      RecordingCode@1240520009 : Code[30];
      RecordingCodePrefix@1240520017 : Code[30];
      Pos@1240520010 : Integer;
      ExtraCharString@1240520013 : Code[50];
      DeleteExisting@1240520001 : Boolean;
    BEGIN
      TESTFIELD("Role ID");
      TESTFIELD("Form/Page Filter");

      ESSecuritySetup.GET;
      ESSecuritySetup.TESTFIELD("Permission Recorder Licensed");
      IF NOT ESSecuritySetup."Publish Allowed" THEN BEGIN
        ESSecuritySetup.TESTFIELD("Recording Company Identifier");
        RecordingCodePrefix := "Role ID" + '-' + ESSecuritySetup."Recording Company Identifier";
      END ELSE
        RecordingCodePrefix := "Role ID";
      RecordingCode := RecordingCodePrefix + '-1';

      ESRecording.RESET;
      ESRecording.SETFILTER(Code,CONVERTSTR(RecordingCodePrefix,'@&|()<>=','????????') + '-?');
      IF ESRecording.FIND('+') THEN BEGIN
        IF ESSecuritySetup."Publish Allowed" THEN
          DeleteExisting := CONFIRM(Text033,FALSE,ESRecording.COUNT);

        IF NOT DeleteExisting THEN BEGIN
          ExtraCharString := '123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';
          Pos := 0;

          REPEAT
            Pos := Pos + 1;
            IF Pos > STRLEN(ExtraCharString) THEN
              ERROR(Text034);

            RecordingCode := RecordingCodePrefix + '-' + COPYSTR(ExtraCharString,Pos,1);
          UNTIL NOT ESRecording.GET(RecordingCode);
        END ELSE BEGIN
          ESRecording.FIND('-');
          REPEAT
            IF ESRoleRecording.GET("Role ID",ESRecording.Code) THEN
              ESRoleRecording.DELETE;

            ESRecording2 := ESRecording;
            ESRecording2.DELETE(TRUE);
          UNTIL ESRecording.NEXT = 0;
        END;
      END;

      IF ESSecuritySetup."Publish Allowed" THEN
        IF NOT ESRole.GET("Role ID") THEN
          CreateRole(FALSE);

      IF ESRecording.GET(RecordingCode) THEN BEGIN
        IF ESRoleRecording.GET("Role ID",RecordingCode) THEN
          ESRoleRecording.DELETE(TRUE);

        ESRecording.DELETE(TRUE);
      END;

      ESRecording.INIT;
      ESRecording.VALIDATE(Code,RecordingCode);
      ESRecording.VALIDATE(
        Description,STRSUBSTNO('%1 (%2: %3)',Description,TABLECAPTION,"Role ID"));
      ESRecording.INSERT(TRUE);

      COMMIT;

      CLEAR(ESRecordingsForm);
      ESRecordingsForm.InitValues("Role ID");
      ESRecordingsForm.SETTABLEVIEW(ESRecording);
      ESRecordingsForm.SETRECORD(ESRecording);
      ESRecordingsForm.RUNMODAL;

      IF ESRole.GET("Role ID") THEN BEGIN
        IF ESRecording.GET(RecordingCode) THEN BEGIN
          IF ESSecuritySetup."Publish Allowed" THEN BEGIN
            ESRoleRecording.INIT;
            ESRoleRecording.VALIDATE("Role ID",ESRole."Role ID");
            ESRoleRecording.VALIDATE("Recording Code",ESRecording.Code);
            ESRoleRecording.INSERT(TRUE);
          END;
        END;

        ESRole.UpdateFromRoleDetail(TRUE);
      END;
    END;

    PROCEDURE LaunchObjectsMenuItem@1240520005(ObjectTypeFilter@1240520001 : Text[30];ShowError@1240520008 : Boolean);
    VAR
      LaunchedObjects@1240520003 : Integer;
      FailedLaunchObjects@1240520002 : Integer;
    BEGIN
      IF "Report Filter" = '' THEN
        TESTFIELD("Form/Page Filter");

      ESSecuritySetup.GET;
      IF NOT ESSecuritySetup."Publish Allowed" THEN BEGIN
        ESSecuritySetup.TESTFIELD("Publish Allowed Company Name");
        LaunchObjects(
          ESSecuritySetup."Publish Allowed Company Name",ObjectTypeFilter,
          LaunchedObjects,FailedLaunchObjects,ShowError);
      END ELSE
        LaunchObjects('',ObjectTypeFilter,LaunchedObjects,FailedLaunchObjects,ShowError);

      IF ISSERVICETIER THEN
        MESSAGE(Text035,LaunchedObjects,FailedLaunchObjects)
      ELSE
        MESSAGE(Text035 + Text036,LaunchedObjects,FailedLaunchObjects);
    END;

    LOCAL PROCEDURE LaunchObjects@1240520004(CompanyName@1240520023 : Text[30];ObjectTypeFilter@1240520003 : Text[30];VAR LaunchedObjects@1240520004 : Integer;VAR FailedLaunchObjects@1240520005 : Integer;ShowError@1240520022 : Boolean);
    VAR
      ESRelation@1240520001 : Record 14123601;
      ESRelation2@1240520011 : Record 14123601;
      ESObjectInfoTmp@1240520010 : TEMPORARY Record 14123509;
      AllObjWithCaption@1240520009 : Record 2000000058;
      Window@1240520013 : Dialog;
      TotalObjects@1240520014 : Integer;
      ObjectCount@1240520018 : Integer;
      StrMenuText@1240520015 : Text[250];
      i@1240520016 : Integer;
      Selection@1240520017 : Integer;
      FirstObject@1240520019 : Integer;
      LastObject@1240520020 : Integer;
      SearchDirection@1240520002 : Integer;
    BEGIN
      IF "Form/Page Filter" <> '' THEN BEGIN
        AllObjWithCaption.RESET;
        IF ISSERVICETIER THEN
          AllObjWithCaption.SETRANGE("Object Type",AllObjWithCaption."Object Type"::Page)
        ELSE
          AllObjWithCaption.SETRANGE("Object Type",AllObjWithCaption."Object Type"::"2");
        AllObjWithCaption.SETFILTER("Object ID","Form/Page Filter");
        IF AllObjWithCaption.FIND('-') THEN
          REPEAT
            ESObjectInfoTmp.INIT;
            ESObjectInfoTmp."Object Type" := AllObjWithCaption."Object Type";
            ESObjectInfoTmp."Object ID" := AllObjWithCaption."Object ID";
            ESObjectInfoTmp."Object Name" := '1';
            IF NOT ESObjectInfoTmp.INSERT THEN
              ;
          UNTIL AllObjWithCaption.NEXT = 0;
      END;

      IF "Report Filter" <> '' THEN BEGIN
        AllObjWithCaption.RESET;
        AllObjWithCaption.SETRANGE("Object Type",AllObjWithCaption."Object Type"::Report);
        AllObjWithCaption.SETFILTER("Object ID","Report Filter");
        IF AllObjWithCaption.FIND('-') THEN
          REPEAT
            ESObjectInfoTmp.INIT;
            ESObjectInfoTmp."Object Type" := AllObjWithCaption."Object Type";
            ESObjectInfoTmp."Object ID" := AllObjWithCaption."Object ID";
            ESObjectInfoTmp."Object Name" := '1';
            IF NOT ESObjectInfoTmp.INSERT THEN
              ;
          UNTIL AllObjWithCaption.NEXT = 0;
      END;

      IF "Form/Page Filter" <> '' THEN BEGIN
        ESRelation.RESET;
        IF CompanyName <> '' THEN
          ESRelation.CHANGECOMPANY(ESSecuritySetup."Publish Allowed Company Name");
        IF ISSERVICETIER THEN
          ESRelation.SETRANGE("Object Type",ESRelation."Object Type"::Page)
        ELSE
          IF "Only Classic Client Recording" THEN
            ESRelation.SETRANGE("Object Type",ESRelation."Object Type"::"2")
          ELSE
            ESRelation.SETFILTER(
              "Object Type",'%1|%2',ESRelation."Object Type"::"2",ESRelation."Object Type"::Page);
        ESRelation.SETFILTER("Object ID","Form/Page Filter");
        ESRelation.SETFILTER(
          Type,'%1|%2|%3',ESRelation.Type::Manual,ESRelation.Type::MenuItem,
          ESRelation.Type::PagePartID);
        IF ESRelation.FIND('-') THEN
          REPEAT
            ESObjectInfoTmp."Object Type" := ESRelation."Object Type";
            ESObjectInfoTmp."Object ID" := ESRelation."Object ID";
            ESObjectInfoTmp."Object Name" := '2';
            IF NOT ESObjectInfoTmp.INSERT THEN
              ;

            CASE ESRelation."Relation Object Type" OF
              ESRelation."Relation Object Type"::Page:
                IF (ESRelation.Type <> ESRelation.Type::MenuItem) OR "Include Menu Items" THEN BEGIN
                  IF ISSERVICETIER THEN
                    ESObjectInfoTmp."Object Type" := ESRelation."Relation Object Type"::Page
                  ELSE
                    ESObjectInfoTmp."Object Type" := ESRelation."Relation Object Type"::"2";
                  ESObjectInfoTmp."Object ID" := ESRelation."Relation Object ID";
                  ESObjectInfoTmp."Object Name" := '2';
                  IF NOT ESObjectInfoTmp.INSERT THEN
                    ;

                  IF NOT ISSERVICETIER AND NOT "Only Classic Client Recording" THEN BEGIN
                    ESRelation2.RESET;
                    IF CompanyName <> '' THEN
                      ESRelation2.CHANGECOMPANY(CompanyName);
                    ESRelation2.SETFILTER(
                      "Object Type",'%1|%2',ESRelation2."Object Type"::"2",
                      ESRelation2."Object Type"::Page);
                    ESRelation2.SETRANGE("Object ID",ESRelation."Relation Object ID");
                    ESRelation2.SETRANGE(Type,ESRelation2.Type::PagePartID);
                    IF ESRelation2.FIND('-') THEN
                      REPEAT
                        ESObjectInfoTmp."Object Type" := ESRelation2."Relation Object Type"::"2";
                        ESObjectInfoTmp."Object ID" := ESRelation2."Relation Object ID";
                        ESObjectInfoTmp."Object Name" := '2';
                        IF NOT ESObjectInfoTmp.INSERT THEN
                          ;
                      UNTIL ESRelation2.NEXT = 0;
                  END;
                END;
              ESRelation."Relation Object Type"::Report:
                IF NOT "Only Form/Page relations" THEN BEGIN
                  ESObjectInfoTmp."Object Type" := ESRelation."Relation Object Type";
                  ESObjectInfoTmp."Object ID" := ESRelation."Relation Object ID";
                  ESObjectInfoTmp."Object Name" := '2';
                  IF NOT ESObjectInfoTmp.INSERT THEN
                    ;
                END;
              ESRelation."Relation Object Type"::Codeunit:
                IF NOT "Only Form/Page relations" THEN BEGIN
                  ESRelation2.RESET;
                  ESRelation2.SETRANGE("Object Type",ESRelation."Relation Object Type");
                  ESRelation2.SETRANGE("Object ID",ESRelation."Relation Object ID");
                  ESRelation2.SETRANGE(Type,ESRelation2.Type::"Source Table");
                  IF NOT ESRelation2.FIND('-') THEN BEGIN
                    ESObjectInfoTmp."Object Type" := ESRelation."Relation Object Type";
                    ESObjectInfoTmp."Object ID" := ESRelation."Relation Object ID";
                    ESObjectInfoTmp."Object Name" := '3';
                    IF NOT ESObjectInfoTmp.INSERT THEN
                      ;
                  END;
                END;
              ELSE
                BEGIN
                  ESRelation.CALCFIELDS("Relation Object Caption");

                  MESSAGE(
                    Text037,
                    ESRelation.Type,ESRelation."Relation Object Type",
                    ESRelation."Relation Object ID",ESRelation."Relation Object Caption");
                END;
            END;
          UNTIL ESRelation.NEXT = 0;
      END;

      IF ISSERVICETIER THEN
        ESObjectInfoTmp.SETRANGE("Object Type",ESObjectInfoTmp."Object Type"::"2")
      ELSE
        ESObjectInfoTmp.SETRANGE("Object Type",ESObjectInfoTmp."Object Type"::Page);
      ESObjectInfoTmp.DELETEALL;
      ESObjectInfoTmp.SETRANGE("Object Type");

      IF ObjectTypeFilter <> '' THEN
        ESObjectInfoTmp.SETFILTER("Object Type",ObjectTypeFilter);
      ESObjectInfoTmp.SETCURRENTKEY("Object Name");
      IF ESObjectInfoTmp.FIND('-') THEN BEGIN
        TotalObjects := ESObjectInfoTmp.COUNT;
        IF TotalObjects > 1000 THEN
          ERROR(Text049);

        IF TotalObjects > 100 THEN BEGIN
          StrMenuText := Text038;
          FOR i := 1 TO TotalObjects DIV 100 + 1 DO
            StrMenuText :=
              StrMenuText +
              STRSUBSTNO(Text039,i,100 * i - 99,100 * i);

          Selection := STRMENU(StrMenuText,1,Text028);

          IF Selection = 0 THEN
            EXIT;

          IF Selection > 1 THEN BEGIN
            FirstObject := 100 * (Selection - 2) + 1;
            LastObject := 100 * (Selection - 2) + 100;
          END;
        END ELSE
          IF CONFIRM(Text040,TRUE,TotalObjects) THEN
            Selection := 1
          ELSE
            EXIT;

        IF NOT ISSERVICETIER THEN BEGIN
          ESObjectInfoTmp.FIND('+');

          SearchDirection := -1;
        END ELSE
          SearchDirection := 1;

        IF GUIALLOWED THEN
          Window.OPEN(Text041);

        REPEAT
          ObjectCount := ObjectCount + 1;

          IF GUIALLOWED THEN
            Window.UPDATE(
              1,
              STRSUBSTNO(
                Text042,ESObjectInfoTmp."Object Type",ESObjectInfoTmp."Object ID",
                ObjectCount,TotalObjects,FailedLaunchObjects));

          IF ESObjectInfoTmp."Object ID" = 10120 THEN
            COMMIT;

          IF AllObjWithCaption.GET(ESObjectInfoTmp."Object Type",ESObjectInfoTmp."Object ID") AND
             ((Selection = 1) OR ((ObjectCount >= FirstObject) AND (ObjectCount <= LastObject)))
          THEN BEGIN
            LaunchedObjects := LaunchedObjects + 1;

            IF ShowError THEN BEGIN
              CODEUNIT.RUN(CODEUNIT::"ES Launch Object",ESObjectInfoTmp);
              COMMIT;
            END ELSE BEGIN
              IF NOT CODEUNIT.RUN(CODEUNIT::"ES Launch Object",ESObjectInfoTmp) THEN
                FailedLaunchObjects := FailedLaunchObjects + 1
              ELSE
                COMMIT;
            END;

            SLEEP(100);
          END;
        UNTIL ESObjectInfoTmp.NEXT(SearchDirection) = 0;

        IF GUIALLOWED THEN
          Window.CLOSE;
      END;
    END;

    PROCEDURE RemoveEasySecurityPerm@1240520010();
    VAR
      ESRecordingPerm@1240520008 : Record 14123652;
      ESRole@1240520009 : Record 14123505;
    BEGIN
      ESRecordingPerm.RESET;
      ESRecordingPerm.SETRANGE("Recording Code","Role ID");
      ESRecordingPerm.SETRANGE(
        "Object Type",ESRecordingPerm."Object Type"::TableData,ESRecordingPerm."Object Type"::Query);
      ESRecordingPerm.SETFILTER("Object ID",'14123501..14123699');
      ESRecordingPerm.DELETEALL;

      ESRole.GET("Role ID");
      ESRole.UpdateFromRoleDetail(TRUE);
    END;

    PROCEDURE CountLimitedUserAccess@1240520003();
    BEGIN
      ESRole.GET("Role ID");
      ESRole.CountLimitedUserAccess;
    END;

    PROCEDURE PrintTextLines@1240520008();
    VAR
      ESRole@1240520008 : Record 14123505;
    BEGIN
      ESRole.GET("Role ID");
      ESRole.PrintTextLines;
    END;

    PROCEDURE FormatAsTextLine@1240520066(VAR ESTextLine@1240520011 : Record 14123520;NoOfRelatedKeyFields@1240520009 : Integer;CalcFlowFields@1240520012 : Boolean;UserDateTimeDetails@1240520013 : Boolean) : Boolean;
    VAR
      ESFormatMgt@1240520014 : Codeunit 14123505;
      RecRef@1240520010 : RecordRef;
    BEGIN
      ESFormatMgt.NewRecord(TABLECAPTION,"Role ID",'','','','','','','','','',1,NoOfRelatedKeyFields);
      ESFormatMgt.AddField(FIELDCAPTION("Role Name"),FORMAT("Role Name"));
      ESFormatMgt.AddField(FIELDCAPTION(Description),FORMAT(Description));
      ESFormatMgt.AddField(FIELDCAPTION("File Name"),FORMAT("File Name"));
      ESFormatMgt.AddField(FIELDCAPTION("No Permissions"),FORMAT("No Permissions"));
      ESFormatMgt.AddField(FIELDCAPTION("Remove ALL Permissions"),FORMAT("Remove ALL Permissions"));
      ESFormatMgt.AddField(FIELDCAPTION("Remove BASIC Permissions"),FORMAT("Remove BASIC Permissions"));
      ESFormatMgt.AddField(FIELDCAPTION("Parent Role ID"),FORMAT("Parent Role ID"));
      ESFormatMgt.AddField(FIELDCAPTION("Form/Page Filter"),FORMAT("Form/Page Filter"));
      ESFormatMgt.AddField(FIELDCAPTION("Include Menu Items"),FORMAT("Include Menu Items"));
      ESFormatMgt.AddField(
        FIELDCAPTION("Only Classic Client Recording"),FORMAT("Only Classic Client Recording"));
      ESFormatMgt.AddField(FIELDCAPTION("Report Filter"),FORMAT("Report Filter"));
      ESFormatMgt.AddField(FIELDCAPTION("Only Form/Page relations"),FORMAT("Only Form/Page relations"));
      ESFormatMgt.AddField(FIELDCAPTION("Role Group ID"),FORMAT("Role Group ID"));

      IF UserDateTimeDetails THEN BEGIN
        IF "Exported Date Time" <> 0DT THEN
          ESFormatMgt.AddField(FIELDCAPTION("Exported Date Time"),FORMAT("Exported Date Time"));
        IF "Imported Date Time" <> 0DT THEN
          ESFormatMgt.AddField(FIELDCAPTION("Imported Date Time"),FORMAT("Imported Date Time"));
        ESFormatMgt.AddField(FIELDCAPTION("Created By User"),FORMAT("Created By User"));
        IF "Created Date Time" <> 0DT THEN
          ESFormatMgt.AddField(FIELDCAPTION("Created Date Time"),FORMAT("Created Date Time"));
        IF "Role Updated Date Time" <> 0DT THEN
          ESFormatMgt.AddField(FIELDCAPTION("Role Updated Date Time"),FORMAT("Role Updated Date Time"));
      END;

      IF CalcFlowFields THEN BEGIN
        CALCFIELDS(
          "Role Builder Permissions","Role Recordings","Role Permissions","Parent Role Name",
          "Parent Role Description","Not in Parent Role Permissions","TableData Role Permissions",
          "Role Exists","Role Recording Exists","Role Group Name");

        IF "Role Builder Permissions" <> 0 THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Role Builder Permissions"),FORMAT("Role Builder Permissions"));
        IF "Role Recordings" <> 0 THEN
          ESFormatMgt.AddFlowField(FIELDCAPTION("Role Recordings"),FORMAT("Role Recordings"));
        IF "Role Permissions" <> 0 THEN
          ESFormatMgt.AddFlowField(FIELDCAPTION("Role Permissions"),FORMAT("Role Permissions"));
        IF "Parent Role Name" <> '' THEN
          ESFormatMgt.AddFlowField(FIELDCAPTION("Parent Role Name"),FORMAT("Parent Role Name"));
        IF "Parent Role Description" <> '' THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Parent Role Description"),FORMAT("Parent Role Description"));
        IF "Not in Parent Role Permissions" <> 0 THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Not in Parent Role Permissions"),FORMAT("Not in Parent Role Permissions"));
        IF "TableData Role Permissions" <> 0 THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("TableData Role Permissions"),FORMAT("TableData Role Permissions"));
        IF "Role Exists" THEN
          ESFormatMgt.AddFlowField(FIELDCAPTION("Role Exists"),FORMAT("Role Exists"));
        IF "Role Recording Exists" THEN
          ESFormatMgt.AddFlowField(FIELDCAPTION("Role Recording Exists"),FORMAT("Role Recording Exists"));
        IF "Role Group Name" <> '' THEN
          ESFormatMgt.AddFlowField(FIELDCAPTION("Role Group Name"),FORMAT("Role Group Name"));
      END;

      RecRef.OPEN(DATABASE::"ES Role Detail");
      RecRef.GETTABLE(Rec);
      ESFormatMgt.FormatNewESTextLine(ESTextLine,DATABASE::"ES Role Detail",RecRef.RECORDID);

      EXIT(ESFormatMgt.NoTextOverflow);
    END;

    PROCEDURE SetNoComment@1240520018(NewValue@1240520001 : Boolean);
    BEGIN
      NoComment := NewValue;
    END;

    PROCEDURE Comment@1240520020(FunctionNo@1240520008 : ' ,Insert,Show,Exist,DeleteAll';NewText@1240520010 : Text[250]) : Boolean;
    VAR
      ESComment@1240520009 : Record 14123524;
    BEGIN
      ESComment.RESET;
      ESComment.SETRANGE("Table ID",DATABASE::"ES Role Detail");
      ESComment.SETRANGE(Code,"Role ID");
      EXIT(ESComment.Functions(FunctionNo,NewText));
    END;

    BEGIN
    END.
  }
}

