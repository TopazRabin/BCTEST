OBJECT Table 11123318 SC - Variant Info.
{
  OBJECT-PROPERTIES
  {
    Date=07/01/20;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=SCW19.2.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Variant Info.;
  }
  FIELDS
  {
    { 2   ;   ;Item No.            ;Code20        ;CaptionML=ENU=Item No. }
    { 3   ;   ;Variant Code        ;Code10         }
    { 4   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 5   ;   ;Description 2       ;Text50        ;CaptionML=ENU=Description 2 }
    { 18  ;   ;Unit Price          ;Decimal       ;CaptionML=ENU=Unit Price;
                                                   DecimalPlaces=2:2;
                                                   MinValue=0 }
    { 68  ;   ;Stock               ;Decimal       ;CaptionML=ENU=Stock;
                                                   DecimalPlaces=0:5 }
    { 11123302;;Visible in Webshop ;Boolean       ;CaptionML=ENU=Visible in Webshop }
    { 11123352;;Orderable          ;Boolean       ;CaptionML=ENU=Orderable }
    { 11123353;;Non Orderable Reason;Text250      ;CaptionML=ENU=Non Orderable Reason }
    { 11123354;;VAT Prod. Posting Group;Code10    ;CaptionML=ENU=VAT Prod. Posting Group }
  }
  KEYS
  {
    {    ;Item No.,Variant Code                   ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE GetCalculatedValues@11123302(VAR Params@11123302 : Record 11123310);
    VAR
      Item@11123303 : Record 27;
      ItemVariant@11123304 : Record 5401;
      RecMgt@11123305 : Codeunit 11123326;
      CatalogHelper@11123306 : Codeunit 11123318;
      Dispatcher@11123307 : Codeunit 11123306;
    BEGIN
      IF RecMgt.GetItem("Item No.",Item,FALSE) THEN BEGIN
        RecMgt.GetItemVariant("Item No.","Variant Code",ItemVariant,TRUE);

        Params.ProductId := ItemVariant."Item No.";
        Params.VariantId := ItemVariant.Code;
        Params.UnitOfMeasureId := '';
        Params.BaseCurrencyId := Params.CurrentCurrencyId;

        "Unit Price" := CatalogHelper.GetSalesPrice(Item,ItemVariant,Params);
        IF Orderable THEN BEGIN
          Orderable := Params.CalcOrderable;
          "Non Orderable Reason" := Params.CalcErrorText;
        END;
        Dispatcher.DispatchInternal('GetAvailableStockForVariant',Params);
        Stock := Params.Inventory;
      END;
    END;

    PROCEDURE RefreshVariantInfo@11123309(VAR Params@11123302 : Record 11123310);
    VAR
      ItemVariant@11123304 : Record 5401;
      RecAction@11123303 : Record 11123327;
      CatalogHelper@11123305 : Codeunit 11123318;
      RecRef@11123306 : RecordRef;
    BEGIN
      RecAction.RESET;
      RecAction.SETRANGE("Item No.","Item No.");
      RecAction.SETRANGE("Table ID",DATABASE::"Item Variant");
      IF RecAction.FINDSET THEN
        REPEAT
          RecRef.OPEN(RecAction."Table ID");
          IF RecRef.GET(RecAction."Primary Key") THEN BEGIN
            RecRef.SETTABLE(ItemVariant);
            CatalogHelper.RefreshVariantInfo(ItemVariant,RecAction.Action,TRUE,Params);
          END;
          RecRef.CLOSE;
        UNTIL RecAction.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

