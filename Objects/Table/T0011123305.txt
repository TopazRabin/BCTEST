OBJECT Table 11123305 SC - Setup
{
  OBJECT-PROPERTIES
  {
    Date=07/01/20;
    Time=12:00:00 AM;
    Modified=Yes;
    Version List=SCW19.2.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Sana Commerce Setup;
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key }
    { 2   ;   ;Single Service Port ;Integer       ;CaptionML=ENU=Port;
                                                   MinValue=0 }
    { 3   ;   ;Single Service Secure;Boolean      ;CaptionML=ENU=Single Service Secure }
    { 4   ;   ;Catalog Service Port;Integer       ;CaptionML=ENU=Port;
                                                   MinValue=0 }
    { 5   ;   ;Catalog Service Secure;Boolean     ;CaptionML=ENU=Catalog Service Secure }
    { 6   ;   ;Customer Service Port;Integer      ;CaptionML=ENU=Port;
                                                   MinValue=0 }
    { 7   ;   ;Customer Service Secure;Boolean    ;CaptionML=ENU=Customer Service Secure }
    { 8   ;   ;Order Service Port  ;Integer       ;CaptionML=ENU=Port;
                                                   MinValue=0 }
    { 9   ;   ;Order Service Secure;Boolean       ;CaptionML=ENU=Order Service Secure }
    { 10  ;   ;Logging Output Directory;Text250   ;CaptionML=ENU=Logging Output Directory }
    { 11  ;   ;Enable Logging      ;Boolean       ;CaptionML=ENU=Enable Logging }
    { 12  ;   ;Enable Sana Commerce;Boolean       ;CaptionML=ENU=Enable Sana Commerce }
    { 13  ;   ;Refresh Cat. Overview Required;Boolean;
                                                   CaptionML=ENU=Refresh Cat. Overview Required }
    { 14  ;   ;Upgraded            ;Boolean       ;CaptionML=ENU=Upgraded }
    { 15  ;   ;Sana Version        ;Text20        ;OnValidate=BEGIN
                                                                SetSanaVersion;
                                                              END;
                                                               }
    { 100 ;   ;Obsolete Field 100  ;Integer       ;CaptionML=ENU=Modification Threshold (Sec.);
                                                   Description=Modification Threshold (Sec.) }
    { 101 ;   ;No. of Cached Records;Integer      ;InitValue=500;
                                                   OnValidate=VAR
                                                                CacheMgt@11123302 : Codeunit 11123323;
                                                              BEGIN
                                                                IF "No. of Cached Records" <> xRec."No. of Cached Records" THEN
                                                                  CacheMgt.SetNoCachedRecords("No. of Cached Records");
                                                              END;

                                                   CaptionML=ENU=No. of Cached Records }
    { 501 ;   ;Backoffice Link     ;Text250       ;CaptionML=ENU=Backoffice Link }
    { 502 ;   ;Webshop Link        ;Text250       ;CaptionML=ENU=Webshop Link }
    { 503 ;   ;User Guide Link     ;Text250       ;CaptionML=ENU=User Guide Link }
    { 504 ;   ;Youtube Link        ;Text250       ;CaptionML=ENU=Youtube Link }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text11123302@11123302 : TextConst 'ENU=%1 cannot be empty when logging enabled.';
      Text11123303@11123304 : TextConst 'ENU=There is no validation rule for %1 table.';

    PROCEDURE CallCheckQueue@11123302(port@11123302 : Integer;secure@11123303 : Boolean);
    VAR
      Validation@11123304 : Codeunit 11123310;
      DataValidLine@11123306 : Record 11123321;
      LastError@11123305 : Text[1024];
    BEGIN
      IF NOT Validation.FindCustomFunctionLine(DataValidLine,DATABASE::"SC - Setup",'CheckQueue') THEN
        ERROR(Text11123303,TABLECAPTION);

      Validation.SetServiceParams(port,secure,TRUE);
      IF NOT Validation.RUN(DataValidLine) THEN BEGIN
        IF DataValidLine."Error Text" <> '' THEN
          LastError := DataValidLine."Error Text"
        ELSE
          LastError := GETLASTERRORTEXT;
        Validation.SetServiceParams(port,secure,FALSE);
        IF Validation.RUN(DataValidLine) THEN;
        IF Validation.RUN(DataValidLine) THEN;
        ERROR(LastError);
      END;
    END;

    PROCEDURE CheckLoggingFields@11123303();
    BEGIN
      IF ("Enable Logging") AND ("Logging Output Directory" = '') THEN
        ERROR(Text11123302,FIELDCAPTION("Logging Output Directory"));
    END;

    PROCEDURE SetSanaVersion@11123304();
    VAR
      Context@11123302 : Codeunit 11123305;
    BEGIN
      Context.SetSanaVersion("Sana Version");
    END;

    BEGIN
    {
      The field "Modification Threshold (Sec.)" is obsolete. It will be removed in future versions.
    }
    END.
  }
}

