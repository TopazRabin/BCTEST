OBJECT Table 14050401 DHL Option Page
{
  OBJECT-PROPERTIES
  {
    Date=07/02/09;
    Time=12:00:00 PM;
    Version List=SE0.53.67;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CASE Type OF
                 Type::Package:
                   BEGIN
                     Package.TESTFIELD("No.");

                     DocumentOptionPageFound := FALSE;
                     IF Package."Source ID" <> '' THEN
                       IF DHLOptionPage.GET(
                            DHLOptionPage.Type::Document,Package."Source ID",
                            Package."Source Type",Package."Source Subtype")
                       THEN BEGIN
                         DocumentOptionPageFound := TRUE;

                         Rec := DHLOptionPage;
                       END;

                     "Shipping Agent Code" := Package."Shipping Agent Code";
                     "Shipping Agent Service" := Package."Shipping Agent Service";
                     "World Wide Service" := Package."World Wide Service";

                     IF NOT DocumentOptionPageFound THEN BEGIN
                       DHLOptionPage.RESET;
                       DHLOptionPage.SETCURRENTKEY(
                         Type,"Shipping Agent Code","Shipping Agent Service","World Wide Service");
                       DHLOptionPage.SETRANGE(Type,DHLOptionPage.Type::Setup);
                       DHLOptionPage.SETRANGE("Shipping Agent Code",Package."Shipping Agent Code");
                       DHLOptionPage.SETRANGE("Shipping Agent Service",Package."Shipping Agent Service");
                       DHLOptionPage.SETRANGE("World Wide Service",Package."World Wide Service");
                       IF DHLOptionPage.FIND('-') THEN
                         Rec := DHLOptionPage;

                       IF Package."Source Type" <> 0 THEN BEGIN
                         PackingControl.TransferFromSource(
                           Package."Source Type",Package."Source Subtype",Package."Source ID");

                         TransferFromPackingControl(PackingControl);
                       END;
                     END;

                     Type := Type::Package;
                     "Source ID" := Package."No.";
                     "Source Type" := 0;
                     "Source Subtype" := 0;
                     "Second Source ID" := '';

                     IF (Package."Ship-to No." <> '') AND
                        ((Package."Source ID" = '') OR NOT DocumentOptionPageFound)
                     THEN BEGIN
                       CLEAR(DHLOptionPage);
                       CASE TRUE OF
                         Package."Ship-to Type" = Package."Ship-to Type"::Customer:
                           IF DHLOptionPage.GET(
                                DHLOptionPage.Type::"Master Data",Package."Ship-to No.",DATABASE::Customer,
                                0,Package."Ship-to Code")
                           THEN
                             ;
                         Package."Ship-to Type" = Package."Ship-to Type"::Vendor:
                           IF DHLOptionPage.GET(
                                DHLOptionPage.Type::"Master Data",Package."Ship-to No.",DATABASE::Vendor,
                                0,Package."Ship-to Code")
                           THEN
                             ;
                         Package."Ship-to Type" = Package."Ship-to Type"::Location:
                           IF DHLOptionPage.GET(
                                DHLOptionPage.Type::"Master Data",Package."Ship-to No.",DATABASE::Location,
                                0,'')
                           THEN
                             ;
                       END;

                       IF DHLOptionPage."Source ID" <> '' THEN
                         MergeOptionPage(DHLOptionPage);
                     END;

                     IF GetShippingAccount(
                          Package."Ship-to Type",Package."Ship-to No.",Package."Ship-to Code",
                          Package."Shipping Agent Code",Package."Third Party Ship. Account No.")
                     THEN
                       TransferFromShippingAccount(ShippingAccount);
                   END;
                 Type::Document:
                   BEGIN
                     TESTFIELD("Source ID");
                     TESTFIELD("Source Type");

                     PackingControl.TransferFromSource("Source Type","Source Subtype","Source ID");
                     TransferFromPackingControl(PackingControl);

                     IF GetShippingAccount(
                          PackingControl."Ship-to Type",PackingControl."Ship-to No.",PackingControl."Ship-to Code",
                          PackingControl."Shipping Agent Code",PackingControl."Third Party Ship. Account No.")
                     THEN
                       TransferFromShippingAccount(ShippingAccount);
                   END;
                 Type::"Bill of Lading":
                   BEGIN
                     TESTFIELD("Source ID");

                     BillOfLading.GET("Source ID");
                     BillOfLading.TESTFIELD(Released,FALSE);
                     TransferFromBillOfLading(BillOfLading);

                     IF GetShippingAccount(
                          BillOfLading."Ship-to Type",BillOfLading."Ship-to No.",BillOfLading."Ship-to Code",
                          BillOfLading."Shipping Agent Code",BillOfLading."Third Party Ship. Account No.")
                     THEN
                       TransferFromShippingAccount(ShippingAccount);
                   END;
                 Type::"Master Data":
                    BEGIN
                     TESTFIELD("Source ID");
                     TESTFIELD("Source Type");
                    END;
                 ELSE
                   TESTFIELD("Source ID");
               END;
             END;

    OnModify=BEGIN
               CASE Type OF
                 Type::Package:
                   BEGIN
                     Package.GET("Source ID");
                     Package.TESTFIELD(Closed,FALSE);
                   END;
                 Type::"Bill of Lading":
                   BEGIN
                     BillOfLading.GET("Source ID");
                     BillOfLading.TESTFIELD(Released,FALSE);
                   END;
               END;
             END;

    OnDelete=BEGIN
               CASE Type OF
                 Type::Package:
                   BEGIN
                     IF Package.GET("Source ID") THEN
                       Package.TESTFIELD(Closed,FALSE);
                   END;
                 Type::"Bill of Lading":
                   BEGIN
                     BillOfLading.GET("Source ID");
                     BillOfLading.TESTFIELD(Released,FALSE);
                   END;
               END;
             END;

    CaptionML=ENU=DHL Option Page;
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Package,Document,Setup,Rate Shop,Item,Resource,Standard Option,Bill of Lading,Master Data;
                                                   OptionString=Package,Document,Setup,Rate Shop,Item,Resource,Standard Option,Bill of Lading,Master Data;
                                                   Editable=No }
    { 2   ;   ;Source ID           ;Code20        ;TableRelation=IF (Type=CONST(Package)) Package
                                                                 ELSE IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(Resource)) Resource
                                                                 ELSE IF (Type=CONST(Standard Option)) "Standard Option Setup";
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Source ID;
                                                   NotBlank=No;
                                                   Editable=No }
    { 3   ;   ;Source Type         ;Integer       ;CaptionML=ENU=Source Type }
    { 4   ;   ;Source Subtype      ;Integer       ;CaptionML=ENU=Source Subtype }
    { 5   ;   ;Second Source ID    ;Code20        ;CaptionML=ENU=Second Source ID;
                                                   Editable=No }
    { 11  ;   ;Shipping Agent Code ;Code10        ;TableRelation="Shipping Agent".Code;
                                                   OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Shipping Agent Code"));
                                                              END;

                                                   CaptionML=ENU=Shipping Agent Code;
                                                   Editable=No }
    { 12  ;   ;World Wide Service  ;Boolean       ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("World Wide Service"));
                                                              END;

                                                   CaptionML=ENU=World Wide Service;
                                                   Editable=No }
    { 13  ;   ;Shipping Agent Service;Code30      ;TableRelation="E-Ship Agent Service".Code WHERE (Shipping Agent Code=FIELD(Shipping Agent Code));
                                                   OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Shipping Agent Service"));
                                                              END;

                                                   CaptionML=ENU=Shipping Agent Service;
                                                   Editable=No }
    { 14  ;   ;Non-dutiable Document;Boolean      ;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Non-dutiable Document"));
                                                              END;

                                                   CaptionML=ENU=Non-dutiable Document }
    { 15  ;   ;Duty Payment Type   ;Option        ;InitValue=Receiver;
                                                   OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Duty Payment Type"));
                                                              END;

                                                   CaptionML=ENU=Duty Payment Type;
                                                   OptionCaptionML=ENU=" ,Receiver,Shipper,Third Party";
                                                   OptionString=[ ,Receiver,Shipper,Third Party] }
    { 16  ;   ;Duty Payment Account No.;Code20    ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Duty Payment Account No."));
                                                              END;

                                                   CaptionML=ENU=Duty Payment Account No. }
    { 17  ;   ;Content Description ;Text50        ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Content Description"));
                                                              END;

                                                   CaptionML=ENU=Content Description }
    { 20  ;   ;Shipment Type       ;Option        ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Shipment Type"));
                                                              END;

                                                   CaptionML=ENU=Shipment Type;
                                                   OptionCaptionML=ENU=Other Package,DHL Package,DHL Letter;
                                                   OptionString=Other Package,DHL Package,DHL Letter }
    { 21  ;   ;Additional Protection Code;Option  ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Additional Protection Code"));
                                                              END;

                                                   CaptionML=ENU=Additional Protection Code;
                                                   OptionCaptionML=ENU=Not Required,Asset Protection;
                                                   OptionString=Not Required,Asset Protection }
    { 22  ;   ;Additional Protection Value;Integer;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Additional Protection Value"));
                                                              END;

                                                   CaptionML=ENU=Additional Protection Value }
    { 26  ;   ;Ship Notification Email;Text50     ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Ship Notification Email"));
                                                              END;

                                                   CaptionML=ENU=Ship Notification Email }
    { 27  ;   ;Ship Notification Email2;Text50    ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Ship Notification Email2"));
                                                              END;

                                                   CaptionML=ENU=Ship Notification Email2 }
    { 28  ;   ;Ship Notification Email3;Text50    ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Ship Notification Email3"));
                                                              END;

                                                   CaptionML=ENU=Ship Notification Email3 }
    { 29  ;   ;Ship Notification Email4;Text50    ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Ship Notification Email4"));
                                                              END;

                                                   CaptionML=ENU=Ship Notification Email4 }
    { 30  ;   ;Ship Notification Email5;Text50    ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Ship Notification Email5"));
                                                              END;

                                                   CaptionML=ENU=Ship Notification Email5 }
    { 38  ;   ;Hold/Pickup at DHL  ;Boolean       ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Hold/Pickup at DHL"));
                                                              END;

                                                   CaptionML=ENU=Hold/Pickup at DHL }
    { 39  ;   ;Hazardous Materials ;Boolean       ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Hazardous Materials"));
                                                              END;

                                                   CaptionML=ENU=Hazardous Materials }
    { 40  ;   ;Zip Code not in State;Boolean      ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Zip Code not in State"));
                                                              END;

                                                   CaptionML=ENU=Zip Code not in State }
    { 41  ;   ;Zip Code not in DHL Database;Boolean;
                                                   OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Zip Code not in DHL Database"));
                                                              END;

                                                   CaptionML=ENU=Zip Code not in DHL Database }
    { 42  ;   ;Express Sat. not shipped Fri.;Boolean;
                                                   OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Express Sat. not shipped Fri."));
                                                              END;

                                                   CaptionML=ENU=Express Sat. not shipped Fri. }
    { 56  ;   ;10:30 AM Delivery   ;Boolean       ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("10:30 AM Delivery"));
                                                              END;

                                                   CaptionML=ENU=10:30 AM Delivery }
    { 57  ;   ;Saturday Delivery   ;Boolean       ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Saturday Delivery"));
                                                              END;

                                                   CaptionML=ENU=Saturday Delivery }
    { 59  ;   ;Service Code        ;Code10        ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Service Code"));
                                                              END;

                                                   CaptionML=ENU=Service Code }
    { 60  ;   ;Service Level Commitment;Text80    ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Service Level Commitment"));
                                                              END;

                                                   CaptionML=ENU=Service Level Commitment }
    { 63  ;   ;Origin Station      ;Code10        ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Origin Station"));
                                                              END;

                                                   CaptionML=ENU=Origin Station }
    { 64  ;   ;Route Code          ;Code20        ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Route Code"));
                                                              END;

                                                   CaptionML=ENU=Route Code }
    { 65  ;   ;Delivery Day        ;Code3         ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Delivery Day"));
                                                              END;

                                                   CaptionML=ENU=Delivery Day }
    { 66  ;   ;Return Shipment Type;Option        ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Return Shipment Type"));
                                                              END;

                                                   CaptionML=ENU=Return Shipment Type;
                                                   OptionCaptionML=ENU=None,Standard;
                                                   OptionString=None,Standard }
    { 68  ;   ;Alternate Call Tag Return;Boolean  ;OnValidate=VAR
                                                                PackingStation@1240030000 : Record 14000709;
                                                              BEGIN
                                                                TestFieldIsEditable(FIELDNO("Alternate Call Tag Return"));

                                                                IF "Alternate Call Tag Return" THEN BEGIN
                                                                  IF PackingStation.Code = '' THEN
                                                                    PackingStation.GetPackingStation;
                                                                  IF "Return Address" = '' THEN BEGIN
                                                                    "Return Company Name" := PackingStation."Ship-from Company";
                                                                    "Return Address" := PackingStation."Ship-from Address";
                                                                    "Return Address 2" := PackingStation."Ship-from Address2";
                                                                    "Return City" := PackingStation."Ship-from City";
                                                                    "Return State" := PackingStation."Ship-from State";
                                                                    "Return ZIP Code" := PackingStation."Ship-from ZIP Code";
                                                                    "Return Country Code" := PackingStation."Ship-from Country Code";
                                                                    "Return Contact" := PackingStation."Ship-from Contact";
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Alternate Call Tag Return }
    { 69  ;   ;Return Company Name ;Text30        ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Return Company Name"));
                                                              END;

                                                   CaptionML=ENU=Return Company Name }
    { 70  ;   ;Return Address      ;Text30        ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Return Address"));
                                                              END;

                                                   CaptionML=ENU=Return Address }
    { 71  ;   ;Return Address 2    ;Text30        ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Return Address 2"));
                                                              END;

                                                   CaptionML=ENU=Return Address 2 }
    { 72  ;   ;Return City         ;Text30        ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Return City"));
                                                              END;

                                                   CaptionML=ENU=Return City }
    { 73  ;   ;Return State        ;Text30        ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Return State"));
                                                              END;

                                                   CaptionML=ENU=Return State }
    { 74  ;   ;Return ZIP Code     ;Code20        ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Return ZIP Code"));
                                                              END;

                                                   CaptionML=ENU=Return ZIP Code }
    { 75  ;   ;Return Country Code ;Code10        ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Return Country Code"));
                                                              END;

                                                   CaptionML=ENU=Return Country Code }
    { 76  ;   ;Return Contact      ;Text30        ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Return Contact"));
                                                              END;

                                                   CaptionML=ENU=Return Contact }
    { 77  ;   ;Return Phone No.    ;Text30        ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Return Phone No."));
                                                              END;

                                                   CaptionML=ENU=Return Phone No. }
    { 78  ;   ;Return Email        ;Text50        ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Return Email"));
                                                              END;

                                                   CaptionML=ENU=Return Email }
    { 79  ;   ;Commerce Licensed   ;Boolean       ;OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("Commerce Licensed"));
                                                              END;

                                                   CaptionML=ENU=Commerce Licensed }
    { 80  ;   ;International Filing Type;Option   ;InitValue=ITN;
                                                   OnValidate=BEGIN
                                                                TestFieldIsEditable(FIELDNO("International Filing Type"));
                                                              END;

                                                   CaptionML=ENU=International Filing Type;
                                                   OptionCaptionML=ENU=FTR,ITN,AES4;
                                                   OptionString=FTR,ITN,AES4 }
  }
  KEYS
  {
    {    ;Type,Source ID,Source Type,Source Subtype,Second Source ID;
                                                   Clustered=Yes }
    {    ;Type,Shipping Agent Code,Shipping Agent Service,World Wide Service }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Package@1000000000 : Record 14000701;
      DHLOptionPage@1000000001 : Record 14050401;
      PackingControl@1240030000 : Record 14000717;
      ShippingAccount@1000000004 : Record 14000714;
      BillOfLading@1000000005 : Record 14000822;
      Text001@1001 : TextConst 'ENU=Cannot be changed when %1 is %2';
      Text002@1002 : TextConst 'ENU=%1 conflict %2 %3.';
      DocumentOptionPageFound@1240030001 : Boolean;
      Text003@1003 : TextConst 'ENU=Unknown type %1.';

    LOCAL PROCEDURE TransferFromPackingControl@12(FromPackingControl@1240030000 : Record 14000717);
    BEGIN
    END;

    LOCAL PROCEDURE TransferFromBillOfLading@3(FromBillOfLading@1000000000 : Record 14000822);
    BEGIN
    END;

    LOCAL PROCEDURE TransferFromShippingAccount@6(CurrentShippingAccount@1000000000 : Record 14000714);
    BEGIN
    END;

    PROCEDURE SetPackage@4(CurrentPackage@1000000000 : Record 14000701);
    BEGIN
      Package := CurrentPackage;
    END;

    LOCAL PROCEDURE GetShippingAccount@5(ShipToType@1240030000 : 'Customer,Vendor,Bank,Prospect,Resource,Employee,,Location';ShipToNo@1240030001 : Code[20];ShipToCode@1240030002 : Code[20];ShippingAgentCode@1240030004 : Code[10];ThirdPartyAccountNo@1240030003 : Code[20]) : Boolean;
    BEGIN
      EXIT(
        ShippingAccount.GetShippingAccountOptionPage(
          ShipToType,ShipToNo,ShipToCode,ShippingAgentCode,ThirdPartyAccountNo));
    END;

    PROCEDURE MergeOptionPage@1240031006(MergeOptionPage@1240030000 : Record 14050401);
    VAR
      InitOptionPage@1240030001 : Record 14050401;
    BEGIN
      InitOptionPage.INIT;

      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Shipping Agent Code")) THEN
        IF MergeOptionPage."Shipping Agent Code" <> InitOptionPage."Shipping Agent Code" THEN
          VALIDATE("Shipping Agent Code",MergeOptionPage."Shipping Agent Code");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("World Wide Service")) THEN
        IF MergeOptionPage."World Wide Service" <> InitOptionPage."World Wide Service" THEN
          VALIDATE("World Wide Service",MergeOptionPage."World Wide Service");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Shipping Agent Service")) THEN
        IF MergeOptionPage."Shipping Agent Service" <> InitOptionPage."Shipping Agent Service" THEN
          VALIDATE("Shipping Agent Service",MergeOptionPage."Shipping Agent Service");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Non-dutiable Document")) THEN
        IF MergeOptionPage."Non-dutiable Document" <> InitOptionPage."Non-dutiable Document" THEN
          VALIDATE("Non-dutiable Document",MergeOptionPage."Non-dutiable Document");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Duty Payment Type")) THEN
        IF MergeOptionPage."Duty Payment Type" <> InitOptionPage."Duty Payment Type" THEN
          VALIDATE("Duty Payment Type",MergeOptionPage."Duty Payment Type");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Duty Payment Account No.")) THEN
        IF MergeOptionPage."Duty Payment Account No." <> InitOptionPage."Duty Payment Account No." THEN
          VALIDATE("Duty Payment Account No.",MergeOptionPage."Duty Payment Account No.");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Content Description")) THEN
        IF MergeOptionPage."Content Description" <> InitOptionPage."Content Description" THEN
          VALIDATE("Content Description",MergeOptionPage."Content Description");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Shipment Type")) THEN
        IF MergeOptionPage."Shipment Type" <> InitOptionPage."Shipment Type" THEN
          VALIDATE("Shipment Type",MergeOptionPage."Shipment Type");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Additional Protection Code")) THEN
        IF MergeOptionPage."Additional Protection Code" <> InitOptionPage."Additional Protection Code" THEN
          VALIDATE("Additional Protection Code",MergeOptionPage."Additional Protection Code");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Additional Protection Value")) THEN
        IF MergeOptionPage."Additional Protection Value" <> InitOptionPage."Additional Protection Value" THEN
          VALIDATE("Additional Protection Value",MergeOptionPage."Additional Protection Value");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Ship Notification Email")) THEN
        IF MergeOptionPage."Ship Notification Email" <> InitOptionPage."Ship Notification Email" THEN
          VALIDATE("Ship Notification Email",MergeOptionPage."Ship Notification Email");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Ship Notification Email2")) THEN
        IF MergeOptionPage."Ship Notification Email2" <> InitOptionPage."Ship Notification Email2" THEN
          VALIDATE("Ship Notification Email2",MergeOptionPage."Ship Notification Email2");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Ship Notification Email3")) THEN
        IF MergeOptionPage."Ship Notification Email3" <> InitOptionPage."Ship Notification Email3" THEN
          VALIDATE("Ship Notification Email3",MergeOptionPage."Ship Notification Email3");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Ship Notification Email4")) THEN
        IF MergeOptionPage."Ship Notification Email4" <> InitOptionPage."Ship Notification Email4" THEN
          VALIDATE("Ship Notification Email4",MergeOptionPage."Ship Notification Email4");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Ship Notification Email5")) THEN
        IF MergeOptionPage."Ship Notification Email5" <> InitOptionPage."Ship Notification Email5" THEN
          VALIDATE("Ship Notification Email5",MergeOptionPage."Ship Notification Email5");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Hold/Pickup at DHL")) THEN
        IF MergeOptionPage."Hold/Pickup at DHL" <> InitOptionPage."Hold/Pickup at DHL" THEN
          VALIDATE("Hold/Pickup at DHL",MergeOptionPage."Hold/Pickup at DHL");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Hazardous Materials")) THEN
        IF MergeOptionPage."Hazardous Materials" <> InitOptionPage."Hazardous Materials" THEN
          VALIDATE("Hazardous Materials",MergeOptionPage."Hazardous Materials");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Zip Code not in State")) THEN
        IF MergeOptionPage."Zip Code not in State" <> InitOptionPage."Zip Code not in State" THEN
          VALIDATE("Zip Code not in State",MergeOptionPage."Zip Code not in State");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Zip Code not in DHL Database")) THEN
        IF MergeOptionPage."Zip Code not in DHL Database" <> InitOptionPage."Zip Code not in DHL Database" THEN
          VALIDATE("Zip Code not in DHL Database",MergeOptionPage."Zip Code not in DHL Database");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Express Sat. not shipped Fri.")) THEN
        IF MergeOptionPage."Express Sat. not shipped Fri." <> InitOptionPage."Express Sat. not shipped Fri." THEN
          VALIDATE("Express Sat. not shipped Fri.",MergeOptionPage."Express Sat. not shipped Fri.");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("10:30 AM Delivery")) THEN
        IF MergeOptionPage."10:30 AM Delivery" <> InitOptionPage."10:30 AM Delivery" THEN
          VALIDATE("10:30 AM Delivery",MergeOptionPage."10:30 AM Delivery");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Saturday Delivery")) THEN
        IF MergeOptionPage."Saturday Delivery" <> InitOptionPage."Saturday Delivery" THEN
          VALIDATE("Saturday Delivery",MergeOptionPage."Saturday Delivery");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Service Code")) THEN
        IF MergeOptionPage."Service Code" <> InitOptionPage."Service Code" THEN
          VALIDATE("Service Code",MergeOptionPage."Service Code");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Service Level Commitment")) THEN
        IF MergeOptionPage."Service Level Commitment" <> InitOptionPage."Service Level Commitment" THEN
          VALIDATE("Service Level Commitment",MergeOptionPage."Service Level Commitment");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Origin Station")) THEN
        IF MergeOptionPage."Origin Station" <> InitOptionPage."Origin Station" THEN
          VALIDATE("Origin Station",MergeOptionPage."Origin Station");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Route Code")) THEN
        IF MergeOptionPage."Route Code" <> InitOptionPage."Route Code" THEN
          VALIDATE("Route Code",MergeOptionPage."Route Code");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Delivery Day")) THEN
        IF MergeOptionPage."Delivery Day" <> InitOptionPage."Delivery Day" THEN
          VALIDATE("Delivery Day",MergeOptionPage."Delivery Day");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Return Shipment Type")) THEN
        IF MergeOptionPage."Return Shipment Type" <> InitOptionPage."Return Shipment Type" THEN
          VALIDATE("Return Shipment Type",MergeOptionPage."Return Shipment Type");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Alternate Call Tag Return")) THEN
        IF MergeOptionPage."Alternate Call Tag Return" <> InitOptionPage."Alternate Call Tag Return" THEN
          VALIDATE("Alternate Call Tag Return",MergeOptionPage."Alternate Call Tag Return");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Return Company Name")) THEN
        IF MergeOptionPage."Return Company Name" <> InitOptionPage."Return Company Name" THEN
          VALIDATE("Return Company Name",MergeOptionPage."Return Company Name");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Return Address")) THEN
        IF MergeOptionPage."Return Address" <> InitOptionPage."Return Address" THEN
          VALIDATE("Return Address",MergeOptionPage."Return Address");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Return Address 2")) THEN
        IF MergeOptionPage."Return Address 2" <> InitOptionPage."Return Address 2" THEN
          VALIDATE("Return Address 2",MergeOptionPage."Return Address 2");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Return City")) THEN
        IF MergeOptionPage."Return City" <> InitOptionPage."Return City" THEN
          VALIDATE("Return City",MergeOptionPage."Return City");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Return State")) THEN
        IF MergeOptionPage."Return State" <> InitOptionPage."Return State" THEN
          VALIDATE("Return State",MergeOptionPage."Return State");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Return ZIP Code")) THEN
        IF MergeOptionPage."Return ZIP Code" <> InitOptionPage."Return ZIP Code" THEN
          VALIDATE("Return ZIP Code",MergeOptionPage."Return ZIP Code");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Return Country Code")) THEN
        IF MergeOptionPage."Return Country Code" <> InitOptionPage."Return Country Code" THEN
          VALIDATE("Return Country Code",MergeOptionPage."Return Country Code");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Return Contact")) THEN
        IF MergeOptionPage."Return Contact" <> InitOptionPage."Return Contact" THEN
          VALIDATE("Return Contact",MergeOptionPage."Return Contact");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Return Phone No.")) THEN
        IF MergeOptionPage."Return Phone No." <> InitOptionPage."Return Phone No." THEN
          VALIDATE("Return Phone No.",MergeOptionPage."Return Phone No.");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Return Email")) THEN
        IF MergeOptionPage."Return Email" <> InitOptionPage."Return Email" THEN
          VALIDATE("Return Email",MergeOptionPage."Return Email");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("Commerce Licensed")) THEN
        IF MergeOptionPage."Commerce Licensed" <> InitOptionPage."Commerce Licensed" THEN
          VALIDATE("Commerce Licensed",MergeOptionPage."Commerce Licensed");
      IF MergeOptionPage.FieldIsAvailable(FIELDNO("International Filing Type")) THEN
        IF MergeOptionPage."International Filing Type" <> InitOptionPage."International Filing Type" THEN
          VALIDATE("International Filing Type",MergeOptionPage."International Filing Type");
    END;

    LOCAL PROCEDURE TestFieldIsEditable@1240031005(TestFieldNo@1240030000 : Integer);
    BEGIN
      IF NOT FieldIsAvailable(TestFieldNo) THEN
        ERROR(Text001,FIELDNAME(Type),Type);
    END;

    PROCEDURE FieldIsAvailable@1240031002(TestFieldNo@1240030000 : Integer) : Boolean;
    BEGIN
      CASE TestFieldNo OF
        FIELDNO("Shipping Agent Code"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("World Wide Service"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Shipping Agent Service"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Non-dutiable Document"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Duty Payment Type"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Duty Payment Account No."):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Content Description"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Shipment Type"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Additional Protection Code"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Additional Protection Value"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Ship Notification Email"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Ship Notification Email2"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Ship Notification Email3"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Ship Notification Email4"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Ship Notification Email5"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Hold/Pickup at DHL"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Hazardous Materials"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Zip Code not in State"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Zip Code not in DHL Database"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Express Sat. not shipped Fri."):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("10:30 AM Delivery"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Saturday Delivery"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Service Code"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Service Level Commitment"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Origin Station"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Route Code"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Delivery Day"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Return Shipment Type"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Alternate Call Tag Return"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Return Company Name"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Return Address"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Return Address 2"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Return City"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Return State"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Return ZIP Code"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Return Country Code"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Return Contact"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Return Phone No."):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Return Email"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("Commerce Licensed"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
        FIELDNO("International Filing Type"):
          EXIT(TypeIsAvailable(FALSE,FALSE,FALSE,FALSE,FALSE,FALSE));
      END;
    END;

    LOCAL PROCEDURE TypeIsAvailable@1240031003(RegularOptionPage@1240030004 : Boolean;SetupOptionPage@1240030000 : Boolean;DocumentOptionPage@1240030005 : Boolean;ItemResourceOptionPage@1240030001 : Boolean;StandardOptionPage@1240030002 : Boolean;MasterDataOptionPage@1240030003 : Boolean) : Boolean;
    BEGIN
      CASE Type OF
        Type::Package,
        Type::"Bill of Lading":
          EXIT(RegularOptionPage);
        Type::Document,
        Type::"Rate Shop":
          EXIT(DocumentOptionPage);
        Type::Setup:
          EXIT(SetupOptionPage);
        Type::Item,
        Type::Resource:
          EXIT(ItemResourceOptionPage);
        Type::"Standard Option":
          EXIT(StandardOptionPage);
        Type::"Master Data":
          EXIT(MasterDataOptionPage);
        ELSE
          ERROR(Text003,Type);
      END;
    END;

    PROCEDURE CaptionText@1240030000() : Text[250];
    VAR
      PackingControl@1240030000 : Record 14000717;
    BEGIN
      EXIT(
        PackingControl.FormatOptionPageCaption(
          Type,"Source Type","Source Subtype","Source ID","Second Source ID",
          FORMAT(Type),"Shipping Agent Code","Shipping Agent Service"));
    END;

    BEGIN
    END.
  }
}

