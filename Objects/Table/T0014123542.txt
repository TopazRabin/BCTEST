OBJECT Table 14123542 ES Summary Calculation
{
  OBJECT-PROPERTIES
  {
    Date=05/11/18;
    Time=12:00:00 PM;
    Version List=ES1.41.52;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               Comment(1,STRSUBSTNO(Text019,TABLECAPTION,Type,Code));
             END;

    OnModify=BEGIN
               Comment(1,STRSUBSTNO(Text020,TABLECAPTION,Type,Code));
             END;

    OnDelete=BEGIN
               ESSummaryCalculationLine.RESET;
               ESSummaryCalculationLine.SETRANGE("Summary Calculation Type",Type);
               ESSummaryCalculationLine.SETRANGE("Summary Calculation Code",Code);
               ESSummaryCalculationLine.DELETEALL;

               Comment(1,STRSUBSTNO(Text021,TABLECAPTION,Type,Code));
             END;

    CaptionML=ENU=Summary Calculation;
    LookupPageID=Page14123701;
    DrillDownPageID=Page14123701;
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;InitValue=Ability;
                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=" ,Violation,Ability";
                                                   OptionString=[ ,Violation,Ability] }
    { 2   ;   ;Code                ;Code20        ;CaptionML=ENU=Code;
                                                   NotBlank=Yes }
    { 11  ;   ;Description         ;Text250       ;CaptionML=ENU=Description }
    { 12  ;   ;Calculate           ;Boolean       ;OnValidate=BEGIN
                                                                IF Calculate THEN
                                                                  IF CurrFieldNo = FIELDNO(Calculate) THEN
                                                                    CheckObjectProperties(TRUE);
                                                              END;

                                                   CaptionML=ENU=Calculate }
    { 13  ;   ;File Name           ;Text250       ;OnValidate=VAR
                                                                ESObjectExplorer@1240520001 : Record 14123901;
                                                              BEGIN
                                                                ESObjectExplorer.CheckCorrectFileName("File Name",TRUE);
                                                              END;

                                                   OnLookup=VAR
                                                              ESObjectExplorer@1240520001 : Record 14123901;
                                                            BEGIN
                                                              "File Name" := CommonDialogMgt.OpenFile(FIELDCAPTION("File Name"),"File Name",1,'*.txt',1);
                                                              ESObjectExplorer.CheckCorrectFileName("File Name",TRUE);
                                                            END;

                                                   CaptionML=ENU=File Name }
    { 14  ;   ;Exported Date Time  ;DateTime      ;CaptionML=ENU=Exported Date Time;
                                                   Editable=No }
    { 15  ;   ;Imported Date Time  ;DateTime      ;CaptionML=ENU=Imported Date Time;
                                                   Editable=No }
    { 21  ;   ;Logins              ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("ES Summary Result" WHERE (Type=FILTER(Database Login..Windows Login),
                                                                                                Summary Calculation Type=FIELD(Type),
                                                                                                Summary Calculation Code=FIELD(Code)));
                                                   CaptionML=ENU=Logins;
                                                   BlankZero=Yes;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Type,Code                               ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1240520005 : TextConst 'ENU=Import (Overwrite Existing)';
      Text002@1240520012 : TextConst 'ENU=Closing File';
      Text003@1240520011 : TextConst 'ENU=Recording %1 exported to %2 with %3 records.';
      Text004@1240520018 : TextConst 'ENU=Nothing imported.';
      Text005@1240520017 : TextConst 'ENU=File Name must be entered.';
      Text006@1240520016 : TextConst 'ENU=Importing %1 from file\';
      Text007@1240520015 : TextConst 'ENU=Process #1################################################\';
      Text008@1240520014 : TextConst 'ENU=Opening file';
      Text009@1240520013 : TextConst 'ENU=%1 records have been imported from %2.';
      Text010@1240520020 : TextConst 'ENU=%1 is not valid content for this filetype.';
      Text011@1240520019 : TextConst 'ENU=Imported %1';
      Text012@1240520004 : TextConst 'ENU=Nothing has been exported.';
      Text013@1240520003 : TextConst 'ENU=File %1 already exists, overwrite?';
      Text014@1240520002 : TextConst 'ENU=Process #1################################################';
      Text015@1240520001 : TextConst 'ENU=%1 %2 exported to %3 with %4 records.';
      Text016@1240520008 : TextConst 'ENU=Exporting %1 to file\';
      Text017@1240520007 : TextConst 'ENU=Updating Version';
      Text018@1240520006 : TextConst 'ENU=Creating File';
      ESSummaryCalculationLine@1240520021 : Record 14123543;
      ESSecuritySetup@1240520025 : Record 14123521;
      ESFileMgt@1240520010 : Codeunit 14123502;
      CommonDialogMgt@1240520009 : Codeunit 14123901;
      Text019@1240520024 : TextConst 'ENU=Inserted %1 %2 %3';
      Text020@1240520023 : TextConst 'ENU=Modified %1 %2 %3';
      Text021@1240520022 : TextConst 'ENU=Deleted %1 %2 %3';
      Text022@1001 : TextConst 'ENU=Update Object Properties?';
      Text023@1002 : TextConst 'ENU=%1 records inserted and %2 records modified in %3.';
      Text024@1003 : TextConst 'ENU=Nothing changed.';
      Text025@1004 : TextConst 'ENU=Object Properties are correct.';
      Text026@1005 : TextConst 'ENU=%1 already exists.';
      Text101@2001 : TextConst 'ENU=Downloading File.';
      Text102@2000 : TextConst 'ENU=Uploading file.';

    PROCEDURE CheckObjectProperties@1240520001(ShowStatus@1240520006 : Boolean) : Boolean;
    VAR
      ESObjectInfo@1240520001 : Record 14123509;
      ESObjectProperty@1240520002 : Record 14123522;
      ESObjectProperty2@1240520005 : Record 14123522;
      MissingObjectProperties@1240520003 : Integer;
      MissingSoDObjectProperties@1240520004 : Integer;
    BEGIN
      ESSummaryCalculationLine.RESET;
      ESSummaryCalculationLine.SETRANGE("Summary Calculation Type",Type);
      ESSummaryCalculationLine.SETRANGE("Summary Calculation Code",Code);
      IF ESSummaryCalculationLine.FIND('-') THEN
        REPEAT
          IF ESObjectInfo.GET(
               ESSummaryCalculationLine."Object Type",ESSummaryCalculationLine."Object ID")
          THEN BEGIN
            IF ESObjectProperty.GET(
                 ESSummaryCalculationLine."Object Type",ESSummaryCalculationLine."Object ID")
            THEN BEGIN
              IF NOT ESObjectProperty."Segregation of Duties" THEN
                MissingSoDObjectProperties := MissingSoDObjectProperties + 1;
            END ELSE
              MissingObjectProperties := MissingObjectProperties + 1;
          END;
        UNTIL ESSummaryCalculationLine.NEXT = 0;

      IF NOT ShowStatus THEN
        EXIT((MissingObjectProperties = 0) AND (MissingSoDObjectProperties = 0));

      IF (MissingObjectProperties > 0) OR (MissingSoDObjectProperties > 0) THEN BEGIN
        IF CONFIRM(Text022,TRUE) THEN BEGIN
          IF ESSummaryCalculationLine.FIND('-') THEN
            REPEAT
              IF ESObjectInfo.GET(
                   ESSummaryCalculationLine."Object Type",ESSummaryCalculationLine."Object ID")
              THEN BEGIN
                IF ESObjectProperty.GET(
                     ESSummaryCalculationLine."Object Type",ESSummaryCalculationLine."Object ID")
                THEN BEGIN
                  IF NOT ESObjectProperty."Segregation of Duties" THEN BEGIN
                    ESObjectProperty2 := ESObjectProperty;
                    ESObjectProperty2.VALIDATE("Segregation of Duties",TRUE);
                    ESObjectProperty2.MODIFY(TRUE);

                    MissingSoDObjectProperties := MissingSoDObjectProperties + 1;
                  END;
                END ELSE BEGIN
                  ESObjectProperty2.INIT;
                  ESObjectProperty2.VALIDATE("Object Type",ESSummaryCalculationLine."Object Type");
                  ESObjectProperty2.VALIDATE("Object ID",ESSummaryCalculationLine."Object ID");
                  ESObjectProperty2.INSERT(TRUE);
                  ESObjectProperty2.VALIDATE("Segregation of Duties",TRUE);
                  ESObjectProperty2.MODIFY(TRUE);

                  MissingObjectProperties := MissingObjectProperties + 1;
                END;
              END;
            UNTIL ESSummaryCalculationLine.NEXT = 0;

          MESSAGE(
            Text023,
            MissingObjectProperties,MissingSoDObjectProperties,ESObjectProperty.TABLECAPTION);
        END ELSE
          ERROR(Text024);
      END ELSE
        MESSAGE(Text025);
    END;

    PROCEDURE CreateFromRecording@1240520003(RecordingCode@1240520005 : Code[30];ShowStatus@1240520007 : Boolean);
    VAR
      ESSecuritySetup@1240520004 : Record 14123521;
      ESRecording@1240520001 : Record 14123651;
      ESRecordingPermission@1240520002 : Record 14123652;
      ESObjectInformation@1240520009 : Record 14123509;
      ESObjectProperty@1240520003 : Record 14123522;
      ESSummaryCalculationLine@1240520006 : Record 14123543;
      InsertLine@1240520008 : Boolean;
    BEGIN
      ESSecuritySetup.GET;
      ESSecuritySetup.TestPublishCompany;

      ESSummaryCalculationLine.RESET;
      ESSummaryCalculationLine.SETRANGE("Summary Calculation Type",Type);
      ESSummaryCalculationLine.SETRANGE("Summary Calculation Code",Code);
      IF ESSummaryCalculationLine.FIND('-') THEN
        ERROR(Text026,ESSummaryCalculationLine.TABLECAPTION);

      ESSummaryCalculationLine.INIT;
      ESSummaryCalculationLine."Summary Calculation Type" := Type;
      ESSummaryCalculationLine."Summary Calculation Code" := Code;
      ESSummaryCalculationLine."Line No." := 0;

      IF RecordingCode = '' THEN BEGIN
        IF PAGE.RUNMODAL(0,ESRecording) <> ACTION::LookupOK THEN
          EXIT;
        RecordingCode := ESRecording.Code;
      END;

      ESRecording.GET(RecordingCode);

      ESRecordingPermission.RESET;
      ESRecordingPermission.SETRANGE("Recording Code",ESRecording.Code);
      ESRecordingPermission.SETRANGE("Object Type",ESRecordingPermission."Object Type"::TableData);
      IF ESRecordingPermission.FIND('-') THEN
        REPEAT
          IF ESObjectInformation.GET(
               ESRecordingPermission."Object Type",ESRecordingPermission."Object ID")
          THEN BEGIN
            IF ESObjectProperty.GET(
                 ESRecordingPermission."Object Type",ESRecordingPermission."Object ID")
            THEN BEGIN
              InsertLine :=
                ESObjectProperty."Segregation of Duties" OR
                (ESObjectProperty."Quick Security Type" <>
                 ESObjectProperty."Quick Security Type"::"Full Access");
            END ELSE
              InsertLine := FALSE;
          END ELSE
            InsertLine := FALSE;

          IF (ESRecordingPermission."Insert Required" OR
              ESRecordingPermission."Modify Required" OR
              ESRecordingPermission."Delete Required") AND InsertLine
          THEN BEGIN
            ESSummaryCalculationLine.INIT;
            ESSummaryCalculationLine."Line No." := ESSummaryCalculationLine."Line No." + 10000;
            ESSummaryCalculationLine.VALIDATE("Object Type",ESRecordingPermission."Object Type");
            ESSummaryCalculationLine.VALIDATE("Object ID",ESRecordingPermission."Object ID");
            CASE TRUE OF
              ESRecordingPermission."Insert Required" AND ESRecordingPermission."Modify Required" AND
              ESRecordingPermission."Delete Required":
                ESSummaryCalculationLine.VALIDATE(
                  "Access Type",ESSummaryCalculationLine."Access Type"::"Insert and Modify and Delete");
              ESRecordingPermission."Insert Required" AND ESRecordingPermission."Modify Required":
                ESSummaryCalculationLine.VALIDATE(
                  "Access Type",ESSummaryCalculationLine."Access Type"::"Insert and Modify");
              ESRecordingPermission."Insert Required" AND ESRecordingPermission."Delete Required":
                ESSummaryCalculationLine.VALIDATE(
                  "Access Type",ESSummaryCalculationLine."Access Type"::"Insert and Delete");
              ESRecordingPermission."Modify Required" AND ESRecordingPermission."Delete Required":
                ESSummaryCalculationLine.VALIDATE(
                  "Access Type",ESSummaryCalculationLine."Access Type"::"Modify and Delete");
              ESRecordingPermission."Insert Required":
                ESSummaryCalculationLine.VALIDATE(
                  "Access Type",ESSummaryCalculationLine."Access Type"::Insert);
              ESRecordingPermission."Modify Required":
                ESSummaryCalculationLine.VALIDATE(
                  "Access Type",ESSummaryCalculationLine."Access Type"::Modify);
              ESRecordingPermission."Delete Required":
                ESSummaryCalculationLine.VALIDATE(
                  "Access Type",ESSummaryCalculationLine."Access Type"::Delete);
            END;
            ESSummaryCalculationLine.INSERT(TRUE);
          END;
        UNTIL ESRecordingPermission.NEXT = 0;

      ESRecordingPermission.RESET;
      ESRecordingPermission.SETRANGE("Recording Code",ESRecording.Code);
      ESRecordingPermission.SETRANGE(
        "Object Type",ESRecordingPermission."Object Type"::"2",
        ESRecordingPermission."Object Type"::Query);
      IF ESRecordingPermission.FIND('-') THEN
        REPEAT
          IF ESObjectInformation.GET(
               ESRecordingPermission."Object Type",ESRecordingPermission."Object ID")
          THEN BEGIN
            IF ESObjectProperty.GET(
                 ESRecordingPermission."Object Type",ESRecordingPermission."Object ID")
            THEN BEGIN
              InsertLine :=
                ESObjectProperty."Segregation of Duties" OR
                (ESObjectProperty."Quick Security Type" <>
                 ESObjectProperty."Quick Security Type"::"Full Access") OR
                ESObjectProperty."Object Level Permissions";
            END ELSE
              InsertLine := FALSE;
          END ELSE
            InsertLine := FALSE;

          IF ESRecordingPermission."Execute Required" AND InsertLine THEN BEGIN
            ESSummaryCalculationLine.INIT;
            ESSummaryCalculationLine."Line No." := ESSummaryCalculationLine."Line No." + 10000;
            ESSummaryCalculationLine.VALIDATE("Object Type",ESRecordingPermission."Object Type");
            ESSummaryCalculationLine.VALIDATE("Object ID",ESRecordingPermission."Object ID");
            ESSummaryCalculationLine.INSERT(TRUE);
          END;
        UNTIL ESRecordingPermission.NEXT = 0;

      CheckObjectProperties(ShowStatus);
    END;

    PROCEDURE ExportMultipleCalculations@1240520002(VAR ESSummaryCalculation@1240520004 : Record 14123542;ShowStatus@1240520021 : Boolean;ExportFileName@1240520001 : Text[250]);
    VAR
      ESEnterFileName@1240520002 : Page 14123560;
      FileMgt@1001 : Codeunit 419;
      TempServerFile@1000 : File;
      Window@1240520005 : Dialog;
      TempServerFileName@1002 : Text[1000];
      TotalRecords@1240520008 : Integer;
      TotalCodes@1240520003 : Integer;
    BEGIN
      IF ExportFileName = '' THEN BEGIN
        CLEAR(ESEnterFileName);
        ESEnterFileName.LOOKUPMODE(TRUE);
        ESEnterFileName.SelectNewFile(TRUE);
        IF ESEnterFileName.RUNMODAL <> ACTION::LookupOK THEN
          ERROR(Text012);
        ExportFileName := ESEnterFileName.GetFileName;
      END;

      TempServerFile.WRITEMODE(TRUE);
      TempServerFile.TEXTMODE(TRUE);
      TempServerFile.CREATETEMPFILE;
      TempServerFileName := TempServerFile.NAME;
      TempServerFile.CLOSE;

      IF GUIALLOWED THEN
        Window.OPEN(Text014);

      IF ESSummaryCalculation.FIND('-') THEN
        REPEAT
          IF GUIALLOWED THEN
            Window.UPDATE(1,ESSummaryCalculation.Code);

          TotalCodes := TotalCodes + 1;

          TotalRecords :=
            TotalRecords + ESSummaryCalculation.ExportCalculation(FALSE,TRUE,TRUE,TempServerFileName,FALSE);
        UNTIL ESSummaryCalculation.NEXT = 0;

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text101);
      FileMgt.DownloadToFile(TempServerFileName,ExportFileName);

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(
          Text015,
          TotalCodes,TABLECAPTION,ExportFileName,TotalRecords);
    END;

    PROCEDURE ExportCalculation@1240520014(ShowStatus@1240520021 : Boolean;ConfirmOverwrite@1240520020 : Boolean;AppendToFile@1240520004 : Boolean;ExportFileName@1240520003 : Text[250];ShowProgress@1240520002 : Boolean) : Integer;
    VAR
      ESSummaryCalculation@1240520010 : Record 14123542;
      ESSummaryCalculationLine@1240520011 : Record 14123543;
      ESEnterFileName@1240520001 : Page 14123560;
      FileMgt@1000 : Codeunit 419;
      Window@1240520009 : Dialog;
      OutputFile@1240520019 : File;
      Value@1240520022 : ARRAY [100] OF Text[1000];
      LocalFileName@1001 : Text[1000];
      TotalRecords@1240520008 : Integer;
    BEGIN
      IF NOT AppendToFile THEN BEGIN
        IF ExportFileName = '' THEN BEGIN
          CLEAR(ESEnterFileName);
          ESEnterFileName.LOOKUPMODE(TRUE);
          ESEnterFileName.SelectNewFile(TRUE);
          IF ESEnterFileName.RUNMODAL <> ACTION::LookupOK THEN
            ERROR(Text012);
          ExportFileName := ESEnterFileName.GetFileName;
        END;

        IF ConfirmOverwrite THEN
          IF EXISTS(ExportFileName) THEN
            IF NOT CONFIRM(Text013,FALSE,ExportFileName) THEN
              ERROR(Text012);

        LocalFileName := ExportFileName;
        OutputFile.WRITEMODE(TRUE);
        OutputFile.TEXTMODE(TRUE);
        OutputFile.CREATETEMPFILE;
        ExportFileName := OutputFile.NAME;
        OutputFile.CLOSE;
      END;

      IF GUIALLOWED AND ShowProgress THEN
        Window.OPEN(STRSUBSTNO(ESSecuritySetup.ExtendProgressText(Text016),TABLECAPTION) + Text014);

      IF GUIALLOWED AND ShowProgress THEN
        Window.UPDATE(1,Text017);
      "Exported Date Time" := CREATEDATETIME(TODAY,TIME);
      MODIFY(TRUE);

      IF GUIALLOWED AND ShowProgress THEN
        Window.UPDATE(1,Text018);
      OutputFile.WRITEMODE(TRUE);
      OutputFile.TEXTMODE(TRUE);
      IF EXISTS(ExportFileName) AND AppendToFile THEN BEGIN
        OutputFile.OPEN(ExportFileName);
        OutputFile.SEEK(OutputFile.LEN);
      END ELSE
        OutputFile.CREATE(ExportFileName);

      CLEAR(ESFileMgt);
      ESFileMgt.SetDelimiters('~"','"~',',');

      IF GUIALLOWED AND ShowProgress THEN
        Window.UPDATE(1,'HEADER');
      Value[1] := ESFileMgt.FormatInteger(0) +'V1';
      Value[2] := 'HEADER';
      Value[3] := Code;
      Value[4] := Description;
      Value[5] := USERID;
      Value[6] := ESFileMgt.FormatDate(TODAY);
      Value[7] := ESFileMgt.FormatTime(TIME);
      OutputFile.WRITE(ESFileMgt.FormatValues(Value,7));

      Value[1] := ESFileMgt.FormatInteger(DATABASE::"ES Summary Calculation") + 'V1';
      Value[2] := ESFileMgt.FormatInteger(Type);
      Value[3] := Code;
      Value[4] := Description;
      Value[5] := ESFileMgt.FormatBoolean(Calculate);
      Value[6] := "File Name";
      OutputFile.WRITE(ESFileMgt.FormatValues(Value,6));

      TotalRecords := TotalRecords + 1;

      ESSummaryCalculationLine.RESET;
      ESSummaryCalculationLine.SETRANGE("Summary Calculation Type",Type);
      ESSummaryCalculationLine.SETRANGE("Summary Calculation Code",Code);
      IF ESSummaryCalculationLine.FIND('-') THEN
        REPEAT
          Value[1] := ESFileMgt.FormatInteger(DATABASE::"ES Summary Calculation Line") + 'V3';
          Value[2] := ESFileMgt.FormatInteger(ESSummaryCalculationLine."Summary Calculation Type");
          Value[3] := ESSummaryCalculationLine."Summary Calculation Code";
          Value[4] := ESFileMgt.FormatInteger(ESSummaryCalculationLine."Line No.");
          Value[5] := ESSummaryCalculationLine.Description;
          Value[6] := ESSummaryCalculationLine."Object Access Filter";
          Value[7] := ESFileMgt.FormatInteger(ESSummaryCalculationLine."Object Type");
          Value[8] := ESFileMgt.FormatInteger(ESSummaryCalculationLine."Object ID");
          Value[9] := ESFileMgt.FormatInteger(ESSummaryCalculationLine."Access Type");
          Value[10] := ESSummaryCalculationLine."Ability Summ. Calculation Code";
          OutputFile.WRITE(ESFileMgt.FormatValues(Value,10));

          TotalRecords := TotalRecords + 1;
        UNTIL ESSummaryCalculationLine.NEXT = 0;

      IF GUIALLOWED AND ShowProgress THEN
        Window.UPDATE(1,'TOTALS');
      Value[1] := ESFileMgt.FormatInteger(0) + 'V1';
      Value[2] := 'TOTALS';
      Value[3] := Code;
      Value[4] := Description;
      Value[5] := USERID;
      Value[6] := ESFileMgt.FormatDate(TODAY);
      Value[7] := ESFileMgt.FormatTime(TIME);
      Value[8] := ESFileMgt.FormatInteger(TotalRecords);
      OutputFile.WRITE(ESFileMgt.FormatValues(Value,8));

      IF GUIALLOWED AND ShowProgress THEN
        Window.UPDATE(1,Text002);
      OutputFile.CLOSE;

      IF NOT AppendToFile THEN BEGIN
        IF GUIALLOWED AND ShowProgress THEN
          Window.UPDATE(1,Text101);
        FileMgt.DownloadToFile(ExportFileName,LocalFileName);
      END;

      IF GUIALLOWED AND ShowProgress THEN
        Window.CLOSE;

      IF ShowStatus THEN
        MESSAGE(
          Text003,
          Code,LocalFileName,TotalRecords);

      EXIT(TotalRecords);
    END;

    PROCEDURE ImportCalculation@1240520013(ShowStatus@1240520011 : Boolean;ImportFileName@1240520015 : Text[250];OverWriteExisting@1240520001 : Boolean);
    VAR
      ESSummaryCalculation@1240520013 : Record 14123542;
      ESSummaryCalculation2@1240520002 : Record 14123542;
      ESSummaryCalculationLine@1240520014 : Record 14123543;
      ESObjectInfo@1240520005 : Record 14123509;
      ESObjectProperty@1240520004 : Record 14123522;
      ESObjectProperty2@1240520003 : Record 14123522;
      ESEnterFileName@1240520009 : Page 14123560;
      FileMgt@1000 : Codeunit 419;
      InputFile@1240520016 : File;
      Window@1240520012 : Dialog;
      TempText@1240520010 : Text[1000];
      Value@1240520008 : ARRAY [100] OF Text[1000];
      ServerFileName@1001 : Text[1000];
      NextUpdatePos@1240520022 : Integer;
      TotalRecords@1240520023 : Integer;
      MissingObjectProperties@1240520007 : Integer;
      MissingSoDObjectProperties@1240520006 : Integer;
    BEGIN
      IF ImportFileName = '' THEN BEGIN
        CLEAR(ESEnterFileName);
        ESEnterFileName.LOOKUPMODE(TRUE);
        IF ESEnterFileName.RUNMODAL <> ACTION::LookupOK THEN
          ERROR(Text004);
        ImportFileName := ESEnterFileName.GetFileName;
      END;

      IF ImportFileName = '' THEN
        ERROR(Text005);

      IF GUIALLOWED THEN
        Window.OPEN(
          STRSUBSTNO(ESSecuritySetup.ExtendProgressText(Text006),TABLECAPTION) +
          Text007 + '        @2@@@@@@@@@@@@@@@@@@@@@@@@@@@@');

      CLEAR(ESFileMgt);
      ESFileMgt.SetDelimiters('~"','"~',',');

      IF GUIALLOWED THEN
        Window.UPDATE(1,Text008);
      InputFile.WRITEMODE(FALSE);
      InputFile.TEXTMODE(TRUE);
      IF NOT InputFile.OPEN(ImportFileName) THEN BEGIN
        IF GUIALLOWED THEN
          Window.UPDATE(1,Text102);
        ServerFileName := FileMgt.UploadFileSilent(ImportFileName);
        IF GUIALLOWED THEN
          Window.UPDATE(1,Text008);

        IF NOT InputFile.OPEN(ServerFileName) THEN
          InputFile.OPEN(ImportFileName);
      END;
      WHILE InputFile.POS < InputFile.LEN DO BEGIN
        IF NextUpdatePos < InputFile.POS THEN BEGIN
          IF GUIALLOWED THEN
            Window.UPDATE(2,ROUND(10000 * (InputFile.POS / InputFile.LEN),1));
          NextUpdatePos := ROUND(InputFile.POS + InputFile.LEN / 500,1);
        END;

        InputFile.READ(TempText);
        ESFileMgt.SplitInValues(Value,TempText);

        CASE Value[1] OF
          '','0V1':
            ;
          '14123542V1':
            BEGIN
              IF GUIALLOWED THEN
                Window.UPDATE(1,Value[2]);

              ESSummaryCalculation.INIT;
              ESSummaryCalculation.Type := ESFileMgt.EvaluateInteger(Value[2]);
              ESSummaryCalculation.Code := Value[3];
              ESSummaryCalculation.Description := Value[4];
              ESSummaryCalculation.Calculate := ESFileMgt.EvaluateBoolean(Value[5]);

              ESSummaryCalculation."Imported Date Time" := CREATEDATETIME(TODAY,TIME);
              ESSummaryCalculation."File Name" := ImportFileName;

              IF OverWriteExisting AND
                 ESSummaryCalculation2.GET(ESSummaryCalculation.Type,ESSummaryCalculation.Code)
              THEN BEGIN
                ESSummaryCalculation2.Comment(1,Text001);
                ESSummaryCalculation2.DELETE;

                ESSummaryCalculationLine.RESET;
                ESSummaryCalculationLine.SETRANGE("Summary Calculation Type",ESSummaryCalculation.Type);
                ESSummaryCalculationLine.SETRANGE("Summary Calculation Code",ESSummaryCalculation.Code);
                ESSummaryCalculationLine.DELETEALL;
              END;

              ESSummaryCalculation.INSERT(TRUE);

              ESSummaryCalculation.Comment(1,STRSUBSTNO(Text011,ESSummaryCalculation.TABLECAPTION));

              TotalRecords := TotalRecords + 1;
            END;
          '14123543V1','14123543V2','14123543V3':
            BEGIN
              ESSummaryCalculationLine.INIT;
              ESSummaryCalculationLine."Summary Calculation Type" := ESFileMgt.EvaluateInteger(Value[2]);
              ESSummaryCalculationLine."Summary Calculation Code" := Value[3];
              ESSummaryCalculationLine."Line No." := ESFileMgt.EvaluateInteger(Value[4]);
              ESSummaryCalculationLine.Description := Value[5];
              ESSummaryCalculationLine."Object Access Filter" := Value[6];
              ESSummaryCalculationLine."Object Type" := ESFileMgt.EvaluateInteger(Value[7]);
              ESSummaryCalculationLine."Object ID" := ESFileMgt.EvaluateInteger(Value[8]);
              IF Value[1] > '14123543V1' THEN
                ESSummaryCalculationLine."Access Type" := ESFileMgt.EvaluateInteger(Value[9]);
              IF Value[1] > '14123543V2' THEN
                ESSummaryCalculationLine."Ability Summ. Calculation Code" := Value[10];

              ESSummaryCalculationLine.INSERT(TRUE);

              IF ESSummaryCalculation.Calculate THEN
                IF ESObjectInfo.GET(
                     ESSummaryCalculationLine."Object Type",ESSummaryCalculationLine."Object ID")
                THEN
                  IF ESObjectProperty.GET(
                       ESSummaryCalculationLine."Object Type",ESSummaryCalculationLine."Object ID")
                  THEN BEGIN
                    IF NOT ESObjectProperty."Segregation of Duties" THEN BEGIN
                      ESObjectProperty2 := ESObjectProperty;
                      ESObjectProperty2.VALIDATE("Segregation of Duties",TRUE);
                      ESObjectProperty2.MODIFY(TRUE);

                      MissingSoDObjectProperties := MissingSoDObjectProperties + 1;
                    END;
                  END ELSE BEGIN
                    ESObjectProperty2.INIT;
                    ESObjectProperty2.VALIDATE("Object Type",ESSummaryCalculationLine."Object Type");
                    ESObjectProperty2.VALIDATE("Object ID",ESSummaryCalculationLine."Object ID");
                    ESObjectProperty2.INSERT(TRUE);
                    ESObjectProperty2.VALIDATE("Segregation of Duties",TRUE);
                    ESObjectProperty2.MODIFY(TRUE);

                    MissingObjectProperties := MissingObjectProperties + 1;
                  END;

              TotalRecords := TotalRecords + 1;
            END;
          ELSE
            ERROR(Text010,Value[1]);
        END;
      END;

      InputFile.CLOSE;
      IF ServerFileName <> '' THEN
        ERASE(ServerFileName);

      IF GUIALLOWED THEN
        Window.CLOSE;

      IF ShowStatus THEN BEGIN
        MESSAGE(Text009,TotalRecords,ImportFileName);

        IF (MissingObjectProperties > 0) OR (MissingSoDObjectProperties > 0) THEN
          MESSAGE(
            Text023,
            MissingObjectProperties,MissingSoDObjectProperties,ESObjectProperty.TABLECAPTION);
      END;
    END;

    PROCEDURE Comment@1240520020(FunctionNo@1240520008 : ' ,Insert,Show,Exist,DeleteAll';NewText@1240520010 : Text[250]) : Boolean;
    VAR
      ESComment@1240520009 : Record 14123524;
    BEGIN
      ESComment.RESET;
      ESComment.SETRANGE("Table ID",DATABASE::"ES Summary Calculation");
      ESComment.SETRANGE(Type,Type);
      ESComment.SETRANGE(Code,Code);
      EXIT(ESComment.Functions(FunctionNo,NewText));
    END;

    BEGIN
    END.
  }
}

