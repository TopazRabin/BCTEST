OBJECT Table 14002802 RF Employee Setup
{
  OBJECT-PROPERTIES
  {
    Date=08/21/18;
    Time=12:00:00 PM;
    Version List=RF1.50.13;
  }
  PROPERTIES
  {
    OnDelete=VAR
               WhseEmployee@1240020000 : Record 7301;
               RFSetup@1240020001 : Record 14002801;
             BEGIN
               WhseEmployee.RESET;
               WhseEmployee.SETRANGE("RF Employee Setup Code",Code);
               IF WhseEmployee.FINDSET(FALSE) THEN
                 WhseEmployee.MODIFYALL("RF Employee Setup Code",'');

               RFSetup.RESET;
               IF RFSetup.GET('') THEN
                 IF RFSetup."Default OWR Emp. Setup Code" = Code THEN BEGIN
                   RFSetup."Default OWR Emp. Setup Code" := '';
                   RFSetup.MODIFY(TRUE);
                 END;
             END;

    CaptionML=ENU=RF Employee Setup;
    LookupPageID=Page14002803;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code50        ;CaptionML=ENU=Code }
    { 11  ;   ;Select Unassigned Picks;Boolean    ;InitValue=Yes;
                                                   CaptionML=ENU=Select Unassigned Picks }
    { 12  ;   ;Select Unassigned Put-aways;Boolean;InitValue=Yes;
                                                   CaptionML=ENU=Select Unassigned Put-aways }
    { 13  ;   ;Scan Only Takes on Picks;Boolean   ;InitValue=Yes;
                                                   CaptionML=ENU=Scan Only Takes on Picks }
    { 14  ;   ;Scan Only Places on Put-aways;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=ENU=Scan Only Places on Put-aways }
    { 15  ;   ;Reset Qty. Handled on Open;Boolean ;OnValidate=BEGIN
                                                                IF "Reset Qty in New Lines on Open" AND "Reset Qty. Handled on Open" THEN
                                                                  ERROR(Text002, FIELDCAPTION("Reset Qty in New Lines on Open"));
                                                              END;

                                                   CaptionML=ENU=Reset Qty. Handled on Open }
    { 16  ;   ;Select Unassigned Movements;Boolean;InitValue=Yes;
                                                   CaptionML=ENU=Select Unassigned Movements }
    { 18  ;   ;Allow Change Take Bin;Boolean      ;CaptionML=ENU=Allow Change Take Bin }
    { 19  ;   ;Allow Change Place Bin;Boolean     ;CaptionML=ENU=Allow Change Place Bin }
    { 20  ;   ;Local Menu Button   ;Option        ;CaptionML=ENU=Local Menu Button;
                                                   OptionCaptionML=ENU=F3,F4,F4 (F3 Post);
                                                   OptionString=F3,F4,F4 (F3 Post) }
    { 21  ;   ;Pick Sorting        ;Option        ;InitValue=Action Type - Bin Code;
                                                   CaptionML=ENU=Pick Sorting;
                                                   OptionCaptionML=ENU=Line No.,Sorting Sequence No.,Shelf No.,Bin Code - Breakbulk No. - Action Type,Bin Ranking - Breakbulk No. - Action Type,Destination Type - Destination No. - Action Type - Bin Code,Action Type - Bin Code,Item No. - Variant Code - Action Type - Bin Code,Action Type - Bin Sorting;
                                                   OptionString=Line No.,Sorting Sequence No.,Shelf No.,Bin Code - Breakbulk No. - Action Type,Bin Ranking - Breakbulk No. - Action Type,Destination Type - Destination No. - Action Type - Bin Code,Action Type - Bin Code,Item No. - Variant Code - Action Type - Bin Code,Action Type - Bin Sorting }
    { 22  ;   ;Put-away Sorting    ;Option        ;InitValue=Action Type - Bin Code;
                                                   CaptionML=ENU=Put-away Sorting;
                                                   OptionCaptionML=ENU=Line No.,Sorting Sequence No.,Shelf No.,Bin Code - Breakbulk No. - Action Type,Bin Ranking - Breakbulk No. - Action Type,Destination Type - Destination No. - Action Type - Bin Code,Action Type - Bin Code,Item No. - Variant Code - Action Type - Bin Code,Action Type - Bin Sorting;
                                                   OptionString=Line No.,Sorting Sequence No.,Shelf No.,Bin Code - Breakbulk No. - Action Type,Bin Ranking - Breakbulk No. - Action Type,Destination Type - Destination No. - Action Type - Bin Code,Action Type - Bin Code,Item No. - Variant Code - Action Type - Bin Code,Action Type - Bin Sorting }
    { 23  ;   ;Select Unassigned Phys. Invt.;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=ENU=Select Unassigned Phys. Invt. }
    { 24  ;   ;Movement Sorting    ;Option        ;InitValue=Action Type - Bin Code;
                                                   CaptionML=ENU=Movement Sorting;
                                                   OptionCaptionML=ENU=Line No.,Sorting Sequence No.,Shelf No.,Bin Code - Breakbulk No. - Action Type,Bin Ranking - Breakbulk No. - Action Type,Destination Type - Destination No. - Action Type - Bin Code,Action Type - Bin Code,Item No. - Variant Code - Action Type - Bin Code,Action Type - Bin Sorting;
                                                   OptionString=Line No.,Sorting Sequence No.,Shelf No.,Bin Code - Breakbulk No. - Action Type,Bin Ranking - Breakbulk No. - Action Type,Destination Type - Destination No. - Action Type - Bin Code,Action Type - Bin Code,Item No. - Variant Code - Action Type - Bin Code,Action Type - Bin Sorting }
    { 25  ;   ;Invt. Pick Sorting  ;Option        ;InitValue=Shelf No.;
                                                   CaptionML=ENU=Invt. Pick Sorting;
                                                   OptionCaptionML=ENU=Line No.,Sorting Sequence No.,Shelf No.,Bin Code - Breakbulk No. - Action Type,Bin Ranking - Breakbulk No. - Action Type,Destination Type - Destination No. - Action Type - Bin Code,Action Type - Bin Code,Item No. - Variant Code - Action Type - Bin Code,Action Type - Bin Sorting;
                                                   OptionString=Line No.,Sorting Sequence No.,Shelf No.,Bin Code - Breakbulk No. - Action Type,Bin Ranking - Breakbulk No. - Action Type,Destination Type - Destination No. - Action Type - Bin Code,Action Type - Bin Code,Item No. - Variant Code - Action Type - Bin Code,Action Type - Bin Sorting }
    { 26  ;   ;Invt. Put-away Sorting;Option      ;InitValue=Shelf No.;
                                                   CaptionML=ENU=Invt. Put-away Sorting;
                                                   OptionCaptionML=ENU=Line No.,Sorting Sequence No.,Shelf No.,Bin Code - Breakbulk No. - Action Type,Bin Ranking - Breakbulk No. - Action Type,Destination Type - Destination No. - Action Type - Bin Code,Action Type - Bin Code,Item No. - Variant Code - Action Type - Bin Code,Action Type - Bin Sorting;
                                                   OptionString=Line No.,Sorting Sequence No.,Shelf No.,Bin Code - Breakbulk No. - Action Type,Bin Ranking - Breakbulk No. - Action Type,Destination Type - Destination No. - Action Type - Bin Code,Action Type - Bin Code,Item No. - Variant Code - Action Type - Bin Code,Action Type - Bin Sorting }
    { 27  ;   ;Physical Inventory Sorting;Option  ;InitValue=Bin Code;
                                                   CaptionML=ENU=Physical Inventory Sorting;
                                                   OptionCaptionML=ENU=Line No.,Item No. - Variant Code,Bin Code,Bin Sorting;
                                                   OptionString=Line No.,Item No. - Variant Code,Bin Code,Bin Sorting }
    { 28  ;   ;Keep Bin when Split Line;Boolean   ;InitValue=Yes;
                                                   CaptionML=ENU=Keep Bin when Split Line }
    { 29  ;   ;Allow Phys. Invt. Add Item;Boolean ;InitValue=Yes;
                                                   CaptionML=ENU=Allow Phys. Invt. Add Item }
    { 30  ;   ;Add Quantity on Whse. Docs.;Boolean;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                IF xRec."Add Quantity on Whse. Docs." THEN
                                                                  IF ("Add Quantity on Whse. Docs." <> xRec."Add Quantity on Whse. Docs.") AND
                                                                    "Verify Tote by Scanning"
                                                                  THEN
                                                                    ERROR(Text002, FIELDCAPTION("Verify Tote by Scanning"));
                                                              END;

                                                   CaptionML=ENU=Add Quantity on Whse. Docs. }
    { 31  ;   ;Item Priority       ;Integer       ;InitValue=4;
                                                   CaptionML=ENU=Item Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 32  ;   ;Item Cross Reference Priority;Integer;
                                                   InitValue=3;
                                                   CaptionML=ENU=Item Cross Reference Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 33  ;   ;Item Identifier Priority;Integer   ;InitValue=5;
                                                   CaptionML=ENU=Item Identifier Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 34  ;   ;Item Custom Priority;Integer       ;CaptionML=ENU=Item Custom Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 35  ;   ;Direct Post Physical Inventory;Boolean;
                                                   CaptionML=ENU=Direct Post Physical Inventory }
    { 36  ;   ;Blank as Bin in Whse Act. Line;Boolean;
                                                   CaptionML=ENU=Blank as Bin in Whse Act. Line }
    { 37  ;   ;Blank as Item in Whse Act Line;Boolean;
                                                   CaptionML=ENU=Blank as Item in Whse Act Line }
    { 38  ;   ;Blank as Bin in Phys. Invt.;Boolean;CaptionML=ENU=Blank as Bin in Phys. Invt. }
    { 39  ;   ;Blank as Item in Phys. Invt.;Boolean;
                                                   CaptionML=ENU=Blank as Item in Phys. Invt. }
    { 40  ;   ;Show No Breakbulk Lines;Boolean    ;InitValue=Yes;
                                                   CaptionML=ENU=Show No Breakbulk Lines }
    { 41  ;   ;Auto Create Tote No.;Boolean       ;CaptionML=ENU=Auto Create Tote No. }
    { 42  ;   ;Phys. Inventory for all Items;Boolean;
                                                   CaptionML=ENU=Phys. Inventory for all Items }
    { 43  ;   ;No Physical Inventory Quantity;Boolean;
                                                   CaptionML=ENU=No Physical Inventory Quantity }
    { 44  ;   ;Track Whse. Employee Activity;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=ENU=Track Whse. Employee Activity }
    { 45  ;   ;Assigned User ID    ;Code50        ;TableRelation="Warehouse Employee";
                                                   CaptionML=ENU=Assigned User ID }
    { 50  ;   ;Post Shipment Action;Option        ;CaptionML=ENU=Post Shipment Action;
                                                   OptionCaptionML=ENU=" ,Ship,Ship and Invoice";
                                                   OptionString=[ ,Ship,Ship and Invoice] }
    { 51  ;   ;Print when Post Shipment;Boolean   ;CaptionML=ENU=Print when Post Shipment }
    { 52  ;   ;Reset Qty in New Lines on Open;Boolean;
                                                   InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                IF "Reset Qty in New Lines on Open" AND "Reset Qty. Handled on Open" THEN
                                                                  ERROR(Text002, FIELDCAPTION("Reset Qty. Handled on Open"));
                                                              END;

                                                   CaptionML=ENU=Reset Qty in New Lines on Open }
    { 54  ;   ;Search Item in Bin Code;Boolean    ;CaptionML=ENU=Search Item in Bin Code }
    { 55  ;   ;No Place on Single Place Move;Boolean;
                                                   CaptionML=ENU=No Place on Single Place Move }
    { 56  ;   ;Default Qty. 1 in Data Capture;Boolean;
                                                   CaptionML=ENU=Default Qty. 1 in Data Capture }
    { 57  ;   ;No. of Message Warnings;Integer    ;InitValue=5;
                                                   CaptionML=ENU=No. of Message Warnings }
    { 58  ;   ;Update Qty. Calculated;Boolean     ;InitValue=Yes;
                                                   CaptionML=ENU=Update Qty. Calculated }
    { 59  ;   ;Active Lines in Qty Calculated;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=ENU=Active Lines in Qty Calculated }
    { 60  ;   ;Bin Priority        ;Integer       ;InitValue=3;
                                                   CaptionML=ENU=Bin Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 61  ;   ;Bin Custom Priority ;Integer       ;CaptionML=ENU=Bin Custom Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 62  ;   ;No Unit of Measure Check;Boolean   ;CaptionML=ENU=No Unit of Measure Check }
    { 63  ;   ;Blank as Variant in WhseActLin;Boolean;
                                                   CaptionML=ENU=Blank as Variant in WhseActLin }
    { 64  ;   ;Blank as UOM in Whse Act. Line;Boolean;
                                                   CaptionML=ENU=Blank as UOM in Whse Act. Line }
    { 65  ;   ;Blank as Variant in Phys. Invt;Boolean;
                                                   CaptionML=ENU=Blank as Variant in Phys. Invt }
    { 66  ;   ;Blank as UOM in Phys. Invt.;Boolean;CaptionML=ENU=Blank as UOM in Phys. Invt. }
    { 67  ;   ;Stay on Line if not Complete;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=ENU=Stay on Line if not Complete }
    { 68  ;   ;Item No. Delimiter  ;Code1         ;CaptionML=ENU=Item No. Delimiter }
    { 69  ;   ;Item No. Includes Ser. No.;Boolean ;CaptionML=ENU=Item No. Includes Ser. No. }
    { 70  ;   ;Item No. Delimiter Type;Option     ;CaptionML=ENU=Item No. Delimiter Type;
                                                   OptionCaptionML=ENU=Serial No.,Lot No.,Serial No.-Lot No.,Lot No.-Serial No.;
                                                   OptionString=Serial No.,Lot No.,Serial No.-Lot No.,Lot No.-Serial No. }
    { 71  ;   ;Receive Put-away Multiple Item;Boolean;
                                                   CaptionML=ENU=Receive Put-away Multiple Item }
    { 72  ;   ;Show User and Location;Boolean     ;InitValue=Yes;
                                                   CaptionML=ENU=Show User and Location }
    { 73  ;   ;Outb. Whse. Request Date Calc.;DateFormula;
                                                   CaptionML=ENU=Outb. Whse. Request Date Calc. }
    { 74  ;   ;Auto Logout (Seconds);Integer      ;CaptionML=ENU=Auto Logout (Seconds) }
    { 75  ;   ;Keep Last Tote No.  ;Boolean       ;InitValue=Yes;
                                                   CaptionML=ENU=Keep Last Tote No. }
    { 76  ;   ;Direct Post Corr. Phys. Inv.;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=ENU=Direct Post Corr. Phys. Inv. }
    { 77  ;   ;Scan Item in Qty. to Handle;Boolean;OnValidate=BEGIN
                                                                IF "Scan Item in Qty. to Handle" THEN BEGIN
                                                                  TESTFIELD("Add Quantity on Whse. Docs.");
                                                                  TESTFIELD("Stay on Line if not Complete");
                                                                  TESTFIELD("Search Item in Bin Code",FALSE);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Scan Item in Qty. to Handle }
    { 78  ;   ;Show New Line when Split;Boolean   ;InitValue=Yes;
                                                   CaptionML=ENU=Show New Line when Split }
    { 79  ;   ;Outbound Whse. Request Type;Option ;CaptionML=ENU=Outbound Whse. Request Type;
                                                   OptionCaptionML=ENU=Advanced,Simple;
                                                   OptionString=Advanced,Simple }
    { 80  ;   ;Action Created By Filter;Code50    ;InitValue=%1;
                                                   OnLookup=VAR
                                                              LoginMgt@1240040000 : Codeunit 418;
                                                            BEGIN
                                                              LoginMgt.LookupUserID("Action Created By Filter");
                                                            END;

                                                   CaptionML=ENU=Action Created By Filter }
    { 81  ;   ;Outbound Whse.Req. Filter Code;Code10;
                                                   TableRelation="Outbound Whse. Request Filter";
                                                   CaptionML=ENU=Outbound Whse.Req. Filter Code }
    { 82  ;   ;Pallet Bin in Take Priority;Integer;InitValue=2;
                                                   CaptionML=ENU=Pallet Bin in Take Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 83  ;   ;Item Pallet No. Priority;Integer   ;CaptionML=ENU=Item Pallet No. Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 84  ;   ;Lot No. Priority    ;Integer       ;CaptionML=ENU=Lot No. Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 85  ;   ;Lot Pallet No. Priority;Integer    ;CaptionML=ENU=Lot Pallet No. Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 86  ;   ;Lot Custom Priority ;Integer       ;CaptionML=ENU=Lot Custom Priority;
                                                   MinValue=0;
                                                   MaxValue=10 }
    { 87  ;   ;Allow Label Printing;Boolean       ;InitValue=Yes;
                                                   CaptionML=ENU=Allow Label Printing }
    { 88  ;   ;Label Printing Root Folder;Text80  ;OnValidate=BEGIN
                                                                IF COPYSTR("Label Printing Root Folder",STRLEN("Label Printing Root Folder"),1) <> '\' THEN
                                                                  "Label Printing Root Folder" := "Label Printing Root Folder" + '\';
                                                              END;

                                                   CaptionML=ENU=Label Printing Root Folder }
    { 89  ;   ;LabelFileExtention  ;Code10        ;InitValue=TXT;
                                                   CaptionML=ENU=LabelFileExtention }
    { 100 ;   ;Verify Tote by Scanning;Boolean    ;OnValidate=BEGIN
                                                                IF ("Verify Tote by Scanning" <> xRec."Verify Tote by Scanning") AND
                                                                  "Verify Tote by Scanning" AND "Auto Create Tote No."
                                                                THEN
                                                                  ERROR(Text002, FIELDCAPTION("Auto Create Tote No."));

                                                                IF ("Verify Tote by Scanning" <> xRec."Verify Tote by Scanning") AND
                                                                  "Verify Tote by Scanning" AND
                                                                  NOT "Show Tote in Line"
                                                                THEN
                                                                    ERROR(Text003, FIELDCAPTION("Show Tote in Line"));

                                                                IF ("Verify Tote by Scanning" <> xRec."Verify Tote by Scanning") AND
                                                                  "Verify Tote by Scanning" AND
                                                                  NOT "Add Quantity on Whse. Docs."
                                                                THEN
                                                                    ERROR(Text003, FIELDCAPTION("Add Quantity on Whse. Docs."));
                                                              END;

                                                   CaptionML=ENU=Verify Tote by Scanning }
    { 101 ;   ;Show Tote in Line   ;Boolean       ;OnValidate=BEGIN
                                                                IF ("Show Tote in Line"  <> xRec."Show Tote in Line") AND
                                                                  "Show Tote in Line" AND "Auto Create Tote No."
                                                                THEN
                                                                  ERROR(Text002, FIELDCAPTION("Auto Create Tote No."));
                                                              END;

                                                   CaptionML=ENU=Show Tote in Line }
    { 102 ;   ;Location Receiving  ;Boolean       ;InitValue=Yes;
                                                   CaptionML=ENU=Location Receiving }
    { 103 ;   ;Blank as Tote No    ;Boolean       ;CaptionML=ENU=Blank as Tote No }
    { 104 ;   ;No UserID on Dyn. Put-Away;Boolean ;CaptionML=ENU=No UserID on Dyn. Put-Away }
    { 105 ;   ;No User ID on Interna Put-Away;Boolean;
                                                   CaptionML=ENU=No User ID on Interna Put-Away }
    { 106 ;   ;Allow Over-Receiving (PO);Boolean  ;CaptionML=ENU=Allow Over-Receiving (PO) }
    { 107 ;   ;Allow Over-Receiving (SRO);Boolean ;CaptionML=ENU=Allow Over-Receiving (SRO) }
    { 108 ;   ;Allow Manuf. Overpicking;Boolean   ;CaptionML=ENU=Allow Manuf. Overpicking }
    { 109 ;   ;Multi Document Receiving;Boolean   ;CaptionML=ENU=Multi Document Receiving }
    { 110 ;   ;Multi Document Order specific;Boolean;
                                                   CaptionML=ENU=Multi Document Order specific }
    { 111 ;   ;Count Details       ;Boolean       ;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                IF "Count Details" <> xRec."Count Details" THEN
                                                                  IF "Count Details" THEN BEGIN
                                                                    "Count Pallet Level" := TRUE;
                                                                    "Count Boxes Level" := TRUE;
                                                                    "Count Item Level" := TRUE;
                                                                    "Count Item Tracking Level" := TRUE;
                                                                    MODIFY;
                                                                  END;
                                                              END;

                                                   CaptionML=ENU=Count Details }
    { 112 ;   ;Count Pallet Level  ;Boolean       ;InitValue=No;
                                                   OnValidate=BEGIN
                                                                IF "Count Pallet Level" <> xRec."Count Pallet Level" THEN
                                                                  IF NOT "Count Pallet Level" THEN BEGIN
                                                                    IF "Count Details" THEN
                                                                      "Count Details" := FALSE;
                                                                    IF "Count Boxes Level" THEN
                                                                      "Count Boxes Level" := FALSE;
                                                                    IF "Count Item Level" THEN
                                                                      "Count Item Level" := FALSE;
                                                                    IF "Count Item Tracking Level" THEN
                                                                      "Count Item Tracking Level" := FALSE;
                                                                  END;
                                                                MODIFY;
                                                              END;

                                                   CaptionML=ENU=Count Pallet Level }
    { 113 ;   ;Count Boxes Level   ;Boolean       ;InitValue=No;
                                                   OnValidate=BEGIN
                                                                IF "Count Boxes Level" <> xRec."Count Boxes Level" THEN
                                                                  IF "Count Boxes Level" THEN BEGIN
                                                                    "Count Pallet Level" := TRUE;
                                                                  END ELSE BEGIN
                                                                    IF "Count Details" THEN
                                                                      "Count Details" := FALSE;
                                                                    IF "Count Item Level" THEN
                                                                      "Count Item Level" := FALSE;
                                                                    IF "Count Item Tracking Level" THEN
                                                                      "Count Item Tracking Level" := FALSE;
                                                                  END;
                                                                MODIFY;
                                                              END;

                                                   CaptionML=ENU=Count Boxes Level }
    { 114 ;   ;Count Item Level    ;Boolean       ;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                IF "Count Item Level" <> xRec."Count Item Level" THEN
                                                                  IF "Count Item Level" THEN BEGIN
                                                                    "Count Pallet Level" := TRUE;
                                                                    "Count Boxes Level" := TRUE;
                                                                  END ELSE BEGIN
                                                                    IF "Count Details" THEN
                                                                      "Count Details" := FALSE;
                                                                    IF "Count Item Tracking Level" THEN
                                                                      "Count Item Tracking Level" := FALSE;
                                                                  END;
                                                                MODIFY;
                                                              END;

                                                   CaptionML=ENU=Count Item Level }
    { 115 ;   ;Count Item Tracking Level;Boolean  ;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                IF "Count Item Tracking Level" <> xRec."Count Item Tracking Level" THEN
                                                                  IF "Count Item Tracking Level" THEN BEGIN
                                                                    "Count Pallet Level" := TRUE;
                                                                    "Count Boxes Level" := TRUE;
                                                                    "Count Item Level" := TRUE;
                                                                  END ELSE BEGIN
                                                                    IF "Count Details" THEN
                                                                      "Count Details" := FALSE;
                                                                  END;
                                                                MODIFY;
                                                              END;

                                                   CaptionML=ENU=Count Item Tracking Level }
    { 116 ;   ;Single Box Pallet Extension;Code2  ;CaptionML=ENU=Single Box Pallet Extension }
    { 117 ;   ;Scan Box instead of Pallet;Boolean ;InitValue=Yes;
                                                   CaptionML=ENU=Scan Box instead of Pallet }
    { 118 ;   ;Show Zero Qty. Phys. Inv. Line;Boolean;
                                                   InitValue=No;
                                                   CaptionML=ENU=Show Zero Qty. Phys. Inv. Line }
    { 119 ;   ;Single Box Destruction;Boolean     ;CaptionML=ENU=Single Box Destruction }
    { 120 ;   ;Single Box Adjustment;Boolean      ;CaptionML=ENU=Single Box Adjustment }
    { 121 ;   ;Multiple Label Printing;Boolean    ;InitValue=Yes;
                                                   CaptionML=ENU=Multiple Label Printing }
    { 122 ;   ;Max Number of Labels created;Integer;
                                                   InitValue=10;
                                                   CaptionML=ENU=Max Number of Labels created }
    { 123 ;   ;Add Item - Single Item Scan;Boolean;CaptionML=ENU=Add Item - Single Item Scan }
    { 124 ;   ;Limit Adjustment Quantity;Boolean  ;InitValue=No;
                                                   CaptionML=ENU=Limit Adjustment Quantity }
    { 125 ;   ;Pallet Counting Type;Option        ;InitValue=Real Time;
                                                   CaptionML=ENU=Pallet Counting Type;
                                                   OptionString=Real Time }
    { 126 ;   ;Delete uncounted Phys. Inv.;Boolean;InitValue=Yes;
                                                   CaptionML=ENU=Delete uncounted Phys. Inv. }
    { 127 ;   ;Blank as Lot No. in Phys. Inv.;Boolean;
                                                   InitValue=No;
                                                   CaptionML=ENU=Blank as Lot No. in Phys. Inv. }
    { 128 ;   ;Scan Lot No. in Phys Inv.;Boolean  ;InitValue=Yes;
                                                   CaptionML=ENU=Scan Lot No. in Phys Inv. }
    { 129 ;   ;Scan Serial No. in Phys. Inv.;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=ENU=Scan Serial No. in Phys. Inv. }
    { 130 ;   ;Blank as SN in Phys. Inv.;Boolean  ;CaptionML=ENU=Blank as SN in Phys. Inv. }
    { 131 ;   ;Start Pick at unprocessed Line;Boolean }
    { 132 ;   ;Unassign Pick if No Action;Boolean ;CaptionML=ENU=Unassign Pick if No Action }
    { 133 ;   ;Ignore Action Outst. Qty of 0;Boolean;
                                                   CaptionML=ENU=Ignore Action Outst. Qty of 0 }
    { 134 ;   ;Receive Qty not Available;Boolean  ;CaptionML=ENU=Receive Qty not Available }
    { 135 ;   ;PO Receive Action (Non E-Rec);Option;
                                                   CaptionML=ENU=PO Receive Action (Non E-Rec);
                                                   OptionCaptionML=ENU=Receive,Invoice,Receive and Invoice;
                                                   OptionString=Receive,Invoice,Receive and Invoice }
    { 136 ;   ;SRO Receive Action (Non E-Rec);Option;
                                                   CaptionML=ENU=SRO Receive Action (Non E-Rec);
                                                   OptionCaptionML=ENU=Receive,Invoice,Receive and Invoice;
                                                   OptionString=Receive,Invoice,Receive and Invoice }
    { 137 ;   ;Cross-Dock Date Calculation;DateFormula;
                                                   CaptionML=ENU=Cross-Dock Date Calculation }
    { 138 ;   ;Delete Emptied License Plates;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=ENU=Delete Emptied License Plates }
    { 139 ;   ;Replenishment Tolerance;Integer    ;InitValue=0;
                                                   CaptionML=ENU=Replenishment Tolerance }
    { 140 ;   ;Exit after Dynamic LP Move;Boolean ;InitValue=Yes;
                                                   CaptionML=ENU=Exit after Dynamic LP Move }
    { 141 ;   ;Exit after LP Add Item;Boolean     ;InitValue=Yes;
                                                   CaptionML=ENU=Exit after LP Add Item }
    { 142 ;   ;Exit after LP Remove Item;Boolean  ;InitValue=Yes;
                                                   CaptionML=ENU=Exit after LP Remove Item }
    { 143 ;   ;Exit after LP Remove All Items;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=ENU=Exit after LP Remove All Items }
    { 144 ;   ;Exit after LP Adjust Item;Boolean  ;InitValue=Yes;
                                                   CaptionML=ENU=Exit after LP Adjust Item }
    { 145 ;   ;Exit after Move Item P2P;Boolean   ;InitValue=Yes;
                                                   CaptionML=ENU=Exit after Move Item P2P }
    { 146 ;   ;Exit after Destroy LP;Boolean      ;InitValue=Yes;
                                                   CaptionML=ENU=Exit after Destroy LP }
    { 147 ;   ;Update PO Line with Calc Bin;Boolean;
                                                   CaptionML=ENU=Update PO Line with Calc Bin }
    { 148 ;   ;Flow Rack Processing;Boolean       ;CaptionML=ENU=Flow Rack Processing }
    { 149 ;   ;Disable OWR Code Table Filters;Boolean;
                                                   CaptionML=ENU=Disable OWR Code Table Filters }
    { 150 ;   ;Enable Delete Ship and Pick;Boolean;CaptionML=ENU=Enable Delete Ship and Pick }
    { 151 ;   ;Stay on Doc after Partial Reg;Boolean;
                                                   CaptionML=ENU=Stay on Doc after Partial Reg }
    { 152 ;   ;Auto Split Line - Picks;Boolean    ;CaptionML=ENU=Auto Split Line - Picks }
    { 153 ;   ;Auto Split Line - Put-aways;Boolean;CaptionML=ENU=Auto Split Line - Put-aways }
    { 154 ;   ;Auto Split Line - Movements;Boolean;CaptionML=ENU=Auto Split Line - Movements }
    { 155 ;   ;Auto Register Line - Picks;Boolean ;OnValidate=BEGIN
                                                                IF "No Partial Register-Picks" AND "Auto Register Line - Picks" THEN
                                                                  ERROR(Text002, FIELDCAPTION("No Partial Register-Picks"));
                                                              END;

                                                   CaptionML=ENU=Auto Register Line - Picks }
    { 156 ;   ;Auto Register Line - Put-aways;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "No Partial Register-Put-aways" AND "Auto Register Line - Put-aways" THEN
                                                                  ERROR(Text002, FIELDCAPTION("No Partial Register-Put-aways"));
                                                              END;

                                                   CaptionML=ENU=Auto Register Line - Put-aways }
    { 157 ;   ;Auto Register Line - Movements;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "No Partial Register-Movements" AND "Auto Register Line - Movements" THEN
                                                                  ERROR(Text002, FIELDCAPTION("No Partial Register-Movements"));
                                                              END;

                                                   CaptionML=ENU=Auto Register Line - Movements }
    { 158 ;   ;Delete Unprocessed Pick Lines;Boolean;
                                                   CaptionML=ENU=Delete Unprocessed Pick Lines }
    { 161 ;   ;No Partial Register-Picks;Boolean  ;OnValidate=BEGIN
                                                                IF "Auto Register Line - Picks" AND "No Partial Register-Picks" THEN
                                                                  ERROR(Text002, FIELDCAPTION("Auto Register Line - Picks"));
                                                              END;

                                                   CaptionML=ENU=No Partial Register-Picks }
    { 162 ;   ;No Partial Register-Put-aways;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Auto Register Line - Put-aways" AND "No Partial Register-Put-aways" THEN
                                                                  ERROR(Text002, FIELDCAPTION("Auto Register Line - Put-aways"));
                                                              END;

                                                   CaptionML=ENU=No Partial Register-Put-aways }
    { 163 ;   ;No Partial Register-Movements;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Auto Register Line - Movements" AND "No Partial Register-Movements" THEN
                                                                  ERROR(Text002, FIELDCAPTION("Auto Register Line - Movements"));
                                                              END;

                                                   CaptionML=ENU=No Partial Register-Movements }
    { 164 ;   ;Scan in Qty per UOM Increments;Boolean;
                                                   CaptionML=ENU=Scan in Qty per UOM Increments }
    { 165 ;   ;Scan Item in Qty.-Data Capture;Boolean;
                                                   CaptionML=ENU=Scan Item in Qty.-Data Capture }
    { 166 ;   ;Add Quantity on Data Capt Line;Boolean;
                                                   CaptionML=ENU=Add Quantity on Data Capt Line }
    { 167 ;   ;Scan Item in Qty.-Phys. Inv.;Boolean;
                                                   CaptionML=ENU=Scan Item in Qty.-Phys. Inv. }
    { 168 ;   ;Add Quantity on Phys. Inv.;Boolean ;CaptionML=ENU=Add Quantity on Phys. Inv. }
    { 169 ;   ;Scan Item in Qty.-Dynamic;Boolean  ;CaptionML=ENU=Scan Item in Qty.-Dynamic }
    { 170 ;   ;Add Quantity on Dynamic Line;Boolean;
                                                   CaptionML=ENU=Add Quantity on Dynamic Line }
    { 171 ;   ;Maintain Bin Sorting Sequence;Boolean;
                                                   CaptionML=ENU=Maintain Bin Sorting Sequence }
    { 179 ;   ;Allow Toggle Block Movement;Boolean;CaptionML=ENU=Allow Toggle Block Movement }
    { 180 ;   ;Strict Dynamic Unit Handling;Boolean;
                                                   CaptionML=ENU=Strict Dynamic Unit Handling }
    { 181 ;   ;No UserID on Ad Hoc Counts;Boolean ;CaptionML=ENU=No UserID on Ad Hoc Counts }
    { 182 ;   ;Auto-Initiate Ad Hoc Counts;Boolean;CaptionML=ENU=Auto-Initiate Ad Hoc Counts }
    { 183 ;   ;Dynamic Phys. Inv. Action;Option   ;CaptionML=ENU=Dynamic Phys. Inv. Action;
                                                   OptionCaptionML=ENU=Dynamic Count,Bin Count,Block Bin,Custom;
                                                   OptionString=Dynamic Count,Bin Count,Block Bin,Custom }
    { 184 ;   ;Perform Bin Counts  ;Boolean       ;CaptionML=ENU=Perform Bin Counts }
    { 185 ;   ;Perform Audit Bin Counts;Boolean   ;CaptionML=ENU=Perform Audit Bin Counts }
    { 1001;   ;Move after Enter Quantity;Boolean  ;InitValue=Yes;
                                                   CaptionML=ENU=Move after Enter Quantity }
    { 1002;   ;Hide Bin Content Qty of Zero;Boolean;
                                                   InitValue=No;
                                                   CaptionML=ENU=Hide Bin Content Qty of Zero }
    { 1003;   ;Reset User on Part. Pick Movem;Boolean;
                                                   CaptionML=ENU=Reset User on Part. Pick Movem }
    { 1004;   ;Delete Partial Pick Movements;Boolean;
                                                   CaptionML=ENU=Delete Partial Pick Movements }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      RFSetupRetrieved@1000 : Boolean;
      RFSetupRetrWhseEmployee@1001 : Code[50];
      Text001@1240030000 : TextConst 'ENU=%1 %2 created.';
      Text002@1240040000 : TextConst 'ENU=%1 must be deactivated.';
      Text003@1240040001 : TextConst 'ENU=%1 must be activated.';

    [External]
    PROCEDURE GetRFEmployeeSetup@100(WhseEmployeeCode@1000 : Code[50]);
    VAR
      RFSetup@1240020000 : Record 14002801;
      RFEmployeeSetup@1001 : Record 14002802;
      WarehouseEmployee@1240030000 : Record 7301;
    BEGIN
      IF RFSetupRetrieved AND (WhseEmployeeCode = RFSetupRetrWhseEmployee) THEN
        EXIT;

      RFSetupRetrieved := FALSE;
      WarehouseEmployee.RESET;
      WarehouseEmployee.SETRANGE("User ID",WhseEmployeeCode);
      WarehouseEmployee.SETRANGE(Default,TRUE);
      IF WarehouseEmployee.FIND('-') THEN
        IF WarehouseEmployee."RF Employee Setup Code" <> '' THEN BEGIN
          RFEmployeeSetup.GET(WarehouseEmployee."RF Employee Setup Code");
          RFSetupRetrieved := TRUE;
        END;

      IF NOT RFSetupRetrieved THEN
        IF RFSetup.GET('') THEN
          IF RFSetup."Default OWR Emp. Setup Code" <> '' THEN
            IF RFEmployeeSetup.GET(RFSetup."Default OWR Emp. Setup Code") THEN
              RFSetupRetrieved := TRUE;

      IF NOT RFSetupRetrieved THEN
        IF NOT RFEmployeeSetup.GET(WhseEmployeeCode) THEN
          IF NOT RFEmployeeSetup.GET('') THEN
            RFEmployeeSetup.INIT;

      Rec := RFEmployeeSetup;
      RFSetupRetrieved := TRUE;
      RFSetupRetrWhseEmployee := WhseEmployeeCode;
    END;

    [External]
    PROCEDURE CopyToNewRFEmployeeSetup@1240030000() : Code[50];
    VAR
      RFEmployeeSetup@1240030001 : Record 14002802;
      RFEmployeeMenuFilter@1240030002 : Record 14002806;
      RFEmployeeMenuFilter2@1240030003 : Record 14002806;
      EnterNewRFEmplSetupCode@1240040000 : Page 14002827;
      NewRFEmployeeSetupCode@1240030004 : Code[50];
    BEGIN
      CLEAR(EnterNewRFEmplSetupCode);
      EnterNewRFEmplSetupCode.LOOKUPMODE(TRUE);
      IF EnterNewRFEmplSetupCode.RUNMODAL <> ACTION::LookupOK THEN
        EXIT;
      EnterNewRFEmplSetupCode.GetFields(NewRFEmployeeSetupCode);

      RFEmployeeSetup := Rec;
      RFEmployeeSetup.Code := NewRFEmployeeSetupCode;
      RFEmployeeSetup.INSERT(TRUE);

      RFEmployeeMenuFilter.RESET;
      RFEmployeeMenuFilter.SETRANGE("RF Employee Setup Code",Code);
      IF RFEmployeeMenuFilter.FIND('-') THEN
        REPEAT
          RFEmployeeMenuFilter2 := RFEmployeeMenuFilter;
          RFEmployeeMenuFilter2."RF Employee Setup Code" := RFEmployeeSetup.Code;
          RFEmployeeMenuFilter2.INSERT(TRUE);
        UNTIL RFEmployeeMenuFilter.NEXT = 0;

      IF RFEmployeeSetup.FIND THEN
        MESSAGE(Text001,TABLECAPTION,RFEmployeeSetup.Code);
    END;

    [External]
    PROCEDURE GetLineDateFilter@1240030002() : Text[250];
    BEGIN
      IF FORMAT("Show User and Location") <> '' THEN
        EXIT(
          STRSUBSTNO(
          '%1..%2','''''',
          CALCDATE("Outb. Whse. Request Date Calc.")))
      ELSE
        EXIT('');
    END;

    [External]
    PROCEDURE GetFilter@1240040000() : Code[250];
    BEGIN
      EXIT(STRSUBSTNO("Action Created By Filter",USERID));
    END;

    BEGIN
    END.
  }
}

