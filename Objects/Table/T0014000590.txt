OBJECT Table 14000590 AFP Promotion Line
{
  OBJECT-PROPERTIES
  {
    Date=05/12/14;
    Time=12:00:00 PM;
    Version List=UBP2.93;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               GetHeader;
               PromotionHdr.TESTFIELD(Released,FALSE);
             END;

    OnModify=BEGIN
               GetHeader;
               PromotionHdr.TESTFIELD(Released,FALSE);

               IF "Promotion Quantity" <> xRec."Promotion Quantity" THEN BEGIN
                 LocInvPeriod.RESET;
                 LocInvPeriod.SETRANGE("Location Code","Location Code");
                 LocInvPeriod.SETRANGE("Period End Closed",TRUE);
                 LocInvPeriod.FIND('+');
                 IF "Starting Date" <= LocInvPeriod."Starting Date" THEN
                   ERROR(Text001);
               END;
             END;

    OnDelete=BEGIN
               GetHeader;
               PromotionHdr.TESTFIELD(Released,FALSE);

               ForecastAdj.RESET;
               ForecastAdj.SETCURRENTKEY("Item No.","Variant Code","Location Code","Starting Date","Promotion Code");
               ForecastAdj.SETRANGE("Item No.","Item No.");
               ForecastAdj.SETRANGE("Variant Code","Variant Code");
               ForecastAdj.SETRANGE("Location Code","Location Code");
               ForecastAdj.SETRANGE("Starting Date","Starting Date");
               ForecastAdj.SETRANGE("Promotion Code","Promotion Code");
               ForecastAdj.DELETEALL;
             END;

    CaptionML=ENU=Promotion Line;
  }
  FIELDS
  {
    { 1   ;   ;Promotion Code      ;Code10        ;TableRelation="AFP Promotion Header".Code;
                                                   CaptionML=ENU=Promotion Code }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 11  ;   ;Location Code       ;Code10        ;TableRelation=Location.Code;
                                                   CaptionML=ENU=Location Code }
    { 12  ;   ;Item No.            ;Code50        ;TableRelation=Item.No.;
                                                   OnValidate=BEGIN
                                                                ForecastAdj.RESET;
                                                                ForecastAdj.SETCURRENTKEY(
                                                                  "Item No.","Variant Code","Location Code","Starting Date","Promotion Code");
                                                                ForecastAdj.SETRANGE("Item No.",xRec."Item No.");
                                                                ForecastAdj.SETRANGE("Variant Code",xRec."Variant Code");
                                                                ForecastAdj.SETRANGE("Location Code",xRec."Location Code");
                                                                ForecastAdj.SETRANGE("Starting Date","Starting Date");
                                                                ForecastAdj.SETRANGE("Promotion Code","Promotion Code");
                                                                IF ForecastAdj.FIND('-') THEN
                                                                  ERROR(Text002);

                                                                CALCFIELDS(Description);
                                                              END;

                                                   CaptionML=ENU=Item No. }
    { 13  ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   OnValidate=BEGIN
                                                                ForecastAdj.RESET;
                                                                ForecastAdj.SETCURRENTKEY(
                                                                  "Item No.","Variant Code","Location Code","Starting Date","Promotion Code");
                                                                ForecastAdj.SETRANGE("Item No.",xRec."Item No.");
                                                                ForecastAdj.SETRANGE("Variant Code",xRec."Variant Code");
                                                                ForecastAdj.SETRANGE("Location Code",xRec."Location Code");
                                                                ForecastAdj.SETRANGE("Starting Date","Starting Date");
                                                                ForecastAdj.SETRANGE("Promotion Code","Promotion Code");
                                                                IF ForecastAdj.FIND('-') THEN
                                                                  ERROR(Text002);
                                                              END;

                                                   CaptionML=ENU=Variant Code }
    { 14  ;   ;Starting Date       ;Date          ;CaptionML=ENU=Starting Date }
    { 15  ;   ;Promotion Quantity  ;Decimal       ;CaptionML=ENU=Promotion Quantity;
                                                   DecimalPlaces=0:2 }
    { 16  ;   ;Description         ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Item.Description WHERE (No.=FIELD(Item No.)));
                                                   CaptionML=ENU=Description;
                                                   Editable=No }
    { 18  ;   ;Usage Adjust Quantity;Decimal      ;OnValidate=BEGIN
                                                                IF "Usage Adjust Quantity" <> xRec."Usage Adjust Quantity" THEN
                                                                  "Historical Data Adjusted" := FALSE;
                                                              END;

                                                   CaptionML=ENU=Usage Adjust Quantity;
                                                   DecimalPlaces=0:2 }
    { 19  ;   ;Historical Data Adjusted;Boolean   ;CaptionML=ENU=Historical Data Adjusted;
                                                   Editable=No }
    { 20  ;   ;Ending Date         ;Date          ;CaptionML=ENU=Ending Date }
  }
  KEYS
  {
    {    ;Promotion Code,Line No.                 ;Clustered=Yes }
    {    ;Location Code,Item No.,Variant Code,Starting Date }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ForecastAdj@1240030001 : Record 14002707;
      PromotionHdr@1240030000 : Record 14000589;
      Text001@1240030002 : TextConst 'ENU=A promotion quantity can not be changed for a closed Location Inventory Period.';
      ProcUnit@1240030003 : Record 14000555;
      ItemUsage@1240030004 : Record 14000557;
      LocInvPeriod@1240030007 : Record 14000553;
      UBP@1240030006 : Codeunit 14000564;
      ForecastView@1240030005 : Page 14002661;
      Text002@1240030008 : TextConst 'ENU=Unable to change item, Forecast Promotion Adjustments exist.';

    PROCEDURE GetHeader@1240030000();
    BEGIN
      IF PromotionHdr.Code <> "Promotion Code" THEN
        PromotionHdr.GET("Promotion Code");
    END;

    PROCEDURE ShowProcUnit@1240030001();
    BEGIN
      ProcUnit.RESET;
      ProcUnit.SETRANGE("Location Code","Location Code");
      ProcUnit.SETRANGE("Item No.","Item No.");
      ProcUnit.SETRANGE("Variant Code","Variant Code");
      PAGE.RUN(PAGE::"Procurement Unit Card",ProcUnit);
    END;

    PROCEDURE ShowForecast@1240030002();
    BEGIN
      ProcUnit.GET("Location Code","Item No.","Variant Code");
      CLEAR(ForecastView);
      ForecastView.SetProcUnitandSourceNo(ProcUnit,'');
      ForecastView.RUN;
    END;

    PROCEDURE ShowItemUsage@1240030003();
    BEGIN
      ItemUsage.RESET;
      ItemUsage.SETCURRENTKEY("Location Code","Item No.","Variant Code");
      ItemUsage.SETRANGE("Location Code","Location Code");
      ItemUsage.SETRANGE("Item No.","Item No.");
      ItemUsage.SETRANGE("Variant Code","Variant Code");
      PAGE.RUN(PAGE::"Item Usage List",ItemUsage);
    END;

    PROCEDURE ShowLocInvRollup@1240030004();
    BEGIN
      ProcUnit.GET("Location Code","Item No.","Variant Code");
      UBP.DisplayLocInvRollup(ProcUnit);
    END;

    PROCEDURE ShowReplPath@1240030005();
    BEGIN
      ProcUnit.GET("Location Code","Item No.","Variant Code");
      UBP.DisplayReplenishmentPath(ProcUnit);
    END;

    BEGIN
    END.
  }
}

