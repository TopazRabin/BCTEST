OBJECT Table 14000826 Bill of Lading Stat. Detail
{
  OBJECT-PROPERTIES
  {
    Date=06/28/17;
    Time=12:00:00 PM;
    Version List=SE0.60;
  }
  PROPERTIES
  {
    CaptionML=ENU=Bill of Lading Stat. Detail;
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=" ,Sales Order,Sales Shipment (Posted),Package,Purchase Credit Memo (Posted),Return Shipment (Posted),Transfer Shipment (Posted),Bill of Lading,Bill of Lading (Released),,,Sales Invoice,Return Order,Purchase Credit Memo,Transfer Order";
                                                   OptionString=[ ,Sales Order,Sales Shipment (Posted),Package,Purchase Credit Memo (Posted),Return Shipment (Posted),Transfer Shipment (Posted),Bill of Lading,Bill of Lading (Released),,,Sales Invoice,Return Order,Purchase Credit Memo,Transfer Order] }
    { 2   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Sales Order)) "Sales Header".No. WHERE (Document Type=CONST(Order))
                                                                 ELSE IF (Type=CONST("Sales Shipment (Posted)")) "Sales Shipment Header".No.
                                                                 ELSE IF (Type=CONST(Package)) "Posted Package".No.
                                                                 ELSE IF (Type=CONST(Sales Invoice)) "Sales Header".No. WHERE (Document Type=CONST(Invoice))
                                                                 ELSE IF (Type=CONST(Purchase Credit Memo)) "Purchase Header".No. WHERE (Document Type=CONST(Credit Memo))
                                                                 ELSE IF (Type=CONST("Purchase Credit Memo (Posted)")) "Purch. Cr. Memo Hdr.".No.
                                                                 ELSE IF (Type=CONST(Return Order)) "Purchase Header".No. WHERE (Document Type=CONST(Return Order))
                                                                 ELSE IF (Type=CONST("Return Shipment (Posted)")) "Return Shipment Header".No.
                                                                 ELSE IF (Type=CONST(Transfer Order)) "Transfer Header".No.
                                                                 ELSE IF (Type=CONST("Transfer Shipment (Posted)")) "Transfer Shipment Header".No.
                                                                 ELSE IF (Type=CONST(Bill of Lading)) "Bill of Lading".No.
                                                                 ELSE IF (Type=CONST("Bill of Lading (Released)")) "Bill of Lading".No.;
                                                   OnLookup=BEGIN
                                                              ShowDocument;
                                                            END;

                                                   CaptionML=ENU=No. }
    { 11  ;   ;Ship-to No.         ;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Ship-to No. }
    { 12  ;   ;Ship-to Code        ;Code10        ;TableRelation="Ship-to Address".Code WHERE (Customer No.=FIELD(Ship-to No.));
                                                   CaptionML=ENU=Ship-to Code }
    { 13  ;   ;External Document No.;Code35       ;CaptionML=ENU=External Document No. }
    { 14  ;   ;Ship-for Code       ;Code10        ;TableRelation="Ship-to Address".Code WHERE (Customer No.=FIELD(Ship-to No.));
                                                   CaptionML=ENU=Ship-for Code }
    { 15  ;   ;Ship-to Type        ;Option        ;CaptionML=ENU=Ship-to Type;
                                                   OptionCaptionML=ENU=Customer,Vendor,Bank,Prospect,Resource,Employee,Contact;
                                                   OptionString=Customer,Vendor,Bank,Prospect,Resource,Employee,Contact }
    { 16  ;   ;Source Type         ;Integer       ;CaptionML=ENU=Source Type }
    { 17  ;   ;Source Subtype      ;Option        ;CaptionML=ENU=Source Subtype;
                                                   OptionCaptionML=ENU=0,1,2,3,4,5,6,7,8,9,10;
                                                   OptionString=0,1,2,3,4,5,6,7,8,9,10 }
    { 18  ;   ;Source ID           ;Code20        ;CaptionML=ENU=Source ID }
    { 19  ;   ;Posted Source ID    ;Code20        ;CaptionML=ENU=Posted Source ID }
    { 20  ;   ;Shipment Invoice No.;Code20        ;TableRelation="Sales Invoice Header".No. WHERE (No.=FIELD(Shipment Invoice No.));
                                                   CaptionML=ENU=Shipment Invoice No.;
                                                   Editable=No }
    { 21  ;   ;Net Weight (Total)  ;Decimal       ;CaptionML=ENU=Net Weight (Total);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 22  ;   ;Gross Weight (Total);Decimal       ;CaptionML=ENU=Gross Weight (Total);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 23  ;   ;Dimmed Weight (Total);Decimal      ;CaptionML=ENU=Dimmed Weight (Total);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 24  ;   ;Volume (Total)      ;Decimal       ;CaptionML=ENU=Volume (Total);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 25  ;   ;Value (Cost) (Total);Decimal       ;CaptionML=ENU=Value (Cost) (Total);
                                                   BlankZero=Yes }
    { 26  ;   ;Value (Price) (Total);Decimal      ;CaptionML=ENU=Value (Price) (Total);
                                                   BlankZero=Yes }
    { 31  ;   ;Net Weight (Qty. Outstanding);Decimal;
                                                   CaptionML=ENU=Net Weight (Qty. Outstanding);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 32  ;   ;Gross Weight (Qty.Outstanding);Decimal;
                                                   CaptionML=ENU=Gross Weight (Qty.Outstanding);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 33  ;   ;Dimmed Weight (Qty. Outstnd.);Decimal;
                                                   CaptionML=ENU=Dimmed Weight (Qty. Outstnd.);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 34  ;   ;Volume (Qty. Outstanding);Decimal  ;CaptionML=ENU=Volume (Qty. Outstanding);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 35  ;   ;Value (Cost) (Qty.Outstnd.);Decimal;CaptionML=ENU=Value (Cost) (Qty.Outstnd.);
                                                   BlankZero=Yes }
    { 36  ;   ;Value (Price) (Qty. Outstnd.);Decimal;
                                                   CaptionML=ENU=Value (Price) (Qty. Outstnd.);
                                                   BlankZero=Yes }
    { 41  ;   ;Net Weight (Qty. to Ship);Decimal  ;CaptionML=ENU=Net Weight (Qty. to Ship);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 42  ;   ;Gross Weight (Qty. to Ship);Decimal;CaptionML=ENU=Gross Weight (Qty. to Ship);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 43  ;   ;Dimmed Weight (Qty. to Ship);Decimal;
                                                   CaptionML=ENU=Dimmed Weight (Qty. to Ship);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 44  ;   ;Volume (Qty. to Ship);Decimal      ;CaptionML=ENU=Volume (Qty. to Ship);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 45  ;   ;Value (Cost) (Qty. to Ship);Decimal;CaptionML=ENU=Value (Cost) (Qty. to Ship);
                                                   BlankZero=Yes }
    { 46  ;   ;Value (Price) (Qty. to Ship);Decimal;
                                                   CaptionML=ENU=Value (Price) (Qty. to Ship);
                                                   BlankZero=Yes }
    { 51  ;   ;Net Weight (Packed) ;Decimal       ;CaptionML=ENU=Net Weight (Packed);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 52  ;   ;Gross Weight (Packed);Decimal      ;CaptionML=ENU=Gross Weight (Packed);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 53  ;   ;Dimmed Weight (Packed);Decimal     ;CaptionML=ENU=Dimmed Weight (Packed);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 54  ;   ;Volume (Packed)     ;Decimal       ;CaptionML=ENU=Volume (Packed);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 55  ;   ;Value (Cost) (Packed);Decimal      ;CaptionML=ENU=Value (Cost) (Packed);
                                                   BlankZero=Yes }
    { 56  ;   ;Value (Price) (Packed);Decimal     ;CaptionML=ENU=Value (Price) (Packed);
                                                   BlankZero=Yes }
    { 57  ;   ;Weight (Packages)   ;Decimal       ;CaptionML=ENU=Weight (Packages);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 58  ;   ;Volume (Packages)   ;Decimal       ;CaptionML=ENU=Volume (Packages);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 59  ;   ;Value (Packages)    ;Decimal       ;CaptionML=ENU=Value (Packages);
                                                   DecimalPlaces=2:2;
                                                   BlankZero=Yes }
    { 61  ;   ;Quoted Shipping Charge;Decimal     ;CaptionML=ENU=Quoted Shipping Charge }
    { 62  ;   ;Quoted Shipping Cost;Decimal       ;CaptionML=ENU=Quoted Shipping Cost }
    { 63  ;   ;Distributed Shipping Charge;Decimal;CaptionML=ENU=Distributed Shipping Charge }
    { 64  ;   ;Distributed Shipping Cost;Decimal  ;CaptionML=ENU=Distributed Shipping Cost }
    { 50001;  ;EDI ASN             ;Boolean       ;Description=TPZ2301 }
  }
  KEYS
  {
    {    ;Type,No.                                ;Clustered=Yes }
    {    ;Weight (Packages)                        }
    {    ;Volume (Packages)                        }
    {    ;Value (Packages)                         }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      SalesHeader@1000000000 : Record 36;
      PurchHeader@1240030000 : Record 38;
      TransferHeader@1240030005 : Record 5740;
      SalesShipment@1240030001 : Record 110;
      PurchCrMemoHeader@1240030002 : Record 124;
      ReturnShipmentHeader@1240030003 : Record 6650;
      TransferShipmentHeader@1240030004 : Record 5744;
      Package@1000000002 : Record 14000701;
      PostedPackage@1000000003 : Record 14000704;
      Text001@1240030006 : TextConst 'ENU=Cannot be Closed';
      Text002@1240030007 : TextConst 'ENU=Packages must be viewed from the Bill of Lading.';
      BillOfLading@1240030008 : Record 14000822;

    PROCEDURE ShowPackages@2();
    BEGIN
      CASE Type OF
        Type::"Sales Order",
        Type::"Sales Invoice",
        Type::"Purchase Credit Memo",
        Type::"Return Order",
        Type::"Transfer Order":
          BEGIN
            Package.RESET;
            Package.SETCURRENTKEY("Source Type","Source Subtype","Source ID");
            Package.SETRANGE("Source Type","Source Type");
            Package.SETRANGE("Source Subtype","Source Subtype");
            Package.SETRANGE("Source ID","Source ID");
            PAGE.RUNMODAL(0,Package);
          END;
        Type::"Sales Shipment (Posted)",
        Type::"Purchase Credit Memo (Posted)",
        Type::"Return Shipment (Posted)",
        Type::"Transfer Shipment (Posted)":
          BEGIN
            PostedPackage.RESET;
            PostedPackage.SETCURRENTKEY("Source Type","Source Subtype","Posted Source ID");
            PostedPackage.SETRANGE("Source Type","Source Type");
            PostedPackage.SETRANGE("Posted Source ID","Source ID");
            PAGE.RUNMODAL(0,PostedPackage);
          END;
        Type::Package:
          BEGIN
            PostedPackage.RESET;
            PostedPackage.SETRANGE("No.","No.");
            PAGE.RUNMODAL(0,PostedPackage);
          END;
        Type::"Bill of Lading",
        Type::"Bill of Lading (Released)":
          MESSAGE(Text002);
      END;
    END;

    PROCEDURE ShowDocument@1();
    BEGIN
      CASE Type OF
        Type::"Sales Order":
          BEGIN
            SalesHeader.GET("Source Subtype","Source ID");
            PAGE.RUNMODAL(PAGE::"Sales Order",SalesHeader);
          END;
        Type::"Sales Invoice":
          BEGIN
            SalesHeader.GET("Source Subtype","Source ID");
            PAGE.RUNMODAL(PAGE::"Sales Invoice",SalesHeader);
          END;
        Type::"Sales Shipment (Posted)":
          BEGIN
            SalesShipment.GET("Posted Source ID");
            PAGE.RUNMODAL(PAGE::"Posted Sales Shipment",SalesShipment);
          END;
        Type::"Purchase Credit Memo":
          BEGIN
            PurchHeader.GET("Source Subtype","Source ID");
            PAGE.RUNMODAL(PAGE::"Purchase Credit Memo",PurchHeader);
          END;
        Type::"Return Order":
          BEGIN
            PurchHeader.GET("Source Subtype","Source ID");
            PAGE.RUNMODAL(PAGE::"Purchase Return Order",PurchHeader);
          END;
        Type::"Purchase Credit Memo (Posted)":
          BEGIN
            PurchCrMemoHeader.GET("Posted Source ID");
            PAGE.RUNMODAL(PAGE::"Posted Purchase Credit Memo",PurchCrMemoHeader);
          END;
        Type::"Return Shipment (Posted)":
          BEGIN
            ReturnShipmentHeader.GET("Posted Source ID");
            PAGE.RUNMODAL(PAGE::"Posted Return Shipment",ReturnShipmentHeader);
          END;
        Type::"Transfer Order":
          BEGIN
            TransferHeader.GET("Source ID");
            PAGE.RUNMODAL(PAGE::"Transfer Order",TransferHeader);
          END;
        Type::"Transfer Shipment (Posted)":
          BEGIN
            TransferShipmentHeader.GET("Posted Source ID");
            PAGE.RUNMODAL(PAGE::"Posted Transfer Shipment",TransferShipmentHeader);
          END;
        Type::Package:
          BEGIN
            IF Package.GET("No.") THEN BEGIN
              IF PostedPackage.Miscellaneous THEN
                PAGE.RUNMODAL(PAGE::"Miscellaneous Package",Package)
              ELSE
                PAGE.RUNMODAL(PAGE::Package,Package);
            END ELSE BEGIN
              PostedPackage.GET("No.");
              IF PostedPackage.Miscellaneous THEN
                PAGE.RUNMODAL(PAGE::"Posted Miscellaneous Package",PostedPackage)
              ELSE
                PAGE.RUNMODAL(PAGE::"Posted Package",PostedPackage);
            END;

            PostedPackage.RESET;
            PostedPackage.SETRANGE("No.","No.");
            PAGE.RUNMODAL(0,PostedPackage);
          END;
        Type::"Bill of Lading",
        Type::"Bill of Lading (Released)":
          BEGIN
            BillOfLading.GET("Source ID");
            IF BillOfLading.Posted THEN
              PAGE.RUNMODAL(PAGE::"Posted Bill of Lading",BillOfLading)
            ELSE
              PAGE.RUNMODAL(PAGE::"Bill of Lading",BillOfLading);
          END;
      END;
    END;

    PROCEDURE FastPackDocument@3();
    VAR
      FastPackLine@1240030000 : Record 14000711;
    BEGIN
      TESTFIELD("Posted Source ID",'');

      FastPackLine.RESET;
      FastPackLine.SETRANGE("Source Type","Source Type");
      FastPackLine.SETRANGE("Source Subtype","Source Subtype");
      FastPackLine.SETRANGE("Source ID","Source ID");
      PAGE.RUNMODAL(PAGE::"Fast Pack Order",FastPackLine);
    END;

    PROCEDURE PostSalesDocument@4();
    VAR
      SalesPostYesNo@1240030000 : Codeunit 81;
      PurchPostYesNo@1240030001 : Codeunit 91;
      TransferOrderPostYesNo@1240030003 : Codeunit 5706;
      PackingControl@1240030002 : Record 14000717;
    BEGIN
      TESTFIELD("Posted Source ID",'');

      CASE "Source Type" OF
        DATABASE::"Sales Header":
          BEGIN
            SalesHeader.GET("Source Subtype","Source ID");
            SalesPostYesNo.RUN(SalesHeader);
          END;
        DATABASE::"Purchase Header":
          BEGIN
            PurchHeader.GET("Source Subtype","Source ID");
            PurchPostYesNo.RUN(PurchHeader);
          END;
        DATABASE::"Transfer Header":
          BEGIN
            TransferHeader.GET("Source ID");
            TransferOrderPostYesNo.RUN(TransferHeader);
          END;
        ELSE
          PackingControl.ErrorUnknownSourceType("Source Type","Source Subtype","Source ID");
      END;
    END;

    PROCEDURE PostShipmentInvoice@5();
    VAR
      SalesPost@1240030000 : Codeunit 80;
    BEGIN
      TESTFIELD(Type,Type::"Sales Shipment (Posted)");

      SalesShipment.GET("No.");

      SalesHeader.GET(SalesHeader."Document Type"::Order,SalesShipment."Order No.");
      SalesHeader.VALIDATE("Invoice for Shipment No.",SalesShipment."No.");
      SalesHeader.MODIFY(TRUE);
      SalesHeader.Ship := FALSE;
      SalesHeader.Invoice := TRUE;
      SalesPost.RUN(SalesHeader);
    END;

    PROCEDURE CloseDocument@1240030000(PrintOrder@1240030005 : Boolean;ForceClose@1240030006 : Boolean;FuturePacking@1240030007 : Boolean);
    VAR
      PackingStation@1240030000 : Record 14000709;
      ShippingSetup@1240030001 : Record 14000707;
      PackingControl@1240030004 : Record 14000717;
      ShippingAgent@1240030002 : Record 291;
      PackageMgt@1240030003 : Codeunit 14000702;
    BEGIN
      IF NOT (Type IN [Type::"Sales Order",
              Type::"Sales Invoice",Type::"Return Order",
              Type::"Purchase Credit Memo",Type::"Transfer Order"])
      THEN
        ERROR(Text001);

      ShippingSetup.GET;
      PackingStation.GetPackingStation;

      CLEAR(PackingControl);
      PackingControl.TransferFromSource("Source Type","Source Subtype","Source ID");
      IF PackingControl."Shipping Agent Code" <> '' THEN
        ShippingAgent.GET(PackingControl."Shipping Agent Code")
      ELSE
        CLEAR(ShippingAgent);

      CLEAR(PackageMgt);
      PackageMgt.Initialize(PackingStation,ShippingSetup);
      PackageMgt.CloseOrder(ShippingAgent,PackingControl,PrintOrder,ForceClose,FuturePacking);
    END;

    PROCEDURE AddBillOfLadingStatDetail@1240030001(AddBillOfLadingStatDetail@1240030000 : Record 14000826);
    BEGIN
      "Net Weight (Total)" :=
        "Net Weight (Total)" + AddBillOfLadingStatDetail."Net Weight (Total)";
      "Gross Weight (Total)" :=
        "Gross Weight (Total)" + AddBillOfLadingStatDetail."Gross Weight (Total)";
      "Dimmed Weight (Total)" :=
        "Dimmed Weight (Total)" + AddBillOfLadingStatDetail."Dimmed Weight (Total)";
      "Volume (Total)" :=
        "Volume (Total)" + AddBillOfLadingStatDetail."Volume (Total)";
      "Value (Cost) (Total)" :=
        "Value (Cost) (Total)" + AddBillOfLadingStatDetail."Value (Cost) (Total)";
      "Value (Price) (Total)" :=
        "Value (Price) (Total)" + AddBillOfLadingStatDetail."Value (Price) (Total)";
      "Net Weight (Qty. Outstanding)" :=
        "Net Weight (Qty. Outstanding)" + AddBillOfLadingStatDetail."Net Weight (Qty. Outstanding)";
      "Gross Weight (Qty.Outstanding)" :=
        "Gross Weight (Qty.Outstanding)" + AddBillOfLadingStatDetail."Gross Weight (Qty.Outstanding)";
      "Dimmed Weight (Qty. Outstnd.)" :=
        "Dimmed Weight (Qty. Outstnd.)" + AddBillOfLadingStatDetail."Dimmed Weight (Qty. Outstnd.)";
      "Volume (Qty. Outstanding)" :=
        "Volume (Qty. Outstanding)" + AddBillOfLadingStatDetail."Volume (Qty. Outstanding)";
      "Value (Cost) (Qty.Outstnd.)" :=
        "Value (Cost) (Qty.Outstnd.)" + AddBillOfLadingStatDetail."Value (Cost) (Qty.Outstnd.)";
      "Value (Price) (Qty. Outstnd.)" :=
        "Value (Price) (Qty. Outstnd.)" + AddBillOfLadingStatDetail."Value (Price) (Qty. Outstnd.)";
      "Net Weight (Qty. to Ship)" :=
        "Net Weight (Qty. to Ship)" + AddBillOfLadingStatDetail."Net Weight (Qty. to Ship)";
      "Gross Weight (Qty. to Ship)" :=
        "Gross Weight (Qty. to Ship)" + AddBillOfLadingStatDetail."Gross Weight (Qty. to Ship)";
      "Dimmed Weight (Qty. to Ship)" :=
        "Dimmed Weight (Qty. to Ship)" + AddBillOfLadingStatDetail."Dimmed Weight (Qty. to Ship)";
      "Volume (Qty. to Ship)" :=
        "Volume (Qty. to Ship)" + AddBillOfLadingStatDetail."Volume (Qty. to Ship)";
      "Value (Cost) (Qty. to Ship)" :=
        "Value (Cost) (Qty. to Ship)" + AddBillOfLadingStatDetail."Value (Cost) (Qty. to Ship)";
      "Value (Price) (Qty. to Ship)" :=
        "Value (Price) (Qty. to Ship)" + AddBillOfLadingStatDetail."Value (Price) (Qty. to Ship)";
      "Net Weight (Packed)" :=
        "Net Weight (Packed)" + AddBillOfLadingStatDetail."Net Weight (Packed)";
      "Gross Weight (Packed)" :=
        "Gross Weight (Packed)" + AddBillOfLadingStatDetail."Gross Weight (Packed)";
      "Dimmed Weight (Packed)" :=
        "Dimmed Weight (Packed)" + AddBillOfLadingStatDetail."Dimmed Weight (Packed)";
      "Volume (Packed)" :=
        "Volume (Packed)" + AddBillOfLadingStatDetail."Volume (Packed)";
      "Value (Cost) (Packed)" :=
        "Value (Cost) (Packed)" + AddBillOfLadingStatDetail."Value (Cost) (Packed)";
      "Value (Price) (Packed)" :=
        "Value (Price) (Packed)" + AddBillOfLadingStatDetail."Value (Price) (Packed)";
      "Weight (Packages)" :=
        "Weight (Packages)" + AddBillOfLadingStatDetail."Weight (Packages)";
      "Volume (Packages)" :=
        "Volume (Packages)" + AddBillOfLadingStatDetail."Volume (Packages)";
      "Value (Packages)" :=
        "Value (Packages)" + AddBillOfLadingStatDetail."Value (Packages)";
      "Quoted Shipping Charge" :=
        "Quoted Shipping Charge" + AddBillOfLadingStatDetail."Quoted Shipping Charge";
      "Quoted Shipping Cost" :=
        "Quoted Shipping Cost" + AddBillOfLadingStatDetail."Quoted Shipping Cost";
      "Distributed Shipping Charge" :=
        "Distributed Shipping Charge" + AddBillOfLadingStatDetail."Distributed Shipping Charge";
      "Distributed Shipping Cost" :=
        "Distributed Shipping Cost" + AddBillOfLadingStatDetail."Distributed Shipping Cost";
    END;

    BEGIN
    {
      06-19-2018 TPZ2301 DKUMAR
       Added EDI Order Field.
    }
    END.
  }
}

