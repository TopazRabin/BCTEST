OBJECT Table 14097461 Procurement Unit Mass Modify
{
  OBJECT-PROPERTIES
  {
    Date=03/01/20;
    Time=12:00:00 PM;
    Version List=UBP3.04,HFDateLUP;
  }
  PROPERTIES
  {
    Permissions=TableData 32=r;
    CaptionML=ENU=Procurement Unit Mass Modify;
    LookupPageID=Page14000559;
    DrillDownPageID=Page14000559;
  }
  FIELDS
  {
    { 1   ;   ;Location Code       ;Code10        ;TableRelation=Location.Code;
                                                   CaptionML=ENU=Location Code }
    { 2   ;   ;Item No.            ;Code50        ;TableRelation=Item.No.;
                                                   CaptionML=ENU=Item No. }
    { 3   ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=ENU=Variant Code }
    { 23  ;   ;Qty. on Purchase Order;Decimal     ;FieldClass=Normal;
                                                   CaptionML=ENU=Qty. on Purchase Order;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 24  ;   ;Qty. on Sales Order ;Decimal       ;FieldClass=Normal;
                                                   CaptionML=ENU=Qty. on Sales Order;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 27  ;   ;Qty. Expected Less On Order;Decimal;CaptionML=ENU=Qty. Expected Less On Order }
    { 29  ;   ;Qty. Expected       ;Decimal       ;CaptionML=ENU=Qty. Expected;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 32  ;   ;Qty. on Service Order;Decimal      ;FieldClass=Normal;
                                                   CaptionML=ENU=Qty. on Service Order;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 33  ;   ;Replenishment Source Type;Option   ;OnValidate=BEGIN
                                                                IF "Replenishment Source Type" = "Replenishment Source Type"::Production THEN
                                                                  TESTFIELD("Variant Code",'');
                                                                IF "Replenishment Source Type" <> xRec."Replenishment Source Type" THEN BEGIN
                                                                  VALIDATE("Replenishment Source Code",'');
                                                                  VALIDATE("Order Qty. Method","Order Qty. Method"::" ");
                                                                END;
                                                                IF "Replenishment Source Type" = "Replenishment Source Type"::Location THEN
                                                                  "Replenishment Model" := "Replenishment Model"::"Min/Max";
                                                              END;

                                                   CaptionML=ENU=Replenishment Source Type;
                                                   OptionCaptionML=ENU=" ,Location,Vendor,Production,Assembly";
                                                   OptionString=[ ,Location,Vendor,Production,Assembly] }
    { 34  ;   ;Replenishment Source Code;Code20   ;TableRelation=IF (Replenishment Source Type=CONST(Location)) Location.Code WHERE (Use As In-Transit=CONST(No))
                                                                 ELSE IF (Replenishment Source Type=CONST(Vendor)) Vendor.No.
                                                                 ELSE IF (Replenishment Source Type=CONST(Production)) "Production Item Group".Code;
                                                   OnValidate=VAR
                                                                Text001@1240030000 : TextConst 'ENU=Replenishment Path Loop for Item %1 %2';
                                                              BEGIN
                                                              END;

                                                   CaptionML=ENU=Replenishment Source Code }
    { 35  ;   ;Include Drop Ship Usage;Boolean    ;CaptionML=ENU=Include Drop Ship Usage }
    { 36  ;   ;Average Lead Time (Days);Integer   ;CaptionML=ENU=Average Lead Time (Days);
                                                   Editable=No }
    { 37  ;   ;Maximum Inventory   ;Decimal       ;OnValidate=BEGIN
                                                                IF "Maximum Inventory" < 0 THEN
                                                                  ERROR(Text013);
                                                              END;

                                                   CaptionML=ENU=Maximum Inventory;
                                                   DecimalPlaces=0:5 }
    { 38  ;   ;Minimum Inventory   ;Decimal       ;OnValidate=BEGIN
                                                                IF "Minimum Inventory" < 0 THEN
                                                                  ERROR(Text013);
                                                              END;

                                                   CaptionML=ENU=Minimum Inventory;
                                                   DecimalPlaces=0:5 }
    { 39  ;   ;Frozen Lead Time (Days);Integer    ;CaptionML=ENU=Frozen Lead Time (Days) }
    { 40  ;   ;Frozen Lead Time Expir. Date;Date  ;CaptionML=ENU=Frozen Lead Time Expir. Date }
    { 41  ;   ;Frozen Usage per Day;Decimal       ;CaptionML=ENU=Frozen Usage per Day;
                                                   DecimalPlaces=0:5 }
    { 42  ;   ;Frozen Usage Expiration Date;Date  ;TableRelation="Forecast Inventory Period"."Ending Date" WHERE (Type=CONST(" "));
                                                   OnValidate=BEGIN
                                                                IF "Frozen Usage Expiration Date" > 0D THEN
                                                                  UBP.CheckForecastPeriodEndDate("Frozen Usage Expiration Date");
                                                              END;

                                                   OnLookup=BEGIN
                                                              VALIDATE("Frozen Usage Expiration Date", UBP.RunForecastPeriodPageForEndDate);
                                                            END;

                                                   CaptionML=ENU=Frozen Usage Expiration Date }
    { 43  ;   ;Frozen Order Point  ;Decimal       ;CaptionML=ENU=Frozen Order Point;
                                                   DecimalPlaces=0:5 }
    { 44  ;   ;Frozen Order Point Expiration;Date ;TableRelation="Forecast Inventory Period"."Starting Date";
                                                   CaptionML=ENU=Frozen Order Point Expiration }
    { 45  ;   ;Frozen Safety Allowance %;Decimal  ;CaptionML=ENU=Frozen Safety Allowance %;
                                                   DecimalPlaces=0:5 }
    { 46  ;   ;Frozen Safety Expiration Date;Date ;TableRelation="Forecast Inventory Period"."Ending Date" WHERE (Type=CONST(" "));
                                                   OnValidate=BEGIN
                                                                IF "Frozen Safety Expiration Date" > 0D THEN
                                                                  UBP.CheckForecastPeriodEndDate("Frozen Safety Expiration Date");
                                                              END;

                                                   OnLookup=BEGIN
                                                              VALIDATE("Frozen Safety Expiration Date", UBP.RunForecastPeriodPageForEndDate);
                                                            END;

                                                   CaptionML=ENU=Frozen Safety Expiration Date }
    { 47  ;   ;Order Qty. Method   ;Option        ;InitValue=Item Class;
                                                   CaptionML=ENU=Order Qty. Method;
                                                   OptionCaptionML=ENU=" ,EOQ,Item Class";
                                                   OptionString=[ ,EOQ,Item Class] }
    { 48  ;   ;Order Qty. (Item Class);Decimal    ;CaptionML=ENU=Order Qty. (Item Class) }
    { 49  ;   ;Order Qty. (EOQ)    ;Decimal       ;CaptionML=ENU=Order Qty. (EOQ) }
    { 50  ;   ;Purchase Unit of Measure;Code10    ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(Item No.));
                                                   OnValidate=BEGIN
                                                                IF "Purchase Unit of Measure" <> '' THEN BEGIN
                                                                  GetUOM;
                                                                  "Order Multiple" := ItemUOM."Qty. per Unit of Measure";
                                                                END ELSE
                                                                  "Order Multiple" := 0;

                                                                IF "Purchase Unit of Measure" <> '' THEN BEGIN
                                                                  IF ("Order Minimum" <> 0) AND
                                                                     ("Order Minimum" MOD ItemUOM."Qty. per Unit of Measure" <> 0)
                                                                  THEN
                                                                    ERROR(Text012,"Location Code","Item No.","Variant Code","Order Minimum",ItemUOM."Qty. per Unit of Measure");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Purchase Unit of Measure }
    { 51  ;   ;Seasonal Item       ;Boolean       ;CaptionML=ENU=Seasonal Item }
    { 52  ;   ;Season Starting Date;Date          ;TableRelation="Location Inventory Period"."Starting Date" WHERE (Location Code=FIELD(Location Code));
                                                   CaptionML=ENU=Season Starting Date }
    { 53  ;   ;Season Ending Date  ;Date          ;CaptionML=ENU=Season Ending Date }
    { 54  ;   ;Season Purch. Lead Time (Days);Integer;
                                                   CaptionML=ENU=Season Purch. Lead Time (Days) }
    { 56  ;   ;Frozen Controls     ;Boolean       ;CaptionML=ENU=Frozen Controls }
    { 59  ;   ;Seasonal Item Review;Boolean       ;CaptionML=ENU=Seasonal Item Review;
                                                   Editable=No }
    { 60  ;   ;Seasonal Review Date;Date          ;CaptionML=ENU=Seasonal Review Date;
                                                   Editable=No }
    { 62  ;   ;Nonstock Unit       ;Boolean       ;CaptionML=ENU=Nonstock Unit }
    { 63  ;   ;Seasonal Item Trend %;Decimal      ;CaptionML=ENU=Seasonal Item Trend %;
                                                   DecimalPlaces=0:5 }
    { 64  ;   ;Replenishment Model ;Option        ;CaptionML=ENU=Replenishment Model;
                                                   OptionCaptionML=ENU=" ,Min/Max,Usage Based Procurement,Lead Time Horizon";
                                                   OptionString=[ ,Min/Max,Usage Based Procurement,Lead Time Horizon] }
    { 65  ;   ;Minimum Days Supply ;Decimal       ;CaptionML=ENU=Minimum Days Supply;
                                                   DecimalPlaces=0:5 }
    { 66  ;   ;Maximum Days Supply ;Decimal       ;CaptionML=ENU=Maximum Days Supply;
                                                   DecimalPlaces=0:5 }
    { 68  ;   ;First Stocked Date  ;Date          ;CaptionML=ENU=First Stocked Date;
                                                   Editable=No }
    { 69  ;   ;Season Min. Days Supply;Integer    ;CaptionML=ENU=Season Min. Days Supply }
    { 70  ;   ;Season Max. Days Supply;Integer    ;CaptionML=ENU=Season Max. Days Supply }
    { 71  ;   ;Stocking Rule Code  ;Code10        ;TableRelation="Stocking Rule".Code;
                                                   CaptionML=ENU=Stocking Rule Code }
    { 72  ;   ;Track All Formula Calculations;Boolean;
                                                   CaptionML=ENU=Track All Formula Calculations }
    { 73  ;   ;Frozen Formula      ;Code20        ;TableRelation=Formula.Code;
                                                   CaptionML=ENU=Frozen Formula }
    { 74  ;   ;Frozen Formula Expiration Date;Date;TableRelation="Forecast Inventory Period"."Ending Date" WHERE (Type=CONST(" "));
                                                   OnValidate=BEGIN
                                                                IF "Frozen Formula Expiration Date" > 0D THEN
                                                                  UBP.CheckForecastPeriodEndDate("Frozen Formula Expiration Date");
                                                              END;

                                                   OnLookup=BEGIN
                                                              VALIDATE("Frozen Formula Expiration Date", UBP.RunForecastPeriodPageForEndDate);
                                                            END;

                                                   CaptionML=ENU=Frozen Formula Expiration Date }
    { 76  ;   ;Order Multiple      ;Decimal       ;OnValidate=BEGIN
                                                                IF "Purchase Unit of Measure" <> '' THEN BEGIN
                                                                  GetUOM;
                                                                  IF "Order Multiple" MOD ItemUOM."Qty. per Unit of Measure" <> 0 THEN
                                                                     ERROR(Text012,"Location Code","Item No.","Variant Code","Order Multiple",ItemUOM."Qty. per Unit of Measure");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Order Multiple;
                                                   DecimalPlaces=0:2 }
    { 77  ;   ;Order Minimum       ;Decimal       ;OnValidate=BEGIN
                                                                IF ("Purchase Unit of Measure" <> '') AND
                                                                   ("Order Minimum" <> 0)
                                                                THEN BEGIN
                                                                  GetUOM;
                                                                  IF "Order Minimum" MOD ItemUOM."Qty. per Unit of Measure" <> 0 THEN
                                                                    ERROR(Text012,"Location Code","Item No.","Variant Code","Order Minimum",ItemUOM."Qty. per Unit of Measure");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Order Minimum;
                                                   DecimalPlaces=0:2 }
    { 78  ;   ;Review              ;Boolean       ;CaptionML=ENU=Review }
    { 79  ;   ;Date Created        ;Date          ;CaptionML=ENU=Date Created;
                                                   Editable=No }
    { 80  ;   ;User ID             ;Code60        ;CaptionML=ENU=User ID;
                                                   Editable=No }
    { 81  ;   ;Date Changed        ;Date          ;CaptionML=ENU=Date Changed;
                                                   Editable=No }
    { 83  ;   ;Safety Stock Days   ;Decimal       ;CaptionML=ENU=Safety Stock Days;
                                                   DecimalPlaces=0:2 }
    { 84  ;   ;Item Class Ranking  ;Integer       ;CaptionML=ENU=Item Class Ranking;
                                                   Editable=No }
    { 85  ;   ;Item Class Description;Text30      ;CaptionML=ENU=Item Class Description;
                                                   Editable=No }
    { 86  ;   ;Ranking Code        ;Code10        ;CaptionML=ENU=Ranking Code;
                                                   Editable=No }
    { 87  ;   ;Frozen Formula Group;Code10        ;TableRelation="Formula Group".Code;
                                                   CaptionML=ENU=Frozen Formula Group }
    { 88  ;   ;Frozen Fromula Group Exp. Date;Date;TableRelation="Forecast Inventory Period"."Ending Date" WHERE (Type=CONST(" "));
                                                   OnValidate=BEGIN
                                                                IF "Frozen Fromula Group Exp. Date" > 0D THEN
                                                                  UBP.CheckForecastPeriodEndDate("Frozen Fromula Group Exp. Date");
                                                              END;

                                                   OnLookup=BEGIN
                                                              VALIDATE("Frozen Fromula Group Exp. Date", UBP.RunForecastPeriodPageForEndDate);
                                                            END;

                                                   CaptionML=ENU=Frozen Fromula Group Exp. Date }
    { 90  ;   ;Summarize Variant Detail;Boolean   ;OnValidate=BEGIN
                                                                GetInventorySetup;
                                                                IF InvMgtSetup."Summarize Variant Detail" = InvMgtSetup."Summarize Variant Detail"::Never THEN
                                                                  ERROR(Text007);
                                                                IF "Summarize Variant Detail" AND ("Variant Code" <> '') THEN
                                                                  ERROR(Text006);
                                                                "Summarize Pending" := TRUE;
                                                              END;

                                                   CaptionML=ENU=Summarize Variant Detail }
    { 91  ;   ;Summarize Pending   ;Boolean       ;CaptionML=ENU=Summarize Pending;
                                                   Editable=No }
    { 94  ;   ;Qty. on Purchase Order Sum.;Decimal;FieldClass=Normal;
                                                   CaptionML=ENU=Qty. on Purchase Order Sum.;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 95  ;   ;Qty. on Sales Order Sum.;Decimal   ;FieldClass=Normal;
                                                   CaptionML=ENU=Qty. on Sales Order Sum.;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 101 ;   ;Qty. on Service Order Sum.;Decimal ;FieldClass=Normal;
                                                   CaptionML=ENU=Qty. on Service Order Sum.;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 104 ;   ;Preferred Variant   ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD("Summarize Variant Detail",FALSE);
                                                                IF "Preferred Variant" AND NOT xRec."Preferred Variant" THEN BEGIN
                                                                  ProcUnit.RESET;
                                                                  ProcUnit.SETRANGE("Location Code","Location Code");
                                                                  ProcUnit.SETRANGE("Item No.","Item No.");
                                                                  ProcUnit.SETFILTER("Variant Code",'<>%1',"Variant Code");
                                                                  ProcUnit.SETRANGE("Preferred Variant",TRUE);
                                                                  IF ProcUnit.FIND('-') THEN
                                                                    ERROR(Text008,"Variant Code");
                                                                  TESTFIELD("Replenishment Source Type","Replenishment Source Type"::Vendor);
                                                                  TESTFIELD("Replenishment Source Code");
                                                                  IF ProcUnit.GET("Location Code","Item No.",'') AND
                                                                     ProcUnit."Summarize Variant Detail"
                                                                  THEN BEGIN
                                                                    ProcUnit.VALIDATE("Replenishment Source Type",ProcUnit."Replenishment Source Type"::Vendor);
                                                                    ProcUnit.VALIDATE("Replenishment Source Code","Replenishment Source Code");
                                                                    ProcUnit."Order Multiple" := "Order Multiple";
                                                                    ProcUnit."Order Minimum" := "Order Minimum";
                                                                    ProcUnit."Purchase Unit of Measure" := "Purchase Unit of Measure";
                                                                    ProcUnit.MODIFY(TRUE);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Preferred Variant }
    { 105 ;   ;Change Reforecast Required;Boolean ;OnValidate=BEGIN
                                                                IF xRec."Change Reforecast Required" AND (NOT "Change Reforecast Required") THEN
                                                                  ERROR(Text010);
                                                                GetInventorySetup;
                                                                IF InvMgtSetup."Roll Up Via Repl. Path" THEN
                                                                  "Reforecast Item" := TRUE;
                                                              END;

                                                   CaptionML=ENU=Change Reforecast Required }
    { 106 ;   ;Customer Reforecast Required;Boolean;
                                                   CaptionML=ENU=Customer Reforecast Required;
                                                   Editable=No }
    { 109 ;   ;Safety Stock Calc. Method;Option   ;OnValidate=BEGIN
                                                                IF "Safety Stock Calc. Method" = "Safety Stock Calc. Method"::Fixed THEN
                                                                  "Target Customer Service Level" := '';
                                                              END;

                                                   CaptionML=ENU=Safety Stock Calc. Method;
                                                   OptionCaptionML=ENU=Fixed,Forecast Deviation;
                                                   OptionString=Fixed,Forecast Deviation }
    { 110 ;   ;Target Customer Service Level;Code10;
                                                   TableRelation="Target Customer Service Level".Code;
                                                   CaptionML=ENU=Target Customer Service Level }
    { 120 ;   ;Exclude From Suggested Order;Boolean;
                                                   CaptionML=ENU=Exclude From Suggested Order }
    { 121 ;   ;Completed Prod. Plan Level;Integer ;CaptionML=ENU=Completed Prod. Plan Level;
                                                   Editable=No }
    { 122 ;   ;Bypass Production Plan;Boolean     ;CaptionML=ENU=Bypass Production Plan }
    { 123 ;   ;Location Filter     ;Code10        ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Location Filter }
    { 124 ;   ;Auto Variant Redirect;Boolean      ;CaptionML=ENU=Auto Variant Redirect }
    { 125 ;   ;Reforecast Item     ;Boolean       ;CaptionML=ENU=Reforecast Item;
                                                   Editable=No }
    { 127 ;   ;LTH Order Add Days  ;Integer       ;CaptionML=ENU=LTH Order Add Days }
    { 128 ;   ;Sporadic Rule       ;Code10        ;TableRelation="Sporadic Rule".Code;
                                                   CaptionML=ENU=Sporadic Rule }
    { 130 ;   ;Comp. Consumed Option;Option       ;CaptionML=ENU=Comp. Consumed Option;
                                                   OptionCaptionML=ENU=Purchase,Sale,Positive Adjmt.,Negative Adjmt.,Transfer,Consumption,Output, ,Assembly Consumption,Assembly Output;
                                                   OptionString=Purchase,Sale,Positive Adjmt.,Negative Adjmt.,Transfer,Consumption,Output, ,Assembly Consumption,Assembly Output }
    { 131 ;   ;Usage Location Filter String;Text250;
                                                   CaptionML=ENU=Usage Location Filter String }
    { 132 ;   ;Location Filter String;Text250     ;CaptionML=ENU=Location Filter String }
    { 133 ;   ;Periods With Sales  ;Integer       ;CaptionML=ENU=Periods With Sales;
                                                   Editable=No }
    { 134 ;   ;Imported Lead Time (Days);Decimal  ;CaptionML=ENU=Imported Lead Time (Days);
                                                   DecimalPlaces=0:2;
                                                   Editable=No }
    { 135 ;   ;Safety Stock Modifier;Code10       ;TableRelation="Safety Stock Modifier".Code;
                                                   CaptionML=ENU=Safety Stock Modifier }
    { 137 ;   ;Maximum Shelf Stock ;Decimal       ;CaptionML=ENU=Maximum Shelf Stock;
                                                   DecimalPlaces=0:2 }
    { 138 ;   ;Minimum Shelf Stock ;Decimal       ;CaptionML=ENU=Minimum Shelf Stock;
                                                   DecimalPlaces=0:2 }
    { 149 ;   ;Purchaser Code      ;Code20        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=ENU=Purchaser Code }
    { 160 ;   ;Division Code       ;Code10        ;OnValidate=VAR
                                                                Vendor@1240020001 : Record 23;
                                                                VendBuyingCalendar@1240020000 : Record 14000563;
                                                              BEGIN
                                                              END;

                                                   CaptionML=ENU=Division Code }
    { 200 ;   ;Change Stocking Rule Code;Boolean  ;CaptionML=ENU=Change Stocking Rule Code }
    { 201 ;   ;Change NonStock Unit;Boolean       ;CaptionML=ENU=Change NonStock Unit }
    { 202 ;   ;Change Include Drop Ship Usage;Boolean;
                                                   CaptionML=ENU=Change Include Drop Ship Usage }
    { 203 ;   ;Change Replenishment Source;Boolean;CaptionML=ENU=Change Replenishment Source }
    { 204 ;   ;Change Replenishment Model;Boolean ;CaptionML=ENU=Change Replenishment Model }
    { 205 ;   ;Change Order Qty. Method;Boolean   ;CaptionML=ENU=Change Order Qty. Method }
    { 206 ;   ;Change Purchase UOM ;Boolean       ;CaptionML=ENU=Change Purchase UOM }
    { 207 ;   ;Change Order Multiple;Boolean      ;CaptionML=ENU=Change Order Multiple }
    { 208 ;   ;Change Order Minimum;Boolean       ;CaptionML=ENU=Change Order Minimum }
    { 209 ;   ;Change Frozen Lead Time;Boolean    ;CaptionML=ENU=Change Frozen Lead Time }
    { 210 ;   ;Change Frozen Usage Per Day;Boolean;CaptionML=ENU=Change Frozen Usage Per Day }
    { 211 ;   ;Change Frozen Formula;Boolean      ;CaptionML=ENU=Change Frozen Formula }
    { 212 ;   ;Change Frozen Formula Group;Boolean;CaptionML=ENU=Change Frozen Formula Group }
    { 213 ;   ;Change Min. Inventory;Boolean      ;CaptionML=ENU=Change Min. Inventory }
    { 214 ;   ;Change Max. Inventory;Boolean      ;CaptionML=ENU=Change Max. Inventory }
    { 215 ;   ;Change Min. Days Supply;Boolean    ;CaptionML=ENU=Change Min. Days Supply }
    { 216 ;   ;Change Max. Days Supply;Boolean    ;CaptionML=ENU=Change Max. Days Supply }
    { 217 ;   ;Change Safety Stock Days;Boolean   ;CaptionML=ENU=Change Safety Stock Days }
    { 218 ;   ;Change Safety Stock Method;Boolean ;CaptionML=ENU=Change Safety Stock Method }
    { 219 ;   ;Change Tar. Cust. Serv. Level;Boolean;
                                                   CaptionML=ENU=Change Tar. Cust. Serv. Level }
    { 220 ;   ;Change L.T. Order Add Days;Boolean ;CaptionML=ENU=Change L.T. Order Add Days }
    { 221 ;   ;Change Sporadic Rule;Boolean       ;CaptionML=ENU=Change Sporadic Rule }
    { 222 ;   ;Change Safety Stock Modifier;Boolean;
                                                   CaptionML=ENU=Change Safety Stock Modifier }
    { 223 ;   ;Change Max Shelf Stock;Boolean     ;CaptionML=ENU=Change Max Shelf Stock }
    { 224 ;   ;Change Min Shelf Stock;Boolean     ;CaptionML=ENU=Change Min Shelf Stock }
    { 225 ;   ;Change Purchaser Code;Boolean      ;CaptionML=ENU=Change Purchaser Code }
    { 226 ;   ;Change Division Code;Boolean        }
  }
  KEYS
  {
    {    ;User ID                                 ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1002 : TextConst 'ENU=%1 is not a valid Inventory Period Ending Date.';
      Text002@1003 : TextConst 'ENU=Season Starting Date %1 must be before Season Ending Date %2.';
      Text003@1006 : TextConst 'ENU=Season Min. Days Supply %1 cannot be greater than Season Max. Days Supply 2%.';
      Text004@1004 : TextConst 'ENU=Season Ending Date %1 must be before work date %2.';
      Text005@1240030002 : TextConst 'ENU=Unable to delete %1 %2 %3 %4 because %5 is not zero.';
      Text006@1240030004 : TextConst 'ENU=Detail can only be sumarized on a Procurement Unit that does not have a variant.';
      Text007@1240030006 : TextConst 'ENU=The field Summarize Variant Detail on the Inventory Management Setup Card is set to Never.';
      Text008@1240030008 : TextConst 'ENU=Preferred Variant is already set for variant %1.';
      Text009@1240030009 : TextConst 'ENU=Unable to delete a Procurement Unit with Summarize Variant Detail set.';
      Text010@1240030015 : TextConst 'ENU=The system must reset this field by reforecasting the item.';
      Text012@1240030018 : TextConst 'ENU=%1 %2 %3 Order Minimum %4 must be a multiple of %5';
      Text013@1240020000 : TextConst 'ENU=Minimum and Maximum Inventory must both be positive.';
      ItemUOM@1240020019 : Record 5404;
      ProcUnit@1240020016 : Record 14000555;
      InvMgtSetup@1240020003 : Record 14000551;
      UBP@1240020001 : Codeunit 14000564;

    PROCEDURE CalcQuantities@6();
    BEGIN
    END;

    PROCEDURE QtyExpected@1() QuantityExpected2@14000500 : Decimal;
    BEGIN
    END;

    PROCEDURE QtyExpectedLessOnOrder@3() QtyExpectedLessOnOrder2@14000500 : Decimal;
    BEGIN
    END;

    PROCEDURE BackOrderQty@1240030005() Resp : Decimal;
    BEGIN
    END;

    PROCEDURE QtyOnOrder@4() QuantityOnOrder2@14000500 : Decimal;
    BEGIN
    END;

    PROCEDURE QtyInvPlusExpRec@1240030000() QtyInvPlusExpRec2@1240030000 : Decimal;
    BEGIN
    END;

    PROCEDURE GetInventorySetup@2();
    BEGIN
    END;

    PROCEDURE SetTemp@1240030001();
    BEGIN
    END;

    PROCEDURE AdditionalStockQty@1240030002() MSQ : Decimal;
    BEGIN
    END;

    PROCEDURE CheckChangedFields@1240030004(VAR CurrProcUnitNew@1240030000 : Record 14000555;CurrProcUnitOld@1240030001 : Record 14000555);
    VAR
      LocInvMgtSetup@1240030002 : Record 14000551;
    BEGIN
      IF (CurrProcUnitNew."Replenishment Source Type" <> CurrProcUnitOld."Replenishment Source Type") OR
         (CurrProcUnitNew."Replenishment Source Code" <> CurrProcUnitOld."Replenishment Source Code") OR
         (CurrProcUnitNew."Frozen Lead Time (Days)" <> CurrProcUnitOld."Frozen Lead Time (Days)") OR
         (CurrProcUnitNew."Frozen Lead Time Expir. Date" <> CurrProcUnitOld."Frozen Lead Time Expir. Date") OR
         (CurrProcUnitNew."Frozen Usage per Day" <> CurrProcUnitOld."Frozen Usage per Day") OR
         (CurrProcUnitNew."Frozen Usage Expiration Date" <> CurrProcUnitOld."Frozen Usage Expiration Date") OR
         (CurrProcUnitNew."Frozen Safety Allowance %" <> CurrProcUnitOld."Frozen Safety Allowance %") OR
         (CurrProcUnitNew."Frozen Safety Expiration Date" <> CurrProcUnitOld."Frozen Safety Expiration Date") OR
         (CurrProcUnitNew."Frozen Order Point" <> CurrProcUnitOld."Frozen Order Point") OR
         (CurrProcUnitNew."Frozen Order Point Expiration" <> CurrProcUnitOld."Frozen Order Point Expiration") OR
         (CurrProcUnitNew."Frozen Formula" <> CurrProcUnitOld."Frozen Formula") OR
         (CurrProcUnitNew."Frozen Formula Expiration Date" <> CurrProcUnitOld."Frozen Formula Expiration Date") OR
         (CurrProcUnitNew."Frozen Formula Group" <> CurrProcUnitOld."Frozen Formula Group") OR
         (CurrProcUnitNew."Frozen Formula Group Exp. Date" <> CurrProcUnitOld."Frozen Formula Group Exp. Date") OR
         (CurrProcUnitNew."Safety Stock Calc. Method" <> CurrProcUnitOld."Safety Stock Calc. Method") OR
         (CurrProcUnitNew."Target Customer Service Level" <> CurrProcUnitOld."Target Customer Service Level") OR
         (CurrProcUnitNew."Nonstock Unit" <> CurrProcUnitOld."Nonstock Unit") OR
         (CurrProcUnitNew."Include Drop Ship Usage" <> CurrProcUnitOld."Include Drop Ship Usage") OR
         (CurrProcUnitNew."Maximum Inventory" <> CurrProcUnitOld."Maximum Inventory") OR
         (CurrProcUnitNew."Sporadic Rule" <> CurrProcUnitOld."Sporadic Rule") OR
         (((CurrProcUnitNew."Replenishment Model" = CurrProcUnitNew."Replenishment Model"::"Min/Max") OR
           (CurrProcUnitOld."Replenishment Model" = CurrProcUnitOld."Replenishment Model"::"Min/Max")) AND
           (CurrProcUnitNew."Replenishment Model" <> CurrProcUnitOld."Replenishment Model"))
      THEN BEGIN
        CurrProcUnitNew."Date Changed" := TODAY;
        CurrProcUnitNew."User ID" := USERID;
        CurrProcUnitNew."Change Reforecast Required" := TRUE;
        LocInvMgtSetup.GET;
        IF LocInvMgtSetup."Roll Up Via Repl. Path" THEN
          CurrProcUnitNew."Reforecast Item" := TRUE;
      END;
    END;

    PROCEDURE GetUOM@1240030006();
    BEGIN
      IF "Purchase Unit of Measure" <> '' THEN
        IF (ItemUOM."Item No." <> "Item No.") AND
           (ItemUOM.Code <> "Purchase Unit of Measure")
        THEN
          ItemUOM.GET("Item No.","Purchase Unit of Measure");
    END;

    BEGIN
    END.
  }
}

