OBJECT Table 14000908 E-Mail List Entry
{
  OBJECT-PROPERTIES
  {
    Date=05/28/21;
    Time=[ 6:14:19 AM];
    Modified=Yes;
    Version List=SE0.55.12,001;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               VerifyEdit;

               UpdateDefault;

               "Created By" := USERID;
               "Created at Date" := TODAY;
             END;

    OnModify=BEGIN
               VerifyEdit;
             END;

    OnDelete=BEGIN
               VerifyEdit;

               EMailCommentLine.RESET;
               EMailCommentLine.SETRANGE("Table ID",DATABASE::"E-Mail List Entry");
               EMailCommentLine.SETRANGE(Code,Code);
               EMailCommentLine.SETRANGE("Code 2","Code 2");
               EMailCommentLine.SETRANGE("Integer 1","Table ID");
               EMailCommentLine.SETRANGE("Integer 2",Type);
               EMailCommentLine.SETRANGE("Integer 3","Entry No.");
               EMailCommentLine.DELETEALL;
             END;

    CaptionML=ENU=E-Mail List Entry;
    LookupPageID=Page14000918;
    DrillDownPageID=Page14000918;
  }
  FIELDS
  {
    { 1   ;   ;Table ID            ;Integer       ;OnLookup=BEGIN
                                                              LookupReference;
                                                            END;

                                                   CaptionML=ENU=Table ID;
                                                   Editable=No }
    { 2   ;   ;Type                ;Integer       ;OnLookup=BEGIN
                                                              LookupReference;
                                                            END;

                                                   CaptionML=ENU=Type;
                                                   Editable=No }
    { 3   ;   ;Code                ;Code20        ;OnLookup=BEGIN
                                                              LookupReference;
                                                            END;

                                                   CaptionML=ENU=Code;
                                                   Editable=No }
    { 4   ;   ;Entry No.           ;Integer       ;CaptionML=ENU=Entry No.;
                                                   Editable=No }
    { 5   ;   ;Code 2              ;Code10        ;CaptionML=ENU=Code 2 }
    { 10  ;   ;Name                ;Text50        ;OnValidate=BEGIN
                                                                UpdateDefault;
                                                              END;

                                                   CaptionML=ENU=Name }
    { 11  ;   ;E-Mail              ;Text100       ;OnValidate=BEGIN
                                                                IF "E-Mail" = xRec."E-Mail" THEN
                                                                  EXIT;

                                                                "E-Mail" := LOWERCASE("E-Mail");
                                                                IF ("E-Mail" <> '') AND (STRPOS("E-Mail",'@') = 0) THEN
                                                                  ERROR(Text001);
                                                                IF ("E-Mail" <> '') AND (STRPOS("E-Mail",'.') = 0) THEN
                                                                  ERROR(Text002);

                                                                IF xRec."E-Mail" <> '' THEN BEGIN
                                                                  EMailListEntry.RESET;
                                                                  EMailListEntry.SETCURRENTKEY("E-Mail");
                                                                  EMailListEntry.SETRANGE("E-Mail",xRec."E-Mail");
                                                                  IF EMailListEntry.FIND('-') AND (EMailListEntry.NEXT <> 0) THEN BEGIN
                                                                    IF CONFIRM(Text003,FALSE,TABLENAME) THEN BEGIN
                                                                      EMailListEntry.FIND('-');
                                                                      REPEAT
                                                                        IF NOT ((EMailListEntry."Table ID" = "Table ID") AND
                                                                                (EMailListEntry.Type = Type) AND
                                                                                (EMailListEntry.Code = Code) AND
                                                                                (EMailListEntry."Entry No." = "Entry No."))
                                                                        THEN BEGIN
                                                                          EMailListEntry2 := EMailListEntry;
                                                                          EMailListEntry2."E-Mail" := "E-Mail";
                                                                          EMailListEntry2.MODIFY;
                                                                        END;
                                                                      UNTIL EMailListEntry.NEXT = 0;
                                                                    END;
                                                                  END;
                                                                END ELSE
                                                                  UpdateDefault;
                                                              END;

                                                   CaptionML=ENU=E-Mail }
    { 12  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("E-Mail Comment Line" WHERE (Table ID=CONST(14000908),
                                                                                                  Integer 1=FIELD(Table ID),
                                                                                                  Integer 2=FIELD(Type),
                                                                                                  Code=FIELD(Code),
                                                                                                  Integer 3=FIELD(Entry No.),
                                                                                                  Code 2=FIELD(Code 2)));
                                                   CaptionML=ENU=Comment;
                                                   Editable=No }
    { 13  ;   ;Use for Ship-to/Order Address;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Use for Ship-to/Order Address" THEN
                                                                  IF NOT ("Table ID" IN [DATABASE::Customer,DATABASE::Vendor]) THEN
                                                                    ERROR(Text004,Customer.TABLENAME,Vendor.TABLENAME);
                                                              END;

                                                   CaptionML=ENU=Use for Ship-to/Order Address }
    { 14  ;   ;Created By          ;Code50        ;TableRelation=User;
                                                   CaptionML=ENU=Created By;
                                                   Editable=No }
    { 15  ;   ;Created at Date     ;Date          ;CaptionML=ENU=Created at Date;
                                                   Editable=No }
    { 21  ;   ;Sales Shipment E-Mail;Option       ;CaptionML=ENU=Sales Shipment E-Mail;
                                                   OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC] }
    { 22  ;   ;Sales Invoice E-Mail;Option        ;CaptionML=ENU=Sales Invoice E-Mail;
                                                   OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC] }
    { 23  ;   ;Sales Order Conf. E-Mail;Option    ;CaptionML=ENU=Sales Order Conf. E-Mail;
                                                   OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC] }
    { 24  ;   ;Bill of Lading E-Mail;Option       ;CaptionML=ENU=Bill of Lading E-Mail;
                                                   OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC] }
    { 25  ;   ;Customer Statement E-Mail;Option   ;CaptionML=ENU=Customer Statement E-Mail;
                                                   OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC] }
    { 26  ;   ;Sales Quote Conf. E-Mail;Option    ;CaptionML=ENU=Sales Quote Conf. E-Mail;
                                                   OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC] }
    { 27  ;   ;Sales Invoice Conf. E-Mail;Option  ;CaptionML=ENU=Sales Invoice Conf. E-Mail;
                                                   OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC] }
    { 28  ;   ;Sales Credit Memo Conf. E-Mail;Option;
                                                   CaptionML=ENU=Sales Credit Memo Conf. E-Mail;
                                                   OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC] }
    { 29  ;   ;Sales Bl. Order Conf. E-Mail;Option;CaptionML=ENU=Sales Bl. Order Conf. E-Mail;
                                                   OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC] }
    { 30  ;   ;Sales Ret. Order Conf. E-Mail;Option;
                                                   CaptionML=ENU=Sales Ret. Order Conf. E-Mail;
                                                   OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC] }
    { 31  ;   ;Purchase Quote Conf. E-Mail;Option ;CaptionML=ENU=Purchase Quote Conf. E-Mail;
                                                   OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC] }
    { 32  ;   ;Purch. Bl. Order Conf. E-Mail;Option;
                                                   CaptionML=ENU=Purch. Bl. Order Conf. E-Mail;
                                                   OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC] }
    { 33  ;   ;Purchase Order Conf. E-Mail;Option ;CaptionML=ENU=Purchase Order Conf. E-Mail;
                                                   OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC] }
    { 34  ;   ;Purchase Invoice Conf. E-Mail;Option;
                                                   CaptionML=ENU=Purchase Invoice Conf. E-Mail;
                                                   OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC] }
    { 35  ;   ;Purchase Cr. Memo Conf. E-Mail;Option;
                                                   CaptionML=ENU=Purchase Cr. Memo Conf. E-Mail;
                                                   OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC] }
    { 36  ;   ;Purch. Ret. Order Conf. E-Mail;Option;
                                                   CaptionML=ENU=Purch. Ret. Order Conf. E-Mail;
                                                   OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC] }
    { 41  ;   ;Issued Reminder E-Mail;Option      ;CaptionML=ENU=Issued Reminder E-Mail;
                                                   OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC] }
    { 42  ;   ;Issued Fin. Charge Memo E-Mail;Option;
                                                   CaptionML=ENU=Issued Fin. Charge Memo E-Mail;
                                                   OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC] }
    { 43  ;   ;Purchase Receipt E-Mail;Option     ;CaptionML=ENU=Purchase Receipt E-Mail;
                                                   OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC] }
    { 44  ;   ;Purchase Invoice E-Mail;Option     ;CaptionML=ENU=Purchase Invoice E-Mail;
                                                   OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC] }
    { 50000;  ;ProForma Invoice E-Mail;Option     ;OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC];
                                                   Description=TPZ1956 }
    { 50200;  ;Shortcut Dimension 5 Code;Code20   ;TableRelation=Division.Code;
                                                   CaptionML=ENU=Shortcut Dimension 5 Code;
                                                   Description=TPZ1542;
                                                   CaptionClass='1,2,5' }
    { 51020;  ;Sales Credit Memo E-Mail;Option    ;CaptionML=ENU=Sales Credit Memo E-Mail;
                                                   OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC] }
    { 51030;  ;Pick Report E-Mail  ;Option        ;DataClassification=ToBeClassified;
                                                   OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC];
                                                   Description=TPZ2701 }
    { 51031;  ;Packing List E-Mail ;Option        ;DataClassification=ToBeClassified;
                                                   OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC];
                                                   Description=TPZ3185 }
    { 51700;  ;Mfr. Rep. Statement E-Mail;Option  ;CaptionML=ENU=Mfr. Rep. Statement E-Mail;
                                                   OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC] }
    { 51701;  ;Loc. Hdlg. Statement E-Mail;Option ;CaptionML=ENU=Loc. Hdlg. Statement E-Mail;
                                                   OptionCaptionML=ENU=" ,To,CC,BCC";
                                                   OptionString=[ ,To,CC,BCC] }
  }
  KEYS
  {
    {    ;Table ID,Type,Code,Code 2,Entry No.     ;Clustered=Yes }
    {    ;Name                                     }
    {    ;E-Mail                                   }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      EMailListEntry@1000000000 : Record 14000908;
      EMailListEntry2@1000000001 : Record 14000908;
      Customer@1000000002 : Record 18;
      Vendor@1000000003 : Record 23;
      Item@1000000004 : Record 27;
      ShipToAddress@1240030000 : Record 222;
      OrderAddress@1240030001 : Record 224;
      EMailCommentLine@1000000005 : Record 14000910;
      SalesHeader@1240030002 : Record 36;
      SalesShipmentHeader@1240030003 : Record 110;
      SalesInvoiceHeader@1240030004 : Record 112;
      BillOfLading@1240030005 : Record 14000822;
      PurchHeader@1240030006 : Record 38;
      PurchReceiptHeader@1240030007 : Record 120;
      PurchInvoiceHeader@1240030008 : Record 122;
      IssuedReminderHeader@1240030009 : Record 297;
      IssuedFinChargeMemoHeader@1240030010 : Record 304;
      EMailRule@1240030011 : Record 14000907;
      EMailSetup@1240030012 : Record 14000905;
      UserSetup@1240030013 : Record 91;
      EMailUserRule@1240030014 : Record 14000911;
      MfrRep@1000000006 : Record 50027;
      Location@1000000007 : Record 14;
      SalesCrMemoHeader@1000000008 : Record 114;
      EMailComment@1240030015 : Page 14000921;
      EMailUserRuleRetrieved@1240030016 : Boolean;
      Text001@1001 : TextConst 'ENU=@ must exist in E-Mail.';
      Text002@1002 : TextConst 'ENU=. must exist in E-Mail.';
      Text003@1003 : TextConst 'ENU=This E-Mail is used in other %1. Modify all';
      Text004@1004 : TextConst 'ENU=Only allowed for %1 and %2.';
      Text005@1005 : TextConst 'ENU=Sales Shipment %1';
      Text006@1006 : TextConst 'ENU=Sales Invoice %1';
      Text007@1007 : TextConst 'ENU=Purchase Receipt %1';
      Text008@1008 : TextConst 'ENU=Purchase Invoice %1';
      Text009@1009 : TextConst 'ENU=Issued Reminder %1';
      Text010@1010 : TextConst 'ENU=Issued Finance Charge Memo %1';
      Text011@1011 : TextConst 'ENU=Bill of Lading %1';
      Text012@1012 : TextConst 'ENU=Table %1 Type %2 Code %3';
      Text013@1013 : TextConst 'ENU=Lookup is missing for table %1';
      Text014@1014 : TextConst 'ENU=New %1 %2 has been created. Please set the E-Mails they should receive.';
      Text015@1015 : TextConst 'ENU=Missing for table %1';

    PROCEDURE FormatReferenceText@1() : Text[250];
    VAR
      SalesHeader1@1000000000 : Record 36;
    BEGIN
      CASE "Table ID" OF
        DATABASE::Customer:
          EXIT(STRSUBSTNO('%1 %2',Customer.TABLENAME,Code));
        DATABASE::Vendor:
          EXIT(STRSUBSTNO('%1 %2',Vendor.TABLENAME,Code));
        DATABASE::Item:
          EXIT(STRSUBSTNO('%1 %2',Item.TABLENAME,Code));
        DATABASE::"Ship-to Address":
          EXIT(STRSUBSTNO('%1 %2 %3',ShipToAddress.TABLENAME,Code,"Code 2"));
        DATABASE::"Order Address":
          EXIT(STRSUBSTNO('%1 %2 %3',OrderAddress.TABLENAME,Code,"Code 2"));
        DATABASE::"Sales Header":
          BEGIN
            //TPZ1956>>>
            IF Code<>'' THEN BEGIN
              SalesHeader1.RESET;
              SalesHeader1.SETFILTER("Posting No.",Code);
              IF SalesHeader1.FINDSET THEN
                 EXIT(STRSUBSTNO('%1 %2','Proforma',Code));
              END;
            //TPZ1956<<<
            SalesHeader."Document Type" := Type;
            EXIT(STRSUBSTNO('%1 %2',FORMAT(SalesHeader."Document Type"),Code));
          END;
        DATABASE::"Sales Shipment Header":
          EXIT(STRSUBSTNO(Text005,Code));
        DATABASE::"Sales Invoice Header":
          EXIT(STRSUBSTNO(Text006,Code));
        DATABASE::"Purchase Header":
          BEGIN
            PurchHeader."Document Type" := Type;
            EXIT(STRSUBSTNO('%1 %2',FORMAT(PurchHeader."Document Type"),Code));
          END;
        DATABASE::"Purch. Rcpt. Header":
          EXIT(STRSUBSTNO(Text007,Code));
        DATABASE::"Purch. Inv. Header":
          EXIT(STRSUBSTNO(Text008,Code));
        DATABASE::"Issued Reminder Header":
         EXIT(STRSUBSTNO(Text009,Code));
        DATABASE::"Issued Fin. Charge Memo Header":
         EXIT(STRSUBSTNO(Text010,Code));
        DATABASE::"Bill of Lading":
          EXIT(STRSUBSTNO(Text011,Code));
        // <TPZ92, TPZ143>
        DATABASE::"Mfr. Rep.":
          EXIT(STRSUBSTNO('%1 %2',MfrRep.TABLENAME,Code));
        DATABASE::Location:
          EXIT(STRSUBSTNO('%1 %2',Location.TABLENAME,Code));
        DATABASE::"Sales Cr.Memo Header":
          EXIT(STRSUBSTNO('%1 %2',SalesCrMemoHeader.TABLENAME,Code));
        // </TPZ92, TPZ143>
        ELSE
          EXIT(STRSUBSTNO(Text012,"Table ID",Type,Code));
      END;
    END;

    PROCEDURE LookupReference@2();
    BEGIN
      IF Code = '' THEN
        EXIT;

      CASE "Table ID" OF
        DATABASE::Customer:
          BEGIN
            Customer.GET(Code);
            PAGE.RUNMODAL(0,Customer);
          END;
        DATABASE::Vendor:
          BEGIN
            Vendor.GET(Code);
            PAGE.RUNMODAL(0,Vendor);
          END;
        DATABASE::Item:
          BEGIN
            Item.GET(Code);
            PAGE.RUNMODAL(0,Item);
          END;
        DATABASE::"Ship-to Address":
          BEGIN
            ShipToAddress.GET(Code,"Code 2");
            PAGE.RUNMODAL(0,ShipToAddress);
          END;
        DATABASE::"Order Address":
          BEGIN
            OrderAddress.GET(Code,"Code 2");
            PAGE.RUNMODAL(0,OrderAddress);
          END;
        DATABASE::"Sales Header":
          BEGIN
            SalesHeader.GET(Type,Code);
            PAGE.RUNMODAL(0,SalesHeader);
          END;
        DATABASE::"Sales Shipment Header":
          BEGIN
            SalesShipmentHeader.GET(Code);
            PAGE.RUNMODAL(0,SalesShipmentHeader);
          END;
        DATABASE::"Sales Invoice Header":
          BEGIN
            SalesInvoiceHeader.GET(Code);
            PAGE.RUNMODAL(0,SalesInvoiceHeader);
          END;
        DATABASE::"Purchase Header":
          BEGIN
            PurchHeader.GET(Type,Code);
            PAGE.RUNMODAL(0,PurchHeader);
          END;
        DATABASE::"Purch. Rcpt. Header":
          BEGIN
            PurchReceiptHeader.GET(Code);
            PAGE.RUNMODAL(0,PurchReceiptHeader);
          END;
        DATABASE::"Purch. Inv. Header":
          BEGIN
            PurchInvoiceHeader.GET(Code);
            PAGE.RUNMODAL(0,PurchInvoiceHeader);
          END;
        DATABASE::"Issued Reminder Header":
          BEGIN
            IssuedReminderHeader.GET(Code);
            PAGE.RUNMODAL(0,IssuedReminderHeader);
          END;
        DATABASE::"Issued Fin. Charge Memo Header":
          BEGIN
            IssuedFinChargeMemoHeader.GET(Code);
            PAGE.RUNMODAL(0,IssuedFinChargeMemoHeader);
          END;
        DATABASE::"Bill of Lading":
          BEGIN
            BillOfLading.GET(Code);
            PAGE.RUNMODAL(0,BillOfLading);
          END;
        // <TPZ92, TPZ143>
        DATABASE::"Mfr. Rep.":
          BEGIN
            MfrRep.GET(Code);
            PAGE.RUNMODAL(0,MfrRep);
          END;
        DATABASE::Location:
          BEGIN
            Location.GET(Code);
            PAGE.RUNMODAL(0,Location);
          END;
        DATABASE::"Sales Cr.Memo Header":
          BEGIN
            SalesCrMemoHeader.GET(Code);
            PAGE.RUNMODAL(0,Location);
          END;
        // </TPZ92, TPZ143>
        ELSE
          ERROR(Text013,"Table ID");
      END;
    END;

    PROCEDURE InsertNewEMailListEntry@3(NewName@1240030000 : Text[50];NewEmail@1240030001 : Text[250];NewTableID@1240030002 : Integer;NewType@1240030003 : Integer;NewCode@1240030004 : Code[20];NewCode2@1240030005 : Code[20];ShowMessage@1240030006 : Boolean) : Boolean;
    VAR
      Object@1000000006 : Record 2000000001;
    BEGIN
      IF NewEmail <> '' THEN BEGIN
        EMailListEntry.RESET;
        EMailListEntry.SETRANGE("Table ID",NewTableID);
        EMailListEntry.SETRANGE(Type,NewType);
        EMailListEntry.SETRANGE(Code,NewCode);
        EMailListEntry.SETRANGE("Code 2",NewCode2);
        EMailListEntry.SETRANGE("E-Mail",LOWERCASE(NewEmail));
        IF NOT EMailListEntry.FIND('-') THEN BEGIN
          EMailListEntry.SETRANGE("E-Mail");
          IF NOT EMailListEntry.FIND('+') THEN BEGIN
            EMailListEntry."Table ID" := NewTableID;
            EMailListEntry.Type := NewType;
            EMailListEntry.Code := NewCode;
            EMailListEntry."Code 2" := NewCode2;
            EMailListEntry."Entry No." := 10000;
          END ELSE
            EMailListEntry."Entry No." := EMailListEntry."Entry No." + 10000;
          EMailListEntry.INIT;
          EMailListEntry.VALIDATE(Name,NewName);
          EMailListEntry.VALIDATE("E-Mail",NewEmail);
          EMailListEntry.INSERT(TRUE);

          IF ShowMessage THEN BEGIN
            Object.GET(Object.Type::Table,'',NewTableID);

            MESSAGE(
              Text014,
              Object.Name,EMailListEntry.TABLENAME);
          END;

          EXIT(TRUE);
        END;
      END;

      EXIT(FALSE);
    END;

    PROCEDURE LookupComment@4();
    BEGIN
      EMailCommentLine.RESET;
      EMailCommentLine.SETRANGE("Table ID",DATABASE::"E-Mail List Entry");
      EMailCommentLine.SETRANGE(Code,Code);
      EMailCommentLine.SETRANGE("Code 2","Code 2");
      EMailCommentLine.SETRANGE("Integer 1","Table ID");
      EMailCommentLine.SETRANGE("Integer 2",Type);
      EMailCommentLine.SETRANGE("Integer 3","Entry No.");
      CLEAR(EMailComment);
      EMailComment.SETTABLEVIEW(EMailCommentLine);
      EMailComment.RUNMODAL;
    END;

    LOCAL PROCEDURE SetDefaultFromEMailRule@5(CurrentEMailRule@1240030000 : Record 14000907);
    BEGIN
      IF (CurrentEMailRule."Sales Shipment E-Mail Default" > 0) AND
         ("Sales Shipment E-Mail" = 0)
      THEN
        "Sales Shipment E-Mail" := CurrentEMailRule."Sales Shipment E-Mail Default";
      IF (CurrentEMailRule."Sales Invoice E-Mail Default" > 0) AND
         ("Sales Invoice E-Mail" = 0)
      THEN
        "Sales Invoice E-Mail" := CurrentEMailRule."Sales Invoice E-Mail Default";
      IF (CurrentEMailRule."Sales Order Conf. E-Mail Def." > 0) AND
         ("Sales Order Conf. E-Mail" = 0)
      THEN
        "Sales Order Conf. E-Mail" := CurrentEMailRule."Sales Order Conf. E-Mail Def.";
      IF (CurrentEMailRule."Bill of Lading E-Mail Default" > 0) AND
         ("Bill of Lading E-Mail" = 0)
      THEN
        "Bill of Lading E-Mail" := CurrentEMailRule."Bill of Lading E-Mail Default";
      IF (CurrentEMailRule."Customer Statement E-Mail Def." > 0) AND
         ("Customer Statement E-Mail" = 0)
      THEN
        "Customer Statement E-Mail" := CurrentEMailRule."Customer Statement E-Mail Def.";
      IF (CurrentEMailRule."Sales Quote Conf. E-Mail Def." > 0) AND
         ("Sales Quote Conf. E-Mail" = 0)
      THEN
        "Sales Quote Conf. E-Mail" := CurrentEMailRule."Sales Quote Conf. E-Mail Def.";
      IF (CurrentEMailRule."Sales Invoice Conf E-Mail Def." > 0) AND
         ("Sales Invoice Conf. E-Mail" = 0)
      THEN
        "Sales Invoice Conf. E-Mail" := CurrentEMailRule."Sales Invoice Conf E-Mail Def.";
      IF (CurrentEMailRule."Sales Cr Memo Conf E-Mail Def." > 0) AND
         ("Sales Credit Memo Conf. E-Mail" = 0)
      THEN
        "Sales Credit Memo Conf. E-Mail" := CurrentEMailRule."Sales Cr Memo Conf E-Mail Def.";
      IF (CurrentEMailRule."Sales Bl. Ord Conf E-Mail Def." > 0) AND
         ("Sales Bl. Order Conf. E-Mail" = 0)
      THEN
        "Sales Bl. Order Conf. E-Mail" := CurrentEMailRule."Sales Bl. Ord Conf E-Mail Def.";
      IF (CurrentEMailRule."Sales Ret Ord Conf E-Mail Def." > 0) AND
         ("Sales Ret. Order Conf. E-Mail" = 0)
      THEN
        "Sales Ret. Order Conf. E-Mail" := CurrentEMailRule."Sales Ret Ord Conf E-Mail Def.";
      IF (CurrentEMailRule."Purch. Quote Conf. E-Mail Def." > 0) AND
         ("Purchase Quote Conf. E-Mail" = 0)
      THEN
        "Purchase Quote Conf. E-Mail" := CurrentEMailRule."Purch. Quote Conf. E-Mail Def.";
      IF (CurrentEMailRule."Purch Bl. Ord Conf E-Mail Def." > 0) AND
         ("Purch. Bl. Order Conf. E-Mail" = 0)
      THEN
        "Purch. Bl. Order Conf. E-Mail" := CurrentEMailRule."Purch Bl. Ord Conf E-Mail Def.";
      IF (CurrentEMailRule."Purch. Order Conf. E-Mail Def." > 0) AND
         ("Purchase Order Conf. E-Mail" = 0)
      THEN
        "Purchase Order Conf. E-Mail" := CurrentEMailRule."Purch. Order Conf. E-Mail Def.";
      IF (CurrentEMailRule."Purch Invoice Conf E-Mail Def." > 0) AND
         ("Purchase Invoice Conf. E-Mail" = 0)
      THEN
        "Purchase Invoice Conf. E-Mail" := CurrentEMailRule."Purch Invoice Conf E-Mail Def.";
      IF (CurrentEMailRule."Purch Cr Memo Conf E-Mail Def." > 0) AND
         ("Purchase Cr. Memo Conf. E-Mail" = 0)
      THEN
        "Purchase Cr. Memo Conf. E-Mail" := CurrentEMailRule."Purch Cr Memo Conf E-Mail Def.";
      IF (CurrentEMailRule."Purch Ret Ord Conf E-Mail Def." > 0) AND
         ("Purch. Ret. Order Conf. E-Mail" = 0)
      THEN
        "Purch. Ret. Order Conf. E-Mail" := CurrentEMailRule."Purch Ret Ord Conf E-Mail Def.";
      IF (CurrentEMailRule."Issued Reminder E-Mail Default" > 0) AND
         ("Issued Reminder E-Mail" = 0)
      THEN
        "Issued Reminder E-Mail" := CurrentEMailRule."Issued Reminder E-Mail Default";
      IF (CurrentEMailRule."Issued Fin Ch Memo E-Mail Def." > 0) AND
         ("Issued Fin. Charge Memo E-Mail" = 0)
      THEN
        "Issued Fin. Charge Memo E-Mail" := CurrentEMailRule."Issued Fin Ch Memo E-Mail Def.";
      IF (CurrentEMailRule."Purchase Receipt E-Mail Def." > 0) AND
         ("Purchase Receipt E-Mail" = 0)
      THEN
        "Purchase Receipt E-Mail" := CurrentEMailRule."Purchase Receipt E-Mail Def.";
      IF (CurrentEMailRule."Purchase Invoice E-Mail Def." > 0) AND
         ("Purchase Invoice E-Mail" = 0)
      THEN
        "Purchase Invoice E-Mail" := CurrentEMailRule."Purchase Invoice E-Mail Def.";
      // <TPZ92, TPZ143>
      IF (CurrentEMailRule."Mfr. Rep. Stm. E-Mail Def." > 0) AND
         ("Mfr. Rep. Statement E-Mail" = 0)
      THEN
        "Mfr. Rep. Statement E-Mail" := CurrentEMailRule."Mfr. Rep. Stm. E-Mail Def.";

      IF (CurrentEMailRule."Loc. Hdlg. Stm. E-Mai Def." > 0) AND
         ("Loc. Hdlg. Statement E-Mail" = 0)
      THEN
        "Loc. Hdlg. Statement E-Mail" := CurrentEMailRule."Loc. Hdlg. Stm. E-Mai Def.";

      IF (CurrentEMailRule."Sales Credit Memo E-Mail Def." > 0) AND
         ("Sales Credit Memo E-Mail" = 0)
      THEN
        "Sales Credit Memo E-Mail" := CurrentEMailRule."Sales Credit Memo E-Mail Def.";
      // </TPZ92, TPZ143>
      //TPZ1956>>>
      IF (CurrentEMailRule."Proforma Invoice E-Mail Def." > 0) AND
         ("ProForma Invoice E-Mail" = 0)
      THEN
        "ProForma Invoice E-Mail" := CurrentEMailRule."Proforma Invoice E-Mail Def.";
      //TPZ1956<<<
    END;

    PROCEDURE UpdateDefault@6();
    BEGIN
      CASE "Table ID" OF
        DATABASE::Customer:
          EMailRule.GetEMailRule(0,Code,'');
        DATABASE::"Ship-to Address":
          EMailRule.GetEMailRule(0,Code,"Code 2");
        DATABASE::Vendor:
          EMailRule.GetEMailRule(1,Code,'');
        DATABASE::"Order Address":
          EMailRule.GetEMailRule(1,Code,"Code 2");
        DATABASE::"Sales Header":
          IF SalesHeader.GET(Type,Code) THEN
            EMailRule.GetEMailRule(0,SalesHeader."Sell-to Customer No.",SalesHeader."Ship-to Code")
          ELSE
            EMailRule.GetEMailRule(0,'','');
        DATABASE::"Sales Shipment Header":
          IF SalesShipmentHeader.GET(Code) THEN
            EMailRule.GetEMailRule(
              0,SalesShipmentHeader."Sell-to Customer No.",SalesShipmentHeader."Ship-to Code")
          ELSE
            EMailRule.GetEMailRule(0,'','');
        DATABASE::"Sales Invoice Header":
          IF SalesInvoiceHeader.GET(Code) THEN
            EMailRule.GetEMailRule(
              0,SalesInvoiceHeader."Sell-to Customer No.",SalesInvoiceHeader."Ship-to Code")
          ELSE
            EMailRule.GetEMailRule(0,'','');
        DATABASE::"Purchase Header":
          IF PurchHeader.GET(Type,Code) THEN
            EMailRule.GetEMailRule(1,PurchHeader."Buy-from Vendor No.",PurchHeader."Order Address Code")
          ELSE
            EMailRule.GetEMailRule(1,'','');
        DATABASE::"Purch. Rcpt. Header":
          IF PurchReceiptHeader.GET(Code) THEN
            EMailRule.GetEMailRule(
              1,PurchReceiptHeader."Buy-from Vendor No.",PurchReceiptHeader."Order Address Code")
          ELSE
            EMailRule.GetEMailRule(1,'','');
        DATABASE::"Purch. Inv. Header":
          IF PurchInvoiceHeader.GET(Code) THEN
            EMailRule.GetEMailRule(
              1,PurchInvoiceHeader."Buy-from Vendor No.",PurchInvoiceHeader."Order Address Code")
          ELSE
            EMailRule.GetEMailRule(1,'','');
        DATABASE::"Issued Reminder Header":
          IF IssuedReminderHeader.GET(Code) THEN
            EMailRule.GetEMailRule(0,IssuedReminderHeader."Customer No.",'')
          ELSE
            EMailRule.GetEMailRule(0,'','');
        DATABASE::"Issued Fin. Charge Memo Header":
          IF IssuedFinChargeMemoHeader.GET(Code) THEN
            EMailRule.GetEMailRule(0,IssuedFinChargeMemoHeader."Customer No.",'')
          ELSE
            EMailRule.GetEMailRule(0,'','');
        DATABASE::"Bill of Lading":
          IF BillOfLading.GET(Code) THEN
            EMailRule.GetEMailRule(
              BillOfLading."Ship-to Type",BillOfLading."Ship-to No.",BillOfLading."Ship-to Code")
          ELSE
            EMailRule.GetEMailRule(0,'','');
         // <TPZ92, TPZ143>
        DATABASE::"Mfr. Rep.":
          IF MfrRep.GET(Code) THEN
            EMailRule.GetEMailRule(0,Code,'')
          ELSE
            EMailRule.GetEMailRule(0,'','');
        DATABASE::Location:
          IF Location.GET(Code) THEN
            EMailRule.GetEMailRule(0,Code,'')
          ELSE
            EMailRule.GetEMailRule(0,'','');
        DATABASE::"Sales Cr.Memo Header":
          IF SalesCrMemoHeader.GET(Code) THEN
            EMailRule.GetEMailRule(
              0,SalesCrMemoHeader."Sell-to Customer No.",'')
          ELSE
            EMailRule.GetEMailRule(0,'','');
         // </TPZ92, TPZ143>
        ELSE
          EMailRule.GetEMailRule(0,'','');
      END;

      SetDefaultFromEMailRule(EMailRule);
    END;

    PROCEDURE EMailSelected@7(CurrentFieldNo@1240030000 : Integer) : Boolean;
    BEGIN
      CASE CurrentFieldNo OF
        FIELDNO("Sales Shipment E-Mail"):
          EXIT("Sales Shipment E-Mail" > 0);
        FIELDNO("Sales Invoice E-Mail"):
          EXIT("Sales Invoice E-Mail" > 0);
        FIELDNO("Sales Order Conf. E-Mail"):
          EXIT("Sales Order Conf. E-Mail" > 0);
        FIELDNO("Bill of Lading E-Mail"):
          EXIT("Bill of Lading E-Mail" > 0);
        FIELDNO("Customer Statement E-Mail"):
          EXIT("Customer Statement E-Mail" > 0);
        FIELDNO("Sales Quote Conf. E-Mail"):
          EXIT("Sales Quote Conf. E-Mail" > 0);
        FIELDNO("Sales Invoice Conf. E-Mail"):
          EXIT("Sales Invoice Conf. E-Mail" > 0);
        FIELDNO("Sales Credit Memo Conf. E-Mail"):
          EXIT("Sales Credit Memo Conf. E-Mail" > 0);
        FIELDNO("Sales Bl. Order Conf. E-Mail"):
          EXIT("Sales Bl. Order Conf. E-Mail" > 0);
        FIELDNO("Sales Ret. Order Conf. E-Mail"):
          EXIT("Sales Ret. Order Conf. E-Mail" > 0);
        FIELDNO("Purchase Quote Conf. E-Mail"):
          EXIT("Purchase Quote Conf. E-Mail" > 0);
        FIELDNO("Purch. Bl. Order Conf. E-Mail"):
          EXIT("Purch. Bl. Order Conf. E-Mail" > 0);
        FIELDNO("Purchase Order Conf. E-Mail"):
          EXIT("Purchase Order Conf. E-Mail" > 0);
        FIELDNO("Purchase Invoice Conf. E-Mail"):
          EXIT("Purchase Invoice Conf. E-Mail" > 0);
        FIELDNO("Purchase Cr. Memo Conf. E-Mail"):
          EXIT("Purchase Cr. Memo Conf. E-Mail" > 0);
        FIELDNO("Purch. Ret. Order Conf. E-Mail"):
          EXIT("Purch. Ret. Order Conf. E-Mail" > 0);
        FIELDNO("Issued Reminder E-Mail"):
          EXIT("Issued Reminder E-Mail" > 0);
        FIELDNO("Issued Fin. Charge Memo E-Mail"):
          EXIT("Issued Fin. Charge Memo E-Mail" > 0);
        FIELDNO("Purchase Receipt E-Mail"):
          EXIT("Purchase Receipt E-Mail" > 0);
        FIELDNO("Purchase Invoice E-Mail"):
          EXIT("Purchase Invoice E-Mail" > 0);
        // <TPZ92, TPZ143>
        FIELDNO("Mfr. Rep. Statement E-Mail"):
          EXIT("Mfr. Rep. Statement E-Mail" > 0);
        FIELDNO("Loc. Hdlg. Statement E-Mail"):
          EXIT("Loc. Hdlg. Statement E-Mail" > 0);
        FIELDNO("Sales Credit Memo E-Mail"):
          EXIT("Sales Credit Memo E-Mail" > 0);
        // </TPZ92, TPZ143>
        //TPZ1956>>>
        FIELDNO("ProForma Invoice E-Mail"):
          EXIT("ProForma Invoice E-Mail" > 0);
        //TPZ1956<<<
        ELSE
          ERROR(Text015,"Table ID");
      END;
    END;

    PROCEDURE GetColumnActive@8(CurrentTableID@1240030000 : Integer;CurrentType@1240030001 : Integer;CurrentFieldNo@1240030002 : Integer) : Boolean;
    BEGIN
      CASE CurrentTableID OF
        DATABASE::Customer:
          CASE CurrentFieldNo OF
            FIELDNO("Sales Shipment E-Mail"): EXIT(TRUE);
            FIELDNO("Sales Invoice E-Mail"): EXIT(TRUE);
            FIELDNO("Sales Order Conf. E-Mail"): EXIT(TRUE);
            FIELDNO("Bill of Lading E-Mail"): EXIT(TRUE);
            FIELDNO("Customer Statement E-Mail"): EXIT(TRUE);
            FIELDNO("Sales Quote Conf. E-Mail"): EXIT(TRUE);
            FIELDNO("Sales Invoice Conf. E-Mail"): EXIT(TRUE);
            FIELDNO("Sales Credit Memo Conf. E-Mail"): EXIT(TRUE);
            FIELDNO("Sales Bl. Order Conf. E-Mail"): EXIT(TRUE);
            FIELDNO("Sales Ret. Order Conf. E-Mail"): EXIT(TRUE);
            FIELDNO("Issued Reminder E-Mail"): EXIT(TRUE);
            FIELDNO("Issued Fin. Charge Memo E-Mail"): EXIT(TRUE);
            ELSE EXIT(FALSE);
          END;
        DATABASE::"Ship-to Address":
          CASE CurrentFieldNo OF
            FIELDNO("Sales Shipment E-Mail"): EXIT(TRUE);
            FIELDNO("Sales Invoice E-Mail"): EXIT(TRUE);
            FIELDNO("Sales Order Conf. E-Mail"): EXIT(TRUE);
            FIELDNO("Bill of Lading E-Mail"): EXIT(TRUE);
            FIELDNO("Sales Quote Conf. E-Mail"): EXIT(TRUE);
            FIELDNO("Sales Invoice Conf. E-Mail"): EXIT(TRUE);
            FIELDNO("Sales Credit Memo Conf. E-Mail"): EXIT(TRUE);
            FIELDNO("Sales Bl. Order Conf. E-Mail"): EXIT(TRUE);
            FIELDNO("Sales Ret. Order Conf. E-Mail"): EXIT(TRUE);
            ELSE EXIT(FALSE);
          END;
        DATABASE::"Sales Header":
          CASE CurrentFieldNo OF
            FIELDNO("Sales Shipment E-Mail"): EXIT(TRUE);
            FIELDNO("Sales Invoice E-Mail"): EXIT(TRUE);
            FIELDNO("Bill of Lading E-Mail"): EXIT(TRUE);
            FIELDNO("Sales Quote Conf. E-Mail"): EXIT(CurrentType = 0);
            FIELDNO("Sales Order Conf. E-Mail"): EXIT(CurrentType IN [0,1,4]);
            FIELDNO("Sales Invoice Conf. E-Mail"): EXIT(CurrentType = 2);
            FIELDNO("Sales Credit Memo Conf. E-Mail"): EXIT(CurrentType = 3);
            FIELDNO("Sales Bl. Order Conf. E-Mail"): EXIT(CurrentType = 4);
            FIELDNO("Sales Ret. Order Conf. E-Mail"): EXIT(CurrentType = 5);
            FIELDNO("ProForma Invoice E-Mail"): EXIT(TRUE); //TPZ1956
            ELSE EXIT(FALSE);
          END;
        DATABASE::"Sales Shipment Header":
          CASE CurrentFieldNo OF
            FIELDNO("Sales Shipment E-Mail"): EXIT(TRUE);
            ELSE EXIT(FALSE);
          END;
        DATABASE::"Sales Invoice Header":
          CASE CurrentFieldNo OF
            FIELDNO("Sales Invoice E-Mail"): EXIT(TRUE);
            ELSE EXIT(FALSE);
          END;
        DATABASE::Vendor:
          CASE CurrentFieldNo OF
            FIELDNO("Bill of Lading E-Mail"): EXIT(TRUE);
            FIELDNO("Purchase Quote Conf. E-Mail"): EXIT(TRUE);
            FIELDNO("Purch. Bl. Order Conf. E-Mail"): EXIT(TRUE);
            FIELDNO("Purchase Order Conf. E-Mail"): EXIT(TRUE);
            FIELDNO("Purchase Invoice Conf. E-Mail"): EXIT(TRUE);
            FIELDNO("Purchase Cr. Memo Conf. E-Mail"): EXIT(TRUE);
            FIELDNO("Purch. Ret. Order Conf. E-Mail"): EXIT(TRUE);
            FIELDNO("Purchase Receipt E-Mail"): EXIT(TRUE);
            FIELDNO("Purchase Invoice E-Mail"): EXIT(TRUE);
            ELSE EXIT(FALSE);
          END;
        DATABASE::"Order Address":
          CASE CurrentFieldNo OF
            FIELDNO("Bill of Lading E-Mail"): EXIT(TRUE);
            FIELDNO("Purchase Quote Conf. E-Mail"): EXIT(TRUE);
            FIELDNO("Purch. Bl. Order Conf. E-Mail"): EXIT(TRUE);
            FIELDNO("Purchase Order Conf. E-Mail"): EXIT(TRUE);
            FIELDNO("Purchase Invoice Conf. E-Mail"): EXIT(TRUE);
            FIELDNO("Purchase Cr. Memo Conf. E-Mail"): EXIT(TRUE);
            FIELDNO("Purch. Ret. Order Conf. E-Mail"): EXIT(TRUE);
            FIELDNO("Purchase Receipt E-Mail"): EXIT(TRUE);
            FIELDNO("Purchase Invoice E-Mail"): EXIT(TRUE);
            ELSE EXIT(FALSE);
          END;
        DATABASE::"Purchase Header":
          CASE CurrentFieldNo OF
            FIELDNO("Purchase Quote Conf. E-Mail"): EXIT(CurrentType = 0);
            FIELDNO("Purchase Order Conf. E-Mail"): EXIT(CurrentType IN [0,1,4]);
            FIELDNO("Purchase Invoice Conf. E-Mail"): EXIT(CurrentType = 2);
            FIELDNO("Purchase Cr. Memo Conf. E-Mail"): EXIT(CurrentType = 3);
            FIELDNO("Purch. Bl. Order Conf. E-Mail"): EXIT(CurrentType = 4);
            FIELDNO("Purch. Ret. Order Conf. E-Mail"): EXIT(CurrentType = 5);
            FIELDNO("Purchase Receipt E-Mail"): EXIT(TRUE);
            FIELDNO("Purchase Invoice E-Mail"): EXIT(TRUE);
            ELSE EXIT(FALSE);
          END;
        DATABASE::"Purch. Rcpt. Header":
          CASE CurrentFieldNo OF
            FIELDNO("Purchase Receipt E-Mail"): EXIT(TRUE);
            ELSE EXIT(FALSE);
          END;
        DATABASE::"Purch. Inv. Header":
          CASE CurrentFieldNo OF
            FIELDNO("Purchase Invoice E-Mail"): EXIT(TRUE);
            ELSE EXIT(FALSE);
          END;
        DATABASE::"Issued Reminder Header":
          CASE CurrentFieldNo OF
            FIELDNO("Issued Reminder E-Mail"): EXIT(TRUE);
            ELSE EXIT(FALSE);
          END;
        DATABASE::"Issued Fin. Charge Memo Header":
          CASE CurrentFieldNo OF
            FIELDNO("Issued Fin. Charge Memo E-Mail"): EXIT(TRUE);
            ELSE EXIT(FALSE);
          END;
        DATABASE::"Bill of Lading":
          CASE CurrentFieldNo OF
            FIELDNO("Bill of Lading E-Mail"): EXIT(TRUE);
            ELSE EXIT(FALSE);
          END;
        // <TPZ92, TPZ143>
        DATABASE::"Mfr. Rep.":
          CASE CurrentFieldNo OF
            FIELDNO("Mfr. Rep. Statement E-Mail"):
              EXIT(TRUE);
            ELSE
              EXIT(FALSE);
          END;
        DATABASE::Location:
          CASE CurrentFieldNo OF
            FIELDNO("Loc. Hdlg. Statement E-Mail"):
              EXIT(TRUE);
            ELSE
              EXIT(FALSE);
          END;
        DATABASE::"Sales Cr.Memo Header":
          CASE CurrentFieldNo OF
            FIELDNO("Sales Credit Memo E-Mail"):
              EXIT(TRUE);
            ELSE
              EXIT(FALSE);
          END;
        // <TPZ92, TPZ143>
        ELSE
          EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE VerifyEdit@9();
    BEGIN
      IF NOT EMailUserRuleRetrieved THEN BEGIN
        IF UserSetup.GET(USERID) THEN
          IF UserSetup."E-Mail User Rule" <> '' THEN
            EMailUserRule.GET(UserSetup."E-Mail User Rule");

        IF EMailUserRule.Code = '' THEN BEGIN
          EMailSetup.GET;
          IF EMailSetup."Default E-Mail User Rule" <> '' THEN
            EMailUserRule.GET(EMailSetup."Default E-Mail User Rule")
          ELSE
            EMailUserRule.INIT;
        END;

        EMailUserRuleRetrieved := TRUE;
      END;

      CASE "Table ID" OF
        DATABASE::Customer:
          EMailUserRule.TESTFIELD(Customer);
        DATABASE::"Ship-to Address":
          EMailUserRule.TESTFIELD("Ship-to Address");
        DATABASE::"Sales Header":
          CASE Type OF
            SalesHeader."Document Type"::Quote:
              EMailUserRule.TESTFIELD("Sales Quote");
            SalesHeader."Document Type"::Order:
              EMailUserRule.TESTFIELD("Sales Order");
            SalesHeader."Document Type"::Invoice:
              EMailUserRule.TESTFIELD("Sales Invoice");
            SalesHeader."Document Type"::"Credit Memo":
              EMailUserRule.TESTFIELD("Sales Credit Memo");
            SalesHeader."Document Type"::"Blanket Order":
              EMailUserRule.TESTFIELD("Sales Blanket Order");
            SalesHeader."Document Type"::"Return Order":
              EMailUserRule.TESTFIELD("Sales Return Order");
          END;
        DATABASE::"Sales Shipment Header":
          EMailUserRule.TESTFIELD("Sales Posted Shipment");
        DATABASE::"Sales Invoice Header":
          EMailUserRule.TESTFIELD("Sales Posted Invoice");
        DATABASE::Vendor:
          EMailUserRule.TESTFIELD(Vendor);
        DATABASE::"Order Address":
          EMailUserRule.TESTFIELD("Order Address");
        DATABASE::"Purchase Header":
          CASE Type OF
            PurchHeader."Document Type"::Quote:
              EMailUserRule.TESTFIELD("Purchase Quote");
            PurchHeader."Document Type"::Order:
              EMailUserRule.TESTFIELD("Purchase Order");
            PurchHeader."Document Type"::Invoice:
              EMailUserRule.TESTFIELD("Purchase Invoice");
            PurchHeader."Document Type"::"Credit Memo":
              EMailUserRule.TESTFIELD("Purchase Credit Memo");
            PurchHeader."Document Type"::"Blanket Order":
              EMailUserRule.TESTFIELD("Purchase Blanket Order");
            PurchHeader."Document Type"::"Return Order":
              EMailUserRule.TESTFIELD("Purchase Return Order");
          END;
        DATABASE::"Purch. Rcpt. Header":
          EMailUserRule.TESTFIELD("Purchase Posted Receipt");
        DATABASE::"Purch. Inv. Header":
          EMailUserRule.TESTFIELD("Purchase Posted Invoice");
        DATABASE::"Issued Reminder Header":
          EMailUserRule.TESTFIELD("Issued Reminder");
        DATABASE::"Issued Fin. Charge Memo Header":
          EMailUserRule.TESTFIELD("Issued Fin. Charge Memo");
        DATABASE::"Bill of Lading":
          EMailUserRule.TESTFIELD("Bill of Lading");
      END;
    END;

    PROCEDURE RemoveEntriesWithSameEMail@19(VAR EMailListEntry@1240030000 : Record 14000908);
    VAR
      EMailListEntryTmp@1240030001 : TEMPORARY Record 14000908;
    BEGIN
      IF EMailListEntry.FIND('-') THEN BEGIN
        EMailListEntryTmp.DELETEALL;
        REPEAT
          EMailListEntryTmp.RESET;
          EMailListEntryTmp.SETCURRENTKEY("E-Mail");
          EMailListEntryTmp.SETRANGE("E-Mail",EMailListEntry."E-Mail");
          IF NOT EMailListEntryTmp.FIND('-') THEN BEGIN
            EMailListEntryTmp := EMailListEntry;
            EMailListEntryTmp.INSERT;
          END ELSE
            EMailListEntry.DELETE;
        UNTIL EMailListEntry.NEXT = 0;

        EMailListEntry.FIND('-');
      END;
    END;

    BEGIN
    {
      2015-06-12 TPZ92 TAKHMETO
        Mfr. Rep. Statement E-Mail, Loc. Hdlg. Statement E-Mail fields have been created
        FormatReferenceText, LookupReference, SetDefaultFromEMailRule, UpdateDefault, EMailSelected, GetColumnActive functions have been modified
      2015-08-25 TPZ143 TAKHMETO
        Sales Credit Memo E-Mail field has been created
        FormatReferenceText, LookupReference, SetDefaultFromEMailRule, UpdateDefault, EMailSelected, GetColumnActive functions have been modified
      2016-08-03 TPZ1628 TMEI
        Changed Sales Shipment E-Mail caption to ASN E-Mail
      20170824 TPZ1956 CJOSIC - Schedule International Orders for Overnight Posting (20170717)
      2018-10-31 TPZ2393 UCHOUHAN
        Added testfield for Email check.
      2019-11-08 TPZ2701 RTIWARI
        Added new field Pick Report E-Mail

      001 TPZ3185 UTK 05282021 Added new field "Packing List E-Mail".
    }
    END.
  }
}

