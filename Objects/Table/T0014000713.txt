OBJECT Table 14000713 Manifest Line
{
  OBJECT-PROPERTIES
  {
    Date=06/28/17;
    Time=12:00:00 PM;
    Version List=SE0.53.31;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TestNotClosed;
             END;

    OnModify=BEGIN
               TestNotClosed;
             END;

    OnDelete=BEGIN
               TestNotClosed;
             END;

    OnRename=BEGIN
               TestNotClosed;
             END;

    CaptionML=ENU=Manifest Line;
  }
  FIELDS
  {
    { 1   ;   ;Manifest No.        ;Code20        ;TableRelation="Manifest Header";
                                                   CaptionML=ENU=Manifest No. }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 11  ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=" ,Package,Miscellaneous Package,Bill of Lading,,,,,,,Summary,UPS Summary,FedEx Summary,LTL Summary,,,,,,,,Generic Summary";
                                                   OptionString=[ ,Package,Miscellaneous Package,Bill of Lading,,,,,,,Summary,UPS Summary,FedEx Summary,LTL Summary,,,,,,,,Generic Summary] }
    { 12  ;   ;No.                 ;Code20        ;OnLookup=BEGIN
                                                              CASE Type OF
                                                                Type::Package:
                                                                  BEGIN
                                                                    IF Package.GET("No.") THEN
                                                                      PAGE.RUNMODAL(PAGE::Package,Package)
                                                                    ELSE BEGIN
                                                                      PostedPackage.GET("No.");
                                                                      PAGE.RUNMODAL(PAGE::"Posted Package",PostedPackage);
                                                                    END;
                                                                  END;
                                                                Type::"Miscellaneous Package":
                                                                  BEGIN
                                                                    IF Package.GET("No.") THEN
                                                                      PAGE.RUNMODAL(PAGE::"Miscellaneous Package",Package)
                                                                    ELSE BEGIN
                                                                      PostedPackage.GET("No.");
                                                                      PAGE.RUNMODAL(PAGE::"Posted Miscellaneous Package",PostedPackage);
                                                                    END;
                                                                  END;
                                                                Type::"Bill of Lading":
                                                                  BEGIN
                                                                    BillOfLading.GET("No.");
                                                                    PAGE.RUNMODAL(PAGE::"Bill of Lading",BillOfLading);
                                                                  END;
                                                              END;
                                                            END;

                                                   CaptionML=ENU=No. }
    { 13  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 14  ;   ;Posted / Closed     ;Boolean       ;CaptionML=ENU=Posted / Closed;
                                                   Editable=No }
    { 15  ;   ;Packing Date        ;Date          ;CaptionML=ENU=Packing Date;
                                                   Editable=No }
    { 16  ;   ;External Tracking No.;Text30       ;CaptionML=ENU=External Tracking No.;
                                                   Editable=No }
    { 17  ;   ;Ship-to Name        ;Text50        ;CaptionML=ENU=Ship-to Name;
                                                   Editable=No }
    { 21  ;   ;Weight              ;Decimal       ;CaptionML=ENU=Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 22  ;   ;Volume              ;Decimal       ;CaptionML=ENU=Volume;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 23  ;   ;Value               ;Decimal       ;CaptionML=ENU=Value;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 24  ;   ;Shipping Cost       ;Decimal       ;CaptionML=ENU=Shipping Cost;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 25  ;   ;Shipping Charge     ;Decimal       ;CaptionML=ENU=Shipping Charge;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 26  ;   ;One                 ;Decimal       ;InitValue=1;
                                                   CaptionML=ENU=One;
                                                   DecimalPlaces=0:0;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 27  ;   ;Insured Value       ;Decimal       ;CaptionML=ENU=Insured Value;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 31  ;   ;Shipping Agent Code ;Code10        ;TableRelation="Shipping Agent".Code;
                                                   CaptionML=ENU=Shipping Agent Code;
                                                   Editable=No }
    { 32  ;   ;World Wide Service  ;Boolean       ;CaptionML=ENU=World Wide Service;
                                                   Editable=No }
    { 33  ;   ;Shipping Agent Service;Code30      ;TableRelation="E-Ship Agent Service".Code WHERE (Shipping Agent Code=FIELD(Shipping Agent Code),
                                                                                                    World Wide Service=FIELD(World Wide Service));
                                                   CaptionML=ENU=Shipping Agent Service;
                                                   Editable=No }
    { 34  ;   ;Shipping Agent Account No.;Code20  ;CaptionML=ENU=Shipping Agent Account No. }
    { 35  ;   ;Packing Station     ;Code10        ;TableRelation="Packing Station";
                                                   CaptionML=ENU=Packing Station;
                                                   Editable=No }
    { 41  ;   ;Total Packages      ;Integer       ;CaptionML=ENU=Total Packages;
                                                   Editable=No }
    { 42  ;   ;Domestic Packages   ;Integer       ;CaptionML=ENU=Domestic Packages;
                                                   Editable=No }
    { 43  ;   ;International Packages;Integer     ;CaptionML=ENU=International Packages;
                                                   Editable=No }
    { 44  ;   ;Value Below 1000 Packages;Integer  ;CaptionML=ENU=Value Below 1000 Packages;
                                                   Editable=No }
    { 45  ;   ;Value 1000 to 5000 Packages;Integer;CaptionML=ENU=Value 1000 to 5000 Packages;
                                                   Editable=No }
    { 46  ;   ;Value Above 5000 Packages;Integer  ;CaptionML=ENU=Value Above 5000 Packages;
                                                   Editable=No }
    { 47  ;   ;COD Packages        ;Integer       ;CaptionML=ENU=COD Packages;
                                                   Editable=No }
    { 48  ;   ;Next Day Packages   ;Integer       ;CaptionML=ENU=Next Day Packages;
                                                   Editable=No }
    { 49  ;   ;Second Day Packages ;Integer       ;CaptionML=ENU=Second Day Packages;
                                                   Editable=No }
    { 50  ;   ;Third Day Packages  ;Integer       ;CaptionML=ENU=Third Day Packages;
                                                   Editable=No }
    { 51  ;   ;Ship-to Address     ;Text50        ;CaptionML=ENU=Ship-to Address }
    { 52  ;   ;Ship-to ZIP Code    ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Ship-to ZIP Code }
    { 53  ;   ;Source Type         ;Integer       ;CaptionML=ENU=Source Type }
    { 54  ;   ;Source Subtype      ;Option        ;CaptionML=ENU=Source Subtype;
                                                   OptionCaptionML=ENU=0,1,2,3,4,5,6,7,8,9,10;
                                                   OptionString=0,1,2,3,4,5,6,7,8,9,10 }
    { 55  ;   ;Source ID           ;Code20        ;OnLookup=BEGIN
                                                              PackingControl.ViewSourceDocument(FALSE,'',"Source Type","Source Subtype","Source ID");
                                                            END;

                                                   CaptionML=ENU=Source ID }
    { 56  ;   ;Posted Source ID    ;Code20        ;OnLookup=BEGIN
                                                              PackingControl.ViewPostedSourceDocument("Source Type","Source Subtype","Posted Source ID");
                                                            END;

                                                   CaptionML=ENU=Posted Source ID }
    { 14000761;;UPS Book No.       ;Code10        ;CaptionML=ENU=UPS Book No. }
    { 14000762;;UPS Page No.       ;Code10        ;CaptionML=ENU=UPS Page No. }
    { 14000763;;UPS Pickup No.     ;Code20        ;CaptionML=ENU=UPS Pickup No. }
    { 14000764;;UPS Shipping Info  ;Code20        ;CaptionML=ENU=UPS Shipping Info }
    { 14000765;;UPS Pickup File No.;Integer       ;CaptionML=ENU=UPS Pickup File No. }
    { 14000766;;UPS Manifest File No.;Integer     ;CaptionML=ENU=UPS Manifest File No. }
    { 14000767;;UPS Manifest Filename;Text250     ;CaptionML=ENU=UPS Manifest Filename }
    { 14000768;;Total Shipments    ;Integer       ;CaptionML=ENU=Total Shipments;
                                                   Editable=No }
    { 14000769;;UPS Shipment No.   ;Code35        ;CaptionML=ENU=UPS Shipment No. }
    { 14000781;;FedEx Manifest File No.;Integer   ;CaptionML=ENU=FedEx Manifest File No. }
    { 14050001;;Total Int. Shipments;Integer      ;CaptionML=ENU=Total Int. Shipments }
  }
  KEYS
  {
    {    ;Manifest No.,Line No.                   ;Clustered=Yes }
    {    ;Type,No.                                 }
    {    ;Manifest No.,Type,Shipping Agent Account No.,Shipping Agent Code,World Wide Service,Shipping Agent Service;
                                                   SumIndexFields=Weight,Volume,Value,Shipping Cost,Shipping Charge,One;
                                                   MaintainSQLIndex=No;
                                                   MaintainSIFTIndex=No }
    {    ;Manifest No.,Shipping Agent Account No.,Shipping Agent Code,World Wide Service,Shipping Agent Service,Ship-to Address,Ship-to ZIP Code }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ManifestHeader@1000000000 : Record 14000712;
      ManifestLine@1000000001 : Record 14000713;
      Package@1000000002 : Record 14000701;
      PostedPackage@1000000003 : Record 14000704;
      BillOfLading@1000000004 : Record 14000822;
      PackingControl@1240030000 : Record 14000717;

    PROCEDURE TestNotClosed@2();
    BEGIN
      IF ManifestHeader.GET("Manifest No.") THEN
        ManifestHeader.TESTFIELD(Posted,FALSE);
    END;

    PROCEDURE TransferFromPackage@1(CurrentPackage@1000000000 : Record 14000701);
    BEGIN
      IF CurrentPackage.Miscellaneous THEN
        Type := Type::"Miscellaneous Package"
      ELSE
        Type := Type::Package;
      "No." := CurrentPackage."No.";
      Description := CurrentPackage.Description;
      "Posted / Closed" := FALSE;
      "Packing Date" := CurrentPackage."Packing Date";
      "External Tracking No." := CurrentPackage."External Tracking No.";
      "Ship-to Name" := CurrentPackage."Ship-to Name";
      "Ship-to Address" := CurrentPackage."Ship-to Address";
      "Ship-to ZIP Code" := CurrentPackage."Ship-to ZIP Code";
      "Source Type" := CurrentPackage."Source Type";
      "Source Subtype" := CurrentPackage."Source Subtype";
      "Source ID" := CurrentPackage."Source ID";
      "Posted Source ID" := CurrentPackage."Posted Source ID";
      Weight := CurrentPackage."Calculation Weight";
      Volume := CurrentPackage."Calculation Volume";
      Value := CurrentPackage."Calculation Value";
      "Insured Value" := CurrentPackage."Calculation Insured Value";
      "Shipping Cost" := CurrentPackage."Shipping Cost";
      "Shipping Charge" := CurrentPackage."Shipping Charge";
      "Shipping Agent Code" := CurrentPackage."Shipping Agent Code";
      "World Wide Service" := CurrentPackage."World Wide Service";
      "Shipping Agent Service" := CurrentPackage."Shipping Agent Service";
      "Shipping Agent Account No." := CurrentPackage."Shipping Agent Account No.";
      "Packing Station" := CurrentPackage."Closed by Packing Station Code";

      SetCounters(
        CurrentPackage."World Wide Service",CurrentPackage."Calculation Insured Value",
        CurrentPackage."COD Amount",CurrentPackage."Delivery Days",
        CurrentPackage."UPS Canadian Service",CurrentPackage."UPS Puerto Rico Service");
    END;

    PROCEDURE TransferFromPostedPackage@4(CurrentPostedPackage@1000000000 : Record 14000704);
    BEGIN
      IF CurrentPostedPackage.Miscellaneous THEN
        Type := Type::"Miscellaneous Package"
      ELSE
        Type := Type::Package;
      "No." := CurrentPostedPackage."No.";
      Description := CurrentPostedPackage.Description;
      "Posted / Closed" := TRUE;
      "Packing Date" := CurrentPostedPackage."Packing Date";
      "External Tracking No." := CurrentPostedPackage."External Tracking No.";
      "Ship-to Name" := CurrentPostedPackage."Ship-to Name";
      "Ship-to Address" := CurrentPostedPackage."Ship-to Address";
      "Ship-to ZIP Code" := CurrentPostedPackage."Ship-to ZIP Code";
      "Source Type" := CurrentPostedPackage."Source Type";
      "Source Subtype" := CurrentPostedPackage."Source Subtype";
      "Source ID" := CurrentPostedPackage."Source ID";
      "Posted Source ID" := CurrentPostedPackage."Posted Source ID";
      Weight := CurrentPostedPackage."Calculation Weight";
      Volume := CurrentPostedPackage."Calculation Volume";
      Value := CurrentPostedPackage."Calculation Value";
      "Insured Value" := CurrentPostedPackage."Calculation Insured Value";
      "Shipping Cost" := CurrentPostedPackage."Shipping Cost";
      "Shipping Charge" := CurrentPostedPackage."Shipping Charge";
      "Shipping Agent Code" := CurrentPostedPackage."Shipping Agent Code";
      "World Wide Service" := CurrentPostedPackage."World Wide Service";
      "Shipping Agent Service" := CurrentPostedPackage."Shipping Agent Service";
      "Shipping Agent Account No." := CurrentPostedPackage."Shipping Agent Account No.";
      "Packing Station" := CurrentPostedPackage."Closed by Packing Station Code";

      SetCounters(
        CurrentPostedPackage."World Wide Service",CurrentPostedPackage."Calculation Insured Value",
        CurrentPostedPackage."COD Amount",CurrentPostedPackage."Delivery Days",
        CurrentPostedPackage."UPS Canadian Service",CurrentPostedPackage."UPS Puerto Rico Service");
    END;

    PROCEDURE TransferFromBillOfLading@7(CurrentBillOfLading@1000000000 : Record 14000822);
    BEGIN
      Type := Type::"Bill of Lading";
      "No." := CurrentBillOfLading."No.";
      Description := CurrentBillOfLading.Description;
      "Posted / Closed" := BillOfLading.Released;
      "Packing Date" := CurrentBillOfLading."Packing Date";
      "External Tracking No." := CurrentBillOfLading."External Tracking No.";
      "Ship-to Name" := CurrentBillOfLading."Ship-to Name";
      Weight := CurrentBillOfLading."Calculation Weight";
      Volume := CurrentBillOfLading."Calculation Volume";
      Value := CurrentBillOfLading."Calculation Value";
      "Insured Value" := CurrentBillOfLading."Calculation Insured Value";
      "Shipping Cost" := CurrentBillOfLading."Shipping Cost";
      "Shipping Charge" := CurrentBillOfLading."Shipping Charge";
      "Shipping Agent Code" := CurrentBillOfLading."Shipping Agent Code";
      "World Wide Service" := CurrentBillOfLading."World Wide Service";
      "Shipping Agent Service" := CurrentBillOfLading."Shipping Agent Service";
      "Shipping Agent Account No." := CurrentBillOfLading."Shipping Agent Account No.";
      "Packing Station" := '';
      "Source Type" := 0;
      "Source Subtype" := 0;
      "Source ID" := '';
      "Posted Source ID" := '';

      SetCounters(
        CurrentBillOfLading."World Wide Service",CurrentBillOfLading."Calculation Insured Value",
        0,CurrentBillOfLading."Delivery Days",FALSE,FALSE);
    END;

    LOCAL PROCEDURE SetCounters@3(WorldWideService@1240030000 : Boolean;Value@1240030001 : Decimal;CODAmount@1240030002 : Decimal;DeliveryDays@1240030003 : Integer;CanadianService@1240030004 : Boolean;PuertoRicoService@1240030005 : Boolean);
    BEGIN
      "Total Packages" := 1;
      IF WorldWideService OR CanadianService OR PuertoRicoService THEN BEGIN
        "Domestic Packages" := 0;
        "International Packages" := 1;
      END ELSE BEGIN
        "Domestic Packages" := 1;
        "International Packages" := 0;
      END;

      "Value Below 1000 Packages" := 0;
      "Value 1000 to 5000 Packages" := 0;
      "Value Above 5000 Packages" := 0;
      CASE TRUE OF
        Value < 1000:
          "Value Below 1000 Packages" := 1;
        (Value >= 1000) AND (Value < 5000):
          "Value 1000 to 5000 Packages" := 1;
        ELSE
          "Value Above 5000 Packages" := 1;
      END;

      IF CODAmount <> 0 THEN
        "COD Packages" := 1
      ELSE
        "COD Packages" := 0;

      "Next Day Packages" := 0;
      "Second Day Packages" := 0;
      "Third Day Packages" := 0;
      CASE DeliveryDays OF
        1:
          "Next Day Packages" := 1;
        2:
          "Second Day Packages" := 1;
        3:
          "Third Day Packages" := 1;
      END;
    END;

    PROCEDURE SummarizeAccount@5(ShippingAgentAccountNo@1000000000 : Code[10]);
    BEGIN
      Weight := 0;
      Volume := 0;
      Value := 0;
      "Shipping Cost" := 0;
      "Shipping Charge" := 0;

      "Total Packages" := 0;
      "Domestic Packages" := 0;
      "International Packages" := 0;
      "Value Below 1000 Packages" := 0;
      "Value 1000 to 5000 Packages" := 0;
      "Value Above 5000 Packages" := 0;
      "COD Packages" := 0;
      "Next Day Packages" := 0;
      "Second Day Packages" := 0;
      "Third Day Packages" := 0;

      ManifestLine.RESET;
      ManifestLine.SETCURRENTKEY("Manifest No.",Type,"Shipping Agent Account No.");
      ManifestLine.SETRANGE("Manifest No.","Manifest No.");
      ManifestLine.SETRANGE(Type,ManifestLine.Type::Summary);
      ManifestLine.SETRANGE(
        "Shipping Agent Account No.",ShippingAgentAccountNo);
      IF ManifestLine.FIND('-') THEN
        REPEAT
          Weight := Weight + ManifestLine.Weight;
          Volume := Volume + ManifestLine.Volume;
          Value := Value + ManifestLine.Value;
          "Shipping Cost" := "Shipping Cost" + ManifestLine."Shipping Cost";
          "Shipping Charge" := "Shipping Charge" + ManifestLine."Shipping Charge";

          "Total Packages" := "Total Packages" + ManifestLine."Total Packages";
          "Domestic Packages" := "Domestic Packages" + ManifestLine."Domestic Packages";
          "International Packages" := "International Packages" + ManifestLine."International Packages";
          "Value Below 1000 Packages" :=
            "Value Below 1000 Packages" + ManifestLine."Value Below 1000 Packages";
          "Value 1000 to 5000 Packages" :=
            "Value 1000 to 5000 Packages" + ManifestLine."Value 1000 to 5000 Packages";
          "Value Above 5000 Packages" :=
            "Value Above 5000 Packages" + ManifestLine."Value Above 5000 Packages";
          "COD Packages" := "COD Packages" + ManifestLine."COD Packages";
          "Next Day Packages" := "Next Day Packages" + ManifestLine."Next Day Packages";
          "Second Day Packages" := "Second Day Packages" + ManifestLine."Second Day Packages";
          "Third Day Packages" := "Third Day Packages" + ManifestLine."Third Day Packages";
        UNTIL ManifestLine.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

