OBJECT Table 14000729 Carrier Packing Station
{
  OBJECT-PROPERTIES
  {
    Date=07/13/20;
    Time=12:00:00 PM;
    Version List=SE0.62;
  }
  PROPERTIES
  {
    CaptionML=ENU=Carrier Packing Station;
    LookupPageID=Page14000664;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=ENU=Code;
                                                   NotBlank=Yes }
    { 11  ;   ;Description         ;Text30        ;CaptionML=ENU=Description }
    { 20  ;   ;Hazmat Contact Name ;Text35        ;CaptionML=ENU=Hazmat Contact Name }
    { 21  ;   ;Hazmat Contact Phone No.;Text30    ;CaptionML=ENU=Hazmat Contact Phone No. }
    { 14000761;;UPS Shipping Agent Account No.;Code10;
                                                   OnValidate=BEGIN
                                                                UPSTransaction.UPSAcctValidatePackingStation(Rec);
                                                              END;

                                                   OnLookup=BEGIN
                                                              UPSTransaction.UPSAcctLookupPackingStation(Rec);
                                                            END;

                                                   CaptionML=ENU=UPS Shipping Agent Account No. }
    { 14000762;;UPS Buffer File    ;Text100       ;CaptionML=ENU=UPS Buffer File }
    { 14000763;;UPS Label Printer Port;Code100    ;CaptionML=ENU=UPS Label Printer }
    { 14000764;;UPS Manifest Upload Directory;Text200;
                                                   CaptionML=ENU=UPS Manifest Upload Directory }
    { 14000765;;UPS Label Printer Type;Option     ;CaptionML=ENU=UPS Label Printer Type;
                                                   OptionCaptionML=ENU=" ,Eltron Orion,Zebra";
                                                   OptionString=[ ,Eltron Orion,Zebra] }
    { 14000766;;UPS Eltron Label Media Type;Option;CaptionML=ENU=UPS Eltron Label Media Type;
                                                   OptionCaptionML=ENU=" ,4X6 with Doc Tab,4X6 W/O Doc Tab,4X4";
                                                   OptionString=[ ,4X6 with Doc Tab,4X6 W/O Doc Tab,4X4] }
    { 14000767;;UPS Print From     ;Option        ;CaptionML=ENU=UPS Print From;
                                                   OptionCaptionML=ENU=Bottom,Top;
                                                   OptionString=Bottom,Top }
    { 14000768;;UPS Add Item Info. on Label;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "UPS Add Item Info. on Label" THEN BEGIN
                                                                  TESTFIELD("UPS Eltron Label Media Type","UPS Eltron Label Media Type"::"4X6 with Doc Tab");
                                                                  TESTFIELD("UPS Label Printer Type","UPS Label Printer Type"::"Eltron Orion");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=UPS Add Item Info. on Label }
    { 14000769;;UPS Haz. Mat. Emergency No.;Text30;CaptionML=ENU=UPS Haz. Mat. Emergency No. }
    { 14000770;;UPS Haz. Mat. Emerg. Contact;Text35;
                                                   CaptionML=ENU=UPS Haz. Mat. Emerg. Contact }
    { 14000771;;UPSlink Printer Model;Code13      ;CaptionML=ENU=UPSlink Printer Model }
    { 14000772;;UPS WS Save XML    ;Boolean       ;CaptionML=ENU=UPS WS Save XML }
    { 14000773;;UPS WS CN22 Form Type;Option      ;CaptionML=ENU=UPS WS CN22 Form Type;
                                                   OptionCaptionML=ENU=PDF,Label;
                                                   OptionString=PDF,Label }
    { 14000781;;FedEx Freight BOL Type;Option     ;CaptionML=ENU=FedEx Freight BOL Type;
                                                   OptionCaptionML=ENU=Fedex Freight Straight Bill of Lading, VICS Bill of Lading;
                                                   OptionString=Fedex Freight Straight Bill of Lading, VICS Bill of Lading }
    { 14000782;;FedEx Freight BOL Line Type;Option;CaptionML=ENU=FedEx Freight BOL Line Type;
                                                   OptionCaptionML=ENU=Item,Freight Class,BOL Info. Lines;
                                                   OptionString=Item,Freight Class,BOL Info. Lines }
    { 14000784;;FedEx Buffer Directory;Text200    ;CaptionML=ENU=FedEx Buffer Directory }
    { 14000785;;FedEx Global Registration No.;Code40;
                                                   TableRelation="FedEx Global Registration"."Transaction ID";
                                                   CaptionML=ENU=FedEx Global Registration No. }
    { 14000786;;FedEx Label Printer Type;Option   ;CaptionML=ENU=FedEx Label Printer Type;
                                                   OptionCaptionML=ENU=" ,,Eltron (EPL),,Zebra (ZPL)";
                                                   OptionString=[ ,,Eltron (EPL),,Zebra (ZPL)] }
    { 14000787;;FedEx Label Media Type;Option     ;CaptionML=ENU=FedEx Label Media Type;
                                                   OptionCaptionML=ENU=" ,4X6 with Trailing Doc Tab,4X6 W/O Doc Tab,4X6 with Leading Doc Tab";
                                                   OptionString=[ ,4X6 with Trailing Doc Tab,4X6 W/O Doc Tab,4X6 with Leading Doc Tab] }
    { 14000788;;Proxy Address      ;Code15        ;InitValue=127.0.0.1;
                                                   CaptionML=ENU=Proxy Address }
    { 14000789;;Proxy Port         ;Code10        ;InitValue=8190;
                                                   CaptionML=ENU=Proxy Port }
    { 14000790;;FedEx Label Printer Port;Code100  ;CaptionML=ENU=FedEx Label Printer }
    { 14000791;;FedEx Label Buffer File;Text100   ;CaptionML=ENU=FedEx Label Buffer File }
    { 14000792;;FedEx Shipping Agent Acc. No.;Code10;
                                                   TableRelation="FedEx Shipping Agent Account";
                                                   CaptionML=ENU=FedEx Shipping Agent Acc. No. }
    { 14000793;;FedEx Print From   ;Option        ;CaptionML=ENU=FedEx Print From;
                                                   OptionCaptionML=ENU=Top,Bottom;
                                                   OptionString=Top,Bottom }
    { 14000794;;FedEx Add Item Info. on Label;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "FedEx Add Item Info. on Label" THEN BEGIN
                                                                  TESTFIELD("FedEx Label Media Type","FedEx Label Media Type"::"4X6 with Trailing Doc Tab");
                                                                  TESTFIELD("FedEx Label Printer Type","FedEx Label Printer Type"::"Eltron (EPL)");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=FedEx Add Item Info. on Label }
    { 14000795;;FedEx Label Template Directory;Text200;
                                                   CaptionML=ENU=FedEx Label Template Directory }
    { 14000796;;FedEx Save RateShop Buffers;Boolean;
                                                   CaptionML=ENU=FedEx Save RateShop Buffers }
    { 14000797;;Auto Distr. FX Freight Charge;Boolean;
                                                   CaptionML=ENU=Auto Distr. FX Freight Charge }
    { 14000798;;Default FedEx Freight Service;Code50;
                                                   TableRelation="E-Ship Agent Service".Code WHERE (Service Indicator=FILTER(FEF*));
                                                   CaptionML=ENU=Default FedEx Freight Service }
    { 14000799;;Do Not Display BOL Delete Msg;Boolean;
                                                   CaptionML=ENU=Do Not Display BOL Delete Msg }
    { 14000800;;FedEx Reduce Label Density;Boolean;CaptionML=ENU=FedEx Reduce Label Density }
    { 14000861;;Generic Shipping Agent Acc. No;Code10;
                                                   TableRelation="Generic Shipping Agent Account";
                                                   CaptionML=ENU=Generic Shipping Agent Acc. No }
    { 14000862;;Generic Label Printer Port;Code100;CaptionML=ENU=Generic Label Printer }
    { 14000863;;Generic Label Buffer File;Text100 ;CaptionML=ENU=Generic Label Buffer File }
    { 14000881;;USPS Shipping Agent Acc. No;Code10;TableRelation="USPS Shipping Agent Account";
                                                   CaptionML=ENU=USPS Shipping Agent Acc. No }
    { 14000882;;USPS Label Printer Port;Code10    ;CaptionML=ENU=USPS Label Printer Port }
    { 14000883;;USPS Label Buffer File;Text100    ;CaptionML=ENU=USPS Label Buffer File }
    { 14000941;;Airborne Shipping Agent Acc No;Code10;
                                                   CaptionML=ENU=Airborne Shipping Agent Acc No }
    { 14000942;;Airborne Label Printer Port;Code10;CaptionML=ENU=Airborne Label Printer Port }
    { 14000943;;Airborne Label Buffer File;Text100;CaptionML=ENU=Airborne Label Buffer File }
    { 14000944;;Airborne Label Printer Type;Option;CaptionML=ENU=Airborne Label Printer Type;
                                                   OptionCaptionML=ENU=" ,Eltron Orion,Zebra";
                                                   OptionString=[ ,Eltron Orion,Zebra] }
    { 14000945;;Airborne Eltron Label Media;Option;CaptionML=ENU=Airborne Eltron Label Media;
                                                   OptionCaptionML=ENU=" ,4X6 with Doc Tab,4X6 W/O Doc Tab";
                                                   OptionString=[ ,4X6 with Doc Tab,4X6 W/O Doc Tab] }
    { 14000946;;Airborne Print From;Option        ;CaptionML=ENU=Airborne Print From;
                                                   OptionCaptionML=ENU=Bottom,Top;
                                                   OptionString=Bottom,Top }
    { 14000947;;Airborne Manifest Upload Dir.;Text200;
                                                   CaptionML=ENU=Airborne Manifest Upload Dir. }
    { 14000948;;Airborne Add Item Info on Labl;Boolean;
                                                   CaptionML=ENU=Airborne Add Item Info on Labl }
    { 14000949;;Airborne Gen.Commodity Rates;Boolean;
                                                   CaptionML=ENU=Airborne Gen.Commodity Rates }
    { 14050001;;UPSlink Temp. Files Directory;Text200;
                                                   CaptionML=ENU=UPSlink Temp. Files Directory }
    { 14050003;;CASS Validated Address;Boolean    ;CaptionML=ENU=CASS Validated Address }
    { 14050401;;DHL Shipping Agent Acc. No;Code10 ;CaptionML=ENU=DHL Shipping Agent Acc. No }
    { 14050402;;DHL Label Printer Port;Code10     ;CaptionML=ENU=DHL Label Printer Port }
    { 14050403;;DHL Label Buffer File;Text100     ;CaptionML=ENU=DHL Label Buffer File }
    { 14050404;;DHL Label Printer Type;Option     ;CaptionML=ENU=DHL Label Printer Type;
                                                   OptionCaptionML=ENU=" ,,EPL,,ZPL";
                                                   OptionString=[ ,,EPL,,ZPL] }
    { 14050405;;DHL Label Media    ;Option        ;CaptionML=ENU=DHL Label Media;
                                                   OptionCaptionML=ENU=" ,4X6 with Doc Tab,4X6 W/O Doc Tab";
                                                   OptionString=[ ,4X6 with Doc Tab,4X6 W/O Doc Tab] }
    { 14050406;;DHL Print From     ;Option        ;CaptionML=ENU=DHL Print From;
                                                   OptionCaptionML=ENU=Bottom,Top;
                                                   OptionString=Bottom,Top }
    { 14050407;;DHL Print Label Logo;Boolean      ;CaptionML=ENU=DHL Print Label Logo }
    { 14050408;;DHL Save XML to File;Boolean      ;CaptionML=ENU=DHL Save XML to File }
    { 14050409;;DHL Save XML File Path;Text250    ;CaptionML=ENU=DHL Save XML File Path }
    { 14050410;;DHL Add Item Info on Labl;Boolean ;OnValidate=BEGIN
                                                                IF "DHL Add Item Info on Labl" THEN BEGIN
                                                                  TESTFIELD("DHL Label Media","DHL Label Media"::"4X6 with Doc Tab");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=DHL Add Item Info on Labl }
    { 14050451;;Rating Shipping Agent Acc. No;Code10;
                                                   TableRelation="Generic Shipping Agent Account";
                                                   CaptionML=ENU=Rating Shipping Agent Acc. No }
    { 14050452;;Rating Label Printer Port;Code10  ;CaptionML=ENU=Rating Label Printer Port }
    { 14050453;;Rating Label Buffer File;Text200  ;CaptionML=ENU=Rating Label Buffer File }
    { 14050501;;USPostal Shipping Agent Acc No;Code20;
                                                   TableRelation="USPostal Shipping Agent Acct.";
                                                   CaptionML=ENU=USPostal Shipping Agent Acc No }
    { 14050502;;USPostal Label Printer Port;Code100;
                                                   CaptionML=ENU=USPostal Label Printer }
    { 14050503;;USPostal Label Buffer File;Text200;CaptionML=ENU=USPostal Label Buffer File }
    { 14050504;;USPostal Label Printer Type;Option;CaptionML=ENU=USPostal Label Printer Type;
                                                   OptionCaptionML=ENU=" ,,EPL,,ZPL";
                                                   OptionString=[ ,,EPL,,ZPL] }
    { 14050505;;USPostal Label Media;Option       ;CaptionML=ENU=USPostal Label Media;
                                                   OptionCaptionML=ENU=" ,4X6 with Doc Tab,4X6 W/O Doc Tab";
                                                   OptionString=[ ,4X6 with Doc Tab,4X6 W/O Doc Tab] }
    { 14050506;;USPostal Print From;Option        ;CaptionML=ENU=USPostal Print From;
                                                   OptionCaptionML=ENU=Bottom,Top;
                                                   OptionString=Bottom,Top }
    { 14050507;;USPostal Save XML to File;Boolean ;CaptionML=ENU=USPostal Save XML to File }
    { 14050508;;USPostal Save XML File Path;Text250;
                                                   CaptionML=ENU=USPostal Save XML File Path }
    { 14050509;;USPostal Add Item Info on Labl;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "USPostal Add Item Info on Labl" THEN BEGIN
                                                                  TESTFIELD("USPostal Label Media","USPostal Label Media"::"4X6 with Doc Tab");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=USPostal Add Item Info on Labl }
    { 14050510;;USPostal Label Printer Name;Text250;
                                                   CaptionML=ENU=USPostal Label Printer Name }
    { 14050511;;USPostal Customs Forms Format;Option;
                                                   CaptionML=ENU=USPostal Customs Forms Format;
                                                   OptionCaptionML=ENU=PDF,Label;
                                                   OptionString=PDF,Label }
    { 14050601;;World Ease Label Printer Port;Code100;
                                                   CaptionML=ENU=World Ease Label Printer Port }
    { 14050602;;World Ease Label Printer Type;Option;
                                                   CaptionML=ENU=World Ease Label Printer Type;
                                                   OptionCaptionML=ENU=" ,Eltron Orion,Zebra";
                                                   OptionString=[ ,Eltron Orion,Zebra] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      UPSTransaction@1240030005 : Codeunit 14000764;
      Text001@1240020001 : TextConst 'ENU=Make sure the %1 Label Buffer File exists and Users have FULL permissions on the NAV Server  - %2.';
      Text002@1240020002 : TextConst 'ENU=UPS,FedEx,USPostal';
      Text003@1240020000 : TextConst 'ENU=Label printer for %1 cannot be %2 when %3 %4 is set to %5.';
      Text005@1240020004 : TextConst 'ENU=The Label Buffer File field needs to contain a filename. \\Example: %1';
      Text006@1240020005 : TextConst 'ENU="""%1"" must be UNchecked on Packing Station, %2."';
      Text007@1240020006 : TextConst 'ENU="The ""%1"" set up in %2 %3 does not exist: %4 \\Either create the directory with FULL permissions or fix the directory on %5. "';
      Text008@1240020007 : TextConst 'ENU=this computer';
      Text009@1240020008 : TextConst 'ENU=the NAV Server';
      Text010@1240020003 : TextConst 'ENU=You are assigned to Packing Station %1. Do you want to continue to test using this Packing Station?';

    PROCEDURE GetPackingStation@2(PackingStation@1240030001 : Record 14000709);
    BEGIN
      IF Code <> '' THEN
        EXIT;

      PackingStation.TESTFIELD("Carrier Packing Station Code");
      GET(PackingStation."Carrier Packing Station Code");
    END;

    PROCEDURE TestPrintLabel@1240020000();
    VAR
      PackingStation@1240020007 : Record 14000709;
      PackingStation2@1240020014 : Record 14000709;
      CarrierPackingStation@1240020020 : Record 14000729;
      CarrierLabelMgmt@1240020004 : Codeunit 14000712;
      UPSlinkMgmt@1240020023 : Codeunit 14050002;
      NAVFileMgmt@1240020017 : Codeunit 419;
      LabelFile@1240020002 : File;
      NVInStream@1240020070 : InStream;
      FileSystemObject@1240020071 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      Selection@1240020011 : Integer;
      LabelWidth@1240020005 : Integer;
      LabelHeight@1240020006 : Integer;
      LabelMediaType@1240020009 : ' ,4X6 with Doc Tab,4X6 W/O Doc Tab';
      LabelPrintDirection@1240020010 : 'Bottom,Top';
      LabelFileName@1240020003 : Text[100];
      PrinterType@1240020001 : Text[30];
      LabelPrinter@1240020008 : Text[100];
      Carrier@1240020000 : Text[30];
      Maxicodefile1@1240020012 : Text[100];
      Maxicodefile2@1240020013 : Text[100];
      PackingStations@1240020016 : Text[1024];
      UsersPackingStation@1240020019 : Text[30];
      LabelFilenameField@1240020024 : Text[1024];
      ExampleLabelFilename@1240020015 : Text[1024];
    BEGIN
      PackingStation.GetPackingStation;
      GetPackingStation(PackingStation);

      IF NOT CONFIRM(STRSUBSTNO(Text010,PackingStation.Code)) THEN
        EXIT;

      PackingStation.TESTFIELD("Carrier Packing Station Code");
      PackingStation.TESTFIELD("Carrier Packing Station Code",Code);

      PackingStations := PackingStation.Code;
      PackingStation2.RESET;
      PackingStation2.SETRANGE("Carrier Packing Station Code",Code);
      PackingStation2.SETFILTER(Code,'<>%1',PackingStation.Code);
      IF PackingStation2.FIND('-') THEN BEGIN
        REPEAT
          PackingStations += ','+ PackingStation2.Code;
        UNTIL PackingStation2.NEXT = 0;
      END;

      IF PackingStation."No Label Printer" THEN
        ERROR(Text006,
          PackingStation.FIELDCAPTION("No Label Printer"),PackingStation.Code);

      Selection := STRMENU(Text002);

      CASE Selection OF
        1:
          BEGIN
            TESTFIELD("UPS Label Printer Type");
            TESTFIELD("UPS Buffer File");
            TESTFIELD("UPS Label Printer Port");
            TESTFIELD("UPSlink Printer Model");
            TESTFIELD("UPSlink Temp. Files Directory");
            TESTFIELD("UPS Manifest Upload Directory");
            LabelPrinter := "UPS Label Printer Port";
            LabelFileName := "UPS Buffer File";
            LabelFilenameField := FIELDCAPTION("UPS Buffer File");
            LabelMediaType := "UPS Eltron Label Media Type";
            LabelPrintDirection := "UPS Print From";
            Carrier := 'UPS';

            IF "UPS Label Printer Type" = "UPS Label Printer Type"::"Eltron Orion" THEN
              PrinterType := 'ELTRON'
            ELSE IF "UPS Label Printer Type" = "UPS Label Printer Type"::Zebra THEN
              PrinterType := 'ZEBRA';

            TestDirectory("UPSlink Temp. Files Directory",FALSE,FALSE,
              TABLENAME,Code,FIELDCAPTION("UPSlink Temp. Files Directory"));
            TestDirectory("UPSlink Temp. Files Directory",FALSE,TRUE,
              TABLENAME,Code,FIELDCAPTION("UPSlink Temp. Files Directory"));

            TestDirectory("UPS Manifest Upload Directory",FALSE,FALSE,
              TABLENAME,Code,FIELDCAPTION("UPS Manifest Upload Directory"));
            TestDirectory("UPS Manifest Upload Directory",FALSE,TRUE,
              TABLENAME,Code,FIELDCAPTION("UPS Manifest Upload Directory"));

            IF COPYSTR(
              "UPSlink Temp. Files Directory",
                STRLEN("UPSlink Temp. Files Directory"),1) <> '\'
            THEN
              "UPSlink Temp. Files Directory" :=
                "UPSlink Temp. Files Directory" + '\';

            Maxicodefile1 := "UPSlink Temp. Files Directory" + 'ETBL.BIN';
            Maxicodefile2 :=  "UPSlink Temp. Files Directory" + 'POSTAL.DAT';

            IF NOT (NAVFileMgmt.ClientFileExists(Maxicodefile1)) OR
              NOT (NAVFileMgmt.ClientFileExists(Maxicodefile2)) THEN
                UPSlinkMgmt.CreateUPSlinkWorkFIles;
          END;
        2:
          BEGIN
            TESTFIELD("FedEx Label Printer Type");
            TESTFIELD("FedEx Buffer Directory");
            TESTFIELD("FedEx Label Printer Port");
            TESTFIELD("FedEx Label Buffer File");
            LabelPrinter := "FedEx Label Printer Port";
            LabelFileName := "FedEx Label Buffer File";
            LabelFilenameField := FIELDCAPTION("FedEx Label Buffer File");
            LabelMediaType := "FedEx Label Media Type";
            LabelPrintDirection := "FedEx Print From";
            Carrier := 'FedEx';

            IF "FedEx Label Printer Type" = "FedEx Label Printer Type"::"Eltron (EPL)" THEN
              PrinterType := 'ELTRON'
            ELSE IF "FedEx Label Printer Type" = "FedEx Label Printer Type"::"Zebra (ZPL)" THEN
              PrinterType := 'ZEBRA';

            TestDirectory("FedEx Buffer Directory",FALSE,FALSE,
              TABLENAME,Code,FIELDCAPTION("FedEx Buffer Directory"));
            TestDirectory("FedEx Buffer Directory",FALSE,TRUE,
              TABLENAME,Code,FIELDCAPTION("FedEx Buffer Directory"));
          END;
        3:
          BEGIN
            TESTFIELD("USPostal Label Printer Type");
            TESTFIELD("USPostal Label Buffer File");
            TESTFIELD("USPostal Label Printer Port");
            TESTFIELD("USPostal Save XML File Path");
            LabelPrinter := "USPostal Label Printer Port";
            LabelFileName := "USPostal Label Buffer File";
            LabelFilenameField := FIELDCAPTION("USPostal Label Buffer File");
            LabelMediaType := "USPostal Label Media";
            LabelPrintDirection := "USPostal Print From";
            Carrier := 'USPostal';

            IF "USPostal Label Printer Type" = "USPostal Label Printer Type"::EPL THEN
              PrinterType := 'ELTRON'
            ELSE IF "USPostal Label Printer Type" = "USPostal Label Printer Type"::ZPL THEN
              PrinterType := 'ZEBRA';

            TestDirectory("USPostal Save XML File Path",FALSE,FALSE,
              TABLENAME,Code,FIELDCAPTION("USPostal Save XML File Path"));
            TestDirectory("USPostal Save XML File Path",FALSE,TRUE,
              TABLENAME,Code,FIELDCAPTION("USPostal Save XML File Path"));
          END;
        ELSE
          EXIT;
      END;

      IF PackingStation."Label Printing" = PackingStation."Label Printing"::"Printer Name" THEN
        IF STRPOS(UPPERCASE(LabelPrinter), 'LPT') > 0 THEN
          ERROR(Text003,
            Carrier, LabelPrinter,
            PackingStation.Code, PackingStation.FIELDCAPTION("Label Printing"),
            PackingStation."Label Printing");

      IF PackingStation."Label Printing" = PackingStation."Label Printing"::Ports THEN
        IF STRPOS(UPPERCASE(LabelPrinter), 'LPT') = 0 THEN
          ERROR(Text003,
            Carrier, LabelPrinter,
            PackingStation.Code, PackingStation.FIELDCAPTION("Label Printing"),
            PackingStation."Label Printing");

      ExampleLabelFilename := 'C:\Lanham\Shipping\buffer.txt';
      IF COPYSTR(LabelFileName,STRLEN(LabelFileName)-3,4) <> '.txt' THEN
        ERROR(Text005,ExampleLabelFilename);

      IF ISSERVICETIER THEN
        TestDirectory(LabelFileName,TRUE,FALSE,TABLENAME,Code,LabelFilenameField);
      TestDirectory(LabelFileName,TRUE,TRUE,TABLENAME,Code,LabelFilenameField);

      IF NOT LabelFile.CREATE(LabelFileName) THEN
        ERROR(Text001,Carrier,LabelFileName);
      LabelFile.TEXTMODE(TRUE);

      IF PrinterType = 'ELTRON' THEN
        CarrierLabelMgmt.WriteLabelHeader(
          LabelFile,2,LabelMediaType,LabelPrintDirection,LabelWidth,LabelHeight)
      ELSE IF PrinterType = 'ZEBRA' THEN
        CarrierLabelMgmt.WriteLabelHeader(
          LabelFile,4,LabelMediaType,LabelPrintDirection,LabelWidth,LabelHeight);

      CarrierLabelMgmt.WriteLabelText2(LabelFile,20,100,10,0,1,1,2,FALSE,FALSE,
        'Carrier: ' + Carrier);
      CarrierLabelMgmt.WriteLabelText2(LabelFile,20,150,10,0,1,1,2,FALSE,FALSE,
        'Carrier Packing Station: ' + Code);
      CarrierLabelMgmt.WriteLabelText2(LabelFile,20,200,10,0,1,1,2,FALSE,FALSE,
        'Carrier Packing Station Assigned to Packing Stations: ');
      CarrierLabelMgmt.WriteLabelText2(LabelFile,50,250,10,0,1,1,2,FALSE,FALSE,
        PackingStations);
      CarrierLabelMgmt.WriteLabelText2(LabelFile,20,300,10,0,1,1,2,FALSE,FALSE,
        'User: ' + USERID);
      CarrierLabelMgmt.WriteLabelText2(LabelFile,20,350,10,0,1,1,2,FALSE,FALSE,
        'Users Packing Station: ' + PackingStation.Code);
      CarrierLabelMgmt.WriteLabelText2(LabelFile,20,400,10,0,1,1,2,FALSE,FALSE,
        'Label Printer Type: ' + PrinterType);
      CarrierLabelMgmt.WriteLabelText2(LabelFile,20,450,10,0,1,1,2,
        FALSE,FALSE,'Label Printer: ' + LabelPrinter);
      CarrierLabelMgmt.WriteLabelText2(LabelFile,20,500,10,0,1,1,2,FALSE,FALSE,
        'Label Media Type: ' + FORMAT(LabelMediaType));
      CarrierLabelMgmt.WriteLabelText2(LabelFile,20,550,10,0,1,1,2,FALSE,FALSE,
        'Label Print Direction: ' + FORMAT(LabelPrintDirection));
      IF Carrier = 'UPS' THEN
        CarrierLabelMgmt.WriteLabelText2(LabelFile,20,600,10,0,1,1,2,FALSE,FALSE,
          'Label Printer Model: ' + "UPSlink Printer Model");
      CarrierLabelMgmt.WriteLabelFooter(LabelFile);

      LabelFile.CLOSE;

      PackingStation.PrintLabelFile(
        LabelFileName,LabelPrinter,
        PackingStation."No Label Printer",FALSE);
    END;

    PROCEDURE TestDirectory@1240020001(Pathname@1240020002 : Text[1024];IsFile@1240020000 : Boolean;TestOnClient@1240020001 : Boolean;TableName@1240020003 : Text[100];TableValue@1240020004 : Text[100];FieldName@1240020005 : Text[100]) : Boolean;
    VAR
      FileSystemObject@1240020008 : Automation "{420B2830-E718-11CF-893D-00A0C9054228} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Microsoft Scripting Runtime'.FileSystemObject";
      FileSystemObjectSvr@1240020010 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Directory";
      TestFile@1240020007 : File;
      Where@1240020006 : Text[20];
      ParentDirectory@1240020011 : Text[1024];
    BEGIN
      CLEAR(FileSystemObject);

      IF TestOnClient THEN
        Where := Text008
      ELSE
        Where := Text009;

      IF IsFile THEN BEGIN
        CREATE(FileSystemObject,TRUE,TRUE);
        ParentDirectory := FileSystemObject.GetParentFolderName(Pathname);
        CLEAR(FileSystemObject);
      END;

      IF TestOnClient THEN BEGIN
        IF CREATE(FileSystemObject,TRUE,TestOnClient) THEN BEGIN
          IF NOT(IsFile) THEN BEGIN
            IF NOT(FileSystemObject.FolderExists(Pathname)) THEN
              ERROR(Text007,FieldName,TableName,TableValue,Pathname,Where);
          END ELSE BEGIN
            IF NOT(FileSystemObject.FolderExists(FileSystemObject.GetParentFolderName(Pathname))) THEN
              ERROR(Text007,FieldName,TableName,TableValue,Pathname,Where);
          END;
        END ELSE
          ERROR('%1 - %2', GETLASTERRORCODE,GETLASTERRORTEXT);
      END ELSE BEGIN
        IF NOT(IsFile) THEN BEGIN
          IF NOT(FileSystemObjectSvr.Exists(Pathname)) THEN
            ERROR(Text007,FieldName,TableName,TableValue,Pathname,Where);
        END ELSE
          IF NOT(FileSystemObjectSvr.Exists(ParentDirectory)) THEN
            ERROR(Text007,FieldName,TableName,TableValue,Pathname,Where);
      END;

      EXIT(TRUE);
    END;

    BEGIN
    END.
  }
}

