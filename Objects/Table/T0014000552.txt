OBJECT Table 14000552 Forecast Inventory Period
{
  OBJECT-PROPERTIES
  {
    Date=04/30/15;
    Time=12:00:00 PM;
    Version List=UBP2.94;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "Starting Date" = 0D THEN
                 ERROR(Text001);
               IF "Ending Date" = 0D THEN
                 ERROR(Text001);
               IF "Starting Date" = "Ending Date" THEN
                 ERROR(Text002);
               IF "Starting Date" > "Ending Date" THEN
                 ERROR(Text003);
               InvPeriod.RESET;
               InvPeriod.SETRANGE("Starting Date",0D,"Ending Date");
               IF InvPeriod.FIND('-') THEN
                 REPEAT
                   IF ((InvPeriod."Starting Date" >= "Starting Date") AND
                       (InvPeriod."Starting Date" <= "Ending Date")) OR
                      ((InvPeriod."Ending Date" >= "Starting Date") AND
                       (InvPeriod."Ending Date" <= "Ending Date"))
                   THEN
                     ERROR(Text004);
                 UNTIL InvPeriod.NEXT = 0;
               IF Type = Type::" " THEN
                 InventoryMgt.CreateLocationInventoryPeriods(Rec,FALSE,'');
             END;

    OnDelete=BEGIN
               IF Type = Type::" " THEN BEGIN
                 LocInvPeriod.RESET;
                 LocInvPeriod.SETRANGE("Starting Date","Starting Date");
                 IF LocInvPeriod.FIND('-') THEN
                   ERROR(Text005);
               END;
             END;

    OnRename=BEGIN
               ERROR(Text006);
             END;

    CaptionML=ENU=Forecast Inventory Period;
    LookupPageID=Page14000553;
  }
  FIELDS
  {
    { 1   ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                IF "Starting Date" = 0D THEN
                                                                  ERROR(Text000);
                                                              END;

                                                   CaptionML=ENU=Starting Date }
    { 2   ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=" ,Calculate";
                                                   OptionString=[ ,Calculate] }
    { 11  ;   ;Ending Date         ;Date          ;OnValidate=BEGIN
                                                                IF "Ending Date" = 0D THEN
                                                                  ERROR(Text000);
                                                              END;

                                                   CaptionML=ENU=Ending Date }
  }
  KEYS
  {
    {    ;Type,Starting Date                      ;Clustered=Yes }
    {    ;Ending Date                              }
    {    ;Starting Date,Type                       }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      InvPeriod@14000500 : Record 14000552;
      LocInvPeriod@14000501 : Record 14000553;
      InventoryMgt@14000502 : Codeunit 14000553;
      Text000@1240030000 : TextConst 'ENU=You must enter a date.';
      Text001@1001 : TextConst 'ENU=You must specify a starting date.';
      Text002@1002 : TextConst 'ENU=The starting date and the ending date cannot be the same.';
      Text003@1003 : TextConst 'ENU=The ending date cannot be earlier than the starting date.';
      Text004@1004 : TextConst 'ENU=There are overlapping inventory periods.';
      Text005@1005 : TextConst 'ENU=You must delete the Location Inventory Period before you delete the Inventory Period.';
      Text006@1006 : TextConst 'ENU=You cannot change the date fields in this record.';

    BEGIN
    END.
  }
}

