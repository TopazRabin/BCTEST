OBJECT Table 14002602 Forecast Customer Item
{
  OBJECT-PROPERTIES
  {
    Date=04/30/15;
    Time=12:00:00 PM;
    Version List=UBP2.94;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TestReleased;

               IF "Forecast Type" = "Forecast Type"::Total THEN BEGIN
                 IF ChangedForecastCustItem.GET("Customer No.","Location Code","Item No.","Variant Code") THEN BEGIN
                   ChangedForecastCustItem.Deleted := FALSE;
                   ChangedForecastCustItem.Inserted := TRUE;
                   ChangedForecastCustItem.Reopened := FALSE;
                   ChangedForecastCustItem.MODIFY(FALSE);
                 END ELSE BEGIN
                   ChangedForecastCustItem.INIT;
                   ChangedForecastCustItem.TRANSFERFIELDS(Rec,TRUE);
                   ChangedForecastCustItem.Inserted := TRUE;
                   ChangedForecastCustItem.INSERT(TRUE);
                 END;
               END;
             END;

    OnModify=BEGIN
               TestReleased;

               CASE "Forecast Type" OF
                 "Forecast Type"::Total:
                   BEGIN
                     IF "Forecast Type" <> xRec."Forecast Type" THEN BEGIN
                       IF ChangedForecastCustItem.GET("Customer No.","Location Code","Item No.","Variant Code") THEN BEGIN
                         ChangedForecastCustItem.Deleted := FALSE;
                         ChangedForecastCustItem.Inserted := FALSE;
                         ChangedForecastCustItem.Reopened := FALSE;
                         ChangedForecastCustItem.MODIFY(FALSE);
                       END ELSE BEGIN
                         ChangedForecastCustItem.INIT;
                         ChangedForecastCustItem.TRANSFERFIELDS(Rec,TRUE);
                         ChangedForecastCustItem.INSERT(TRUE);
                       END;
                      END;
                   END;
                 "Forecast Type"::Additional:
                   BEGIN
                     IF "Forecast Type" <> xRec."Forecast Type" THEN
                       ForecastEntry.RESET;
                       ForecastEntry.SETCURRENTKEY(
                         "Customer No.","Location Code","Item No.","Variant Code","Starting Date");
                       ForecastEntry.SETRANGE("Customer No.","Customer No.");
                       ForecastEntry.SETRANGE("Location Code","Location Code");
                       ForecastEntry.SETRANGE("Item No.","Item No.");
                       ForecastEntry.SETRANGE("Variant Code","Variant Code");
                       ForecastEntry.DELETEALL;

                       IF ChangedForecastCustItem.GET("Customer No.","Location Code","Item No.","Variant Code") THEN BEGIN
                         ChangedForecastCustItem.Deleted := TRUE;
                         ChangedForecastCustItem.Inserted := FALSE;
                         ChangedForecastCustItem.Reopened := FALSE;
                         ChangedForecastCustItem.MODIFY(FALSE);
                       END ELSE BEGIN
                         ChangedForecastCustItem.INIT;
                         ChangedForecastCustItem.TRANSFERFIELDS(Rec,TRUE);
                         ChangedForecastCustItem.Deleted := TRUE;
                         ChangedForecastCustItem.INSERT(TRUE);
                       END;
                   END;
               END;
             END;

    OnDelete=BEGIN
               TestReleased;

               ForecastEntry.RESET;
               ForecastEntry.SETCURRENTKEY(
                 "Customer No.","Location Code","Item No.","Variant Code","Starting Date");
               ForecastEntry.SETRANGE("Customer No.","Customer No.");
               ForecastEntry.SETRANGE("Location Code","Location Code");
               ForecastEntry.SETRANGE("Item No.","Item No.");
               ForecastEntry.SETRANGE("Variant Code","Variant Code");
               ForecastEntry.DELETEALL;

               ColForecastLine.RESET;
               ColForecastLine.SETRANGE("Customer No.","Customer No.");
               ColForecastLine.SETRANGE("Location Code","Location Code");
               ColForecastLine.SETRANGE("Item No.","Item No.");
               ColForecastLine.SETRANGE(Variant,"Variant Code");
               ColForecastLine.DELETEALL;

               IF "Forecast Type" = "Forecast Type"::Total THEN BEGIN
                 IF ChangedForecastCustItem.GET("Customer No.","Location Code","Item No.","Variant Code") THEN BEGIN
                   ChangedForecastCustItem.Deleted := TRUE;
                   ChangedForecastCustItem.Inserted := FALSE;
                   ChangedForecastCustItem.Reopened := FALSE;
                   ChangedForecastCustItem.MODIFY(FALSE);
                 END ELSE BEGIN
                   ChangedForecastCustItem.INIT;
                   ChangedForecastCustItem.TRANSFERFIELDS(Rec,TRUE);
                   ChangedForecastCustItem.Deleted := TRUE;
                   ChangedForecastCustItem.INSERT(TRUE);
                 END;
               END;
             END;

    OnRename=BEGIN
               ERROR(Text001);
             END;

    CaptionML=ENU=Forecast Customer Item;
    LookupPageID=Page14002603;
    DrillDownPageID=Page14002603;
  }
  FIELDS
  {
    { 1   ;   ;Customer No.        ;Code20        ;TableRelation="Forecast Customer"."Customer No.";
                                                   CaptionML=ENU=Customer No. }
    { 2   ;   ;Location Code       ;Code10        ;TableRelation=Location.Code;
                                                   OnValidate=BEGIN
                                                                TestReleased;
                                                              END;

                                                   CaptionML=ENU=Location Code }
    { 3   ;   ;Item No.            ;Code50        ;TableRelation=Item.No.;
                                                   OnValidate=BEGIN
                                                                TestReleased;

                                                                IF "Item No." = '' THEN
                                                                  INIT
                                                                ELSE
                                                                  IF ("Item No." <> xRec."Item No.") THEN BEGIN
                                                                    "Variant Code" := '';
                                                                    Item.GET("Item No.");
                                                                    Description := COPYSTR(Item.Description,1,MAXSTRLEN(Description));
                                                                  END;
                                                              END;

                                                   CaptionML=ENU=Item No. }
    { 4   ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   OnValidate=BEGIN
                                                                IF "Variant Code" = '' THEN
                                                                  VALIDATE("Item No.","Item No.")
                                                                ELSE
                                                                  IF "Variant Code" <> xRec."Variant Code" THEN BEGIN
                                                                    ItemVariant.GET("Item No.","Variant Code");
                                                                    Description := COPYSTR(ItemVariant.Description,1,MAXSTRLEN(Description));
                                                                  END;
                                                              END;

                                                   CaptionML=ENU=Variant Code }
    { 10  ;   ;Description         ;Text50        ;CaptionML=ENU=Description;
                                                   Editable=No }
    { 13  ;   ;Forecast Quantity   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Forecast Entry".Quantity WHERE (Customer No.=FIELD(Customer No.),
                                                                                                    Location Code=FIELD(Location Code),
                                                                                                    Item No.=FIELD(Item No.),
                                                                                                    Variant Code=FIELD(Variant Code),
                                                                                                    Starting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Forecast Quantity }
    { 14  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Date Filter }
    { 15  ;   ;Released            ;Boolean       ;CaptionML=ENU=Released;
                                                   Editable=No }
    { 16  ;   ;Actual Quantity     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Usage Ledger Entry".Quantity WHERE (Entry Type=CONST(Sale),
                                                                                                         Source No.=FIELD(Customer No.),
                                                                                                         Location Code=FIELD(Location Code),
                                                                                                         Item No.=FIELD(Item No.),
                                                                                                         Variant Code=FIELD(Variant Code),
                                                                                                         Usage Date=FIELD(Date Filter),
                                                                                                         Exclude from Usage=CONST(No)));
                                                   CaptionML=ENU=Actual Quantity;
                                                   Editable=No }
    { 17  ;   ;Bypass              ;Boolean       ;CaptionML=ENU=Bypass }
    { 19  ;   ;Forecast Type       ;Option        ;CaptionML=ENU=Forecast Type;
                                                   OptionCaptionML=ENU=Total,Additional;
                                                   OptionString=Total,Additional }
    { 20  ;   ;Forecast Quantity Sum.;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Forecast Entry".Quantity WHERE (Customer No.=FIELD(Customer No.),
                                                                                                    Location Code=FIELD(Location Code),
                                                                                                    Item No.=FIELD(Item No.),
                                                                                                    Starting Date=FIELD(Date Filter)));
                                                   CaptionML=ENU=Forecast Quantity Sum.;
                                                   Editable=No }
    { 21  ;   ;Actual Quantity Sum.;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Usage Ledger Entry".Quantity WHERE (Entry Type=CONST(Sale),
                                                                                                         Source No.=FIELD(Customer No.),
                                                                                                         Location Code=FIELD(Location Code),
                                                                                                         Item No.=FIELD(Item No.),
                                                                                                         Usage Date=FIELD(Date Filter),
                                                                                                         Exclude from Usage=CONST(No)));
                                                   CaptionML=ENU=Actual Quantity Sum. }
    { 40  ;   ;Period 1            ;Decimal       ;CaptionML=ENU=Period 1;
                                                   DecimalPlaces=0:2 }
    { 41  ;   ;Period 2            ;Decimal       ;CaptionML=ENU=Period 2;
                                                   DecimalPlaces=0:2 }
    { 42  ;   ;Period 3            ;Decimal       ;CaptionML=ENU=Period 3;
                                                   DecimalPlaces=0:2 }
    { 43  ;   ;Period 4            ;Decimal       ;CaptionML=ENU=Period 4;
                                                   DecimalPlaces=0:2 }
    { 44  ;   ;Period 5            ;Decimal       ;CaptionML=ENU=Period 5;
                                                   DecimalPlaces=0:2 }
    { 45  ;   ;Period 6            ;Decimal       ;CaptionML=ENU=Period 6;
                                                   DecimalPlaces=0:2 }
    { 46  ;   ;Period 7            ;Decimal       ;CaptionML=ENU=Period 7;
                                                   DecimalPlaces=0:2 }
    { 47  ;   ;Period 8            ;Decimal       ;CaptionML=ENU=Period 8;
                                                   DecimalPlaces=0:2 }
    { 48  ;   ;Period 9            ;Decimal       ;CaptionML=ENU=Period 9;
                                                   DecimalPlaces=0:2 }
    { 49  ;   ;Period 10           ;Decimal       ;CaptionML=ENU=Period 10;
                                                   DecimalPlaces=0:2 }
    { 50  ;   ;Period 11           ;Decimal       ;CaptionML=ENU=Period 11;
                                                   DecimalPlaces=0:2 }
    { 51  ;   ;Period 12           ;Decimal       ;CaptionML=ENU=Period 12;
                                                   DecimalPlaces=0:2 }
    { 52  ;   ;Period 13           ;Decimal       ;CaptionML=ENU=Period 13;
                                                   DecimalPlaces=0:2 }
    { 53  ;   ;Period 14           ;Decimal       ;CaptionML=ENU=Period 14;
                                                   DecimalPlaces=0:2 }
    { 54  ;   ;Period 15           ;Decimal       ;CaptionML=ENU=Period 15;
                                                   DecimalPlaces=0:2 }
    { 55  ;   ;Period 16           ;Decimal       ;CaptionML=ENU=Period 16 }
    { 56  ;   ;Period 17           ;Decimal       ;CaptionML=ENU=Period 17 }
    { 57  ;   ;Period 18           ;Decimal       ;CaptionML=ENU=Period 18 }
    { 58  ;   ;Period 19           ;Decimal       ;CaptionML=ENU=Period 19 }
    { 59  ;   ;Period 20           ;Decimal       ;CaptionML=ENU=Period 20 }
    { 60  ;   ;Period 21           ;Decimal       ;CaptionML=ENU=Period 21 }
    { 61  ;   ;Period 22           ;Decimal       ;CaptionML=ENU=Period 22 }
    { 62  ;   ;Period 23           ;Decimal       ;CaptionML=ENU=Period 23 }
    { 63  ;   ;Period 24           ;Decimal       ;CaptionML=ENU=Period 24 }
    { 64  ;   ;Period 25           ;Decimal       ;CaptionML=ENU=Period 25 }
    { 65  ;   ;Period 26           ;Decimal       ;CaptionML=ENU=Period 26 }
    { 66  ;   ;Period 27           ;Decimal       ;CaptionML=ENU=Period 27 }
    { 67  ;   ;Period 28           ;Decimal       ;CaptionML=ENU=Period 28 }
    { 68  ;   ;Period 29           ;Decimal       ;CaptionML=ENU=Period 29 }
    { 69  ;   ;Period 30           ;Decimal       ;CaptionML=ENU=Period 30 }
    { 70  ;   ;Period 31           ;Decimal       ;CaptionML=ENU=Period 31 }
    { 71  ;   ;Period 32           ;Decimal       ;CaptionML=ENU=Period 32 }
    { 72  ;   ;Period 33           ;Decimal       ;CaptionML=ENU=Period 33 }
    { 73  ;   ;Period 34           ;Decimal       ;CaptionML=ENU=Period 34 }
    { 74  ;   ;Period 35           ;Decimal       ;CaptionML=ENU=Period 35 }
    { 75  ;   ;Period 36           ;Decimal       ;CaptionML=ENU=Period 36 }
    { 76  ;   ;Period 37           ;Decimal       ;CaptionML=ENU=Period 37 }
    { 77  ;   ;Period 38           ;Decimal       ;CaptionML=ENU=Period 38 }
    { 78  ;   ;Period 39           ;Decimal       ;CaptionML=ENU=Period 39 }
    { 79  ;   ;Period 40           ;Decimal       ;CaptionML=ENU=Period 40 }
    { 80  ;   ;Period 41           ;Decimal       ;CaptionML=ENU=Period 41 }
    { 81  ;   ;Period 42           ;Decimal       ;CaptionML=ENU=Period 42 }
    { 82  ;   ;Period 43           ;Decimal       ;CaptionML=ENU=Period 43 }
    { 83  ;   ;Period 44           ;Decimal       ;CaptionML=ENU=Period 44 }
    { 84  ;   ;Period 45           ;Decimal       ;CaptionML=ENU=Period 45 }
    { 85  ;   ;Period 46           ;Decimal       ;CaptionML=ENU=Period 46 }
    { 86  ;   ;Period 47           ;Decimal       ;CaptionML=ENU=Period 47 }
    { 87  ;   ;Period 48           ;Decimal       ;CaptionML=ENU=Period 48 }
    { 88  ;   ;Period 49           ;Decimal       ;CaptionML=ENU=Period 49 }
    { 89  ;   ;Period 50           ;Decimal       ;CaptionML=ENU=Period 50 }
    { 90  ;   ;Period 51           ;Decimal       ;CaptionML=ENU=Period 51 }
    { 91  ;   ;Period 52           ;Decimal       ;CaptionML=ENU=Period 52 }
  }
  KEYS
  {
    {    ;Customer No.,Location Code,Item No.,Variant Code;
                                                   Clustered=Yes }
    {    ;Bypass,Customer No.,Item No.,Variant Code,Location Code }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ChangedForecastCustItem@1240030006 : Record 14002604;
      ForecastCustomer@1240030003 : Record 14002601;
      ForecastEntry@1240030002 : Record 14002603;
      Item@1240030000 : Record 27;
      ItemVariant@1240030001 : Record 5401;
      Text000@1240030004 : TextConst 'ENU=A Forecast Customer Item can not be inserted, deleted or modified until the Forecast Customer is reopened.';
      Text001@1240030005 : TextConst 'ENU=You can not rename a Forecast Customer Item.';
      ColForecastLine@1240030008 : Record 14002605;
      ProcUnit@1240030007 : Record 14000555;
      UBP@1240030009 : Codeunit 14000564;

    PROCEDURE GetForecastCust@1240030000();
    BEGIN
      IF ForecastCustomer."Customer No." = '' THEN
        ForecastCustomer.GET("Customer No.");
    END;

    PROCEDURE TestReleased@1240030001();
    BEGIN
      GetForecastCust;
      IF ForecastCustomer.Released THEN
        ERROR(Text000);
    END;

    PROCEDURE ShowItem@1240030002();
    BEGIN
      Item.RESET;
      Item.SETRANGE("No.","Item No.");
      PAGE.RUN(PAGE::"Item Card",Item);
    END;

    PROCEDURE ShowProcUnit@1240030003();
    BEGIN
      ProcUnit.RESET;
      ProcUnit.SETRANGE("Location Code","Location Code");
      ProcUnit.SETRANGE("Item No.","Item No.");
      ProcUnit.SETRANGE("Variant Code","Variant Code");
      PAGE.RUN(PAGE::"Procurement Unit Card",ProcUnit);
    END;

    PROCEDURE ViewForecast@1240030004();
    VAR
      ForecastView@1240030000 : Page 14002661;
    BEGIN
      CLEAR(ForecastView);
      ProcUnit.GET("Location Code","Item No.","Variant Code");
      ForecastView.SetProcUnitandSourceNo(ProcUnit,'');
      ForecastView.RUN;
    END;

    PROCEDURE ShowRollUp@1240030005();
    BEGIN
      IF ProcUnit.GET("Location Code","Item No.","Variant Code") THEN
        UBP.DisplayLocInvRollup(ProcUnit);
    END;

    BEGIN
    END.
  }
}

