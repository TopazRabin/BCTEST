OBJECT Table 50065 LP BOL Summary Line
{
  OBJECT-PROPERTIES
  {
    Date=11/08/21;
    Time=12:16:48 PM;
    Modified=Yes;
    Version List=SE0.60.19,3391;
  }
  PROPERTIES
  {
    CaptionML=ENU=Bill of Lading Summary Line;
  }
  FIELDS
  {
    { 1   ;   ;Bill of Lading No.  ;Code20        ;CaptionML=ENU=Bill of Lading No. }
    { 2   ;   ;Bill of Lading Type ;Option        ;CaptionML=ENU=Bill of Lading Type;
                                                   OptionCaptionML=ENU=Standard,ASN (EDI),ASN (Base),Package Summary;
                                                   OptionString=Standard,ASN (EDI),ASN (Base),Package Summary }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 11  ;   ;Parent Line No.     ;Integer       ;CaptionML=ENU=Parent Line No. }
    { 12  ;   ;Level               ;Integer       ;CaptionML=ENU=Level }
    { 13  ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Bill of Lading,Order,Shipment,Package,Item,Purchase Order,Tare,Item (ASN),Package (Item),Std. Pack. (UOM);
                                                   OptionString=Bill of Lading,Order,Shipment,Package,Item,Purchase Order,Tare,Item (ASN),Package (Item),Std. Pack. (UOM) }
    { 14  ;   ;No.                 ;Code35        ;TestTableRelation=No;
                                                   CaptionML=ENU=No. }
    { 15  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 16  ;   ;Type Description    ;Text100       ;OnLookup=BEGIN
                                                              LookupTypeDescription;
                                                            END;

                                                   CaptionML=ENU=Type Description }
    { 17  ;   ;Source Type         ;Integer       ;CaptionML=ENU=Source Type }
    { 18  ;   ;Source Subtype      ;Option        ;CaptionML=ENU=Source Subtype;
                                                   OptionCaptionML=ENU=0,1,2,3,4,5,6,7,8,9,10;
                                                   OptionString=0,1,2,3,4,5,6,7,8,9,10 }
    { 19  ;   ;Source ID           ;Code20        ;CaptionML=ENU=Source ID }
    { 20  ;   ;Posted Source ID    ;Code20        ;CaptionML=ENU=Posted Source ID }
    { 23  ;   ;Package No.         ;Code20        ;CaptionML=ENU=Package No. }
    { 24  ;   ;Package Line Line No.;Integer      ;CaptionML=ENU=Package Line Line No. }
    { 25  ;   ;Package Line Type   ;Option        ;CaptionML=ENU=Package Line Type;
                                                   OptionCaptionML=ENU=" ,Account (G/L),Item,Resource,,,,,,,Package";
                                                   OptionString=[ ,Account (G/L),Item,Resource,,,,,,,Package] }
    { 26  ;   ;Package Line No.    ;Code20        ;CaptionML=ENU=Package Line No. }
    { 27  ;   ;Package Line Variant Code;Code10   ;CaptionML=ENU=Package Line Variant Code }
    { 28  ;   ;Package Line Unit of Measure;Code10;CaptionML=ENU=Package Line Unit of Measure }
    { 29  ;   ;Package Line Quantity;Decimal      ;CaptionML=ENU=Package Line Quantity;
                                                   DecimalPlaces=0:5 }
    { 30  ;   ;Package Line Quantity (Base);Decimal;
                                                   CaptionML=ENU=Package Line Quantity (Base);
                                                   DecimalPlaces=0:5 }
    { 31  ;   ;UCC No.             ;Code30        ;CaptionML=ENU=UCC No. }
    { 33  ;   ;External Tracking No.;Code30       ;CaptionML=ENU=External Tracking No. }
    { 34  ;   ;External Document No.;Code35       ;CaptionML=ENU=External Document No. }
    { 35  ;   ;First Level Package No.;Code20     ;TableRelation="Posted Package";
                                                   CaptionML=ENU=First Level Package No. }
    { 36  ;   ;Second Level Package No.;Code20    ;TableRelation="Posted Package";
                                                   CaptionML=ENU=Second Level Package No. }
    { 37  ;   ;First Level Line No.;Integer       ;TableRelation="Bill of Lading Summary Line"."Line No." WHERE (Bill of Lading No.=FIELD(Bill of Lading No.),
                                                                                                                 Bill of Lading Type=FIELD(Bill of Lading Type));
                                                   CaptionML=ENU=First Level Line No. }
    { 38  ;   ;Second Level Line No.;Integer      ;TableRelation="Bill of Lading Summary Line"."Line No." WHERE (Bill of Lading No.=FIELD(Bill of Lading No.),
                                                                                                                 Bill of Lading Type=FIELD(Bill of Lading Type));
                                                   CaptionML=ENU=Second Level Line No. }
    { 39  ;   ;Package Contains Only Packages;Boolean;
                                                   CaptionML=ENU=Package Contains Only Packages }
    { 40  ;   ;UCC No. (Print)     ;Code30        ;CaptionML=ENU=UCC No. (Print) }
    { 44  ;   ;ASN Comment         ;Text250       ;CaptionML=ENU=ASN Comment }
    { 45  ;   ;Multi Package Line Quantity;Decimal;CaptionML=ENU=Multi Package Line Quantity;
                                                   DecimalPlaces=0:5 }
    { 46  ;   ;Multi Package Line Qty. (Base);Decimal;
                                                   CaptionML=ENU=Multi Package Line Qty. (Base);
                                                   DecimalPlaces=0:5 }
    { 47  ;   ;Multi Document      ;Boolean       ;CaptionML=ENU=Multi Document }
    { 48  ;   ;Prioritized Sorting ;Integer       ;CaptionML=ENU=Prioritized Sorting }
    { 51  ;   ;Weight              ;Decimal       ;CaptionML=ENU=Weight;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 52  ;   ;Volume              ;Decimal       ;CaptionML=ENU=Volume;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 53  ;   ;Value               ;Decimal       ;CaptionML=ENU=Value;
                                                   DecimalPlaces=2:2;
                                                   BlankZero=Yes }
    { 54  ;   ;EDI Level ID        ;Code35        ;CaptionML=ENU=EDI Level ID }
    { 55  ;   ;No. of Packages with Packages;Integer;
                                                   CaptionML=ENU=No. of Packages with Packages }
    { 56  ;   ;No. of Packages with Items;Integer ;CaptionML=ENU=No. of Packages with Items }
    { 57  ;   ;Bill of Lading in BOL;Boolean      ;CaptionML=ENU=Bill of Lading in BOL }
    { 61  ;   ;Item UPC/EAN Number ;Code20        ;CaptionML=ENU=Item UPC/EAN Number }
    { 62  ;   ;Item UPC/EAN Number (Print);Code50 ;CaptionML=ENU=Item UPC/EAN Number (Print) }
    { 63  ;   ;Std. Pack UPC/EAN Number;Code20    ;CaptionML=ENU=Std. Pack UPC/EAN Number }
    { 64  ;   ;Std. Pack UPC/EAN No. (Print);Code50;
                                                   CaptionML=ENU=Std. Pack UPC/EAN No. (Print) }
    { 65  ;   ;One Unit of Measure Code;Code10    ;CaptionML=ENU=One Unit of Measure Code }
    { 66  ;   ;RF-ID (Hex)         ;Code50        ;CaptionML=ENU=RF-ID (Hex) }
    { 71  ;   ;Custom Value 1      ;Code20        ;CaptionML=ENU=Custom Value 1 }
    { 72  ;   ;Custom Value 2      ;Code20        ;CaptionML=ENU=Custom Value 2 }
    { 73  ;   ;Custom Value 3      ;Code20        ;CaptionML=ENU=Custom Value 3 }
    { 74  ;   ;Custom Value 4      ;Code20        ;CaptionML=ENU=Custom Value 4 }
    { 75  ;   ;Custom Value 5      ;Code20        ;CaptionML=ENU=Custom Value 5 }
    { 81  ;   ;Third Level Package No.;Code20     ;TableRelation="Posted Package";
                                                   CaptionML=ENU=Third Level Package No. }
    { 82  ;   ;Third Level Line No.;Integer       ;TableRelation="Bill of Lading Summary Line"."Line No." WHERE (Bill of Lading No.=FIELD(Bill of Lading No.),
                                                                                                                 Bill of Lading Type=FIELD(Bill of Lading Type));
                                                   CaptionML=ENU=Third Level Line No. }
    { 83  ;   ;Fourth Level Package No.;Code20    ;TableRelation="Posted Package";
                                                   CaptionML=ENU=Fourth Level Package No. }
    { 84  ;   ;Fourth Level Line No.;Integer      ;TableRelation="Bill of Lading Summary Line"."Line No." WHERE (Bill of Lading No.=FIELD(Bill of Lading No.),
                                                                                                                 Bill of Lading Type=FIELD(Bill of Lading Type));
                                                   CaptionML=ENU=Fourth Level Line No. }
    { 85  ;   ;Fifth Level Package No.;Code20     ;TableRelation="Posted Package";
                                                   CaptionML=ENU=Fifth Level Package No. }
    { 86  ;   ;Fifth Level Line No.;Integer       ;TableRelation="Bill of Lading Summary Line"."Line No." WHERE (Bill of Lading No.=FIELD(Bill of Lading No.),
                                                                                                                 Bill of Lading Type=FIELD(Bill of Lading Type));
                                                   CaptionML=ENU=Fifth Level Line No. }
    { 87  ;   ;Advanced Line No.   ;Integer       ;CaptionML=ENU=Advanced Line No. }
    { 88  ;   ;Advanced Parent Line No.;Integer   ;CaptionML=ENU=Advanced Parent Line No. }
    { 91  ;   ;Summarized Quantity ;Decimal       ;CaptionML=ENU=Summarized Quantity;
                                                   DecimalPlaces=0:5 }
    { 92  ;   ;Summarized Quantity (Base);Decimal ;CaptionML=ENU=Summarized Quantity (Base);
                                                   DecimalPlaces=0:5 }
    { 93  ;   ;Zero ASN Line       ;Boolean       ;CaptionML=ENU=Zero ASN Line }
    { 94  ;   ;Override ASN Summary Type;Option   ;CaptionML=ENU=Override ASN Summary Type;
                                                   OptionCaptionML=ENU=" ,Shipment-Order-Item,Shipment-Order-Package-Item,Shipment-Order-Tare-Package-Item,Shipment-Order-Item-Package,Shipment-Package-Order-Item,Prioritized,,,,,Custom 1,Custom 2,Custom 3";
                                                   OptionString=[ ,Shipment-Order-Item,Shipment-Order-Package-Item,Shipment-Order-Tare-Package-Item,Shipment-Order-Item-Package,Shipment-Package-Order-Item,Prioritized,,,,,Custom 1,Custom 2,Custom 3] }
    { 95  ;   ;Override ASN Summary;Boolean       ;CaptionML=ENU=Override ASN Summary }
  }
  KEYS
  {
    {    ;Bill of Lading No.,Bill of Lading Type,Line No.;
                                                   Clustered=Yes }
    {    ;Bill of Lading No.,Bill of Lading Type,Parent Line No.;
                                                   MaintainSQLIndex=No }
    {    ;Bill of Lading No.,Bill of Lading Type,External Document No.;
                                                   MaintainSQLIndex=No }
    {    ;Bill of Lading No.,Bill of Lading Type,External Document No.,Type,No.,Package Line Variant Code;
                                                   MaintainSQLIndex=No }
    {    ;Bill of Lading No.,Bill of Lading Type,External Document No.,Source Type,Source Subtype,Source ID;
                                                   MaintainSQLIndex=No }
    {    ;Bill of Lading No.,Bill of Lading Type,External Document No.,Source Type,Source Subtype,Source ID,Type,No.,Package Line Variant Code;
                                                   MaintainSQLIndex=No }
    {    ;Bill of Lading No.,Bill of Lading Type,First Level Package No.;
                                                   MaintainSQLIndex=No }
    {    ;Bill of Lading No.,Bill of Lading Type,Prioritized Sorting }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      BillOfLading@1000000000 : Record 14000822;
      BillOfLadingSummaryLine@1000000004 : Record 14000825;
      SalesHeader@1000000001 : Record 36;
      SalesShipmentHeader@1000000002 : Record 110;
      PostedPackage@1000000003 : Record 14000704;
      Text001@1001 : TextConst 'ENU=No lookup for this type.';
      Text002@1240030001 : TextConst 'ENU=External Document No. %1 do not have a unique invoice.';
      Text003@1240030000 : TextConst 'ENU=External Document No. %1 do not have an invoice.';
      Text004@1000000005 : TextConst 'ENU=Shipment %1.';
      Text5000@1000000006 : TextConst 'ENU=Purchase Order %1 (Sales Order %2)';
      Text008@1000000007 : TextConst 'ENU=Package %1.';

    PROCEDURE LookupTypeDescription@1();
    BEGIN
      CASE Type OF
        Type::"Bill of Lading":
          BEGIN
            TESTFIELD("Bill of Lading No.");
            BillOfLading.GET("Bill of Lading No.");
            PAGE.RUNMODAL(PAGE::"Bill of Lading",BillOfLading);
          END;
        Type::Order:
          BEGIN
            TESTFIELD("Source ID");
            SalesHeader.GET("Source Subtype","Source ID");
            PAGE.RUNMODAL(PAGE::"Sales Order",SalesHeader);
          END;
        Type::Shipment:
          BEGIN
            TESTFIELD("Posted Source ID");
            SalesShipmentHeader.GET("Posted Source ID");
            PAGE.RUNMODAL(PAGE::"Posted Sales Shipment",SalesShipmentHeader);
          END;
        Type::Package,Type::Item,Type::Tare:
          BEGIN
            TESTFIELD("Package No.");
            PostedPackage.GET("Package No.");
            IF PostedPackage.Miscellaneous THEN
              PAGE.RUNMODAL(PAGE::"Posted Miscellaneous Package",PostedPackage)
            ELSE
              PAGE.RUNMODAL(PAGE::"Posted Package",PostedPackage);
          END;
        Type::"Purchase Order":
          ERROR(Text001);
      END;
    END;

    PROCEDURE CombineShipments@3();
    BEGIN
      BillOfLading.GET("Bill of Lading No.");

      SalesShipmentHeader.RESET;
      SalesShipmentHeader.SETRANGE("Bill of Lading No.","Bill of Lading No.");
      SalesShipmentHeader.SETRANGE("External Document No.","External Document No.");
      IF BillOfLading."Ship-to Code" <> '' THEN
        SalesShipmentHeader.SETRANGE("Ship-to Code",BillOfLading."Ship-to Code");

      REPORT.RUN(REPORT::"Combine Shipments",TRUE,TRUE,SalesShipmentHeader);
    END;

    PROCEDURE EditASNValues@2();
    BEGIN
      BillOfLading.GET("Bill of Lading No.");
      BillOfLading.TESTFIELD(Released,TRUE);
      BillOfLading.TESTFIELD("Summary Released",TRUE);
      BillOfLading.TESTFIELD("EDI ASN Generated",FALSE);

      BillOfLadingSummaryLine.RESET;
      BillOfLadingSummaryLine.FILTERGROUP(2);
      BillOfLadingSummaryLine.SETRANGE("Bill of Lading No.","Bill of Lading No.");
      BillOfLadingSummaryLine.SETRANGE("Bill of Lading Type","Bill of Lading Type");
      BillOfLadingSummaryLine.SETRANGE("Line No.","Line No.");
      BillOfLadingSummaryLine.FILTERGROUP(0);

      PAGE.RUNMODAL(PAGE::"Bill of Lad. Sum. Line - Edit",BillOfLadingSummaryLine);
    END;

    PROCEDURE FindInvoiceNo@1240030001();
    VAR
      SalesInvoiceHeader@1000000000 : Record 112;
      BillOfLadingSummaryLine2@1000000001 : Record 14000825;
    BEGIN
      BillOfLadingSummaryLine.RESET;
      BillOfLadingSummaryLine.SETRANGE("Bill of Lading No.","Bill of Lading No.");
      BillOfLadingSummaryLine.SETRANGE(
        "Bill of Lading Type",
        BillOfLadingSummaryLine."Bill of Lading Type"::"ASN (EDI)");
      BillOfLadingSummaryLine.SETRANGE(Type,BillOfLadingSummaryLine.Type::"Purchase Order");
      BillOfLadingSummaryLine.SETRANGE("Custom Value 1",'');
      IF BillOfLadingSummaryLine.FIND('-') THEN
        REPEAT
          SalesInvoiceHeader.RESET;
          SalesInvoiceHeader.SETCURRENTKEY("Invoice for Bill of Lading No.");
          SalesInvoiceHeader.SETRANGE("Invoice for Bill of Lading No.","Bill of Lading No.");
          SalesInvoiceHeader.SETRANGE(
            "External Document No.",BillOfLadingSummaryLine."External Document No.");
          IF SalesInvoiceHeader.FIND('-') THEN BEGIN
            IF SalesInvoiceHeader.NEXT = 0 THEN BEGIN
              BillOfLadingSummaryLine2 := BillOfLadingSummaryLine;
              BillOfLadingSummaryLine2."Custom Value 1" := SalesInvoiceHeader."No.";
              BillOfLadingSummaryLine2.MODIFY;
            END ELSE
              MESSAGE(
                Text002,
                BillOfLadingSummaryLine."External Document No.");
          END ELSE
            MESSAGE(
              Text003,
              BillOfLadingSummaryLine."External Document No.");
        UNTIL BillOfLadingSummaryLine.NEXT = 0;
    END;

    PROCEDURE EditCustomValues@1240030000();
    BEGIN
      BillOfLading.GET("Bill of Lading No.");
      BillOfLading.TESTFIELD(Released,TRUE);
      BillOfLading.TESTFIELD("Summary Released",TRUE);
      BillOfLading.TESTFIELD("EDI ASN Generated",FALSE);

      BillOfLadingSummaryLine.RESET;
      BillOfLadingSummaryLine.FILTERGROUP(2);
      BillOfLadingSummaryLine.SETRANGE("Bill of Lading No.","Bill of Lading No.");
      BillOfLadingSummaryLine.SETRANGE("Bill of Lading Type","Bill of Lading Type");
      BillOfLadingSummaryLine.SETRANGE("Line No.","Line No.");
      BillOfLadingSummaryLine.FILTERGROUP(0);

      PAGE.RUNMODAL(PAGE::"Bill of Lad. Sum. Line - Edit",BillOfLadingSummaryLine);
    END;

    PROCEDURE CreateBOL@1000000000(SalesShipmentHeader@1000000000 : Record 110);
    VAR
      LPBOLSummaryLine@1000000001 : Record 50065;
      ShippingSetup@1000000002 : Record 14000707;
      NoSeriesManagement@1000000003 : Codeunit 396;
      BOLNo@1000000004 : Code[20];
      LevelParent@1000000008 : ARRAY [100] OF Integer;
      BOLSumLineLevel@1000000007 : Integer;
      LevelPackageNo@1000000006 : ARRAY [5] OF Code[20];
      LevelLineNo@1000000005 : ARRAY [5] OF Integer;
      LastOrderNo@1000000010 : Code[20];
      LastShipmentNo@1000000009 : Code[20];
      PostedWhseShipmentLine@1000000011 : Record 7323;
      LicensePlateHeader@1000000012 : Record 23044505;
      LicensePlateLine@1000000013 : Record 23044506;
      CurrentLevel@1000000014 : Integer;
      BOLSumLinePackage@1000000015 : Record 50065;
      ItemUnitOfMeasure@1000000016 : Record 5404;
    BEGIN
      ShippingSetup.GET;
      BOLNo := NoSeriesManagement.GetNextNo(ShippingSetup."Bill of Lading Nos.",TODAY,TRUE);
      LPBOLSummaryLine.INIT;
      LPBOLSummaryLine."Bill of Lading No." := BOLNo;
      LPBOLSummaryLine."Bill of Lading Type" := LPBOLSummaryLine."Bill of Lading Type"::"ASN (EDI)";
      LPBOLSummaryLine."Line No." := 1;
      LPBOLSummaryLine."Parent Line No." := 0;
      LPBOLSummaryLine.Level := 1;
      LPBOLSummaryLine.Type := LPBOLSummaryLine.Type::"Bill of Lading";
      LPBOLSummaryLine."No." := BOLNo;
      LPBOLSummaryLine.Description := SalesShipmentHeader."Order No.";
      LPBOLSummaryLine."Type Description" :=
        STRSUBSTNO(Text004,LPBOLSummaryLine."No.");
      LPBOLSummaryLine."External Tracking No." := BOLNo;
      LPBOLSummaryLine.INSERT;

      LevelParent[LPBOLSummaryLine.Level] := LPBOLSummaryLine."Line No.";
      LastOrderNo := '';
      LastShipmentNo := 'X Y Z';

      PostedWhseShipmentLine.RESET;
      PostedWhseShipmentLine.SETRANGE("Posted Source No.",SalesShipmentHeader."No.");
      IF PostedWhseShipmentLine.FINDFIRST THEN BEGIN
        LPBOLSummaryLine.INIT;
        //LPBOLSummaryLine."Bill of Lading No." := BOLNo;
        //LPBOLSummaryLine."Bill of Lading Type" := LPBOLSummaryLine."Bill of Lading Type"::"ASN (EDI)";
        LPBOLSummaryLine."Line No." := LPBOLSummaryLine."Line No." + 1;
        LPBOLSummaryLine.Level := 2;
        LPBOLSummaryLine."Parent Line No." :=
          LevelParent[LPBOLSummaryLine.Level - 1];
        LPBOLSummaryLine.Type := LPBOLSummaryLine.Type::"Purchase Order";
        LPBOLSummaryLine."No." := SalesShipmentHeader."External Document No.";
        LPBOLSummaryLine.Description := '';
        LPBOLSummaryLine."Type Description" :=STRSUBSTNO(Text5000,SalesShipmentHeader."External Document No.",SalesShipmentHeader."Order No.");
        LPBOLSummaryLine."Source Type" := 36;
        LPBOLSummaryLine."Source Subtype" := 1;
        LPBOLSummaryLine."Source ID" := SalesShipmentHeader."Order No.";
        LPBOLSummaryLine."Posted Source ID" := SalesShipmentHeader."No.";
        LPBOLSummaryLine.INSERT;

        LevelParent[LPBOLSummaryLine.Level] := LPBOLSummaryLine."Line No.";
        LastOrderNo := LPBOLSummaryLine."Source ID";
        LastShipmentNo := 'X Y Z';

        CurrentLevel := 3;
        LicensePlateHeader.RESET;
        LicensePlateHeader.SETRANGE("Shipment No.",PostedWhseShipmentLine."No.");
        IF LicensePlateHeader.FINDFIRST THEN REPEAT
          LPBOLSummaryLine.INIT;
          //LPBOLSummaryLine."Bill of Lading No." := BOLNo;
          //LPBOLSummaryLine."Bill of Lading Type" := LPBOLSummaryLine."Bill of Lading Type"::"ASN (EDI)";
          LPBOLSummaryLine."Line No." := LPBOLSummaryLine."Line No." + 1;
          LPBOLSummaryLine.Level := CurrentLevel;
          LPBOLSummaryLine."Parent Line No." := LevelParent[LPBOLSummaryLine.Level - 1];
          LPBOLSummaryLine.Type := LPBOLSummaryLine.Type::Package;
          LPBOLSummaryLine."No." := LicensePlateHeader."No.";
          LPBOLSummaryLine.Description := 'Electrical Supply';
          LPBOLSummaryLine."Type Description" := STRSUBSTNO(Text008,LicensePlateHeader."No.");

          LPBOLSummaryLine."Source Type" := LicensePlateHeader."Source Document Type";
          //BOLSumLine."Source Subtype" := CurrentPostedPackage."Source Subtype";
          LPBOLSummaryLine."Source ID" := LicensePlateHeader."Shipped Source No.";
          LPBOLSummaryLine."Posted Source ID" := SalesShipmentHeader."No.";

          LPBOLSummaryLine."Package No." := LicensePlateHeader."No.";
          IF CurrentLevel <= ARRAYLEN(LevelPackageNo) THEN BEGIN
            LevelPackageNo[CurrentLevel - 2] := LicensePlateHeader."No.";
            LevelLineNo[CurrentLevel - 2] := LPBOLSummaryLine."Line No.";
          END;
          SetLevelFields(LPBOLSummaryLine,LevelPackageNo,LevelLineNo);
          LPBOLSummaryLine."External Tracking No." := LicensePlateHeader."Package Tracking Number";
          LPBOLSummaryLine.Weight := LicensePlateHeader."Shipment Gross Weight";
          LPBOLSummaryLine.Volume := LicensePlateHeader."Shipment Cubage";
          LPBOLSummaryLine.Value := LicensePlateHeader."Insurance Amount";
          //BOLSumLine."Multi Document" := CurrentPostedPackage."Multi Document Package";

          LPBOLSummaryLine."Package Contains Only Packages" := FALSE;
          LPBOLSummaryLine.INSERT;
          BOLSumLinePackage := LPBOLSummaryLine;
          LevelParent[LPBOLSummaryLine.Level] := LPBOLSummaryLine."Line No.";

          LicensePlateLine.RESET;
          LicensePlateLine.SETRANGE("License Plate No.",LicensePlateHeader."No.");
          IF LicensePlateLine.FINDFIRST THEN REPEAT
            IF GetRelatedBOLLine(PostedWhseShipmentLine,LicensePlateLine) THEN BEGIN
              LPBOLSummaryLine."Line No." := LPBOLSummaryLine."Line No." + 1;
              LPBOLSummaryLine.Level := CurrentLevel + 1;
              LPBOLSummaryLine."Parent Line No." := LevelParent[LPBOLSummaryLine.Level - 1];
              LPBOLSummaryLine.Type := LPBOLSummaryLine.Type::Item;
              LPBOLSummaryLine."No." := LicensePlateLine."No.";
              LPBOLSummaryLine.Description := LicensePlateLine.Description;
              IF (LicensePlateLine.Quantity < LicensePlateLine."Quantity (Base)") AND
                  (LicensePlateLine.Type = LicensePlateLine.Type::Item)
              THEN BEGIN
                ItemUnitOfMeasure.RESET;
                ItemUnitOfMeasure.SETRANGE("Item No.",LicensePlateLine."No.");
                ItemUnitOfMeasure.SETRANGE("Qty. per Unit of Measure",1);
                IF NOT ItemUnitOfMeasure.FIND('-') THEN
                  CLEAR(ItemUnitOfMeasure);

                LPBOLSummaryLine."Type Description" :=
                  STRSUBSTNO(
                    '%1 %2 %3 %4 %5 (%6 %7).',LicensePlateLine.Type,LicensePlateLine."No.",
                    LicensePlateLine.Description,LicensePlateLine.Quantity,
                    LicensePlateLine."Unit of Measure Code",LicensePlateLine."Quantity (Base)",
                    ItemUnitOfMeasure.Code);
              END ELSE
                LPBOLSummaryLine."Type Description" :=
                  STRSUBSTNO(
                    '%1 %2 %3 %4 %5.',LicensePlateLine.Type,LicensePlateLine."No.",
                    LicensePlateLine.Description,LicensePlateLine.Quantity,
                    LicensePlateLine."Unit of Measure Code");
              LPBOLSummaryLine."Source Type" := 36;
              LPBOLSummaryLine."Source Subtype" := 1;
              LPBOLSummaryLine."Source ID" := SalesShipmentHeader."Order No.";
              LPBOLSummaryLine."Posted Source ID" := SalesShipmentHeader."No.";
              SetLevelFields(LPBOLSummaryLine,LevelPackageNo,LevelLineNo);
              //LPBOLSummaryLine."UCC No." := ParentUCC128No;
              //LPBOLSummaryLine."UCC No. (Print)" := ParentUCC128NoPrint;
              //LPBOLSummaryLine."RF-ID (Hex)" := ParentRFID;
              LPBOLSummaryLine."External Document No." := SalesShipmentHeader."External Document No.";
              LPBOLSummaryLine."Package No." := LicensePlateHeader."No.";
              LPBOLSummaryLine."Package Line Line No." := LicensePlateLine."Line No.";
              LPBOLSummaryLine."Package Line Type" := LicensePlateLine.Type;
              LPBOLSummaryLine."Package Line No." := LicensePlateLine."No.";
              LPBOLSummaryLine."Package Line Variant Code" := LicensePlateLine."Variant Code";
              LPBOLSummaryLine."Package Line Unit of Measure" :=
                LicensePlateLine."Unit of Measure Code";
              LPBOLSummaryLine."Package Line Quantity" := LicensePlateLine.Quantity;
              LPBOLSummaryLine."Package Line Quantity (Base)" := LicensePlateLine."Quantity (Base)";
              //LPBOLSummaryLine."Multi Package Line Quantity" := PostedPackageLine."Multi Document Quantity";
              //LPBOLSummaryLine."Multi Package Line Qty. (Base)" :=
              //  PostedPackageLine."Multi Document Qty. (Base)";
              //LPBOLSummaryLine."Multi Document" := CurrentPostedPackage."Multi Document Package";
              //LPBOLSummaryLine."Item UPC/EAN Number" := LicensePlateLine."Item UPC/EAN Number";
              //LPBOLSummaryLine."Item UPC/EAN Number (Print)" :=
              //  PostedPackageLine."Item UPC/EAN Number (Print)";
              //LPBOLSummaryLine."Std. Pack UPC/EAN Number" := PostedPackageLine."Std. Pack UPC/EAN Number";
              //LPBOLSummaryLine."Std. Pack UPC/EAN No. (Print)" :=
              //  PostedPackageLine."Std. Pack UPC/EAN No. (Print)";
              LPBOLSummaryLine."One Unit of Measure Code" := ItemUnitOfMeasure.Code;
              LPBOLSummaryLine.INSERT;

              BOLSumLinePackage."Package Line Quantity" :=
                BOLSumLinePackage."Package Line Quantity" + LPBOLSummaryLine."Package Line Quantity";
              BOLSumLinePackage."Package Line Quantity (Base)" :=
                BOLSumLinePackage."Package Line Quantity (Base)" +
                LPBOLSummaryLine."Package Line Quantity (Base)";

            END;
            PostedWhseShipmentLine.NEXT;
          UNTIL LicensePlateLine.NEXT = 0;
        UNTIL LicensePlateHeader.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE SetLevelFields@17(VAR BOLSumLine@1000000000 : Record 50065;LevelPackageNo@1000000001 : ARRAY [5] OF Code[20];LevelLineNo@1000000002 : ARRAY [5] OF Integer);
    BEGIN
      BOLSumLine."First Level Package No." := LevelPackageNo[1];
      BOLSumLine."First Level Line No." := LevelLineNo[1];
      BOLSumLine."Second Level Package No." := LevelPackageNo[2];
      BOLSumLine."Second Level Line No." := LevelLineNo[2];
      BOLSumLine."Third Level Package No." := LevelPackageNo[3];
      BOLSumLine."Third Level Line No." := LevelLineNo[3];
      BOLSumLine."Fourth Level Package No." := LevelPackageNo[4];
      BOLSumLine."Fourth Level Line No." := LevelLineNo[4];
      BOLSumLine."Fifth Level Package No." := LevelPackageNo[5];
      BOLSumLine."Fifth Level Line No." := LevelLineNo[5];
    END;

    LOCAL PROCEDURE GetRelatedBOLLine@1000000002(PostedWhseShipmentLine@1000000000 : Record 7323;LicensePlateLine@1000000002 : Record 23044506) : Boolean;
    VAR
      lrecLineUsage@1000000003 : Record 23044507;
      ShipmentFound@1000000001 : Boolean;
    BEGIN
      ShipmentFound := FALSE;
      lrecLineUsage.RESET;
      lrecLineUsage.SETRANGE("License Plate No.",LicensePlateLine."License Plate No.");
      lrecLineUsage.SETRANGE("License Plate Line No.",LicensePlateLine."Line No.");
      lrecLineUsage.SETRANGE("Source Document",lrecLineUsage."Source Document"::Shipment);
      lrecLineUsage.SETRANGE("Source No.",PostedWhseShipmentLine."Whse. Shipment No.");
      lrecLineUsage.SETRANGE("Source Line No.",PostedWhseShipmentLine."Whse Shipment Line No.");
      IF NOT lrecLineUsage.ISEMPTY THEN
        ShipmentFound := TRUE
      ELSE BEGIN
        lrecLineUsage.SETRANGE("Source Document",lrecLineUsage."Source Document"::"Sales Order");
        lrecLineUsage.SETRANGE("Source No.",PostedWhseShipmentLine."Source No.");
        lrecLineUsage.SETRANGE("Source Line No.",PostedWhseShipmentLine."Source Line No.");
        IF NOT lrecLineUsage.ISEMPTY THEN
          ShipmentFound := TRUE;
      END;
      //IF ShipmentFound THEN BEGIN
      EXIT(ShipmentFound);
    END;

    PROCEDURE CreateBOLfromSO@1000000001(WarehouseShipmentNoPara@1000000000 : Code[20]);
    VAR
      LPBOLSummaryLine@1000000001 : Record 50065;
      ShippingSetup@1000000002 : Record 14000707;
      NoSeriesManagement@1000000003 : Codeunit 396;
      BOLNo@1000000004 : Code[20];
      LevelParent@1000000008 : ARRAY [100] OF Integer;
      BOLSumLineLevel@1000000007 : Integer;
      LevelPackageNo@1000000006 : ARRAY [5] OF Code[20];
      LevelLineNo@1000000005 : ARRAY [5] OF Integer;
      LastOrderNo@1000000010 : Code[20];
      LastShipmentNo@1000000009 : Code[20];
      WarehouseShipmentLineLoc@1000000011 : Record 7321;
      LicensePlateHeader@1000000012 : Record 23044505;
      LicensePlateLine@1000000013 : Record 23044506;
      CurrentLevel@1000000014 : Integer;
      BOLSumLinePackage@1000000015 : Record 50065;
      ItemUnitOfMeasure@1000000016 : Record 5404;
      LicensePlateLineUsageLoc@1000000017 : Record 23044507;
      LPNoLoc@1000000018 : Code[20];
      SHLoc@1000000019 : Record 36;
      CustRec@1000000020 : Record 18;
      LicensePlateHeader1@1000000021 : Record 23044505;
      SourceNo@1000000022 : Code[20];
      WarehouseShipmentLineLoc1@1000000023 : Record 7321;
    BEGIN
      //TPZ3391 PKS
      ShippingSetup.GET;
      LicensePlateLineUsageLoc.RESET;
      LicensePlateLineUsageLoc.SETCURRENTKEY("License Plate No.","License Plate Line No.","Posting Date");
      //LicensePlateLineUsageLoc.SETRANGE("License Plate No.",LPHeaderPara."No.");
      LicensePlateLineUsageLoc.SETRANGE("Source Document",LicensePlateLineUsageLoc."Source Document"::Shipment);
      LicensePlateLineUsageLoc.SETRANGE("Source No.",WarehouseShipmentNoPara);
      IF LicensePlateLineUsageLoc.FINDFIRST THEN BEGIN
        IF WarehouseShipmentLineLoc.GET(LicensePlateLineUsageLoc."Source No.",LicensePlateLineUsageLoc."Source Line No.") THEN;
        IF SHLoc.GET(SHLoc."Document Type"::Order,WarehouseShipmentLineLoc."Source No.") THEN;
        IF CustRec.GET(SHLoc."Sell-to Customer No.") THEN;
        IF LicensePlateHeader1.GET(LicensePlateLineUsageLoc."License Plate No.") THEN;
        IF LicensePlateHeader1."BOL No." <> '' THEN
          BOLNo := LicensePlateHeader1."BOL No."
        ELSE BEGIN
          BOLNo := NoSeriesManagement.GetNextNo(ShippingSetup."Bill of Lading Nos.",TODAY,TRUE);
          LicensePlateHeader1."BOL No." := BOLNo;
          LicensePlateHeader1.MODIFY;
        END;
        LPBOLSummaryLine.INIT;
        LPBOLSummaryLine."Bill of Lading No." := BOLNo;
        LPBOLSummaryLine."Bill of Lading Type" := LPBOLSummaryLine."Bill of Lading Type"::"ASN (EDI)";
        LPBOLSummaryLine."Line No." := 1;
        LPBOLSummaryLine."Parent Line No." := 0;
        LPBOLSummaryLine.Level := 1;
        LPBOLSummaryLine.Type := LPBOLSummaryLine.Type::"Bill of Lading";
        LPBOLSummaryLine."No." := BOLNo;
        LPBOLSummaryLine.Description := SHLoc."No."; //Sales Order No.
        LPBOLSummaryLine."Type Description" :=
          STRSUBSTNO(Text004,LPBOLSummaryLine."No.");
        LPBOLSummaryLine."External Tracking No." := BOLNo;
        LPBOLSummaryLine."Source Type" := LicensePlateHeader."Source Document Type";
        LPBOLSummaryLine."Source ID" := SHLoc."No.";
        LPBOLSummaryLine."Posted Source ID" := SHLoc."No.";
        LPBOLSummaryLine.INSERT;
        LevelParent[LPBOLSummaryLine.Level] := LPBOLSummaryLine."Line No.";
        LastOrderNo := '';
        LastShipmentNo := 'X Y Z';
        REPEAT
          IF LicensePlateLine.GET(LicensePlateLineUsageLoc."License Plate No.",LicensePlateLineUsageLoc."License Plate Line No.") THEN;
          IF LicensePlateHeader.GET(LicensePlateLineUsageLoc."License Plate No.") THEN;
          IF WarehouseShipmentLineLoc1.GET(LicensePlateLineUsageLoc."Source No.",LicensePlateLineUsageLoc."Source Line No.") THEN;
          IF SourceNo <> WarehouseShipmentLineLoc1."Source No." THEN BEGIN
            LPNoLoc := '';
            LPBOLSummaryLine.INIT;
            //LPBOLSummaryLine."Bill of Lading No." := BOLNo;
            //LPBOLSummaryLine."Bill of Lading Type" := LPBOLSummaryLine."Bill of Lading Type"::"ASN (EDI)";
            LPBOLSummaryLine."Line No." := LPBOLSummaryLine."Line No." + 1;
            LPBOLSummaryLine.Level := 2;
            LPBOLSummaryLine."Parent Line No." :=
              LevelParent[LPBOLSummaryLine.Level - 1];
            LPBOLSummaryLine.Type := LPBOLSummaryLine.Type::"Purchase Order";
            LPBOLSummaryLine."No." := SHLoc."External Document No.";
            LPBOLSummaryLine.Description := '';
            LPBOLSummaryLine."Type Description" :=STRSUBSTNO(Text5000,SHLoc."External Document No.",SHLoc."No.");
            LPBOLSummaryLine."Source Type" := 36;
            LPBOLSummaryLine."Source Subtype" := 1;
            LPBOLSummaryLine."Source ID" := WarehouseShipmentLineLoc1."Source No.";
            LPBOLSummaryLine."Posted Source ID" := WarehouseShipmentLineLoc1."Source No.";
            LPBOLSummaryLine.INSERT;
            LevelParent[LPBOLSummaryLine.Level] := LPBOLSummaryLine."Line No.";
            LastOrderNo := LPBOLSummaryLine."Source ID";
            LastShipmentNo := 'X Y Z';
          END;
          SourceNo := WarehouseShipmentLineLoc1."Source No.";
          IF LPNoLoc <> LicensePlateLineUsageLoc."License Plate No." THEN BEGIN
            CurrentLevel := 3;
            LPBOLSummaryLine.INIT;
            //LPBOLSummaryLine."Bill of Lading No." := BOLNo;
            //LPBOLSummaryLine."Bill of Lading Type" := LPBOLSummaryLine."Bill of Lading Type"::"ASN (EDI)";
            LPBOLSummaryLine."Line No." := LPBOLSummaryLine."Line No." + 1;
            LPBOLSummaryLine.Level := CurrentLevel;
            LPBOLSummaryLine."Parent Line No." := LevelParent[LPBOLSummaryLine.Level - 1];
            LPBOLSummaryLine.Type := LPBOLSummaryLine.Type::Package;
            LPBOLSummaryLine."No." := LicensePlateLineUsageLoc."License Plate No.";
            LPBOLSummaryLine.Description := 'Electrical Supply';
            LPBOLSummaryLine."Type Description" := STRSUBSTNO(Text008,LicensePlateHeader."No.");

            LPBOLSummaryLine."Source Type" := LicensePlateHeader."Source Document Type";
            //BOLSumLine."Source Subtype" := CurrentPostedPackage."Source Subtype";
            LPBOLSummaryLine."Source ID" := WarehouseShipmentLineLoc1."Source No.";
            LPBOLSummaryLine."Posted Source ID" := WarehouseShipmentLineLoc1."Source No.";

            LPBOLSummaryLine."Package No." := LicensePlateLineUsageLoc."License Plate No.";
            IF CurrentLevel <= ARRAYLEN(LevelPackageNo) THEN BEGIN
              LevelPackageNo[CurrentLevel - 2] := LicensePlateLineUsageLoc."License Plate No.";
              LevelLineNo[CurrentLevel - 2] := LPBOLSummaryLine."Line No.";
            END;
            SetLevelFields(LPBOLSummaryLine,LevelPackageNo,LevelLineNo);
            LPBOLSummaryLine."External Tracking No." := LicensePlateHeader."Package Tracking Number";
            LPBOLSummaryLine.Weight := LicensePlateHeader."Shipment Gross Weight";
            LPBOLSummaryLine.Volume := LicensePlateHeader."Shipment Cubage";
            LPBOLSummaryLine.Value := LicensePlateHeader."Insurance Amount";
            //BOLSumLine."Multi Document" := CurrentPostedPackage."Multi Document Package";

            LPBOLSummaryLine."Package Contains Only Packages" := FALSE;
            LPBOLSummaryLine.INSERT;
          END;

          BOLSumLinePackage := LPBOLSummaryLine;
          LevelParent[LPBOLSummaryLine.Level] := LPBOLSummaryLine."Line No.";
          //IF GetRelatedBOLLine(PostedWhseShipmentLine,LicensePlateLine) THEN BEGIN
          LPBOLSummaryLine."Line No." := LPBOLSummaryLine."Line No." + 1;
          LPBOLSummaryLine.Level := CurrentLevel + 1;
          LPBOLSummaryLine."Parent Line No." := LevelParent[LPBOLSummaryLine.Level - 1];
          LPBOLSummaryLine.Type := LPBOLSummaryLine.Type::Item;
          LPBOLSummaryLine."No." := LicensePlateLine."No.";
          LPBOLSummaryLine.Description := LicensePlateLine.Description;
          IF (LicensePlateLine.Quantity < LicensePlateLine."Quantity (Base)") AND
              (LicensePlateLine.Type = LicensePlateLine.Type::Item)
          THEN BEGIN
            ItemUnitOfMeasure.RESET;
            ItemUnitOfMeasure.SETRANGE("Item No.",LicensePlateLine."No.");
            ItemUnitOfMeasure.SETRANGE("Qty. per Unit of Measure",1);
            IF NOT ItemUnitOfMeasure.FIND('-') THEN
              CLEAR(ItemUnitOfMeasure);

            LPBOLSummaryLine."Type Description" :=
              STRSUBSTNO(
                '%1 %2 %3 %4 %5 (%6 %7).',LicensePlateLine.Type,LicensePlateLine."No.",
                LicensePlateLine.Description,LicensePlateLine.Quantity,
                LicensePlateLine."Unit of Measure Code",LicensePlateLine."Quantity (Base)",
                ItemUnitOfMeasure.Code);
          END ELSE
            LPBOLSummaryLine."Type Description" := STRSUBSTNO('%1 %2 %3 %4 %5.',LicensePlateLine.Type,LicensePlateLine."No.",
                                    LicensePlateLine.Description,LicensePlateLine.Quantity, LicensePlateLine."Unit of Measure Code");
          LPBOLSummaryLine."Source Type" := 36;
          LPBOLSummaryLine."Source Subtype" := 1;
          LPBOLSummaryLine."Source ID" := WarehouseShipmentLineLoc1."Source No.";
          LPBOLSummaryLine."Posted Source ID" := WarehouseShipmentLineLoc1."Source No.";
          SetLevelFields(LPBOLSummaryLine,LevelPackageNo,LevelLineNo);
          //LPBOLSummaryLine."UCC No." := ParentUCC128No;
          //LPBOLSummaryLine."UCC No. (Print)" := ParentUCC128NoPrint;
          //LPBOLSummaryLine."RF-ID (Hex)" := ParentRFID;
          LPBOLSummaryLine."External Document No." := SHLoc."External Document No.";
          LPBOLSummaryLine."Package No." := LicensePlateHeader."No.";
          LPBOLSummaryLine."Package Line Line No." := LicensePlateLine."Line No.";
          LPBOLSummaryLine."Package Line Type" := LicensePlateLine.Type;
          LPBOLSummaryLine."Package Line No." := LicensePlateLine."No.";
          LPBOLSummaryLine."Package Line Variant Code" := LicensePlateLine."Variant Code";
          LPBOLSummaryLine."Package Line Unit of Measure" :=
            LicensePlateLine."Unit of Measure Code";
          LPBOLSummaryLine."Package Line Quantity" := LicensePlateLine.Quantity;
          LPBOLSummaryLine."Package Line Quantity (Base)" := LicensePlateLine."Quantity (Base)";
          //LPBOLSummaryLine."Multi Package Line Quantity" := PostedPackageLine."Multi Document Quantity";
          //LPBOLSummaryLine."Multi Package Line Qty. (Base)" :=
          //  PostedPackageLine."Multi Document Qty. (Base)";
          //LPBOLSummaryLine."Multi Document" := CurrentPostedPackage."Multi Document Package";
          //LPBOLSummaryLine."Item UPC/EAN Number" := LicensePlateLine."Item UPC/EAN Number";
          //LPBOLSummaryLine."Item UPC/EAN Number (Print)" :=
          //  PostedPackageLine."Item UPC/EAN Number (Print)";
          //LPBOLSummaryLine."Std. Pack UPC/EAN Number" := PostedPackageLine."Std. Pack UPC/EAN Number";
          //LPBOLSummaryLine."Std. Pack UPC/EAN No. (Print)" :=
          //  PostedPackageLine."Std. Pack UPC/EAN No. (Print)";
          LPBOLSummaryLine."One Unit of Measure Code" := ItemUnitOfMeasure.Code;
          LPBOLSummaryLine.INSERT;

          BOLSumLinePackage."Package Line Quantity" := BOLSumLinePackage."Package Line Quantity" +
                                                       LPBOLSummaryLine."Package Line Quantity";
          BOLSumLinePackage."Package Line Quantity (Base)" := BOLSumLinePackage."Package Line Quantity (Base)" +
                                                              LPBOLSummaryLine."Package Line Quantity (Base)";
          LPNoLoc := LicensePlateLineUsageLoc."License Plate No.";
        UNTIL LicensePlateLineUsageLoc.NEXT = 0;
      END;
    END;

    BEGIN
    {
      TPZ3391 PKS 11052021 New object to use to create BOLsummary line for License Plate
    }
    END.
  }
}

