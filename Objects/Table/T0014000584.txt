OBJECT Table 14000584 Surplus Inventory Value
{
  OBJECT-PROPERTIES
  {
    Date=06/01/19;
    Time=12:00:00 PM;
    Version List=UBP3.01;
  }
  PROPERTIES
  {
    CaptionML=ENU=Surplus Inventory Value;
    LookupPageID=Page14000533;
    DrillDownPageID=Page14000533;
  }
  FIELDS
  {
    { 1   ;   ;Location Code       ;Code10        ;TableRelation=Location.Code;
                                                   CaptionML=ENU=Location Code }
    { 2   ;   ;Item No.            ;Code50        ;TableRelation=Item.No.;
                                                   CaptionML=ENU=Item No. }
    { 3   ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=ENU=Variant Code }
    { 11  ;   ;Surplus Quantity    ;Decimal       ;CaptionML=ENU=Surplus Quantity;
                                                   DecimalPlaces=0:5 }
    { 12  ;   ;Unit of Measure Code;Code10        ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=ENU=Unit of Measure Code }
    { 13  ;   ;Qty. per Unit of Measure;Decimal   ;CaptionML=ENU=Qty. per Unit of Measure;
                                                   DecimalPlaces=0:5 }
    { 14  ;   ;Surplus Quantity (Base);Decimal    ;CaptionML=ENU=Surplus Quantity (Base);
                                                   DecimalPlaces=0:5 }
    { 15  ;   ;Unit Cost           ;Decimal       ;CaptionML=ENU=Unit Cost }
    { 16  ;   ;Extended Cost       ;Decimal       ;CaptionML=ENU=Extended Cost }
    { 17  ;   ;Surplus Date        ;Date          ;CaptionML=ENU=Surplus Date }
    { 18  ;   ;Quantity To Transfer;Decimal       ;CaptionML=ENU=Quantity To Transfer;
                                                   DecimalPlaces=0:5 }
    { 19  ;   ;Quantity Transferred;Decimal       ;CaptionML=ENU=Quantity Transferred;
                                                   DecimalPlaces=0:5 }
    { 20  ;   ;Transfer To Location Code;Code10   ;TableRelation=Location.Code;
                                                   CaptionML=ENU=Transfer To Location Code }
    { 21  ;   ;Surplus Available   ;Boolean       ;CaptionML=ENU=Surplus Available }
    { 22  ;   ;Suggested Order No. ;Code20        ;CaptionML=ENU=Suggested Order No. }
    { 23  ;   ;Buy-from Vendor No. ;Code20        ;TableRelation=Vendor.No.;
                                                   CaptionML=ENU=Buy-from Vendor No. }
    { 24  ;   ;Suggested Order Line No.;Integer   ;CaptionML=ENU=Suggested Order Line No. }
    { 25  ;   ;On Hand Qty. (Base) ;Decimal       ;CaptionML=ENU=On Hand Qty. (Base);
                                                   DecimalPlaces=0:5 }
    { 26  ;   ;Good Qty. (Base)    ;Decimal       ;CaptionML=ENU=Good Qty. (Base);
                                                   DecimalPlaces=0:5 }
    { 28  ;   ;Excess Quantity (Base);Decimal     ;CaptionML=ENU=Excess Quantity (Base);
                                                   DecimalPlaces=0:5 }
    { 29  ;   ;On Hand Amount      ;Decimal       ;CaptionML=ENU=On Hand Amount }
    { 30  ;   ;Good Amount         ;Decimal       ;CaptionML=ENU=Good Amount }
    { 31  ;   ;Surplus Amount      ;Decimal       ;CaptionML=ENU=Surplus Amount }
    { 32  ;   ;Excess Amount       ;Decimal       ;CaptionML=ENU=Excess Amount }
    { 33  ;   ;Nonstock Item       ;Boolean       ;CaptionML=ENU=Nonstock Item }
    { 34  ;   ;Excess Date         ;Date          ;CaptionML=ENU=Excess Date }
    { 35  ;   ;Lead Time Horizon Date;Date        ;CaptionML=ENU=Lead Time Horizon Date }
    { 36  ;   ;Item Class Ranking  ;Integer       ;CaptionML=ENU=Item Class Ranking }
    { 37  ;   ;Item Class Description;Text30      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Item Class".Description WHERE (Ranking=FIELD(Item Class Ranking)));
                                                   CaptionML=ENU=Item Class Description }
    { 38  ;   ;Ranking Code        ;Code10        ;CaptionML=ENU=Ranking Code }
    { 39  ;No ;Suggested Transfer Out;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Inventory Need"."From Priority" WHERE (Item No.=FIELD(Item No.),
                                                                                                            To Location Code=FIELD(Location Code),
                                                                                                            Variant Code=FIELD(Variant Code)));
                                                   CaptionML=ENU=Suggested Transfer Out;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 40  ;No ;Suggested Transfer In;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Inventory Need"."From Priority" WHERE (Item No.=FIELD(Item No.),
                                                                                                           To Location Code=FIELD(Location Code),
                                                                                                           Variant Code=FIELD(Variant Code)));
                                                   CaptionML=ENU=Suggested Transfer In;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 41  ;   ;Outstanding Surplus Qty (Base);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Surplus Entry".Quantity WHERE (Item No.=FIELD(Item No.),
                                                                                                   Location Code=FIELD(Location Code),
                                                                                                   Variant Code=FIELD(Variant Code)));
                                                   CaptionML=ENU=Outstanding Surplus Qty (Base);
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 42  ;   ;Replenishment Source Type;Option   ;CaptionML=ENU=Replenishment Source Type;
                                                   OptionCaptionML=ENU=" ,Location,Vendor,Production,Assembly";
                                                   OptionString=[ ,Location,Vendor,Production,Assembly] }
    { 43  ;   ;Replenishment Source Code;Code20   ;TableRelation=IF (Replenishment Source Type=CONST(Location)) Location.Code
                                                                 ELSE IF (Replenishment Source Type=CONST(Vendor)) Vendor.No.
                                                                 ELSE IF (Replenishment Source Type=CONST(Production)) "Production Item Group".Code;
                                                   CaptionML=ENU=Replenishment Source Code }
    { 44  ;   ;Item Category Code  ;Code20        ;TableRelation="Item Category".Code;
                                                   CaptionML=ENU=Item Category Code }
    { 45  ;   ;Product Group Code  ;Code10        ;TableRelation="Product Group".Code WHERE (Item Category Code=FIELD(Item Category Code));
                                                   CaptionML=ENU=Product Group Code }
    { 46  ;   ;First Stocked Date  ;Date          ;CaptionML=ENU=First Stocked Date }
    { 47  ;   ;Quantity Surplus Threshold;Decimal ;CaptionML=ENU=Quantity Surplus Threshold;
                                                   DecimalPlaces=0:5 }
    { 48  ;   ;Quantity Excess Threshold;Decimal  ;CaptionML=ENU=Quantity Surplus Threshold;
                                                   DecimalPlaces=0:5 }
    { 49  ;   ;Excess Quantity     ;Decimal       ;CaptionML=ENU=Excess Quantity;
                                                   DecimalPlaces=0:5 }
    { 100 ;   ;Date Updated        ;Date          ;CaptionML=ENU=Date Updated }
    { 101 ;   ;Time Updated        ;Time          ;CaptionML=ENU=Time Updated }
    { 102 ;   ;Surplus Counter     ;Integer       ;CaptionML=ENU=Surplus Counter }
    { 103 ;   ;Excess Counter      ;Integer       ;CaptionML=ENU=Excess Counter }
  }
  KEYS
  {
    {    ;Item No.,Location Code,Variant Code     ;SumIndexFields=Quantity To Transfer,Extended Cost;
                                                   Clustered=Yes }
    {    ;Item No.,Variant Code,Surplus Available  }
    {    ;Buy-from Vendor No.,Suggested Order No.,Transfer To Location Code,Location Code,Item No.,Variant Code;
                                                   SumIndexFields=Quantity Transferred }
    {    ;Item No.,Variant Code,Suggested Order No.;
                                                   SumIndexFields=Quantity To Transfer }
    {    ;Location Code,Item No.                   }
    {    ;Location Code,On Hand Amount             }
    {    ;Location Code,Excess Amount              }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CalcSurplus@1240030000 : Codeunit 14000577;

    PROCEDURE ShowForecast@1240030001();
    VAR
      ProcUnit@1240020000 : Record 14000555;
      ForecastView@1000 : Page 14002661;
    BEGIN
      ProcUnit.SETRANGE("Location Code","Location Code");
      ProcUnit.SETRANGE("Item No.","Item No.");
      IF ProcUnit."Summarize Variant Detail" THEN
        ProcUnit.SETRANGE("Variant Code",'')
      ELSE
        ProcUnit.SETRANGE("Variant Code","Variant Code");
      ProcUnit.FINDFIRST;
      CLEAR(ForecastView);
      IF "Surplus Date" <> 0D THEN
        ForecastView.SetLTHDate("Surplus Date");
      ForecastView.SetProcUnitandSourceNo(ProcUnit,'');
      ForecastView.RUNMODAL;
    END;

    PROCEDURE ShowLocInvRollUp@1240030004();
    VAR
      Text001@1240030000 : TextConst 'ENU=Location Inventory Rollup is not Enabled';
      LocInvRollUpRTC@1240020000 : Page 14097475;
      InvMgtSetup@1240020001 : Record 14000551;
      ProcUnit@1240020002 : Record 14000555;
      UBP@1240020003 : Codeunit 14000564;
    BEGIN
      InvMgtSetup.GET;
      IF InvMgtSetup."Roll Up Via Repl. Path" THEN BEGIN
        ProcUnit.GET("Location Code","Item No.","Variant Code");
        IF "Surplus Date" = 0D THEN
          "Surplus Date" := UBP.GetLeadTimeHorizHub(ProcUnit);
        LocInvRollUpRTC.LoadRollUPLines(ProcUnit, "Surplus Date");
        LocInvRollUpRTC.RUNMODAL;
      END ELSE
        ERROR(Text001);
    END;

    BEGIN
    END.
  }
}

