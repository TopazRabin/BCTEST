OBJECT Table 14123655 ES Role Builder Permission
{
  OBJECT-PROPERTIES
  {
    Date=03/05/18;
    Time=12:00:00 PM;
    Version List=ES1.41.46;
  }
  PROPERTIES
  {
    OnInsert=VAR
               ESRoleDetail@1240520008 : Record 14123653;
             BEGIN
               ESSecuritySetup.GET;
               ESSecuritySetup.InFREERoles("Role ID",TRUE);

               ESRole.GET("Role ID");
               IF NOT AllowZeroNoQuestion THEN BEGIN
                 IF ("Object ID" = 0) AND NOT ESSecuritySetup."Allow 0 Permission" THEN
                   IF NOT CONFIRM(Text001,FALSE) THEN
                     ERROR(Text002,FIELDCAPTION("Object ID"));

                 SetDefaultPermission;

                 ESRoleBuilderPerm.RESET;
                 ESRoleBuilderPerm.SETRANGE("Role ID","Role ID");
                 ESRoleBuilderPerm.SETRANGE("Object Type","Object Type");
                 ESRoleBuilderPerm.SETRANGE("Object ID",0);
                 IF ESRoleBuilderPerm.FIND('-') THEN
                   MESSAGE(Text009,FIELDCAPTION("Object Type"),"Object Type");
               END;

               IF NOT ChangeWithNoComment THEN
                 ESRole.Comment(1,STRSUBSTNO(Text003,TABLECAPTION,"Object Type","Object ID"));

               ESRoleDetail.GET("Role ID");
               ESRoleDetail.TESTFIELD("Role Group ID",'');

               "Created By User" := USERID;
               "Created Date Time" := CURRENTDATETIME;
             END;

    OnModify=BEGIN
               ESSecuritySetup.InFREERoles("Role ID",TRUE);

               ESRole.GET("Role ID");
               IF NOT ChangeWithNoComment THEN
                 ESRole.Comment(1,STRSUBSTNO(Text004,TABLECAPTION,"Object Type","Object ID"));
             END;

    OnDelete=BEGIN
               ESSecuritySetup.InFREERoles("Role ID",TRUE);

               ESRole.GET("Role ID");
               IF NOT ChangeWithNoComment THEN
                 ESRole.Comment(1,STRSUBSTNO(Text005,TABLECAPTION,"Object Type","Object ID"));

               Comment(4,'');
             END;

    OnRename=BEGIN
               ERROR(Text006);
             END;

    CaptionML=ENU=Builder Permission;
    LookupPageID=Page14123671;
    DrillDownPageID=Page14123671;
  }
  FIELDS
  {
    { 1   ;   ;Role ID             ;Code20        ;TableRelation="ES Role"."Role ID";
                                                   CaptionML=ENU=Permission Set ID;
                                                   NotBlank=Yes }
    { 2   ;   ;Role Name           ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ES Role Detail"."Role Name" WHERE (Role ID=FIELD(Role ID)));
                                                   CaptionML=ENU=Permission Set Name;
                                                   Editable=No }
    { 3   ;   ;Object Type         ;Option        ;OnValidate=BEGIN
                                                                ESObjectInfo.RESET;
                                                                ESObjectInfo.SETRANGE("Object Type","Object Type");
                                                                ESObjectInfo.FIND('-');

                                                                CALCFIELDS("Object Caption","To Object Caption");
                                                              END;

                                                   CaptionML=ENU=Object Type;
                                                   OptionCaptionML=ENU=TableData,Table,,Report,,Codeunit,XMLport,MenuSuite,Page,Query,System;
                                                   OptionString=TableData,Table,,Report,,Codeunit,XMLport,MenuSuite,Page,Query,System }
    { 4   ;   ;Object ID           ;Integer       ;TableRelation="ES Object Information"."Object ID" WHERE (Object Type=FIELD(Object Type));
                                                   OnValidate=BEGIN
                                                                IF "Object ID" = 0 THEN
                                                                  "To Object ID" := 0
                                                                ELSE
                                                                  IF "Object ID" > "To Object ID" THEN
                                                                    "To Object ID" := 0;

                                                                CALCFIELDS("Object Caption");
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Object ID }
    { 5   ;   ;Object Caption      ;Text249       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ES Object Information"."Object Caption" WHERE (Object Type=FIELD(Object Type),
                                                                                                                      Object ID=FIELD(Object ID)));
                                                   CaptionML=ENU=Object Caption;
                                                   Editable=No }
    { 6   ;   ;Read Permission     ;Option        ;InitValue=Yes;
                                                   CaptionML=ENU=Read Permission;
                                                   OptionCaptionML=ENU=" ,Yes,Indirect";
                                                   OptionString=[ ,Yes,Indirect] }
    { 7   ;   ;Insert Permission   ;Option        ;InitValue=Yes;
                                                   CaptionML=ENU=Insert Permission;
                                                   OptionCaptionML=ENU=" ,Yes,Indirect";
                                                   OptionString=[ ,Yes,Indirect] }
    { 8   ;   ;Modify Permission   ;Option        ;InitValue=Yes;
                                                   CaptionML=ENU=Modify Permission;
                                                   OptionCaptionML=ENU=" ,Yes,Indirect";
                                                   OptionString=[ ,Yes,Indirect] }
    { 9   ;   ;Delete Permission   ;Option        ;InitValue=Yes;
                                                   CaptionML=ENU=Delete Permission;
                                                   OptionCaptionML=ENU=" ,Yes,Indirect";
                                                   OptionString=[ ,Yes,Indirect] }
    { 10  ;   ;Execute Permission  ;Option        ;InitValue=Yes;
                                                   CaptionML=ENU=Execute Permission;
                                                   OptionCaptionML=ENU=" ,Yes,Indirect";
                                                   OptionString=[ ,Yes,Indirect] }
    { 11  ;   ;Security Filter     ;TableFilter   ;TableIDExpr="Object ID";
                                                   CaptionML=ENU=Security Filter }
    { 1002;   ;Origin              ;Option        ;InitValue=Builder;
                                                   OnValidate=BEGIN
                                                                IF Origin <> Origin::Builder THEN BEGIN
                                                                  TESTFIELD("Extend Insert Permissions",FALSE);
                                                                  TESTFIELD("Add Related Permissions",FALSE);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Origin;
                                                   OptionCaptionML=ENU=" ,Recorded,Additional,Object Information,Relation,Copied,History Table,Security Table,Builder";
                                                   OptionString=[ ,Recorded,Additional,Object Information,Relation,Copied,History Table,Security Table,Builder] }
    { 1003;   ;Do not include Additional;Boolean  ;OnValidate=BEGIN
                                                                IF "Do not include Additional" THEN
                                                                  TESTFIELD("Add Related Permissions",FALSE);
                                                              END;

                                                   CaptionML=ENU=Do not include Additional }
    { 1004;   ;Source/DataItem Table ID;Integer   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ES Relation"."Relation Object ID" WHERE (Object Type=FIELD(Object Type),
                                                                                                                Object ID=FIELD(Object ID),
                                                                                                                Type=FILTER(Source Table|Data Item)));
                                                   CaptionML=ENU=Source/DataItem Table ID;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 1005;   ;Limited Access Object;Boolean      ;FieldClass=FlowField;
                                                   CalcFormula=Exist("ES Object Property" WHERE (Object Type=FIELD(Object Type),
                                                                                                 Object ID=FIELD(Object ID),
                                                                                                 Object Level Permissions=CONST(Yes)));
                                                   CaptionML=ENU=Limited Access Object;
                                                   Editable=No }
    { 1006;   ;Extend Insert Permissions;Boolean  ;OnValidate=BEGIN
                                                                IF "Extend Insert Permissions" THEN BEGIN
                                                                  TESTFIELD("Object Type","Object Type"::TableData);

                                                                  IF Origin <> Origin::Builder THEN
                                                                    Origin := Origin::Builder;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Extend Insert Permissions }
    { 1007;   ;Add Related Permissions;Boolean    ;OnValidate=BEGIN
                                                                IF "Add Related Permissions" THEN BEGIN
                                                                  TESTFIELD("Do not include Additional",FALSE);

                                                                  IF Origin <> Origin::Builder THEN
                                                                    Origin := Origin::Builder;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Add Related Permissions }
    { 1008;   ;Role for Both Clients;Boolean      ;OnValidate=BEGIN
                                                                IF "Role for Both Clients" THEN
                                                                  IF "Object Type" <> "Object Type"::Page THEN
                                                                    TESTFIELD("Object Type","Object Type"::"2");
                                                              END;

                                                   CaptionML=ENU=Permission Set for Both Clients }
    { 1009;   ;Limited License Object;Boolean     ;FieldClass=FlowField;
                                                   CalcFormula=Exist("ES Object Property" WHERE (Object Type=FIELD(Object Type),
                                                                                                 Object ID=FIELD(Object ID),
                                                                                                 Limited License Object=CONST(Yes)));
                                                   CaptionML=ENU=Limited License Object;
                                                   Editable=No }
    { 1010;   ;Created By User     ;Code50        ;CaptionML=ENU=Created By User;
                                                   Editable=No }
    { 1011;   ;Created Date Time   ;DateTime      ;CaptionML=ENU=Created Date Time;
                                                   Editable=No }
    { 1012;   ;Free Access Object  ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("ES Object Property" WHERE (Object Type=FIELD(Object Type),
                                                                                                 Object ID=FIELD(Object ID),
                                                                                                 Object Level Permissions=CONST(No),
                                                                                                 Limited License Object=CONST(No)));
                                                   CaptionML=ENU=Free Access Object;
                                                   Editable=No }
    { 1013;   ;Object Information Exists;Boolean  ;FieldClass=FlowField;
                                                   CalcFormula=Exist("ES Object Information" WHERE (Object Type=FIELD(Object Type),
                                                                                                    Object ID=FIELD(Object ID)));
                                                   CaptionML=ENU=Object Information Exists;
                                                   Editable=No }
    { 1014;   ;To Object ID        ;Integer       ;TableRelation="ES Object Information"."Object ID" WHERE (Object Type=FIELD(Object Type),
                                                                                                            Object ID=FILTER(0..1999999999));
                                                   OnValidate=BEGIN
                                                                IF "To Object ID" <> 0 THEN BEGIN
                                                                  IF "Object Type" = "Object Type"::System THEN
                                                                    ERROR(Text013,FIELDCAPTION("Object Type"),"Object Type");

                                                                  TESTFIELD("Object ID");
                                                                  TESTFIELD("Override Permission",FALSE);

                                                                  IF "Object ID" > "To Object ID" THEN
                                                                    ERROR(Text014,FIELDCAPTION("To Object ID"),"Object ID");
                                                                END;

                                                                CALCFIELDS("To Object Caption");
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=To Object ID;
                                                   MinValue=0;
                                                   MaxValue=1999999999 }
    { 1015;   ;To Object Caption   ;Text249       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("ES Object Information"."Object Caption" WHERE (Object Type=FIELD(Object Type),
                                                                                                                      Object ID=FIELD(To Object ID)));
                                                   OnValidate=BEGIN
                                                                IF "To Object ID" <> 0 THEN
                                                                  IF "To Object ID" < "Object ID" THEN
                                                                    ERROR(Text011,FIELDCAPTION("To Object ID"),FIELDCAPTION("Object ID"));
                                                              END;

                                                   CaptionML=ENU=To Object Caption;
                                                   Editable=No }
    { 1016;   ;Security Filter Object;Boolean     ;FieldClass=FlowField;
                                                   CalcFormula=Exist("ES Object Property" WHERE (Object Type=FIELD(Object Type),
                                                                                                 Object ID=FIELD(Object ID),
                                                                                                 Security Filter Table=CONST(Yes)));
                                                   CaptionML=ENU=Security Filter Object;
                                                   Editable=No }
    { 1017;   ;Limited User Included Object;Boolean;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Exist("ES Object Property" WHERE (Object Type=FIELD(Object Type),
                                                                                                 Object ID=FIELD(Object ID),
                                                                                                 Limited User Table Access=CONST(Included)));
                                                   CaptionML=ENU=Limited User Included Object;
                                                   Editable=No }
    { 1018;   ;Override Permission ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD("Object ID");
                                                                TESTFIELD("To Object ID",0);
                                                              END;

                                                   CaptionML=ENU=Override Permission }
  }
  KEYS
  {
    {    ;Role ID,Object Type,Object ID           ;Clustered=Yes }
    {    ;Object Type,Object ID                    }
    {    ;Created Date Time                        }
    {    ;Created By User,Created Date Time        }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ESSecuritySetup@1240520008 : Record 14123521;
      ESRole@1240520013 : Record 14123505;
      ESRoleBuilderPerm@1240520011 : Record 14123655;
      ESObjectInfo@1240520001 : Record 14123509;
      AllowZeroNoQuestion@1240520010 : Boolean;
      Text001@1001 : TextConst 'ENU=Insert Permission for 0?';
      Text002@1002 : TextConst 'ENU=%1 must be entered';
      Text003@1003 : TextConst 'ENU=Inserted %1 %2 %3';
      Text004@1004 : TextConst 'ENU=Modified %1 %2 %3';
      Text005@1005 : TextConst 'ENU=Deleted %1 %2 %3';
      Text006@1006 : TextConst 'ENU=Rename not allowed.';
      Text007@1007 : TextConst 'ENU=%1 must be filtered.';
      Text008@1008 : TextConst 'ENU=Filter on %1 must be a simple filter.';
      Text009@1009 : TextConst 'ENU=0 permission for %1 %2 exists.';
      Text010@1240520012 : TextConst 'ENU=Permissions';
      Text011@1010 : TextConst 'ENU=%1 cannot be less than %2.';
      Text012@1011 : TextConst 'ENU=%1 %2 inserted, %3 already existed.';
      Text013@1012 : TextConst 'ENU=Ranges are not supported for %1 %2.';
      Text014@1013 : TextConst 'ENU=%1 cannot be less than %2.';
      ChangeWithNoComment@1240520002 : Boolean;

    PROCEDURE FormatPermissionString@1240520009() : Text[30];
    VAR
      ESFormatPermssion@1240520008 : Codeunit 14123506;
    BEGIN
      EXIT(
        ESFormatPermssion.FormatPermissionString(
          "Read Permission","Insert Permission","Modify Permission","Delete Permission",
          "Execute Permission"));
    END;

    PROCEDURE SetAllowZeroNoQuestion@1240520010(NoQuestion@1240520008 : Boolean;NoComment@1240520001 : Boolean);
    BEGIN
      AllowZeroNoQuestion := NoQuestion;
      ChangeWithNoComment := NoComment;
    END;

    PROCEDURE UpdateObjectCaption@1240520014();
    VAR
      AllObjWithCaption@1240520008 : Record 2000000058;
    BEGIN
      IF "Object Caption" <> '' THEN
        EXIT;

      IF AllObjWithCaption.GET("Object Type","Object ID") THEN
        "Object Caption" := AllObjWithCaption."Object Caption";
    END;

    PROCEDURE ObjectWhereUsed@1240520011();
    VAR
      ESObjectWhereUsed@1240520008 : Page 14123562;
    BEGIN
      CLEAR(ESObjectWhereUsed);
      ESObjectWhereUsed.InitObject("Object Type","Object ID");
      ESObjectWhereUsed.RUN;
    END;

    PROCEDURE AddPermissionsFrom@1240520013(VAR ESRoleBuilderPerm@1240520008 : Record 14123655;TableNo@1240520009 : Integer);
    VAR
      ESRoleDetail@1240520010 : Record 14123653;
    BEGIN
      IF ESRoleBuilderPerm."Role ID" = '' THEN BEGIN
        IF ESRoleBuilderPerm.GETFILTER("Role ID") = '' THEN BEGIN
          ESRoleBuilderPerm.FILTERGROUP(4);
          IF ESRoleBuilderPerm.GETFILTER("Role ID") = '' THEN
            ERROR(Text007,ESRoleBuilderPerm.FIELDCAPTION("Role ID"));
        END;

        IF ESRoleBuilderPerm.GETRANGEMIN("Role ID") <>
           ESRoleBuilderPerm.GETRANGEMAX("Role ID")
        THEN
          ERROR(
            Text008,ESRoleBuilderPerm.FIELDCAPTION("Role ID"));

        ESRoleDetail.GET(ESRoleBuilderPerm.GETRANGEMIN("Role ID"));

        ESRoleBuilderPerm.FILTERGROUP(0);
      END ELSE
        ESRoleDetail.GET(ESRoleBuilderPerm."Role ID");

      CASE TableNo OF
        DATABASE::"ES Object Information":
          ESRoleDetail.AddPermsFromObjectInfo;
        DATABASE::"ES Relation":
          ESRoleDetail.AddPermsFromRelation;
      END;
    END;

    PROCEDURE InsertMinimumLoginPerm@1240520015(VAR ESRoleBuilderPerm@1240520008 : Record 14123655;ShowStatus@1240520001 : Boolean);
    VAR
      ESRoleDetail@1240520009 : Record 14123653;
      InsertedPermissions@1240520011 : Integer;
      ExistingPermissions@1240520010 : Integer;
    BEGIN
      ESSecuritySetup.GET;

      IF ESRoleBuilderPerm."Role ID" = '' THEN BEGIN
        IF ESRoleBuilderPerm.GETFILTER("Role ID") = '' THEN BEGIN
          ESRoleBuilderPerm.FILTERGROUP(4);
          IF ESRoleBuilderPerm.GETFILTER("Role ID") = '' THEN
            ERROR(Text007,ESRoleBuilderPerm.FIELDCAPTION("Role ID"));
        END;

        IF ESRoleBuilderPerm.GETRANGEMIN("Role ID") <>
           ESRoleBuilderPerm.GETRANGEMAX("Role ID")
        THEN
          ERROR(
            Text008,ESRoleBuilderPerm.FIELDCAPTION("Role ID"));

        ESRoleDetail.GET(ESRoleBuilderPerm.GETRANGEMIN("Role ID"));

        ESRoleBuilderPerm.FILTERGROUP(0);
      END ELSE
        ESRoleDetail.GET(ESRoleBuilderPerm."Role ID");

      ESSecuritySetup.InsertMinimumLoginPerm(
        ESRoleDetail."Role ID",InsertedPermissions,ExistingPermissions,TRUE);

      IF ShowStatus THEN
        MESSAGE(
          Text012,
          InsertedPermissions,ESRoleBuilderPerm.TABLECAPTION,ExistingPermissions);
    END;

    PROCEDURE InsertFLADSPerm@1240520001(VAR ESRoleBuilderPerm@1240520008 : Record 14123655);
    VAR
      ESRoleDetail@1240520009 : Record 14123653;
      InsertedPermissions@1240520011 : Integer;
      ExistingPermissions@1240520010 : Integer;
    BEGIN
      ESSecuritySetup.GET;

      IF ESRoleBuilderPerm."Role ID" = '' THEN BEGIN
        IF ESRoleBuilderPerm.GETFILTER("Role ID") = '' THEN BEGIN
          ESRoleBuilderPerm.FILTERGROUP(4);
          IF ESRoleBuilderPerm.GETFILTER("Role ID") = '' THEN
            ERROR(Text007,ESRoleBuilderPerm.FIELDCAPTION("Role ID"));
        END;

        IF ESRoleBuilderPerm.GETRANGEMIN("Role ID") <>
           ESRoleBuilderPerm.GETRANGEMAX("Role ID")
        THEN
          ERROR(
            Text008,ESRoleBuilderPerm.FIELDCAPTION("Role ID"));

        ESRoleDetail.GET(ESRoleBuilderPerm.GETRANGEMIN("Role ID"));

        ESRoleBuilderPerm.FILTERGROUP(0);
      END ELSE
        ESRoleDetail.GET(ESRoleBuilderPerm."Role ID");

      InsertRoleBuilderPerm(
        ESRoleDetail,ESRoleBuilderPerm."Object Type"::TableData,14123801,
        1,0,0,0,0,InsertedPermissions,ExistingPermissions);
      InsertRoleBuilderPerm(
        ESRoleDetail,ESRoleBuilderPerm."Object Type"::TableData,14123802,
        1,0,0,0,0,InsertedPermissions,ExistingPermissions);
      InsertRoleBuilderPerm(
        ESRoleDetail,ESRoleBuilderPerm."Object Type"::TableData,14123803,
        1,0,0,0,0,InsertedPermissions,ExistingPermissions);
      InsertRoleBuilderPerm(
        ESRoleDetail,ESRoleBuilderPerm."Object Type"::TableData,14123804,
        1,0,0,0,0,InsertedPermissions,ExistingPermissions);
      InsertRoleBuilderPerm(
        ESRoleDetail,ESRoleBuilderPerm."Object Type"::TableData,14123805,
        1,0,0,0,0,InsertedPermissions,ExistingPermissions);
      InsertRoleBuilderPerm(
        ESRoleDetail,ESRoleBuilderPerm."Object Type"::TableData,14123806,
        1,0,0,0,0,InsertedPermissions,ExistingPermissions);
      InsertRoleBuilderPerm(
        ESRoleDetail,ESRoleBuilderPerm."Object Type"::TableData,14123807,
        1,0,0,0,0,InsertedPermissions,ExistingPermissions);
      InsertRoleBuilderPerm(
        ESRoleDetail,ESRoleBuilderPerm."Object Type"::TableData,14123808,
        1,0,0,0,0,InsertedPermissions,ExistingPermissions);
      InsertRoleBuilderPerm(
        ESRoleDetail,ESRoleBuilderPerm."Object Type"::TableData,14123809,
        1,0,0,0,0,InsertedPermissions,ExistingPermissions);
      InsertRoleBuilderPerm(
        ESRoleDetail,ESRoleBuilderPerm."Object Type"::TableData,14123811,
        1,0,0,0,0,InsertedPermissions,ExistingPermissions);
      InsertRoleBuilderPerm(
        ESRoleDetail,ESRoleBuilderPerm."Object Type"::TableData,14123812,
        1,0,0,0,0,InsertedPermissions,ExistingPermissions);
      InsertRoleBuilderPerm(
        ESRoleDetail,ESRoleBuilderPerm."Object Type"::TableData,14123813,
        1,0,0,0,0,InsertedPermissions,ExistingPermissions);
      InsertRoleBuilderPerm(
        ESRoleDetail,ESRoleBuilderPerm."Object Type"::TableData,14123817,
        1,0,0,0,0,InsertedPermissions,ExistingPermissions);
      InsertRoleBuilderPerm(
        ESRoleDetail,ESRoleBuilderPerm."Object Type"::TableData,14123818,
        1,0,0,0,0,InsertedPermissions,ExistingPermissions);
      InsertRoleBuilderPerm(
        ESRoleDetail,ESRoleBuilderPerm."Object Type"::TableData,14123819,
        1,0,0,0,0,InsertedPermissions,ExistingPermissions);

      InsertRoleBuilderPerm(
        ESRoleDetail,ESRoleBuilderPerm."Object Type"::Codeunit,14123801,
        0,0,0,0,1,InsertedPermissions,ExistingPermissions);
      InsertRoleBuilderPerm(
        ESRoleDetail,ESRoleBuilderPerm."Object Type"::Codeunit,14123805,
        0,0,0,0,1,InsertedPermissions,ExistingPermissions);
      InsertRoleBuilderPerm(
        ESRoleDetail,ESRoleBuilderPerm."Object Type"::Codeunit,14123806,
        0,0,0,0,1,InsertedPermissions,ExistingPermissions);
      InsertRoleBuilderPerm(
        ESRoleDetail,ESRoleBuilderPerm."Object Type"::Codeunit,14123811,
        0,0,0,0,1,InsertedPermissions,ExistingPermissions);
      InsertRoleBuilderPerm(
        ESRoleDetail,ESRoleBuilderPerm."Object Type"::Codeunit,14123812,
        0,0,0,0,1,InsertedPermissions,ExistingPermissions);
      InsertRoleBuilderPerm(
        ESRoleDetail,ESRoleBuilderPerm."Object Type"::Codeunit,14123814,
        0,0,0,0,1,InsertedPermissions,ExistingPermissions);

      MESSAGE(
        Text012,
        InsertedPermissions,ESRoleBuilderPerm.TABLECAPTION,ExistingPermissions);
    END;

    PROCEDURE InsertRoleBuilderPerm@1240520016(ESRoleDetail@1240520009 : Record 14123653;ObjectType@1240520008 : Integer;ObjectID@1240520010 : Integer;ReadPerm@1240520011 : Integer;InsertPerm@1240520012 : Integer;ModifyPerm@1240520013 : Integer;DeletePerm@1240520014 : Integer;ExecutePerm@1240520015 : Integer;VAR InsertedPermissions@1240520017 : Integer;VAR ExistingPermissions@1240520018 : Integer);
    VAR
      ESRoleBuilderPerm@1240520016 : Record 14123655;
      ESObjectInfo@1240520019 : Record 14123509;
    BEGIN
      IF NOT ESRoleBuilderPerm.GET(ESRoleDetail."Role ID",ObjectType,ObjectID) THEN BEGIN
        IF ESObjectInfo.GET(ObjectType,ObjectID) OR (ObjectID = 0) THEN BEGIN
          ESRoleBuilderPerm.INIT;
          ESRoleBuilderPerm."Role ID" := ESRoleDetail."Role ID";
          ESRoleBuilderPerm."Object Type" := ObjectType;
          ESRoleBuilderPerm."Object ID" := ObjectID;
          IF ObjectID = 0 THEN
            ESRoleBuilderPerm.SetAllowZeroNoQuestion(TRUE,FALSE);
          ESRoleBuilderPerm.INSERT(TRUE);
          ESRoleBuilderPerm."Read Permission" := ReadPerm;
          ESRoleBuilderPerm."Insert Permission" := InsertPerm;
          ESRoleBuilderPerm."Modify Permission" := ModifyPerm;
          ESRoleBuilderPerm."Delete Permission" := DeletePerm;
          ESRoleBuilderPerm."Execute Permission" := ExecutePerm;
          ESRoleBuilderPerm.MODIFY(TRUE);

          InsertedPermissions := InsertedPermissions + 1;
        END;
      END ELSE
        ExistingPermissions := ExistingPermissions + 1;
    END;

    PROCEDURE SetDefaultPermission@1240520012();
    BEGIN
      IF ("Read Permission" = "Read Permission"::Yes) AND
         ("Insert Permission" = "Insert Permission"::Yes) AND
         ("Modify Permission" = "Modify Permission"::Yes) AND
         ("Delete Permission" = "Delete Permission"::Yes) AND
         ("Execute Permission" = "Execute Permission"::Yes)
      THEN BEGIN
        ESSecuritySetup.GET;
        IF "Object Type" = "Object Type"::TableData THEN BEGIN
          "Read Permission" := ESSecuritySetup."TableData Read Perm. Default";
          "Insert Permission" := ESSecuritySetup."TableData Insert Perm. Default";
          "Modify Permission" := ESSecuritySetup."TableData Modify Perm. Default";
          "Delete Permission" := ESSecuritySetup."TableData Delete Perm. Default";
          "Execute Permission" := ESSecuritySetup."TableData Execute Perm Default";
        END ELSE BEGIN
          "Read Permission" := ESSecuritySetup."Object Read Perm. Default";
          "Insert Permission" := ESSecuritySetup."Object Insert Perm. Default";
          "Modify Permission" := ESSecuritySetup."Object Modify Perm. Default";
          "Delete Permission" := ESSecuritySetup."Object Delete Perm. Default";
          "Execute Permission" := ESSecuritySetup."Object Execute Perm. Default";
        END;
      END;
    END;

    PROCEDURE FormatAsTextLine@1240520064(ShortPermissionText@1240520009 : Boolean;VAR ESTextLine@1240520011 : Record 14123520;NoOfRelatedKeyFields@1240520012 : Integer;CalcFlowFields@1240520013 : Boolean;UserDateTimeDetails@1240520014 : Boolean;OriginDetails@1240520015 : Boolean) : Boolean;
    VAR
      ESFormatMgt@1240520016 : Codeunit 14123505;
      RecRef@1240520010 : RecordRef;
    BEGIN
      ESFormatMgt.NewRecord(
        TABLECAPTION,"Role ID",FORMAT("Object Type"),FORMAT("Object ID"),
        '','','','','','','',3,NoOfRelatedKeyFields);
      IF "To Object ID" <> 0 THEN
        ESFormatMgt.AddField(FIELDCAPTION("To Object ID"),FORMAT("To Object ID"));
      IF NOT ShortPermissionText THEN BEGIN
        ESFormatMgt.AddField(FIELDCAPTION("Read Permission"),FORMAT("Read Permission"));
        ESFormatMgt.AddField(FIELDCAPTION("Insert Permission"),FORMAT("Insert Permission"));
        ESFormatMgt.AddField(FIELDCAPTION("Modify Permission"),FORMAT("Modify Permission"));
        ESFormatMgt.AddField(FIELDCAPTION("Delete Permission"),FORMAT("Delete Permission"));
        ESFormatMgt.AddField(FIELDCAPTION("Execute Permission"),FORMAT("Execute Permission"));
      END ELSE
        ESFormatMgt.AddField(Text010,FormatPermissionString);
      ESFormatMgt.AddField(FIELDCAPTION("Security Filter"),FORMAT("Security Filter"));

      IF OriginDetails THEN BEGIN
        ESFormatMgt.AddField(FIELDCAPTION(Origin),FORMAT(Origin));
        IF "Do not include Additional" THEN
          ESFormatMgt.AddField(
            FIELDCAPTION("Do not include Additional"),FORMAT("Do not include Additional"));
        IF "Extend Insert Permissions" THEN
          ESFormatMgt.AddField(
            FIELDCAPTION("Extend Insert Permissions"),FORMAT("Extend Insert Permissions"));
        IF "Add Related Permissions" THEN
          ESFormatMgt.AddField(
            FIELDCAPTION("Add Related Permissions"),FORMAT("Add Related Permissions"));
        IF "Role for Both Clients" THEN
          ESFormatMgt.AddField(FIELDCAPTION("Role for Both Clients"),FORMAT("Role for Both Clients"));
      END;

      IF UserDateTimeDetails THEN BEGIN
        ESFormatMgt.AddField(FIELDCAPTION("Created By User"),FORMAT("Created By User"));
        IF "Created Date Time" <> 0DT THEN
          ESFormatMgt.AddField(FIELDCAPTION("Created Date Time"),FORMAT("Created Date Time"));
      END;

      IF CalcFlowFields THEN BEGIN
        CALCFIELDS(
          "Role Name","Object Caption","Source/DataItem Table ID","Limited Access Object",
          "Limited License Object","Free Access Object","To Object Caption");

        ESFormatMgt.AddFlowField(FIELDCAPTION("Role Name"),FORMAT("Role Name"));
        ESFormatMgt.AddFlowField(FIELDCAPTION("Object Caption"),FORMAT("Object Caption"));
        IF "To Object Caption" <> '' THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("To Object Caption"),FORMAT("To Object Caption"));
        IF "Source/DataItem Table ID" <> 0 THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Source/DataItem Table ID"),FORMAT("Source/DataItem Table ID"));
        IF "Limited Access Object" THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Limited Access Object"),FORMAT("Limited Access Object"));
        IF "Limited License Object" THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Limited License Object"),FORMAT("Limited License Object"));
        IF "Free Access Object" THEN
          ESFormatMgt.AddFlowField(
            FIELDCAPTION("Free Access Object"),FORMAT("Free Access Object"));
      END;

      RecRef.OPEN(DATABASE::"ES Role Builder Permission");
      RecRef.GETTABLE(Rec);
      ESFormatMgt.FormatNewESTextLine(
        ESTextLine,DATABASE::"ES Role Builder Permission",RecRef.RECORDID);

      EXIT(ESFormatMgt.NoTextOverflow);
    END;

    PROCEDURE Comment@1240520008(FunctionNo@1240520008 : ' ,Insert,Show,Exist,DeleteAll';NewText@1240520010 : Text[250]) : Boolean;
    VAR
      ESComment@1240520009 : Record 14123524;
    BEGIN
      ESComment.RESET;
      ESComment.SETRANGE("Table ID",DATABASE::"ES Role Builder Permission");
      ESComment.SETRANGE("Role ID","Role ID");
      ESComment.SETRANGE(Type,"Object Type");
      ESComment.SETRANGE("Object ID","Object ID");
      EXIT(ESComment.Functions(FunctionNo,NewText));
    END;

    BEGIN
    END.
  }
}

